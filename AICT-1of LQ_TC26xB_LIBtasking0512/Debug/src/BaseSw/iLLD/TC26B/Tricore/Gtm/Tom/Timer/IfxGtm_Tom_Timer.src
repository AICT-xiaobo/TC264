	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99293038"
	.compiler_invocation	"ctc --dep-file=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\.IfxGtm_Tom_Timer.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc26x -D__CPU_TC26X__ --core=tc1.6.x --iso=99 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\User -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Driver -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -g2 --make-target=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.src ..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c"
	.compiler_name		"ctc"
	;source	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c'

	
$TC16X
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_acknowledgeTimerIrq',code,cluster('IfxGtm_Tom_Timer_acknowledgeTimerIrq')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_acknowledgeTimerIrq'
	.align	2
	
	.global	IfxGtm_Tom_Timer_acknowledgeTimerIrq

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	     2   * \file IfxGtm_Tom_Timer.c
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	     3   * \brief GTM TIMER details
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	     4   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	     5   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	     7   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	     9   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    10   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    16  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    19  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    25   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    26  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    32   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    33  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    41  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    42   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    43   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    44  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    45  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    46  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    47  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    48  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    49  #include "IfxGtm_Tom_Timer.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    50  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    51  #include "IfxGtm_bf.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    52  #include "stddef.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    53  #include "string.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    54  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    55  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    56  /*-------------------------Function Implementations---------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    57  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    58  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    59  boolean IfxGtm_Tom_Timer_acknowledgeTimerIrq(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_acknowledgeTimerIrq
.L52:
IfxGtm_Tom_Timer_acknowledgeTimerIrq:	.type	func
	mov.aa	a15,a4
.L342:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    60  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    61      boolean event;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    62  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    63      event = IfxGtm_Tom_Ch_isZeroNotification(driver->tom, driver->timerChannel);
	fcall	.cocofun_2
.L340:
	call	IfxGtm_Tom_Ch_isZeroNotification
.L344:
	mov	d15,d2
.L343:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    64  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    65      if (event)
	jeq	d15,#0,.L2
.L558:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    66      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    67          IfxGtm_Tom_Ch_clearZeroNotification(driver->tom, driver->timerChannel);
	fcall	.cocofun_2
.L559:
	call	IfxGtm_Tom_Ch_clearZeroNotification
.L2:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    68      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    69      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    70      {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    71  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    72      return event;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    73  }
	mov	d2,d15
	ret
.L281:
	
__IfxGtm_Tom_Timer_acknowledgeTimerIrq_function_end:
	.size	IfxGtm_Tom_Timer_acknowledgeTimerIrq,__IfxGtm_Tom_Timer_acknowledgeTimerIrq_function_end-IfxGtm_Tom_Timer_acknowledgeTimerIrq
.L134:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer..cocofun_2',code,cluster('.cocofun_2')
	.sect	'.text.IfxGtm_Tom_Timer..cocofun_2'
	.align	2
; Function .cocofun_2
.L54:
.cocofun_2:	.type	func
; Function body .cocofun_2, coco_iter:0
	ld.a	a4,[a15]16
.L341:
	ld.b	d4,[a15]29
.L741:
	fret
.L229:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_acknowledgeTriggerIrq',code,cluster('IfxGtm_Tom_Timer_acknowledgeTriggerIrq')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_acknowledgeTriggerIrq'
	.align	2
	
	.global	IfxGtm_Tom_Timer_acknowledgeTriggerIrq

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    74  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    75  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    76  boolean IfxGtm_Tom_Timer_acknowledgeTriggerIrq(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_acknowledgeTriggerIrq
.L56:
IfxGtm_Tom_Timer_acknowledgeTriggerIrq:	.type	func
	mov.aa	a15,a4
.L346:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    77  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    78      boolean event;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    79  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    80      event = IfxGtm_Tom_Ch_isOneNotification(driver->tom, driver->triggerChannel);
	ld.a	a4,[a15]16
.L345:
	ld.b	d4,[a15]30
	call	IfxGtm_Tom_Ch_isOneNotification
.L347:
	mov	d15,d2
.L348:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    81  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    82      if (event)
	jeq	d15,#0,.L4
.L564:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    83      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    84          IfxGtm_Tom_Ch_clearOneNotification(driver->tom, driver->triggerChannel);
	ld.a	a4,[a15]16
.L565:
	ld.b	d4,[a15]30
	call	IfxGtm_Tom_Ch_clearOneNotification
.L4:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    85      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    86      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    87      {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    88  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    89      return event;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    90  }
	mov	d2,d15
	ret
.L285:
	
__IfxGtm_Tom_Timer_acknowledgeTriggerIrq_function_end:
	.size	IfxGtm_Tom_Timer_acknowledgeTriggerIrq,__IfxGtm_Tom_Timer_acknowledgeTriggerIrq_function_end-IfxGtm_Tom_Timer_acknowledgeTriggerIrq
.L139:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_addToChannelMask',code,cluster('IfxGtm_Tom_Timer_addToChannelMask')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_addToChannelMask'
	.align	2
	
	.global	IfxGtm_Tom_Timer_addToChannelMask

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    91  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    92  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    93  void IfxGtm_Tom_Timer_addToChannelMask(IfxGtm_Tom_Timer *driver, IfxGtm_Tom_Ch channel)
; Function IfxGtm_Tom_Timer_addToChannelMask
.L58:
IfxGtm_Tom_Timer_addToChannelMask:	.type	func
	mov.aa	a15,a4
.L351:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    94  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    95      if (driver->timerChannel <= IfxGtm_Tom_Ch_7)
	ld.b	d15,[a15]29
.L570:
	mov	d0,#7
.L571:
	jlt	d0,d15,.L6
.L572:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    96      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    97          if (channel <= IfxGtm_Tom_Ch_7)
	jlt	d0,d4,.L7
.L573:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    98          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	    99              driver->channelsMask[0]                 |= 1 << channel;
	mov	d0,#1
	ld.hu	d15,[a15]32
.L574:
	sha	d0,d0,d4
.L575:
	or	d15,d0
	st.h	[a15]32,d15
.L576:
	j	.L8
.L7:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   100              driver->tgcGlobalControlDisableUpdate[0] = IfxGtm_Tom_Tgc_buildFeature(0, driver->channelsMask[0], IFX_GTM_TOM_TGC0_GLB_CTRL_UPEN_CTRL0_OFF);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   101              driver->tgcGlobalControlApplyUpdate[0]   = IfxGtm_Tom_Tgc_buildFeature(driver->channelsMask[0], 0, IFX_GTM_TOM_TGC0_GLB_CTRL_UPEN_CTRL0_OFF);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   102          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   103          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   104          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   105              driver->channelsMask[1]                 |= 1 << (channel - IfxGtm_Tom_Ch_8);
	mov	d0,#1
	ld.hu	d15,[a15]34
.L577:
	add	d4,#-8
.L349:
	sha	d0,d0,d4
.L578:
	or	d15,d0
	st.h	[a15]34,d15
.L579:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   106              driver->tgcGlobalControlDisableUpdate[1] = IfxGtm_Tom_Tgc_buildFeature(0, driver->channelsMask[1], IFX_GTM_TOM_TGC0_GLB_CTRL_UPEN_CTRL0_OFF);
	mov	d4,#0
.L580:
	ld.hu	d5,[a15]34
.L581:
	mov	d6,#16
	call	IfxGtm_Tom_Tgc_buildFeature
.L350:
	st.w	[a15]44,d2
.L582:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   107              driver->tgcGlobalControlApplyUpdate[1]   = IfxGtm_Tom_Tgc_buildFeature(driver->channelsMask[1], 0, IFX_GTM_TOM_TGC0_GLB_CTRL_UPEN_CTRL0_OFF);
	mov	d5,#0
.L583:
	ld.hu	d4,[a15]34
.L584:
	mov	d6,#16
	call	IfxGtm_Tom_Tgc_buildFeature
.L585:
	st.w	[a15]52,d2
.L586:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   108          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   109      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   110      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   111      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   112          driver->channelsMask[0]                 |= 1 << (channel - IfxGtm_Tom_Ch_8);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   113          driver->tgcGlobalControlDisableUpdate[0] = IfxGtm_Tom_Tgc_buildFeature(0, driver->channelsMask[0], IFX_GTM_TOM_TGC0_GLB_CTRL_UPEN_CTRL0_OFF);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   114          driver->tgcGlobalControlApplyUpdate[0]   = IfxGtm_Tom_Tgc_buildFeature(driver->channelsMask[0], 0, IFX_GTM_TOM_TGC0_GLB_CTRL_UPEN_CTRL0_OFF);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   115      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   116  }
	ret
.L6:
	mov	d0,#1
	ld.hu	d15,[a15]32
.L587:
	add	d4,#-8
.L352:
	sha	d0,d0,d4
.L588:
	or	d15,d0
	st.h	[a15]32,d15
.L8:
	mov	d4,#0
	ld.hu	d5,[a15]32
.L589:
	mov	d6,#16
	call	IfxGtm_Tom_Tgc_buildFeature
.L353:
	st.w	[a15]40,d2
.L590:
	mov	d5,#0
.L591:
	ld.hu	d4,[a15]32
.L592:
	mov	d6,#16
	call	IfxGtm_Tom_Tgc_buildFeature
.L593:
	st.w	[a15]48,d2
.L594:
	ret
.L288:
	
__IfxGtm_Tom_Timer_addToChannelMask_function_end:
	.size	IfxGtm_Tom_Timer_addToChannelMask,__IfxGtm_Tom_Timer_addToChannelMask_function_end-IfxGtm_Tom_Timer_addToChannelMask
.L144:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_applyUpdate',code,cluster('IfxGtm_Tom_Timer_applyUpdate')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_applyUpdate'
	.align	2
	
	.global	IfxGtm_Tom_Timer_applyUpdate

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   117  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   118  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   119  void IfxGtm_Tom_Timer_applyUpdate(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_applyUpdate
.L60:
IfxGtm_Tom_Timer_applyUpdate:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   120  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   121      IfxGtm_Tom_Tgc_writeGlobalControl(driver->tgc[0], driver->tgcGlobalControlApplyUpdate[0]);
	ld.a	a15,[a4]20
.L599:
	ld.w	d15,[a4]48
.L600:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     2   * \file IfxGtm_Tom.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    45   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    46   * \defgroup IfxLld_Gtm_Std_Tom Tom Basic Functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    48   * \defgroup IfxLld_Gtm_Std_Tom_Enumerations TOM Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    49   * \ingroup IfxLld_Gtm_Std_Tom
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    50   * \defgroup IfxLld_Gtm_Std_Tom_Channel_Functions TOM Channel Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    51   * \ingroup IfxLld_Gtm_Std_Tom
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    52   * \defgroup IfxLld_Gtm_Std_Tom_TGC_Functions TOM TGC Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    53   * \ingroup IfxLld_Gtm_Std_Tom
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    54   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    55  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    56  #ifndef IFXGTM_TOM_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    57  #define IFXGTM_TOM_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    58  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    59  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    61  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    62  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    67  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    68  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    69  /*-----------------------------------Macros-----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    70  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    71  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    72  /** \brief Number of channels per TOM TGC
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    73   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    74  #define IFXGTM_TOM_NUM_TGC_CHANNELS (8)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    75  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    76  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    77  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    78  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    79  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    80  /** \addtogroup IfxLld_Gtm_Std_Tom_Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    81   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    82  /** \brief Clock source for the TOM channels
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    83   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    84  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    85  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    86      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk0 = 0,  /**< \brief div 1 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    87      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk1 = 1,  /**< \brief div 16 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    88      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk2 = 2,  /**< \brief div 256 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    89      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk3 = 3,  /**< \brief div 4096 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    90      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk4 = 4,  /**< \brief div 32768 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    91      IfxGtm_Tom_Ch_ClkSrc_noClock   = 5   /**< \brief no clock */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    92  } IfxGtm_Tom_Ch_ClkSrc;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    93  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    94  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    95   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    96  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    97  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    98      IfxGtm_Tom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    99      IfxGtm_Tom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   100  } IfxGtm_Tom_Ch_OutputTrigger;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   101  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   102  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   103   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   104  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   105  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   106      IfxGtm_Tom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   107      IfxGtm_Tom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   108  } IfxGtm_Tom_Ch_ResetEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   110  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   111  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   112  /** \addtogroup IfxLld_Gtm_Std_Tom_Channel_Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   113   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   114  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   115  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   116  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   117  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   118  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   119  /** \brief Returns the base addredd of selected Tom channel
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   120   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   121   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   122   * \return Pointer to channel base address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   123   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   124  IFX_INLINE Ifx_GTM_TOM_CH *IfxGtm_Tom_Ch_getChannelPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   125  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   126  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   127  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   128  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   130  /** \brief Clears the channel One notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   131   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   132   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   133   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   134   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   135  IFX_EXTERN void IfxGtm_Tom_Ch_clearOneNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   136  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   137  /** \brief Clears the channel Zero notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   138   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   139   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   140   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   141   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   142  IFX_EXTERN void IfxGtm_Tom_Ch_clearZeroNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   143  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   144  /** \brief Returns the TOM channel input clock frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   145   * \param gtm Pointer to GTM module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   146   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   147   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   148   * \return TOM channel input clock frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   149   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   150  IFX_EXTERN float32 IfxGtm_Tom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   151  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   152  /** \brief Returns the channel clock source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   153   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   154   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   155   * \return The clock source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   156   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   157  IFX_EXTERN IfxGtm_Tom_Ch_ClkSrc IfxGtm_Tom_Ch_getClockSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   158  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   159  /** \brief Returns the compare one value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   160   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   161   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   162   * \return compare one value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   163   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   164  IFX_EXTERN uint32 IfxGtm_Tom_Ch_getCompareOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   165  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   166  /** \brief Returns the compare one pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   167   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   168   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   169   * \return compare one pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   170   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   171  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getCompareOnePointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   172  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   173  /** \brief Returns the compare zero value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   174   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   175   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   176   * \return compare zero value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   178  IFX_EXTERN uint32 IfxGtm_Tom_Ch_getCompareZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   180  /** \brief Returns the compare zero pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   181   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   182   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   183   * \return compare zero pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   184   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   185  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getCompareZeroPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   186  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   187  /** \brief Gets the TOM output level
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   188   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   189   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   190   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   191   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   192  IFX_EXTERN boolean IfxGtm_Tom_Ch_getOutputLevel(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   193  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   194  /** \brief Returns a pointer to the TOM channel SRC
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   195   * \param gtm Pointer to GTM module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   196   * \param tom Specifies the tom object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   197   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   198   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   199   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   200  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Tom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Tom tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   201  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   202  /** \brief Returns the TGC pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   203   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   204   * \param tgcIndex TGC index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   205   * \return TOM TGC object pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   206   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   207  IFX_EXTERN Ifx_GTM_TOM_TGC *IfxGtm_Tom_Ch_getTgcPointer(Ifx_GTM_TOM *tom, uint32 tgcIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   208  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   209  /** \brief Returns the Timer pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   210   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   211   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   212   * \return Timer pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   213   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   214  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getTimerPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   215  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   216  /** \brief Returns the status of channel One notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   217   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   218   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   219   * \return Status of channel One notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   220   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   221  IFX_EXTERN boolean IfxGtm_Tom_Ch_isOneNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   222  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   223  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   224   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   225   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   226   * \return Status of channel Zero notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   227   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   228  IFX_EXTERN boolean IfxGtm_Tom_Ch_isZeroNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   229  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   230  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   231   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   232   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   233   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   234   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   235  IFX_EXTERN void IfxGtm_Tom_Ch_raiseInterruptOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   236  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   237  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   238   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   239   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   240   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   241   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   242  IFX_EXTERN void IfxGtm_Tom_Ch_raiseInterruptZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   243  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   244  /** \brief Sets the channel clock source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   245   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   246   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   247   * \param clock Channel clock source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   248   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   249   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   250  IFX_EXTERN void IfxGtm_Tom_Ch_setClockSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_ClkSrc clock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   251  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   252  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   253   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   254   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   255   * \param compareZero Compare zero value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   256   * \param compareOne Compare one value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   257   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   258   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   259  IFX_EXTERN void IfxGtm_Tom_Ch_setCompare(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   261  /** \brief Sets the compare 1 value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   262   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   263   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   264   * \param compareOne Compare one value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   265   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   266   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   267  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   268  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   269  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   270   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   271   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   272   * \param shadowOne Compare one shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   273   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   274   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   275  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareOneShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   276  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   277  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   278   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   279   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   280   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   281   * \param shadowOne Compare one shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   282   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   283   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   284  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   286  /** \brief Sets the compare 0 value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   287   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   288   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   289   * \param compareZero Compare zero value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   290   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   292  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareZero);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   293  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   294  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   295   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   296   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   297   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   298   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   299   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   300  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareZeroShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   301  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   302  /** \brief Sets the counter value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   303   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   304   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   305   * \param value Counter value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   306   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   307   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   308  IFX_EXTERN void IfxGtm_Tom_Ch_setCounterValue(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 value);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   309  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   310  /** \brief Enable/disable the gated counter mode (channel 0 to 7 only)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   311   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   312   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   313   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   314   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   315   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   316  IFX_EXTERN void IfxGtm_Tom_Ch_setGatedCounter(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   317  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   318  /** \brief Sets the channel notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   319   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   320   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   321   * \param mode Interrupt mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   322   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   323   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   324   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   325   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   326  IFX_EXTERN void IfxGtm_Tom_Ch_setNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   327  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   328  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   329   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   330   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   331   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   332   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   333   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   334  IFX_EXTERN void IfxGtm_Tom_Ch_setOneShotMode(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   335  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   336  /** \brief Enable/disable the PCM mode (channel 15 only)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   337   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   338   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   339   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   340   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   341   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   342  IFX_EXTERN void IfxGtm_Tom_Ch_setPcm(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   343  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   344  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   345   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   346   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   347   * \param event Channel reset event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   348   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   349   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   350  IFX_EXTERN void IfxGtm_Tom_Ch_setResetSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_ResetEvent event);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   352  /** \brief Sets the signal level
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   353   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   354   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   355   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   356   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   357   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   358  IFX_EXTERN void IfxGtm_Tom_Ch_setSignalLevel(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   360  /** \brief Enable/disable the SPE mode (channel 0 to 7 only)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   361   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   362   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   363   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   364   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   365   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   366  IFX_EXTERN void IfxGtm_Tom_Ch_setSpe(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   367  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   368  /** \brief Sets the channel trigger output
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   369   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   370   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   371   * \param trigger Channel trigger output mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   372   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   373   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   374  IFX_EXTERN void IfxGtm_Tom_Ch_setTriggerOutput(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_OutputTrigger trigger);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   375  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   376  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   378  /** \addtogroup IfxLld_Gtm_Std_Tom_TGC_Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   379   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   380  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   381  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   382  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   383  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   384  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   385  /** \brief Sets the tgc global control value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   386   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   387   * \param control global control value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   388   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   389   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   390  IFX_INLINE void IfxGtm_Tom_Tgc_writeGlobalControl(Ifx_GTM_TOM_TGC *tgc, uint32 control);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   391  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   392  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   393  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   394  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   396  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   397   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   398   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   399   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   400   * \return The register value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   401   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   402  IFX_EXTERN uint32 IfxGtm_Tom_Tgc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   403  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   404  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   405   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   406   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   407   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   408   * \return The register value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   409   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   410  IFX_EXTERN uint32 IfxGtm_Tom_Tgc_buildFeatureForChannel(IfxGtm_Tom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   411  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   412  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   413   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   414   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   415   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   416   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   417   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   418   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   419  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannel(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   420  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   421  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   422   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   423   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   424   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   425   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   426   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   427   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   428  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelOutput(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   429  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   430  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   431   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   432   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   433   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   434   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   435   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   436  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelUpdate(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   437  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   438  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   439   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   440   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   441   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   442   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   443   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   444   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   445  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannels(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   446  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   447  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   448   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   449   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   450   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   451   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   452   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   453   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   454  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsOutput(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   455  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   456  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   457   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   458   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   459   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   460   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   461   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   462  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsTrigger(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   463  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   464  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   465   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   466   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   467   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   468   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   469   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   470  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsUpdate(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   471  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   472  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   473   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   474   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   475   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   476   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   477  IFX_EXTERN void IfxGtm_Tom_Tgc_enableTimeTrigger(Ifx_GTM_TOM_TGC *tgc, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   478  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   479  /** \brief Reset one or more channels
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   480   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   481   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   482   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   483   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   484  IFX_EXTERN void IfxGtm_Tom_Tgc_resetChannels(Ifx_GTM_TOM_TGC *tgc, uint32 resetMask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   485  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   486  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   487   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   488   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   489   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   490   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   491   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   492   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   493  IFX_EXTERN void IfxGtm_Tom_Tgc_setChannelForceUpdate(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   494  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   495  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   496   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   497   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   498   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   499   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   500   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   501   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   502   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   503  IFX_EXTERN void IfxGtm_Tom_Tgc_setChannelsForceUpdate(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   504  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   505  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   506   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   507   * \param base Time base used for comparison
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   508   * \param value Compare value that raise the trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   509   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   510   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   511  IFX_EXTERN void IfxGtm_Tom_Tgc_setTimeTrigger(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   512  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   513  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   514   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   515   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   516   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   517  IFX_EXTERN void IfxGtm_Tom_Tgc_trigger(Ifx_GTM_TOM_TGC *tgc);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   518  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   519  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   520  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   521  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   522  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   523  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   524  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   525  IFX_INLINE Ifx_GTM_TOM_CH *IfxGtm_Tom_Ch_getChannelPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   526  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   527      return (Ifx_GTM_TOM_CH *)((uint32)&tom->CH0.CTRL.U + 0x40 * channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   528  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   529  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   530  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   531  IFX_INLINE void IfxGtm_Tom_Tgc_writeGlobalControl(Ifx_GTM_TOM_TGC *tgc, uint32 control)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   532  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   533      tgc->GLB_CTRL.U = control;
	st.w	[a15],d15
.L294:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   122  ->tgc[1])
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   123      {
	ld.a	a15,[a4]24
.L601:
	jz.a	a15,.L10
.L300:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   124          IfxGtm_Tom_Tgc_writeGlobalControl(driver->tgc[1], driver->tgcGlobalControlApplyUpdate[1]);  /* Note: Write of 0 value has no effect */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   125      }
	ld.w	d15,[a4]52
.L602:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     2   * \file IfxGtm_Tom.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    45   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    46   * \defgroup IfxLld_Gtm_Std_Tom Tom Basic Functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    48   * \defgroup IfxLld_Gtm_Std_Tom_Enumerations TOM Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    49   * \ingroup IfxLld_Gtm_Std_Tom
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    50   * \defgroup IfxLld_Gtm_Std_Tom_Channel_Functions TOM Channel Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    51   * \ingroup IfxLld_Gtm_Std_Tom
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    52   * \defgroup IfxLld_Gtm_Std_Tom_TGC_Functions TOM TGC Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    53   * \ingroup IfxLld_Gtm_Std_Tom
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    54   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    55  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    56  #ifndef IFXGTM_TOM_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    57  #define IFXGTM_TOM_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    58  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    59  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    61  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    62  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    67  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    68  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    69  /*-----------------------------------Macros-----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    70  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    71  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    72  /** \brief Number of channels per TOM TGC
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    73   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    74  #define IFXGTM_TOM_NUM_TGC_CHANNELS (8)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    75  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    76  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    77  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    78  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    79  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    80  /** \addtogroup IfxLld_Gtm_Std_Tom_Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    81   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    82  /** \brief Clock source for the TOM channels
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    83   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    84  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    85  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    86      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk0 = 0,  /**< \brief div 1 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    87      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk1 = 1,  /**< \brief div 16 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    88      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk2 = 2,  /**< \brief div 256 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    89      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk3 = 3,  /**< \brief div 4096 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    90      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk4 = 4,  /**< \brief div 32768 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    91      IfxGtm_Tom_Ch_ClkSrc_noClock   = 5   /**< \brief no clock */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    92  } IfxGtm_Tom_Ch_ClkSrc;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    93  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    94  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    95   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    96  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    97  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    98      IfxGtm_Tom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    99      IfxGtm_Tom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   100  } IfxGtm_Tom_Ch_OutputTrigger;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   101  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   102  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   103   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   104  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   105  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   106      IfxGtm_Tom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   107      IfxGtm_Tom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   108  } IfxGtm_Tom_Ch_ResetEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   110  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   111  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   112  /** \addtogroup IfxLld_Gtm_Std_Tom_Channel_Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   113   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   114  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   115  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   116  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   117  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   118  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   119  /** \brief Returns the base addredd of selected Tom channel
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   120   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   121   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   122   * \return Pointer to channel base address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   123   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   124  IFX_INLINE Ifx_GTM_TOM_CH *IfxGtm_Tom_Ch_getChannelPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   125  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   126  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   127  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   128  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   130  /** \brief Clears the channel One notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   131   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   132   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   133   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   134   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   135  IFX_EXTERN void IfxGtm_Tom_Ch_clearOneNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   136  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   137  /** \brief Clears the channel Zero notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   138   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   139   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   140   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   141   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   142  IFX_EXTERN void IfxGtm_Tom_Ch_clearZeroNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   143  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   144  /** \brief Returns the TOM channel input clock frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   145   * \param gtm Pointer to GTM module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   146   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   147   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   148   * \return TOM channel input clock frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   149   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   150  IFX_EXTERN float32 IfxGtm_Tom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   151  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   152  /** \brief Returns the channel clock source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   153   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   154   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   155   * \return The clock source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   156   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   157  IFX_EXTERN IfxGtm_Tom_Ch_ClkSrc IfxGtm_Tom_Ch_getClockSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   158  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   159  /** \brief Returns the compare one value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   160   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   161   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   162   * \return compare one value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   163   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   164  IFX_EXTERN uint32 IfxGtm_Tom_Ch_getCompareOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   165  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   166  /** \brief Returns the compare one pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   167   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   168   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   169   * \return compare one pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   170   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   171  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getCompareOnePointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   172  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   173  /** \brief Returns the compare zero value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   174   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   175   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   176   * \return compare zero value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   178  IFX_EXTERN uint32 IfxGtm_Tom_Ch_getCompareZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   180  /** \brief Returns the compare zero pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   181   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   182   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   183   * \return compare zero pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   184   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   185  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getCompareZeroPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   186  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   187  /** \brief Gets the TOM output level
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   188   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   189   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   190   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   191   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   192  IFX_EXTERN boolean IfxGtm_Tom_Ch_getOutputLevel(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   193  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   194  /** \brief Returns a pointer to the TOM channel SRC
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   195   * \param gtm Pointer to GTM module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   196   * \param tom Specifies the tom object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   197   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   198   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   199   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   200  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Tom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Tom tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   201  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   202  /** \brief Returns the TGC pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   203   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   204   * \param tgcIndex TGC index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   205   * \return TOM TGC object pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   206   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   207  IFX_EXTERN Ifx_GTM_TOM_TGC *IfxGtm_Tom_Ch_getTgcPointer(Ifx_GTM_TOM *tom, uint32 tgcIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   208  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   209  /** \brief Returns the Timer pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   210   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   211   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   212   * \return Timer pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   213   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   214  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getTimerPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   215  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   216  /** \brief Returns the status of channel One notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   217   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   218   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   219   * \return Status of channel One notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   220   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   221  IFX_EXTERN boolean IfxGtm_Tom_Ch_isOneNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   222  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   223  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   224   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   225   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   226   * \return Status of channel Zero notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   227   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   228  IFX_EXTERN boolean IfxGtm_Tom_Ch_isZeroNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   229  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   230  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   231   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   232   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   233   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   234   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   235  IFX_EXTERN void IfxGtm_Tom_Ch_raiseInterruptOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   236  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   237  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   238   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   239   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   240   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   241   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   242  IFX_EXTERN void IfxGtm_Tom_Ch_raiseInterruptZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   243  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   244  /** \brief Sets the channel clock source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   245   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   246   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   247   * \param clock Channel clock source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   248   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   249   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   250  IFX_EXTERN void IfxGtm_Tom_Ch_setClockSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_ClkSrc clock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   251  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   252  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   253   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   254   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   255   * \param compareZero Compare zero value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   256   * \param compareOne Compare one value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   257   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   258   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   259  IFX_EXTERN void IfxGtm_Tom_Ch_setCompare(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   261  /** \brief Sets the compare 1 value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   262   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   263   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   264   * \param compareOne Compare one value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   265   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   266   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   267  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   268  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   269  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   270   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   271   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   272   * \param shadowOne Compare one shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   273   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   274   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   275  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareOneShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   276  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   277  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   278   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   279   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   280   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   281   * \param shadowOne Compare one shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   282   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   283   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   284  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   286  /** \brief Sets the compare 0 value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   287   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   288   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   289   * \param compareZero Compare zero value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   290   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   292  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareZero);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   293  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   294  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   295   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   296   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   297   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   298   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   299   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   300  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareZeroShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   301  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   302  /** \brief Sets the counter value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   303   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   304   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   305   * \param value Counter value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   306   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   307   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   308  IFX_EXTERN void IfxGtm_Tom_Ch_setCounterValue(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 value);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   309  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   310  /** \brief Enable/disable the gated counter mode (channel 0 to 7 only)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   311   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   312   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   313   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   314   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   315   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   316  IFX_EXTERN void IfxGtm_Tom_Ch_setGatedCounter(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   317  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   318  /** \brief Sets the channel notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   319   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   320   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   321   * \param mode Interrupt mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   322   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   323   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   324   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   325   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   326  IFX_EXTERN void IfxGtm_Tom_Ch_setNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   327  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   328  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   329   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   330   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   331   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   332   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   333   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   334  IFX_EXTERN void IfxGtm_Tom_Ch_setOneShotMode(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   335  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   336  /** \brief Enable/disable the PCM mode (channel 15 only)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   337   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   338   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   339   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   340   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   341   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   342  IFX_EXTERN void IfxGtm_Tom_Ch_setPcm(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   343  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   344  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   345   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   346   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   347   * \param event Channel reset event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   348   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   349   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   350  IFX_EXTERN void IfxGtm_Tom_Ch_setResetSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_ResetEvent event);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   352  /** \brief Sets the signal level
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   353   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   354   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   355   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   356   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   357   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   358  IFX_EXTERN void IfxGtm_Tom_Ch_setSignalLevel(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   360  /** \brief Enable/disable the SPE mode (channel 0 to 7 only)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   361   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   362   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   363   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   364   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   365   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   366  IFX_EXTERN void IfxGtm_Tom_Ch_setSpe(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   367  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   368  /** \brief Sets the channel trigger output
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   369   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   370   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   371   * \param trigger Channel trigger output mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   372   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   373   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   374  IFX_EXTERN void IfxGtm_Tom_Ch_setTriggerOutput(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_OutputTrigger trigger);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   375  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   376  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   378  /** \addtogroup IfxLld_Gtm_Std_Tom_TGC_Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   379   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   380  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   381  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   382  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   383  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   384  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   385  /** \brief Sets the tgc global control value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   386   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   387   * \param control global control value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   388   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   389   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   390  IFX_INLINE void IfxGtm_Tom_Tgc_writeGlobalControl(Ifx_GTM_TOM_TGC *tgc, uint32 control);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   391  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   392  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   393  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   394  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   396  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   397   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   398   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   399   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   400   * \return The register value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   401   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   402  IFX_EXTERN uint32 IfxGtm_Tom_Tgc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   403  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   404  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   405   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   406   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   407   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   408   * \return The register value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   409   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   410  IFX_EXTERN uint32 IfxGtm_Tom_Tgc_buildFeatureForChannel(IfxGtm_Tom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   411  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   412  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   413   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   414   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   415   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   416   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   417   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   418   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   419  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannel(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   420  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   421  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   422   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   423   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   424   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   425   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   426   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   427   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   428  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelOutput(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   429  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   430  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   431   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   432   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   433   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   434   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   435   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   436  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelUpdate(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   437  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   438  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   439   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   440   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   441   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   442   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   443   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   444   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   445  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannels(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   446  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   447  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   448   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   449   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   450   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   451   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   452   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   453   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   454  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsOutput(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   455  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   456  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   457   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   458   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   459   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   460   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   461   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   462  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsTrigger(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   463  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   464  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   465   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   466   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   467   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   468   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   469   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   470  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsUpdate(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   471  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   472  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   473   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   474   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   475   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   476   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   477  IFX_EXTERN void IfxGtm_Tom_Tgc_enableTimeTrigger(Ifx_GTM_TOM_TGC *tgc, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   478  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   479  /** \brief Reset one or more channels
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   480   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   481   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   482   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   483   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   484  IFX_EXTERN void IfxGtm_Tom_Tgc_resetChannels(Ifx_GTM_TOM_TGC *tgc, uint32 resetMask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   485  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   486  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   487   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   488   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   489   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   490   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   491   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   492   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   493  IFX_EXTERN void IfxGtm_Tom_Tgc_setChannelForceUpdate(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   494  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   495  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   496   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   497   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   498   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   499   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   500   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   501   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   502   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   503  IFX_EXTERN void IfxGtm_Tom_Tgc_setChannelsForceUpdate(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   504  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   505  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   506   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   507   * \param base Time base used for comparison
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   508   * \param value Compare value that raise the trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   509   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   510   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   511  IFX_EXTERN void IfxGtm_Tom_Tgc_setTimeTrigger(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   512  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   513  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   514   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   515   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   516   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   517  IFX_EXTERN void IfxGtm_Tom_Tgc_trigger(Ifx_GTM_TOM_TGC *tgc);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   518  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   519  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   520  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   521  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   522  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   523  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   524  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   525  IFX_INLINE Ifx_GTM_TOM_CH *IfxGtm_Tom_Ch_getChannelPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   526  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   527      return (Ifx_GTM_TOM_CH *)((uint32)&tom->CH0.CTRL.U + 0x40 * channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   528  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   529  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   530  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   531  IFX_INLINE void IfxGtm_Tom_Tgc_writeGlobalControl(Ifx_GTM_TOM_TGC *tgc, uint32 control)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   532  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   533      tgc->GLB_CTRL.U = control;
	st.w	[a15],d15
.L10:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   126  void IfxGtm_Tom_Timer_disableUpdate(IfxGtm_Tom_Timer *driver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   127  {
	ret
.L291:
	
__IfxGtm_Tom_Timer_applyUpdate_function_end:
	.size	IfxGtm_Tom_Timer_applyUpdate,__IfxGtm_Tom_Timer_applyUpdate_function_end-IfxGtm_Tom_Timer_applyUpdate
.L149:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_disableUpdate',code,cluster('IfxGtm_Tom_Timer_disableUpdate')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_disableUpdate'
	.align	2
	
	.global	IfxGtm_Tom_Timer_disableUpdate

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   128      IfxGtm_Tom_Tgc_writeGlobalControl(driver->tgc[0], driver->tgcGlobalControlDisableUpdate[0]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   129  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   130      if (driver->tgc[1])
; Function IfxGtm_Tom_Timer_disableUpdate
.L62:
IfxGtm_Tom_Timer_disableUpdate:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   131      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   132          IfxGtm_Tom_Tgc_writeGlobalControl(driver->tgc[1], driver->tgcGlobalControlDisableUpdate[1]); /* Note: Write of 0 value has no effect */
	ld.a	a15,[a4]20
.L607:
	ld.w	d15,[a4]40
.L608:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     2   * \file IfxGtm_Tom.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    45   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    46   * \defgroup IfxLld_Gtm_Std_Tom Tom Basic Functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    48   * \defgroup IfxLld_Gtm_Std_Tom_Enumerations TOM Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    49   * \ingroup IfxLld_Gtm_Std_Tom
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    50   * \defgroup IfxLld_Gtm_Std_Tom_Channel_Functions TOM Channel Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    51   * \ingroup IfxLld_Gtm_Std_Tom
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    52   * \defgroup IfxLld_Gtm_Std_Tom_TGC_Functions TOM TGC Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    53   * \ingroup IfxLld_Gtm_Std_Tom
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    54   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    55  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    56  #ifndef IFXGTM_TOM_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    57  #define IFXGTM_TOM_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    58  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    59  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    61  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    62  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    67  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    68  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    69  /*-----------------------------------Macros-----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    70  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    71  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    72  /** \brief Number of channels per TOM TGC
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    73   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    74  #define IFXGTM_TOM_NUM_TGC_CHANNELS (8)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    75  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    76  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    77  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    78  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    79  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    80  /** \addtogroup IfxLld_Gtm_Std_Tom_Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    81   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    82  /** \brief Clock source for the TOM channels
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    83   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    84  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    85  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    86      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk0 = 0,  /**< \brief div 1 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    87      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk1 = 1,  /**< \brief div 16 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    88      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk2 = 2,  /**< \brief div 256 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    89      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk3 = 3,  /**< \brief div 4096 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    90      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk4 = 4,  /**< \brief div 32768 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    91      IfxGtm_Tom_Ch_ClkSrc_noClock   = 5   /**< \brief no clock */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    92  } IfxGtm_Tom_Ch_ClkSrc;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    93  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    94  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    95   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    96  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    97  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    98      IfxGtm_Tom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    99      IfxGtm_Tom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   100  } IfxGtm_Tom_Ch_OutputTrigger;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   101  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   102  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   103   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   104  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   105  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   106      IfxGtm_Tom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   107      IfxGtm_Tom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   108  } IfxGtm_Tom_Ch_ResetEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   110  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   111  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   112  /** \addtogroup IfxLld_Gtm_Std_Tom_Channel_Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   113   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   114  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   115  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   116  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   117  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   118  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   119  /** \brief Returns the base addredd of selected Tom channel
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   120   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   121   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   122   * \return Pointer to channel base address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   123   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   124  IFX_INLINE Ifx_GTM_TOM_CH *IfxGtm_Tom_Ch_getChannelPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   125  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   126  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   127  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   128  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   130  /** \brief Clears the channel One notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   131   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   132   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   133   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   134   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   135  IFX_EXTERN void IfxGtm_Tom_Ch_clearOneNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   136  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   137  /** \brief Clears the channel Zero notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   138   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   139   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   140   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   141   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   142  IFX_EXTERN void IfxGtm_Tom_Ch_clearZeroNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   143  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   144  /** \brief Returns the TOM channel input clock frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   145   * \param gtm Pointer to GTM module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   146   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   147   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   148   * \return TOM channel input clock frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   149   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   150  IFX_EXTERN float32 IfxGtm_Tom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   151  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   152  /** \brief Returns the channel clock source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   153   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   154   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   155   * \return The clock source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   156   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   157  IFX_EXTERN IfxGtm_Tom_Ch_ClkSrc IfxGtm_Tom_Ch_getClockSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   158  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   159  /** \brief Returns the compare one value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   160   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   161   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   162   * \return compare one value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   163   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   164  IFX_EXTERN uint32 IfxGtm_Tom_Ch_getCompareOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   165  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   166  /** \brief Returns the compare one pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   167   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   168   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   169   * \return compare one pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   170   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   171  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getCompareOnePointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   172  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   173  /** \brief Returns the compare zero value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   174   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   175   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   176   * \return compare zero value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   178  IFX_EXTERN uint32 IfxGtm_Tom_Ch_getCompareZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   180  /** \brief Returns the compare zero pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   181   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   182   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   183   * \return compare zero pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   184   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   185  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getCompareZeroPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   186  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   187  /** \brief Gets the TOM output level
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   188   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   189   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   190   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   191   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   192  IFX_EXTERN boolean IfxGtm_Tom_Ch_getOutputLevel(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   193  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   194  /** \brief Returns a pointer to the TOM channel SRC
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   195   * \param gtm Pointer to GTM module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   196   * \param tom Specifies the tom object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   197   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   198   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   199   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   200  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Tom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Tom tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   201  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   202  /** \brief Returns the TGC pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   203   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   204   * \param tgcIndex TGC index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   205   * \return TOM TGC object pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   206   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   207  IFX_EXTERN Ifx_GTM_TOM_TGC *IfxGtm_Tom_Ch_getTgcPointer(Ifx_GTM_TOM *tom, uint32 tgcIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   208  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   209  /** \brief Returns the Timer pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   210   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   211   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   212   * \return Timer pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   213   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   214  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getTimerPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   215  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   216  /** \brief Returns the status of channel One notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   217   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   218   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   219   * \return Status of channel One notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   220   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   221  IFX_EXTERN boolean IfxGtm_Tom_Ch_isOneNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   222  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   223  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   224   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   225   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   226   * \return Status of channel Zero notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   227   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   228  IFX_EXTERN boolean IfxGtm_Tom_Ch_isZeroNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   229  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   230  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   231   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   232   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   233   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   234   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   235  IFX_EXTERN void IfxGtm_Tom_Ch_raiseInterruptOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   236  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   237  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   238   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   239   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   240   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   241   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   242  IFX_EXTERN void IfxGtm_Tom_Ch_raiseInterruptZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   243  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   244  /** \brief Sets the channel clock source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   245   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   246   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   247   * \param clock Channel clock source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   248   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   249   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   250  IFX_EXTERN void IfxGtm_Tom_Ch_setClockSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_ClkSrc clock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   251  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   252  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   253   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   254   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   255   * \param compareZero Compare zero value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   256   * \param compareOne Compare one value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   257   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   258   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   259  IFX_EXTERN void IfxGtm_Tom_Ch_setCompare(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   261  /** \brief Sets the compare 1 value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   262   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   263   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   264   * \param compareOne Compare one value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   265   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   266   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   267  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   268  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   269  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   270   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   271   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   272   * \param shadowOne Compare one shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   273   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   274   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   275  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareOneShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   276  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   277  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   278   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   279   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   280   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   281   * \param shadowOne Compare one shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   282   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   283   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   284  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   286  /** \brief Sets the compare 0 value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   287   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   288   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   289   * \param compareZero Compare zero value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   290   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   292  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareZero);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   293  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   294  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   295   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   296   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   297   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   298   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   299   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   300  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareZeroShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   301  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   302  /** \brief Sets the counter value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   303   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   304   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   305   * \param value Counter value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   306   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   307   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   308  IFX_EXTERN void IfxGtm_Tom_Ch_setCounterValue(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 value);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   309  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   310  /** \brief Enable/disable the gated counter mode (channel 0 to 7 only)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   311   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   312   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   313   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   314   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   315   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   316  IFX_EXTERN void IfxGtm_Tom_Ch_setGatedCounter(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   317  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   318  /** \brief Sets the channel notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   319   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   320   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   321   * \param mode Interrupt mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   322   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   323   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   324   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   325   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   326  IFX_EXTERN void IfxGtm_Tom_Ch_setNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   327  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   328  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   329   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   330   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   331   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   332   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   333   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   334  IFX_EXTERN void IfxGtm_Tom_Ch_setOneShotMode(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   335  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   336  /** \brief Enable/disable the PCM mode (channel 15 only)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   337   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   338   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   339   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   340   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   341   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   342  IFX_EXTERN void IfxGtm_Tom_Ch_setPcm(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   343  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   344  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   345   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   346   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   347   * \param event Channel reset event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   348   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   349   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   350  IFX_EXTERN void IfxGtm_Tom_Ch_setResetSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_ResetEvent event);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   352  /** \brief Sets the signal level
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   353   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   354   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   355   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   356   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   357   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   358  IFX_EXTERN void IfxGtm_Tom_Ch_setSignalLevel(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   360  /** \brief Enable/disable the SPE mode (channel 0 to 7 only)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   361   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   362   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   363   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   364   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   365   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   366  IFX_EXTERN void IfxGtm_Tom_Ch_setSpe(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   367  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   368  /** \brief Sets the channel trigger output
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   369   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   370   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   371   * \param trigger Channel trigger output mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   372   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   373   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   374  IFX_EXTERN void IfxGtm_Tom_Ch_setTriggerOutput(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_OutputTrigger trigger);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   375  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   376  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   378  /** \addtogroup IfxLld_Gtm_Std_Tom_TGC_Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   379   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   380  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   381  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   382  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   383  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   384  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   385  /** \brief Sets the tgc global control value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   386   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   387   * \param control global control value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   388   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   389   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   390  IFX_INLINE void IfxGtm_Tom_Tgc_writeGlobalControl(Ifx_GTM_TOM_TGC *tgc, uint32 control);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   391  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   392  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   393  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   394  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   396  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   397   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   398   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   399   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   400   * \return The register value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   401   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   402  IFX_EXTERN uint32 IfxGtm_Tom_Tgc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   403  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   404  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   405   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   406   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   407   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   408   * \return The register value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   409   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   410  IFX_EXTERN uint32 IfxGtm_Tom_Tgc_buildFeatureForChannel(IfxGtm_Tom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   411  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   412  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   413   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   414   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   415   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   416   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   417   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   418   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   419  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannel(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   420  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   421  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   422   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   423   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   424   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   425   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   426   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   427   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   428  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelOutput(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   429  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   430  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   431   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   432   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   433   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   434   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   435   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   436  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelUpdate(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   437  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   438  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   439   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   440   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   441   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   442   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   443   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   444   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   445  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannels(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   446  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   447  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   448   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   449   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   450   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   451   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   452   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   453   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   454  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsOutput(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   455  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   456  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   457   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   458   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   459   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   460   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   461   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   462  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsTrigger(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   463  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   464  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   465   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   466   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   467   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   468   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   469   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   470  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsUpdate(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   471  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   472  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   473   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   474   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   475   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   476   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   477  IFX_EXTERN void IfxGtm_Tom_Tgc_enableTimeTrigger(Ifx_GTM_TOM_TGC *tgc, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   478  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   479  /** \brief Reset one or more channels
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   480   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   481   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   482   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   483   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   484  IFX_EXTERN void IfxGtm_Tom_Tgc_resetChannels(Ifx_GTM_TOM_TGC *tgc, uint32 resetMask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   485  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   486  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   487   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   488   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   489   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   490   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   491   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   492   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   493  IFX_EXTERN void IfxGtm_Tom_Tgc_setChannelForceUpdate(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   494  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   495  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   496   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   497   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   498   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   499   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   500   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   501   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   502   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   503  IFX_EXTERN void IfxGtm_Tom_Tgc_setChannelsForceUpdate(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   504  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   505  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   506   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   507   * \param base Time base used for comparison
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   508   * \param value Compare value that raise the trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   509   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   510   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   511  IFX_EXTERN void IfxGtm_Tom_Tgc_setTimeTrigger(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   512  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   513  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   514   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   515   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   516   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   517  IFX_EXTERN void IfxGtm_Tom_Tgc_trigger(Ifx_GTM_TOM_TGC *tgc);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   518  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   519  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   520  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   521  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   522  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   523  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   524  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   525  IFX_INLINE Ifx_GTM_TOM_CH *IfxGtm_Tom_Ch_getChannelPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   526  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   527      return (Ifx_GTM_TOM_CH *)((uint32)&tom->CH0.CTRL.U + 0x40 * channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   528  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   529  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   530  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   531  IFX_INLINE void IfxGtm_Tom_Tgc_writeGlobalControl(Ifx_GTM_TOM_TGC *tgc, uint32 control)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   532  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   533      tgc->GLB_CTRL.U = control;
	st.w	[a15],d15
.L303:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   133  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   134  
	ld.a	a15,[a4]24
.L609:
	jz.a	a15,.L11
.L306:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   135  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   136  float32 IfxGtm_Tom_Timer_getFrequency(IfxGtm_Tom_Timer *driver)
	ld.w	d15,[a4]44
.L610:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     2   * \file IfxGtm_Tom.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    45   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    46   * \defgroup IfxLld_Gtm_Std_Tom Tom Basic Functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    48   * \defgroup IfxLld_Gtm_Std_Tom_Enumerations TOM Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    49   * \ingroup IfxLld_Gtm_Std_Tom
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    50   * \defgroup IfxLld_Gtm_Std_Tom_Channel_Functions TOM Channel Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    51   * \ingroup IfxLld_Gtm_Std_Tom
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    52   * \defgroup IfxLld_Gtm_Std_Tom_TGC_Functions TOM TGC Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    53   * \ingroup IfxLld_Gtm_Std_Tom
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    54   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    55  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    56  #ifndef IFXGTM_TOM_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    57  #define IFXGTM_TOM_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    58  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    59  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    61  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    62  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    67  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    68  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    69  /*-----------------------------------Macros-----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    70  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    71  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    72  /** \brief Number of channels per TOM TGC
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    73   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    74  #define IFXGTM_TOM_NUM_TGC_CHANNELS (8)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    75  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    76  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    77  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    78  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    79  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    80  /** \addtogroup IfxLld_Gtm_Std_Tom_Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    81   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    82  /** \brief Clock source for the TOM channels
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    83   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    84  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    85  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    86      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk0 = 0,  /**< \brief div 1 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    87      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk1 = 1,  /**< \brief div 16 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    88      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk2 = 2,  /**< \brief div 256 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    89      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk3 = 3,  /**< \brief div 4096 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    90      IfxGtm_Tom_Ch_ClkSrc_cmuFxclk4 = 4,  /**< \brief div 32768 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    91      IfxGtm_Tom_Ch_ClkSrc_noClock   = 5   /**< \brief no clock */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    92  } IfxGtm_Tom_Ch_ClkSrc;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    93  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    94  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    95   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    96  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    97  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    98      IfxGtm_Tom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	    99      IfxGtm_Tom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   100  } IfxGtm_Tom_Ch_OutputTrigger;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   101  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   102  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   103   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   104  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   105  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   106      IfxGtm_Tom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   107      IfxGtm_Tom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   108  } IfxGtm_Tom_Ch_ResetEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   110  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   111  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   112  /** \addtogroup IfxLld_Gtm_Std_Tom_Channel_Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   113   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   114  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   115  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   116  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   117  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   118  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   119  /** \brief Returns the base addredd of selected Tom channel
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   120   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   121   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   122   * \return Pointer to channel base address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   123   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   124  IFX_INLINE Ifx_GTM_TOM_CH *IfxGtm_Tom_Ch_getChannelPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   125  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   126  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   127  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   128  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   130  /** \brief Clears the channel One notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   131   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   132   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   133   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   134   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   135  IFX_EXTERN void IfxGtm_Tom_Ch_clearOneNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   136  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   137  /** \brief Clears the channel Zero notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   138   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   139   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   140   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   141   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   142  IFX_EXTERN void IfxGtm_Tom_Ch_clearZeroNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   143  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   144  /** \brief Returns the TOM channel input clock frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   145   * \param gtm Pointer to GTM module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   146   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   147   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   148   * \return TOM channel input clock frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   149   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   150  IFX_EXTERN float32 IfxGtm_Tom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   151  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   152  /** \brief Returns the channel clock source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   153   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   154   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   155   * \return The clock source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   156   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   157  IFX_EXTERN IfxGtm_Tom_Ch_ClkSrc IfxGtm_Tom_Ch_getClockSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   158  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   159  /** \brief Returns the compare one value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   160   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   161   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   162   * \return compare one value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   163   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   164  IFX_EXTERN uint32 IfxGtm_Tom_Ch_getCompareOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   165  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   166  /** \brief Returns the compare one pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   167   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   168   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   169   * \return compare one pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   170   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   171  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getCompareOnePointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   172  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   173  /** \brief Returns the compare zero value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   174   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   175   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   176   * \return compare zero value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   178  IFX_EXTERN uint32 IfxGtm_Tom_Ch_getCompareZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   180  /** \brief Returns the compare zero pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   181   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   182   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   183   * \return compare zero pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   184   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   185  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getCompareZeroPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   186  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   187  /** \brief Gets the TOM output level
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   188   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   189   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   190   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   191   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   192  IFX_EXTERN boolean IfxGtm_Tom_Ch_getOutputLevel(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   193  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   194  /** \brief Returns a pointer to the TOM channel SRC
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   195   * \param gtm Pointer to GTM module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   196   * \param tom Specifies the tom object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   197   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   198   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   199   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   200  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Tom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Tom tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   201  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   202  /** \brief Returns the TGC pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   203   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   204   * \param tgcIndex TGC index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   205   * \return TOM TGC object pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   206   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   207  IFX_EXTERN Ifx_GTM_TOM_TGC *IfxGtm_Tom_Ch_getTgcPointer(Ifx_GTM_TOM *tom, uint32 tgcIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   208  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   209  /** \brief Returns the Timer pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   210   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   211   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   212   * \return Timer pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   213   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   214  IFX_EXTERN volatile uint32 *IfxGtm_Tom_Ch_getTimerPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   215  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   216  /** \brief Returns the status of channel One notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   217   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   218   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   219   * \return Status of channel One notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   220   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   221  IFX_EXTERN boolean IfxGtm_Tom_Ch_isOneNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   222  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   223  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   224   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   225   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   226   * \return Status of channel Zero notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   227   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   228  IFX_EXTERN boolean IfxGtm_Tom_Ch_isZeroNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   229  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   230  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   231   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   232   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   233   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   234   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   235  IFX_EXTERN void IfxGtm_Tom_Ch_raiseInterruptOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   236  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   237  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   238   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   239   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   240   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   241   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   242  IFX_EXTERN void IfxGtm_Tom_Ch_raiseInterruptZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   243  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   244  /** \brief Sets the channel clock source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   245   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   246   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   247   * \param clock Channel clock source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   248   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   249   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   250  IFX_EXTERN void IfxGtm_Tom_Ch_setClockSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_ClkSrc clock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   251  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   252  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   253   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   254   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   255   * \param compareZero Compare zero value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   256   * \param compareOne Compare one value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   257   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   258   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   259  IFX_EXTERN void IfxGtm_Tom_Ch_setCompare(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   261  /** \brief Sets the compare 1 value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   262   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   263   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   264   * \param compareOne Compare one value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   265   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   266   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   267  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareOne(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   268  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   269  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   270   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   271   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   272   * \param shadowOne Compare one shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   273   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   274   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   275  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareOneShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   276  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   277  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   278   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   279   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   280   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   281   * \param shadowOne Compare one shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   282   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   283   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   284  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   286  /** \brief Sets the compare 0 value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   287   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   288   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   289   * \param compareZero Compare zero value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   290   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   292  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareZero(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 compareZero);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   293  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   294  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   295   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   296   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   297   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   298   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   299   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   300  IFX_EXTERN void IfxGtm_Tom_Ch_setCompareZeroShadow(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   301  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   302  /** \brief Sets the counter value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   303   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   304   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   305   * \param value Counter value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   306   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   307   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   308  IFX_EXTERN void IfxGtm_Tom_Ch_setCounterValue(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, uint32 value);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   309  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   310  /** \brief Enable/disable the gated counter mode (channel 0 to 7 only)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   311   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   312   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   313   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   314   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   315   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   316  IFX_EXTERN void IfxGtm_Tom_Ch_setGatedCounter(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   317  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   318  /** \brief Sets the channel notification
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   319   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   320   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   321   * \param mode Interrupt mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   322   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   323   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   324   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   325   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   326  IFX_EXTERN void IfxGtm_Tom_Ch_setNotification(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   327  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   328  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   329   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   330   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   331   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   332   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   333   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   334  IFX_EXTERN void IfxGtm_Tom_Ch_setOneShotMode(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   335  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   336  /** \brief Enable/disable the PCM mode (channel 15 only)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   337   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   338   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   339   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   340   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   341   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   342  IFX_EXTERN void IfxGtm_Tom_Ch_setPcm(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   343  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   344  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   345   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   346   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   347   * \param event Channel reset event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   348   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   349   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   350  IFX_EXTERN void IfxGtm_Tom_Ch_setResetSource(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_ResetEvent event);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   352  /** \brief Sets the signal level
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   353   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   354   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   355   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   356   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   357   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   358  IFX_EXTERN void IfxGtm_Tom_Ch_setSignalLevel(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   360  /** \brief Enable/disable the SPE mode (channel 0 to 7 only)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   361   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   362   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   363   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   364   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   365   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   366  IFX_EXTERN void IfxGtm_Tom_Ch_setSpe(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   367  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   368  /** \brief Sets the channel trigger output
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   369   * \param tom Pointer to the TOM object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   370   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   371   * \param trigger Channel trigger output mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   372   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   373   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   374  IFX_EXTERN void IfxGtm_Tom_Ch_setTriggerOutput(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel, IfxGtm_Tom_Ch_OutputTrigger trigger);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   375  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   376  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   378  /** \addtogroup IfxLld_Gtm_Std_Tom_TGC_Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   379   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   380  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   381  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   382  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   383  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   384  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   385  /** \brief Sets the tgc global control value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   386   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   387   * \param control global control value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   388   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   389   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   390  IFX_INLINE void IfxGtm_Tom_Tgc_writeGlobalControl(Ifx_GTM_TOM_TGC *tgc, uint32 control);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   391  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   392  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   393  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   394  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   396  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   397   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   398   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   399   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   400   * \return The register value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   401   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   402  IFX_EXTERN uint32 IfxGtm_Tom_Tgc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   403  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   404  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   405   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   406   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   407   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   408   * \return The register value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   409   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   410  IFX_EXTERN uint32 IfxGtm_Tom_Tgc_buildFeatureForChannel(IfxGtm_Tom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   411  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   412  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   413   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   414   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   415   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   416   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   417   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   418   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   419  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannel(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   420  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   421  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   422   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   423   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   424   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   425   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   426   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   427   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   428  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelOutput(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   429  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   430  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   431   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   432   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   433   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   434   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   435   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   436  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelUpdate(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   437  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   438  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   439   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   440   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   441   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   442   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   443   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   444   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   445  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannels(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   446  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   447  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   448   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   449   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   450   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   451   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   452   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   453   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   454  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsOutput(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   455  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   456  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   457   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   458   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   459   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   460   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   461   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   462  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsTrigger(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   463  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   464  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   465   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   466   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   467   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   468   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   469   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   470  IFX_EXTERN void IfxGtm_Tom_Tgc_enableChannelsUpdate(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   471  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   472  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   473   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   474   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   475   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   476   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   477  IFX_EXTERN void IfxGtm_Tom_Tgc_enableTimeTrigger(Ifx_GTM_TOM_TGC *tgc, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   478  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   479  /** \brief Reset one or more channels
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   480   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   481   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   482   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   483   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   484  IFX_EXTERN void IfxGtm_Tom_Tgc_resetChannels(Ifx_GTM_TOM_TGC *tgc, uint32 resetMask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   485  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   486  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   487   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   488   * \param channel Channel index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   489   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   490   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   491   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   492   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   493  IFX_EXTERN void IfxGtm_Tom_Tgc_setChannelForceUpdate(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   494  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   495  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   496   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   497   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   498   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   499   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   500   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   501   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   502   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   503  IFX_EXTERN void IfxGtm_Tom_Tgc_setChannelsForceUpdate(Ifx_GTM_TOM_TGC *tgc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   504  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   505  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   506   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   507   * \param base Time base used for comparison
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   508   * \param value Compare value that raise the trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   509   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   510   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   511  IFX_EXTERN void IfxGtm_Tom_Tgc_setTimeTrigger(Ifx_GTM_TOM_TGC *tgc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   512  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   513  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   514   * \param tgc Pointer to the TGC object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   515   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   516   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   517  IFX_EXTERN void IfxGtm_Tom_Tgc_trigger(Ifx_GTM_TOM_TGC *tgc);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   518  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   519  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   520  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   521  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   522  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   523  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   524  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   525  IFX_INLINE Ifx_GTM_TOM_CH *IfxGtm_Tom_Ch_getChannelPointer(Ifx_GTM_TOM *tom, IfxGtm_Tom_Ch channel)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   526  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   527      return (Ifx_GTM_TOM_CH *)((uint32)&tom->CH0.CTRL.U + 0x40 * channel);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   528  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   529  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   530  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   531  IFX_INLINE void IfxGtm_Tom_Tgc_writeGlobalControl(Ifx_GTM_TOM_TGC *tgc, uint32 control)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   532  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Tom.h	   533      tgc->GLB_CTRL.U = control;
	st.w	[a15],d15
.L11:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   137     return 1.0 / IfxStdIf_Timer_tickToS(driver->base.clockFreq, driver->base.period);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   138  }
	ret
.L301:
	
__IfxGtm_Tom_Timer_disableUpdate_function_end:
	.size	IfxGtm_Tom_Timer_disableUpdate,__IfxGtm_Tom_Timer_disableUpdate_function_end-IfxGtm_Tom_Timer_disableUpdate
.L154:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getFrequency',code,cluster('IfxGtm_Tom_Timer_getFrequency')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getFrequency'
	.align	2
	
	.global	IfxGtm_Tom_Timer_getFrequency

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   139  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   140  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   141  float32 IfxGtm_Tom_Timer_getInputFrequency(IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_getFrequency
.L64:
IfxGtm_Tom_Timer_getFrequency:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   142  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   143      return driver->base.clockFreq;
	ld.w	d0,[a4]
.L615:
	ld.w	d1,[a4]6
.L616:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
	utof	d0,d0
.L617:
	movh	d15,#16256
.L618:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
	div.f	d0,d0,d1
.L619:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   144  _TimerValue IfxGtm_Tom_Timer_getOffset(IfxGtm_Tom_Timer *driver)
	div.f	d2,d15,d0
	ret
.L308:
	
__IfxGtm_Tom_Timer_getFrequency_function_end:
	.size	IfxGtm_Tom_Timer_getFrequency,__IfxGtm_Tom_Timer_getFrequency_function_end-IfxGtm_Tom_Timer_getFrequency
.L159:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getInputFrequency',code,cluster('IfxGtm_Tom_Timer_getInputFrequency')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getInputFrequency'
	.align	2
	
	.global	IfxGtm_Tom_Timer_getInputFrequency

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   145  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   146      return driver->offset;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   147  }
; Function IfxGtm_Tom_Timer_getInputFrequency
.L66:
IfxGtm_Tom_Timer_getInputFrequency:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   148  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   149  
	ld.w	d2,[a4]6
.L624:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   150  Ifx_TimerValue IfxGtm_Tom_Timer_getPeriod(IfxGtm_Tom_Timer *driver)
	ret
.L310:
	
__IfxGtm_Tom_Timer_getInputFrequency_function_end:
	.size	IfxGtm_Tom_Timer_getInputFrequency,__IfxGtm_Tom_Timer_getInputFrequency_function_end-IfxGtm_Tom_Timer_getInputFrequency
.L164:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getOffset',code,cluster('IfxGtm_Tom_Timer_getOffset')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getOffset'
	.align	2
	
	.global	IfxGtm_Tom_Timer_getOffset

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   151  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   152      return driver->base.period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   153  }
; Function IfxGtm_Tom_Timer_getOffset
.L68:
IfxGtm_Tom_Timer_getOffset:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   154  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   155  
	ld.w	d2,[a4]36
.L420:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   156  volatile uint32 *IfxGtm_Tom_Timer_getPointer(IfxGtm_Tom_Timer *driver)
	ret
.L231:
	
__IfxGtm_Tom_Timer_getOffset_function_end:
	.size	IfxGtm_Tom_Timer_getOffset,__IfxGtm_Tom_Timer_getOffset_function_end-IfxGtm_Tom_Timer_getOffset
.L109:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getPeriod',code,cluster('IfxGtm_Tom_Timer_getPeriod')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getPeriod'
	.align	2
	
	.global	IfxGtm_Tom_Timer_getPeriod

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   157  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   158      return IfxGtm_Tom_Ch_getTimerPointer(driver->tom, driver->timerChannel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   159  }
; Function IfxGtm_Tom_Timer_getPeriod
.L70:
IfxGtm_Tom_Timer_getPeriod:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   160  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   161  
	ld.w	d2,[a4]
.L629:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   162  float32 IfxGtm_Tom_Timer_getResolution(IfxGtm_Tom_Timer *driver)
	ret
.L312:
	
__IfxGtm_Tom_Timer_getPeriod_function_end:
	.size	IfxGtm_Tom_Timer_getPeriod,__IfxGtm_Tom_Timer_getPeriod_function_end-IfxGtm_Tom_Timer_getPeriod
.L169:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getPointer',code,cluster('IfxGtm_Tom_Timer_getPointer')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getPointer'
	.align	2
	
	.global	IfxGtm_Tom_Timer_getPointer

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   163  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   164      return 1.0 / driver->base.clockFreq;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   165  }
; Function IfxGtm_Tom_Timer_getPointer
.L72:
IfxGtm_Tom_Timer_getPointer:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   166  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   167  
	ld.a	a15,[a4]16
.L425:
	ld.b	d4,[a4]29
	mov.aa	a4,a15
.L354:
	j	IfxGtm_Tom_Ch_getTimerPointer
.L235:
	
__IfxGtm_Tom_Timer_getPointer_function_end:
	.size	IfxGtm_Tom_Timer_getPointer,__IfxGtm_Tom_Timer_getPointer_function_end-IfxGtm_Tom_Timer_getPointer
.L114:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getResolution',code,cluster('IfxGtm_Tom_Timer_getResolution')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getResolution'
	.align	2
	
	.global	IfxGtm_Tom_Timer_getResolution

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   168  Ifx_TimerValue IfxGtm_Tom_Timer_getTrigger(IfxGtm_Tom_Timer *driver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   169  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   170      return IfxGtm_Tom_Ch_getCompareOne(driver->tom, driver->triggerChannel) - 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   171  }
; Function IfxGtm_Tom_Timer_getResolution
.L74:
IfxGtm_Tom_Timer_getResolution:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   172  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   173  
	movh	d15,#16256
	ld.w	d0,[a4]6
.L634:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   174  volatile uint32 *IfxGtm_Tom_Timer_getTriggerPointer(IfxGtm_Tom_Timer *driver)
	div.f	d2,d15,d0
	ret
.L314:
	
__IfxGtm_Tom_Timer_getResolution_function_end:
	.size	IfxGtm_Tom_Timer_getResolution,__IfxGtm_Tom_Timer_getResolution_function_end-IfxGtm_Tom_Timer_getResolution
.L174:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getTrigger',code,cluster('IfxGtm_Tom_Timer_getTrigger')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getTrigger'
	.align	2
	
	.global	IfxGtm_Tom_Timer_getTrigger

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   175  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   176      return IfxGtm_Tom_Ch_getCompareOnePointer(driver->tom, driver->triggerChannel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   177  }
; Function IfxGtm_Tom_Timer_getTrigger
.L76:
IfxGtm_Tom_Timer_getTrigger:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   178  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   179  
	ld.a	a15,[a4]16
.L639:
	ld.b	d4,[a4]30
	mov.aa	a4,a15
.L355:
	call	IfxGtm_Tom_Ch_getCompareOne
.L640:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   180  boolean IfxGtm_Tom_Timer_init(IfxGtm_Tom_Timer *driver, const IfxGtm_Tom_Timer_Config *config)
	add	d2,#-1
	ret
.L316:
	
__IfxGtm_Tom_Timer_getTrigger_function_end:
	.size	IfxGtm_Tom_Timer_getTrigger,__IfxGtm_Tom_Timer_getTrigger_function_end-IfxGtm_Tom_Timer_getTrigger
.L179:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getTriggerPointer',code,cluster('IfxGtm_Tom_Timer_getTriggerPointer')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_getTriggerPointer'
	.align	2
	
	.global	IfxGtm_Tom_Timer_getTriggerPointer

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   181  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   182      boolean                result = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   183      IfxGtm_Tom_Timer_Base *base   = &driver->base;
; Function IfxGtm_Tom_Timer_getTriggerPointer
.L78:
IfxGtm_Tom_Timer_getTriggerPointer:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   184      uint16                 maskShift;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   185  
	ld.a	a15,[a4]16
.L430:
	ld.b	d4,[a4]30
	mov.aa	a4,a15
.L356:
	j	IfxGtm_Tom_Ch_getCompareOnePointer
.L237:
	
__IfxGtm_Tom_Timer_getTriggerPointer_function_end:
	.size	IfxGtm_Tom_Timer_getTriggerPointer,__IfxGtm_Tom_Timer_getTriggerPointer_function_end-IfxGtm_Tom_Timer_getTriggerPointer
.L119:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_init',code,cluster('IfxGtm_Tom_Timer_init')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_init'
	.align	2
	
	.global	IfxGtm_Tom_Timer_init

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   186      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, config->base.countDir == IfxStdIf_Timer_CountDir_up);    /* only this mode is supported */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   187  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   188      driver->gtm          = config->gtm;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   189      driver->tomIndex     = config->tom;
; Function IfxGtm_Tom_Timer_init
.L80:
IfxGtm_Tom_Timer_init:	.type	func
	mov.aa	a12,a5
.L360:
	mov.aa	a15,a4
.L361:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   190      driver->tom          = &config->gtm->TOM[config->tom];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   191      driver->timerChannel = config->timerChannel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   192  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   193      base->triggerEnabled = config->base.trigger.enabled;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   194  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   195      if (base->triggerEnabled)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   196      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   197          if (config->triggerOut != NULL_PTR)
	ld.a	a2,[a12]36
.L435:
	st.a	[a15]12,a2
.L436:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   198          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   199              driver->triggerChannel = config->triggerOut->channel;
	movh.a	a3,#1
.L437:
	ld.bu	d15,[a12]40
.L438:
	st.b	[a15]28,d15
.L439:
	mov	d8,#1
.L362:
	ld.a	a2,[a12]36
.L440:
	ld.bu	d15,[a12]40
	sha	d15,d15,#11
.L441:
	addsc.a	a2,a2,d15,#0
	add.a	a3,a2
	lea	a2,[a3]-32768
.L442:
	st.a	[a15]16,a2
.L443:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   200          }
	ld.b	d15,[a12]41
.L444:
	st.b	[a15]29,d15
.L445:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   201          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   202          {
	ld.bu	d15,[a12]12
.L446:
	st.b	[a15]4,d15
.L447:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   203              result = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   204              IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, result); /* triggerOut is required */
	jeq	d15,#0,.L20
.L448:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   205          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   206      }
	ld.a	a2,[a12]44
.L449:
	jz.a	a2,.L21
.L450:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   207      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   208      {
	ld.b	d15,[a2]1
.L451:
	j	.L22
.L21:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   209          driver->triggerChannel = driver->timerChannel; // Set to timer channel to disable its use
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   210      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   211  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   212      if (config->timerChannel <= 7)
	mov	d8,#0
	j	.L23
.L20:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   213      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   214          driver->tgc[0] = IfxGtm_Tom_Ch_getTgcPointer(driver->tom, 0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   215          driver->tgc[1] = IfxGtm_Tom_Ch_getTgcPointer(driver->tom, 1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   216      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   217      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   218      {
	ld.b	d15,[a15]29
.L22:
	st.b	[a15]30,d15
.L23:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   219          driver->tgc[0] = IfxGtm_Tom_Ch_getTgcPointer(driver->tom, 1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   220          driver->tgc[1] = NULL_PTR; /* NOTE currently no concatenation between TOMs */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   221      }
	mov	d0,#7
	ld.b	d15,[a12]41
.L452:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   222  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   223      driver->channelsMask[0]                  = 0;
	ld.a	a4,[a15]16
.L358:
	jlt	d0,d15,.L24
.L453:
	mov	d4,#0
	call	IfxGtm_Tom_Ch_getTgcPointer
.L357:
	st.a	[a15]20,a2
.L454:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   224      driver->tgcGlobalControlApplyUpdate[0]   = 0;
	mov	d4,#1
.L455:
	ld.a	a4,[a15]16
.L456:
	call	IfxGtm_Tom_Ch_getTgcPointer
.L457:
	j	.L25
.L24:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   225      driver->tgcGlobalControlDisableUpdate[0] = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   226  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   227      driver->channelsMask[1]                  = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   228      driver->tgcGlobalControlApplyUpdate[1]   = 0;
	mov	d4,#1
	call	IfxGtm_Tom_Ch_getTgcPointer
.L359:
	st.a	[a15]20,a2
.L458:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   229      driver->tgcGlobalControlDisableUpdate[1] = 0;
	mov.a	a2,#0
.L25:
	st.a	[a15]24,a2
.L459:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   230  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   231      /* Initialize the timer part */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   232      IfxGtm_Tom_Ch_setClockSource(driver->tom, driver->timerChannel, config->clock);
	mov	d15,#0
	st.h	[a15]32,d15
.L460:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   233      IfxGtm_Tom_Ch_setTriggerOutput(driver->tom, driver->timerChannel, IfxGtm_Tom_Ch_OutputTrigger_generate);
	st.w	[a15]48,d15
.L461:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   234  
	st.w	[a15]40,d15
.L462:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   235      IfxGtm_Tom_Timer_updateInputFrequency(driver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   236  
	st.h	[a15]34,d15
.L463:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   237      if ((config->base.minResolution > 0) && ((1.0 / base->clockFreq) > config->base.minResolution))
	st.w	[a15]52,d15
.L464:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   238      {
	st.w	[a15]44,d15
.L465:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   239          result = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   240          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, FALSE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   241      }
	fcall	.cocofun_2
.L466:
	ld.bu	d5,[a12]48
	call	IfxGtm_Tom_Ch_setClockSource
.L467:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   242      else
	fcall	.cocofun_2
.L468:
	mov	d5,#1
	call	IfxGtm_Tom_Ch_setTriggerOutput
.L469:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   243      {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   244  
	mov.aa	a4,a15
.L363:
	call	IfxGtm_Tom_Timer_updateInputFrequency
.L364:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   245      IfxGtm_Tom_Timer_setFrequency(driver, config->base.frequency);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   246  
	ld.w	d0,[a12]8
.L470:
	mov	d15,#0
.L471:
	cmp.f	d15,d0,d15
.L472:
	jz.t	d15:2,.L26
.L473:
	movh	d15,#16256
	ld.w	d1,[a15]6
.L474:
	div.f	d15,d15,d1
.L475:
	cmp.f	d15,d15,d0
	extr.u	d15,d15,#2,#1
.L476:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   247      driver->offset = IfxStdIf_Timer_sToTick(driver->base.clockFreq, 1.0 / config->base.frequency * config->base.startOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   248  
	cmov	d8,d15,#0
.L26:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   249      IfxGtm_Tom_Ch_setCounterValue(driver->tom, driver->timerChannel, driver->offset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   250  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   251      /* Initialize the trigger part */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   252      maskShift = (config->timerChannel <= 7) ? 0 : 8;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   253      IfxGtm_Tom_Timer_addToChannelMask(driver, driver->timerChannel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   254  
	ld.w	d4,[a12]
	mov.aa	a4,a15
.L365:
	call	IfxGtm_Tom_Timer_setFrequency
.L366:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   255      if (base->triggerEnabled)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   256      {
	movh	d0,#16256
	ld.w	d1,[a12]
.L477:
	ld.w	d15,[a15]6
.L478:
	div.f	d0,d0,d1
	ld.w	d1,[a12]30
.L479:
	mul.f	d0,d0,d1
.L250:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	mul.f	d15,d0,d15
.L480:
	ftouz	d5,d15
	st.w	[a15]36,d5
.L251:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   257  < (triggerChannel - maskShift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   258          /* TO DO: enable the trigger to be not in the same TGC group as the timer */
	fcall	.cocofun_2
.L388:
	call	IfxGtm_Tom_Ch_setCounterValue
.L481:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   259  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   260          IfxGtm_Tom_Ch_setSignalLevel(driver->tom, triggerChannel, config->base.trigger.risingEdgeAtPeriod ? Ifx_ActiveState_high : Ifx_ActiveState_low);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   261          IfxGtm_Tom_Ch_setCounterValue(driver->tom, triggerChannel, driver->offset);
	ld.b	d15,[a12]41
.L482:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   262  
	ld.b	d4,[a15]29
.L483:
	ge	d9,d15,#8
	mov.aa	a4,a15
.L367:
	sha	d9,#3
	call	IfxGtm_Tom_Timer_addToChannelMask
.L368:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   263          if (triggerChannel != driver->timerChannel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   264          {
	ld.bu	d15,[a15]4
.L484:
	jeq	d15,#0,.L28
.L257:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   265              IfxGtm_Tom_Ch_setResetSource(driver->tom, triggerChannel, IfxGtm_Tom_Ch_ResetEvent_onTrigger);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   266              IfxGtm_Tom_Ch_setClockSource(driver->tom, triggerChannel, config->clock);
	ld.b	d15,[a15]30
.L370:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   267              IfxGtm_Tom_Ch_setTriggerOutput(driver->tom, triggerChannel, IfxGtm_Tom_Ch_OutputTrigger_forward);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   268              IfxGtm_Tom_Tgc_enableChannels(driver->tgc[0], triggerChannelMask, 0, FALSE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   269              IfxGtm_Tom_Timer_addToChannelMask(driver, driver->triggerChannel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   270          }
	mov	d0,#1
	ld.a	a4,[a15]16
.L485:
	sub	d1,d15,d9
.L486:
	sha	d0,d0,d1
.L487:
	extr.u	d9,d0,#0,#16
	ld.bu	d0,[a12]23
.L369:
	mov	d4,d15
.L372:
	ne	d5,d0,#0
	call	IfxGtm_Tom_Ch_setSignalLevel
.L373:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   271          else
	ld.a	a4,[a15]16
.L488:
	ld.w	d5,[a15]36
	mov	d4,d15
	call	IfxGtm_Tom_Ch_setCounterValue
.L489:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   272          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   273  
	ld.b	d0,[a15]29
.L490:
	jeq	d15,d0,.L29
.L491:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   274          /* Signal must go out of the GTM even if the port outpout is not enabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   275          IfxGtm_Tom_Tgc_enableChannelsOutput(driver->tgc[0], triggerChannelMask, 0, FALSE);
	mov	d4,d15
	ld.a	a4,[a15]16
.L374:
	mov	d5,#1
	call	IfxGtm_Tom_Ch_setResetSource
.L375:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   276  
	ld.a	a4,[a15]16
.L492:
	ld.bu	d5,[a12]48
	mov	d4,d15
	call	IfxGtm_Tom_Ch_setClockSource
.L493:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   277          if ((config->base.trigger.outputEnabled) && (config->initPins == TRUE))
	mov	d4,d15
	ld.a	a4,[a15]16
.L376:
	mov	d5,#0
	call	IfxGtm_Tom_Ch_setTriggerOutput
.L377:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   278          {
	mov	d5,#0
	ld.a	a4,[a15]20
.L494:
	mov	d4,d9
.L378:
	mov	d6,d5
	call	IfxGtm_Tom_Tgc_enableChannels
.L379:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   279              /* Initialize the port */
	ld.b	d4,[a15]30
	mov.aa	a4,a15
.L380:
	call	IfxGtm_Tom_Timer_addToChannelMask
.L29:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   280              IfxGtm_PinMap_setTomTout(config->triggerOut, config->base.trigger.outputMode, config->base.trigger.outputDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   281          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   282          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   283          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   284  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   285          IfxGtm_Tom_Timer_setTrigger(driver, config->base.trigger.triggerPoint);
	mov	d5,#0
	ld.a	a4,[a15]20
.L495:
	mov	d4,d9
.L381:
	mov	d6,d5
	call	IfxGtm_Tom_Tgc_enableChannelsOutput
.L382:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   286      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   287      else
	ld.bu	d15,[a12]24
.L371:
	jeq	d15,#0,.L30
.L496:
	ld.bu	d15,[a12]51
.L497:
	jne	d15,#1,.L31
.L498:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   288      {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   289  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   290      /* Interrupt configuration */
	ld.a	a4,[a12]44
.L499:
	ld.bu	d4,[a12]21
.L500:
	ld.bu	d5,[a12]22
	call	IfxGtm_PinMap_setTomTout
.L31:
.L30:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   291      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   292          volatile Ifx_SRC_SRCR *src;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   293          boolean                timerHasIrq   = config->base.isrPriority > 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   294          boolean                triggerHasIrq = (config->base.trigger.isrPriority > 0) && base->triggerEnabled;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   295  
	ld.w	d4,[a12]14
	mov.aa	a4,a15
.L383:
	call	IfxGtm_Tom_Timer_setTrigger
.L28:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   296          if (driver->triggerChannel == driver->timerChannel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   297          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   298              IfxGtm_Tom_Ch_setNotification(driver->tom, driver->timerChannel, timerHasIrq ? config->irqModeTimer : config->irqModeTrigger, timerHasIrq, triggerHasIrq);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   299              src = IfxGtm_Tom_Ch_getSrcPointer(driver->gtm, config->tom, driver->timerChannel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   300              IfxSrc_init(src, timerHasIrq ? config->base.isrProvider : config->base.trigger.isrProvider, timerHasIrq ? config->base.isrPriority : config->base.trigger.isrPriority);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   301              IfxSrc_enable(src);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   302          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   303          else
	ld.hu	d15,[a12]4
.L501:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   304          {
	mov	d10,#0
.L390:
	ne	d9,d15,#0
	ld.hu	d15,[a12]18
.L389:
	jeq	d15,#0,.L32
.L502:
	ld.bu	d15,[a15]4
.L503:
	cmov	d10,d15,#1
.L32:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   305              IfxGtm_IrqMode irqMode = IfxGtm_IrqMode_pulseNotify;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   306  
	ld.b	d4,[a15]29
.L504:
	ld.b	d0,[a15]30
.L505:
	jne	d0,d4,.L34
.L506:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   307              if (timerHasIrq)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   308              {
	jeq	d9,#0,.L35
.L507:
	ld.bu	d5,[a12]49
.L508:
	j	.L36
.L35:
	ld.bu	d5,[a12]50
.L36:
	ld.a	a4,[a15]16
.L509:
	mov	e6,d10,d9
	call	IfxGtm_Tom_Ch_setNotification
.L510:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   309                  IfxGtm_Tom_Ch_setNotification(driver->tom, driver->timerChannel, irqMode, TRUE, FALSE);
	ld.a	a4,[a15]12
.L511:
	ld.bu	d4,[a12]40
.L512:
	ld.b	d5,[a15]29
	call	IfxGtm_Tom_Ch_getSrcPointer
.L384:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   310                  src = IfxGtm_Tom_Ch_getSrcPointer(driver->gtm, config->tom, driver->timerChannel);
	jeq	d9,#0,.L37
.L513:
	ld.bu	d0,[a12]6
.L514:
	j	.L38
.L37:
	ld.bu	d0,[a12]20
.L38:
	jeq	d9,#0,.L39
.L515:
	ld.hu	d15,[a12]4
.L516:
	j	.L41
.L39:
	ld.hu	d15,[a12]18
.L517:
	j	.L41
.L34:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   311                  IfxSrc_init(src, config->base.isrProvider, config->base.isrPriority);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   312                  IfxSrc_enable(src);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   313              }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   314  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   315              if (triggerHasIrq)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   316              {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   317                  IfxGtm_Tom_Ch_setNotification(driver->tom, driver->triggerChannel, irqMode, FALSE, TRUE);
	jeq	d9,#0,.L42
.L518:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   318                  src = IfxGtm_Tom_Ch_getSrcPointer(driver->gtm, config->tom, driver->triggerChannel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   319                  IfxSrc_init(src, config->base.trigger.isrProvider, config->base.trigger.isrPriority);
	mov	d5,#2
	ld.a	a4,[a15]16
.L519:
	mov	d6,#1
.L520:
	mov	d7,#0
	call	IfxGtm_Tom_Ch_setNotification
.L521:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   320                  IfxSrc_enable(src);
	ld.a	a4,[a15]12
.L522:
	ld.bu	d4,[a12]40
.L523:
	ld.b	d5,[a15]29
	call	IfxGtm_Tom_Ch_getSrcPointer
.L385:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   321              }
	ld.bu	d0,[a12]6
.L266:
	ld.hu	d1,[a12]4
.L524:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     2   * \file IfxSrc.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     3   * \brief SRC  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     4   * \ingroup IfxLld_Src
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    44   * \defgroup IfxLld_Src SRC
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    45   * \addtogroup IfxLld_Src
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    46   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    47   * \defgroup IfxLld_Src_Usage How to use Service Request Mechanism?
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    48   * \addtogroup IfxLld_Src_Usage
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    49   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    51   * For Aurix controller peripherals that can generate service requests is connected to one
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    52   * or more Service Request Nodes (SRNs) in the central Interrupt Router(IR) module. Refer to Controller User Manual for more details\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    53   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    54   * IfxSrc driver provides the APIs to configure and control service requests. Refer \ref IfxLld_Src_Usage for
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    55   * details of these APIs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    56   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    57   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    58   * \section Ifx_Src_UsageInit Initialize the Service Request Node
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    59   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    60   * Service request node is initialized to configure the following,\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    61   * 1) Route the interrupt trigger to service provider, which are:\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    62   *  __a. One of the available CPUs or\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    63   *  __b. DMA controller\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    64   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    65   * 2) Priority of CPU Interrupt or DMA Trigger.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    66   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    67   * For Interrupt or DMA to be correctly triggered, following steps are to be done in the user code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    68   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    69   * \subsection Ifx_Src_UsageInitStep1 Step1: Configure the Node
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    70   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    71   * User must configure the service request node in the application / driver files.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    72   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    73   * \subsection Ifx_Src_UsageInitStep2 Step2: Enable the Trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    74   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    75   * Enable the service request node to connect the trigger event from the hardware to service provider.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    76   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    77   * Example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    78   * Following example show the configuration for STM0 Service request 0 trigger configured to trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    79   * CPU1 with the priority specified by IFX_INTPRIO_STM0 (from the example at IfxCpu_Irq)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    80   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    81   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    82   * //file: myApplication.c
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    83   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    84   * #include "Ifx_IntPrioDef.h" // to get the priority numbers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    85   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    86   * void myDriverInitFunction(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    87   * {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    88   *    // driver init code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    89   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    90   *    // Step1: Call the function to route the trigger from for SRC_STM0_SR0 to CPU1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    91   *    // and priority specified at Ifx_IntPrioDef.h globally
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    92   *  IfxSrc_init(&MODULE_SRC.STM.STM[0].SR0, IfxSrc_Tos_cpu1, IFX_INTPRIO_STM0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    93   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    94   *    // Step2: Enable the service request node
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    95   *  IfxSrc_init(&MODULE_SRC.STM.STM[0].SR0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    96   * }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    97   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    99   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   100   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   101   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   102   * \defgroup IfxLld_Src_Std_Service_Request Service Request Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   103   * \ingroup IfxLld_Src_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   104   * \defgroup IfxLld_Src_Std_Module Module Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   105   * \ingroup IfxLld_Src_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   106   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   107  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   108  #ifndef IFXSRC_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   109  #define IFXSRC_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   110  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   111  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   112  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   113  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   114  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   115  #include "_Impl/IfxSrc_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   116  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   117  #include "IfxSrc_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   118  /** \addtogroup IfxLld_Src_Std_Service_Request
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   119   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   120  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   121  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   122  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   123  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   124  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   125  /** \brief Resets the overrun flag of the Service Request.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   126   * \param src pointer to the Service Request Control register which the overrun flag should be cleared.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   127   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   128   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   129   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   130   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   131   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   132  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   133  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   134  /** \brief Resets a specific interrupt service by software.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   135   * \param src pointer to the Service Request Control register which the request should be cleared.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   136   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   138   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   139   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   140   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   141  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   142  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   143  /** \brief Gets the current overrun status.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   144   * \param src pointer to the Service Request Control register for which the overrun status should be returned.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   145   * \return current service request control overrun status.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   146   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   147   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   148   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   149   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   150  IFX_INLINE boolean IfxSrc_isOverrun(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   151  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   152  /** \brief Gets the current request status.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   153   * \param src pointer to the Service Request Control register for which the request status should be returned.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   154   * \return current service request control request status.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   155   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   156   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   157   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   158   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   159  IFX_INLINE boolean IfxSrc_isRequested(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   160  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   161  /** \brief Requests a specific interrupt service by software
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   162   * \param src pointer to the Service Request Control register which the interrupt has to be requested.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   163   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   164   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   165   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   166   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   167   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   168  IFX_INLINE void IfxSrc_setRequest(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   169  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   170  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   171  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   172  /** \addtogroup IfxLld_Src_Std_Module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   173   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   174  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   175  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   176  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   177  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   178  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   179  /** \brief DeInitializes the service request control register.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   180   * \param src pointer to the Service Request Control register which should be deinitialised.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   181   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   182   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   183   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   184   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   185   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   186  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   187  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   188  /** \brief Disables a specific interrupt service request.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   189   * \param src pointer to the Service Request Control register for which the interrupt has to be disabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   190   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   191   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   192   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   193   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   194   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   195  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   196  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   197  /** \brief Enables a specific interrupt service request.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   198   * \param src pointer to the Service Request Control register for which the interrupt has to be enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   199   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   201   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   202   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   203   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   204  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   205  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   206  /** \brief Initializes the service request control register.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   207   * \param src pointer to the Service Request Control register which should be initialised.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   208   * \param typOfService type of interrupt service provider.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   209   * \param priority Interrupt priority.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   210   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   211   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   212   * Get the peripheral service control register which request need to be serviced and assign this service to any of service providers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   213   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   214   * //define the interrupt priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   215   * #define IFXASCLIN0_TX_INTPRIO 2
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   216   * //get the service request
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   217   * volatile Ifx_SRC_SRCR *src = IfxAsclin_getSrcPointerRx( &MODULE_ASCLIN0 );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   218   * //initlaise the service request
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   219   * IfxSrc_init( src, IfxSrc_Tos_cpu0, IFXASCLIN0_TX_INTPRIO );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   220   * // enable the service
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   221   * IfxSrc_enable( src );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   222   * //check for service request flags and clear if they occur
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   223   * if ( IfxSrc_isRequested( src ) == TRUE )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   224   * {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   225   *    IfxSrc_clearRequest( src );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   226   * }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   227   * if ( IfxSrc_isOverrun( src ) == TRUE )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   228   * {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   229   *      IfxSrc_clearOverrun( src );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   230   * }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   231   * // Atlast deinitialise the service control
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   232   * IfxSrc_deinit( src );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   233   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   234   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   236  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   238  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   239  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   240  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   241  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   242  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   243  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   244  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   245  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   246      src->B.IOVCLR = 1;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   247  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   248  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   249  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   250  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   251  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   252      src->B.CLRR = 1;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   253  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   254  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   255  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   256  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   257  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   258      src->U = 0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   259  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   261  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   262  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   264      src->B.SRE = 0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   265  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   266  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   267  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   268  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   269  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   270      src->B.SRE = 1;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   271  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   272  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   274  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   275  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   276      src->B.SRPN = priority;
	st.b	[a2],d1
.L525:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   277      src->B.TOS  = typOfService;
	fcall	.cocofun_1
.L42:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   322  tm_Tom_Tgc_setChannelsForceUpdate(driver->tgc[0], driver->channelsMask[0], 0, 0, 0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   323      IfxGtm_Tom_Tgc_trigger(driver->tgc[0]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   324      IfxGtm_Tom_Tgc_setChannelsForceUpdate(driver->tgc[0], 0, driver->channelsMask[0], 0, 0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   325  
	jeq	d10,#0,.L43
.L526:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   326      return result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   327  }
	mov	d5,#2
	ld.a	a4,[a15]16
.L527:
	mov	d6,#0
	ld.b	d4,[a15]30
.L528:
	mov	d7,#1
	call	IfxGtm_Tom_Ch_setNotification
.L529:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   328  
	ld.a	a4,[a15]12
.L530:
	ld.bu	d4,[a12]40
.L531:
	ld.b	d5,[a15]30
	call	IfxGtm_Tom_Ch_getSrcPointer
.L387:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   329  
	ld.bu	d0,[a12]20
.L275:
	ld.hu	d15,[a12]18
.L41:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     2   * \file IfxSrc.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     3   * \brief SRC  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     4   * \ingroup IfxLld_Src
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    44   * \defgroup IfxLld_Src SRC
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    45   * \addtogroup IfxLld_Src
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    46   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    47   * \defgroup IfxLld_Src_Usage How to use Service Request Mechanism?
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    48   * \addtogroup IfxLld_Src_Usage
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    49   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    51   * For Aurix controller peripherals that can generate service requests is connected to one
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    52   * or more Service Request Nodes (SRNs) in the central Interrupt Router(IR) module. Refer to Controller User Manual for more details\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    53   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    54   * IfxSrc driver provides the APIs to configure and control service requests. Refer \ref IfxLld_Src_Usage for
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    55   * details of these APIs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    56   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    57   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    58   * \section Ifx_Src_UsageInit Initialize the Service Request Node
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    59   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    60   * Service request node is initialized to configure the following,\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    61   * 1) Route the interrupt trigger to service provider, which are:\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    62   *  __a. One of the available CPUs or\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    63   *  __b. DMA controller\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    64   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    65   * 2) Priority of CPU Interrupt or DMA Trigger.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    66   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    67   * For Interrupt or DMA to be correctly triggered, following steps are to be done in the user code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    68   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    69   * \subsection Ifx_Src_UsageInitStep1 Step1: Configure the Node
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    70   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    71   * User must configure the service request node in the application / driver files.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    72   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    73   * \subsection Ifx_Src_UsageInitStep2 Step2: Enable the Trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    74   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    75   * Enable the service request node to connect the trigger event from the hardware to service provider.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    76   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    77   * Example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    78   * Following example show the configuration for STM0 Service request 0 trigger configured to trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    79   * CPU1 with the priority specified by IFX_INTPRIO_STM0 (from the example at IfxCpu_Irq)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    80   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    81   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    82   * //file: myApplication.c
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    83   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    84   * #include "Ifx_IntPrioDef.h" // to get the priority numbers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    85   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    86   * void myDriverInitFunction(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    87   * {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    88   *    // driver init code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    89   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    90   *    // Step1: Call the function to route the trigger from for SRC_STM0_SR0 to CPU1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    91   *    // and priority specified at Ifx_IntPrioDef.h globally
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    92   *  IfxSrc_init(&MODULE_SRC.STM.STM[0].SR0, IfxSrc_Tos_cpu1, IFX_INTPRIO_STM0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    93   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    94   *    // Step2: Enable the service request node
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    95   *  IfxSrc_init(&MODULE_SRC.STM.STM[0].SR0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    96   * }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    97   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    99   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   100   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   101   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   102   * \defgroup IfxLld_Src_Std_Service_Request Service Request Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   103   * \ingroup IfxLld_Src_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   104   * \defgroup IfxLld_Src_Std_Module Module Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   105   * \ingroup IfxLld_Src_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   106   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   107  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   108  #ifndef IFXSRC_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   109  #define IFXSRC_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   110  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   111  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   112  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   113  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   114  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   115  #include "_Impl/IfxSrc_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   116  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   117  #include "IfxSrc_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   118  /** \addtogroup IfxLld_Src_Std_Service_Request
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   119   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   120  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   121  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   122  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   123  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   124  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   125  /** \brief Resets the overrun flag of the Service Request.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   126   * \param src pointer to the Service Request Control register which the overrun flag should be cleared.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   127   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   128   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   129   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   130   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   131   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   132  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   133  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   134  /** \brief Resets a specific interrupt service by software.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   135   * \param src pointer to the Service Request Control register which the request should be cleared.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   136   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   138   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   139   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   140   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   141  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   142  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   143  /** \brief Gets the current overrun status.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   144   * \param src pointer to the Service Request Control register for which the overrun status should be returned.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   145   * \return current service request control overrun status.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   146   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   147   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   148   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   149   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   150  IFX_INLINE boolean IfxSrc_isOverrun(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   151  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   152  /** \brief Gets the current request status.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   153   * \param src pointer to the Service Request Control register for which the request status should be returned.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   154   * \return current service request control request status.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   155   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   156   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   157   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   158   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   159  IFX_INLINE boolean IfxSrc_isRequested(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   160  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   161  /** \brief Requests a specific interrupt service by software
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   162   * \param src pointer to the Service Request Control register which the interrupt has to be requested.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   163   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   164   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   165   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   166   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   167   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   168  IFX_INLINE void IfxSrc_setRequest(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   169  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   170  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   171  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   172  /** \addtogroup IfxLld_Src_Std_Module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   173   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   174  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   175  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   176  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   177  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   178  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   179  /** \brief DeInitializes the service request control register.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   180   * \param src pointer to the Service Request Control register which should be deinitialised.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   181   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   182   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   183   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   184   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   185   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   186  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   187  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   188  /** \brief Disables a specific interrupt service request.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   189   * \param src pointer to the Service Request Control register for which the interrupt has to be disabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   190   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   191   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   192   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   193   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   194   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   195  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   196  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   197  /** \brief Enables a specific interrupt service request.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   198   * \param src pointer to the Service Request Control register for which the interrupt has to be enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   199   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   201   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   202   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   203   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   204  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   205  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   206  /** \brief Initializes the service request control register.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   207   * \param src pointer to the Service Request Control register which should be initialised.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   208   * \param typOfService type of interrupt service provider.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   209   * \param priority Interrupt priority.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   210   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   211   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   212   * Get the peripheral service control register which request need to be serviced and assign this service to any of service providers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   213   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   214   * //define the interrupt priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   215   * #define IFXASCLIN0_TX_INTPRIO 2
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   216   * //get the service request
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   217   * volatile Ifx_SRC_SRCR *src = IfxAsclin_getSrcPointerRx( &MODULE_ASCLIN0 );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   218   * //initlaise the service request
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   219   * IfxSrc_init( src, IfxSrc_Tos_cpu0, IFXASCLIN0_TX_INTPRIO );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   220   * // enable the service
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   221   * IfxSrc_enable( src );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   222   * //check for service request flags and clear if they occur
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   223   * if ( IfxSrc_isRequested( src ) == TRUE )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   224   * {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   225   *    IfxSrc_clearRequest( src );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   226   * }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   227   * if ( IfxSrc_isOverrun( src ) == TRUE )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   228   * {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   229   *      IfxSrc_clearOverrun( src );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   230   * }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   231   * // Atlast deinitialise the service control
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   232   * IfxSrc_deinit( src );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   233   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   234   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   236  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   238  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   239  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   240  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   241  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   242  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   243  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   244  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   245  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   246      src->B.IOVCLR = 1;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   247  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   248  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   249  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   250  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   251  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   252      src->B.CLRR = 1;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   253  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   254  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   255  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   256  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   257  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   258      src->U = 0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   259  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   261  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   262  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   264      src->B.SRE = 0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   265  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   266  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   267  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   268  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   269  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   270      src->B.SRE = 1;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   271  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   272  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   274  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   275  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   276      src->B.SRPN = priority;
	st.b	[a2],d15
.L532:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   277      src->B.TOS  = typOfService;
	fcall	.cocofun_1
.L43:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   330  Gtm_Tom_Timer_initConfig(IfxGtm_Tom_Timer_Config *config, Ifx_GTM *gtm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   331  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   332      IfxStdIf_Timer_initConfig(&config->base);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   333      config->gtm            = gtm;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   334      config->tom            = IfxGtm_Tom_0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   335      config->timerChannel   = IfxGtm_Tom_Ch_0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   336      config->triggerOut     = NULL_PTR;
	mov	d5,#0
	ld.a	a4,[a15]20
.L533:
	mov	e6,d5,d5
	ld.hu	d4,[a15]32
.L534:
	call	IfxGtm_Tom_Tgc_setChannelsForceUpdate
.L535:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   337      config->clock          = IfxGtm_Tom_Ch_ClkSrc_cmuFxclk0;
	ld.a	a4,[a15]20
	call	IfxGtm_Tom_Tgc_trigger
.L536:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   338      config->base.countDir  = IfxStdIf_Timer_CountDir_up;
	ld.a	a4,[a15]20
.L537:
	mov	d4,#0
	ld.hu	d5,[a15]32
.L538:
	mov	e6,d4,d4
	call	IfxGtm_Tom_Tgc_setChannelsForceUpdate
.L539:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   339      config->irqModeTimer   = IfxGtm_IrqMode_level;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   340      config->irqModeTrigger = IfxGtm_IrqMode_level;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   341      config->initPins       = TRUE;
	mov	d2,d8
	ret
.L240:
	
__IfxGtm_Tom_Timer_init_function_end:
	.size	IfxGtm_Tom_Timer_init,__IfxGtm_Tom_Timer_init_function_end-IfxGtm_Tom_Timer_init
.L124:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer..cocofun_1',code,cluster('.cocofun_1')
	.sect	'.text.IfxGtm_Tom_Timer..cocofun_1'
	.align	2
; Function .cocofun_1
.L82:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     2   * \file IfxSrc.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     3   * \brief SRC  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     4   * \ingroup IfxLld_Src
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    44   * \defgroup IfxLld_Src SRC
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    45   * \addtogroup IfxLld_Src
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    46   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    47   * \defgroup IfxLld_Src_Usage How to use Service Request Mechanism?
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    48   * \addtogroup IfxLld_Src_Usage
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    49   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    51   * For Aurix controller peripherals that can generate service requests is connected to one
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    52   * or more Service Request Nodes (SRNs) in the central Interrupt Router(IR) module. Refer to Controller User Manual for more details\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    53   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    54   * IfxSrc driver provides the APIs to configure and control service requests. Refer \ref IfxLld_Src_Usage for
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    55   * details of these APIs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    56   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    57   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    58   * \section Ifx_Src_UsageInit Initialize the Service Request Node
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    59   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    60   * Service request node is initialized to configure the following,\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    61   * 1) Route the interrupt trigger to service provider, which are:\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    62   *  __a. One of the available CPUs or\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    63   *  __b. DMA controller\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    64   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    65   * 2) Priority of CPU Interrupt or DMA Trigger.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    66   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    67   * For Interrupt or DMA to be correctly triggered, following steps are to be done in the user code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    68   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    69   * \subsection Ifx_Src_UsageInitStep1 Step1: Configure the Node
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    70   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    71   * User must configure the service request node in the application / driver files.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    72   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    73   * \subsection Ifx_Src_UsageInitStep2 Step2: Enable the Trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    74   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    75   * Enable the service request node to connect the trigger event from the hardware to service provider.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    76   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    77   * Example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    78   * Following example show the configuration for STM0 Service request 0 trigger configured to trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    79   * CPU1 with the priority specified by IFX_INTPRIO_STM0 (from the example at IfxCpu_Irq)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    80   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    81   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    82   * //file: myApplication.c
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    83   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    84   * #include "Ifx_IntPrioDef.h" // to get the priority numbers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    85   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    86   * void myDriverInitFunction(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    87   * {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    88   *    // driver init code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    89   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    90   *    // Step1: Call the function to route the trigger from for SRC_STM0_SR0 to CPU1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    91   *    // and priority specified at Ifx_IntPrioDef.h globally
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    92   *  IfxSrc_init(&MODULE_SRC.STM.STM[0].SR0, IfxSrc_Tos_cpu1, IFX_INTPRIO_STM0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    93   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    94   *    // Step2: Enable the service request node
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    95   *  IfxSrc_init(&MODULE_SRC.STM.STM[0].SR0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    96   * }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    97   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    99   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   100   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   101   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   102   * \defgroup IfxLld_Src_Std_Service_Request Service Request Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   103   * \ingroup IfxLld_Src_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   104   * \defgroup IfxLld_Src_Std_Module Module Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   105   * \ingroup IfxLld_Src_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   106   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   107  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   108  #ifndef IFXSRC_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   109  #define IFXSRC_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   110  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   111  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   112  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   113  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   114  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   115  #include "_Impl/IfxSrc_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   116  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   117  #include "IfxSrc_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   118  /** \addtogroup IfxLld_Src_Std_Service_Request
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   119   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   120  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   121  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   122  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   123  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   124  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   125  /** \brief Resets the overrun flag of the Service Request.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   126   * \param src pointer to the Service Request Control register which the overrun flag should be cleared.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   127   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   128   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   129   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   130   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   131   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   132  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   133  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   134  /** \brief Resets a specific interrupt service by software.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   135   * \param src pointer to the Service Request Control register which the request should be cleared.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   136   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   138   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   139   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   140   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   141  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   142  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   143  /** \brief Gets the current overrun status.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   144   * \param src pointer to the Service Request Control register for which the overrun status should be returned.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   145   * \return current service request control overrun status.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   146   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   147   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   148   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   149   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   150  IFX_INLINE boolean IfxSrc_isOverrun(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   151  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   152  /** \brief Gets the current request status.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   153   * \param src pointer to the Service Request Control register for which the request status should be returned.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   154   * \return current service request control request status.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   155   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   156   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   157   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   158   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   159  IFX_INLINE boolean IfxSrc_isRequested(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   160  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   161  /** \brief Requests a specific interrupt service by software
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   162   * \param src pointer to the Service Request Control register which the interrupt has to be requested.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   163   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   164   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   165   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   166   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   167   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   168  IFX_INLINE void IfxSrc_setRequest(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   169  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   170  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   171  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   172  /** \addtogroup IfxLld_Src_Std_Module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   173   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   174  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   175  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   176  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   177  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   178  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   179  /** \brief DeInitializes the service request control register.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   180   * \param src pointer to the Service Request Control register which should be deinitialised.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   181   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   182   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   183   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   184   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   185   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   186  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   187  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   188  /** \brief Disables a specific interrupt service request.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   189   * \param src pointer to the Service Request Control register for which the interrupt has to be disabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   190   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   191   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   192   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   193   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   194   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   195  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   196  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   197  /** \brief Enables a specific interrupt service request.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   198   * \param src pointer to the Service Request Control register for which the interrupt has to be enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   199   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   201   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   202   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   203   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   204  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   205  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   206  /** \brief Initializes the service request control register.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   207   * \param src pointer to the Service Request Control register which should be initialised.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   208   * \param typOfService type of interrupt service provider.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   209   * \param priority Interrupt priority.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   210   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   211   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   212   * Get the peripheral service control register which request need to be serviced and assign this service to any of service providers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   213   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   214   * //define the interrupt priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   215   * #define IFXASCLIN0_TX_INTPRIO 2
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   216   * //get the service request
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   217   * volatile Ifx_SRC_SRCR *src = IfxAsclin_getSrcPointerRx( &MODULE_ASCLIN0 );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   218   * //initlaise the service request
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   219   * IfxSrc_init( src, IfxSrc_Tos_cpu0, IFXASCLIN0_TX_INTPRIO );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   220   * // enable the service
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   221   * IfxSrc_enable( src );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   222   * //check for service request flags and clear if they occur
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   223   * if ( IfxSrc_isRequested( src ) == TRUE )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   224   * {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   225   *    IfxSrc_clearRequest( src );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   226   * }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   227   * if ( IfxSrc_isOverrun( src ) == TRUE )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   228   * {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   229   *      IfxSrc_clearOverrun( src );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   230   * }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   231   * // Atlast deinitialise the service control
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   232   * IfxSrc_deinit( src );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   233   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   234   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   236  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   238  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   239  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   240  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   241  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   242  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   243  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   244  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   245  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   246      src->B.IOVCLR = 1;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   247  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   248  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   249  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   250  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   251  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   252      src->B.CLRR = 1;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   253  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   254  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   255  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   256  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   257  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   258      src->U = 0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   259  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   261  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   262  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   264      src->B.SRE = 0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   265  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   266  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   267  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   268  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   269  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   270      src->B.SRE = 1;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   271  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   272  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   274  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   275  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   276      src->B.SRPN = priority;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   277      src->B.TOS  = typOfService;
	ld.bu	d15,[a2]1
.L732:
	insert	d15,d15,d0,#3,#2
	st.b	[a2]1,d15
.L733:
	ld.bu	d15,[a2]3
.L734:
	or	d15,#2
	st.b	[a2]3,d15
.L735:
	ld.bu	d15,[a2]1
.L736:
	or	d15,#4
	st.b	[a2]1,d15
.L386:
	fret
.L224:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_initConfig',code,cluster('IfxGtm_Tom_Timer_initConfig')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_initConfig'
	.align	2
	
	.global	IfxGtm_Tom_Timer_initConfig

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   342  Gtm_Tom_Timer_run(IfxGtm_Tom_Timer *driver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   343  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   344      IfxGtm_Tom_Tgc_enableChannels(driver->tgc[0], driver->channelsMask[0], 0, TRUE);
; Function IfxGtm_Tom_Timer_initConfig
.L84:
IfxGtm_Tom_Timer_initConfig:	.type	func
	mov.aa	a15,a4
.L392:
	mov.aa	a12,a5
.L393:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   345  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   346      if (driver->tgc[1])
	call	IfxStdIf_Timer_initConfig
.L391:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   347      {
	st.a	[a15]36,a12
.L544:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   348          IfxGtm_Tom_Tgc_enableChannels(driver->tgc[1], driver->channelsMask[1], 0, TRUE); /* Note: Write of 0 value has no effect */
	mov	d15,#0
	st.b	[a15]40,d15
.L545:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   349      }
	st.b	[a15]41,d15
.L546:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   350  }
	mov.a	a2,#0
.L547:
	st.a	[a15]44,a2
.L548:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   351  
	st.b	[a15]48,d15
.L549:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   352  
	st.b	[a15]28,d15
.L550:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   353  boolean IfxGtm_Tom_Timer_setFrequency(IfxGtm_Tom_Timer *driver, float32 frequency)
	st.b	[a15]49,d15
.L551:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   354  {
	st.b	[a15]50,d15
.L552:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   355      Ifx_TimerValue period = IfxStdIf_Timer_sToTick(driver->base.clockFreq, 1.0 / frequency);
	mov	d15,#1
	st.b	[a15]51,d15
.L553:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   356  
	ret
.L276:
	
__IfxGtm_Tom_Timer_initConfig_function_end:
	.size	IfxGtm_Tom_Timer_initConfig,__IfxGtm_Tom_Timer_initConfig_function_end-IfxGtm_Tom_Timer_initConfig
.L129:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_run',code,cluster('IfxGtm_Tom_Timer_run')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_run'
	.align	2
	
	.global	IfxGtm_Tom_Timer_run

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   357      return IfxGtm_Tom_Timer_setPeriod(driver, period);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   358  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   359  
; Function IfxGtm_Tom_Timer_run
.L86:
IfxGtm_Tom_Timer_run:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   360  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   361  boolean IfxGtm_Tom_Timer_setPeriod(IfxGtm_Tom_Timer *driver, Ifx_TimerValue period)
	mov	d5,#0
	mov.aa	a15,a4
.L395:
	mov	d6,#1
	ld.a	a4,[a15]20
.L394:
	ld.hu	d4,[a15]32
.L645:
	call	IfxGtm_Tom_Tgc_enableChannels
.L646:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   362  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   363      driver->base.period = period;
	ld.a	a4,[a15]24
.L647:
	jz.a	a4,.L45
.L648:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   364      IfxGtm_Tom_Ch_setCompareZeroShadow(driver->tom, driver->timerChannel, period);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   365  
	mov	d5,#0
	ld.hu	d4,[a15]34
.L649:
	mov	d6,#1
	j	IfxGtm_Tom_Tgc_enableChannels
.L45:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   366      if (driver->triggerChannel != driver->timerChannel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   367      {
	ret
.L318:
	
__IfxGtm_Tom_Timer_run_function_end:
	.size	IfxGtm_Tom_Timer_run,__IfxGtm_Tom_Timer_run_function_end-IfxGtm_Tom_Timer_run
.L184:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_setFrequency',code,cluster('IfxGtm_Tom_Timer_setFrequency')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_setFrequency'
	.align	2
	
	.global	IfxGtm_Tom_Timer_setFrequency

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   368          IfxGtm_Tom_Ch_setCompareZeroShadow(driver->tom, driver->triggerChannel, period);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   369      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   370  
; Function IfxGtm_Tom_Timer_setFrequency
.L88:
IfxGtm_Tom_Timer_setFrequency:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   371      return TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   372  }
	movh	d15,#16256
.L654:
	div.f	d15,d15,d4
	ld.w	d0,[a4]6
.L655:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	mul.f	d15,d15,d0
	ftouz	d4,d15
.L396:
	j	IfxGtm_Tom_Timer_setPeriod
.L320:
	
__IfxGtm_Tom_Timer_setFrequency_function_end:
	.size	IfxGtm_Tom_Timer_setFrequency,__IfxGtm_Tom_Timer_setFrequency_function_end-IfxGtm_Tom_Timer_setFrequency
.L189:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_setPeriod',code,cluster('IfxGtm_Tom_Timer_setPeriod')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_setPeriod'
	.align	2
	
	.global	IfxGtm_Tom_Timer_setPeriod

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   373  driver->triggerChannel, period);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   374      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   375  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   376      return TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   377  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   378  
; Function IfxGtm_Tom_Timer_setPeriod
.L90:
IfxGtm_Tom_Timer_setPeriod:	.type	func
	mov.aa	a15,a4
.L398:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   379  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   380  void IfxGtm_Tom_Timer_setSingleMode(IfxGtm_Tom_Timer *driver, boolean enabled)
	mov	d8,d4
	st.w	[a15],d8
.L397:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   381  {
	fcall	.cocofun_2
.L399:
	mov	d5,d8
	call	IfxGtm_Tom_Ch_setCompareZeroShadow
.L660:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   382      IfxGtm_Tom_Ch_setOneShotMode(driver->tom, driver->timerChannel, enabled);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   383  }
	ld.b	d4,[a15]30
.L661:
	ld.b	d15,[a15]29
.L662:
	jeq	d15,d4,.L47
.L663:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   384  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   385  
	ld.a	a4,[a15]16
.L664:
	mov	d5,d8
	call	IfxGtm_Tom_Ch_setCompareZeroShadow
.L47:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   386  void IfxGtm_Tom_Timer_setTrigger(IfxGtm_Tom_Timer *driver, Ifx_TimerValue triggerPoint)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   387  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   388      IfxGtm_Tom_Ch_setCompareOneShadow(driver->tom, driver->triggerChannel, triggerPoint + 1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   389  }
	mov	d2,#1
	ret
.L323:
	
__IfxGtm_Tom_Timer_setPeriod_function_end:
	.size	IfxGtm_Tom_Timer_setPeriod,__IfxGtm_Tom_Timer_setPeriod_function_end-IfxGtm_Tom_Timer_setPeriod
.L194:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_setSingleMode',code,cluster('IfxGtm_Tom_Timer_setSingleMode')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_setSingleMode'
	.align	2
	
	.global	IfxGtm_Tom_Timer_setSingleMode

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   390  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   391  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   392  boolean IfxGtm_Tom_Timer_stdIfTimerInit(IfxStdIf_Timer *stdif, IfxGtm_Tom_Timer *driver)
; Function IfxGtm_Tom_Timer_setSingleMode
.L92:
IfxGtm_Tom_Timer_setSingleMode:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   393  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   394      /* Ensure the stdif is reset to zeros */
	mov	d5,d4
	ld.a	a15,[a4]16
.L402:
	ld.b	d4,[a4]29
.L401:
	mov.aa	a4,a15
.L400:
	j	IfxGtm_Tom_Ch_setOneShotMode
.L326:
	
__IfxGtm_Tom_Timer_setSingleMode_function_end:
	.size	IfxGtm_Tom_Timer_setSingleMode,__IfxGtm_Tom_Timer_setSingleMode_function_end-IfxGtm_Tom_Timer_setSingleMode
.L199:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_setTrigger',code,cluster('IfxGtm_Tom_Timer_setTrigger')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_setTrigger'
	.align	2
	
	.global	IfxGtm_Tom_Timer_setTrigger

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   395      memset(stdif, 0, sizeof(IfxStdIf_Timer));
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   396  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   397      /* *INDENT-OFF* Note: this file was indented manually by the author. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   398      /* Set the API link */
; Function IfxGtm_Tom_Timer_setTrigger
.L94:
IfxGtm_Tom_Timer_setTrigger:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   399      stdif->driver               = driver;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   400      stdif->getFrequency         =(IfxStdIf_Timer_GetFrequency        )&IfxGtm_Tom_Timer_getFrequency;
	ld.a	a15,[a4]16
.L673:
	ld.b	d15,[a4]30
.L674:
	add	d5,d4,#1
	mov.aa	a4,a15
.L403:
	mov	d4,d15
.L404:
	j	IfxGtm_Tom_Ch_setCompareOneShadow
.L329:
	
__IfxGtm_Tom_Timer_setTrigger_function_end:
	.size	IfxGtm_Tom_Timer_setTrigger,__IfxGtm_Tom_Timer_setTrigger_function_end-IfxGtm_Tom_Timer_setTrigger
.L204:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_stdIfTimerInit',code,cluster('IfxGtm_Tom_Timer_stdIfTimerInit')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_stdIfTimerInit'
	.align	2
	
	.global	IfxGtm_Tom_Timer_stdIfTimerInit

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   401      stdif->getPeriod            =(IfxStdIf_Timer_GetPeriod           )&IfxGtm_Tom_Timer_getPeriod;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   402      stdif->getResolution        =(IfxStdIf_Timer_GetResolution       )&IfxGtm_Tom_Timer_getResolution;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   403      stdif->getTrigger           =(IfxStdIf_Timer_GetTrigger          )&IfxGtm_Tom_Timer_getTrigger;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   404      stdif->setFrequency         =(IfxStdIf_Timer_SetFrequency        )&IfxGtm_Tom_Timer_setFrequency;
; Function IfxGtm_Tom_Timer_stdIfTimerInit
.L96:
IfxGtm_Tom_Timer_stdIfTimerInit:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   405      stdif->updateInputFrequency =(IfxStdIf_Timer_UpdateInputFrequency)&IfxGtm_Tom_Timer_updateInputFrequency;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   406      stdif->applyUpdate          =(IfxStdIf_Timer_ApplyUpdate         )&IfxGtm_Tom_Timer_applyUpdate;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   407      stdif->disableUpdate        =(IfxStdIf_Timer_DisableUpdate       )&IfxGtm_Tom_Timer_disableUpdate;
	mov	d4,#0
	mov.aa	a15,a4
.L406:
	mov	d5,#68
	mov.aa	a12,a5
.L407:
	call	memset
.L405:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   408      stdif->getInputFrequency    =(IfxStdIf_Timer_GetInputFrequency   )&IfxGtm_Tom_Timer_getInputFrequency;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   409      stdif->run                  =(IfxStdIf_Timer_Run                 )&IfxGtm_Tom_Timer_run;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   410      stdif->setPeriod            =(IfxStdIf_Timer_SetPeriod           )&IfxGtm_Tom_Timer_setPeriod;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   411      stdif->setSingleMode        =(IfxStdIf_Timer_SetSingleMode       )&IfxGtm_Tom_Timer_setSingleMode;
	st.a	[a15],a12
.L679:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   412      stdif->setTrigger           =(IfxStdIf_Timer_SetTrigger          )&IfxGtm_Tom_Timer_setTrigger;
	movh.a	a2,#@his(IfxGtm_Tom_Timer_getFrequency)
	lea	a2,[a2]@los(IfxGtm_Tom_Timer_getFrequency)
.L680:
	st.a	[a15]4,a2
.L681:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   413      stdif->stop                 =(IfxStdIf_Timer_Stop                )&IfxGtm_Tom_Timer_stop;
	movh.a	a2,#@his(IfxGtm_Tom_Timer_getPeriod)
	lea	a2,[a2]@los(IfxGtm_Tom_Timer_getPeriod)
.L682:
	st.a	[a15]8,a2
.L683:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   414      stdif->ackTimerIrq          =(IfxStdIf_Timer_AckTimerIrq         )&IfxGtm_Tom_Timer_acknowledgeTimerIrq;
	movh.a	a2,#@his(IfxGtm_Tom_Timer_getResolution)
	lea	a2,[a2]@los(IfxGtm_Tom_Timer_getResolution)
.L684:
	st.a	[a15]12,a2
.L685:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   415      stdif->ackTriggerIrq        =(IfxStdIf_Timer_AckTriggerIrq       )&IfxGtm_Tom_Timer_acknowledgeTriggerIrq;
	movh.a	a2,#@his(IfxGtm_Tom_Timer_getTrigger)
	lea	a2,[a2]@los(IfxGtm_Tom_Timer_getTrigger)
.L686:
	st.a	[a15]16,a2
.L687:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   416      /* *INDENT-ON* */
	movh.a	a2,#@his(IfxGtm_Tom_Timer_setFrequency)
	lea	a2,[a2]@los(IfxGtm_Tom_Timer_setFrequency)
.L688:
	st.a	[a15]20,a2
.L689:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   417  
	movh.a	a2,#@his(IfxGtm_Tom_Timer_updateInputFrequency)
	lea	a2,[a2]@los(IfxGtm_Tom_Timer_updateInputFrequency)
.L690:
	st.a	[a15]24,a2
.L691:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   418      return TRUE;
	movh.a	a2,#@his(IfxGtm_Tom_Timer_applyUpdate)
	lea	a2,[a2]@los(IfxGtm_Tom_Timer_applyUpdate)
.L692:
	st.a	[a15]28,a2
.L693:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   419  }
	movh.a	a2,#@his(IfxGtm_Tom_Timer_disableUpdate)
	lea	a2,[a2]@los(IfxGtm_Tom_Timer_disableUpdate)
.L694:
	st.a	[a15]32,a2
.L695:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   420  
	movh.a	a2,#@his(IfxGtm_Tom_Timer_getInputFrequency)
	lea	a2,[a2]@los(IfxGtm_Tom_Timer_getInputFrequency)
.L696:
	st.a	[a15]36,a2
.L697:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   421  
	movh.a	a2,#@his(IfxGtm_Tom_Timer_run)
	lea	a2,[a2]@los(IfxGtm_Tom_Timer_run)
.L698:
	st.a	[a15]40,a2
.L699:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   422  void IfxGtm_Tom_Timer_stop(IfxGtm_Tom_Timer *driver)
	movh.a	a2,#@his(IfxGtm_Tom_Timer_setPeriod)
	lea	a2,[a2]@los(IfxGtm_Tom_Timer_setPeriod)
.L700:
	st.a	[a15]44,a2
.L701:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   423  {
	movh.a	a2,#@his(IfxGtm_Tom_Timer_setSingleMode)
	lea	a2,[a2]@los(IfxGtm_Tom_Timer_setSingleMode)
.L702:
	st.a	[a15]48,a2
.L703:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   424      IfxGtm_Tom_Tgc_enableChannels(driver->tgc[0], 0, driver->channelsMask[0], TRUE);
	movh.a	a2,#@his(IfxGtm_Tom_Timer_setTrigger)
	lea	a2,[a2]@los(IfxGtm_Tom_Timer_setTrigger)
.L704:
	st.a	[a15]52,a2
.L705:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   425  
	movh.a	a2,#@his(IfxGtm_Tom_Timer_stop)
	lea	a2,[a2]@los(IfxGtm_Tom_Timer_stop)
.L706:
	st.a	[a15]56,a2
.L707:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   426      if (driver->tgc[1])
	movh.a	a2,#@his(IfxGtm_Tom_Timer_acknowledgeTimerIrq)
	lea	a2,[a2]@los(IfxGtm_Tom_Timer_acknowledgeTimerIrq)
.L708:
	st.a	[a15]60,a2
.L709:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   427      {
	movh.a	a2,#@his(IfxGtm_Tom_Timer_acknowledgeTriggerIrq)
	lea	a2,[a2]@los(IfxGtm_Tom_Timer_acknowledgeTriggerIrq)
.L710:
	st.a	[a15]64,a2
.L711:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   428          IfxGtm_Tom_Tgc_enableChannels(driver->tgc[1], 0, driver->channelsMask[1], TRUE); /* Note: Write of 0 value has no effect */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   429      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   430  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   431  
	mov	d2,#1
	ret
.L332:
	
__IfxGtm_Tom_Timer_stdIfTimerInit_function_end:
	.size	IfxGtm_Tom_Timer_stdIfTimerInit,__IfxGtm_Tom_Timer_stdIfTimerInit_function_end-IfxGtm_Tom_Timer_stdIfTimerInit
.L209:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_stop',code,cluster('IfxGtm_Tom_Timer_stop')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_stop'
	.align	2
	
	.global	IfxGtm_Tom_Timer_stop

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   433  void IfxGtm_Tom_Timer_updateInputFrequency(IfxGtm_Tom_Timer *driver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   434  {
; Function IfxGtm_Tom_Timer_stop
.L98:
IfxGtm_Tom_Timer_stop:	.type	func
	mov.aa	a15,a4
.L409:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   435      driver->base.clockFreq = IfxGtm_Tom_Ch_getClockFrequency(driver->gtm, driver->tom, driver->timerChannel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\Timer\IfxGtm_Tom_Timer.c	   436  }
	ld.a	a4,[a15]20
.L408:
	mov	d4,#0
	ld.hu	d5,[a15]32
.L716:
	mov	d6,#1
	call	IfxGtm_Tom_Tgc_enableChannels
.L717:


	ld.a	a4,[a15]24
.L718:


	jz.a	a4,.L50
.L719:


	mov	d4,#0


	ld.hu	d5,[a15]34
.L720:


	mov	d6,#1


	j	IfxGtm_Tom_Tgc_enableChannels


.L50:


	ret
.L336:
	
__IfxGtm_Tom_Timer_stop_function_end:
	.size	IfxGtm_Tom_Timer_stop,__IfxGtm_Tom_Timer_stop_function_end-IfxGtm_Tom_Timer_stop
.L214:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_updateInputFrequency',code,cluster('IfxGtm_Tom_Timer_updateInputFrequency')
	.sect	'.text.IfxGtm_Tom_Timer.IfxGtm_Tom_Timer_updateInputFrequency'
	.align	2
	
	.global	IfxGtm_Tom_Timer_updateInputFrequency


; Function IfxGtm_Tom_Timer_updateInputFrequency
.L100:
IfxGtm_Tom_Timer_updateInputFrequency:	.type	func


	mov.aa	a15,a4
.L411:


	ld.a	a4,[a15]12
.L410:


	ld.a	a5,[a15]16
.L725:


	ld.b	d4,[a15]29


	call	IfxGtm_Tom_Ch_getClockFrequency
.L726:


	st.w	[a15]6,d2
.L727:


	ret
.L338:
	
__IfxGtm_Tom_Timer_updateInputFrequency_function_end:
	.size	IfxGtm_Tom_Timer_updateInputFrequency,__IfxGtm_Tom_Timer_updateInputFrequency_function_end-IfxGtm_Tom_Timer_updateInputFrequency
.L219:
	; End of function
	
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_acknowledgeTimerIrq'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_acknowledgeTriggerIrq'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_applyUpdate'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_disableUpdate'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_getFrequency'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_getInputFrequency'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_getPeriod'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_getResolution'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_getTrigger'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_run'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_setFrequency'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_setPeriod'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_setSingleMode'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_setTrigger'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_stop'
	.calls	'__INDIRECT__','IfxGtm_Tom_Timer_updateInputFrequency'
	.calls	'IfxGtm_Tom_Timer_acknowledgeTimerIrq','IfxGtm_Tom_Ch_isZeroNotification'
	.calls	'IfxGtm_Tom_Timer_acknowledgeTimerIrq','IfxGtm_Tom_Ch_clearZeroNotification'
	.calls	'IfxGtm_Tom_Timer_acknowledgeTriggerIrq','IfxGtm_Tom_Ch_isOneNotification'
	.calls	'IfxGtm_Tom_Timer_acknowledgeTriggerIrq','IfxGtm_Tom_Ch_clearOneNotification'
	.calls	'IfxGtm_Tom_Timer_addToChannelMask','IfxGtm_Tom_Tgc_buildFeature'
	.calls	'IfxGtm_Tom_Timer_getPointer','IfxGtm_Tom_Ch_getTimerPointer'
	.calls	'IfxGtm_Tom_Timer_getTrigger','IfxGtm_Tom_Ch_getCompareOne'
	.calls	'IfxGtm_Tom_Timer_getTriggerPointer','IfxGtm_Tom_Ch_getCompareOnePointer'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Ch_getTgcPointer'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Ch_setClockSource'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Ch_setTriggerOutput'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Timer_updateInputFrequency'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Timer_setFrequency'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Ch_setCounterValue'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Timer_addToChannelMask'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Ch_setSignalLevel'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Ch_setResetSource'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Tgc_enableChannels'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Tgc_enableChannelsOutput'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_PinMap_setTomTout'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Timer_setTrigger'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Ch_setNotification'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Ch_getSrcPointer'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Tgc_setChannelsForceUpdate'
	.calls	'IfxGtm_Tom_Timer_init','IfxGtm_Tom_Tgc_trigger'
	.calls	'IfxGtm_Tom_Timer_initConfig','IfxStdIf_Timer_initConfig'
	.calls	'IfxGtm_Tom_Timer_run','IfxGtm_Tom_Tgc_enableChannels'
	.calls	'IfxGtm_Tom_Timer_setFrequency','IfxGtm_Tom_Timer_setPeriod'
	.calls	'IfxGtm_Tom_Timer_setPeriod','IfxGtm_Tom_Ch_setCompareZeroShadow'
	.calls	'IfxGtm_Tom_Timer_setSingleMode','IfxGtm_Tom_Ch_setOneShotMode'
	.calls	'IfxGtm_Tom_Timer_setTrigger','IfxGtm_Tom_Ch_setCompareOneShadow'
	.calls	'IfxGtm_Tom_Timer_stdIfTimerInit','memset'
	.calls	'IfxGtm_Tom_Timer_stop','IfxGtm_Tom_Tgc_enableChannels'
	.calls	'IfxGtm_Tom_Timer_updateInputFrequency','IfxGtm_Tom_Ch_getClockFrequency'
	.calls	'IfxGtm_Tom_Timer_acknowledgeTimerIrq','.cocofun_2'
	.calls	'IfxGtm_Tom_Timer_init','.cocofun_2'
	.calls	'IfxGtm_Tom_Timer_init','.cocofun_1'
	.calls	'IfxGtm_Tom_Timer_setPeriod','.cocofun_2'
	.calls	'IfxGtm_Tom_Timer_acknowledgeTimerIrq','',0
	.calls	'.cocofun_2','',0
	.calls	'IfxGtm_Tom_Timer_acknowledgeTriggerIrq','',0
	.calls	'IfxGtm_Tom_Timer_addToChannelMask','',0
	.calls	'IfxGtm_Tom_Timer_applyUpdate','',0
	.calls	'IfxGtm_Tom_Timer_disableUpdate','',0
	.calls	'IfxGtm_Tom_Timer_getFrequency','',0
	.calls	'IfxGtm_Tom_Timer_getInputFrequency','',0
	.calls	'IfxGtm_Tom_Timer_getOffset','',0
	.calls	'IfxGtm_Tom_Timer_getPeriod','',0
	.calls	'IfxGtm_Tom_Timer_getPointer','',0
	.calls	'IfxGtm_Tom_Timer_getResolution','',0
	.calls	'IfxGtm_Tom_Timer_getTrigger','',0
	.calls	'IfxGtm_Tom_Timer_getTriggerPointer','',0
	.calls	'IfxGtm_Tom_Timer_init','',0
	.calls	'.cocofun_1','',0
	.calls	'IfxGtm_Tom_Timer_initConfig','',0
	.calls	'IfxGtm_Tom_Timer_run','',0
	.calls	'IfxGtm_Tom_Timer_setFrequency','',0
	.calls	'IfxGtm_Tom_Timer_setPeriod','',0
	.calls	'IfxGtm_Tom_Timer_setSingleMode','',0
	.calls	'IfxGtm_Tom_Timer_setTrigger','',0
	.calls	'IfxGtm_Tom_Timer_stdIfTimerInit','',0
	.calls	'IfxGtm_Tom_Timer_stop','',0
	.extern	IfxGtm_Tom_Ch_clearOneNotification
	.extern	IfxGtm_Tom_Ch_clearZeroNotification
	.extern	IfxGtm_Tom_Ch_getClockFrequency
	.extern	IfxGtm_Tom_Ch_getCompareOne
	.extern	IfxGtm_Tom_Ch_getCompareOnePointer
	.extern	IfxGtm_Tom_Ch_getSrcPointer
	.extern	IfxGtm_Tom_Ch_getTgcPointer
	.extern	IfxGtm_Tom_Ch_getTimerPointer
	.extern	IfxGtm_Tom_Ch_isOneNotification
	.extern	IfxGtm_Tom_Ch_isZeroNotification
	.extern	IfxGtm_Tom_Ch_setClockSource
	.extern	IfxGtm_Tom_Ch_setCompareOneShadow
	.extern	IfxGtm_Tom_Ch_setCompareZeroShadow
	.extern	IfxGtm_Tom_Ch_setCounterValue
	.extern	IfxGtm_Tom_Ch_setNotification
	.extern	IfxGtm_Tom_Ch_setOneShotMode
	.extern	IfxGtm_Tom_Ch_setResetSource
	.extern	IfxGtm_Tom_Ch_setSignalLevel
	.extern	IfxGtm_Tom_Ch_setTriggerOutput
	.extern	IfxGtm_Tom_Tgc_buildFeature
	.extern	IfxGtm_Tom_Tgc_enableChannels
	.extern	IfxGtm_Tom_Tgc_enableChannelsOutput
	.extern	IfxGtm_Tom_Tgc_setChannelsForceUpdate
	.extern	IfxGtm_Tom_Tgc_trigger
	.extern	IfxGtm_PinMap_setTomTout
	.extern	IfxStdIf_Timer_initConfig
	.extern	memset
	.extern	__INDIRECT__
	.calls	'IfxGtm_Tom_Timer_updateInputFrequency','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L102:
	.word	163435
	.half	3
	.word	.L103
	.byte	4
.L101:
	.byte	1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L104
	.byte	2,1,1,3
	.word	189
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	192
	.byte	6,0,7
	.byte	'__fract',0,4,128,1
.L307:
	.byte	7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	237
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	249
	.byte	6,0,9
	.byte	'void',0,10
	.word	303
	.byte	3
	.word	309
	.byte	7
	.byte	'unsigned int',0,4,7,4
	.byte	'__ldmst_c',0,3,2,111,17,1,1,5
	.byte	'address',0,2,111,42
	.word	314
	.byte	5
	.byte	'mask',0,2,111,60
	.word	319
	.byte	5
	.byte	'value',0,2,111,75
	.word	319
	.byte	6,0,7
	.byte	'unsigned long long int',0,8,7,3
	.word	303
	.byte	8
	.byte	'__ld64',0,3,2,135,1,19
	.word	397
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	423
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	423
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	397
	.byte	6,0,7
	.byte	'int',0,4,5
.L239:
	.byte	7
	.byte	'unsigned char',0,1,8
.L247:
	.byte	7
	.byte	'unsigned short int',0,2,7,11
	.byte	'_Ifx_P_OUT_Bits',0,4,143,3,16,4,12
	.byte	'P0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'P2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'P3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'P4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'P5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'P6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'P7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'P8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'P9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'P10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'P11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'P12',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'P13',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'P14',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'P15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	533
	.byte	16,0,2,35,2,0,13,4,181,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	555
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMR_Bits',0,4,169,2,16,4,12
	.byte	'PS0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'PS4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'PS8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'PS12',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'PCL0',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'PCL4',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	516
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	516
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'PCL8',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'PCL12',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	516
	.byte	1,0,2,35,3,0,13,4,133,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	871
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_ID_Bits',0,4,110,16,4,12
	.byte	'MODREV',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'MODTYPE',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'MODNUMBER',0,2
	.word	533
	.byte	16,0,2,35,2,0,13,4,148,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1442
	.byte	4,2,35,0,0,15,4
	.word	516
	.byte	16,3,0,11
	.byte	'_Ifx_P_IOCR0_Bits',0,4,140,1,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	3,5,2,35,0,12
	.byte	'PC0',0,1
	.word	516
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	3,5,2,35,1,12
	.byte	'PC1',0,1
	.word	516
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	516
	.byte	3,5,2,35,2,12
	.byte	'PC2',0,1
	.word	516
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	3,5,2,35,3,12
	.byte	'PC3',0,1
	.word	516
	.byte	5,0,2,35,3,0,13,4,164,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1570
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR4_Bits',0,4,166,1,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	3,5,2,35,0,12
	.byte	'PC4',0,1
	.word	516
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	3,5,2,35,1,12
	.byte	'PC5',0,1
	.word	516
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	516
	.byte	3,5,2,35,2,12
	.byte	'PC6',0,1
	.word	516
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	3,5,2,35,3,12
	.byte	'PC7',0,1
	.word	516
	.byte	5,0,2,35,3,0,13,4,180,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1785
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR8_Bits',0,4,179,1,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	3,5,2,35,0,12
	.byte	'PC8',0,1
	.word	516
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	3,5,2,35,1,12
	.byte	'PC9',0,1
	.word	516
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	516
	.byte	3,5,2,35,2,12
	.byte	'PC10',0,1
	.word	516
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	3,5,2,35,3,12
	.byte	'PC11',0,1
	.word	516
	.byte	5,0,2,35,3,0,13,4,188,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2000
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR12_Bits',0,4,153,1,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	3,5,2,35,0,12
	.byte	'PC12',0,1
	.word	516
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	3,5,2,35,1,12
	.byte	'PC13',0,1
	.word	516
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	516
	.byte	3,5,2,35,2,12
	.byte	'PC14',0,1
	.word	516
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	3,5,2,35,3,12
	.byte	'PC15',0,1
	.word	516
	.byte	5,0,2,35,3,0,13,4,172,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2217
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IN_Bits',0,4,118,16,4,12
	.byte	'P0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'P2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'P3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'P4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'P5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'P6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'P7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'P8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'P9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'P10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'P11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'P12',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'P13',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'P14',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'P15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	533
	.byte	16,0,2,35,2,0,13,4,156,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2437
	.byte	4,2,35,0,0,15,24
	.word	516
	.byte	16,23,0,11
	.byte	'_Ifx_P_PDR0_Bits',0,4,205,3,16,4,12
	.byte	'PD0',0,1
	.word	516
	.byte	3,5,2,35,0,12
	.byte	'PL0',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'PD1',0,1
	.word	516
	.byte	3,1,2,35,0,12
	.byte	'PL1',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'PD2',0,1
	.word	516
	.byte	3,5,2,35,1,12
	.byte	'PL2',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'PD3',0,1
	.word	516
	.byte	3,1,2,35,1,12
	.byte	'PL3',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'PD4',0,1
	.word	516
	.byte	3,5,2,35,2,12
	.byte	'PL4',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'PD5',0,1
	.word	516
	.byte	3,1,2,35,2,12
	.byte	'PL5',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'PD6',0,1
	.word	516
	.byte	3,5,2,35,3,12
	.byte	'PL6',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'PD7',0,1
	.word	516
	.byte	3,1,2,35,3,12
	.byte	'PL7',0,1
	.word	516
	.byte	1,0,2,35,3,0,13,4,205,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2760
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_PDR1_Bits',0,4,226,3,16,4,12
	.byte	'PD8',0,1
	.word	516
	.byte	3,5,2,35,0,12
	.byte	'PL8',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'PD9',0,1
	.word	516
	.byte	3,1,2,35,0,12
	.byte	'PL9',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'PD10',0,1
	.word	516
	.byte	3,5,2,35,1,12
	.byte	'PL10',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'PD11',0,1
	.word	516
	.byte	3,1,2,35,1,12
	.byte	'PL11',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'PD12',0,1
	.word	516
	.byte	3,5,2,35,2,12
	.byte	'PL12',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'PD13',0,1
	.word	516
	.byte	3,1,2,35,2,12
	.byte	'PL13',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'PD14',0,1
	.word	516
	.byte	3,5,2,35,3,12
	.byte	'PL14',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'PD15',0,1
	.word	516
	.byte	3,1,2,35,3,12
	.byte	'PL15',0,1
	.word	516
	.byte	1,0,2,35,3,0,13,4,213,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3064
	.byte	4,2,35,0,0,15,8
	.word	516
	.byte	16,7,0,11
	.byte	'_Ifx_P_ESR_Bits',0,4,88,16,4,12
	.byte	'EN0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	533
	.byte	16,0,2,35,2,0,13,4,140,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3389
	.byte	4,2,35,0,0,15,12
	.word	516
	.byte	16,11,0,11
	.byte	'_Ifx_P_PDISC_Bits',0,4,183,3,16,4,12
	.byte	'PDIS0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PDIS1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'PDIS2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'PDIS3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'PDIS4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'PDIS5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'PDIS6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PDIS7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'PDIS8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'PDIS9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'PDIS10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'PDIS11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'PDIS12',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'PDIS13',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'PDIS14',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'PDIS15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	533
	.byte	16,0,2,35,2,0,13,4,197,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3729
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_PCSR_Bits',0,4,165,3,16,4,12
	.byte	'SEL0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'SEL1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'SEL2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'SEL3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'SEL4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'SEL5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'SEL6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'SEL7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	2,6,2,35,1,12
	.byte	'SEL10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'SEL11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,4
	.word	319
	.byte	19,1,2,35,0,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,13,4,189,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4095
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR0_Bits',0,4,206,2,16,4,12
	.byte	'PS0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	319
	.byte	28,0,2,35,0,0,13,4,149,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4381
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR4_Bits',0,4,227,2,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	4,4,2,35,0,12
	.byte	'PS4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	319
	.byte	24,0,2,35,0,0,13,4,165,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4528
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR8_Bits',0,4,238,2,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'PS8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,4
	.word	319
	.byte	20,0,2,35,0,0,13,4,173,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4697
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR12_Bits',0,4,216,2,16,4,12
	.byte	'reserved_0',0,2
	.word	533
	.byte	12,4,2,35,0,12
	.byte	'PS12',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	533
	.byte	16,0,2,35,2,0,13,4,157,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4869
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR0_Bits',0,4,232,1,16,4,12
	.byte	'reserved_0',0,2
	.word	533
	.byte	16,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'reserved_20',0,2
	.word	533
	.byte	12,0,2,35,2,0,13,4,229,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5044
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR4_Bits',0,4,253,1,16,4,12
	.byte	'reserved_0',0,4
	.word	319
	.byte	20,12,2,35,0,12
	.byte	'PCL4',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	516
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	516
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	8,0,2,35,3,0,13,4,245,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5218
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR8_Bits',0,4,136,2,16,4,12
	.byte	'reserved_0',0,4
	.word	319
	.byte	24,8,2,35,0,12
	.byte	'PCL8',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	516
	.byte	4,0,2,35,3,0,13,4,253,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5392
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR12_Bits',0,4,243,1,16,4,12
	.byte	'reserved_0',0,4
	.word	319
	.byte	28,4,2,35,0,12
	.byte	'PCL12',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	516
	.byte	1,0,2,35,3,0,13,4,237,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5568
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR_Bits',0,4,249,2,16,4,12
	.byte	'PS0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'PS4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'PS8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'PS12',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	533
	.byte	16,0,2,35,2,0,13,4,141,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5724
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR_Bits',0,4,147,2,16,4,12
	.byte	'reserved_0',0,2
	.word	533
	.byte	16,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'PCL4',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	516
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	516
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'PCL8',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'PCL12',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	516
	.byte	1,0,2,35,3,0,13,4,221,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6057
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_LPCR0_Bits',0,4,192,1,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	319
	.byte	30,0,2,35,0,0,13,4,196,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6405
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_LPCR1_Bits',0,4,200,1,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	319
	.byte	30,0,2,35,0,0,11
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,4,208,1,16,4,12
	.byte	'RDIS_CTRL',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'RX_DIS',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'TERM',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'LRXTERM',0,1
	.word	516
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	319
	.byte	24,0,2,35,0,0,13,4,204,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6529
	.byte	4,2,35,0,14
	.byte	'B_P21',0
	.word	6613
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_LPCR2_Bits',0,4,218,1,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'LVDSR',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'LVDSRL',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'reserved_10',0,1
	.word	516
	.byte	2,4,2,35,1,12
	.byte	'TDIS_CTRL',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'TX_DIS',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'TX_PD',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'TX_PWDPD',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	533
	.byte	16,0,2,35,2,0,13,4,213,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6793
	.byte	4,2,35,0,0,15,76
	.word	516
	.byte	16,75,0,11
	.byte	'_Ifx_P_ACCEN1_Bits',0,4,82,16,4,12
	.byte	'reserved_0',0,4
	.word	319
	.byte	32,0,2,35,0,0,13,4,132,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7046
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_ACCEN0_Bits',0,4,45,16,4,12
	.byte	'EN0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	516
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	516
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	516
	.byte	1,0,2,35,3,0,13,4,252,3,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7133
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P',0,4,229,5,25,128,2,14
	.byte	'OUT',0
	.word	831
	.byte	4,2,35,0,14
	.byte	'OMR',0
	.word	1402
	.byte	4,2,35,4,14
	.byte	'ID',0
	.word	1521
	.byte	4,2,35,8,14
	.byte	'reserved_C',0
	.word	1561
	.byte	4,2,35,12,14
	.byte	'IOCR0',0
	.word	1745
	.byte	4,2,35,16,14
	.byte	'IOCR4',0
	.word	1960
	.byte	4,2,35,20,14
	.byte	'IOCR8',0
	.word	2177
	.byte	4,2,35,24,14
	.byte	'IOCR12',0
	.word	2397
	.byte	4,2,35,28,14
	.byte	'reserved_20',0
	.word	1561
	.byte	4,2,35,32,14
	.byte	'IN',0
	.word	2711
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	2751
	.byte	24,2,35,40,14
	.byte	'PDR0',0
	.word	3024
	.byte	4,2,35,64,14
	.byte	'PDR1',0
	.word	3340
	.byte	4,2,35,68,14
	.byte	'reserved_48',0
	.word	3380
	.byte	8,2,35,72,14
	.byte	'ESR',0
	.word	3680
	.byte	4,2,35,80,14
	.byte	'reserved_54',0
	.word	3720
	.byte	12,2,35,84,14
	.byte	'PDISC',0
	.word	4055
	.byte	4,2,35,96,14
	.byte	'PCSR',0
	.word	4341
	.byte	4,2,35,100,14
	.byte	'reserved_68',0
	.word	3380
	.byte	8,2,35,104,14
	.byte	'OMSR0',0
	.word	4488
	.byte	4,2,35,112,14
	.byte	'OMSR4',0
	.word	4657
	.byte	4,2,35,116,14
	.byte	'OMSR8',0
	.word	4829
	.byte	4,2,35,120,14
	.byte	'OMSR12',0
	.word	5004
	.byte	4,2,35,124,14
	.byte	'OMCR0',0
	.word	5178
	.byte	4,3,35,128,1,14
	.byte	'OMCR4',0
	.word	5352
	.byte	4,3,35,132,1,14
	.byte	'OMCR8',0
	.word	5528
	.byte	4,3,35,136,1,14
	.byte	'OMCR12',0
	.word	5684
	.byte	4,3,35,140,1,14
	.byte	'OMSR',0
	.word	6017
	.byte	4,3,35,144,1,14
	.byte	'OMCR',0
	.word	6365
	.byte	4,3,35,148,1,14
	.byte	'reserved_98',0
	.word	3380
	.byte	8,3,35,152,1,14
	.byte	'LPCR0',0
	.word	6489
	.byte	4,3,35,160,1,14
	.byte	'LPCR1',0
	.word	6738
	.byte	4,3,35,164,1,14
	.byte	'LPCR2',0
	.word	6997
	.byte	4,3,35,168,1,14
	.byte	'reserved_A4',0
	.word	7037
	.byte	76,3,35,172,1,14
	.byte	'ACCEN1',0
	.word	7093
	.byte	4,3,35,248,1,14
	.byte	'ACCEN0',0
	.word	7660
	.byte	4,3,35,252,1,0,10
	.word	7700
	.byte	3
	.word	8303
	.byte	17,3,172,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,3,208,4,17,1,1,5
	.byte	'port',0,3,208,4,44
	.word	8308
	.byte	5
	.byte	'pinIndex',0,3,208,4,56
	.word	516
	.byte	5
	.byte	'action',0,3,208,4,80
	.word	8313
	.byte	6,0,11
	.byte	'_Ifx_SRC_SRCR_Bits',0,6,45,16,4,12
	.byte	'SRPN',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	2,6,2,35,1,12
	.byte	'SRE',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'TOS',0,1
	.word	516
	.byte	2,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	516
	.byte	3,0,2,35,1,12
	.byte	'ECC',0,1
	.word	516
	.byte	6,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	516
	.byte	2,0,2,35,2,12
	.byte	'SRR',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'CLRR',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'SETR',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'IOV',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'IOVCLR',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'SWS',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'SWSCLR',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	516
	.byte	1,0,2,35,3,0,13,6,70,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	8494
	.byte	4,2,35,0,0,10
	.word	8784
.L261:
	.byte	3
	.word	8823
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,5,250,1,17,1,1,5
	.byte	'src',0,5,250,1,60
	.word	8828
	.byte	6,0,4
	.byte	'IfxSrc_enable',0,3,5,140,2,17,1,1,5
	.byte	'src',0,5,140,2,54
	.word	8828
	.byte	6,0,17,7,69,9,1,18
	.byte	'IfxSrc_Tos_cpu0',0,0,18
	.byte	'IfxSrc_Tos_cpu1',0,1,18
	.byte	'IfxSrc_Tos_dma',0,3,0
.L265:
	.byte	4
	.byte	'IfxSrc_init',0,3,5,146,2,17,1,1
.L267:
	.byte	5
	.byte	'src',0,5,146,2,52
	.word	8828
.L269:
	.byte	5
	.byte	'typOfService',0,5,146,2,68
	.word	8913
.L271:
	.byte	5
	.byte	'priority',0,5,146,2,95
	.word	533
.L273:
	.byte	19,6,0,0,7
	.byte	'unsigned int',0,4,7,11
	.byte	'_Ifx_GTM_ATOM_CH_RDADDR_Bits',0,9,171,3,16,4,12
	.byte	'RDADDR0',0,4
	.word	9049
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	7,16,2,35,0,12
	.byte	'RDADDR1',0,4
	.word	9049
	.byte	9,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	9049
	.byte	7,0,2,35,0,0,13,9,224,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	9065
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CTRL_Bits',0,9,245,2,16,4,12
	.byte	'MODE',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'TB12_SEL',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'ACB',0,4
	.word	9049
	.byte	5,23,2,35,0,12
	.byte	'CMP_CTRL',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'SL',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC',0,4
	.word	9049
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'WR_REQ',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	9049
	.byte	3,12,2,35,0,12
	.byte	'RST_CCU0',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	9049
	.byte	3,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'SLA',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'OSM',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'ABM',0,4
	.word	9049
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	9049
	.byte	4,0,2,35,0,0,13,9,184,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	9224
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMC_Bits',0,9,180,3,16,4,12
	.byte	'MODE',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'TB12_SEL',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'ACB10',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'ACB42',0,4
	.word	9049
	.byte	3,23,2,35,0,12
	.byte	'CMP_CTRL',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'SL',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	9049
	.byte	4,16,2,35,0,12
	.byte	'WR_REQ',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	9049
	.byte	7,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'SLA',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'ABM',0,4
	.word	9049
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	9049
	.byte	4,0,2,35,0,0,13,9,232,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	9637
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMI_Bits',0,9,201,3,16,4,12
	.byte	'MODE',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'ACB0',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	9049
	.byte	6,21,2,35,0,12
	.byte	'SL',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	9049
	.byte	20,0,2,35,0,0,13,9,240,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	10015
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMP_Bits',0,9,213,3,16,4,12
	.byte	'MODE',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'ADL',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	9049
	.byte	5,21,2,35,0,12
	.byte	'SL',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC_SR',0,4
	.word	9049
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	9049
	.byte	5,12,2,35,0,12
	.byte	'RST_CCU0',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	9049
	.byte	3,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'OSM',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	9049
	.byte	5,0,2,35,0,0,13,9,248,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	10220
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMS_Bits',0,9,232,3,16,4,12
	.byte	'MODE',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'ACB0',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	9049
	.byte	6,21,2,35,0,12
	.byte	'SL',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC',0,4
	.word	9049
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	9049
	.byte	11,6,2,35,0,12
	.byte	'OSM',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	9049
	.byte	5,0,2,35,0,0,13,9,128,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	10569
	.byte	4,2,35,0,0,13,9,177,55,5,4,14
	.byte	'CTRL',0
	.word	9597
	.byte	4,2,35,0,14
	.byte	'SOMC',0
	.word	9975
	.byte	4,2,35,0,14
	.byte	'SOMI',0
	.word	10180
	.byte	4,2,35,0,14
	.byte	'SOMP',0
	.word	10529
	.byte	4,2,35,0,14
	.byte	'SOMS',0
	.word	10791
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SR0_Bits',0,9,247,3,16,4,12
	.byte	'SR0',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,136,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	10908
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SR1_Bits',0,9,254,3,16,4,12
	.byte	'SR1',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,144,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11019
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CM0_Bits',0,9,224,2,16,4,12
	.byte	'CM0',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,160,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11130
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CM1_Bits',0,9,231,2,16,4,12
	.byte	'CM1',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,168,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11241
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CN0_Bits',0,9,238,2,16,4,12
	.byte	'CN0',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,176,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11352
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_STAT_Bits',0,9,133,4,16,4,12
	.byte	'OL',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	9049
	.byte	15,16,2,35,0,12
	.byte	'ACBI',0,4
	.word	9049
	.byte	5,11,2,35,0,12
	.byte	'DV',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'WRF',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'ACBO',0,4
	.word	9049
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	9049
	.byte	3,0,2,35,0,0,13,9,152,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11463
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_NOTIFY_Bits',0,9,163,3,16,4,12
	.byte	'CCU0TC',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	30,0,2,35,0,0,13,9,216,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11680
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_EN_Bits',0,9,140,3,16,4,12
	.byte	'CCU0TC_IRQ_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC_IRQ_EN',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	30,0,2,35,0,0,13,9,192,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11818
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_FORCINT_Bits',0,9,148,3,16,4,12
	.byte	'TRG_CCU0TC',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'TRG_CCU1TC',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	30,0,2,35,0,0,13,9,200,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11966
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_MODE_Bits',0,9,156,3,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	30,0,2,35,0,0,13,9,208,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12113
	.byte	4,2,35,0,0,15,16
	.word	516
	.byte	16,15,0,11
	.byte	'_Ifx_GTM_ATOM_CH',0,9,174,55,25,64,14
	.byte	'RDADDR',0
	.word	9184
	.byte	4,2,35,0,20
	.word	10831
	.byte	4,2,35,4,14
	.byte	'SR0',0
	.word	10979
	.byte	4,2,35,8,14
	.byte	'SR1',0
	.word	11090
	.byte	4,2,35,12,14
	.byte	'CM0',0
	.word	11201
	.byte	4,2,35,16,14
	.byte	'CM1',0
	.word	11312
	.byte	4,2,35,20,14
	.byte	'CN0',0
	.word	11423
	.byte	4,2,35,24,14
	.byte	'STAT',0
	.word	11640
	.byte	4,2,35,28,14
	.byte	'IRQ_NOTIFY',0
	.word	11778
	.byte	4,2,35,32,14
	.byte	'IRQ_EN',0
	.word	11926
	.byte	4,2,35,36,14
	.byte	'IRQ_FORCINT',0
	.word	12073
	.byte	4,2,35,40,14
	.byte	'IRQ_MODE',0
	.word	12193
	.byte	4,2,35,44,14
	.byte	'reserved_30',0
	.word	12233
	.byte	16,2,35,48,0,10
	.word	12242
	.byte	3
	.word	12466
	.byte	10
	.word	12242
	.byte	11
	.byte	'_Ifx_GTM_ATOM_AGC_GLB_CTRL_Bits',0,9,159,2,16,4,12
	.byte	'HOST_TRIG',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	9049
	.byte	7,24,2,35,0,12
	.byte	'RST_CH0',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'UPEN_CTRL0',0,4
	.word	9049
	.byte	2,14,2,35,0,12
	.byte	'UPEN_CTRL1',0,4
	.word	9049
	.byte	2,12,2,35,0,12
	.byte	'UPEN_CTRL2',0,4
	.word	9049
	.byte	2,10,2,35,0,12
	.byte	'UPEN_CTRL3',0,4
	.word	9049
	.byte	2,8,2,35,0,12
	.byte	'UPEN_CTRL4',0,4
	.word	9049
	.byte	2,6,2,35,0,12
	.byte	'UPEN_CTRL5',0,4
	.word	9049
	.byte	2,4,2,35,0,12
	.byte	'UPEN_CTRL6',0,4
	.word	9049
	.byte	2,2,2,35,0,12
	.byte	'UPEN_CTRL7',0,4
	.word	9049
	.byte	2,0,2,35,0,0,13,9,128,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12481
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_ENDIS_CTRL_Bits',0,9,238,1,16,4,12
	.byte	'ENDIS_CTRL0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CTRL1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CTRL2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_CTRL3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_CTRL4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_CTRL5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_CTRL6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_CTRL7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,232,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12931
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_ENDIS_STAT_Bits',0,9,252,1,16,4,12
	.byte	'ENDIS_STAT0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_STAT1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_STAT2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_STAT3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_STAT4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_STAT5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_STAT6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_STAT7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,240,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13219
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_ACT_TB_Bits',0,9,229,1,16,4,12
	.byte	'ACT_TB',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'TB_TRIG',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'TBU_SEL',0,4
	.word	9049
	.byte	2,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	9049
	.byte	5,0,2,35,0,0,13,9,224,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13507
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_OUTEN_CTRL_Bits',0,9,196,2,16,4,12
	.byte	'OUTEN_CTRL0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_CTRL1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_CTRL2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_CTRL3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_CTRL4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_CTRL5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_CTRL6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_CTRL7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,144,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13663
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_OUTEN_STAT_Bits',0,9,210,2,16,4,12
	.byte	'OUTEN_STAT0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_STAT1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_STAT2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_STAT3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_STAT4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_STAT5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_STAT6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_STAT7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,152,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13951
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_FUPD_CTRL_Bits',0,9,138,2,16,4,12
	.byte	'FUPD_CTRL0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'FUPD_CTRL1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'FUPD_CTRL2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'FUPD_CTRL3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'FUPD_CTRL4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'FUPD_CTRL5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'FUPD_CTRL6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'FUPD_CTRL7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'RSTCN0_CH0',0,4
	.word	9049
	.byte	2,14,2,35,0,12
	.byte	'RSTCN0_CH1',0,4
	.word	9049
	.byte	2,12,2,35,0,12
	.byte	'RSTCN0_CH2',0,4
	.word	9049
	.byte	2,10,2,35,0,12
	.byte	'RSTCN0_CH3',0,4
	.word	9049
	.byte	2,8,2,35,0,12
	.byte	'RSTCN0_CH4',0,4
	.word	9049
	.byte	2,6,2,35,0,12
	.byte	'RSTCN0_CH5',0,4
	.word	9049
	.byte	2,4,2,35,0,12
	.byte	'RSTCN0_CH6',0,4
	.word	9049
	.byte	2,2,2,35,0,12
	.byte	'RSTCN0_CH7',0,4
	.word	9049
	.byte	2,0,2,35,0,0,13,9,248,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14239
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_INT_TRIG_Bits',0,9,182,2,16,4,12
	.byte	'INT_TRIG0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'INT_TRIG1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'INT_TRIG2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'INT_TRIG3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'INT_TRIG4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'INT_TRIG5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'INT_TRIG6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'INT_TRIG7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,136,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14671
	.byte	4,2,35,0,0,15,32
	.word	516
	.byte	16,31,0,11
	.byte	'_Ifx_GTM_ATOM_AGC',0,9,160,55,25,64,14
	.byte	'GLB_CTRL',0
	.word	12891
	.byte	4,2,35,0,14
	.byte	'ENDIS_CTRL',0
	.word	13179
	.byte	4,2,35,4,14
	.byte	'ENDIS_STAT',0
	.word	13467
	.byte	4,2,35,8,14
	.byte	'ACT_TB',0
	.word	13623
	.byte	4,2,35,12,14
	.byte	'OUTEN_CTRL',0
	.word	13911
	.byte	4,2,35,16,14
	.byte	'OUTEN_STAT',0
	.word	14199
	.byte	4,2,35,20,14
	.byte	'FUPD_CTRL',0
	.word	14631
	.byte	4,2,35,24,14
	.byte	'INT_TRIG',0
	.word	14901
	.byte	4,2,35,28,14
	.byte	'reserved_20',0
	.word	14941
	.byte	32,2,35,32,0,10
	.word	14950
	.byte	10
	.word	12242
	.byte	15,64
	.word	516
	.byte	16,63,0,10
	.word	12242
	.byte	10
	.word	12242
	.byte	10
	.word	12242
	.byte	10
	.word	12242
	.byte	10
	.word	12242
	.byte	10
	.word	12242
	.byte	15,192,8
	.word	516
	.byte	16,191,8,0,11
	.byte	'_Ifx_GTM_ATOM',0,9,166,57,25,128,16,14
	.byte	'CH0',0
	.word	12476
	.byte	64,2,35,0,14
	.byte	'AGC',0
	.word	15147
	.byte	64,2,35,64,14
	.byte	'CH1',0
	.word	15152
	.byte	64,3,35,128,1,14
	.byte	'reserved_C0',0
	.word	15157
	.byte	64,3,35,192,1,14
	.byte	'CH2',0
	.word	15166
	.byte	64,3,35,128,2,14
	.byte	'reserved_140',0
	.word	15157
	.byte	64,3,35,192,2,14
	.byte	'CH3',0
	.word	15171
	.byte	64,3,35,128,3,14
	.byte	'reserved_1C0',0
	.word	15157
	.byte	64,3,35,192,3,14
	.byte	'CH4',0
	.word	15176
	.byte	64,3,35,128,4,14
	.byte	'reserved_240',0
	.word	15157
	.byte	64,3,35,192,4,14
	.byte	'CH5',0
	.word	15181
	.byte	64,3,35,128,5,14
	.byte	'reserved_2C0',0
	.word	15157
	.byte	64,3,35,192,5,14
	.byte	'CH6',0
	.word	15186
	.byte	64,3,35,128,6,14
	.byte	'reserved_340',0
	.word	15157
	.byte	64,3,35,192,6,14
	.byte	'CH7',0
	.word	15191
	.byte	64,3,35,128,7,14
	.byte	'reserved_3C0',0
	.word	15196
	.byte	192,8,3,35,192,7,0,10
	.word	15207
	.byte	3
	.word	15514
	.byte	17,10,222,1,9,1,18
	.byte	'IfxGtm_Atom_Ch_none',0,127,18
	.byte	'IfxGtm_Atom_Ch_0',0,0,18
	.byte	'IfxGtm_Atom_Ch_1',0,1,18
	.byte	'IfxGtm_Atom_Ch_2',0,2,18
	.byte	'IfxGtm_Atom_Ch_3',0,3,18
	.byte	'IfxGtm_Atom_Ch_4',0,4,18
	.byte	'IfxGtm_Atom_Ch_5',0,5,18
	.byte	'IfxGtm_Atom_Ch_6',0,6,18
	.byte	'IfxGtm_Atom_Ch_7',0,7,0,8
	.byte	'IfxGtm_Atom_Ch_getChannelPointer',0,3,8,204,4,29
	.word	12471
	.byte	1,1,5
	.byte	'atom',0,8,204,4,76
	.word	15519
	.byte	5
	.byte	'channel',0,8,204,4,97
	.word	15524
	.byte	6,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_GLB_CTRL_Bits',0,9,249,31,16,4,12
	.byte	'HOST_TRIG',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	9049
	.byte	7,24,2,35,0,12
	.byte	'RST_CH0',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'UPEN_CTRL0',0,4
	.word	9049
	.byte	2,14,2,35,0,12
	.byte	'UPEN_CTRL1',0,4
	.word	9049
	.byte	2,12,2,35,0,12
	.byte	'UPEN_CTRL2',0,4
	.word	9049
	.byte	2,10,2,35,0,12
	.byte	'UPEN_CTRL3',0,4
	.word	9049
	.byte	2,8,2,35,0,12
	.byte	'UPEN_CTRL4',0,4
	.word	9049
	.byte	2,6,2,35,0,12
	.byte	'UPEN_CTRL5',0,4
	.word	9049
	.byte	2,4,2,35,0,12
	.byte	'UPEN_CTRL6',0,4
	.word	9049
	.byte	2,2,2,35,0,12
	.byte	'UPEN_CTRL7',0,4
	.word	9049
	.byte	2,0,2,35,0,0,13,9,169,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15783
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_ACT_TB_Bits',0,9,191,31,16,4,12
	.byte	'ACT_TB',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'TB_TRIG',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'TBU_SEL',0,4
	.word	9049
	.byte	2,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	9049
	.byte	5,0,2,35,0,0,13,9,137,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	16233
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_FUPD_CTRL_Bits',0,9,228,31,16,4,12
	.byte	'FUPD_CTRL0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'FUPD_CTRL1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'FUPD_CTRL2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'FUPD_CTRL3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'FUPD_CTRL4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'FUPD_CTRL5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'FUPD_CTRL6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'FUPD_CTRL7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'RSTCN0_CH0',0,4
	.word	9049
	.byte	2,14,2,35,0,12
	.byte	'RSTCN0_CH1',0,4
	.word	9049
	.byte	2,12,2,35,0,12
	.byte	'RSTCN0_CH2',0,4
	.word	9049
	.byte	2,10,2,35,0,12
	.byte	'RSTCN0_CH3',0,4
	.word	9049
	.byte	2,8,2,35,0,12
	.byte	'RSTCN0_CH4',0,4
	.word	9049
	.byte	2,6,2,35,0,12
	.byte	'RSTCN0_CH5',0,4
	.word	9049
	.byte	2,4,2,35,0,12
	.byte	'RSTCN0_CH6',0,4
	.word	9049
	.byte	2,2,2,35,0,12
	.byte	'RSTCN0_CH7',0,4
	.word	9049
	.byte	2,0,2,35,0,0,13,9,161,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	16389
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_INT_TRIG_Bits',0,9,144,32,16,4,12
	.byte	'INT_TRIG0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'INT_TRIG1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'INT_TRIG2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'INT_TRIG3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'INT_TRIG4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'INT_TRIG5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'INT_TRIG6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'INT_TRIG7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,177,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	16821
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_CTRL_Bits',0,9,249,30,16,4,12
	.byte	'reserved_0',0,4
	.word	9049
	.byte	11,21,2,35,0,12
	.byte	'SL',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC_SR',0,4
	.word	9049
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	9049
	.byte	5,12,2,35,0,12
	.byte	'RST_CCU0',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	9049
	.byte	3,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'OSM',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'BITREV',0,4
	.word	9049
	.byte	1,4,2,35,0,12
	.byte	'SPEM',0,4
	.word	9049
	.byte	1,3,2,35,0,12
	.byte	'GCM',0,4
	.word	9049
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	9049
	.byte	2,0,2,35,0,0,13,9,201,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17091
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_SR0_Bits',0,9,170,31,16,4,12
	.byte	'SR0',0,4
	.word	9049
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,241,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17417
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_SR1_Bits',0,9,177,31,16,4,12
	.byte	'SR1',0,4
	.word	9049
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,249,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17527
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_CM0_Bits',0,9,228,30,16,4,12
	.byte	'CM0',0,4
	.word	9049
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,177,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17637
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_CM1_Bits',0,9,235,30,16,4,12
	.byte	'CM1',0,4
	.word	9049
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,185,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17747
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_CN0_Bits',0,9,242,30,16,4,12
	.byte	'CN0',0,4
	.word	9049
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,193,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17857
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_STAT_Bits',0,9,184,31,16,4,12
	.byte	'OL',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	9049
	.byte	31,0,2,35,0,0,13,9,129,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17967
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits',0,9,162,31,16,4,12
	.byte	'CCU0TC',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	30,0,2,35,0,0,13,9,233,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18076
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_EN_Bits',0,9,139,31,16,4,12
	.byte	'CCU0TC_IRQ_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC_IRQ_EN',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	30,0,2,35,0,0,13,9,209,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18213
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits',0,9,147,31,16,4,12
	.byte	'TRG_CCU0TC0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'TRG_CCU1TC0',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	30,0,2,35,0,0,13,9,217,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18360
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_MODE_Bits',0,9,155,31,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	30,0,2,35,0,0,13,9,225,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18508
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH',0,9,243,56,25,48,14
	.byte	'CTRL',0
	.word	17377
	.byte	4,2,35,0,14
	.byte	'SR0',0
	.word	17487
	.byte	4,2,35,4,14
	.byte	'SR1',0
	.word	17597
	.byte	4,2,35,8,14
	.byte	'CM0',0
	.word	17707
	.byte	4,2,35,12,14
	.byte	'CM1',0
	.word	17817
	.byte	4,2,35,16,14
	.byte	'CN0',0
	.word	17927
	.byte	4,2,35,20,14
	.byte	'STAT',0
	.word	18036
	.byte	4,2,35,24,14
	.byte	'IRQ_NOTIFY',0
	.word	18173
	.byte	4,2,35,28,14
	.byte	'IRQ_EN',0
	.word	18320
	.byte	4,2,35,32,14
	.byte	'IRQ_FORCINT',0
	.word	18468
	.byte	4,2,35,36,14
	.byte	'IRQ_MODE',0
	.word	18587
	.byte	4,2,35,40,14
	.byte	'reserved_2C',0
	.word	1561
	.byte	4,2,35,44,0,10
	.word	18627
	.byte	11
	.byte	'_Ifx_GTM_TOM_TGC0_ENDIS_CTRL_Bits',0,9,200,31,16,4,12
	.byte	'ENDIS_CTRL0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CTRL1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CTRL2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_CTRL3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_CTRL4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_CTRL5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_CTRL6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_CTRL7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,145,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18844
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_ENDIS_STAT_Bits',0,9,214,31,16,4,12
	.byte	'ENDIS_STAT0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_STAT1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_STAT2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_STAT3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_STAT4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_STAT5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_STAT6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_STAT7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,153,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19132
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_OUTEN_CTRL_Bits',0,9,158,32,16,4,12
	.byte	'OUTEN_CTRL0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_CTRL1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_CTRL2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_CTRL3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_CTRL4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_CTRL5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_CTRL6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_CTRL7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,185,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19420
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_OUTEN_STAT_Bits',0,9,172,32,16,4,12
	.byte	'OUTEN_STAT0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_STAT1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_STAT2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_STAT3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_STAT4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_STAT5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_STAT6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_STAT7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,193,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19708
	.byte	4,2,35,0,0,11
	.byte	'IfxGtm_Tom_TGC',0,10,197,2,8,80,14
	.byte	'GLB_CTRL',0
	.word	16193
	.byte	4,2,35,0,14
	.byte	'ACT_TB',0
	.word	16349
	.byte	4,2,35,4,14
	.byte	'FUPD_CTRL',0
	.word	16781
	.byte	4,2,35,8,14
	.byte	'INT_TRIG',0
	.word	17051
	.byte	4,2,35,12,14
	.byte	'xxxCH1',0
	.word	18839
	.byte	48,2,35,16,14
	.byte	'ENDIS_CTRL',0
	.word	19092
	.byte	4,2,35,64,14
	.byte	'ENDIS_STAT',0
	.word	19380
	.byte	4,2,35,68,14
	.byte	'OUTEN_CTRL',0
	.word	19668
	.byte	4,2,35,72,14
	.byte	'OUTEN_STAT',0
	.word	19956
	.byte	4,2,35,76,0,10
	.word	19996
	.byte	3
	.word	20185
.L230:
	.byte	7
	.byte	'unsigned long int',0,4,7
.L293:
	.byte	4
	.byte	'IfxGtm_Tom_Tgc_writeGlobalControl',0,3,11,147,4,17,1,1
.L295:
	.byte	5
	.byte	'tgc',0,11,147,4,68
	.word	20190
.L297:
	.byte	5
	.byte	'control',0,11,147,4,80
	.word	20195
.L299:
	.byte	6,0,21
	.byte	'IfxStdIf_InterfaceDriver',0,13,118,15
	.word	423
	.byte	22
	.word	249
	.byte	1,1,23
	.word	423
	.byte	0,3
	.word	20323
	.byte	21
	.byte	'IfxStdIf_Timer_GetFrequency',0,12,102,19
	.word	20336
	.byte	22
	.word	20195
	.byte	1,1,23
	.word	423
	.byte	0,3
	.word	20377
	.byte	21
	.byte	'IfxStdIf_Timer_GetPeriod',0,12,108,26
	.word	20390
	.byte	21
	.byte	'IfxStdIf_Timer_GetResolution',0,12,114,19
	.word	20336
	.byte	21
	.byte	'IfxStdIf_Timer_GetTrigger',0,12,120,26
	.word	20390
	.byte	22
	.word	516
	.byte	1,1,23
	.word	423
	.byte	23
	.word	249
	.byte	0,3
	.word	20499
	.byte	21
	.byte	'IfxStdIf_Timer_SetFrequency',0,12,128,1,19
	.word	20517
	.byte	24,1,1,23
	.word	423
	.byte	0,3
	.word	20559
	.byte	21
	.byte	'IfxStdIf_Timer_UpdateInputFrequency',0,12,134,1,16
	.word	20568
	.byte	21
	.byte	'IfxStdIf_Timer_ApplyUpdate',0,12,155,1,16
	.word	20568
	.byte	21
	.byte	'IfxStdIf_Timer_DisableUpdate',0,12,172,1,16
	.word	20568
	.byte	21
	.byte	'IfxStdIf_Timer_GetInputFrequency',0,12,178,1,19
	.word	20336
	.byte	21
	.byte	'IfxStdIf_Timer_Run',0,12,187,1,16
	.word	20568
	.byte	22
	.word	516
	.byte	1,1,23
	.word	423
	.byte	23
	.word	20195
	.byte	0,3
	.word	20762
	.byte	21
	.byte	'IfxStdIf_Timer_SetPeriod',0,12,197,1,19
	.word	20780
	.byte	24,1,1,23
	.word	423
	.byte	23
	.word	516
	.byte	0,3
	.word	20819
	.byte	21
	.byte	'IfxStdIf_Timer_SetSingleMode',0,12,206,1,16
	.word	20833
	.byte	24,1,1,23
	.word	423
	.byte	23
	.word	20195
	.byte	0,3
	.word	20876
	.byte	21
	.byte	'IfxStdIf_Timer_SetTrigger',0,12,218,1,16
	.word	20890
	.byte	21
	.byte	'IfxStdIf_Timer_Stop',0,12,224,1,16
	.word	20568
	.byte	22
	.word	516
	.byte	1,1,23
	.word	423
	.byte	0,3
	.word	20959
	.byte	21
	.byte	'IfxStdIf_Timer_AckTimerIrq',0,12,230,1,19
	.word	20972
	.byte	21
	.byte	'IfxStdIf_Timer_AckTriggerIrq',0,12,236,1,19
	.word	20972
	.byte	11
	.byte	'IfxStdIf_Timer_',0,12,240,1,8,68,14
	.byte	'driver',0
	.word	20290
	.byte	4,2,35,0,14
	.byte	'getFrequency',0
	.word	20341
	.byte	4,2,35,4,14
	.byte	'getPeriod',0
	.word	20395
	.byte	4,2,35,8,14
	.byte	'getResolution',0
	.word	20428
	.byte	4,2,35,12,14
	.byte	'getTrigger',0
	.word	20465
	.byte	4,2,35,16,14
	.byte	'setFrequency',0
	.word	20522
	.byte	4,2,35,20,14
	.byte	'updateInputFrequency',0
	.word	20573
	.byte	4,2,35,24,14
	.byte	'applyUpdate',0
	.word	20618
	.byte	4,2,35,28,14
	.byte	'disableUpdate',0
	.word	20654
	.byte	4,2,35,32,14
	.byte	'getInputFrequency',0
	.word	20692
	.byte	4,2,35,36,14
	.byte	'run',0
	.word	20734
	.byte	4,2,35,40,14
	.byte	'setPeriod',0
	.word	20785
	.byte	4,2,35,44,14
	.byte	'setSingleMode',0
	.word	20838
	.byte	4,2,35,48,14
	.byte	'setTrigger',0
	.word	20895
	.byte	4,2,35,52,14
	.byte	'stop',0
	.word	20930
	.byte	4,2,35,56,14
	.byte	'ackTimerIrq',0
	.word	20977
	.byte	4,2,35,60,14
	.byte	'ackTriggerIrq',0
	.word	21013
	.byte	4,2,35,64,0
.L333:
	.byte	3
	.word	21051
	.byte	8
	.byte	'IfxStdIf_Timer_getInputFrequency',0,3,12,236,2,20
	.word	249
	.byte	1,1,5
	.byte	'stdIf',0,12,236,2,69
	.word	21430
	.byte	6,0,3
	.word	303
	.byte	3
	.word	20323
	.byte	3
	.word	20377
	.byte	3
	.word	20323
	.byte	3
	.word	20377
	.byte	3
	.word	20499
	.byte	3
	.word	20559
	.byte	3
	.word	20559
	.byte	3
	.word	20559
	.byte	3
	.word	20323
	.byte	3
	.word	20559
	.byte	3
	.word	20762
	.byte	3
	.word	20819
	.byte	3
	.word	20876
	.byte	3
	.word	20559
	.byte	3
	.word	20959
	.byte	3
	.word	20959
	.byte	8
	.byte	'IfxStdIf_Timer_tickToS',0,3,12,182,3,20
	.word	249
	.byte	1,1,5
	.byte	'clockFreq',0,12,182,3,51
	.word	249
	.byte	5
	.byte	'ticks',0,12,182,3,77
	.word	20195
	.byte	6,0
.L249:
	.byte	8
	.byte	'IfxStdIf_Timer_sToTick',0,3,12,193,3,27
	.word	20195
	.byte	1,1
.L252:
	.byte	5
	.byte	'clockFreq',0,12,193,3,58
	.word	249
.L254:
	.byte	5
	.byte	'seconds',0,12,193,3,77
	.word	249
.L256:
	.byte	6,0,25
	.word	509
	.byte	26
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,23
	.word	21726
	.byte	0,10
	.word	319
	.byte	3
	.word	319
	.byte	27
	.byte	'__cmpswapw',0
	.word	21768
	.byte	1,1,1,1,28
	.byte	'p',0
	.word	21773
	.byte	28
	.byte	'value',0
	.word	319
	.byte	28
	.byte	'compare',0
	.word	319
	.byte	0,29
	.word	197
	.byte	30
	.word	223
	.byte	6,0,29
	.word	258
	.byte	30
	.word	290
	.byte	6,0,29
	.word	335
	.byte	30
	.word	352
	.byte	30
	.word	368
	.byte	30
	.word	381
	.byte	6,0,29
	.word	428
	.byte	30
	.word	447
	.byte	6,0,29
	.word	463
	.byte	30
	.word	478
	.byte	30
	.word	492
	.byte	6,0,29
	.word	8416
	.byte	30
	.word	8444
	.byte	30
	.word	8458
	.byte	30
	.word	8476
	.byte	6,0,29
	.word	8833
	.byte	30
	.word	8861
	.byte	6,0,29
	.word	8876
	.byte	30
	.word	8898
	.byte	6,0,29
	.word	8972
	.byte	30
	.word	8992
	.byte	30
	.word	9005
	.byte	30
	.word	9027
	.byte	19,31
	.word	8833
	.byte	30
	.word	8861
	.byte	32
	.word	8874
	.byte	0,6,0,0,29
	.word	15705
	.byte	30
	.word	15750
	.byte	30
	.word	15764
	.byte	6,0,10
	.word	18627
	.byte	10
	.word	18627
	.byte	10
	.word	18627
	.byte	10
	.word	18627
	.byte	10
	.word	18627
	.byte	10
	.word	18627
	.byte	10
	.word	18627
	.byte	10
	.word	18627
	.byte	10
	.word	18627
	.byte	11
	.byte	'_Ifx_GTM_TOM_TGC1_GLB_CTRL_Bits',0,9,244,32,16,4,12
	.byte	'HOST_TRIG',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	9049
	.byte	7,24,2,35,0,12
	.byte	'RST_CH0',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'UPEN_CTRL0',0,4
	.word	9049
	.byte	2,14,2,35,0,12
	.byte	'UPEN_CTRL1',0,4
	.word	9049
	.byte	2,12,2,35,0,12
	.byte	'UPEN_CTRL2',0,4
	.word	9049
	.byte	2,10,2,35,0,12
	.byte	'UPEN_CTRL3',0,4
	.word	9049
	.byte	2,8,2,35,0,12
	.byte	'UPEN_CTRL4',0,4
	.word	9049
	.byte	2,6,2,35,0,12
	.byte	'UPEN_CTRL5',0,4
	.word	9049
	.byte	2,4,2,35,0,12
	.byte	'UPEN_CTRL6',0,4
	.word	9049
	.byte	2,2,2,35,0,12
	.byte	'UPEN_CTRL7',0,4
	.word	9049
	.byte	2,0,2,35,0,0,13,9,233,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22053
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_ACT_TB_Bits',0,9,186,32,16,4,12
	.byte	'ACT_TB',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'TB_TRIG',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'TBU_SEL',0,4
	.word	9049
	.byte	2,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	9049
	.byte	5,0,2,35,0,0,13,9,201,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22503
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_FUPD_CTRL_Bits',0,9,223,32,16,4,12
	.byte	'FUPD_CTRL0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'FUPD_CTRL1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'FUPD_CTRL2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'FUPD_CTRL3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'FUPD_CTRL4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'FUPD_CTRL5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'FUPD_CTRL6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'FUPD_CTRL7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'RSTCN0_CH0',0,4
	.word	9049
	.byte	2,14,2,35,0,12
	.byte	'RSTCN0_CH1',0,4
	.word	9049
	.byte	2,12,2,35,0,12
	.byte	'RSTCN0_CH2',0,4
	.word	9049
	.byte	2,10,2,35,0,12
	.byte	'RSTCN0_CH3',0,4
	.word	9049
	.byte	2,8,2,35,0,12
	.byte	'RSTCN0_CH4',0,4
	.word	9049
	.byte	2,6,2,35,0,12
	.byte	'RSTCN0_CH5',0,4
	.word	9049
	.byte	2,4,2,35,0,12
	.byte	'RSTCN0_CH6',0,4
	.word	9049
	.byte	2,2,2,35,0,12
	.byte	'RSTCN0_CH7',0,4
	.word	9049
	.byte	2,0,2,35,0,0,13,9,225,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22659
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_INT_TRIG_Bits',0,9,139,33,16,4,12
	.byte	'INT_TRIG0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'INT_TRIG1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'INT_TRIG2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'INT_TRIG3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'INT_TRIG4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'INT_TRIG5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'INT_TRIG6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'INT_TRIG7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,241,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23091
	.byte	4,2,35,0,0,10
	.word	18627
	.byte	11
	.byte	'_Ifx_GTM_TOM_TGC1_ENDIS_CTRL_Bits',0,9,195,32,16,4,12
	.byte	'ENDIS_CTRL0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CTRL1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CTRL2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_CTRL3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_CTRL4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_CTRL5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_CTRL6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_CTRL7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,209,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23366
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_ENDIS_STAT_Bits',0,9,209,32,16,4,12
	.byte	'ENDIS_STAT0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_STAT1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_STAT2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_STAT3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_STAT4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_STAT5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_STAT6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_STAT7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,217,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23654
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_OUTEN_CTRL_Bits',0,9,153,33,16,4,12
	.byte	'OUTEN_CTRL0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_CTRL1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_CTRL2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_CTRL3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_CTRL4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_CTRL5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_CTRL6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_CTRL7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,249,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23942
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_OUTEN_STAT_Bits',0,9,167,33,16,4,12
	.byte	'OUTEN_STAT0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_STAT1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_STAT2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_STAT3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_STAT4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_STAT5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_STAT6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_STAT7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,129,55,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	24230
	.byte	4,2,35,0,0,10
	.word	18627
	.byte	10
	.word	18627
	.byte	10
	.word	18627
	.byte	10
	.word	18627
	.byte	10
	.word	18627
	.byte	10
	.word	18627
	.byte	15,144,8
	.word	516
	.byte	16,143,8,0,11
	.byte	'_Ifx_GTM_TOM',0,9,131,60,25,128,16,14
	.byte	'CH0',0
	.word	22008
	.byte	48,2,35,0,14
	.byte	'TGC0_GLB_CTRL',0
	.word	16193
	.byte	4,2,35,48,14
	.byte	'TGC0_ACT_TB',0
	.word	16349
	.byte	4,2,35,52,14
	.byte	'TGC0_FUPD_CTRL',0
	.word	16781
	.byte	4,2,35,56,14
	.byte	'TGC0_INT_TRIG',0
	.word	17051
	.byte	4,2,35,60,14
	.byte	'CH1',0
	.word	22013
	.byte	48,2,35,64,14
	.byte	'TGC0_ENDIS_CTRL',0
	.word	19092
	.byte	4,2,35,112,14
	.byte	'TGC0_ENDIS_STAT',0
	.word	19380
	.byte	4,2,35,116,14
	.byte	'TGC0_OUTEN_CTRL',0
	.word	19668
	.byte	4,2,35,120,14
	.byte	'TGC0_OUTEN_STAT',0
	.word	19956
	.byte	4,2,35,124,14
	.byte	'CH2',0
	.word	22018
	.byte	48,3,35,128,1,14
	.byte	'reserved_B0',0
	.word	12233
	.byte	16,3,35,176,1,14
	.byte	'CH3',0
	.word	22023
	.byte	48,3,35,192,1,14
	.byte	'reserved_F0',0
	.word	12233
	.byte	16,3,35,240,1,14
	.byte	'CH4',0
	.word	22028
	.byte	48,3,35,128,2,14
	.byte	'reserved_130',0
	.word	12233
	.byte	16,3,35,176,2,14
	.byte	'CH5',0
	.word	22033
	.byte	48,3,35,192,2,14
	.byte	'reserved_170',0
	.word	12233
	.byte	16,3,35,240,2,14
	.byte	'CH6',0
	.word	22038
	.byte	48,3,35,128,3,14
	.byte	'reserved_1B0',0
	.word	12233
	.byte	16,3,35,176,3,14
	.byte	'CH7',0
	.word	22043
	.byte	48,3,35,192,3,14
	.byte	'reserved_1F0',0
	.word	12233
	.byte	16,3,35,240,3,14
	.byte	'CH8',0
	.word	22048
	.byte	48,3,35,128,4,14
	.byte	'TGC1_GLB_CTRL',0
	.word	22463
	.byte	4,3,35,176,4,14
	.byte	'TGC1_ACT_TB',0
	.word	22619
	.byte	4,3,35,180,4,14
	.byte	'TGC1_FUPD_CTRL',0
	.word	23051
	.byte	4,3,35,184,4,14
	.byte	'TGC1_INT_TRIG',0
	.word	23321
	.byte	4,3,35,188,4,14
	.byte	'CH9',0
	.word	23361
	.byte	48,3,35,192,4,14
	.byte	'TGC1_ENDIS_CTRL',0
	.word	23614
	.byte	4,3,35,240,4,14
	.byte	'TGC1_ENDIS_STAT',0
	.word	23902
	.byte	4,3,35,244,4,14
	.byte	'TGC1_OUTEN_CTRL',0
	.word	24190
	.byte	4,3,35,248,4,14
	.byte	'TGC1_OUTEN_STAT',0
	.word	24478
	.byte	4,3,35,252,4,14
	.byte	'CH10',0
	.word	24518
	.byte	48,3,35,128,5,14
	.byte	'reserved_2B0',0
	.word	12233
	.byte	16,3,35,176,5,14
	.byte	'CH11',0
	.word	24523
	.byte	48,3,35,192,5,14
	.byte	'reserved_2F0',0
	.word	12233
	.byte	16,3,35,240,5,14
	.byte	'CH12',0
	.word	24528
	.byte	48,3,35,128,6,14
	.byte	'reserved_330',0
	.word	12233
	.byte	16,3,35,176,6,14
	.byte	'CH13',0
	.word	24533
	.byte	48,3,35,192,6,14
	.byte	'reserved_370',0
	.word	12233
	.byte	16,3,35,240,6,14
	.byte	'CH14',0
	.word	24538
	.byte	48,3,35,128,7,14
	.byte	'reserved_3B0',0
	.word	12233
	.byte	16,3,35,176,7,14
	.byte	'CH15',0
	.word	24543
	.byte	48,3,35,192,7,14
	.byte	'reserved_3F0',0
	.word	24548
	.byte	144,8,3,35,240,7,0,10
	.word	24559
	.byte	3
	.word	25473
.L258:
	.byte	17,10,158,2,9,1,18
	.byte	'IfxGtm_Tom_Ch_none',0,127,18
	.byte	'IfxGtm_Tom_Ch_0',0,0,18
	.byte	'IfxGtm_Tom_Ch_1',0,1,18
	.byte	'IfxGtm_Tom_Ch_2',0,2,18
	.byte	'IfxGtm_Tom_Ch_3',0,3,18
	.byte	'IfxGtm_Tom_Ch_4',0,4,18
	.byte	'IfxGtm_Tom_Ch_5',0,5,18
	.byte	'IfxGtm_Tom_Ch_6',0,6,18
	.byte	'IfxGtm_Tom_Ch_7',0,7,18
	.byte	'IfxGtm_Tom_Ch_8',0,8,18
	.byte	'IfxGtm_Tom_Ch_9',0,9,18
	.byte	'IfxGtm_Tom_Ch_10',0,10,18
	.byte	'IfxGtm_Tom_Ch_11',0,11,18
	.byte	'IfxGtm_Tom_Ch_12',0,12,18
	.byte	'IfxGtm_Tom_Ch_13',0,13,18
	.byte	'IfxGtm_Tom_Ch_14',0,14,18
	.byte	'IfxGtm_Tom_Ch_15',0,15,0,33
	.byte	'IfxGtm_Tom_Ch_clearOneNotification',0,11,135,1,17,1,1,1,1,5
	.byte	'tom',0,11,135,1,65
	.word	25478
	.byte	5
	.byte	'channel',0,11,135,1,84
	.word	25483
	.byte	0,33
	.byte	'IfxGtm_Tom_Ch_clearZeroNotification',0,11,142,1,17,1,1,1,1,5
	.byte	'tom',0,11,142,1,66
	.word	25478
	.byte	5
	.byte	'channel',0,11,142,1,85
	.word	25483
	.byte	0,11
	.byte	'_Ifx_GTM_REV_Bits',0,9,213,27,16,4,12
	.byte	'STEP',0,4
	.word	9049
	.byte	8,24,2,35,0,12
	.byte	'NO',0,4
	.word	9049
	.byte	4,20,2,35,0,12
	.byte	'MINOR',0,4
	.word	9049
	.byte	4,16,2,35,0,12
	.byte	'MAJOR',0,4
	.word	9049
	.byte	4,12,2,35,0,12
	.byte	'DEV_CODE0',0,4
	.word	9049
	.byte	4,8,2,35,0,12
	.byte	'DEV_CODE1',0,4
	.word	9049
	.byte	4,4,2,35,0,12
	.byte	'DEV_CODE2',0,4
	.word	9049
	.byte	4,0,2,35,0,0,13,9,249,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	25956
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_RST_Bits',0,9,225,27,16,4,12
	.byte	'RST',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	9049
	.byte	31,0,2,35,0,0,13,9,129,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	26148
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CTRL_Bits',0,9,201,10,16,4,12
	.byte	'RF_PROT',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'TO_MODE',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'TO_VAL',0,4
	.word	9049
	.byte	5,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	23,0,2,35,0,0,13,9,168,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	26250
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_AEI_ADDR_XPT_Bits',0,9,114,16,4,12
	.byte	'TO_ADDR',0,4
	.word	9049
	.byte	20,12,2,35,0,12
	.byte	'TO_W1R0',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	9049
	.byte	11,0,2,35,0,0,13,9,232,33,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	26416
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_NOTIFY_Bits',0,9,139,23,16,4,12
	.byte	'AEI_TO_XPT',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'AEI_USP_ADDR',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'AEI_IM_ADDR',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'AEI_USP_BE',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	9049
	.byte	28,0,2,35,0,0,13,9,137,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	26550
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_EN_Bits',0,9,240,22,16,4,12
	.byte	'AEI_TO_XPT_IRQ_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'AEI_USP_ADDR_IRQ_EN',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'AEI_IM_ADDR_IRQ_EN',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'AEI_USP_BE_IRQ_EN',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	9049
	.byte	28,0,2,35,0,0,13,9,241,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	26735
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_FORCINT_Bits',0,9,250,22,16,4,12
	.byte	'TRG_AEI_TO_XPT',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'TRG_AEI_USP_ADDR',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'TRG_AEI_IM_ADDR',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'TRG_AEI_USP_BE',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	9049
	.byte	28,0,2,35,0,0,13,9,249,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	26944
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_MODE_Bits',0,9,132,23,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	30,0,2,35,0,0,13,9,129,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27146
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_EIRQ_EN_Bits',0,9,211,18,16,4,12
	.byte	'AEI_TO_XPT_EIRQ_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'AEI_USP_ADDR_EIRQ_EN',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'AEI_IM_ADDR_EIRQ_EN',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'AEI_USP_BE_EIRQ_EN',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	9049
	.byte	28,0,2,35,0,0,13,9,217,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27258
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE_MODE_Bits',0,9,180,8,16,4,12
	.byte	'BRG_MODE',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'MSK_WR_RSP',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	6,24,2,35,0,12
	.byte	'MODE_UP_PGR',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'BUFF_OVL',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'SYNC_INPUT_REG',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	3,16,2,35,0,12
	.byte	'BRG_RST',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	9049
	.byte	7,8,2,35,0,12
	.byte	'BUFF_DPT',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,144,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27472
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE_PTR1_Bits',0,9,196,8,16,4,12
	.byte	'NEW_TRAN_PTR',0,4
	.word	9049
	.byte	5,27,2,35,0,12
	.byte	'FIRST_RSP_PTR',0,4
	.word	9049
	.byte	5,22,2,35,0,12
	.byte	'TRAN_IN_PGR',0,4
	.word	9049
	.byte	5,17,2,35,0,12
	.byte	'ABT_TRAN_PGR',0,4
	.word	9049
	.byte	5,12,2,35,0,12
	.byte	'FBC',0,4
	.word	9049
	.byte	6,6,2,35,0,12
	.byte	'RSP_TRAN_RDY',0,4
	.word	9049
	.byte	6,0,2,35,0,0,13,9,152,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27786
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE_PTR2_Bits',0,9,207,8,16,4,12
	.byte	'TRAN_IN_PGR2',0,4
	.word	9049
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	9049
	.byte	27,0,2,35,0,0,13,9,160,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27994
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE',0,9,222,57,25,12,14
	.byte	'MODE',0
	.word	27746
	.byte	4,2,35,0,14
	.byte	'PTR1',0
	.word	27954
	.byte	4,2,35,4,14
	.byte	'PTR2',0
	.word	28073
	.byte	4,2,35,8,0,10
	.word	28113
	.byte	11
	.byte	'_Ifx_GTM_TIM_AUX_IN_SRC_Bits',0,9,151,29,16,4,12
	.byte	'SRC_CH0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'SRC_CH1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'SRC_CH2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'SRC_CH3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'SRC_CH4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'SRC_CH5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'SRC_CH6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'SRC_CH7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	9049
	.byte	24,0,2,35,0,0,13,9,153,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28183
	.byte	4,2,35,0,0,15,12
	.word	28393
	.byte	16,2,0,15,180,1
	.word	516
	.byte	16,179,1,0,11
	.byte	'_Ifx_GTM_TBU_CHEN_Bits',0,9,142,29,16,4,12
	.byte	'ENDIS_CH0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CH1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CH2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	9049
	.byte	26,0,2,35,0,0,13,9,145,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28453
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH0_CTRL_Bits',0,9,232,28,16,4,12
	.byte	'LOW_RES',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'CH_CLK_SRC',0,4
	.word	9049
	.byte	3,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	9049
	.byte	28,0,2,35,0,0,13,9,233,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28608
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH0_BASE_Bits',0,9,225,28,16,4,12
	.byte	'BASE',0,4
	.word	9049
	.byte	27,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	9049
	.byte	5,0,2,35,0,0,13,9,225,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28745
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH1_CTRL_Bits',0,9,247,28,16,4,12
	.byte	'CH_MODE',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'CH_CLK_SRC',0,4
	.word	9049
	.byte	3,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	9049
	.byte	28,0,2,35,0,0,13,9,249,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28858
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH1_BASE_Bits',0,9,240,28,16,4,12
	.byte	'BASE',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,241,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28995
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH2_CTRL_Bits',0,9,134,29,16,4,12
	.byte	'CH_MODE',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'CH_CLK_SRC',0,4
	.word	9049
	.byte	3,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	9049
	.byte	28,0,2,35,0,0,13,9,137,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29108
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH2_BASE_Bits',0,9,255,28,16,4,12
	.byte	'BASE',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,129,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29245
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU',0,9,225,59,25,28,14
	.byte	'CHEN',0
	.word	28568
	.byte	4,2,35,0,14
	.byte	'CH0_CTRL',0
	.word	28705
	.byte	4,2,35,4,14
	.byte	'CH0_BASE',0
	.word	28818
	.byte	4,2,35,8,14
	.byte	'CH1_CTRL',0
	.word	28955
	.byte	4,2,35,12,14
	.byte	'CH1_BASE',0
	.word	29068
	.byte	4,2,35,16,14
	.byte	'CH2_CTRL',0
	.word	29205
	.byte	4,2,35,20,14
	.byte	'CH2_BASE',0
	.word	29318
	.byte	4,2,35,24,0,10
	.word	29358
	.byte	15,100
	.word	516
	.byte	16,99,0,11
	.byte	'_Ifx_GTM_MON_STATUS_Bits',0,9,246,25,16,4,12
	.byte	'ACT_CMU0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'ACT_CMU1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'ACT_CMU2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'ACT_CMU3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'ACT_CMU4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'ACT_CMU5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'ACT_CMU6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'ACT_CMU7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'ACT_CMUFX0',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'ACT_CMUFX1',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'ACT_CMUFX2',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'ACT_CMUFX3',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'ACT_CMUFX4',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	3,16,2,35,0,12
	.byte	'CMP_ERR',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	9049
	.byte	3,12,2,35,0,12
	.byte	'MCS0_ERR',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'MCS1_ERR',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'MCS2_ERR',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	9049
	.byte	9,0,2,35,0,0,13,9,249,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29514
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MON_ACTIVITY_0_Bits',0,9,216,25,16,4,12
	.byte	'MCA_0_0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'MCA_0_1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'MCA_0_2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'MCA_0_3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'MCA_0_4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'MCA_0_5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'MCA_0_6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'MCA_0_7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'MCA_1_0',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'MCA_1_1',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'MCA_1_2',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'MCA_1_3',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'MCA_1_4',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'MCA_1_5',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'MCA_1_6',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'MCA_1_7',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'MCA_2_0',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'MCA_2_1',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'MCA_2_2',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'MCA_2_3',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'MCA_2_4',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'MCA_2_5',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'MCA_2_6',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'MCA_2_7',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,241,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30004
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MON',0,9,185,59,25,8,14
	.byte	'STATUS',0
	.word	29964
	.byte	4,2,35,0,14
	.byte	'ACTIVITY_0',0
	.word	30519
	.byte	4,2,35,4,0,10
	.word	30559
	.byte	15,120
	.word	516
	.byte	16,119,0,11
	.byte	'_Ifx_GTM_CMP_EN_Bits',0,9,254,8,16,4,12
	.byte	'ABWC0_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'ABWC1_EN',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'ABWC2_EN',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'ABWC3_EN',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'ABWC4_EN',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'ABWC5_EN',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'ABWC6_EN',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'ABWC7_EN',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'ABWC8_EN',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'ABWC9_EN',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'ABWC10_EN',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'ABWC11_EN',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'TBWC0_EN',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'TBWC1_EN',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'TBWC2_EN',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'TBWC3_EN',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'TBWC4_EN',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'TBWC5_EN',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'TBWC6_EN',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'TBWC7_EN',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'TBWC8_EN',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'TBWC9_EN',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'TBWC10_EN',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'TBWC11_EN',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,184,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30629
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_NOTIFY_Bits',0,9,223,9,16,4,12
	.byte	'ABWC0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'ABWC1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'ABWC2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'ABWC3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'ABWC4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'ABWC5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'ABWC6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'ABWC7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'ABWC8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'ABWC9',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'ABWC10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'ABWC11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'TBWC0',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'TBWC1',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'TBWC2',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'TBWC3',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'TBWC4',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'TBWC5',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'TBWC6',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'TBWC7',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'TBWC8',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'TBWC9',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'TBWC10',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'TBWC11',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,216,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31204
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_EN_Bits',0,9,156,9,16,4,12
	.byte	'ABWC0_EN_IRQ',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'ABWC1_EN_IRQ',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'ABWC2_EN_IRQ',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'ABWC3_EN_IRQ',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'ABWC4_EN_IRQ',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'ABWC5_EN_IRQ',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'ABWC6_EN_IRQ',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'ABWC7_EN_IRQ',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'ABWC8_EN_IRQ',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'ABWC9_EN_IRQ',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'ABWC10_EN_IRQ',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'ABWC11_EN_IRQ',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'TBWC0_EN_IRQ',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'TBWC1_EN_IRQ',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'TBWC2_EN_IRQ',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'TBWC3_EN_IRQ',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'TBWC4_EN_IRQ',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'TBWC5_EN_IRQ',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'TBWC6_EN_IRQ',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'TBWC7_EN_IRQ',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'TBWC8_EN_IRQ',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'TBWC9_EN_IRQ',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'TBWC10_EN_IRQ',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'TBWC11_EN_IRQ',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,192,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31715
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_FORCINT_Bits',0,9,186,9,16,4,12
	.byte	'TRG_ABWC0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'TRG_ABWC1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'TRG_ABWC2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'TRG_ABWC3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'TRG_ABWC4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'TRG_ABWC5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'TRG_ABWC6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'TRG_ABWC7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'TRG_ABWC8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'TRG_ABWC9',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'TRG_ABWC10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'TRG_ABWC11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'TRG_TBWC0',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'TRG_TBWC1',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'TRG_TBWC2',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'TRG_TBWC3',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'TRG_TBWC4',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'TRG_TBWC5',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'TRG_TBWC6',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'TRG_TBWC7',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'TRG_TBWC8',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'TRG_TBWC9',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'TRG_TBWC10',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'TRG_TBWC11',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,200,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	32390
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_MODE_Bits',0,9,216,9,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	30,0,2,35,0,0,13,9,208,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	32998
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_EIRQ_EN_Bits',0,9,224,8,16,4,12
	.byte	'ABWC0_EN_EIRQ',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'ABWC1_EN_EIRQ',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'ABWC2_EN_EIRQ',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'ABWC3_EN_EIRQ',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'ABWC4_EN_EIRQ',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'ABWC5_EN_EIRQ',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'ABWC6_EN_EIRQ',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'ABWC7_EN_EIRQ',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'ABWC8_EN_EIRQ',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'ABWC9_EN_EIRQ',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'ABWC10_EN_EIRQ',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'ABWC11_EN_EIRQ',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'TBWC0_EN_EIRQ',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'TBWC1_EN_EIRQ',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'TBWC2_EN_EIRQ',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'TBWC3_EN_EIRQ',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'TBWC4_EN_EIRQ',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'TBWC5_EN_EIRQ',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'TBWC6_EN_EIRQ',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'TBWC7_EN_EIRQ',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'TBWC8_EN_EIRQ',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'TBWC9_EN_EIRQ',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'TBWC10_EN_EIRQ',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'TBWC11_EN_EIRQ',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,176,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	33114
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP',0,9,230,57,25,24,14
	.byte	'EN',0
	.word	31164
	.byte	4,2,35,0,14
	.byte	'IRQ_NOTIFY',0
	.word	31675
	.byte	4,2,35,4,14
	.byte	'IRQ_EN',0
	.word	32350
	.byte	4,2,35,8,14
	.byte	'IRQ_FORCINT',0
	.word	32958
	.byte	4,2,35,12,14
	.byte	'IRQ_MODE',0
	.word	33074
	.byte	4,2,35,16,14
	.byte	'EIRQ_EN',0
	.word	33774
	.byte	4,2,35,20,0,10
	.word	33814
	.byte	15,104
	.word	516
	.byte	16,103,0,11
	.byte	'_Ifx_GTM_ARU_ARU_ACCESS_Bits',0,9,129,1,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	3,20,2,35,0,12
	.byte	'RREQ',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'WREQ',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	9049
	.byte	18,0,2,35,0,0,13,9,248,33,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	33952
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DATA_H_Bits',0,9,139,1,16,4,12
	.byte	'DATA',0,4
	.word	9049
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	9049
	.byte	3,0,2,35,0,0,13,9,128,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34121
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DATA_L_Bits',0,9,146,1,16,4,12
	.byte	'DATA',0,4
	.word	9049
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	9049
	.byte	3,0,2,35,0,0,13,9,136,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34232
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_ACCESS0_Bits',0,9,153,1,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	23,0,2,35,0,0,13,9,144,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34343
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA0_H_Bits',0,9,167,1,16,4,12
	.byte	'DATA',0,4
	.word	9049
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	9049
	.byte	3,0,2,35,0,0,13,9,160,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34458
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA0_L_Bits',0,9,174,1,16,4,12
	.byte	'DATA',0,4
	.word	9049
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	9049
	.byte	3,0,2,35,0,0,13,9,168,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34574
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_ACCESS1_Bits',0,9,160,1,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	23,0,2,35,0,0,13,9,152,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34690
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA1_H_Bits',0,9,181,1,16,4,12
	.byte	'DATA',0,4
	.word	9049
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	9049
	.byte	3,0,2,35,0,0,13,9,176,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34805
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA1_L_Bits',0,9,188,1,16,4,12
	.byte	'DATA',0,4
	.word	9049
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	9049
	.byte	3,0,2,35,0,0,13,9,184,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34921
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_NOTIFY_Bits',0,9,220,1,16,4,12
	.byte	'NEW_DATA0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'NEW_DATA1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'ACC_ACK',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	9049
	.byte	29,0,2,35,0,0,13,9,216,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35037
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_EN_Bits',0,9,195,1,16,4,12
	.byte	'NEW_DATA0_IRQ_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'NEW_DATA1_IRQ_EN',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'ACC_ACK_IRQ_EN',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	9049
	.byte	29,0,2,35,0,0,13,9,192,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35196
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_FORCINT_Bits',0,9,204,1,16,4,12
	.byte	'TRG_NEW_DATA0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'TRG_NEW_DATA',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'TRG_ACC_ACK',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	9049
	.byte	29,0,2,35,0,0,13,9,200,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35372
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_MODE_Bits',0,9,213,1,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	30,0,2,35,0,0,13,9,208,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35543
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU',0,9,148,57,25,52,14
	.byte	'ARU_ACCESS',0
	.word	34081
	.byte	4,2,35,0,14
	.byte	'DATA_H',0
	.word	34192
	.byte	4,2,35,4,14
	.byte	'DATA_L',0
	.word	34303
	.byte	4,2,35,8,14
	.byte	'DBG_ACCESS0',0
	.word	34418
	.byte	4,2,35,12,14
	.byte	'DBG_DATA0_H',0
	.word	34534
	.byte	4,2,35,16,14
	.byte	'DBG_DATA0_L',0
	.word	34650
	.byte	4,2,35,20,14
	.byte	'DBG_ACCESS1',0
	.word	34765
	.byte	4,2,35,24,14
	.byte	'DBG_DATA1_H',0
	.word	34881
	.byte	4,2,35,28,14
	.byte	'DBG_DATA1_L',0
	.word	34997
	.byte	4,2,35,32,14
	.byte	'IRQ_NOTIFY',0
	.word	35156
	.byte	4,2,35,36,14
	.byte	'IRQ_EN',0
	.word	35332
	.byte	4,2,35,40,14
	.byte	'IRQ_FORCINT',0
	.word	35503
	.byte	4,2,35,44,14
	.byte	'IRQ_MODE',0
	.word	35619
	.byte	4,2,35,48,0,10
	.word	35659
	.byte	11
	.byte	'_Ifx_GTM_CMU_CLK_EN_Bits',0,9,148,10,16,4,12
	.byte	'EN_CLK0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'EN_CLK1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'EN_CLK2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'EN_CLK3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'EN_CLK4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'EN_CLK5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'EN_CLK6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'EN_CLK7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'EN_ECLK0',0,4
	.word	9049
	.byte	2,14,2,35,0,12
	.byte	'EN_ECLK1',0,4
	.word	9049
	.byte	2,12,2,35,0,12
	.byte	'EN_ECLK2',0,4
	.word	9049
	.byte	2,10,2,35,0,12
	.byte	'EN_FXCLK',0,4
	.word	9049
	.byte	2,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,248,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35937
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_GCLK_NUM_Bits',0,9,194,10,16,4,12
	.byte	'GCLK_NUM',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,160,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36264
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_GCLK_DEN_Bits',0,9,187,10,16,4,12
	.byte	'GCLK_DEN',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,152,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36381
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK0_5_CTRL_Bits',0,9,253,9,16,4,12
	.byte	'CLK_CNT',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,224,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36498
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK0_5',0,9,200,55,25,4,14
	.byte	'CTRL',0
	.word	36577
	.byte	4,2,35,0,0,15,24
	.word	36617
	.byte	16,5,0,10
	.word	36658
	.byte	11
	.byte	'_Ifx_GTM_CMU_CLK_6_CTRL_Bits',0,9,132,10,16,4,12
	.byte	'CLK_CNT',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'CLK6_SEL',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	9049
	.byte	7,0,2,35,0,0,13,9,232,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36672
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK_6',0,9,206,55,25,4,14
	.byte	'CTRL',0
	.word	36770
	.byte	4,2,35,0,0,10
	.word	36810
	.byte	11
	.byte	'_Ifx_GTM_CMU_CLK_7_CTRL_Bits',0,9,140,10,16,4,12
	.byte	'CLK_CNT',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'CLK7_SEL',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	9049
	.byte	7,0,2,35,0,0,13,9,240,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36855
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK_7',0,9,212,55,25,4,14
	.byte	'CTRL',0
	.word	36953
	.byte	4,2,35,0,0,10
	.word	36993
	.byte	11
	.byte	'_Ifx_GTM_CMU_ECLK_NUM_Bits',0,9,173,10,16,4,12
	.byte	'ECLK_NUM',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,136,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37038
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_ECLK_DEN_Bits',0,9,166,10,16,4,12
	.byte	'ECLK_DEN',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,128,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37155
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_ECLK',0,9,218,55,25,8,14
	.byte	'NUM',0
	.word	37115
	.byte	4,2,35,0,14
	.byte	'DEN',0
	.word	37232
	.byte	4,2,35,4,0,15,24
	.word	37272
	.byte	16,2,0,10
	.word	37323
	.byte	11
	.byte	'_Ifx_GTM_CMU_FXCLK_CTRL_Bits',0,9,180,10,16,4,12
	.byte	'FXCLK_SEL',0,4
	.word	9049
	.byte	4,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	9049
	.byte	28,0,2,35,0,0,13,9,144,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37337
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_FXCLK',0,9,225,55,25,4,14
	.byte	'CTRL',0
	.word	37416
	.byte	4,2,35,0,0,10
	.word	37456
	.byte	11
	.byte	'_Ifx_GTM_CMU',0,9,241,57,25,72,14
	.byte	'CLK_EN',0
	.word	36224
	.byte	4,2,35,0,14
	.byte	'GCLK_NUM',0
	.word	36341
	.byte	4,2,35,4,14
	.byte	'GCLK_DEN',0
	.word	36458
	.byte	4,2,35,8,14
	.byte	'CLK0_5',0
	.word	36667
	.byte	24,2,35,12,14
	.byte	'CLK_6',0
	.word	36850
	.byte	4,2,35,36,14
	.byte	'CLK_7',0
	.word	37033
	.byte	4,2,35,40,14
	.byte	'ECLK',0
	.word	37332
	.byte	24,2,35,44,14
	.byte	'FXCLK',0
	.word	37496
	.byte	4,2,35,68,0,10
	.word	37501
	.byte	15,184,1
	.word	516
	.byte	16,183,1,0,11
	.byte	'_Ifx_GTM_BRC_SRC0_ADDR_Bits',0,9,236,4,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	19,0,2,35,0,0,13,9,208,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37664
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC0_DEST_Bits',0,9,245,4,16,4,12
	.byte	'EN_DEST0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	9049
	.byte	9,0,2,35,0,0,13,9,216,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37820
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC1_ADDR_Bits',0,9,222,5,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	19,0,2,35,0,0,13,9,128,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38393
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC1_DEST_Bits',0,9,231,5,16,4,12
	.byte	'EN_DEST0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	9049
	.byte	9,0,2,35,0,0,13,9,136,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38549
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC2_ADDR_Bits',0,9,132,6,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	19,0,2,35,0,0,13,9,144,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39122
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC2_DEST_Bits',0,9,141,6,16,4,12
	.byte	'EN_DEST0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	9049
	.byte	9,0,2,35,0,0,13,9,152,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39278
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC3_ADDR_Bits',0,9,170,6,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	19,0,2,35,0,0,13,9,160,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39851
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC3_DEST_Bits',0,9,179,6,16,4,12
	.byte	'EN_DEST0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	9049
	.byte	9,0,2,35,0,0,13,9,168,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40007
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC4_ADDR_Bits',0,9,208,6,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	19,0,2,35,0,0,13,9,176,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40580
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC4_DEST_Bits',0,9,217,6,16,4,12
	.byte	'EN_DEST0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	9049
	.byte	9,0,2,35,0,0,13,9,184,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40736
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC5_ADDR_Bits',0,9,246,6,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	19,0,2,35,0,0,13,9,192,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41309
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC5_DEST_Bits',0,9,255,6,16,4,12
	.byte	'EN_DEST0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	9049
	.byte	9,0,2,35,0,0,13,9,200,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41465
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC6_ADDR_Bits',0,9,156,7,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	19,0,2,35,0,0,13,9,208,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	42038
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC6_DEST_Bits',0,9,165,7,16,4,12
	.byte	'EN_DEST0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	9049
	.byte	9,0,2,35,0,0,13,9,216,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	42194
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC7_ADDR_Bits',0,9,194,7,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	19,0,2,35,0,0,13,9,224,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	42767
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC7_DEST_Bits',0,9,203,7,16,4,12
	.byte	'EN_DEST0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	9049
	.byte	9,0,2,35,0,0,13,9,232,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	42923
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC8_ADDR_Bits',0,9,232,7,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	19,0,2,35,0,0,13,9,240,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	43496
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC8_DEST_Bits',0,9,241,7,16,4,12
	.byte	'EN_DEST0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	9049
	.byte	9,0,2,35,0,0,13,9,248,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	43652
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC9_ADDR_Bits',0,9,142,8,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	19,0,2,35,0,0,13,9,128,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44225
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC9_DEST_Bits',0,9,151,8,16,4,12
	.byte	'EN_DEST0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	9049
	.byte	9,0,2,35,0,0,13,9,136,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44381
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC10_ADDR_Bits',0,9,146,5,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	19,0,2,35,0,0,13,9,224,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44954
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC10_DEST_Bits',0,9,155,5,16,4,12
	.byte	'EN_DEST0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	9049
	.byte	9,0,2,35,0,0,13,9,232,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	45111
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC11_ADDR_Bits',0,9,184,5,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	19,0,2,35,0,0,13,9,240,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	45685
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC11_DEST_Bits',0,9,193,5,16,4,12
	.byte	'EN_DEST0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	9049
	.byte	9,0,2,35,0,0,13,9,248,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	45842
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_NOTIFY_Bits',0,9,210,4,16,4,12
	.byte	'DEST_ERR',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'DID0',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'DID1',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'DID2',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'DID3',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'DID4',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'DID5',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'DID6',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'DID7',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'DID8',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'DID9',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'DID10',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'DID11',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	19,0,2,35,0,0,13,9,192,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	46416
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_EN_Bits',0,9,165,4,16,4,12
	.byte	'DEST_ERR_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'DID_EN0',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'DID_EN1',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'DID_EN2',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'DID_EN3',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'DID_EN4',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'DID_EN5',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'DID_EN6',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'DID_EN7',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'DID_EN8',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'DID_EN9',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'DID_EN10',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'DID_EN11',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	19,0,2,35,0,0,13,9,168,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	46729
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_FORCINT_Bits',0,9,184,4,16,4,12
	.byte	'TRG_DEST_ERR',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'TRG_DID0',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'TRG_DID1',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'TRG_DID2',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'TRG_DID3',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'TRG_DID4',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'TRG_DID5',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'TRG_DID6',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'TRG_DID7',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'TRG_DID8',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'TRG_DID9',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'TRG_DID10',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'TRG_DID11',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	19,0,2,35,0,0,13,9,176,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	47077
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_MODE_Bits',0,9,203,4,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	30,0,2,35,0,0,13,9,184,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	47443
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_RST_Bits',0,9,229,4,16,4,12
	.byte	'RST',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	9049
	.byte	31,0,2,35,0,0,13,9,200,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	47559
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_EIRQ_EN_Bits',0,9,146,4,16,4,12
	.byte	'DEST_ERR_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'DID_EN0',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'DID_EN1',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'DID_EN2',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'DID_EN3',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'DID_EN4',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'DID_EN5',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'DID_EN6',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'DID_EN7',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'DID_EN8',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'DID_EN9',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'DID_EN10',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'DID_EN11',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	19,0,2,35,0,0,13,9,160,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	47665
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC',0,9,187,57,25,120,14
	.byte	'SRC0_ADDR',0
	.word	37780
	.byte	4,2,35,0,14
	.byte	'SRC0_DEST',0
	.word	38353
	.byte	4,2,35,4,14
	.byte	'SRC1_ADDR',0
	.word	38509
	.byte	4,2,35,8,14
	.byte	'SRC1_DEST',0
	.word	39082
	.byte	4,2,35,12,14
	.byte	'SRC2_ADDR',0
	.word	39238
	.byte	4,2,35,16,14
	.byte	'SRC2_DEST',0
	.word	39811
	.byte	4,2,35,20,14
	.byte	'SRC3_ADDR',0
	.word	39967
	.byte	4,2,35,24,14
	.byte	'SRC3_DEST',0
	.word	40540
	.byte	4,2,35,28,14
	.byte	'SRC4_ADDR',0
	.word	40696
	.byte	4,2,35,32,14
	.byte	'SRC4_DEST',0
	.word	41269
	.byte	4,2,35,36,14
	.byte	'SRC5_ADDR',0
	.word	41425
	.byte	4,2,35,40,14
	.byte	'SRC5_DEST',0
	.word	41998
	.byte	4,2,35,44,14
	.byte	'SRC6_ADDR',0
	.word	42154
	.byte	4,2,35,48,14
	.byte	'SRC6_DEST',0
	.word	42727
	.byte	4,2,35,52,14
	.byte	'SRC7_ADDR',0
	.word	42883
	.byte	4,2,35,56,14
	.byte	'SRC7_DEST',0
	.word	43456
	.byte	4,2,35,60,14
	.byte	'SRC8_ADDR',0
	.word	43612
	.byte	4,2,35,64,14
	.byte	'SRC8_DEST',0
	.word	44185
	.byte	4,2,35,68,14
	.byte	'SRC9_ADDR',0
	.word	44341
	.byte	4,2,35,72,14
	.byte	'SRC9_DEST',0
	.word	44914
	.byte	4,2,35,76,14
	.byte	'SRC10_ADDR',0
	.word	45071
	.byte	4,2,35,80,14
	.byte	'SRC10_DEST',0
	.word	45645
	.byte	4,2,35,84,14
	.byte	'SRC11_ADDR',0
	.word	45802
	.byte	4,2,35,88,14
	.byte	'SRC11_DEST',0
	.word	46376
	.byte	4,2,35,92,14
	.byte	'IRQ_NOTIFY',0
	.word	46689
	.byte	4,2,35,96,14
	.byte	'IRQ_EN',0
	.word	47037
	.byte	4,2,35,100,14
	.byte	'IRQ_FORCINT',0
	.word	47403
	.byte	4,2,35,104,14
	.byte	'IRQ_MODE',0
	.word	47519
	.byte	4,2,35,108,14
	.byte	'RST',0
	.word	47625
	.byte	4,2,35,112,14
	.byte	'EIRQ_EN',0
	.word	47974
	.byte	4,2,35,116,0,10
	.word	48014
	.byte	15,136,3
	.word	516
	.byte	16,135,3,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_0_Bits',0,9,241,19,16,4,12
	.byte	'ARU_NEW_DATA0_IRQ',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'ARU_NEW_DATA1_IRQ',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'ARU_ACC_ACK_IRQ',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'BRC_IRQ',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'AEI_IRQ',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'CMP_IRQ',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'SPE0_IRQ',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'SPE1_IRQ',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	9049
	.byte	8,16,2,35,0,12
	.byte	'PSM0_CH0_IRQ',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'PSM0_CH1_IRQ',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'PSM0_CH2_IRQ',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'PSM0_CH3_IRQ',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'PSM0_CH4_IRQ',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'PSM0_CH5_IRQ',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'PSM0_CH6_IRQ',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'PSM0_CH7_IRQ',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,233,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	48615
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_1_Bits',0,9,136,20,16,4,12
	.byte	'DPLL_DCG_IRQ',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'DPLL_EDI_IRQ',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'DPLL_TIN_IRQ',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'DPLL_TAX_IRQ',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'DPLL_SIS_IRQ',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'DPLL_TIS_IRQ',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'DPLL_MSI_IRQ',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'DPLL_MTI_IRQ',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'DPLL_SAS_IRQ',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'DPLL_TAS_IRQ',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'DPLL_PWI_IRQ',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'DPLL_W2I_IRQ',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'DPLL_W1I_IRQ',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'DPLL_GLI_IRQ',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'DPLL_LLI_IRQ',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'DPLL_EI_IRQ',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'DPLL_GL2I_IRQ',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'DPLL_LL2I_IRQ',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'DPLL_TE0_IRQ',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'DPLL_TE1_IRQ',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'DPLL_TE2_IRQ',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'DPLL_TE3_IRQ',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'DPLL_TE4_IRQ',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'DPLL_CDIT_IRQ',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'DPLL_CDIS_IRQ',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'DPLL_TORI_IRQ',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'DPLL_SORI_IRQ',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	9049
	.byte	5,0,2,35,0,0,13,9,241,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	49106
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_2_Bits',0,9,169,20,16,4,12
	.byte	'TIM0_CH0_IRQ',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'TIM0_CH1_IRQ',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'TIM0_CH2_IRQ',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'TIM0_CH3_IRQ',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'TIM0_CH4_IRQ',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'TIM0_CH5_IRQ',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'TIM0_CH6_IRQ',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'TIM0_CH7_IRQ',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'TIM1_CH0_IRQ',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'TIM1_CH1_IRQ',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'TIM1_CH2_IRQ',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'TIM1_CH3_IRQ',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'TIM1_CH4_IRQ',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'TIM1_CH5_IRQ',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'TIM1_CH6_IRQ',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'TIM1_CH7_IRQ',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'TIM2_CH0_IRQ',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'TIM2_CH1_IRQ',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'TIM2_CH2_IRQ',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'TIM2_CH3_IRQ',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'TIM2_CH4_IRQ',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'TIM2_CH5_IRQ',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'TIM2_CH6_IRQ',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'TIM2_CH7_IRQ',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,249,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	49854
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_4_Bits',0,9,199,20,16,4,12
	.byte	'MCS0_CH0_IRQ',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'MCS0_CH1_IRQ',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'MCS0_CH2_IRQ',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'MCS0_CH3_IRQ',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'MCS0_CH4_IRQ',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'MCS0_CH5_IRQ',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'MCS0_CH6_IRQ',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'MCS0_CH7_IRQ',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'MCS1_CH0_IRQ',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'MCS1_CH1_IRQ',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'MCS1_CH2_IRQ',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'MCS1_CH3_IRQ',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'MCS1_CH4_IRQ',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'MCS1_CH5_IRQ',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'MCS1_CH6_IRQ',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'MCS1_CH7_IRQ',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'MCS2_CH0_IRQ',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'MCS2_CH1_IRQ',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'MCS2_CH2_IRQ',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'MCS2_CH3_IRQ',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'MCS2_CH4_IRQ',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'MCS2_CH5_IRQ',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'MCS2_CH6_IRQ',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'MCS2_CH7_IRQ',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,129,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50525
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_6_Bits',0,9,229,20,16,4,12
	.byte	'TOM0_CH0_IRQ',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'TOM0_CH1_IRQ',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'TOM0_CH2_IRQ',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'TOM0_CH3_IRQ',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'TOM0_CH4_IRQ',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'TOM0_CH5_IRQ',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'TOM0_CH6_IRQ',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'TOM0_CH7_IRQ',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'TOM0_CH8_IRQ',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'TOM0_CH9_IRQ',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'TOM0_CH10_IRQ',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'TOM0_CH11_IRQ',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'TOM0_CH12_IRQ',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'TOM0_CH13_IRQ',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'TOM0_CH14_IRQ',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'TOM0_CH15_IRQ',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'TOM1_CH0_IRQ',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'TOM1_CH1_IRQ',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'TOM1_CH2_IRQ',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'TOM1_CH3_IRQ',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'TOM1_CH4_IRQ',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'TOM1_CH5_IRQ',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'TOM1_CH6_IRQ',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'TOM1_CH7_IRQ',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'TOM1_CH8_IRQ',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'TOM1_CH9_IRQ',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'TOM1_CH10_IRQ',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'TOM1_CH11_IRQ',0,4
	.word	9049
	.byte	1,4,2,35,0,12
	.byte	'TOM1_CH12_IRQ',0,4
	.word	9049
	.byte	1,3,2,35,0,12
	.byte	'TOM1_CH13_IRQ',0,4
	.word	9049
	.byte	1,2,2,35,0,12
	.byte	'TOM1_CH14_IRQ',0,4
	.word	9049
	.byte	1,1,2,35,0,12
	.byte	'TOM1_CH15_IRQ',0,4
	.word	9049
	.byte	1,0,2,35,0,0,13,9,137,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51196
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_9_Bits',0,9,138,21,16,4,12
	.byte	'ATOM0_CH0_IRQ',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'ATOM0_CH1_IRQ',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'ATOM0_CH2_IRQ',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'ATOM0_CH3_IRQ',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'ATOM0_CH4_IRQ',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'ATOM0_CH5_IRQ',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'ATOM0_CH6_IRQ',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'ATOM0_CH7_IRQ',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'ATOM1_CH0_IRQ',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'ATOM1_CH1_IRQ',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'ATOM1_CH2_IRQ',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'ATOM1_CH3_IRQ',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'ATOM1_CH4_IRQ',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'ATOM1_CH5_IRQ',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'ATOM1_CH6_IRQ',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'ATOM1_CH7_IRQ',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'ATOM2_CH0_IRQ',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'ATOM2_CH1_IRQ',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'ATOM2_CH2_IRQ',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'ATOM2_CH3_IRQ',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'ATOM2_CH4_IRQ',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'ATOM2_CH5_IRQ',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'ATOM2_CH6_IRQ',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'ATOM2_CH7_IRQ',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'ATOM3_CH0_IRQ',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'ATOM3_CH1_IRQ',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'ATOM3_CH2_IRQ',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'ATOM3_CH3_IRQ',0,4
	.word	9049
	.byte	1,4,2,35,0,12
	.byte	'ATOM3_CH4_IRQ',0,4
	.word	9049
	.byte	1,3,2,35,0,12
	.byte	'ATOM3_CH5_IRQ',0,4
	.word	9049
	.byte	1,2,2,35,0,12
	.byte	'ATOM3_CH6_IRQ',0,4
	.word	9049
	.byte	1,1,2,35,0,12
	.byte	'ATOM3_CH7_IRQ',0,4
	.word	9049
	.byte	1,0,2,35,0,0,13,9,145,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	52048
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_MEI_Bits',0,9,249,21,16,4,12
	.byte	'GTM_EIRQ',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'BRC_EIRQ',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'FIFO0_EIRQ',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'TIM0_EIRQ',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'TIM1_EIRQ',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'TIM2_EIRQ',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	9049
	.byte	5,20,2,35,0,12
	.byte	'MCS0_EIRQ',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'MCS1_EIRQ',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'MCS2_EIRQ',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	9049
	.byte	5,12,2,35,0,12
	.byte	'SPE0_EIRQ',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'SPE1_EIRQ',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	9049
	.byte	2,8,2,35,0,12
	.byte	'CMP_EIRQ',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'DPLL_EIRQ',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	9049
	.byte	6,0,2,35,0,0,13,9,177,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	52920
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI0_Bits',0,9,175,21,16,4,12
	.byte	'FIFO0_CH0_EIRQ',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'FIFO0_CH1_EIRQ',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'FIFO0_CH2_EIRQ',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'FIFO0_CH3_EIRQ',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'FIFO0_CH4_EIRQ',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'FIFO0_CH5_EIRQ',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'FIFO0_CH6_EIRQ',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'FIFO0_CH7_EIRQ',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	9049
	.byte	24,0,2,35,0,0,13,9,153,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	53378
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI1_Bits',0,9,189,21,16,4,12
	.byte	'TIM0_CH0_EIRQ',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'TIM0_CH1_EIRQ',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'TIM0_CH2_EIRQ',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'TIM0_CH3_EIRQ',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'TIM0_CH4_EIRQ',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'TIM0_CH5_EIRQ',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'TIM0_CH6_EIRQ',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'TIM0_CH7_EIRQ',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'TIM1_CH0_EIRQ',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'TIM1_CH1_EIRQ',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'TIM1_CH2_EIRQ',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'TIM1_CH3_EIRQ',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'TIM1_CH4_EIRQ',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'TIM1_CH5_EIRQ',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'TIM1_CH6_EIRQ',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'TIM1_CH7_EIRQ',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'TIM2_CH0_EIRQ',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'TIM2_CH1_EIRQ',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'TIM2_CH2_EIRQ',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'TIM2_CH3_EIRQ',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'TIM2_CH4_EIRQ',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'TIM2_CH5_EIRQ',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'TIM2_CH6_EIRQ',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'TIM2_CH7_EIRQ',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,161,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	53683
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI3_Bits',0,9,219,21,16,4,12
	.byte	'MCS0_CH0_EIRQ',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'MCS0_CH1_EIRQ',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'MCS0_CH2_EIRQ',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'MCS0_CH3_EIRQ',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'MCS0_CH4_EIRQ',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'MCS0_CH5_EIRQ',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'MCS0_CH6_EIRQ',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'MCS0_CH7_EIRQ',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'MCS1_CH0_EIRQ',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'MCS1_CH1_EIRQ',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'MCS1_CH2_EIRQ',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'MCS1_CH3_EIRQ',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'MCS1_CH4_EIRQ',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'MCS1_CH5_EIRQ',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'MCS1_CH6_EIRQ',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'MCS1_CH7_EIRQ',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'MCS2_CH0_EIRQ',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'MCS2_CH1_EIRQ',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'MCS2_CH2_EIRQ',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'MCS2_CH3_EIRQ',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'MCS2_CH4_EIRQ',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'MCS2_CH5_EIRQ',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'MCS2_CH6_EIRQ',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'MCS2_CH7_EIRQ',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,169,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	54381
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM',0,9,133,59,25,68,14
	.byte	'IRQG_0',0
	.word	49066
	.byte	4,2,35,0,14
	.byte	'IRQG_1',0
	.word	49814
	.byte	4,2,35,4,14
	.byte	'IRQG_2',0
	.word	50485
	.byte	4,2,35,8,14
	.byte	'reserved_C',0
	.word	1561
	.byte	4,2,35,12,14
	.byte	'IRQG_4',0
	.word	51156
	.byte	4,2,35,16,14
	.byte	'reserved_14',0
	.word	1561
	.byte	4,2,35,20,14
	.byte	'IRQG_6',0
	.word	52008
	.byte	4,2,35,24,14
	.byte	'reserved_1C',0
	.word	3380
	.byte	8,2,35,28,14
	.byte	'IRQG_9',0
	.word	52880
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	3380
	.byte	8,2,35,40,14
	.byte	'IRQG_MEI',0
	.word	53338
	.byte	4,2,35,48,14
	.byte	'IRQG_CEI0',0
	.word	53643
	.byte	4,2,35,52,14
	.byte	'IRQG_CEI1',0
	.word	54341
	.byte	4,2,35,56,14
	.byte	'reserved_3C',0
	.word	1561
	.byte	4,2,35,60,14
	.byte	'IRQG_CEI3',0
	.word	55039
	.byte	4,2,35,64,0,10
	.word	55079
	.byte	15,188,3
	.word	516
	.byte	16,187,3,0,11
	.byte	'_Ifx_GTM_SPE_CTRL_STAT_Bits',0,9,246,27,16,4,12
	.byte	'SPE_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'SIE0',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'SIE1',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'SIE2',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'TRIG_SEL',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'TIM_SEL',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'FSOM',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'SPE_PAT_PTR',0,4
	.word	9049
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'AIP',0,4
	.word	9049
	.byte	3,17,2,35,0,12
	.byte	'ADIR',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'PIP',0,4
	.word	9049
	.byte	3,13,2,35,0,12
	.byte	'PDIR',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'NIP',0,4
	.word	9049
	.byte	3,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'FSOL',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,153,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	55390
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_PAT_Bits',0,9,204,28,16,4,12
	.byte	'IP0_VAL',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'IP0_PAT',0,4
	.word	9049
	.byte	3,28,2,35,0,12
	.byte	'IP1_VAL',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'IP1_PAT',0,4
	.word	9049
	.byte	3,24,2,35,0,12
	.byte	'IP2_VAL',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'IP2_PAT',0,4
	.word	9049
	.byte	3,20,2,35,0,12
	.byte	'IP3_VAL',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'IP3_PAT',0,4
	.word	9049
	.byte	3,16,2,35,0,12
	.byte	'IP4_VAL',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'IP4_PAT',0,4
	.word	9049
	.byte	3,12,2,35,0,12
	.byte	'IP5_VAL',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'IP5_PAT',0,4
	.word	9049
	.byte	3,8,2,35,0,12
	.byte	'IP6_VAL',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'IP6_PAT',0,4
	.word	9049
	.byte	3,4,2,35,0,12
	.byte	'IP7_VAL',0,4
	.word	9049
	.byte	1,3,2,35,0,12
	.byte	'IP7_PAT',0,4
	.word	9049
	.byte	3,0,2,35,0,0,13,9,217,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	55748
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_OUT_PAT_Bits',0,9,197,28,16,4,12
	.byte	'SPE_OUT_PAT',0,4
	.word	9049
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,209,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	56121
	.byte	4,2,35,0,0,15,32
	.word	56200
	.byte	16,7,0,11
	.byte	'_Ifx_GTM_SPE_OUT_CTRL_Bits',0,9,190,28,16,4,12
	.byte	'SPE_OUT_CTRL',0,4
	.word	9049
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,201,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	56249
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_NOTIFY_Bits',0,9,179,28,16,4,12
	.byte	'SPE_NIPD',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'SPE_DCHG',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'SPE_PERR',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'SPE_BIS',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'SPE_RCMP',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	9049
	.byte	27,0,2,35,0,0,13,9,193,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	56370
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_EN_Bits',0,9,150,28,16,4,12
	.byte	'SPE_NIPD_IRQ_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'SPE_DCHG_IRQ_EN',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'SPE_PERR_IRQ_EN',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'SPE_BIS_IRQ_EN',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'SPE_RCMP_IRQ_EN',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	9049
	.byte	27,0,2,35,0,0,13,9,169,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	56567
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_FORCINT_Bits',0,9,161,28,16,4,12
	.byte	'TRG_SPE_NIPD',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'TRG_SPE_DCHG',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'TRG_SPE_PERR',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'TRG_SPE_BIS',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'TRG_SPE_RCMP',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	9049
	.byte	27,0,2,35,0,0,13,9,177,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	56795
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_MODE_Bits',0,9,172,28,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	30,0,2,35,0,0,13,9,185,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	57013
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_EIRQ_EN_Bits',0,9,139,28,16,4,12
	.byte	'SPE_NIPD_EIRQ_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'SPE_DCHG_EIRQ_EN',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'SPE_PERR_EIRQ_EN',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'SPE_BIS_EIRQ_EN',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'SPE_RCMP_EIRQ_EN',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	9049
	.byte	27,0,2,35,0,0,13,9,161,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	57129
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_CNT_Bits',0,9,239,27,16,4,12
	.byte	'CNT',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,145,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	57363
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_CMP_Bits',0,9,232,27,16,4,12
	.byte	'CMP',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,137,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	57470
	.byte	4,2,35,0,0,15,56
	.word	516
	.byte	16,55,0,11
	.byte	'_Ifx_GTM_SPE',0,9,208,59,25,128,1,14
	.byte	'CTRL_STAT',0
	.word	55708
	.byte	4,2,35,0,14
	.byte	'PAT',0
	.word	56081
	.byte	4,2,35,4,14
	.byte	'OUT_PAT',0
	.word	56240
	.byte	32,2,35,8,14
	.byte	'OUT_CTRL',0
	.word	56330
	.byte	4,2,35,40,14
	.byte	'IRQ_NOTIFY',0
	.word	56527
	.byte	4,2,35,44,14
	.byte	'IRQ_EN',0
	.word	56755
	.byte	4,2,35,48,14
	.byte	'IRQ_FORCINT',0
	.word	56973
	.byte	4,2,35,52,14
	.byte	'IRQ_MODE',0
	.word	57089
	.byte	4,2,35,56,14
	.byte	'EIRQ_EN',0
	.word	57323
	.byte	4,2,35,60,14
	.byte	'CNT',0
	.word	57430
	.byte	4,2,35,64,14
	.byte	'CMP',0
	.word	57537
	.byte	4,2,35,68,14
	.byte	'reserved_48',0
	.word	57577
	.byte	56,2,35,72,0,15,128,2
	.word	57586
	.byte	16,1,0,10
	.word	57813
	.byte	15,128,12
	.word	516
	.byte	16,255,11,0,11
	.byte	'_Ifx_GTM_MAP_CTRL_Bits',0,9,171,23,16,4,12
	.byte	'TSEL',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'SSL',0,4
	.word	9049
	.byte	3,28,2,35,0,12
	.byte	'LSEL',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	9049
	.byte	11,16,2,35,0,12
	.byte	'TSPP0_EN',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'TSPP0_DLD',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	9049
	.byte	2,12,2,35,0,12
	.byte	'TSPP0_I0V',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'TSPP0_I1V',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'TSPP0_I2V',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'TSPP1_EN',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'TSPP1_DLD',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	9049
	.byte	2,4,2,35,0,12
	.byte	'TSPP1_I0V',0,4
	.word	9049
	.byte	1,3,2,35,0,12
	.byte	'TSPP1_I1V',0,4
	.word	9049
	.byte	1,2,2,35,0,12
	.byte	'TSPP1_I2V',0,4
	.word	9049
	.byte	1,1,2,35,0,12
	.byte	'reserved_31',0,4
	.word	9049
	.byte	1,0,2,35,0,0,13,9,169,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	57839
	.byte	4,2,35,0,0,15,60
	.word	516
	.byte	16,59,0,11
	.byte	'_Ifx_GTM_MCFG_CTRL_Bits',0,9,194,23,16,4,12
	.byte	'MEM0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'MEM1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'MEM2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	9049
	.byte	26,0,2,35,0,0,13,9,177,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58287
	.byte	4,2,35,0,0,15,188,1
	.word	516
	.byte	16,187,1,0,11
	.byte	'_Ifx_GTM_TIM_CH_GPR0_Bits',0,9,248,29,16,4,12
	.byte	'GPR0',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'ECNT',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,225,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58439
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_GPR1_Bits',0,9,255,29,16,4,12
	.byte	'GPR1',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'ECNT',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,233,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58544
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_CNT_Bits',0,9,165,29,16,4,12
	.byte	'CNT',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,161,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58649
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_ECNT_Bits',0,9,208,29,16,4,12
	.byte	'ECNT',0,4
	.word	9049
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,185,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58759
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_CNTS_Bits',0,9,172,29,16,4,12
	.byte	'CNTS',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'ECNT',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,169,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58871
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_TDUC_Bits',0,9,177,30,16,4,12
	.byte	'TO_CNT',0,4
	.word	9049
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	9049
	.byte	24,0,2,35,0,0,13,9,145,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58976
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_TDUV_Bits',0,9,184,30,16,4,12
	.byte	'TOV',0,4
	.word	9049
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	9049
	.byte	20,4,2,35,0,12
	.byte	'TCS',0,4
	.word	9049
	.byte	3,1,2,35,0,12
	.byte	'reserved_31',0,4
	.word	9049
	.byte	1,0,2,35,0,0,13,9,153,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59089
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_FLT_RE_Bits',0,9,241,29,16,4,12
	.byte	'FLT_RE',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,217,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59237
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_FLT_FE_Bits',0,9,234,29,16,4,12
	.byte	'FLT_FE',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,209,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59353
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_CTRL_Bits',0,9,179,29,16,4,12
	.byte	'TIM_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'TIM_MODE',0,4
	.word	9049
	.byte	3,28,2,35,0,12
	.byte	'OSM',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'CICTRL',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'TBU0_SEL',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'GPR0_SEL',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'GPR1_SEL',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'CNTS_SEL',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'DSL',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'ISL',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'ECNT_RESET',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'FLT_EN',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'FLT_CNT_FRQ',0,4
	.word	9049
	.byte	2,13,2,35,0,12
	.byte	'EXT_CAP_EN',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'FLT_MODE_RE',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'FLT_CTR_RE',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'FLT_MODE_FE',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'FLT_CTR_FE',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'CLK_SEL',0,4
	.word	9049
	.byte	3,5,2,35,0,12
	.byte	'FR_ECNT_OFL',0,4
	.word	9049
	.byte	1,4,2,35,0,12
	.byte	'EGPR0_SEL',0,4
	.word	9049
	.byte	1,3,2,35,0,12
	.byte	'EGPR1_SEL',0,4
	.word	9049
	.byte	1,2,2,35,0,12
	.byte	'TOCTRL',0,4
	.word	9049
	.byte	2,0,2,35,0,0,13,9,177,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59469
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_ECTRL_Bits',0,9,215,29,16,4,12
	.byte	'EXT_CAP_SRC',0,4
	.word	9049
	.byte	3,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	9049
	.byte	29,0,2,35,0,0,13,9,193,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60018
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits',0,9,165,30,16,4,12
	.byte	'NEWVAL',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'ECNTOFL',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'CNTOFL',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'GPROFL',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'TODET',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'GLITCHDET',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	9049
	.byte	26,0,2,35,0,0,13,9,137,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60137
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_EN_Bits',0,9,134,30,16,4,12
	.byte	'NEWVAL_IRQ_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'ECNTOFL_IRQ_EN',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'CNTOFL_IRQ_EN',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'GPROFL_IRQ_EN',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'TODET_IRQ_EN',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'GLITCHDET_IRQ_EN',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	9049
	.byte	26,0,2,35,0,0,13,9,241,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60349
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits',0,9,146,30,16,4,12
	.byte	'TRG_NEWVAL',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'TRG_ECNTOFL',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'TRG_CNTOFL',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'TRG_GPROFL',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'TRG_TODET',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'TRG_GLITCHDET',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	9049
	.byte	26,0,2,35,0,0,13,9,249,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60599
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_MODE_Bits',0,9,158,30,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	30,0,2,35,0,0,13,9,129,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60836
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_EIRQ_EN_Bits',0,9,222,29,16,4,12
	.byte	'NEWVAL_EIRQ_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'ECNTOFL_EIRQ_EN',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'CNTOFL_EIRQ_EN',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'GPROFL_EIRQ_EN',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'TODET_EIRQ_EN',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'GLITCHDET_EIRQ_EN',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	9049
	.byte	26,0,2,35,0,0,13,9,201,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60955
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH',0,9,221,56,25,120,14
	.byte	'GPR0',0
	.word	58504
	.byte	4,2,35,0,14
	.byte	'GPR1',0
	.word	58609
	.byte	4,2,35,4,14
	.byte	'CNT',0
	.word	58719
	.byte	4,2,35,8,14
	.byte	'ECNT',0
	.word	58831
	.byte	4,2,35,12,14
	.byte	'CNTS',0
	.word	58936
	.byte	4,2,35,16,14
	.byte	'TDUC',0
	.word	59049
	.byte	4,2,35,20,14
	.byte	'TDUV',0
	.word	59197
	.byte	4,2,35,24,14
	.byte	'FLT_RE',0
	.word	59313
	.byte	4,2,35,28,14
	.byte	'FLT_FE',0
	.word	59429
	.byte	4,2,35,32,14
	.byte	'CTRL',0
	.word	59978
	.byte	4,2,35,36,14
	.byte	'ECTRL',0
	.word	60097
	.byte	4,2,35,40,14
	.byte	'IRQ_NOTIFY',0
	.word	60309
	.byte	4,2,35,44,14
	.byte	'IRQ_EN',0
	.word	60559
	.byte	4,2,35,48,14
	.byte	'IRQ_FORCINT',0
	.word	60796
	.byte	4,2,35,52,14
	.byte	'IRQ_MODE',0
	.word	60915
	.byte	4,2,35,56,14
	.byte	'EIRQ_EN',0
	.word	61172
	.byte	4,2,35,60,14
	.byte	'reserved_40',0
	.word	57577
	.byte	56,2,35,64,0,10
	.word	61212
	.byte	11
	.byte	'_Ifx_GTM_TIM_IN_SRC_Bits',0,9,193,30,16,4,12
	.byte	'VAL_0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'MODE_0',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'VAL_1',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'MODE_1',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'VAL_2',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'MODE_2',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'VAL_3',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'MODE_3',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'VAL_4',0,4
	.word	9049
	.byte	2,14,2,35,0,12
	.byte	'MODE_4',0,4
	.word	9049
	.byte	2,12,2,35,0,12
	.byte	'VAL_5',0,4
	.word	9049
	.byte	2,10,2,35,0,12
	.byte	'MODE_5',0,4
	.word	9049
	.byte	2,8,2,35,0,12
	.byte	'VAL_6',0,4
	.word	9049
	.byte	2,6,2,35,0,12
	.byte	'MODE_6',0,4
	.word	9049
	.byte	2,4,2,35,0,12
	.byte	'VAL_7',0,4
	.word	9049
	.byte	2,2,2,35,0,12
	.byte	'MODE_7',0,4
	.word	9049
	.byte	2,0,2,35,0,0,13,9,161,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61511
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_RST_Bits',0,9,214,30,16,4,12
	.byte	'RST_CH0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	9049
	.byte	24,0,2,35,0,0,13,9,169,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61863
	.byte	4,2,35,0,0,10
	.word	61212
	.byte	10
	.word	61212
	.byte	10
	.word	61212
	.byte	10
	.word	61212
	.byte	10
	.word	61212
	.byte	10
	.word	61212
	.byte	10
	.word	61212
	.byte	15,136,8
	.word	516
	.byte	16,135,8,0,11
	.byte	'_Ifx_GTM_TIM',0,9,237,59,25,128,16,14
	.byte	'CH0',0
	.word	61506
	.byte	120,2,35,0,14
	.byte	'IN_SRC',0
	.word	61823
	.byte	4,2,35,120,14
	.byte	'RST',0
	.word	62066
	.byte	4,2,35,124,14
	.byte	'CH1',0
	.word	62106
	.byte	120,3,35,128,1,14
	.byte	'reserved_F8',0
	.word	3380
	.byte	8,3,35,248,1,14
	.byte	'CH2',0
	.word	62111
	.byte	120,3,35,128,2,14
	.byte	'reserved_178',0
	.word	3380
	.byte	8,3,35,248,2,14
	.byte	'CH3',0
	.word	62116
	.byte	120,3,35,128,3,14
	.byte	'reserved_1F8',0
	.word	3380
	.byte	8,3,35,248,3,14
	.byte	'CH4',0
	.word	62121
	.byte	120,3,35,128,4,14
	.byte	'reserved_278',0
	.word	3380
	.byte	8,3,35,248,4,14
	.byte	'CH5',0
	.word	62126
	.byte	120,3,35,128,5,14
	.byte	'reserved_2F8',0
	.word	3380
	.byte	8,3,35,248,5,14
	.byte	'CH6',0
	.word	62131
	.byte	120,3,35,128,6,14
	.byte	'reserved_378',0
	.word	3380
	.byte	8,3,35,248,6,14
	.byte	'CH7',0
	.word	62136
	.byte	120,3,35,128,7,14
	.byte	'reserved_3F8',0
	.word	62141
	.byte	136,8,3,35,248,7,0,15,128,48
	.word	62152
	.byte	16,2,0,10
	.word	62474
	.byte	15,128,176,1
	.word	516
	.byte	16,255,175,1,0,15,128,32
	.word	24559
	.byte	16,1,0,10
	.word	62502
	.byte	15,128,128,1
	.word	516
	.byte	16,255,127,0,15,128,64
	.word	15207
	.byte	16,3,0,10
	.word	62529
	.byte	15,128,160,2
	.word	516
	.byte	16,255,159,2,0,11
	.byte	'_Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO_Bits',0,9,235,18,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	23,0,2,35,0,0,13,9,233,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62557
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_F2A_RD_CH',0,9,231,55,25,4,14
	.byte	'ARU_RD_FIFO',0
	.word	62638
	.byte	4,2,35,0,0,15,32
	.word	62678
	.byte	16,7,0,10
	.word	62725
	.byte	11
	.byte	'_Ifx_GTM_F2A_STR_CH_STR_CFG_Bits',0,9,242,18,16,4,12
	.byte	'reserved_0',0,4
	.word	9049
	.byte	16,16,2,35,0,12
	.byte	'TMODE',0,4
	.word	9049
	.byte	2,14,2,35,0,12
	.byte	'DIR',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	9049
	.byte	13,0,2,35,0,0,13,9,241,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62739
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_F2A_STR_CH',0,9,237,55,25,4,14
	.byte	'STR_CFG',0
	.word	62856
	.byte	4,2,35,0,0,15,32
	.word	62896
	.byte	16,7,0,10
	.word	62940
	.byte	11
	.byte	'_Ifx_GTM_F2A_ENABLE_Bits',0,9,221,18,16,4,12
	.byte	'STR0_EN',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'STR1_EN',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'STR2_EN',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'STR3_EN',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'STR4_EN',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'STR5_EN',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'STR6_EN',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'STR7_EN',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,225,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62954
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_F2A',0,9,247,58,25,68,14
	.byte	'RD_CH',0
	.word	62734
	.byte	32,2,35,0,14
	.byte	'STR_CH',0
	.word	62949
	.byte	32,2,35,32,14
	.byte	'ENABLE',0
	.word	63161
	.byte	4,2,35,64,0,10
	.word	63201
	.byte	11
	.byte	'_Ifx_GTM_AFD_CH_BUF_ACC_Bits',0,9,122,16,4,12
	.byte	'DATA',0,4
	.word	9049
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	9049
	.byte	3,0,2,35,0,0,13,9,240,33,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63273
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_AFD_CH',0,9,153,55,25,16,14
	.byte	'BUF_ACC',0
	.word	63347
	.byte	4,2,35,0,14
	.byte	'reserved_4',0
	.word	3720
	.byte	12,2,35,4,0,15,128,1
	.word	63387
	.byte	16,7,0,10
	.word	63447
	.byte	11
	.byte	'_Ifx_GTM_AFD',0,9,142,57,25,128,1,14
	.byte	'CH',0
	.word	63457
	.byte	128,1,2,35,0,0,10
	.word	63462
	.byte	15,128,6
	.word	516
	.byte	16,255,5,0,11
	.byte	'_Ifx_GTM_FIFO_CH_CTRL_Bits',0,9,251,18,16,4,12
	.byte	'RBM',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'RAP',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'FLUSH',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'WULOCK',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	9049
	.byte	28,0,2,35,0,0,13,9,249,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63512
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_END_ADDR_Bits',0,9,143,19,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	9049
	.byte	22,0,2,35,0,0,13,9,137,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63673
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_START_ADDR_Bits',0,9,210,19,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	9049
	.byte	22,0,2,35,0,0,13,9,201,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63790
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_UPPER_WM_Bits',0,9,227,19,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	9049
	.byte	22,0,2,35,0,0,13,9,217,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63909
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_LOWER_WM_Bits',0,9,196,19,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	9049
	.byte	22,0,2,35,0,0,13,9,185,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64026
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_STATUS_Bits',0,9,217,19,16,4,12
	.byte	'EMPTY',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'FULL',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'LOW_WM',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'UP_WM',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	9049
	.byte	28,0,2,35,0,0,13,9,209,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64143
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_FILL_LEVEL_Bits',0,9,150,19,16,4,12
	.byte	'LEVEL',0,4
	.word	9049
	.byte	11,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	9049
	.byte	21,0,2,35,0,0,13,9,145,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64309
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_WR_PTR_Bits',0,9,234,19,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	9049
	.byte	22,0,2,35,0,0,13,9,225,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64429
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_RD_PTR_Bits',0,9,203,19,16,4,12
	.byte	'ADDR',0,4
	.word	9049
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	9049
	.byte	22,0,2,35,0,0,13,9,193,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64544
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_NOTIFY_Bits',0,9,186,19,16,4,12
	.byte	'FIFO_EMPTY',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'FIFO_FULL',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'FIFO_LWM',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'FIFO_UWM',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	9049
	.byte	28,0,2,35,0,0,13,9,177,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64659
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_EN_Bits',0,9,157,19,16,4,12
	.byte	'FIFO_EMPTY_IRQ_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'FIFO_FULL_IRQ_EN',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'FIFO_LWM_IRQ_EN',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'FIFO_UWM_IRQ_EN',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	9049
	.byte	28,0,2,35,0,0,13,9,153,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64844
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_FORCINT_Bits',0,9,167,19,16,4,12
	.byte	'TRG_FIFO_EMPTY',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'TRG_FIFO_FULL',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'TRG_FIFO_LWM',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'TRG_FIFO_UWM',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	9049
	.byte	28,0,2,35,0,0,13,9,161,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65053
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_MODE_Bits',0,9,177,19,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'DMA_HYSTERESIS',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'DMA_HYST_DIR',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	9049
	.byte	28,0,2,35,0,0,13,9,169,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65255
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_EIRQ_EN_Bits',0,9,133,19,16,4,12
	.byte	'FIFO_EMPTY_EIRQ_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'FIFO_FULL_EIRQ_EN',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'FIFO_LWM_EIRQ_EN',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'FIFO_UWM_EIRQ_EN',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'Reserved',0,4
	.word	9049
	.byte	28,0,2,35,0,0,13,9,129,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65425
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH',0,9,243,55,25,64,14
	.byte	'CTRL',0
	.word	63633
	.byte	4,2,35,0,14
	.byte	'END_ADDR',0
	.word	63750
	.byte	4,2,35,4,14
	.byte	'START_ADDR',0
	.word	63869
	.byte	4,2,35,8,14
	.byte	'UPPER_WM',0
	.word	63986
	.byte	4,2,35,12,14
	.byte	'LOWER_WM',0
	.word	64103
	.byte	4,2,35,16,14
	.byte	'STATUS',0
	.word	64269
	.byte	4,2,35,20,14
	.byte	'FILL_LEVEL',0
	.word	64389
	.byte	4,2,35,24,14
	.byte	'WR_PTR',0
	.word	64504
	.byte	4,2,35,28,14
	.byte	'RD_PTR',0
	.word	64619
	.byte	4,2,35,32,14
	.byte	'IRQ_NOTIFY',0
	.word	64804
	.byte	4,2,35,36,14
	.byte	'IRQ_EN',0
	.word	65013
	.byte	4,2,35,40,14
	.byte	'IRQ_FORCINT',0
	.word	65215
	.byte	4,2,35,44,14
	.byte	'IRQ_MODE',0
	.word	65385
	.byte	4,2,35,48,14
	.byte	'EIRQ_EN',0
	.word	65597
	.byte	4,2,35,52,14
	.byte	'reserved_38',0
	.word	3380
	.byte	8,2,35,56,0,15,128,4
	.word	65637
	.byte	16,7,0,10
	.word	65930
	.byte	11
	.byte	'_Ifx_GTM_FIFO',0,9,255,58,25,128,4,14
	.byte	'CH',0
	.word	65940
	.byte	128,4,2,35,0,0,10
	.word	65945
	.byte	15,128,244,3
	.word	516
	.byte	16,255,243,3,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_0_Bits',0,9,144,12,16,4,12
	.byte	'MLT',0,4
	.word	9049
	.byte	10,22,2,35,0,12
	.byte	'IFP',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'SNU',0,4
	.word	9049
	.byte	5,16,2,35,0,12
	.byte	'TNU',0,4
	.word	9049
	.byte	9,7,2,35,0,12
	.byte	'AMS',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'AMT',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'IDS',0,4
	.word	9049
	.byte	1,4,2,35,0,12
	.byte	'IDT',0,4
	.word	9049
	.byte	1,3,2,35,0,12
	.byte	'SEN',0,4
	.word	9049
	.byte	1,2,2,35,0,12
	.byte	'TEN',0,4
	.word	9049
	.byte	1,1,2,35,0,12
	.byte	'RMO',0,4
	.word	9049
	.byte	1,0,2,35,0,0,13,9,224,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65998
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_1_Bits',0,9,186,12,16,4,12
	.byte	'DMO',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'DEN',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'IDDS',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'COA',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'PIT',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'SGE1',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'DLM1',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'PCM1',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'SGE2',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'DLM2',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'PCM2',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'SYN_NS',0,4
	.word	9049
	.byte	5,16,2,35,0,12
	.byte	'SYN_NT',0,4
	.word	9049
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'LCD',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'SWR',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'SYSF',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'TS0_HRS',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'TS0_HRT',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'SMC',0,4
	.word	9049
	.byte	1,4,2,35,0,12
	.byte	'SSL',0,4
	.word	9049
	.byte	2,2,2,35,0,12
	.byte	'TSL',0,4
	.word	9049
	.byte	2,0,2,35,0,0,13,9,248,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66236
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_2_Bits',0,9,226,12,16,4,12
	.byte	'reserved_0',0,4
	.word	9049
	.byte	8,24,2,35,0,12
	.byte	'AEN0',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'AEN1',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'AEN2',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'AEN3',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'AEN4',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'AEN5',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'AEN6',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'AEN7',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'WAD0',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'WAD1',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'WAD2',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'WAD3',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'WAD4',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'WAD5',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'WAD6',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'WAD7',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,136,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66669
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_3_Bits',0,9,249,12,16,4,12
	.byte	'reserved_0',0,4
	.word	9049
	.byte	8,24,2,35,0,12
	.byte	'AEN8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'AEN9',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'AEN10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'AEN11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'AEN12',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'AEN13',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'AEN14',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'AEN15',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'WAD8',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'WAD9',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'WAD10',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'WAD11',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'WAD12',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'WAD13',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'WAD14',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'WAD15',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,144,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67043
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_4_Bits',0,9,144,13,16,4,12
	.byte	'reserved_0',0,4
	.word	9049
	.byte	8,24,2,35,0,12
	.byte	'AEN16',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'AEN17',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'AEN18',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'AEN19',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'AEN20',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'AEN21',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'AEN22',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'AEN23',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'WAD16',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'WAD17',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'WAD18',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'WAD19',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'WAD20',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'WAD21',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'WAD22',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'WAD23',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,152,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67429
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ACT_STA_Bits',0,9,230,10,16,4,12
	.byte	'ACT_Ni',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,192,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67819
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_OSW_Bits',0,9,147,16,16,4,12
	.byte	'SWON_S',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'SWON_T',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	6,24,2,35,0,12
	.byte	'OSS',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	9049
	.byte	22,0,2,35,0,0,13,9,175,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67934
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_AOSV_2_Bits',0,9,145,11,16,4,12
	.byte	'AOSV_2A',0,4
	.word	9049
	.byte	8,24,2,35,0,12
	.byte	'AOSV_2B',0,4
	.word	9049
	.byte	8,16,2,35,0,12
	.byte	'AOSV_2C',0,4
	.word	9049
	.byte	8,8,2,35,0,12
	.byte	'AOSV_2D',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,240,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68100
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APT_Bits',0,9,192,11,16,4,12
	.byte	'reserved_0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'WAPT',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'APT',0,4
	.word	9049
	.byte	10,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'WAPT_2B',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'APT_2B',0,4
	.word	9049
	.byte	10,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,144,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68249
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APS_Bits',0,9,162,11,16,4,12
	.byte	'reserved_0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'WAPS',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'APS',0,4
	.word	9049
	.byte	6,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	9049
	.byte	5,19,2,35,0,12
	.byte	'WAPS_1C2',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'APS_1C2',0,4
	.word	9049
	.byte	6,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	9049
	.byte	12,0,2,35,0,0,13,9,248,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68455
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APT_2C_Bits',0,9,184,11,16,4,12
	.byte	'reserved_0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'APT_2C',0,4
	.word	9049
	.byte	10,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	9049
	.byte	20,0,2,35,0,0,13,9,152,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68662
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APS_1C3_Bits',0,9,154,11,16,4,12
	.byte	'reserved_0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'APS_1C3',0,4
	.word	9049
	.byte	6,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	9049
	.byte	24,0,2,35,0,0,13,9,128,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68798
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NUTC_Bits',0,9,132,16,16,4,12
	.byte	'NUTE',0,4
	.word	9049
	.byte	10,22,2,35,0,12
	.byte	'FST',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	9049
	.byte	2,19,2,35,0,12
	.byte	'SYN_T',0,4
	.word	9049
	.byte	3,16,2,35,0,12
	.byte	'SYN_T_OLD',0,4
	.word	9049
	.byte	3,13,2,35,0,12
	.byte	'VTN',0,4
	.word	9049
	.byte	6,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	9049
	.byte	4,3,2,35,0,12
	.byte	'WNUT',0,4
	.word	9049
	.byte	1,2,2,35,0,12
	.byte	'WSYN',0,4
	.word	9049
	.byte	1,1,2,35,0,12
	.byte	'WVTN',0,4
	.word	9049
	.byte	1,0,2,35,0,0,13,9,167,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68935
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NUSC_Bits',0,9,246,15,16,4,12
	.byte	'NUSE',0,4
	.word	9049
	.byte	6,26,2,35,0,12
	.byte	'FSS',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'SYN_S',0,4
	.word	9049
	.byte	6,19,2,35,0,12
	.byte	'SYN_S_OLD',0,4
	.word	9049
	.byte	6,13,2,35,0,12
	.byte	'VSN',0,4
	.word	9049
	.byte	6,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	9049
	.byte	4,3,2,35,0,12
	.byte	'WNUS',0,4
	.word	9049
	.byte	1,2,2,35,0,12
	.byte	'WSYN',0,4
	.word	9049
	.byte	1,1,2,35,0,12
	.byte	'WVSN',0,4
	.word	9049
	.byte	1,0,2,35,0,0,13,9,159,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	69184
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NTI_CNT_Bits',0,9,239,15,16,4,12
	.byte	'NTI_CNT',0,4
	.word	9049
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	9049
	.byte	22,0,2,35,0,0,13,9,151,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	69410
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_NOTIFY_Bits',0,9,235,14,16,4,12
	.byte	'PDI',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'PEI',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'TINI',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'TAXI',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'SISI',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'TISI',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'MSI',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'MTI',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'SASI',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'TASI',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'PWI',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'W2I',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'W1I',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'GL1I',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'LL1I',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'EI',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'GL2I',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'LL2I',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'TE0I',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'TE1I',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'TE2I',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'TE3I',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'TE4I',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'CDTI',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'CDSI',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'TORI',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'SORI',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'DCGI',0,4
	.word	9049
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	9049
	.byte	4,0,2,35,0,0,13,9,163,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	69526
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_EN_Bits',0,9,160,14,16,4,12
	.byte	'PDI_IRQ_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'PEI_IRQ_EN',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'TINI_IRQ_EN',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'TAXI_IRQ_EN',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'SISI_IRQ_EN',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'TISI_IRQ_EN',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'MSI_IRQ_EN',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'MTI_IRQ_EN',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'SASI_IRQ_EN',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'TASI_IRQ_EN',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'PWI_IRQ_EN',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'W2I_IRQ_EN',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'W1I_IRQ_EN',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'GL1I_IRQ_EN',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'LL1I_IRQ_EN',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'EI_IRQ_EN',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'GL2I_IRQ_EN',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'LL2I_IRQ_EN',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'TE0I_IRQ_EN',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'TE1I_IRQ_EN',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'TE2I_IRQ_EN',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'TE3I_IRQ_EN',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'TE4I_IRQ_EN',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'CDTI_IRQ_EN',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'CDSI_IRQ_EN',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'TORI',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'SORI',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'DCGI',0,4
	.word	9049
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	9049
	.byte	4,0,2,35,0,0,13,9,139,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70065
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_FORCINT_Bits',0,9,194,14,16,4,12
	.byte	'TRG_PDI',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'TRG_PEI',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'TRG_TINI',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'TRG_TAXI',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'TRG_SISI',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'TRG_TISI',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'TRG_MSI',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'TRG_MTI',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'TRG_SASI',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'TRG_TASI',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'TRG_PWI',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'TRG_W2I',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'TRG_W1I',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'TRG_GL1I',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'TRG_LL1I',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'TRG_EI',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'TRG_GL2I',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'TRG_LL2I',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'TRG_TE0I',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'TRG_TE1I',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'TRG_TE2I',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'TRG_TE3I',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'TRG_TE4I',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'TRG_CDTI',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'TRG_CDSI',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'TRG_TORI',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'TRG_SORI',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'TRG_DCGI',0,4
	.word	9049
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	9049
	.byte	4,0,2,35,0,0,13,9,147,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70775
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_MODE_Bits',0,9,228,14,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	30,0,2,35,0,0,13,9,155,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	71427
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_EIRQ_EN_Bits',0,9,218,13,16,4,12
	.byte	'PDI_EIRQ_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'PEI_EIRQ_EN',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'TINI_EIRQ_EN',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'TAXI_EIRQ_EN',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'SISI_EIRQ_EN',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'TISI_EIRQ_EN',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'MSI_EIRQ_EN',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'MTI_EIRQ_EN',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'SASI_EIRQ_EN',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'TASI_EIRQ_EN',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'PWI_EIRQ_EN',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'W2I_EIRQ_EN',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'W1I_EIRQ_EN',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'GL1I_EIRQ_EN',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'LL1I_EIRQ_EN',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'EI_EIRQ_EN',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'GL2I_EIRQ_EN',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'LL2I_EIRQ_EN',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'TE0I_EIRQ_EN',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'TE1I_EIRQ_EN',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'TE2I_EIRQ_EN',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'TE3I_EIRQ_EN',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'TE4I_EIRQ_EN',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'CDTI_EIRQ_EN',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'CDSI_EIRQ_EN',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'TORI',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'SORI',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'DCGI',0,4
	.word	9049
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	9049
	.byte	4,0,2,35,0,0,13,9,218,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	71544
	.byte	4,2,35,0,0,15,92
	.word	516
	.byte	16,91,0,11
	.byte	'_Ifx_GTM_DPLL_INC_CNT1_Bits',0,9,145,14,16,4,12
	.byte	'INC_CNT1',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,250,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	72289
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_INC_CNT2_Bits',0,9,153,14,16,4,12
	.byte	'INC_CNT2',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,131,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	72407
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APT_SYNC_Bits',0,9,204,11,16,4,12
	.byte	'APT_2B_EXT',0,4
	.word	9049
	.byte	6,26,2,35,0,12
	.byte	'APT_2B_STATUS',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	9049
	.byte	7,18,2,35,0,12
	.byte	'APT_2B_OLD',0,4
	.word	9049
	.byte	10,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,160,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	72525
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APS_SYNC_Bits',0,9,174,11,16,4,12
	.byte	'APS_1C2_EXT',0,4
	.word	9049
	.byte	6,26,2,35,0,12
	.byte	'APS_1C2_STATUS',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	9049
	.byte	7,18,2,35,0,12
	.byte	'APS_1C2_OLD',0,4
	.word	9049
	.byte	6,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	9049
	.byte	12,0,2,35,0,0,13,9,136,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	72714
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TBU_TS0_T_Bits',0,9,212,17,16,4,12
	.byte	'TBU_TS0_T',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,225,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	72906
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TBU_TS0_S_Bits',0,9,205,17,16,4,12
	.byte	'TBU_TS0_S',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,217,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	73026
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_LD1_Bits',0,9,251,10,16,4,12
	.byte	'ADD_IN_LD_1',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,216,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	73146
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_LD2_Bits',0,9,130,11,16,4,12
	.byte	'ADD_IN_LD_2',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,224,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	73269
	.byte	4,2,35,0,0,15,44
	.word	516
	.byte	16,43,0,11
	.byte	'_Ifx_GTM_DPLL_STATUS_Bits',0,9,169,17,16,4,12
	.byte	'reserved_0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'CSO',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'CTO',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'CRO',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'RCS',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'RCT',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'PSE',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'SOR',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'MS',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'TOR',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'MT',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'RAM2_ERR',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	2,17,2,35,0,12
	.byte	'LOW_RES',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'CSVS',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'CSVT',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'CAIP2',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'CAIP1',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'ISN',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'ITN',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'BWD2',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'BWD1',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'LOCK2',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'SYS',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'SYT',0,4
	.word	9049
	.byte	1,4,2,35,0,12
	.byte	'FSD',0,4
	.word	9049
	.byte	1,3,2,35,0,12
	.byte	'FTD',0,4
	.word	9049
	.byte	1,2,2,35,0,12
	.byte	'LOCK1',0,4
	.word	9049
	.byte	1,1,2,35,0,12
	.byte	'ERR',0,4
	.word	9049
	.byte	1,0,2,35,0,0,13,9,209,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	73401
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ID_PMTR_Bits',0,9,138,14,16,4,12
	.byte	'ID_PMTR_x',0,4
	.word	9049
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	9049
	.byte	23,0,2,35,0,0,13,9,242,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	73988
	.byte	4,2,35,0,0,15,96
	.word	74065
	.byte	16,23,0,15,128,1
	.word	516
	.byte	16,127,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER_Bits',0,9,173,12,16,4,12
	.byte	'MLT',0,4
	.word	9049
	.byte	10,22,2,35,0,12
	.byte	'IFP',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	9049
	.byte	15,6,2,35,0,12
	.byte	'AMT',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'IDS',0,4
	.word	9049
	.byte	1,4,2,35,0,12
	.byte	'IDT',0,4
	.word	9049
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	9049
	.byte	2,1,2,35,0,12
	.byte	'RMO',0,4
	.word	9049
	.byte	1,0,2,35,0,0,13,9,240,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	74124
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE_Bits',0,9,160,12,16,4,12
	.byte	'reserved_0',0,4
	.word	9049
	.byte	10,22,2,35,0,12
	.byte	'IFP',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	9049
	.byte	14,7,2,35,0,12
	.byte	'AMS',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'IDS',0,4
	.word	9049
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	9049
	.byte	3,1,2,35,0,12
	.byte	'RMO',0,4
	.word	9049
	.byte	1,0,2,35,0,0,13,9,232,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	74348
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER_Bits',0,9,213,12,16,4,12
	.byte	'DMO',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	9049
	.byte	2,29,2,35,0,12
	.byte	'COA',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'PIT',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'SGE1',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'DLM1',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'PCM1',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	9049
	.byte	24,0,2,35,0,0,13,9,128,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	74585
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE_Bits',0,9,128,12,16,4,12
	.byte	'DMO',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	9049
	.byte	2,29,2,35,0,12
	.byte	'COA',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'PIT',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'SGE1',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'DLM1',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'PCM1',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'SGE2',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'DLM2',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'PCM2',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'SYN_NS',0,4
	.word	9049
	.byte	21,0,2,35,0,0,13,9,216,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	74810
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RAM_INI_Bits',0,9,228,16,16,4,12
	.byte	'INIT_1A',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'INIT_1B',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'INIT_2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'INIT_RAM',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	9049
	.byte	27,0,2,35,0,0,13,9,135,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75077
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSA_Bits',0,9,165,16,16,4,12
	.byte	'PSA',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,191,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75271
	.byte	4,2,35,0,0,15,96
	.word	75339
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_DLA_Bits',0,9,167,13,16,4,12
	.byte	'DLA',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,160,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75388
	.byte	4,2,35,0,0,15,96
	.word	75456
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_NA_Bits',0,9,189,15,16,4,12
	.byte	'DB',0,4
	.word	9049
	.byte	10,22,2,35,0,12
	.byte	'DW',0,4
	.word	9049
	.byte	10,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	9049
	.byte	12,0,2,35,0,0,13,9,223,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75505
	.byte	4,2,35,0,0,15,96
	.word	75585
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_DTA_Bits',0,9,195,13,16,4,12
	.byte	'DTA',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,192,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75634
	.byte	4,2,35,0,0,15,96
	.word	75702
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_TS_T_0_Bits',0,9,149,18,16,4,12
	.byte	'TRIGGER_TS',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,169,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75751
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TS_T_1_Bits',0,9,156,18,16,4,12
	.byte	'TRIGGER_TS',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,177,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75869
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_FTV_T_Bits',0,9,131,14,16,4,12
	.byte	'TRIGGER_FT',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,234,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75987
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TS_S_0_Bits',0,9,135,18,16,4,12
	.byte	'STATE_TS',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,153,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76104
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TS_S_1_Bits',0,9,142,18,16,4,12
	.byte	'STATE_TS',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,161,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76220
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_FTV_S_Bits',0,9,252,13,16,4,12
	.byte	'STATE_FT',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,226,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76336
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_THMI_Bits',0,9,226,17,16,4,12
	.byte	'THMI',0,4
	.word	9049
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,241,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76451
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_THMA_Bits',0,9,219,17,16,4,12
	.byte	'THMA',0,4
	.word	9049
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,233,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76561
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_THVAL_Bits',0,9,233,17,16,4,12
	.byte	'THVAL',0,4
	.word	9049
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,249,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76671
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TOV_Bits',0,9,247,17,16,4,12
	.byte	'DB',0,4
	.word	9049
	.byte	10,22,2,35,0,12
	.byte	'DW',0,4
	.word	9049
	.byte	6,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,137,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76783
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TOV_S_Bits',0,9,255,17,16,4,12
	.byte	'DB',0,4
	.word	9049
	.byte	10,22,2,35,0,12
	.byte	'DW',0,4
	.word	9049
	.byte	6,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,145,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76904
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_CAL1_Bits',0,9,237,10,16,4,12
	.byte	'ADD_IN_CAL_1',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,200,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77027
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_CAL2_Bits',0,9,244,10,16,4,12
	.byte	'ADD_IN_CAL_2',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,208,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77152
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MPVAL1_Bits',0,9,172,15,16,4,12
	.byte	'MPVAL1',0,4
	.word	9049
	.byte	16,16,2,35,0,12
	.byte	'SIX1',0,4
	.word	9049
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,206,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77277
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MPVAL2_Bits',0,9,181,15,16,4,12
	.byte	'MPVAL2',0,4
	.word	9049
	.byte	16,16,2,35,0,12
	.byte	'SIX2',0,4
	.word	9049
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,215,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77407
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_T_TAR_Bits',0,9,225,15,16,4,12
	.byte	'NMB_T_TAR',0,4
	.word	9049
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,135,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77537
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_T_TAR_OLD_Bits',0,9,232,15,16,4,12
	.byte	'NMB_T_TAR_OLD',0,4
	.word	9049
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,143,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77657
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_S_TAR_Bits',0,9,204,15,16,4,12
	.byte	'NMB_S_TAR',0,4
	.word	9049
	.byte	20,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	9049
	.byte	12,0,2,35,0,0,13,9,239,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77785
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_S_TAR_OLD_Bits',0,9,211,15,16,4,12
	.byte	'NMB_S_TAR_OLD',0,4
	.word	9049
	.byte	20,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	9049
	.byte	12,0,2,35,0,0,13,9,247,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77905
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_TX_Bits',0,9,254,16,16,4,12
	.byte	'RCDT_TX',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,160,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78033
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_SX_Bits',0,9,239,16,16,4,12
	.byte	'RCDT_SX',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,143,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78149
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_TX_NOM_Bits',0,9,134,17,16,4,12
	.byte	'RCDT_TX_NOM',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,169,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78265
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_SX_NOM_Bits',0,9,247,16,16,4,12
	.byte	'RCDT_SX_NOM',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,152,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78389
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RDT_T_ACT_Bits',0,9,155,17,16,4,12
	.byte	'RDT_T_ACT',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,193,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78513
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RDT_S_ACT_Bits',0,9,141,17,16,4,12
	.byte	'RDT_S_ACT',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,185,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78633
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_DT_T_ACT_Bits',0,9,188,13,16,4,12
	.byte	'DT_T_ACT',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,184,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78753
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_DT_S_ACT_Bits',0,9,174,13,16,4,12
	.byte	'DT_S_ACT',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,176,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78871
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_EDT_T_Bits',0,9,211,13,16,4,12
	.byte	'EDT_T',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,210,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78989
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MEDT_T_Bits',0,9,150,15,16,4,12
	.byte	'MEDT_T',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,181,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79101
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_EDT_S_Bits',0,9,203,13,16,4,12
	.byte	'EDT_S',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,201,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79215
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MEDT_S_Bits',0,9,142,15,16,4,12
	.byte	'MEDT_S',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,172,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79327
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_TX_Bits',0,9,228,11,16,4,12
	.byte	'CDT_TX',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,184,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79441
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_SX_Bits',0,9,214,11,16,4,12
	.byte	'CDT_SX',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,168,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79555
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_TX_NOM_Bits',0,9,235,11,16,4,12
	.byte	'CDT_TX_NOM',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,192,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79669
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_SX_NOM_Bits',0,9,221,11,16,4,12
	.byte	'CDT_SX_NOM',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,176,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79791
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TLR_Bits',0,9,240,17,16,4,12
	.byte	'TLR',0,4
	.word	9049
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	9049
	.byte	24,0,2,35,0,0,13,9,129,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79913
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_SLR_Bits',0,9,162,17,16,4,12
	.byte	'SLR',0,4
	.word	9049
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	9049
	.byte	24,0,2,35,0,0,13,9,201,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80020
	.byte	4,2,35,0,0,15,88
	.word	516
	.byte	16,87,0,11
	.byte	'_Ifx_GTM_DPLL_PDT_T_Bits',0,9,157,16,16,4,12
	.byte	'DB',0,4
	.word	9049
	.byte	14,18,2,35,0,12
	.byte	'DW',0,4
	.word	9049
	.byte	10,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,183,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80136
	.byte	4,2,35,0,0,15,96
	.word	80219
	.byte	16,23,0,15,96
	.word	516
	.byte	16,95,0,11
	.byte	'_Ifx_GTM_DPLL_MLS1_Bits',0,9,157,15,16,4,12
	.byte	'MLS1',0,4
	.word	9049
	.byte	18,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	9049
	.byte	14,0,2,35,0,0,13,9,189,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80277
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MLS2_Bits',0,9,164,15,16,4,12
	.byte	'MLS2',0,4
	.word	9049
	.byte	18,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	9049
	.byte	14,0,2,35,0,0,13,9,197,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80387
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CNT_NUM1_Bits',0,9,242,11,16,4,12
	.byte	'CNT_NUM_1',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,200,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80497
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CNT_NUM2_Bits',0,9,249,11,16,4,12
	.byte	'CNT_NUM_2',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,208,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80616
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PVT_Bits',0,9,221,16,16,4,12
	.byte	'PVT',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,255,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80735
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSTC_Bits',0,9,200,16,16,4,12
	.byte	'PSTC',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,231,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80843
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSSC_Bits',0,9,179,16,16,4,12
	.byte	'PSSC',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,207,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80953
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSTM_0_Bits',0,9,207,16,16,4,12
	.byte	'PSTM',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,239,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81063
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSTM_1_Bits',0,9,214,16,16,4,12
	.byte	'PSTM',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,247,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81175
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSSM_0_Bits',0,9,186,16,16,4,12
	.byte	'PSSM',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,215,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81287
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSSM_1_Bits',0,9,193,16,16,4,12
	.byte	'PSSM',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,223,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81399
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_T_Bits',0,9,218,15,16,4,12
	.byte	'NMB_T',0,4
	.word	9049
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,255,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81511
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_S_Bits',0,9,197,15,16,4,12
	.byte	'NMB_S',0,4
	.word	9049
	.byte	20,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	9049
	.byte	12,0,2,35,0,0,13,9,231,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81623
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RDT_S_Bits',0,9,148,17,16,4,12
	.byte	'RDT_S',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,177,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81735
	.byte	4,2,35,0,0,15,128,2
	.word	81807
	.byte	16,63,0,11
	.byte	'_Ifx_GTM_DPLL_TSF_S_Bits',0,9,170,18,16,4,12
	.byte	'TSF_S',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,193,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81857
	.byte	4,2,35,0,0,15,128,2
	.word	81929
	.byte	16,63,0,11
	.byte	'_Ifx_GTM_DPLL_ADT_S_Bits',0,9,137,11,16,4,12
	.byte	'PD_S',0,4
	.word	9049
	.byte	16,16,2,35,0,12
	.byte	'NS',0,4
	.word	9049
	.byte	6,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	9049
	.byte	10,0,2,35,0,0,13,9,232,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81979
	.byte	4,2,35,0,0,15,128,2
	.word	82064
	.byte	16,63,0,11
	.byte	'_Ifx_GTM_DPLL_DT_S_Bits',0,9,181,13,16,4,12
	.byte	'DT_S',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,168,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82114
	.byte	4,2,35,0,0,15,128,2
	.word	82184
	.byte	16,63,0,15,128,8
	.word	516
	.byte	16,255,7,0,11
	.byte	'_Ifx_GTM_DPLL_TSAC_Bits',0,9,163,18,16,4,12
	.byte	'TSAC',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,185,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82245
	.byte	4,2,35,0,0,15,96
	.word	82315
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_PSAC_Bits',0,9,172,16,16,4,12
	.byte	'PSAC',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,199,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82364
	.byte	4,2,35,0,0,15,96
	.word	82434
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_ACB_Bits',0,9,217,10,16,4,12
	.byte	'ACB_0',0,4
	.word	9049
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	9049
	.byte	3,24,2,35,0,12
	.byte	'ACB_1',0,4
	.word	9049
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	3,16,2,35,0,12
	.byte	'ACB_2',0,4
	.word	9049
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	9049
	.byte	3,8,2,35,0,12
	.byte	'ACB_3',0,4
	.word	9049
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	9049
	.byte	3,0,2,35,0,0,13,9,184,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82483
	.byte	4,2,35,0,0,15,24
	.word	82672
	.byte	16,5,0,11
	.byte	'_Ifx_GTM_DPLL',0,9,254,57,25,152,30,14
	.byte	'CTRL_0',0
	.word	66196
	.byte	4,2,35,0,14
	.byte	'CTRL_1',0
	.word	66629
	.byte	4,2,35,4,14
	.byte	'CTRL_2',0
	.word	67003
	.byte	4,2,35,8,14
	.byte	'CTRL_3',0
	.word	67389
	.byte	4,2,35,12,14
	.byte	'CTRL_4',0
	.word	67779
	.byte	4,2,35,16,14
	.byte	'reserved_14',0
	.word	1561
	.byte	4,2,35,20,14
	.byte	'ACT_STA',0
	.word	67894
	.byte	4,2,35,24,14
	.byte	'OSW',0
	.word	68060
	.byte	4,2,35,28,14
	.byte	'AOSV_2',0
	.word	68209
	.byte	4,2,35,32,14
	.byte	'APT',0
	.word	68415
	.byte	4,2,35,36,14
	.byte	'APS',0
	.word	68622
	.byte	4,2,35,40,14
	.byte	'APT_2C',0
	.word	68758
	.byte	4,2,35,44,14
	.byte	'APS_1C3',0
	.word	68895
	.byte	4,2,35,48,14
	.byte	'NUTC',0
	.word	69144
	.byte	4,2,35,52,14
	.byte	'NUSC',0
	.word	69370
	.byte	4,2,35,56,14
	.byte	'NTI_CNT',0
	.word	69486
	.byte	4,2,35,60,14
	.byte	'IRQ_NOTIFY',0
	.word	70025
	.byte	4,2,35,64,14
	.byte	'IRQ_EN',0
	.word	70735
	.byte	4,2,35,68,14
	.byte	'IRQ_FORCINT',0
	.word	71387
	.byte	4,2,35,72,14
	.byte	'IRQ_MODE',0
	.word	71504
	.byte	4,2,35,76,14
	.byte	'EIRQ_EN',0
	.word	72240
	.byte	4,2,35,80,14
	.byte	'reserved_54',0
	.word	72280
	.byte	92,2,35,84,14
	.byte	'INC_CNT1',0
	.word	72367
	.byte	4,3,35,176,1,14
	.byte	'INC_CNT2',0
	.word	72485
	.byte	4,3,35,180,1,14
	.byte	'APT_SYNC',0
	.word	72674
	.byte	4,3,35,184,1,14
	.byte	'APS_SYNC',0
	.word	72866
	.byte	4,3,35,188,1,14
	.byte	'TBU_TS0_T',0
	.word	72986
	.byte	4,3,35,192,1,14
	.byte	'TBU_TS0_S',0
	.word	73106
	.byte	4,3,35,196,1,14
	.byte	'ADD_IN_LD1',0
	.word	73229
	.byte	4,3,35,200,1,14
	.byte	'ADD_IN_LD2',0
	.word	73352
	.byte	4,3,35,204,1,14
	.byte	'reserved_D0',0
	.word	73392
	.byte	44,3,35,208,1,14
	.byte	'STATUS',0
	.word	73948
	.byte	4,3,35,252,1,14
	.byte	'ID_PMTR',0
	.word	74105
	.byte	96,3,35,128,2,14
	.byte	'reserved_160',0
	.word	74114
	.byte	128,1,3,35,224,2,14
	.byte	'CTRL_0_SHADOW_TRIGGER',0
	.word	74308
	.byte	4,3,35,224,3,14
	.byte	'CTRL_0_SHADOW_STATE',0
	.word	74545
	.byte	4,3,35,228,3,14
	.byte	'CTRL_1_SHADOW_TRIGGER',0
	.word	74770
	.byte	4,3,35,232,3,14
	.byte	'CRTL_1_SHADOW_STATE',0
	.word	75037
	.byte	4,3,35,236,3,14
	.byte	'reserved_1F0',0
	.word	3720
	.byte	12,3,35,240,3,14
	.byte	'RAM_INI',0
	.word	75231
	.byte	4,3,35,252,3,14
	.byte	'PSA',0
	.word	75379
	.byte	96,3,35,128,4,14
	.byte	'reserved_260',0
	.word	14941
	.byte	32,3,35,224,4,14
	.byte	'DLA',0
	.word	75496
	.byte	96,3,35,128,5,14
	.byte	'reserved_2E0',0
	.word	14941
	.byte	32,3,35,224,5,14
	.byte	'NA',0
	.word	75625
	.byte	96,3,35,128,6,14
	.byte	'reserved_360',0
	.word	14941
	.byte	32,3,35,224,6,14
	.byte	'DTA',0
	.word	75742
	.byte	96,3,35,128,7,14
	.byte	'reserved_3E0',0
	.word	14941
	.byte	32,3,35,224,7,14
	.byte	'TS_T_0',0
	.word	75829
	.byte	4,3,35,128,8,14
	.byte	'TS_T_1',0
	.word	75947
	.byte	4,3,35,132,8,14
	.byte	'FTV_T',0
	.word	76064
	.byte	4,3,35,136,8,14
	.byte	'reserved_40C',0
	.word	1561
	.byte	4,3,35,140,8,14
	.byte	'TS_S_0',0
	.word	76180
	.byte	4,3,35,144,8,14
	.byte	'TS_S_1',0
	.word	76296
	.byte	4,3,35,148,8,14
	.byte	'FTV_S',0
	.word	76411
	.byte	4,3,35,152,8,14
	.byte	'reserved_41C',0
	.word	1561
	.byte	4,3,35,156,8,14
	.byte	'THMI',0
	.word	76521
	.byte	4,3,35,160,8,14
	.byte	'THMA',0
	.word	76631
	.byte	4,3,35,164,8,14
	.byte	'THVAL',0
	.word	76743
	.byte	4,3,35,168,8,14
	.byte	'reserved_42C',0
	.word	1561
	.byte	4,3,35,172,8,14
	.byte	'TOV',0
	.word	76864
	.byte	4,3,35,176,8,14
	.byte	'TOV_S',0
	.word	76987
	.byte	4,3,35,180,8,14
	.byte	'ADD_IN_CAL1',0
	.word	77112
	.byte	4,3,35,184,8,14
	.byte	'ADD_IN_CAL2',0
	.word	77237
	.byte	4,3,35,188,8,14
	.byte	'MPVAL1',0
	.word	77367
	.byte	4,3,35,192,8,14
	.byte	'MPVAL2',0
	.word	77497
	.byte	4,3,35,196,8,14
	.byte	'NMB_T_TAR',0
	.word	77617
	.byte	4,3,35,200,8,14
	.byte	'NMB_T_TAR_OLD',0
	.word	77745
	.byte	4,3,35,204,8,14
	.byte	'NMB_S_TAR',0
	.word	77865
	.byte	4,3,35,208,8,14
	.byte	'NMB_S_TAR_OLD',0
	.word	77993
	.byte	4,3,35,212,8,14
	.byte	'reserved_458',0
	.word	3380
	.byte	8,3,35,216,8,14
	.byte	'RCDT_TX',0
	.word	78109
	.byte	4,3,35,224,8,14
	.byte	'RCDT_SX',0
	.word	78225
	.byte	4,3,35,228,8,14
	.byte	'RCDT_TX_NOM',0
	.word	78349
	.byte	4,3,35,232,8,14
	.byte	'RCDT_SX_NOM',0
	.word	78473
	.byte	4,3,35,236,8,14
	.byte	'RDT_T_ACT',0
	.word	78593
	.byte	4,3,35,240,8,14
	.byte	'RDT_S_ACT',0
	.word	78713
	.byte	4,3,35,244,8,14
	.byte	'DT_T_ACT',0
	.word	78831
	.byte	4,3,35,248,8,14
	.byte	'DT_S_ACT',0
	.word	78949
	.byte	4,3,35,252,8,14
	.byte	'EDT_T',0
	.word	79061
	.byte	4,3,35,128,9,14
	.byte	'MEDT_T',0
	.word	79175
	.byte	4,3,35,132,9,14
	.byte	'EDT_S',0
	.word	79287
	.byte	4,3,35,136,9,14
	.byte	'MEDT_S',0
	.word	79401
	.byte	4,3,35,140,9,14
	.byte	'CDT_TX',0
	.word	79515
	.byte	4,3,35,144,9,14
	.byte	'CDT_SX',0
	.word	79629
	.byte	4,3,35,148,9,14
	.byte	'CDT_TX_NOM',0
	.word	79751
	.byte	4,3,35,152,9,14
	.byte	'CDT_SX_NOM',0
	.word	79873
	.byte	4,3,35,156,9,14
	.byte	'TLR',0
	.word	79980
	.byte	4,3,35,160,9,14
	.byte	'SLR',0
	.word	80087
	.byte	4,3,35,164,9,14
	.byte	'reserved_4A8',0
	.word	80127
	.byte	88,3,35,168,9,14
	.byte	'PDT_T',0
	.word	80259
	.byte	96,3,35,128,10,14
	.byte	'reserved_560',0
	.word	80268
	.byte	96,3,35,224,10,14
	.byte	'MLS1',0
	.word	80347
	.byte	4,3,35,192,11,14
	.byte	'MLS2',0
	.word	80457
	.byte	4,3,35,196,11,14
	.byte	'CNT_NUM1',0
	.word	80576
	.byte	4,3,35,200,11,14
	.byte	'CNT_NUM2',0
	.word	80695
	.byte	4,3,35,204,11,14
	.byte	'PVT',0
	.word	80803
	.byte	4,3,35,208,11,14
	.byte	'reserved_5D4',0
	.word	3720
	.byte	12,3,35,212,11,14
	.byte	'PSTC',0
	.word	80913
	.byte	4,3,35,224,11,14
	.byte	'PSSC',0
	.word	81023
	.byte	4,3,35,228,11,14
	.byte	'PSTM_0',0
	.word	81135
	.byte	4,3,35,232,11,14
	.byte	'PSTM_1',0
	.word	81247
	.byte	4,3,35,236,11,14
	.byte	'PSSM_0',0
	.word	81359
	.byte	4,3,35,240,11,14
	.byte	'PSSM_1',0
	.word	81471
	.byte	4,3,35,244,11,14
	.byte	'NMB_T',0
	.word	81583
	.byte	4,3,35,248,11,14
	.byte	'NMB_S',0
	.word	81695
	.byte	4,3,35,252,11,14
	.byte	'RDT_S',0
	.word	81847
	.byte	128,2,3,35,128,12,14
	.byte	'TSF_S',0
	.word	81969
	.byte	128,2,3,35,128,14,14
	.byte	'ADT_S',0
	.word	82104
	.byte	128,2,3,35,128,16,14
	.byte	'DT_S',0
	.word	82224
	.byte	128,2,3,35,128,18,14
	.byte	'reserved_A00',0
	.word	82234
	.byte	128,8,3,35,128,20,14
	.byte	'TSAC',0
	.word	82355
	.byte	96,3,35,128,28,14
	.byte	'reserved_E60',0
	.word	14941
	.byte	32,3,35,224,28,14
	.byte	'PSAC',0
	.word	82474
	.byte	96,3,35,128,29,14
	.byte	'reserved_EE0',0
	.word	14941
	.byte	32,3,35,224,29,14
	.byte	'ACB',0
	.word	82712
	.byte	24,3,35,128,30,0,10
	.word	82721
	.byte	15,232,225,1
	.word	516
	.byte	16,231,225,1,0,11
	.byte	'_Ifx_GTM_MCS_CH_R0_Bits',0,9,198,24,16,4,12
	.byte	'DATA',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,137,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84916
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R1_Bits',0,9,205,24,16,4,12
	.byte	'DATA',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,145,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85026
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R2_Bits',0,9,212,24,16,4,12
	.byte	'DATA',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,153,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85136
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R3_Bits',0,9,219,24,16,4,12
	.byte	'DATA',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,161,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85246
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R4_Bits',0,9,226,24,16,4,12
	.byte	'DATA',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,169,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85356
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R5_Bits',0,9,233,24,16,4,12
	.byte	'DATA',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,177,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85466
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R6_Bits',0,9,240,24,16,4,12
	.byte	'DATA',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,185,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85576
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R7_Bits',0,9,247,24,16,4,12
	.byte	'DATA',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,193,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85686
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_CTRL_Bits',0,9,130,24,16,4,12
	.byte	'EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'IRQ',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'ERR',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'CY',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'Z',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'V',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'N',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'CAT',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'CWT',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	9049
	.byte	6,16,2,35,0,12
	.byte	'SP_CNT',0,4
	.word	9049
	.byte	3,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	9049
	.byte	13,0,2,35,0,0,13,9,209,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85796
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_ACB_Bits',0,9,247,23,16,4,12
	.byte	'ACB0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'ACB1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'ACB2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'ACB3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'ACB4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	9049
	.byte	27,0,2,35,0,0,13,9,201,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	86082
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH0_CTRG_Bits',0,9,203,23,16,4,12
	.byte	'TRG0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'TRG1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'TRG2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'TRG3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'TRG4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'TRG5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'TRG6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'TRG7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'TRG8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'TRG9',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'TRG10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'TRG11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'TRG12',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'TRG13',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'TRG14',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'TRG15',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,185,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	86256
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH0_STRG_Bits',0,9,225,23,16,4,12
	.byte	'TRG0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'TRG1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'TRG2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'TRG3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'TRG4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'TRG5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'TRG6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'TRG7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'TRG8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'TRG9',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'TRG10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'TRG11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'TRG12',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'TRG13',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'TRG14',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'TRG15',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,193,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	86615
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_PC_Bits',0,9,191,24,16,4,12
	.byte	'PC',0,4
	.word	9049
	.byte	14,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	9049
	.byte	18,0,2,35,0,0,13,9,129,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	86974
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_NOTIFY_Bits',0,9,182,24,16,4,12
	.byte	'MCS_IRQ',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'STK_ERR_IRQ',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'MEM_ERR_IRQ',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	9049
	.byte	29,0,2,35,0,0,13,9,249,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87082
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_EN_Bits',0,9,157,24,16,4,12
	.byte	'MCS_IRQ_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'STK_ERR_IRQ_EN',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'MEM_ERR_IRQ_EN',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	9049
	.byte	29,0,2,35,0,0,13,9,225,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87248
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_FORCINT_Bits',0,9,166,24,16,4,12
	.byte	'TRG_MCS_IRQ',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'TRG_STK_ERR_IRQ',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'TRG_MEM_ERR_IRQ',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	9049
	.byte	29,0,2,35,0,0,13,9,233,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87419
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_MODE_Bits',0,9,175,24,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	30,0,2,35,0,0,13,9,241,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87598
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_EIRQ_EN_Bits',0,9,148,24,16,4,12
	.byte	'MCS_EIRQ_EN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'STK_ERR_EIRQ_EN',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'MEM_ERR_EIRQ_EN',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	9049
	.byte	29,0,2,35,0,0,13,9,217,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87717
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH0',0,9,197,56,25,88,14
	.byte	'R0',0
	.word	84986
	.byte	4,2,35,0,14
	.byte	'R1',0
	.word	85096
	.byte	4,2,35,4,14
	.byte	'R2',0
	.word	85206
	.byte	4,2,35,8,14
	.byte	'R3',0
	.word	85316
	.byte	4,2,35,12,14
	.byte	'R4',0
	.word	85426
	.byte	4,2,35,16,14
	.byte	'R5',0
	.word	85536
	.byte	4,2,35,20,14
	.byte	'R6',0
	.word	85646
	.byte	4,2,35,24,14
	.byte	'R7',0
	.word	85756
	.byte	4,2,35,28,14
	.byte	'CTRL',0
	.word	86042
	.byte	4,2,35,32,14
	.byte	'ACB',0
	.word	86216
	.byte	4,2,35,36,14
	.byte	'CTRG',0
	.word	86575
	.byte	4,2,35,40,14
	.byte	'STRG',0
	.word	86934
	.byte	4,2,35,44,14
	.byte	'reserved_30',0
	.word	12233
	.byte	16,2,35,48,14
	.byte	'PC',0
	.word	87042
	.byte	4,2,35,64,14
	.byte	'IRQ_NOTIFY',0
	.word	87208
	.byte	4,2,35,68,14
	.byte	'IRQ_EN',0
	.word	87379
	.byte	4,2,35,72,14
	.byte	'IRQ_FORCINT',0
	.word	87558
	.byte	4,2,35,76,14
	.byte	'IRQ_MODE',0
	.word	87677
	.byte	4,2,35,80,14
	.byte	'EIRQ_EN',0
	.word	87852
	.byte	4,2,35,84,0,10
	.word	87892
	.byte	15,28
	.word	516
	.byte	16,27,0,11
	.byte	'_Ifx_GTM_MCS_CTRL_Bits',0,9,254,24,16,4,12
	.byte	'SCHED',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'HLT_SP_OFL',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	14,16,2,35,0,12
	.byte	'RAM_RST',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	9049
	.byte	15,0,2,35,0,0,13,9,201,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88206
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_RST_Bits',0,9,150,25,16,4,12
	.byte	'RST0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'RST1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'RST2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'RST3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'RST4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'RST5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'RST6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'RST7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'CAT0',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'CAT1',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'CAT2',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'CAT3',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'CAT4',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'CAT5',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'CAT6',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'CAT7',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'CWT0',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'CWT1',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'CWT2',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'CWT3',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'CWT4',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'CWT5',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'CWT6',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'CWT7',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,217,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88379
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_ERR_Bits',0,9,136,25,16,4,12
	.byte	'ERR0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'ERR1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'ERR2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'ERR3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'ERR4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'ERR5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'ERR6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'ERR7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	9049
	.byte	24,0,2,35,0,0,13,9,209,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88855
	.byte	4,2,35,0,0,15,40
	.word	516
	.byte	16,39,0,11
	.byte	'_Ifx_GTM_MCS_CH',0,9,174,56,25,128,1,14
	.byte	'R0',0
	.word	84986
	.byte	4,2,35,0,14
	.byte	'R1',0
	.word	85096
	.byte	4,2,35,4,14
	.byte	'R2',0
	.word	85206
	.byte	4,2,35,8,14
	.byte	'R3',0
	.word	85316
	.byte	4,2,35,12,14
	.byte	'R4',0
	.word	85426
	.byte	4,2,35,16,14
	.byte	'R5',0
	.word	85536
	.byte	4,2,35,20,14
	.byte	'R6',0
	.word	85646
	.byte	4,2,35,24,14
	.byte	'R7',0
	.word	85756
	.byte	4,2,35,28,14
	.byte	'CTRL',0
	.word	86042
	.byte	4,2,35,32,14
	.byte	'ACB',0
	.word	86216
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	2751
	.byte	24,2,35,40,14
	.byte	'PC',0
	.word	87042
	.byte	4,2,35,64,14
	.byte	'IRQ_NOTIFY',0
	.word	87208
	.byte	4,2,35,68,14
	.byte	'IRQ_EN',0
	.word	87379
	.byte	4,2,35,72,14
	.byte	'IRQ_FORCINT',0
	.word	87558
	.byte	4,2,35,76,14
	.byte	'IRQ_MODE',0
	.word	87677
	.byte	4,2,35,80,14
	.byte	'EIRQ_EN',0
	.word	87852
	.byte	4,2,35,84,14
	.byte	'reserved_58',0
	.word	89074
	.byte	40,2,35,88,0,10
	.word	89083
	.byte	10
	.word	89083
	.byte	10
	.word	89083
	.byte	10
	.word	89083
	.byte	10
	.word	89083
	.byte	10
	.word	89083
	.byte	10
	.word	89083
	.byte	15,128,24
	.word	516
	.byte	16,255,23,0,11
	.byte	'_Ifx_GTM_MCS',0,9,167,59,25,128,32,14
	.byte	'CH0',0
	.word	88192
	.byte	88,2,35,0,14
	.byte	'reserved_58',0
	.word	88197
	.byte	28,2,35,88,14
	.byte	'CTRL',0
	.word	88339
	.byte	4,2,35,116,14
	.byte	'RST',0
	.word	88815
	.byte	4,2,35,120,14
	.byte	'ERR',0
	.word	89034
	.byte	4,2,35,124,14
	.byte	'CH1',0
	.word	89376
	.byte	128,1,3,35,128,1,14
	.byte	'CH2',0
	.word	89381
	.byte	128,1,3,35,128,2,14
	.byte	'CH3',0
	.word	89386
	.byte	128,1,3,35,128,3,14
	.byte	'CH4',0
	.word	89391
	.byte	128,1,3,35,128,4,14
	.byte	'CH5',0
	.word	89396
	.byte	128,1,3,35,128,5,14
	.byte	'CH6',0
	.word	89401
	.byte	128,1,3,35,128,6,14
	.byte	'CH7',0
	.word	89406
	.byte	128,1,3,35,128,7,14
	.byte	'reserved_400',0
	.word	89411
	.byte	128,24,3,35,128,8,0,15,128,96
	.word	89422
	.byte	16,2,0,10
	.word	89646
	.byte	15,128,154,27
	.word	516
	.byte	16,255,153,27,0,11
	.byte	'_Ifx_GTM_CLC_Bits',0,9,214,8,16,4,12
	.byte	'DISR',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'DISS',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'EDIS',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	9049
	.byte	28,0,2,35,0,0,13,9,168,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89674
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_TIM_INSEL_Bits',0,9,227,22,16,4,12
	.byte	'CH0SEL',0,4
	.word	9049
	.byte	4,28,2,35,0,12
	.byte	'CH1SEL',0,4
	.word	9049
	.byte	4,24,2,35,0,12
	.byte	'CH2SEL',0,4
	.word	9049
	.byte	4,20,2,35,0,12
	.byte	'CH3SEL',0,4
	.word	9049
	.byte	4,16,2,35,0,12
	.byte	'CH4SEL',0,4
	.word	9049
	.byte	4,12,2,35,0,12
	.byte	'CH5SEL',0,4
	.word	9049
	.byte	4,8,2,35,0,12
	.byte	'CH6SEL',0,4
	.word	9049
	.byte	4,4,2,35,0,12
	.byte	'CH7SEL',0,4
	.word	9049
	.byte	4,0,2,35,0,0,13,9,233,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89831
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_TIM',0,9,168,56,25,4,14
	.byte	'INSEL',0
	.word	90015
	.byte	4,2,35,0,0,15,12
	.word	90055
	.byte	16,2,0,10
	.word	90099
	.byte	15,20
	.word	516
	.byte	16,19,0,11
	.byte	'_Ifx_GTM_INOUTSEL_T_OUTSEL_Bits',0,9,206,22,16,4,12
	.byte	'SEL0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'SEL1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'SEL2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'SEL3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'SEL4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'SEL5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'SEL6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'SEL7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'SEL8',0,4
	.word	9049
	.byte	2,14,2,35,0,12
	.byte	'SEL9',0,4
	.word	9049
	.byte	2,12,2,35,0,12
	.byte	'SEL10',0,4
	.word	9049
	.byte	2,10,2,35,0,12
	.byte	'SEL11',0,4
	.word	9049
	.byte	2,8,2,35,0,12
	.byte	'SEL12',0,4
	.word	9049
	.byte	2,6,2,35,0,12
	.byte	'SEL13',0,4
	.word	9049
	.byte	2,4,2,35,0,12
	.byte	'SEL14',0,4
	.word	9049
	.byte	2,2,2,35,0,12
	.byte	'SEL15',0,4
	.word	9049
	.byte	2,0,2,35,0,0,13,9,225,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90122
	.byte	4,2,35,0,0,15,40
	.word	90423
	.byte	16,9,0,11
	.byte	'_Ifx_GTM_INOUTSEL_T',0,9,162,56,25,40,14
	.byte	'OUTSEL',0
	.word	90463
	.byte	40,2,35,0,0,10
	.word	90472
	.byte	15,36
	.word	516
	.byte	16,35,0,11
	.byte	'_Ifx_GTM_INOUTSEL_DSADC_INSEL_Bits',0,9,157,22,16,4,12
	.byte	'INSEL0',0,4
	.word	9049
	.byte	4,28,2,35,0,12
	.byte	'INSEL1',0,4
	.word	9049
	.byte	4,24,2,35,0,12
	.byte	'INSEL2',0,4
	.word	9049
	.byte	4,20,2,35,0,12
	.byte	'INSEL3',0,4
	.word	9049
	.byte	4,16,2,35,0,12
	.byte	'INSEL4',0,4
	.word	9049
	.byte	4,12,2,35,0,12
	.byte	'INSEL5',0,4
	.word	9049
	.byte	4,8,2,35,0,12
	.byte	'INSEL6',0,4
	.word	9049
	.byte	4,4,2,35,0,12
	.byte	'INSEL7',0,4
	.word	9049
	.byte	4,0,2,35,0,0,13,9,193,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90529
	.byte	4,2,35,0,0,15,12
	.word	90715
	.byte	16,2,0,11
	.byte	'_Ifx_GTM_INOUTSEL_DSADC_OUTSEL_Bits',0,9,170,22,16,4,12
	.byte	'SEL0',0,4
	.word	9049
	.byte	3,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	9049
	.byte	5,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	9049
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	9049
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	9049
	.byte	17,0,2,35,0,0,13,9,201,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90764
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_DSADC',0,9,141,56,25,24,14
	.byte	'INSEL',0
	.word	90755
	.byte	12,2,35,0,14
	.byte	'OUTSEL00',0
	.word	90923
	.byte	4,2,35,12,14
	.byte	'reserved_10',0
	.word	1561
	.byte	4,2,35,16,14
	.byte	'OUTSEL10',0
	.word	90923
	.byte	4,2,35,20,0,10
	.word	90963
	.byte	11
	.byte	'_Ifx_GTM_INOUTSEL_CAN_OUTSEL_Bits',0,9,144,22,16,4,12
	.byte	'SEL0',0,4
	.word	9049
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	9049
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	9049
	.byte	4,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	9049
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	9049
	.byte	4,12,2,35,0,12
	.byte	'SEL5',0,4
	.word	9049
	.byte	4,8,2,35,0,12
	.byte	'SEL6',0,4
	.word	9049
	.byte	4,4,2,35,0,12
	.byte	'SEL7',0,4
	.word	9049
	.byte	4,0,2,35,0,0,13,9,185,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	91071
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_CAN',0,9,135,56,25,4,14
	.byte	'OUTSEL',0
	.word	91240
	.byte	4,2,35,0,0,10
	.word	91280
	.byte	11
	.byte	'_Ifx_GTM_INOUTSEL_PSI5_OUTSEL0_Bits',0,9,181,22,16,4,12
	.byte	'SEL0',0,4
	.word	9049
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	9049
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	9049
	.byte	4,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	9049
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	9049
	.byte	4,12,2,35,0,12
	.byte	'SEL5',0,4
	.word	9049
	.byte	4,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	8,0,2,35,0,0,13,9,209,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	91330
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_PSI5',0,9,150,56,25,4,14
	.byte	'OUTSEL0',0
	.word	91492
	.byte	4,2,35,0,0,10
	.word	91532
	.byte	11
	.byte	'_Ifx_GTM_INOUTSEL_PSI5S_OUTSEL_Bits',0,9,193,22,16,4,12
	.byte	'SEL0',0,4
	.word	9049
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	9049
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	9049
	.byte	4,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	9049
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	9049
	.byte	4,12,2,35,0,12
	.byte	'SEL5',0,4
	.word	9049
	.byte	4,8,2,35,0,12
	.byte	'SEL6',0,4
	.word	9049
	.byte	4,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	9049
	.byte	4,0,2,35,0,0,13,9,217,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	91584
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_PSI5S',0,9,156,56,25,4,14
	.byte	'OUTSEL',0
	.word	91769
	.byte	4,2,35,0,0,10
	.word	91809
	.byte	11
	.byte	'_Ifx_GTM_INOUTSEL',0,9,153,59,25,156,1,14
	.byte	'TIM',0
	.word	90108
	.byte	12,2,35,0,14
	.byte	'reserved_C',0
	.word	90113
	.byte	20,2,35,12,14
	.byte	'T',0
	.word	90515
	.byte	40,2,35,32,14
	.byte	'reserved_48',0
	.word	90520
	.byte	36,2,35,72,14
	.byte	'DSADC',0
	.word	91066
	.byte	24,2,35,108,14
	.byte	'reserved_84',0
	.word	3720
	.byte	12,3,35,132,1,14
	.byte	'CAN',0
	.word	91325
	.byte	4,3,35,144,1,14
	.byte	'PSI5',0
	.word	91579
	.byte	4,3,35,148,1,14
	.byte	'PSI5S',0
	.word	91856
	.byte	4,3,35,152,1,0,10
	.word	91861
	.byte	11
	.byte	'_Ifx_GTM_ADCTRIG0OUT0_Bits',0,9,92,16,4,12
	.byte	'SEL0',0,4
	.word	9049
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	9049
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	9049
	.byte	4,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	9049
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	9049
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	9049
	.byte	12,0,2,35,0,0,13,9,216,33,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	92039
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ADCTRIG1OUT0_Bits',0,9,103,16,4,12
	.byte	'SEL0',0,4
	.word	9049
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	9049
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	9049
	.byte	4,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	9049
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	9049
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	9049
	.byte	12,0,2,35,0,0,13,9,224,33,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	92215
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTBU0T_Bits',0,9,148,27,16,4,12
	.byte	'CV',0,4
	.word	9049
	.byte	27,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	9049
	.byte	1,4,2,35,0,12
	.byte	'CM',0,4
	.word	9049
	.byte	2,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	9049
	.byte	2,0,2,35,0,0,13,9,201,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	92391
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTBU1T_Bits',0,9,157,27,16,4,12
	.byte	'CV',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	4,4,2,35,0,12
	.byte	'EN',0,4
	.word	9049
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	9049
	.byte	3,0,2,35,0,0,13,9,209,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	92533
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTBU2T_Bits',0,9,166,27,16,4,12
	.byte	'CV',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	9049
	.byte	4,4,2,35,0,12
	.byte	'EN',0,4
	.word	9049
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	9049
	.byte	3,0,2,35,0,0,13,9,217,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	92675
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTSS_Bits',0,9,202,27,16,4,12
	.byte	'OTGB0',0,4
	.word	9049
	.byte	4,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	9049
	.byte	4,24,2,35,0,12
	.byte	'OTGB1',0,4
	.word	9049
	.byte	4,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	9049
	.byte	4,16,2,35,0,12
	.byte	'OTGB2',0,4
	.word	9049
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	9049
	.byte	12,0,2,35,0,0,13,9,241,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	92817
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTSC0_Bits',0,9,175,27,16,4,12
	.byte	'B0LMT',0,4
	.word	9049
	.byte	3,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'B0LMI',0,4
	.word	9049
	.byte	4,24,2,35,0,12
	.byte	'B0HMT',0,4
	.word	9049
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'B0HMI',0,4
	.word	9049
	.byte	4,16,2,35,0,12
	.byte	'B1LMT',0,4
	.word	9049
	.byte	3,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'B1LMI',0,4
	.word	9049
	.byte	4,8,2,35,0,12
	.byte	'B1HMT',0,4
	.word	9049
	.byte	3,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	9049
	.byte	1,4,2,35,0,12
	.byte	'B1HMI',0,4
	.word	9049
	.byte	4,0,2,35,0,0,13,9,225,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	93002
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTSC1_Bits',0,9,192,27,16,4,12
	.byte	'MCS',0,4
	.word	9049
	.byte	4,28,2,35,0,12
	.byte	'MI',0,4
	.word	9049
	.byte	4,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'MOE',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	9049
	.byte	22,0,2,35,0,0,13,9,233,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	93296
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ODA_Bits',0,9,140,27,16,4,12
	.byte	'DDREN',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'DREN',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	30,0,2,35,0,0,13,9,193,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	93452
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OCS_Bits',0,9,130,27,16,4,12
	.byte	'reserved_0',0,4
	.word	9049
	.byte	24,8,2,35,0,12
	.byte	'SUS',0,4
	.word	9049
	.byte	4,4,2,35,0,12
	.byte	'SUS_P',0,4
	.word	9049
	.byte	1,3,2,35,0,12
	.byte	'SUSSTA',0,4
	.word	9049
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	9049
	.byte	2,0,2,35,0,0,13,9,185,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	93572
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_KRSTCLR_Bits',0,9,164,23,16,4,12
	.byte	'CLR',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	9049
	.byte	31,0,2,35,0,0,13,9,161,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	93732
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_KRST1_Bits',0,9,157,23,16,4,12
	.byte	'RST',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	9049
	.byte	31,0,2,35,0,0,13,9,153,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	93838
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_KRST0_Bits',0,9,149,23,16,4,12
	.byte	'RST',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'RSTSTAT',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	9049
	.byte	30,0,2,35,0,0,13,9,145,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	93942
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ACCEN1_Bits',0,9,86,16,4,12
	.byte	'reserved_0',0,4
	.word	9049
	.byte	32,0,2,35,0,0,13,9,208,33,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94065
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ACCEN0_Bits',0,9,49,16,4,12
	.byte	'EN0',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'EN1',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'EN2',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'EN3',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'EN4',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'EN5',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'EN6',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'EN7',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'EN8',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'EN9',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'EN10',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'EN11',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'EN12',0,4
	.word	9049
	.byte	1,19,2,35,0,12
	.byte	'EN13',0,4
	.word	9049
	.byte	1,18,2,35,0,12
	.byte	'EN14',0,4
	.word	9049
	.byte	1,17,2,35,0,12
	.byte	'EN15',0,4
	.word	9049
	.byte	1,16,2,35,0,12
	.byte	'EN16',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'EN17',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'EN18',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'EN19',0,4
	.word	9049
	.byte	1,12,2,35,0,12
	.byte	'EN20',0,4
	.word	9049
	.byte	1,11,2,35,0,12
	.byte	'EN21',0,4
	.word	9049
	.byte	1,10,2,35,0,12
	.byte	'EN22',0,4
	.word	9049
	.byte	1,9,2,35,0,12
	.byte	'EN23',0,4
	.word	9049
	.byte	1,8,2,35,0,12
	.byte	'EN24',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'EN25',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'EN26',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'EN27',0,4
	.word	9049
	.byte	1,4,2,35,0,12
	.byte	'EN28',0,4
	.word	9049
	.byte	1,3,2,35,0,12
	.byte	'EN29',0,4
	.word	9049
	.byte	1,2,2,35,0,12
	.byte	'EN30',0,4
	.word	9049
	.byte	1,1,2,35,0,12
	.byte	'EN31',0,4
	.word	9049
	.byte	1,0,2,35,0,0,13,9,200,33,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94154
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DXOUTCON_Bits',0,9,198,18,16,4,12
	.byte	'OUT00',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'OUT01',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'OUT02',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	9049
	.byte	5,24,2,35,0,12
	.byte	'OUT10',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'OUT11',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'OUT12',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	9049
	.byte	21,0,2,35,0,0,13,9,209,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94723
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TRIGOUT_Bits',0,9,181,33,16,4,12
	.byte	'INT0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'INT1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'TRIG0',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'TRIG1',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'TRIG2',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'TRIG3',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'TRIG4',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'TRIG5',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	9049
	.byte	16,0,2,35,0,0,13,9,137,55,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94940
	.byte	4,2,35,0,0,15,12
	.word	95126
	.byte	16,2,0,15,52
	.word	516
	.byte	16,51,0,11
	.byte	'_Ifx_GTM_MCSINTSTAT_Bits',0,9,198,25,16,4,12
	.byte	'MCS000',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'MCS001',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'MCS010',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'MCS011',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'MCS100',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'MCS101',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'MCS110',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'MCS111',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'MCS200',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'MCS201',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'MCS210',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'MCS211',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	9049
	.byte	20,0,2,35,0,0,13,9,233,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95184
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCSINTCLR_Bits',0,9,180,25,16,4,12
	.byte	'MCS000',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'MCS001',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'MCS010',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'MCS011',0,4
	.word	9049
	.byte	1,28,2,35,0,12
	.byte	'MCS100',0,4
	.word	9049
	.byte	1,27,2,35,0,12
	.byte	'MCS101',0,4
	.word	9049
	.byte	1,26,2,35,0,12
	.byte	'MCS110',0,4
	.word	9049
	.byte	1,25,2,35,0,12
	.byte	'MCS111',0,4
	.word	9049
	.byte	1,24,2,35,0,12
	.byte	'MCS200',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'MCS201',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'MCS210',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'MCS211',0,4
	.word	9049
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	9049
	.byte	20,0,2,35,0,0,13,9,225,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95495
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DXINCON_Bits',0,9,177,18,16,4,12
	.byte	'IN00',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'IN01',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'IN02',0,4
	.word	9049
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	9049
	.byte	5,24,2,35,0,12
	.byte	'IN10',0,4
	.word	9049
	.byte	1,23,2,35,0,12
	.byte	'IN11',0,4
	.word	9049
	.byte	1,22,2,35,0,12
	.byte	'IN12',0,4
	.word	9049
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	9049
	.byte	5,16,2,35,0,12
	.byte	'DSS00',0,4
	.word	9049
	.byte	1,15,2,35,0,12
	.byte	'DSS01',0,4
	.word	9049
	.byte	1,14,2,35,0,12
	.byte	'DSS02',0,4
	.word	9049
	.byte	1,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	9049
	.byte	5,8,2,35,0,12
	.byte	'DSS10',0,4
	.word	9049
	.byte	1,7,2,35,0,12
	.byte	'DSS11',0,4
	.word	9049
	.byte	1,6,2,35,0,12
	.byte	'DSS12',0,4
	.word	9049
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	9049
	.byte	5,0,2,35,0,0,13,9,201,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95805
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DATAIN_Bits',0,9,211,10,16,4,12
	.byte	'DATA',0,4
	.word	9049
	.byte	32,0,2,35,0,0,13,9,176,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96163
	.byte	4,2,35,0,0,15,12
	.word	96207
	.byte	16,2,0,11
	.byte	'_Ifx_GTM_MSCSET_CON0_Bits',0,9,206,26,16,4,12
	.byte	'SEL0',0,4
	.word	9049
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	9049
	.byte	3,24,2,35,0,12
	.byte	'SEL1',0,4
	.word	9049
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	3,16,2,35,0,12
	.byte	'SEL2',0,4
	.word	9049
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	9049
	.byte	3,8,2,35,0,12
	.byte	'SEL3',0,4
	.word	9049
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	9049
	.byte	3,0,2,35,0,0,13,9,153,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96256
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCSET_CON1_Bits',0,9,219,26,16,4,12
	.byte	'SEL4',0,4
	.word	9049
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	9049
	.byte	3,24,2,35,0,12
	.byte	'SEL5',0,4
	.word	9049
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	3,16,2,35,0,12
	.byte	'SEL6',0,4
	.word	9049
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	9049
	.byte	3,8,2,35,0,12
	.byte	'SEL7',0,4
	.word	9049
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	9049
	.byte	3,0,2,35,0,0,13,9,161,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96484
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCSET_CON2_Bits',0,9,232,26,16,4,12
	.byte	'SEL8',0,4
	.word	9049
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	9049
	.byte	3,24,2,35,0,12
	.byte	'SEL9',0,4
	.word	9049
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	3,16,2,35,0,12
	.byte	'SEL10',0,4
	.word	9049
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	9049
	.byte	3,8,2,35,0,12
	.byte	'SEL11',0,4
	.word	9049
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	9049
	.byte	3,0,2,35,0,0,13,9,169,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96712
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCSET_CON3_Bits',0,9,245,26,16,4,12
	.byte	'SEL12',0,4
	.word	9049
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	9049
	.byte	3,24,2,35,0,12
	.byte	'SEL13',0,4
	.word	9049
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	9049
	.byte	3,16,2,35,0,12
	.byte	'SEL14',0,4
	.word	9049
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	9049
	.byte	3,8,2,35,0,12
	.byte	'SEL15',0,4
	.word	9049
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	9049
	.byte	3,0,2,35,0,0,13,9,177,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96942
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCSET',0,9,199,59,25,16,14
	.byte	'CON0',0
	.word	96444
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	96672
	.byte	4,2,35,4,14
	.byte	'CON2',0
	.word	96902
	.byte	4,2,35,8,14
	.byte	'CON3',0
	.word	97134
	.byte	4,2,35,12,0,15,64
	.word	97174
	.byte	16,3,0,10
	.word	97253
	.byte	11
	.byte	'_Ifx_GTM_MSCIN_INLCON_Bits',0,9,185,26,16,4,12
	.byte	'SEL0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'SEL1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'SEL2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'SEL3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'SEL4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'SEL5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'SEL6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'SEL7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'SEL8',0,4
	.word	9049
	.byte	2,14,2,35,0,12
	.byte	'SEL9',0,4
	.word	9049
	.byte	2,12,2,35,0,12
	.byte	'SEL10',0,4
	.word	9049
	.byte	2,10,2,35,0,12
	.byte	'SEL11',0,4
	.word	9049
	.byte	2,8,2,35,0,12
	.byte	'SEL12',0,4
	.word	9049
	.byte	2,6,2,35,0,12
	.byte	'SEL13',0,4
	.word	9049
	.byte	2,4,2,35,0,12
	.byte	'SEL14',0,4
	.word	9049
	.byte	2,2,2,35,0,12
	.byte	'SEL15',0,4
	.word	9049
	.byte	2,0,2,35,0,0,13,9,145,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	97267
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCIN_INHCON_Bits',0,9,164,26,16,4,12
	.byte	'SEL0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'SEL1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'SEL2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'SEL3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'SEL4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'SEL5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'SEL6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'SEL7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'SEL8',0,4
	.word	9049
	.byte	2,14,2,35,0,12
	.byte	'SEL9',0,4
	.word	9049
	.byte	2,12,2,35,0,12
	.byte	'SEL10',0,4
	.word	9049
	.byte	2,10,2,35,0,12
	.byte	'SEL11',0,4
	.word	9049
	.byte	2,8,2,35,0,12
	.byte	'SEL12',0,4
	.word	9049
	.byte	2,6,2,35,0,12
	.byte	'SEL13',0,4
	.word	9049
	.byte	2,4,2,35,0,12
	.byte	'SEL14',0,4
	.word	9049
	.byte	2,2,2,35,0,12
	.byte	'SEL15',0,4
	.word	9049
	.byte	2,0,2,35,0,0,13,9,137,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	97603
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCIN',0,9,192,59,25,8,14
	.byte	'INLCON',0
	.word	97563
	.byte	4,2,35,0,14
	.byte	'INHCON',0
	.word	97899
	.byte	4,2,35,4,0,15,16
	.word	97939
	.byte	16,1,0,10
	.word	97993
	.byte	11
	.byte	'_Ifx_GTM_MSC0INLEXTCON_Bits',0,9,143,26,16,4,12
	.byte	'SEL0',0,4
	.word	9049
	.byte	2,30,2,35,0,12
	.byte	'SEL1',0,4
	.word	9049
	.byte	2,28,2,35,0,12
	.byte	'SEL2',0,4
	.word	9049
	.byte	2,26,2,35,0,12
	.byte	'SEL3',0,4
	.word	9049
	.byte	2,24,2,35,0,12
	.byte	'SEL4',0,4
	.word	9049
	.byte	2,22,2,35,0,12
	.byte	'SEL5',0,4
	.word	9049
	.byte	2,20,2,35,0,12
	.byte	'SEL6',0,4
	.word	9049
	.byte	2,18,2,35,0,12
	.byte	'SEL7',0,4
	.word	9049
	.byte	2,16,2,35,0,12
	.byte	'SEL8',0,4
	.word	9049
	.byte	2,14,2,35,0,12
	.byte	'SEL9',0,4
	.word	9049
	.byte	2,12,2,35,0,12
	.byte	'SEL10',0,4
	.word	9049
	.byte	2,10,2,35,0,12
	.byte	'SEL11',0,4
	.word	9049
	.byte	2,8,2,35,0,12
	.byte	'SEL12',0,4
	.word	9049
	.byte	2,6,2,35,0,12
	.byte	'SEL13',0,4
	.word	9049
	.byte	2,4,2,35,0,12
	.byte	'SEL14',0,4
	.word	9049
	.byte	2,2,2,35,0,12
	.byte	'SEL15',0,4
	.word	9049
	.byte	2,0,2,35,0,0,13,9,129,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98007
	.byte	4,2,35,0,0,15,140,1
	.word	516
	.byte	16,139,1,0,11
	.byte	'_Ifx_GTM',0,9,190,60,25,128,128,40,14
	.byte	'REV',0
	.word	26108
	.byte	4,2,35,0,14
	.byte	'RST',0
	.word	26210
	.byte	4,2,35,4,14
	.byte	'CTRL',0
	.word	26376
	.byte	4,2,35,8,14
	.byte	'AEI_ADDR_XPT',0
	.word	26510
	.byte	4,2,35,12,14
	.byte	'IRQ_NOTIFY',0
	.word	26695
	.byte	4,2,35,16,14
	.byte	'IRQ_EN',0
	.word	26904
	.byte	4,2,35,20,14
	.byte	'IRQ_FORCINT',0
	.word	27106
	.byte	4,2,35,24,14
	.byte	'IRQ_MODE',0
	.word	27218
	.byte	4,2,35,28,14
	.byte	'EIRQ_EN',0
	.word	27432
	.byte	4,2,35,32,14
	.byte	'reserved_24',0
	.word	3720
	.byte	12,2,35,36,14
	.byte	'BRIDGE',0
	.word	28178
	.byte	12,2,35,48,14
	.byte	'reserved_3C',0
	.word	1561
	.byte	4,2,35,60,14
	.byte	'TIM_AUX_IN_SRC',0
	.word	28433
	.byte	12,2,35,64,14
	.byte	'reserved_4C',0
	.word	28442
	.byte	180,1,2,35,76,14
	.byte	'TBU',0
	.word	29500
	.byte	28,3,35,128,2,14
	.byte	'reserved_11C',0
	.word	29505
	.byte	100,3,35,156,2,14
	.byte	'MON',0
	.word	30615
	.byte	8,3,35,128,3,14
	.byte	'reserved_188',0
	.word	30620
	.byte	120,3,35,136,3,14
	.byte	'CMP',0
	.word	33938
	.byte	24,3,35,128,4,14
	.byte	'reserved_218',0
	.word	33943
	.byte	104,3,35,152,4,14
	.byte	'ARU',0
	.word	35932
	.byte	52,3,35,128,5,14
	.byte	'reserved_2B4',0
	.word	7037
	.byte	76,3,35,180,5,14
	.byte	'CMU',0
	.word	37648
	.byte	72,3,35,128,6,14
	.byte	'reserved_348',0
	.word	37653
	.byte	184,1,3,35,200,6,14
	.byte	'BRC',0
	.word	48599
	.byte	120,3,35,128,8,14
	.byte	'reserved_478',0
	.word	48604
	.byte	136,3,3,35,248,8,14
	.byte	'ICM',0
	.word	55374
	.byte	68,3,35,128,12,14
	.byte	'reserved_644',0
	.word	55379
	.byte	188,3,3,35,196,12,14
	.byte	'SPE',0
	.word	57823
	.byte	128,2,3,35,128,16,14
	.byte	'reserved_900',0
	.word	57828
	.byte	128,12,3,35,128,18,14
	.byte	'MAP_CTRL',0
	.word	58238
	.byte	4,3,35,128,30,14
	.byte	'reserved_F04',0
	.word	58278
	.byte	60,3,35,132,30,14
	.byte	'MCFG_CTRL',0
	.word	58388
	.byte	4,3,35,192,30,14
	.byte	'reserved_F44',0
	.word	58428
	.byte	188,1,3,35,196,30,14
	.byte	'TIM',0
	.word	62484
	.byte	128,48,3,35,128,32,14
	.byte	'reserved_2800',0
	.word	62489
	.byte	128,176,1,3,35,128,80,14
	.byte	'TOM',0
	.word	62512
	.byte	128,32,4,35,128,128,2,14
	.byte	'reserved_9000',0
	.word	62517
	.byte	128,128,1,4,35,128,160,2,14
	.byte	'ATOM',0
	.word	62539
	.byte	128,64,4,35,128,160,3,14
	.byte	'reserved_F000',0
	.word	62544
	.byte	128,160,2,4,35,128,224,3,14
	.byte	'F2A0',0
	.word	63268
	.byte	68,4,35,128,128,6,14
	.byte	'reserved_18044',0
	.word	58278
	.byte	60,4,35,196,128,6,14
	.byte	'AFD0',0
	.word	63496
	.byte	128,1,4,35,128,129,6,14
	.byte	'reserved_18100',0
	.word	63501
	.byte	128,6,4,35,128,130,6,14
	.byte	'FIFO0',0
	.word	65980
	.byte	128,4,4,35,128,136,6,14
	.byte	'reserved_18600',0
	.word	65985
	.byte	128,244,3,4,35,128,140,6,14
	.byte	'DPLL',0
	.word	84898
	.byte	152,30,4,35,128,128,10,14
	.byte	'reserved_28F18',0
	.word	84903
	.byte	232,225,1,4,35,152,158,10,14
	.byte	'MCS',0
	.word	89656
	.byte	128,96,4,35,128,128,12,14
	.byte	'reserved_33000',0
	.word	89661
	.byte	128,154,27,4,35,128,224,12,14
	.byte	'CLC',0
	.word	89791
	.byte	4,4,35,128,250,39,14
	.byte	'reserved_9FD04',0
	.word	3720
	.byte	12,4,35,132,250,39,14
	.byte	'INOUTSEL',0
	.word	92034
	.byte	156,1,4,35,144,250,39,14
	.byte	'reserved_9FDAC',0
	.word	1561
	.byte	4,4,35,172,251,39,14
	.byte	'ADCTRIG0OUT0',0
	.word	92175
	.byte	4,4,35,176,251,39,14
	.byte	'reserved_9FDB4',0
	.word	1561
	.byte	4,4,35,180,251,39,14
	.byte	'ADCTRIG1OUT0',0
	.word	92351
	.byte	4,4,35,184,251,39,14
	.byte	'reserved_9FDBC',0
	.word	3380
	.byte	8,4,35,188,251,39,14
	.byte	'OTBU0T',0
	.word	92493
	.byte	4,4,35,196,251,39,14
	.byte	'OTBU1T',0
	.word	92635
	.byte	4,4,35,200,251,39,14
	.byte	'OTBU2T',0
	.word	92777
	.byte	4,4,35,204,251,39,14
	.byte	'OTSS',0
	.word	92962
	.byte	4,4,35,208,251,39,14
	.byte	'OTSC0',0
	.word	93256
	.byte	4,4,35,212,251,39,14
	.byte	'OTSC1',0
	.word	93412
	.byte	4,4,35,216,251,39,14
	.byte	'ODA',0
	.word	93532
	.byte	4,4,35,220,251,39,14
	.byte	'reserved_9FDE0',0
	.word	3380
	.byte	8,4,35,224,251,39,14
	.byte	'OCS',0
	.word	93692
	.byte	4,4,35,232,251,39,14
	.byte	'KRSTCLR',0
	.word	93798
	.byte	4,4,35,236,251,39,14
	.byte	'KRST1',0
	.word	93902
	.byte	4,4,35,240,251,39,14
	.byte	'KRST0',0
	.word	94025
	.byte	4,4,35,244,251,39,14
	.byte	'ACCEN1',0
	.word	94114
	.byte	4,4,35,248,251,39,14
	.byte	'ACCEN0',0
	.word	94683
	.byte	4,4,35,252,251,39,14
	.byte	'DXOUTCON',0
	.word	94900
	.byte	4,4,35,128,252,39,14
	.byte	'TRIGOUT0',0
	.word	95166
	.byte	12,4,35,132,252,39,14
	.byte	'reserved_9FE10',0
	.word	95175
	.byte	52,4,35,144,252,39,14
	.byte	'TRIGOUT1',0
	.word	95166
	.byte	12,4,35,196,252,39,14
	.byte	'reserved_9FE50',0
	.word	14941
	.byte	32,4,35,208,252,39,14
	.byte	'MCSINTSTAT',0
	.word	95455
	.byte	4,4,35,240,252,39,14
	.byte	'MCSINTCLR',0
	.word	95765
	.byte	4,4,35,244,252,39,14
	.byte	'reserved_9FE78',0
	.word	2751
	.byte	24,4,35,248,252,39,14
	.byte	'DXINCON',0
	.word	96123
	.byte	4,4,35,144,253,39,14
	.byte	'DATAIN0',0
	.word	96247
	.byte	12,4,35,148,253,39,14
	.byte	'reserved_9FEA0',0
	.word	95175
	.byte	52,4,35,160,253,39,14
	.byte	'DATAIN1',0
	.word	96247
	.byte	12,4,35,212,253,39,14
	.byte	'reserved_9FEE0',0
	.word	14941
	.byte	32,4,35,224,253,39,14
	.byte	'MSCSET_1S',0
	.word	97262
	.byte	64,4,35,128,254,39,14
	.byte	'reserved_9FF40',0
	.word	14941
	.byte	32,4,35,192,254,39,14
	.byte	'MSCIN',0
	.word	98002
	.byte	16,4,35,224,254,39,14
	.byte	'MSC0INLEXTCON',0
	.word	98304
	.byte	4,4,35,240,254,39,14
	.byte	'reserved_9FF74',0
	.word	98344
	.byte	140,1,4,35,244,254,39,0,10
	.word	98355
.L279:
	.byte	3
	.word	100210
	.byte	34
	.byte	'IfxGtm_Tom_Ch_getClockFrequency',0,11,150,1,20
	.word	249
	.byte	1,1,1,1,5
	.byte	'gtm',0,11,150,1,61
	.word	100215
	.byte	5
	.byte	'tom',0,11,150,1,79
	.word	25478
	.byte	5
	.byte	'channel',0,11,150,1,98
	.word	25483
	.byte	0,34
	.byte	'IfxGtm_Tom_Ch_getCompareOne',0,11,164,1,19
	.word	20195
	.byte	1,1,1,1,5
	.byte	'tom',0,11,164,1,60
	.word	25478
	.byte	5
	.byte	'channel',0,11,164,1,79
	.word	25483
	.byte	0,10
	.word	20195
.L234:
	.byte	3
	.word	100381
	.byte	34
	.byte	'IfxGtm_Tom_Ch_getCompareOnePointer',0,11,171,1,29
	.word	100386
	.byte	1,1,1,1,5
	.byte	'tom',0,11,171,1,77
	.word	25478
	.byte	5
	.byte	'channel',0,11,171,1,96
	.word	25483
	.byte	0,17,10,150,2,9,1,18
	.byte	'IfxGtm_Tom_0',0,0,18
	.byte	'IfxGtm_Tom_1',0,1,0,34
	.byte	'IfxGtm_Tom_Ch_getSrcPointer',0,11,200,1,35
	.word	8828
	.byte	1,1,1,1,5
	.byte	'gtm',0,11,200,1,72
	.word	100215
	.byte	5
	.byte	'tom',0,11,200,1,88
	.word	100470
	.byte	5
	.byte	'channel',0,11,200,1,107
	.word	25483
	.byte	0,34
	.byte	'IfxGtm_Tom_Ch_getTgcPointer',0,11,207,1,29
	.word	20190
	.byte	1,1,1,1,5
	.byte	'tom',0,11,207,1,70
	.word	25478
	.byte	5
	.byte	'tgcIndex',0,11,207,1,82
	.word	20195
	.byte	0,34
	.byte	'IfxGtm_Tom_Ch_getTimerPointer',0,11,214,1,29
	.word	100386
	.byte	1,1,1,1,5
	.byte	'tom',0,11,214,1,72
	.word	25478
	.byte	5
	.byte	'channel',0,11,214,1,91
	.word	25483
	.byte	0,34
	.byte	'IfxGtm_Tom_Ch_isOneNotification',0,11,221,1,20
	.word	516
	.byte	1,1,1,1,5
	.byte	'tom',0,11,221,1,65
	.word	25478
	.byte	5
	.byte	'channel',0,11,221,1,84
	.word	25483
	.byte	0,34
	.byte	'IfxGtm_Tom_Ch_isZeroNotification',0,11,228,1,20
	.word	516
	.byte	1,1,1,1,5
	.byte	'tom',0,11,228,1,66
	.word	25478
	.byte	5
	.byte	'channel',0,11,228,1,85
	.word	25483
	.byte	0,17,11,84,9,1,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk0',0,0,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk1',0,1,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk2',0,2,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk3',0,3,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk4',0,4,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_noClock',0,5,0,33
	.byte	'IfxGtm_Tom_Ch_setClockSource',0,11,250,1,17,1,1,1,1,5
	.byte	'tom',0,11,250,1,59
	.word	25478
	.byte	5
	.byte	'channel',0,11,250,1,78
	.word	25483
	.byte	5
	.byte	'clock',0,11,250,1,108
	.word	100892
	.byte	0,33
	.byte	'IfxGtm_Tom_Ch_setCompareOneShadow',0,11,147,2,17,1,1,1,1,5
	.byte	'tom',0,11,147,2,64
	.word	25478
	.byte	5
	.byte	'channel',0,11,147,2,83
	.word	25483
	.byte	5
	.byte	'shadowOne',0,11,147,2,99
	.word	20195
	.byte	0,33
	.byte	'IfxGtm_Tom_Ch_setCompareZeroShadow',0,11,172,2,17,1,1,1,1,5
	.byte	'tom',0,11,172,2,65
	.word	25478
	.byte	5
	.byte	'channel',0,11,172,2,84
	.word	25483
	.byte	5
	.byte	'shadowZero',0,11,172,2,100
	.word	20195
	.byte	0,33
	.byte	'IfxGtm_Tom_Ch_setCounterValue',0,11,180,2,17,1,1,1,1,5
	.byte	'tom',0,11,180,2,60
	.word	25478
	.byte	5
	.byte	'channel',0,11,180,2,79
	.word	25483
	.byte	5
	.byte	'value',0,11,180,2,95
	.word	20195
	.byte	0,17,14,67,9,1,18
	.byte	'IfxGtm_IrqMode_level',0,0,18
	.byte	'IfxGtm_IrqMode_pulse',0,1,18
	.byte	'IfxGtm_IrqMode_pulseNotify',0,2,18
	.byte	'IfxGtm_IrqMode_singlePulse',0,3,0,33
	.byte	'IfxGtm_Tom_Ch_setNotification',0,11,198,2,17,1,1,1,1,5
	.byte	'tom',0,11,198,2,60
	.word	25478
	.byte	5
	.byte	'channel',0,11,198,2,79
	.word	25483
	.byte	5
	.byte	'mode',0,11,198,2,103
	.word	101451
	.byte	5
	.byte	'interruptOnCompareZero',0,11,198,2,117
	.word	516
	.byte	5
	.byte	'interruptOnCompareOne',0,11,198,2,149,1
	.word	516
	.byte	0,33
	.byte	'IfxGtm_Tom_Ch_setOneShotMode',0,11,206,2,17,1,1,1,1,5
	.byte	'tom',0,11,206,2,59
	.word	25478
	.byte	5
	.byte	'channel',0,11,206,2,78
	.word	25483
	.byte	5
	.byte	'enabled',0,11,206,2,95
	.word	516
	.byte	0,17,11,104,9,1,18
	.byte	'IfxGtm_Tom_Ch_ResetEvent_onCm0',0,0,18
	.byte	'IfxGtm_Tom_Ch_ResetEvent_onTrigger',0,1,0,33
	.byte	'IfxGtm_Tom_Ch_setResetSource',0,11,222,2,17,1,1,1,1,5
	.byte	'tom',0,11,222,2,59
	.word	25478
	.byte	5
	.byte	'channel',0,11,222,2,78
	.word	25483
	.byte	5
	.byte	'event',0,11,222,2,112
	.word	101795
	.byte	0,17,15,116,9,1,18
	.byte	'Ifx_ActiveState_low',0,0,18
	.byte	'Ifx_ActiveState_high',0,1,0,33
	.byte	'IfxGtm_Tom_Ch_setSignalLevel',0,11,230,2,17,1,1,1,1,5
	.byte	'tom',0,11,230,2,59
	.word	25478
	.byte	5
	.byte	'channel',0,11,230,2,78
	.word	25483
	.byte	5
	.byte	'activeState',0,11,230,2,103
	.word	101955
	.byte	0,17,11,96,9,1,18
	.byte	'IfxGtm_Tom_Ch_OutputTrigger_forward',0,0,18
	.byte	'IfxGtm_Tom_Ch_OutputTrigger_generate',0,1,0,33
	.byte	'IfxGtm_Tom_Ch_setTriggerOutput',0,11,246,2,17,1,1,1,1,5
	.byte	'tom',0,11,246,2,61
	.word	25478
	.byte	5
	.byte	'channel',0,11,246,2,80
	.word	25483
	.byte	5
	.byte	'trigger',0,11,246,2,117
	.word	102096
	.byte	0,29
	.word	20216
	.byte	30
	.word	20258
	.byte	30
	.word	20271
	.byte	6,0,34
	.byte	'IfxGtm_Tom_Tgc_buildFeature',0,11,146,3,19
	.word	20195
	.byte	1,1,1,1,5
	.byte	'enableMask',0,11,146,3,54
	.word	533
	.byte	5
	.byte	'disableMask',0,11,146,3,73
	.word	533
	.byte	5
	.byte	'bitfieldOffset',0,11,146,3,92
	.word	516
	.byte	0,33
	.byte	'IfxGtm_Tom_Tgc_enableChannels',0,11,189,3,17,1,1,1,1,5
	.byte	'tgc',0,11,189,3,64
	.word	20190
	.byte	5
	.byte	'enableMask',0,11,189,3,76
	.word	533
	.byte	5
	.byte	'disableMask',0,11,189,3,95
	.word	533
	.byte	5
	.byte	'immediate',0,11,189,3,116
	.word	516
	.byte	0,33
	.byte	'IfxGtm_Tom_Tgc_enableChannelsOutput',0,11,198,3,17,1,1,1,1,5
	.byte	'tgc',0,11,198,3,70
	.word	20190
	.byte	5
	.byte	'enableMask',0,11,198,3,82
	.word	533
	.byte	5
	.byte	'disableMask',0,11,198,3,101
	.word	533
	.byte	5
	.byte	'immediate',0,11,198,3,122
	.word	516
	.byte	0,33
	.byte	'IfxGtm_Tom_Tgc_setChannelsForceUpdate',0,11,247,3,17,1,1,1,1,5
	.byte	'tgc',0,11,247,3,72
	.word	20190
	.byte	5
	.byte	'enableMask',0,11,247,3,84
	.word	533
	.byte	5
	.byte	'disableMask',0,11,247,3,103
	.word	533
	.byte	5
	.byte	'resetEnableMask',0,11,247,3,123
	.word	533
	.byte	5
	.byte	'resetDisableMask',0,11,247,3,147,1
	.word	533
	.byte	0,33
	.byte	'IfxGtm_Tom_Tgc_trigger',0,11,133,4,17,1,1,1,1,5
	.byte	'tgc',0,11,133,4,57
	.word	20190
	.byte	0,17,16,86,9,1,18
	.byte	'IfxGtm_ToutSel_a',0,0,18
	.byte	'IfxGtm_ToutSel_b',0,1,18
	.byte	'IfxGtm_ToutSel_c',0,2,18
	.byte	'IfxGtm_ToutSel_d',0,3,18
	.byte	'IfxGtm_ToutSel_e',0,4,0,35,3,190,1,9,8,14
	.byte	'port',0
	.word	8308
	.byte	4,2,35,0,14
	.byte	'pinIndex',0
	.word	516
	.byte	1,2,35,4,0,17,3,120,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,35,16,119,15,20,14
	.byte	'tom',0
	.word	100470
	.byte	1,2,35,0,14
	.byte	'channel',0
	.word	25483
	.byte	1,2,35,1,14
	.byte	'toutSel',0
	.word	102823
	.byte	1,2,35,2,14
	.byte	'toutn',0
	.word	20195
	.byte	4,2,35,4,14
	.byte	'pin',0
	.word	102924
	.byte	8,2,35,8,14
	.byte	'select',0
	.word	102963
	.byte	1,2,35,16,0,25
	.word	103180
	.byte	3
	.word	103277
	.byte	17,3,134,1,9,1,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,17,3,144,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,18
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,18
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,18
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,33
	.byte	'IfxGtm_PinMap_setTomTout',0,16,142,1,17,1,1,1,1,5
	.byte	'config',0,16,142,1,62
	.word	103282
	.byte	5
	.byte	'outputMode',0,16,142,1,89
	.word	103287
	.byte	5
	.byte	'padDriver',0,16,142,1,119
	.word	103357
	.byte	0,29
	.word	21435
	.byte	30
	.word	21480
	.byte	6,0,29
	.word	21582
	.byte	30
	.word	21617
	.byte	30
	.word	21636
	.byte	6,0,29
	.word	21653
	.byte	30
	.word	21688
	.byte	30
	.word	21707
	.byte	6,0,35,12,134,2,9,16,14
	.byte	'enabled',0
	.word	516
	.byte	1,2,35,0,14
	.byte	'triggerPoint',0
	.word	20195
	.byte	4,2,35,2,14
	.byte	'isrPriority',0
	.word	533
	.byte	2,2,35,6,14
	.byte	'isrProvider',0
	.word	8913
	.byte	1,2,35,8,14
	.byte	'outputMode',0
	.word	103287
	.byte	1,2,35,9,14
	.byte	'outputDriver',0
	.word	103357
	.byte	1,2,35,10,14
	.byte	'risingEdgeAtPeriod',0
	.word	516
	.byte	1,2,35,11,14
	.byte	'outputEnabled',0
	.word	516
	.byte	1,2,35,12,0,17,12,88,9,1,18
	.byte	'IfxStdIf_Timer_CountDir_up',0,0,18
	.byte	'IfxStdIf_Timer_CountDir_upAndDown',0,1,18
	.byte	'IfxStdIf_Timer_CountDir_down',0,2,0,35,12,147,2,9,36,14
	.byte	'frequency',0
	.word	249
	.byte	4,2,35,0,14
	.byte	'isrPriority',0
	.word	533
	.byte	2,2,35,4,14
	.byte	'isrProvider',0
	.word	8913
	.byte	1,2,35,6,14
	.byte	'minResolution',0
	.word	249
	.byte	4,2,35,8,14
	.byte	'trigger',0
	.word	103908
	.byte	16,2,35,12,14
	.byte	'countDir',0
	.word	104089
	.byte	1,2,35,28,14
	.byte	'startOffset',0
	.word	249
	.byte	4,2,35,30,0,3
	.word	104191
	.byte	33
	.byte	'IfxStdIf_Timer_initConfig',0,12,215,3,17,1,1,1,1,5
	.byte	'config',0,12,215,3,66
	.word	104338
	.byte	0,35,17,149,1,9,12,14
	.byte	'period',0
	.word	20195
	.byte	4,2,35,0,14
	.byte	'triggerEnabled',0
	.word	516
	.byte	1,2,35,4,14
	.byte	'clockFreq',0
	.word	249
	.byte	4,2,35,6,14
	.byte	'countDir',0
	.word	104089
	.byte	1,2,35,10,0,15,8
	.word	20190
	.byte	16,1,0,15,4
	.word	533
	.byte	16,1,0,15,8
	.word	20195
	.byte	16,1,0,35,17,163,1,9,56,14
	.byte	'base',0
	.word	104395
	.byte	12,2,35,0,14
	.byte	'gtm',0
	.word	100215
	.byte	4,2,35,12,14
	.byte	'tom',0
	.word	25478
	.byte	4,2,35,16,14
	.byte	'tgc',0
	.word	104479
	.byte	8,2,35,20,14
	.byte	'tomIndex',0
	.word	100470
	.byte	1,2,35,28,14
	.byte	'timerChannel',0
	.word	25483
	.byte	1,2,35,29,14
	.byte	'triggerChannel',0
	.word	25483
	.byte	1,2,35,30,14
	.byte	'channelsMask',0
	.word	104488
	.byte	4,2,35,32,14
	.byte	'offset',0
	.word	20195
	.byte	4,2,35,36,14
	.byte	'tgcGlobalControlDisableUpdate',0
	.word	104497
	.byte	8,2,35,40,14
	.byte	'tgcGlobalControlApplyUpdate',0
	.word	104497
	.byte	8,2,35,48,0
.L232:
	.byte	3
	.word	104506
	.byte	35,17,180,1,9,52,14
	.byte	'base',0
	.word	104191
	.byte	36,2,35,0,14
	.byte	'gtm',0
	.word	100215
	.byte	4,2,35,36,14
	.byte	'tom',0
	.word	100470
	.byte	1,2,35,40,14
	.byte	'timerChannel',0
	.word	25483
	.byte	1,2,35,41,14
	.byte	'triggerOut',0
	.word	103282
	.byte	4,2,35,44,14
	.byte	'clock',0
	.word	100892
	.byte	1,2,35,48,14
	.byte	'irqModeTimer',0
	.word	101451
	.byte	1,2,35,49,14
	.byte	'irqModeTrigger',0
	.word	101451
	.byte	1,2,35,50,14
	.byte	'initPins',0
	.word	516
	.byte	1,2,35,51,0,25
	.word	104749
.L242:
	.byte	3
	.word	104917
.L245:
	.byte	3
	.word	104395
.L277:
	.byte	3
	.word	104749
	.byte	34
	.byte	'memset',0,18,56,17
	.word	423
	.byte	1,1,1,1,36,18,56,33
	.word	423
	.byte	36,18,56,36
	.word	509
	.byte	36,18,56,41
	.word	319
	.byte	0,37
	.byte	'__INDIRECT__',0,19,1,1,1,1,1,7
	.byte	'short int',0,2,5,21
	.byte	'__wchar_t',0,19,1,1
	.word	105001
	.byte	21
	.byte	'__size_t',0,19,1,1
	.word	319
	.byte	21
	.byte	'__ptrdiff_t',0,19,1,1
	.word	509
	.byte	38,1,3
	.word	105069
	.byte	21
	.byte	'__codeptr',0,19,1,1
	.word	105071
	.byte	21
	.byte	'Ifx_GTM_ACCEN0_Bits',0,9,83,3
	.word	94154
	.byte	21
	.byte	'Ifx_GTM_ACCEN1_Bits',0,9,89,3
	.word	94065
	.byte	21
	.byte	'Ifx_GTM_ADCTRIG0OUT0_Bits',0,9,100,3
	.word	92039
	.byte	21
	.byte	'Ifx_GTM_ADCTRIG1OUT0_Bits',0,9,111,3
	.word	92215
	.byte	21
	.byte	'Ifx_GTM_AEI_ADDR_XPT_Bits',0,9,119,3
	.word	26416
	.byte	21
	.byte	'Ifx_GTM_AFD_CH_BUF_ACC_Bits',0,9,126,3
	.word	63273
	.byte	21
	.byte	'Ifx_GTM_ARU_ARU_ACCESS_Bits',0,9,136,1,3
	.word	33952
	.byte	21
	.byte	'Ifx_GTM_ARU_DATA_H_Bits',0,9,143,1,3
	.word	34121
	.byte	21
	.byte	'Ifx_GTM_ARU_DATA_L_Bits',0,9,150,1,3
	.word	34232
	.byte	21
	.byte	'Ifx_GTM_ARU_DBG_ACCESS0_Bits',0,9,157,1,3
	.word	34343
	.byte	21
	.byte	'Ifx_GTM_ARU_DBG_ACCESS1_Bits',0,9,164,1,3
	.word	34690
	.byte	21
	.byte	'Ifx_GTM_ARU_DBG_DATA0_H_Bits',0,9,171,1,3
	.word	34458
	.byte	21
	.byte	'Ifx_GTM_ARU_DBG_DATA0_L_Bits',0,9,178,1,3
	.word	34574
	.byte	21
	.byte	'Ifx_GTM_ARU_DBG_DATA1_H_Bits',0,9,185,1,3
	.word	34805
	.byte	21
	.byte	'Ifx_GTM_ARU_DBG_DATA1_L_Bits',0,9,192,1,3
	.word	34921
	.byte	21
	.byte	'Ifx_GTM_ARU_IRQ_EN_Bits',0,9,201,1,3
	.word	35196
	.byte	21
	.byte	'Ifx_GTM_ARU_IRQ_FORCINT_Bits',0,9,210,1,3
	.word	35372
	.byte	21
	.byte	'Ifx_GTM_ARU_IRQ_MODE_Bits',0,9,217,1,3
	.word	35543
	.byte	21
	.byte	'Ifx_GTM_ARU_IRQ_NOTIFY_Bits',0,9,226,1,3
	.word	35037
	.byte	21
	.byte	'Ifx_GTM_ATOM_AGC_ACT_TB_Bits',0,9,235,1,3
	.word	13507
	.byte	21
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_CTRL_Bits',0,9,249,1,3
	.word	12931
	.byte	21
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_STAT_Bits',0,9,135,2,3
	.word	13219
	.byte	21
	.byte	'Ifx_GTM_ATOM_AGC_FUPD_CTRL_Bits',0,9,156,2,3
	.word	14239
	.byte	21
	.byte	'Ifx_GTM_ATOM_AGC_GLB_CTRL_Bits',0,9,179,2,3
	.word	12481
	.byte	21
	.byte	'Ifx_GTM_ATOM_AGC_INT_TRIG_Bits',0,9,193,2,3
	.word	14671
	.byte	21
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_CTRL_Bits',0,9,207,2,3
	.word	13663
	.byte	21
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_STAT_Bits',0,9,221,2,3
	.word	13951
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_CM0_Bits',0,9,228,2,3
	.word	11130
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_CM1_Bits',0,9,235,2,3
	.word	11241
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_CN0_Bits',0,9,242,2,3
	.word	11352
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_CTRL_Bits',0,9,137,3,3
	.word	9224
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_IRQ_EN_Bits',0,9,145,3,3
	.word	11818
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_IRQ_FORCINT_Bits',0,9,153,3,3
	.word	11966
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_IRQ_MODE_Bits',0,9,160,3,3
	.word	12113
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_IRQ_NOTIFY_Bits',0,9,168,3,3
	.word	11680
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_RDADDR_Bits',0,9,177,3,3
	.word	9065
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_SOMC_Bits',0,9,198,3,3
	.word	9637
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_SOMI_Bits',0,9,210,3,3
	.word	10015
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_SOMP_Bits',0,9,229,3,3
	.word	10220
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_SOMS_Bits',0,9,244,3,3
	.word	10569
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_SR0_Bits',0,9,251,3,3
	.word	10908
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_SR1_Bits',0,9,130,4,3
	.word	11019
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_STAT_Bits',0,9,143,4,3
	.word	11463
	.byte	21
	.byte	'Ifx_GTM_BRC_EIRQ_EN_Bits',0,9,162,4,3
	.word	47665
	.byte	21
	.byte	'Ifx_GTM_BRC_IRQ_EN_Bits',0,9,181,4,3
	.word	46729
	.byte	21
	.byte	'Ifx_GTM_BRC_IRQ_FORCINT_Bits',0,9,200,4,3
	.word	47077
	.byte	21
	.byte	'Ifx_GTM_BRC_IRQ_MODE_Bits',0,9,207,4,3
	.word	47443
	.byte	21
	.byte	'Ifx_GTM_BRC_IRQ_NOTIFY_Bits',0,9,226,4,3
	.word	46416
	.byte	21
	.byte	'Ifx_GTM_BRC_RST_Bits',0,9,233,4,3
	.word	47559
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC0_ADDR_Bits',0,9,242,4,3
	.word	37664
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC0_DEST_Bits',0,9,143,5,3
	.word	37820
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC10_ADDR_Bits',0,9,152,5,3
	.word	44954
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC10_DEST_Bits',0,9,181,5,3
	.word	45111
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC11_ADDR_Bits',0,9,190,5,3
	.word	45685
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC11_DEST_Bits',0,9,219,5,3
	.word	45842
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC1_ADDR_Bits',0,9,228,5,3
	.word	38393
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC1_DEST_Bits',0,9,129,6,3
	.word	38549
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC2_ADDR_Bits',0,9,138,6,3
	.word	39122
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC2_DEST_Bits',0,9,167,6,3
	.word	39278
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC3_ADDR_Bits',0,9,176,6,3
	.word	39851
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC3_DEST_Bits',0,9,205,6,3
	.word	40007
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC4_ADDR_Bits',0,9,214,6,3
	.word	40580
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC4_DEST_Bits',0,9,243,6,3
	.word	40736
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC5_ADDR_Bits',0,9,252,6,3
	.word	41309
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC5_DEST_Bits',0,9,153,7,3
	.word	41465
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC6_ADDR_Bits',0,9,162,7,3
	.word	42038
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC6_DEST_Bits',0,9,191,7,3
	.word	42194
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC7_ADDR_Bits',0,9,200,7,3
	.word	42767
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC7_DEST_Bits',0,9,229,7,3
	.word	42923
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC8_ADDR_Bits',0,9,238,7,3
	.word	43496
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC8_DEST_Bits',0,9,139,8,3
	.word	43652
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC9_ADDR_Bits',0,9,148,8,3
	.word	44225
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC9_DEST_Bits',0,9,177,8,3
	.word	44381
	.byte	21
	.byte	'Ifx_GTM_BRIDGE_MODE_Bits',0,9,193,8,3
	.word	27472
	.byte	21
	.byte	'Ifx_GTM_BRIDGE_PTR1_Bits',0,9,204,8,3
	.word	27786
	.byte	21
	.byte	'Ifx_GTM_BRIDGE_PTR2_Bits',0,9,211,8,3
	.word	27994
	.byte	21
	.byte	'Ifx_GTM_CLC_Bits',0,9,221,8,3
	.word	89674
	.byte	21
	.byte	'Ifx_GTM_CMP_EIRQ_EN_Bits',0,9,251,8,3
	.word	33114
	.byte	21
	.byte	'Ifx_GTM_CMP_EN_Bits',0,9,153,9,3
	.word	30629
	.byte	21
	.byte	'Ifx_GTM_CMP_IRQ_EN_Bits',0,9,183,9,3
	.word	31715
	.byte	21
	.byte	'Ifx_GTM_CMP_IRQ_FORCINT_Bits',0,9,213,9,3
	.word	32390
	.byte	21
	.byte	'Ifx_GTM_CMP_IRQ_MODE_Bits',0,9,220,9,3
	.word	32998
	.byte	21
	.byte	'Ifx_GTM_CMP_IRQ_NOTIFY_Bits',0,9,250,9,3
	.word	31204
	.byte	21
	.byte	'Ifx_GTM_CMU_CLK0_5_CTRL_Bits',0,9,129,10,3
	.word	36498
	.byte	21
	.byte	'Ifx_GTM_CMU_CLK_6_CTRL_Bits',0,9,137,10,3
	.word	36672
	.byte	21
	.byte	'Ifx_GTM_CMU_CLK_7_CTRL_Bits',0,9,145,10,3
	.word	36855
	.byte	21
	.byte	'Ifx_GTM_CMU_CLK_EN_Bits',0,9,163,10,3
	.word	35937
	.byte	21
	.byte	'Ifx_GTM_CMU_ECLK_DEN_Bits',0,9,170,10,3
	.word	37155
	.byte	21
	.byte	'Ifx_GTM_CMU_ECLK_NUM_Bits',0,9,177,10,3
	.word	37038
	.byte	21
	.byte	'Ifx_GTM_CMU_FXCLK_CTRL_Bits',0,9,184,10,3
	.word	37337
	.byte	21
	.byte	'Ifx_GTM_CMU_GCLK_DEN_Bits',0,9,191,10,3
	.word	36381
	.byte	21
	.byte	'Ifx_GTM_CMU_GCLK_NUM_Bits',0,9,198,10,3
	.word	36264
	.byte	21
	.byte	'Ifx_GTM_CTRL_Bits',0,9,208,10,3
	.word	26250
	.byte	21
	.byte	'Ifx_GTM_DATAIN_Bits',0,9,214,10,3
	.word	96163
	.byte	21
	.byte	'Ifx_GTM_DPLL_ACB_Bits',0,9,227,10,3
	.word	82483
	.byte	21
	.byte	'Ifx_GTM_DPLL_ACT_STA_Bits',0,9,234,10,3
	.word	67819
	.byte	21
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL1_Bits',0,9,241,10,3
	.word	77027
	.byte	21
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL2_Bits',0,9,248,10,3
	.word	77152
	.byte	21
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD1_Bits',0,9,255,10,3
	.word	73146
	.byte	21
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD2_Bits',0,9,134,11,3
	.word	73269
	.byte	21
	.byte	'Ifx_GTM_DPLL_ADT_S_Bits',0,9,142,11,3
	.word	81979
	.byte	21
	.byte	'Ifx_GTM_DPLL_AOSV_2_Bits',0,9,151,11,3
	.word	68100
	.byte	21
	.byte	'Ifx_GTM_DPLL_APS_1C3_Bits',0,9,159,11,3
	.word	68798
	.byte	21
	.byte	'Ifx_GTM_DPLL_APS_Bits',0,9,171,11,3
	.word	68455
	.byte	21
	.byte	'Ifx_GTM_DPLL_APS_SYNC_Bits',0,9,181,11,3
	.word	72714
	.byte	21
	.byte	'Ifx_GTM_DPLL_APT_2C_Bits',0,9,189,11,3
	.word	68662
	.byte	21
	.byte	'Ifx_GTM_DPLL_APT_Bits',0,9,201,11,3
	.word	68249
	.byte	21
	.byte	'Ifx_GTM_DPLL_APT_SYNC_Bits',0,9,211,11,3
	.word	72525
	.byte	21
	.byte	'Ifx_GTM_DPLL_CDT_SX_Bits',0,9,218,11,3
	.word	79555
	.byte	21
	.byte	'Ifx_GTM_DPLL_CDT_SX_NOM_Bits',0,9,225,11,3
	.word	79791
	.byte	21
	.byte	'Ifx_GTM_DPLL_CDT_TX_Bits',0,9,232,11,3
	.word	79441
	.byte	21
	.byte	'Ifx_GTM_DPLL_CDT_TX_NOM_Bits',0,9,239,11,3
	.word	79669
	.byte	21
	.byte	'Ifx_GTM_DPLL_CNT_NUM1_Bits',0,9,246,11,3
	.word	80497
	.byte	21
	.byte	'Ifx_GTM_DPLL_CNT_NUM2_Bits',0,9,253,11,3
	.word	80616
	.byte	21
	.byte	'Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE_Bits',0,9,141,12,3
	.word	74810
	.byte	21
	.byte	'Ifx_GTM_DPLL_CTRL_0_Bits',0,9,157,12,3
	.word	65998
	.byte	21
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE_Bits',0,9,170,12,3
	.word	74348
	.byte	21
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER_Bits',0,9,183,12,3
	.word	74124
	.byte	21
	.byte	'Ifx_GTM_DPLL_CTRL_1_Bits',0,9,210,12,3
	.word	66236
	.byte	21
	.byte	'Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER_Bits',0,9,223,12,3
	.word	74585
	.byte	21
	.byte	'Ifx_GTM_DPLL_CTRL_2_Bits',0,9,246,12,3
	.word	66669
	.byte	21
	.byte	'Ifx_GTM_DPLL_CTRL_3_Bits',0,9,141,13,3
	.word	67043
	.byte	21
	.byte	'Ifx_GTM_DPLL_CTRL_4_Bits',0,9,164,13,3
	.word	67429
	.byte	21
	.byte	'Ifx_GTM_DPLL_DLA_Bits',0,9,171,13,3
	.word	75388
	.byte	21
	.byte	'Ifx_GTM_DPLL_DT_S_ACT_Bits',0,9,178,13,3
	.word	78871
	.byte	21
	.byte	'Ifx_GTM_DPLL_DT_S_Bits',0,9,185,13,3
	.word	82114
	.byte	21
	.byte	'Ifx_GTM_DPLL_DT_T_ACT_Bits',0,9,192,13,3
	.word	78753
	.byte	21
	.byte	'Ifx_GTM_DPLL_DTA_Bits',0,9,199,13,3
	.word	75634
	.byte	21
	.byte	'Ifx_GTM_DPLL_EDT_S_Bits',0,9,207,13,3
	.word	79215
	.byte	21
	.byte	'Ifx_GTM_DPLL_EDT_T_Bits',0,9,215,13,3
	.word	78989
	.byte	21
	.byte	'Ifx_GTM_DPLL_EIRQ_EN_Bits',0,9,249,13,3
	.word	71544
	.byte	21
	.byte	'Ifx_GTM_DPLL_FTV_S_Bits',0,9,128,14,3
	.word	76336
	.byte	21
	.byte	'Ifx_GTM_DPLL_FTV_T_Bits',0,9,135,14,3
	.word	75987
	.byte	21
	.byte	'Ifx_GTM_DPLL_ID_PMTR_Bits',0,9,142,14,3
	.word	73988
	.byte	21
	.byte	'Ifx_GTM_DPLL_INC_CNT1_Bits',0,9,149,14,3
	.word	72289
	.byte	21
	.byte	'Ifx_GTM_DPLL_INC_CNT2_Bits',0,9,157,14,3
	.word	72407
	.byte	21
	.byte	'Ifx_GTM_DPLL_IRQ_EN_Bits',0,9,191,14,3
	.word	70065
	.byte	21
	.byte	'Ifx_GTM_DPLL_IRQ_FORCINT_Bits',0,9,225,14,3
	.word	70775
	.byte	21
	.byte	'Ifx_GTM_DPLL_IRQ_MODE_Bits',0,9,232,14,3
	.word	71427
	.byte	21
	.byte	'Ifx_GTM_DPLL_IRQ_NOTIFY_Bits',0,9,138,15,3
	.word	69526
	.byte	21
	.byte	'Ifx_GTM_DPLL_MEDT_S_Bits',0,9,146,15,3
	.word	79327
	.byte	21
	.byte	'Ifx_GTM_DPLL_MEDT_T_Bits',0,9,154,15,3
	.word	79101
	.byte	21
	.byte	'Ifx_GTM_DPLL_MLS1_Bits',0,9,161,15,3
	.word	80277
	.byte	21
	.byte	'Ifx_GTM_DPLL_MLS2_Bits',0,9,168,15,3
	.word	80387
	.byte	21
	.byte	'Ifx_GTM_DPLL_MPVAL1_Bits',0,9,177,15,3
	.word	77277
	.byte	21
	.byte	'Ifx_GTM_DPLL_MPVAL2_Bits',0,9,186,15,3
	.word	77407
	.byte	21
	.byte	'Ifx_GTM_DPLL_NA_Bits',0,9,194,15,3
	.word	75505
	.byte	21
	.byte	'Ifx_GTM_DPLL_NMB_S_Bits',0,9,201,15,3
	.word	81623
	.byte	21
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR_Bits',0,9,208,15,3
	.word	77785
	.byte	21
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR_OLD_Bits',0,9,215,15,3
	.word	77905
	.byte	21
	.byte	'Ifx_GTM_DPLL_NMB_T_Bits',0,9,222,15,3
	.word	81511
	.byte	21
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR_Bits',0,9,229,15,3
	.word	77537
	.byte	21
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR_OLD_Bits',0,9,236,15,3
	.word	77657
	.byte	21
	.byte	'Ifx_GTM_DPLL_NTI_CNT_Bits',0,9,243,15,3
	.word	69410
	.byte	21
	.byte	'Ifx_GTM_DPLL_NUSC_Bits',0,9,129,16,3
	.word	69184
	.byte	21
	.byte	'Ifx_GTM_DPLL_NUTC_Bits',0,9,144,16,3
	.word	68935
	.byte	21
	.byte	'Ifx_GTM_DPLL_OSW_Bits',0,9,154,16,3
	.word	67934
	.byte	21
	.byte	'Ifx_GTM_DPLL_PDT_T_Bits',0,9,162,16,3
	.word	80136
	.byte	21
	.byte	'Ifx_GTM_DPLL_PSA_Bits',0,9,169,16,3
	.word	75271
	.byte	21
	.byte	'Ifx_GTM_DPLL_PSAC_Bits',0,9,176,16,3
	.word	82364
	.byte	21
	.byte	'Ifx_GTM_DPLL_PSSC_Bits',0,9,183,16,3
	.word	80953
	.byte	21
	.byte	'Ifx_GTM_DPLL_PSSM_0_Bits',0,9,190,16,3
	.word	81287
	.byte	21
	.byte	'Ifx_GTM_DPLL_PSSM_1_Bits',0,9,197,16,3
	.word	81399
	.byte	21
	.byte	'Ifx_GTM_DPLL_PSTC_Bits',0,9,204,16,3
	.word	80843
	.byte	21
	.byte	'Ifx_GTM_DPLL_PSTM_0_Bits',0,9,211,16,3
	.word	81063
	.byte	21
	.byte	'Ifx_GTM_DPLL_PSTM_1_Bits',0,9,218,16,3
	.word	81175
	.byte	21
	.byte	'Ifx_GTM_DPLL_PVT_Bits',0,9,225,16,3
	.word	80735
	.byte	21
	.byte	'Ifx_GTM_DPLL_RAM_INI_Bits',0,9,236,16,3
	.word	75077
	.byte	21
	.byte	'Ifx_GTM_DPLL_RCDT_SX_Bits',0,9,243,16,3
	.word	78149
	.byte	21
	.byte	'Ifx_GTM_DPLL_RCDT_SX_NOM_Bits',0,9,251,16,3
	.word	78389
	.byte	21
	.byte	'Ifx_GTM_DPLL_RCDT_TX_Bits',0,9,130,17,3
	.word	78033
	.byte	21
	.byte	'Ifx_GTM_DPLL_RCDT_TX_NOM_Bits',0,9,138,17,3
	.word	78265
	.byte	21
	.byte	'Ifx_GTM_DPLL_RDT_S_ACT_Bits',0,9,145,17,3
	.word	78633
	.byte	21
	.byte	'Ifx_GTM_DPLL_RDT_S_Bits',0,9,152,17,3
	.word	81735
	.byte	21
	.byte	'Ifx_GTM_DPLL_RDT_T_ACT_Bits',0,9,159,17,3
	.word	78513
	.byte	21
	.byte	'Ifx_GTM_DPLL_SLR_Bits',0,9,166,17,3
	.word	80020
	.byte	21
	.byte	'Ifx_GTM_DPLL_STATUS_Bits',0,9,202,17,3
	.word	73401
	.byte	21
	.byte	'Ifx_GTM_DPLL_TBU_TS0_S_Bits',0,9,209,17,3
	.word	73026
	.byte	21
	.byte	'Ifx_GTM_DPLL_TBU_TS0_T_Bits',0,9,216,17,3
	.word	72906
	.byte	21
	.byte	'Ifx_GTM_DPLL_THMA_Bits',0,9,223,17,3
	.word	76561
	.byte	21
	.byte	'Ifx_GTM_DPLL_THMI_Bits',0,9,230,17,3
	.word	76451
	.byte	21
	.byte	'Ifx_GTM_DPLL_THVAL_Bits',0,9,237,17,3
	.word	76671
	.byte	21
	.byte	'Ifx_GTM_DPLL_TLR_Bits',0,9,244,17,3
	.word	79913
	.byte	21
	.byte	'Ifx_GTM_DPLL_TOV_Bits',0,9,252,17,3
	.word	76783
	.byte	21
	.byte	'Ifx_GTM_DPLL_TOV_S_Bits',0,9,132,18,3
	.word	76904
	.byte	21
	.byte	'Ifx_GTM_DPLL_TS_S_0_Bits',0,9,139,18,3
	.word	76104
	.byte	21
	.byte	'Ifx_GTM_DPLL_TS_S_1_Bits',0,9,146,18,3
	.word	76220
	.byte	21
	.byte	'Ifx_GTM_DPLL_TS_T_0_Bits',0,9,153,18,3
	.word	75751
	.byte	21
	.byte	'Ifx_GTM_DPLL_TS_T_1_Bits',0,9,160,18,3
	.word	75869
	.byte	21
	.byte	'Ifx_GTM_DPLL_TSAC_Bits',0,9,167,18,3
	.word	82245
	.byte	21
	.byte	'Ifx_GTM_DPLL_TSF_S_Bits',0,9,174,18,3
	.word	81857
	.byte	21
	.byte	'Ifx_GTM_DXINCON_Bits',0,9,195,18,3
	.word	95805
	.byte	21
	.byte	'Ifx_GTM_DXOUTCON_Bits',0,9,208,18,3
	.word	94723
	.byte	21
	.byte	'Ifx_GTM_EIRQ_EN_Bits',0,9,218,18,3
	.word	27258
	.byte	21
	.byte	'Ifx_GTM_F2A_ENABLE_Bits',0,9,232,18,3
	.word	62954
	.byte	21
	.byte	'Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO_Bits',0,9,239,18,3
	.word	62557
	.byte	21
	.byte	'Ifx_GTM_F2A_STR_CH_STR_CFG_Bits',0,9,248,18,3
	.word	62739
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_CTRL_Bits',0,9,130,19,3
	.word	63512
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_EIRQ_EN_Bits',0,9,140,19,3
	.word	65425
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_END_ADDR_Bits',0,9,147,19,3
	.word	63673
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_FILL_LEVEL_Bits',0,9,154,19,3
	.word	64309
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_IRQ_EN_Bits',0,9,164,19,3
	.word	64844
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_IRQ_FORCINT_Bits',0,9,174,19,3
	.word	65053
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_IRQ_MODE_Bits',0,9,183,19,3
	.word	65255
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_IRQ_NOTIFY_Bits',0,9,193,19,3
	.word	64659
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_LOWER_WM_Bits',0,9,200,19,3
	.word	64026
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_RD_PTR_Bits',0,9,207,19,3
	.word	64544
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_START_ADDR_Bits',0,9,214,19,3
	.word	63790
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_STATUS_Bits',0,9,224,19,3
	.word	64143
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_UPPER_WM_Bits',0,9,231,19,3
	.word	63909
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_WR_PTR_Bits',0,9,238,19,3
	.word	64429
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_0_Bits',0,9,133,20,3
	.word	48615
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_1_Bits',0,9,166,20,3
	.word	49106
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_2_Bits',0,9,196,20,3
	.word	49854
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_4_Bits',0,9,226,20,3
	.word	50525
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_6_Bits',0,9,135,21,3
	.word	51196
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_9_Bits',0,9,172,21,3
	.word	52048
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_CEI0_Bits',0,9,186,21,3
	.word	53378
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_CEI1_Bits',0,9,216,21,3
	.word	53683
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_CEI3_Bits',0,9,246,21,3
	.word	54381
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_MEI_Bits',0,9,141,22,3
	.word	52920
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_CAN_OUTSEL_Bits',0,9,154,22,3
	.word	91071
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_DSADC_INSEL_Bits',0,9,167,22,3
	.word	90529
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_DSADC_OUTSEL_Bits',0,9,178,22,3
	.word	90764
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_PSI5_OUTSEL0_Bits',0,9,190,22,3
	.word	91330
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_PSI5S_OUTSEL_Bits',0,9,203,22,3
	.word	91584
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_T_OUTSEL_Bits',0,9,224,22,3
	.word	90122
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_TIM_INSEL_Bits',0,9,237,22,3
	.word	89831
	.byte	21
	.byte	'Ifx_GTM_IRQ_EN_Bits',0,9,247,22,3
	.word	26735
	.byte	21
	.byte	'Ifx_GTM_IRQ_FORCINT_Bits',0,9,129,23,3
	.word	26944
	.byte	21
	.byte	'Ifx_GTM_IRQ_MODE_Bits',0,9,136,23,3
	.word	27146
	.byte	21
	.byte	'Ifx_GTM_IRQ_NOTIFY_Bits',0,9,146,23,3
	.word	26550
	.byte	21
	.byte	'Ifx_GTM_KRST0_Bits',0,9,154,23,3
	.word	93942
	.byte	21
	.byte	'Ifx_GTM_KRST1_Bits',0,9,161,23,3
	.word	93838
	.byte	21
	.byte	'Ifx_GTM_KRSTCLR_Bits',0,9,168,23,3
	.word	93732
	.byte	21
	.byte	'Ifx_GTM_MAP_CTRL_Bits',0,9,191,23,3
	.word	57839
	.byte	21
	.byte	'Ifx_GTM_MCFG_CTRL_Bits',0,9,200,23,3
	.word	58287
	.byte	21
	.byte	'Ifx_GTM_MCS_CH0_CTRG_Bits',0,9,222,23,3
	.word	86256
	.byte	21
	.byte	'Ifx_GTM_MCS_CH0_STRG_Bits',0,9,244,23,3
	.word	86615
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_ACB_Bits',0,9,255,23,3
	.word	86082
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_CTRL_Bits',0,9,145,24,3
	.word	85796
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_EIRQ_EN_Bits',0,9,154,24,3
	.word	87717
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_IRQ_EN_Bits',0,9,163,24,3
	.word	87248
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_IRQ_FORCINT_Bits',0,9,172,24,3
	.word	87419
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_IRQ_MODE_Bits',0,9,179,24,3
	.word	87598
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_IRQ_NOTIFY_Bits',0,9,188,24,3
	.word	87082
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_PC_Bits',0,9,195,24,3
	.word	86974
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_R0_Bits',0,9,202,24,3
	.word	84916
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_R1_Bits',0,9,209,24,3
	.word	85026
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_R2_Bits',0,9,216,24,3
	.word	85136
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_R3_Bits',0,9,223,24,3
	.word	85246
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_R4_Bits',0,9,230,24,3
	.word	85356
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_R5_Bits',0,9,237,24,3
	.word	85466
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_R6_Bits',0,9,244,24,3
	.word	85576
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_R7_Bits',0,9,251,24,3
	.word	85686
	.byte	21
	.byte	'Ifx_GTM_MCS_CTRL_Bits',0,9,133,25,3
	.word	88206
	.byte	21
	.byte	'Ifx_GTM_MCS_ERR_Bits',0,9,147,25,3
	.word	88855
	.byte	21
	.byte	'Ifx_GTM_MCS_RST_Bits',0,9,177,25,3
	.word	88379
	.byte	21
	.byte	'Ifx_GTM_MCSINTCLR_Bits',0,9,195,25,3
	.word	95495
	.byte	21
	.byte	'Ifx_GTM_MCSINTSTAT_Bits',0,9,213,25,3
	.word	95184
	.byte	21
	.byte	'Ifx_GTM_MON_ACTIVITY_0_Bits',0,9,243,25,3
	.word	30004
	.byte	21
	.byte	'Ifx_GTM_MON_STATUS_Bits',0,9,140,26,3
	.word	29514
	.byte	21
	.byte	'Ifx_GTM_MSC0INLEXTCON_Bits',0,9,161,26,3
	.word	98007
	.byte	21
	.byte	'Ifx_GTM_MSCIN_INHCON_Bits',0,9,182,26,3
	.word	97603
	.byte	21
	.byte	'Ifx_GTM_MSCIN_INLCON_Bits',0,9,203,26,3
	.word	97267
	.byte	21
	.byte	'Ifx_GTM_MSCSET_CON0_Bits',0,9,216,26,3
	.word	96256
	.byte	21
	.byte	'Ifx_GTM_MSCSET_CON1_Bits',0,9,229,26,3
	.word	96484
	.byte	21
	.byte	'Ifx_GTM_MSCSET_CON2_Bits',0,9,242,26,3
	.word	96712
	.byte	21
	.byte	'Ifx_GTM_MSCSET_CON3_Bits',0,9,255,26,3
	.word	96942
	.byte	21
	.byte	'Ifx_GTM_OCS_Bits',0,9,137,27,3
	.word	93572
	.byte	21
	.byte	'Ifx_GTM_ODA_Bits',0,9,145,27,3
	.word	93452
	.byte	21
	.byte	'Ifx_GTM_OTBU0T_Bits',0,9,154,27,3
	.word	92391
	.byte	21
	.byte	'Ifx_GTM_OTBU1T_Bits',0,9,163,27,3
	.word	92533
	.byte	21
	.byte	'Ifx_GTM_OTBU2T_Bits',0,9,172,27,3
	.word	92675
	.byte	21
	.byte	'Ifx_GTM_OTSC0_Bits',0,9,189,27,3
	.word	93002
	.byte	21
	.byte	'Ifx_GTM_OTSC1_Bits',0,9,199,27,3
	.word	93296
	.byte	21
	.byte	'Ifx_GTM_OTSS_Bits',0,9,210,27,3
	.word	92817
	.byte	21
	.byte	'Ifx_GTM_REV_Bits',0,9,222,27,3
	.word	25956
	.byte	21
	.byte	'Ifx_GTM_RST_Bits',0,9,229,27,3
	.word	26148
	.byte	21
	.byte	'Ifx_GTM_SPE_CMP_Bits',0,9,236,27,3
	.word	57470
	.byte	21
	.byte	'Ifx_GTM_SPE_CNT_Bits',0,9,243,27,3
	.word	57363
	.byte	21
	.byte	'Ifx_GTM_SPE_CTRL_STAT_Bits',0,9,136,28,3
	.word	55390
	.byte	21
	.byte	'Ifx_GTM_SPE_EIRQ_EN_Bits',0,9,147,28,3
	.word	57129
	.byte	21
	.byte	'Ifx_GTM_SPE_IRQ_EN_Bits',0,9,158,28,3
	.word	56567
	.byte	21
	.byte	'Ifx_GTM_SPE_IRQ_FORCINT_Bits',0,9,169,28,3
	.word	56795
	.byte	21
	.byte	'Ifx_GTM_SPE_IRQ_MODE_Bits',0,9,176,28,3
	.word	57013
	.byte	21
	.byte	'Ifx_GTM_SPE_IRQ_NOTIFY_Bits',0,9,187,28,3
	.word	56370
	.byte	21
	.byte	'Ifx_GTM_SPE_OUT_CTRL_Bits',0,9,194,28,3
	.word	56249
	.byte	21
	.byte	'Ifx_GTM_SPE_OUT_PAT_Bits',0,9,201,28,3
	.word	56121
	.byte	21
	.byte	'Ifx_GTM_SPE_PAT_Bits',0,9,222,28,3
	.word	55748
	.byte	21
	.byte	'Ifx_GTM_TBU_CH0_BASE_Bits',0,9,229,28,3
	.word	28745
	.byte	21
	.byte	'Ifx_GTM_TBU_CH0_CTRL_Bits',0,9,237,28,3
	.word	28608
	.byte	21
	.byte	'Ifx_GTM_TBU_CH1_BASE_Bits',0,9,244,28,3
	.word	28995
	.byte	21
	.byte	'Ifx_GTM_TBU_CH1_CTRL_Bits',0,9,252,28,3
	.word	28858
	.byte	21
	.byte	'Ifx_GTM_TBU_CH2_BASE_Bits',0,9,131,29,3
	.word	29245
	.byte	21
	.byte	'Ifx_GTM_TBU_CH2_CTRL_Bits',0,9,139,29,3
	.word	29108
	.byte	21
	.byte	'Ifx_GTM_TBU_CHEN_Bits',0,9,148,29,3
	.word	28453
	.byte	21
	.byte	'Ifx_GTM_TIM_AUX_IN_SRC_Bits',0,9,162,29,3
	.word	28183
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_CNT_Bits',0,9,169,29,3
	.word	58649
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_CNTS_Bits',0,9,176,29,3
	.word	58871
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_CTRL_Bits',0,9,205,29,3
	.word	59469
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_ECNT_Bits',0,9,212,29,3
	.word	58759
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_ECTRL_Bits',0,9,219,29,3
	.word	60018
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_EIRQ_EN_Bits',0,9,231,29,3
	.word	60955
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_FLT_FE_Bits',0,9,238,29,3
	.word	59353
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_FLT_RE_Bits',0,9,245,29,3
	.word	59237
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_GPR0_Bits',0,9,252,29,3
	.word	58439
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_GPR1_Bits',0,9,131,30,3
	.word	58544
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_IRQ_EN_Bits',0,9,143,30,3
	.word	60349
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits',0,9,155,30,3
	.word	60599
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_IRQ_MODE_Bits',0,9,162,30,3
	.word	60836
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits',0,9,174,30,3
	.word	60137
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_TDUC_Bits',0,9,181,30,3
	.word	58976
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_TDUV_Bits',0,9,190,30,3
	.word	59089
	.byte	21
	.byte	'Ifx_GTM_TIM_IN_SRC_Bits',0,9,211,30,3
	.word	61511
	.byte	21
	.byte	'Ifx_GTM_TIM_RST_Bits',0,9,225,30,3
	.word	61863
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_CM0_Bits',0,9,232,30,3
	.word	17637
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_CM1_Bits',0,9,239,30,3
	.word	17747
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_CN0_Bits',0,9,246,30,3
	.word	17857
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_CTRL_Bits',0,9,136,31,3
	.word	17091
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_IRQ_EN_Bits',0,9,144,31,3
	.word	18213
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits',0,9,152,31,3
	.word	18360
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_IRQ_MODE_Bits',0,9,159,31,3
	.word	18508
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits',0,9,167,31,3
	.word	18076
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_SR0_Bits',0,9,174,31,3
	.word	17417
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_SR1_Bits',0,9,181,31,3
	.word	17527
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_STAT_Bits',0,9,188,31,3
	.word	17967
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC0_ACT_TB_Bits',0,9,197,31,3
	.word	16233
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_CTRL_Bits',0,9,211,31,3
	.word	18844
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_STAT_Bits',0,9,225,31,3
	.word	19132
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC0_FUPD_CTRL_Bits',0,9,246,31,3
	.word	16389
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC0_GLB_CTRL_Bits',0,9,141,32,3
	.word	15783
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC0_INT_TRIG_Bits',0,9,155,32,3
	.word	16821
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_CTRL_Bits',0,9,169,32,3
	.word	19420
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_STAT_Bits',0,9,183,32,3
	.word	19708
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC1_ACT_TB_Bits',0,9,192,32,3
	.word	22503
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_CTRL_Bits',0,9,206,32,3
	.word	23366
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_STAT_Bits',0,9,220,32,3
	.word	23654
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC1_FUPD_CTRL_Bits',0,9,241,32,3
	.word	22659
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC1_GLB_CTRL_Bits',0,9,136,33,3
	.word	22053
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC1_INT_TRIG_Bits',0,9,150,33,3
	.word	23091
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_CTRL_Bits',0,9,164,33,3
	.word	23942
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_STAT_Bits',0,9,178,33,3
	.word	24230
	.byte	21
	.byte	'Ifx_GTM_TRIGOUT_Bits',0,9,192,33,3
	.word	94940
	.byte	21
	.byte	'Ifx_GTM_ACCEN0',0,9,205,33,3
	.word	94683
	.byte	21
	.byte	'Ifx_GTM_ACCEN1',0,9,213,33,3
	.word	94114
	.byte	21
	.byte	'Ifx_GTM_ADCTRIG0OUT0',0,9,221,33,3
	.word	92175
	.byte	21
	.byte	'Ifx_GTM_ADCTRIG1OUT0',0,9,229,33,3
	.word	92351
	.byte	21
	.byte	'Ifx_GTM_AEI_ADDR_XPT',0,9,237,33,3
	.word	26510
	.byte	21
	.byte	'Ifx_GTM_AFD_CH_BUF_ACC',0,9,245,33,3
	.word	63347
	.byte	21
	.byte	'Ifx_GTM_ARU_ARU_ACCESS',0,9,253,33,3
	.word	34081
	.byte	21
	.byte	'Ifx_GTM_ARU_DATA_H',0,9,133,34,3
	.word	34192
	.byte	21
	.byte	'Ifx_GTM_ARU_DATA_L',0,9,141,34,3
	.word	34303
	.byte	21
	.byte	'Ifx_GTM_ARU_DBG_ACCESS0',0,9,149,34,3
	.word	34418
	.byte	21
	.byte	'Ifx_GTM_ARU_DBG_ACCESS1',0,9,157,34,3
	.word	34765
	.byte	21
	.byte	'Ifx_GTM_ARU_DBG_DATA0_H',0,9,165,34,3
	.word	34534
	.byte	21
	.byte	'Ifx_GTM_ARU_DBG_DATA0_L',0,9,173,34,3
	.word	34650
	.byte	21
	.byte	'Ifx_GTM_ARU_DBG_DATA1_H',0,9,181,34,3
	.word	34881
	.byte	21
	.byte	'Ifx_GTM_ARU_DBG_DATA1_L',0,9,189,34,3
	.word	34997
	.byte	21
	.byte	'Ifx_GTM_ARU_IRQ_EN',0,9,197,34,3
	.word	35332
	.byte	21
	.byte	'Ifx_GTM_ARU_IRQ_FORCINT',0,9,205,34,3
	.word	35503
	.byte	21
	.byte	'Ifx_GTM_ARU_IRQ_MODE',0,9,213,34,3
	.word	35619
	.byte	21
	.byte	'Ifx_GTM_ARU_IRQ_NOTIFY',0,9,221,34,3
	.word	35156
	.byte	21
	.byte	'Ifx_GTM_ATOM_AGC_ACT_TB',0,9,229,34,3
	.word	13623
	.byte	21
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_CTRL',0,9,237,34,3
	.word	13179
	.byte	21
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_STAT',0,9,245,34,3
	.word	13467
	.byte	21
	.byte	'Ifx_GTM_ATOM_AGC_FUPD_CTRL',0,9,253,34,3
	.word	14631
	.byte	21
	.byte	'Ifx_GTM_ATOM_AGC_GLB_CTRL',0,9,133,35,3
	.word	12891
	.byte	21
	.byte	'Ifx_GTM_ATOM_AGC_INT_TRIG',0,9,141,35,3
	.word	14901
	.byte	21
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_CTRL',0,9,149,35,3
	.word	13911
	.byte	21
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_STAT',0,9,157,35,3
	.word	14199
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_CM0',0,9,165,35,3
	.word	11201
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_CM1',0,9,173,35,3
	.word	11312
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_CN0',0,9,181,35,3
	.word	11423
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_CTRL',0,9,189,35,3
	.word	9597
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_IRQ_EN',0,9,197,35,3
	.word	11926
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_IRQ_FORCINT',0,9,205,35,3
	.word	12073
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_IRQ_MODE',0,9,213,35,3
	.word	12193
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_IRQ_NOTIFY',0,9,221,35,3
	.word	11778
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_RDADDR',0,9,229,35,3
	.word	9184
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_SOMC',0,9,237,35,3
	.word	9975
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_SOMI',0,9,245,35,3
	.word	10180
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_SOMP',0,9,253,35,3
	.word	10529
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_SOMS',0,9,133,36,3
	.word	10791
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_SR0',0,9,141,36,3
	.word	10979
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_SR1',0,9,149,36,3
	.word	11090
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH_STAT',0,9,157,36,3
	.word	11640
	.byte	21
	.byte	'Ifx_GTM_BRC_EIRQ_EN',0,9,165,36,3
	.word	47974
	.byte	21
	.byte	'Ifx_GTM_BRC_IRQ_EN',0,9,173,36,3
	.word	47037
	.byte	21
	.byte	'Ifx_GTM_BRC_IRQ_FORCINT',0,9,181,36,3
	.word	47403
	.byte	21
	.byte	'Ifx_GTM_BRC_IRQ_MODE',0,9,189,36,3
	.word	47519
	.byte	21
	.byte	'Ifx_GTM_BRC_IRQ_NOTIFY',0,9,197,36,3
	.word	46689
	.byte	21
	.byte	'Ifx_GTM_BRC_RST',0,9,205,36,3
	.word	47625
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC0_ADDR',0,9,213,36,3
	.word	37780
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC0_DEST',0,9,221,36,3
	.word	38353
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC10_ADDR',0,9,229,36,3
	.word	45071
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC10_DEST',0,9,237,36,3
	.word	45645
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC11_ADDR',0,9,245,36,3
	.word	45802
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC11_DEST',0,9,253,36,3
	.word	46376
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC1_ADDR',0,9,133,37,3
	.word	38509
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC1_DEST',0,9,141,37,3
	.word	39082
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC2_ADDR',0,9,149,37,3
	.word	39238
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC2_DEST',0,9,157,37,3
	.word	39811
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC3_ADDR',0,9,165,37,3
	.word	39967
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC3_DEST',0,9,173,37,3
	.word	40540
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC4_ADDR',0,9,181,37,3
	.word	40696
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC4_DEST',0,9,189,37,3
	.word	41269
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC5_ADDR',0,9,197,37,3
	.word	41425
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC5_DEST',0,9,205,37,3
	.word	41998
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC6_ADDR',0,9,213,37,3
	.word	42154
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC6_DEST',0,9,221,37,3
	.word	42727
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC7_ADDR',0,9,229,37,3
	.word	42883
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC7_DEST',0,9,237,37,3
	.word	43456
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC8_ADDR',0,9,245,37,3
	.word	43612
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC8_DEST',0,9,253,37,3
	.word	44185
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC9_ADDR',0,9,133,38,3
	.word	44341
	.byte	21
	.byte	'Ifx_GTM_BRC_SRC9_DEST',0,9,141,38,3
	.word	44914
	.byte	21
	.byte	'Ifx_GTM_BRIDGE_MODE',0,9,149,38,3
	.word	27746
	.byte	21
	.byte	'Ifx_GTM_BRIDGE_PTR1',0,9,157,38,3
	.word	27954
	.byte	21
	.byte	'Ifx_GTM_BRIDGE_PTR2',0,9,165,38,3
	.word	28073
	.byte	21
	.byte	'Ifx_GTM_CLC',0,9,173,38,3
	.word	89791
	.byte	21
	.byte	'Ifx_GTM_CMP_EIRQ_EN',0,9,181,38,3
	.word	33774
	.byte	21
	.byte	'Ifx_GTM_CMP_EN',0,9,189,38,3
	.word	31164
	.byte	21
	.byte	'Ifx_GTM_CMP_IRQ_EN',0,9,197,38,3
	.word	32350
	.byte	21
	.byte	'Ifx_GTM_CMP_IRQ_FORCINT',0,9,205,38,3
	.word	32958
	.byte	21
	.byte	'Ifx_GTM_CMP_IRQ_MODE',0,9,213,38,3
	.word	33074
	.byte	21
	.byte	'Ifx_GTM_CMP_IRQ_NOTIFY',0,9,221,38,3
	.word	31675
	.byte	21
	.byte	'Ifx_GTM_CMU_CLK0_5_CTRL',0,9,229,38,3
	.word	36577
	.byte	21
	.byte	'Ifx_GTM_CMU_CLK_6_CTRL',0,9,237,38,3
	.word	36770
	.byte	21
	.byte	'Ifx_GTM_CMU_CLK_7_CTRL',0,9,245,38,3
	.word	36953
	.byte	21
	.byte	'Ifx_GTM_CMU_CLK_EN',0,9,253,38,3
	.word	36224
	.byte	21
	.byte	'Ifx_GTM_CMU_ECLK_DEN',0,9,133,39,3
	.word	37232
	.byte	21
	.byte	'Ifx_GTM_CMU_ECLK_NUM',0,9,141,39,3
	.word	37115
	.byte	21
	.byte	'Ifx_GTM_CMU_FXCLK_CTRL',0,9,149,39,3
	.word	37416
	.byte	21
	.byte	'Ifx_GTM_CMU_GCLK_DEN',0,9,157,39,3
	.word	36458
	.byte	21
	.byte	'Ifx_GTM_CMU_GCLK_NUM',0,9,165,39,3
	.word	36341
	.byte	21
	.byte	'Ifx_GTM_CTRL',0,9,173,39,3
	.word	26376
	.byte	21
	.byte	'Ifx_GTM_DATAIN',0,9,181,39,3
	.word	96207
	.byte	21
	.byte	'Ifx_GTM_DPLL_ACB',0,9,189,39,3
	.word	82672
	.byte	21
	.byte	'Ifx_GTM_DPLL_ACT_STA',0,9,197,39,3
	.word	67894
	.byte	21
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL1',0,9,205,39,3
	.word	77112
	.byte	21
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL2',0,9,213,39,3
	.word	77237
	.byte	21
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD1',0,9,221,39,3
	.word	73229
	.byte	21
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD2',0,9,229,39,3
	.word	73352
	.byte	21
	.byte	'Ifx_GTM_DPLL_ADT_S',0,9,237,39,3
	.word	82064
	.byte	21
	.byte	'Ifx_GTM_DPLL_AOSV_2',0,9,245,39,3
	.word	68209
	.byte	21
	.byte	'Ifx_GTM_DPLL_APS',0,9,253,39,3
	.word	68622
	.byte	21
	.byte	'Ifx_GTM_DPLL_APS_1C3',0,9,133,40,3
	.word	68895
	.byte	21
	.byte	'Ifx_GTM_DPLL_APS_SYNC',0,9,141,40,3
	.word	72866
	.byte	21
	.byte	'Ifx_GTM_DPLL_APT',0,9,149,40,3
	.word	68415
	.byte	21
	.byte	'Ifx_GTM_DPLL_APT_2C',0,9,157,40,3
	.word	68758
	.byte	21
	.byte	'Ifx_GTM_DPLL_APT_SYNC',0,9,165,40,3
	.word	72674
	.byte	21
	.byte	'Ifx_GTM_DPLL_CDT_SX',0,9,173,40,3
	.word	79629
	.byte	21
	.byte	'Ifx_GTM_DPLL_CDT_SX_NOM',0,9,181,40,3
	.word	79873
	.byte	21
	.byte	'Ifx_GTM_DPLL_CDT_TX',0,9,189,40,3
	.word	79515
	.byte	21
	.byte	'Ifx_GTM_DPLL_CDT_TX_NOM',0,9,197,40,3
	.word	79751
	.byte	21
	.byte	'Ifx_GTM_DPLL_CNT_NUM1',0,9,205,40,3
	.word	80576
	.byte	21
	.byte	'Ifx_GTM_DPLL_CNT_NUM2',0,9,213,40,3
	.word	80695
	.byte	21
	.byte	'Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE',0,9,221,40,3
	.word	75037
	.byte	21
	.byte	'Ifx_GTM_DPLL_CTRL_0',0,9,229,40,3
	.word	66196
	.byte	21
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE',0,9,237,40,3
	.word	74545
	.byte	21
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER',0,9,245,40,3
	.word	74308
	.byte	21
	.byte	'Ifx_GTM_DPLL_CTRL_1',0,9,253,40,3
	.word	66629
	.byte	21
	.byte	'Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER',0,9,133,41,3
	.word	74770
	.byte	21
	.byte	'Ifx_GTM_DPLL_CTRL_2',0,9,141,41,3
	.word	67003
	.byte	21
	.byte	'Ifx_GTM_DPLL_CTRL_3',0,9,149,41,3
	.word	67389
	.byte	21
	.byte	'Ifx_GTM_DPLL_CTRL_4',0,9,157,41,3
	.word	67779
	.byte	21
	.byte	'Ifx_GTM_DPLL_DLA',0,9,165,41,3
	.word	75456
	.byte	21
	.byte	'Ifx_GTM_DPLL_DT_S',0,9,173,41,3
	.word	82184
	.byte	21
	.byte	'Ifx_GTM_DPLL_DT_S_ACT',0,9,181,41,3
	.word	78949
	.byte	21
	.byte	'Ifx_GTM_DPLL_DT_T_ACT',0,9,189,41,3
	.word	78831
	.byte	21
	.byte	'Ifx_GTM_DPLL_DTA',0,9,197,41,3
	.word	75702
	.byte	21
	.byte	'Ifx_GTM_DPLL_EDT_S',0,9,206,41,3
	.word	79287
	.byte	21
	.byte	'Ifx_GTM_DPLL_EDT_T',0,9,215,41,3
	.word	79061
	.byte	21
	.byte	'Ifx_GTM_DPLL_EIRQ_EN',0,9,223,41,3
	.word	72240
	.byte	21
	.byte	'Ifx_GTM_DPLL_FTV_S',0,9,231,41,3
	.word	76411
	.byte	21
	.byte	'Ifx_GTM_DPLL_FTV_T',0,9,239,41,3
	.word	76064
	.byte	21
	.byte	'Ifx_GTM_DPLL_ID_PMTR',0,9,247,41,3
	.word	74065
	.byte	21
	.byte	'Ifx_GTM_DPLL_INC_CNT1',0,9,255,41,3
	.word	72367
	.byte	21
	.byte	'Ifx_GTM_DPLL_INC_CNT2',0,9,136,42,3
	.word	72485
	.byte	21
	.byte	'Ifx_GTM_DPLL_IRQ_EN',0,9,144,42,3
	.word	70735
	.byte	21
	.byte	'Ifx_GTM_DPLL_IRQ_FORCINT',0,9,152,42,3
	.word	71387
	.byte	21
	.byte	'Ifx_GTM_DPLL_IRQ_MODE',0,9,160,42,3
	.word	71504
	.byte	21
	.byte	'Ifx_GTM_DPLL_IRQ_NOTIFY',0,9,168,42,3
	.word	70025
	.byte	21
	.byte	'Ifx_GTM_DPLL_MEDT_S',0,9,177,42,3
	.word	79401
	.byte	21
	.byte	'Ifx_GTM_DPLL_MEDT_T',0,9,186,42,3
	.word	79175
	.byte	21
	.byte	'Ifx_GTM_DPLL_MLS1',0,9,194,42,3
	.word	80347
	.byte	21
	.byte	'Ifx_GTM_DPLL_MLS2',0,9,202,42,3
	.word	80457
	.byte	21
	.byte	'Ifx_GTM_DPLL_MPVAL1',0,9,211,42,3
	.word	77367
	.byte	21
	.byte	'Ifx_GTM_DPLL_MPVAL2',0,9,220,42,3
	.word	77497
	.byte	21
	.byte	'Ifx_GTM_DPLL_NA',0,9,228,42,3
	.word	75585
	.byte	21
	.byte	'Ifx_GTM_DPLL_NMB_S',0,9,236,42,3
	.word	81695
	.byte	21
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR',0,9,244,42,3
	.word	77865
	.byte	21
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR_OLD',0,9,252,42,3
	.word	77993
	.byte	21
	.byte	'Ifx_GTM_DPLL_NMB_T',0,9,132,43,3
	.word	81583
	.byte	21
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR',0,9,140,43,3
	.word	77617
	.byte	21
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR_OLD',0,9,148,43,3
	.word	77745
	.byte	21
	.byte	'Ifx_GTM_DPLL_NTI_CNT',0,9,156,43,3
	.word	69486
	.byte	21
	.byte	'Ifx_GTM_DPLL_NUSC',0,9,164,43,3
	.word	69370
	.byte	21
	.byte	'Ifx_GTM_DPLL_NUTC',0,9,172,43,3
	.word	69144
	.byte	21
	.byte	'Ifx_GTM_DPLL_OSW',0,9,180,43,3
	.word	68060
	.byte	21
	.byte	'Ifx_GTM_DPLL_PDT_T',0,9,188,43,3
	.word	80219
	.byte	21
	.byte	'Ifx_GTM_DPLL_PSA',0,9,196,43,3
	.word	75339
	.byte	21
	.byte	'Ifx_GTM_DPLL_PSAC',0,9,204,43,3
	.word	82434
	.byte	21
	.byte	'Ifx_GTM_DPLL_PSSC',0,9,212,43,3
	.word	81023
	.byte	21
	.byte	'Ifx_GTM_DPLL_PSSM_0',0,9,220,43,3
	.word	81359
	.byte	21
	.byte	'Ifx_GTM_DPLL_PSSM_1',0,9,228,43,3
	.word	81471
	.byte	21
	.byte	'Ifx_GTM_DPLL_PSTC',0,9,236,43,3
	.word	80913
	.byte	21
	.byte	'Ifx_GTM_DPLL_PSTM_0',0,9,244,43,3
	.word	81135
	.byte	21
	.byte	'Ifx_GTM_DPLL_PSTM_1',0,9,252,43,3
	.word	81247
	.byte	21
	.byte	'Ifx_GTM_DPLL_PVT',0,9,132,44,3
	.word	80803
	.byte	21
	.byte	'Ifx_GTM_DPLL_RAM_INI',0,9,140,44,3
	.word	75231
	.byte	21
	.byte	'Ifx_GTM_DPLL_RCDT_SX',0,9,148,44,3
	.word	78225
	.byte	21
	.byte	'Ifx_GTM_DPLL_RCDT_SX_NOM',0,9,157,44,3
	.word	78473
	.byte	21
	.byte	'Ifx_GTM_DPLL_RCDT_TX',0,9,165,44,3
	.word	78109
	.byte	21
	.byte	'Ifx_GTM_DPLL_RCDT_TX_NOM',0,9,174,44,3
	.word	78349
	.byte	21
	.byte	'Ifx_GTM_DPLL_RDT_S',0,9,182,44,3
	.word	81807
	.byte	21
	.byte	'Ifx_GTM_DPLL_RDT_S_ACT',0,9,190,44,3
	.word	78713
	.byte	21
	.byte	'Ifx_GTM_DPLL_RDT_T_ACT',0,9,198,44,3
	.word	78593
	.byte	21
	.byte	'Ifx_GTM_DPLL_SLR',0,9,206,44,3
	.word	80087
	.byte	21
	.byte	'Ifx_GTM_DPLL_STATUS',0,9,214,44,3
	.word	73948
	.byte	21
	.byte	'Ifx_GTM_DPLL_TBU_TS0_S',0,9,222,44,3
	.word	73106
	.byte	21
	.byte	'Ifx_GTM_DPLL_TBU_TS0_T',0,9,230,44,3
	.word	72986
	.byte	21
	.byte	'Ifx_GTM_DPLL_THMA',0,9,238,44,3
	.word	76631
	.byte	21
	.byte	'Ifx_GTM_DPLL_THMI',0,9,246,44,3
	.word	76521
	.byte	21
	.byte	'Ifx_GTM_DPLL_THVAL',0,9,254,44,3
	.word	76743
	.byte	21
	.byte	'Ifx_GTM_DPLL_TLR',0,9,134,45,3
	.word	79980
	.byte	21
	.byte	'Ifx_GTM_DPLL_TOV',0,9,142,45,3
	.word	76864
	.byte	21
	.byte	'Ifx_GTM_DPLL_TOV_S',0,9,150,45,3
	.word	76987
	.byte	21
	.byte	'Ifx_GTM_DPLL_TS_S_0',0,9,158,45,3
	.word	76180
	.byte	21
	.byte	'Ifx_GTM_DPLL_TS_S_1',0,9,166,45,3
	.word	76296
	.byte	21
	.byte	'Ifx_GTM_DPLL_TS_T_0',0,9,174,45,3
	.word	75829
	.byte	21
	.byte	'Ifx_GTM_DPLL_TS_T_1',0,9,182,45,3
	.word	75947
	.byte	21
	.byte	'Ifx_GTM_DPLL_TSAC',0,9,190,45,3
	.word	82315
	.byte	21
	.byte	'Ifx_GTM_DPLL_TSF_S',0,9,198,45,3
	.word	81929
	.byte	21
	.byte	'Ifx_GTM_DXINCON',0,9,206,45,3
	.word	96123
	.byte	21
	.byte	'Ifx_GTM_DXOUTCON',0,9,214,45,3
	.word	94900
	.byte	21
	.byte	'Ifx_GTM_EIRQ_EN',0,9,222,45,3
	.word	27432
	.byte	21
	.byte	'Ifx_GTM_F2A_ENABLE',0,9,230,45,3
	.word	63161
	.byte	21
	.byte	'Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO',0,9,238,45,3
	.word	62638
	.byte	21
	.byte	'Ifx_GTM_F2A_STR_CH_STR_CFG',0,9,246,45,3
	.word	62856
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_CTRL',0,9,254,45,3
	.word	63633
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_EIRQ_EN',0,9,134,46,3
	.word	65597
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_END_ADDR',0,9,142,46,3
	.word	63750
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_FILL_LEVEL',0,9,150,46,3
	.word	64389
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_IRQ_EN',0,9,158,46,3
	.word	65013
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_IRQ_FORCINT',0,9,166,46,3
	.word	65215
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_IRQ_MODE',0,9,174,46,3
	.word	65385
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_IRQ_NOTIFY',0,9,182,46,3
	.word	64804
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_LOWER_WM',0,9,190,46,3
	.word	64103
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_RD_PTR',0,9,198,46,3
	.word	64619
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_START_ADDR',0,9,206,46,3
	.word	63869
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_STATUS',0,9,214,46,3
	.word	64269
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_UPPER_WM',0,9,222,46,3
	.word	63986
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH_WR_PTR',0,9,230,46,3
	.word	64504
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_0',0,9,238,46,3
	.word	49066
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_1',0,9,246,46,3
	.word	49814
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_2',0,9,254,46,3
	.word	50485
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_4',0,9,134,47,3
	.word	51156
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_6',0,9,142,47,3
	.word	52008
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_9',0,9,150,47,3
	.word	52880
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_CEI0',0,9,158,47,3
	.word	53643
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_CEI1',0,9,166,47,3
	.word	54341
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_CEI3',0,9,174,47,3
	.word	55039
	.byte	21
	.byte	'Ifx_GTM_ICM_IRQG_MEI',0,9,182,47,3
	.word	53338
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_CAN_OUTSEL',0,9,190,47,3
	.word	91240
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_DSADC_INSEL',0,9,198,47,3
	.word	90715
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_DSADC_OUTSEL',0,9,206,47,3
	.word	90923
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_PSI5_OUTSEL0',0,9,214,47,3
	.word	91492
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_PSI5S_OUTSEL',0,9,222,47,3
	.word	91769
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_T_OUTSEL',0,9,230,47,3
	.word	90423
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_TIM_INSEL',0,9,238,47,3
	.word	90015
	.byte	21
	.byte	'Ifx_GTM_IRQ_EN',0,9,246,47,3
	.word	26904
	.byte	21
	.byte	'Ifx_GTM_IRQ_FORCINT',0,9,254,47,3
	.word	27106
	.byte	21
	.byte	'Ifx_GTM_IRQ_MODE',0,9,134,48,3
	.word	27218
	.byte	21
	.byte	'Ifx_GTM_IRQ_NOTIFY',0,9,142,48,3
	.word	26695
	.byte	21
	.byte	'Ifx_GTM_KRST0',0,9,150,48,3
	.word	94025
	.byte	21
	.byte	'Ifx_GTM_KRST1',0,9,158,48,3
	.word	93902
	.byte	21
	.byte	'Ifx_GTM_KRSTCLR',0,9,166,48,3
	.word	93798
	.byte	21
	.byte	'Ifx_GTM_MAP_CTRL',0,9,174,48,3
	.word	58238
	.byte	21
	.byte	'Ifx_GTM_MCFG_CTRL',0,9,182,48,3
	.word	58388
	.byte	21
	.byte	'Ifx_GTM_MCS_CH0_CTRG',0,9,190,48,3
	.word	86575
	.byte	21
	.byte	'Ifx_GTM_MCS_CH0_STRG',0,9,198,48,3
	.word	86934
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_ACB',0,9,206,48,3
	.word	86216
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_CTRL',0,9,214,48,3
	.word	86042
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_EIRQ_EN',0,9,222,48,3
	.word	87852
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_IRQ_EN',0,9,230,48,3
	.word	87379
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_IRQ_FORCINT',0,9,238,48,3
	.word	87558
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_IRQ_MODE',0,9,246,48,3
	.word	87677
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_IRQ_NOTIFY',0,9,254,48,3
	.word	87208
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_PC',0,9,134,49,3
	.word	87042
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_R0',0,9,142,49,3
	.word	84986
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_R1',0,9,150,49,3
	.word	85096
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_R2',0,9,158,49,3
	.word	85206
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_R3',0,9,166,49,3
	.word	85316
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_R4',0,9,174,49,3
	.word	85426
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_R5',0,9,182,49,3
	.word	85536
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_R6',0,9,190,49,3
	.word	85646
	.byte	21
	.byte	'Ifx_GTM_MCS_CH_R7',0,9,198,49,3
	.word	85756
	.byte	21
	.byte	'Ifx_GTM_MCS_CTRL',0,9,206,49,3
	.word	88339
	.byte	21
	.byte	'Ifx_GTM_MCS_ERR',0,9,214,49,3
	.word	89034
	.byte	21
	.byte	'Ifx_GTM_MCS_RST',0,9,222,49,3
	.word	88815
	.byte	21
	.byte	'Ifx_GTM_MCSINTCLR',0,9,230,49,3
	.word	95765
	.byte	21
	.byte	'Ifx_GTM_MCSINTSTAT',0,9,238,49,3
	.word	95455
	.byte	21
	.byte	'Ifx_GTM_MON_ACTIVITY_0',0,9,246,49,3
	.word	30519
	.byte	21
	.byte	'Ifx_GTM_MON_STATUS',0,9,254,49,3
	.word	29964
	.byte	21
	.byte	'Ifx_GTM_MSC0INLEXTCON',0,9,134,50,3
	.word	98304
	.byte	21
	.byte	'Ifx_GTM_MSCIN_INHCON',0,9,142,50,3
	.word	97899
	.byte	21
	.byte	'Ifx_GTM_MSCIN_INLCON',0,9,150,50,3
	.word	97563
	.byte	21
	.byte	'Ifx_GTM_MSCSET_CON0',0,9,158,50,3
	.word	96444
	.byte	21
	.byte	'Ifx_GTM_MSCSET_CON1',0,9,166,50,3
	.word	96672
	.byte	21
	.byte	'Ifx_GTM_MSCSET_CON2',0,9,174,50,3
	.word	96902
	.byte	21
	.byte	'Ifx_GTM_MSCSET_CON3',0,9,182,50,3
	.word	97134
	.byte	21
	.byte	'Ifx_GTM_OCS',0,9,190,50,3
	.word	93692
	.byte	21
	.byte	'Ifx_GTM_ODA',0,9,198,50,3
	.word	93532
	.byte	21
	.byte	'Ifx_GTM_OTBU0T',0,9,206,50,3
	.word	92493
	.byte	21
	.byte	'Ifx_GTM_OTBU1T',0,9,214,50,3
	.word	92635
	.byte	21
	.byte	'Ifx_GTM_OTBU2T',0,9,222,50,3
	.word	92777
	.byte	21
	.byte	'Ifx_GTM_OTSC0',0,9,230,50,3
	.word	93256
	.byte	21
	.byte	'Ifx_GTM_OTSC1',0,9,238,50,3
	.word	93412
	.byte	21
	.byte	'Ifx_GTM_OTSS',0,9,246,50,3
	.word	92962
	.byte	21
	.byte	'Ifx_GTM_REV',0,9,254,50,3
	.word	26108
	.byte	21
	.byte	'Ifx_GTM_RST',0,9,134,51,3
	.word	26210
	.byte	21
	.byte	'Ifx_GTM_SPE_CMP',0,9,142,51,3
	.word	57537
	.byte	21
	.byte	'Ifx_GTM_SPE_CNT',0,9,150,51,3
	.word	57430
	.byte	21
	.byte	'Ifx_GTM_SPE_CTRL_STAT',0,9,158,51,3
	.word	55708
	.byte	21
	.byte	'Ifx_GTM_SPE_EIRQ_EN',0,9,166,51,3
	.word	57323
	.byte	21
	.byte	'Ifx_GTM_SPE_IRQ_EN',0,9,174,51,3
	.word	56755
	.byte	21
	.byte	'Ifx_GTM_SPE_IRQ_FORCINT',0,9,182,51,3
	.word	56973
	.byte	21
	.byte	'Ifx_GTM_SPE_IRQ_MODE',0,9,190,51,3
	.word	57089
	.byte	21
	.byte	'Ifx_GTM_SPE_IRQ_NOTIFY',0,9,198,51,3
	.word	56527
	.byte	21
	.byte	'Ifx_GTM_SPE_OUT_CTRL',0,9,206,51,3
	.word	56330
	.byte	21
	.byte	'Ifx_GTM_SPE_OUT_PAT',0,9,214,51,3
	.word	56200
	.byte	21
	.byte	'Ifx_GTM_SPE_PAT',0,9,222,51,3
	.word	56081
	.byte	21
	.byte	'Ifx_GTM_TBU_CH0_BASE',0,9,230,51,3
	.word	28818
	.byte	21
	.byte	'Ifx_GTM_TBU_CH0_CTRL',0,9,238,51,3
	.word	28705
	.byte	21
	.byte	'Ifx_GTM_TBU_CH1_BASE',0,9,246,51,3
	.word	29068
	.byte	21
	.byte	'Ifx_GTM_TBU_CH1_CTRL',0,9,254,51,3
	.word	28955
	.byte	21
	.byte	'Ifx_GTM_TBU_CH2_BASE',0,9,134,52,3
	.word	29318
	.byte	21
	.byte	'Ifx_GTM_TBU_CH2_CTRL',0,9,142,52,3
	.word	29205
	.byte	21
	.byte	'Ifx_GTM_TBU_CHEN',0,9,150,52,3
	.word	28568
	.byte	21
	.byte	'Ifx_GTM_TIM_AUX_IN_SRC',0,9,158,52,3
	.word	28393
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_CNT',0,9,166,52,3
	.word	58719
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_CNTS',0,9,174,52,3
	.word	58936
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_CTRL',0,9,182,52,3
	.word	59978
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_ECNT',0,9,190,52,3
	.word	58831
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_ECTRL',0,9,198,52,3
	.word	60097
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_EIRQ_EN',0,9,206,52,3
	.word	61172
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_FLT_FE',0,9,214,52,3
	.word	59429
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_FLT_RE',0,9,222,52,3
	.word	59313
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_GPR0',0,9,230,52,3
	.word	58504
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_GPR1',0,9,238,52,3
	.word	58609
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_IRQ_EN',0,9,246,52,3
	.word	60559
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_IRQ_FORCINT',0,9,254,52,3
	.word	60796
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_IRQ_MODE',0,9,134,53,3
	.word	60915
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_IRQ_NOTIFY',0,9,142,53,3
	.word	60309
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_TDUC',0,9,150,53,3
	.word	59049
	.byte	21
	.byte	'Ifx_GTM_TIM_CH_TDUV',0,9,158,53,3
	.word	59197
	.byte	21
	.byte	'Ifx_GTM_TIM_IN_SRC',0,9,166,53,3
	.word	61823
	.byte	21
	.byte	'Ifx_GTM_TIM_RST',0,9,174,53,3
	.word	62066
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_CM0',0,9,182,53,3
	.word	17707
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_CM1',0,9,190,53,3
	.word	17817
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_CN0',0,9,198,53,3
	.word	17927
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_CTRL',0,9,206,53,3
	.word	17377
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_IRQ_EN',0,9,214,53,3
	.word	18320
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_IRQ_FORCINT',0,9,222,53,3
	.word	18468
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_IRQ_MODE',0,9,230,53,3
	.word	18587
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_IRQ_NOTIFY',0,9,238,53,3
	.word	18173
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_SR0',0,9,246,53,3
	.word	17487
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_SR1',0,9,254,53,3
	.word	17597
	.byte	21
	.byte	'Ifx_GTM_TOM_CH_STAT',0,9,134,54,3
	.word	18036
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC0_ACT_TB',0,9,142,54,3
	.word	16349
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_CTRL',0,9,150,54,3
	.word	19092
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_STAT',0,9,158,54,3
	.word	19380
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC0_FUPD_CTRL',0,9,166,54,3
	.word	16781
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC0_GLB_CTRL',0,9,174,54,3
	.word	16193
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC0_INT_TRIG',0,9,182,54,3
	.word	17051
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_CTRL',0,9,190,54,3
	.word	19668
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_STAT',0,9,198,54,3
	.word	19956
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC1_ACT_TB',0,9,206,54,3
	.word	22619
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_CTRL',0,9,214,54,3
	.word	23614
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_STAT',0,9,222,54,3
	.word	23902
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC1_FUPD_CTRL',0,9,230,54,3
	.word	23051
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC1_GLB_CTRL',0,9,238,54,3
	.word	22463
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC1_INT_TRIG',0,9,246,54,3
	.word	23321
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_CTRL',0,9,254,54,3
	.word	24190
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_STAT',0,9,134,55,3
	.word	24478
	.byte	21
	.byte	'Ifx_GTM_TRIGOUT',0,9,142,55,3
	.word	95126
	.byte	10
	.word	63387
	.byte	21
	.byte	'Ifx_GTM_AFD_CH',0,9,157,55,3
	.word	127628
	.byte	10
	.word	14950
	.byte	21
	.byte	'Ifx_GTM_ATOM_AGC',0,9,171,55,3
	.word	127657
	.byte	10
	.word	12242
	.byte	21
	.byte	'Ifx_GTM_ATOM_CH',0,9,197,55,3
	.word	127688
	.byte	10
	.word	36617
	.byte	21
	.byte	'Ifx_GTM_CMU_CLK0_5',0,9,203,55,3
	.word	127718
	.byte	10
	.word	36810
	.byte	21
	.byte	'Ifx_GTM_CMU_CLK_6',0,9,209,55,3
	.word	127751
	.byte	10
	.word	36993
	.byte	21
	.byte	'Ifx_GTM_CMU_CLK_7',0,9,215,55,3
	.word	127783
	.byte	10
	.word	37272
	.byte	21
	.byte	'Ifx_GTM_CMU_ECLK',0,9,222,55,3
	.word	127815
	.byte	10
	.word	37456
	.byte	21
	.byte	'Ifx_GTM_CMU_FXCLK',0,9,228,55,3
	.word	127846
	.byte	10
	.word	62678
	.byte	21
	.byte	'Ifx_GTM_F2A_RD_CH',0,9,234,55,3
	.word	127878
	.byte	10
	.word	62896
	.byte	21
	.byte	'Ifx_GTM_F2A_STR_CH',0,9,240,55,3
	.word	127910
	.byte	10
	.word	65637
	.byte	21
	.byte	'Ifx_GTM_FIFO_CH',0,9,132,56,3
	.word	127943
	.byte	10
	.word	91280
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_CAN',0,9,138,56,3
	.word	127973
	.byte	10
	.word	90963
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_DSADC',0,9,147,56,3
	.word	128008
	.byte	10
	.word	91532
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_PSI5',0,9,153,56,3
	.word	128045
	.byte	10
	.word	91809
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_PSI5S',0,9,159,56,3
	.word	128081
	.byte	10
	.word	90472
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_T',0,9,165,56,3
	.word	128118
	.byte	10
	.word	90055
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL_TIM',0,9,171,56,3
	.word	128151
	.byte	10
	.word	89083
	.byte	21
	.byte	'Ifx_GTM_MCS_CH',0,9,194,56,3
	.word	128186
	.byte	10
	.word	87892
	.byte	21
	.byte	'Ifx_GTM_MCS_CH0',0,9,218,56,3
	.word	128215
	.byte	10
	.word	61212
	.byte	21
	.byte	'Ifx_GTM_TIM_CH',0,9,240,56,3
	.word	128245
	.byte	10
	.word	18627
	.byte	21
	.byte	'Ifx_GTM_TOM_CH',0,9,129,57,3
	.word	128274
	.byte	10
	.word	63462
	.byte	21
	.byte	'Ifx_GTM_AFD',0,9,145,57,3
	.word	128303
	.byte	10
	.word	35659
	.byte	21
	.byte	'Ifx_GTM_ARU',0,9,163,57,3
	.word	128329
	.byte	10
	.word	15207
	.byte	21
	.byte	'Ifx_GTM_ATOM',0,9,184,57,3
	.word	128355
	.byte	10
	.word	48014
	.byte	21
	.byte	'Ifx_GTM_BRC',0,9,219,57,3
	.word	128382
	.byte	10
	.word	28113
	.byte	21
	.byte	'Ifx_GTM_BRIDGE',0,9,227,57,3
	.word	128408
	.byte	10
	.word	33814
	.byte	21
	.byte	'Ifx_GTM_CMP',0,9,238,57,3
	.word	128437
	.byte	10
	.word	37501
	.byte	21
	.byte	'Ifx_GTM_CMU',0,9,251,57,3
	.word	128463
	.byte	10
	.word	82721
	.byte	21
	.byte	'Ifx_GTM_DPLL',0,9,244,58,3
	.word	128489
	.byte	10
	.word	63201
	.byte	21
	.byte	'Ifx_GTM_F2A',0,9,252,58,3
	.word	128516
	.byte	10
	.word	65945
	.byte	21
	.byte	'Ifx_GTM_FIFO',0,9,130,59,3
	.word	128542
	.byte	10
	.word	55079
	.byte	21
	.byte	'Ifx_GTM_ICM',0,9,150,59,3
	.word	128569
	.byte	10
	.word	91861
	.byte	21
	.byte	'Ifx_GTM_INOUTSEL',0,9,164,59,3
	.word	128595
	.byte	10
	.word	89422
	.byte	21
	.byte	'Ifx_GTM_MCS',0,9,182,59,3
	.word	128626
	.byte	10
	.word	30559
	.byte	21
	.byte	'Ifx_GTM_MON',0,9,189,59,3
	.word	128652
	.byte	10
	.word	97939
	.byte	21
	.byte	'Ifx_GTM_MSCIN',0,9,196,59,3
	.word	128678
	.byte	10
	.word	97174
	.byte	21
	.byte	'Ifx_GTM_MSCSET',0,9,205,59,3
	.word	128706
	.byte	10
	.word	57586
	.byte	21
	.byte	'Ifx_GTM_SPE',0,9,222,59,3
	.word	128735
	.byte	10
	.word	29358
	.byte	21
	.byte	'Ifx_GTM_TBU',0,9,234,59,3
	.word	128761
	.byte	10
	.word	62152
	.byte	21
	.byte	'Ifx_GTM_TIM',0,9,128,60,3
	.word	128787
	.byte	10
	.word	24559
	.byte	21
	.byte	'Ifx_GTM_TOM',0,9,177,60,3
	.word	128813
	.byte	10
	.word	98355
	.byte	21
	.byte	'Ifx_GTM',0,9,154,61,3
	.word	128839
	.byte	21
	.byte	'size_t',0,20,24,25
	.word	319
	.byte	21
	.byte	'boolean',0,21,101,29
	.word	516
	.byte	21
	.byte	'uint8',0,21,105,29
	.word	516
	.byte	21
	.byte	'uint16',0,21,109,29
	.word	533
	.byte	21
	.byte	'uint32',0,21,113,29
	.word	20195
	.byte	21
	.byte	'uint64',0,21,118,29
	.word	397
	.byte	21
	.byte	'sint16',0,21,126,29
	.word	105001
	.byte	7
	.byte	'long int',0,4,5,21
	.byte	'sint32',0,21,131,1,29
	.word	128966
	.byte	7
	.byte	'long long int',0,8,5,21
	.byte	'sint64',0,21,139,1,29
	.word	128994
	.byte	21
	.byte	'float32',0,21,168,1,29
	.word	249
	.byte	21
	.byte	'pvoid',0,15,57,28
	.word	423
	.byte	21
	.byte	'Ifx_TickTime',0,15,79,28
	.word	128994
	.byte	21
	.byte	'Ifx_Priority',0,15,103,16
	.word	533
	.byte	21
	.byte	'Ifx_TimerValue',0,15,104,16
	.word	20195
	.byte	21
	.byte	'Ifx_ActiveState',0,15,120,3
	.word	101955
	.byte	21
	.byte	'Ifx_P_ACCEN0_Bits',0,4,79,3
	.word	7133
	.byte	21
	.byte	'Ifx_P_ACCEN1_Bits',0,4,85,3
	.word	7046
	.byte	21
	.byte	'Ifx_P_ESR_Bits',0,4,107,3
	.word	3389
	.byte	21
	.byte	'Ifx_P_ID_Bits',0,4,115,3
	.word	1442
	.byte	21
	.byte	'Ifx_P_IN_Bits',0,4,137,1,3
	.word	2437
	.byte	21
	.byte	'Ifx_P_IOCR0_Bits',0,4,150,1,3
	.word	1570
	.byte	21
	.byte	'Ifx_P_IOCR12_Bits',0,4,163,1,3
	.word	2217
	.byte	21
	.byte	'Ifx_P_IOCR4_Bits',0,4,176,1,3
	.word	1785
	.byte	21
	.byte	'Ifx_P_IOCR8_Bits',0,4,189,1,3
	.word	2000
	.byte	21
	.byte	'Ifx_P_LPCR0_Bits',0,4,197,1,3
	.word	6405
	.byte	21
	.byte	'Ifx_P_LPCR1_Bits',0,4,205,1,3
	.word	6529
	.byte	21
	.byte	'Ifx_P_LPCR1_P21_Bits',0,4,215,1,3
	.word	6613
	.byte	21
	.byte	'Ifx_P_LPCR2_Bits',0,4,229,1,3
	.word	6793
	.byte	21
	.byte	'Ifx_P_OMCR0_Bits',0,4,240,1,3
	.word	5044
	.byte	21
	.byte	'Ifx_P_OMCR12_Bits',0,4,250,1,3
	.word	5568
	.byte	21
	.byte	'Ifx_P_OMCR4_Bits',0,4,133,2,3
	.word	5218
	.byte	21
	.byte	'Ifx_P_OMCR8_Bits',0,4,144,2,3
	.word	5392
	.byte	21
	.byte	'Ifx_P_OMCR_Bits',0,4,166,2,3
	.word	6057
	.byte	21
	.byte	'Ifx_P_OMR_Bits',0,4,203,2,3
	.word	871
	.byte	21
	.byte	'Ifx_P_OMSR0_Bits',0,4,213,2,3
	.word	4381
	.byte	21
	.byte	'Ifx_P_OMSR12_Bits',0,4,224,2,3
	.word	4869
	.byte	21
	.byte	'Ifx_P_OMSR4_Bits',0,4,235,2,3
	.word	4528
	.byte	21
	.byte	'Ifx_P_OMSR8_Bits',0,4,246,2,3
	.word	4697
	.byte	21
	.byte	'Ifx_P_OMSR_Bits',0,4,140,3,3
	.word	5724
	.byte	21
	.byte	'Ifx_P_OUT_Bits',0,4,162,3,3
	.word	555
	.byte	21
	.byte	'Ifx_P_PCSR_Bits',0,4,180,3,3
	.word	4095
	.byte	21
	.byte	'Ifx_P_PDISC_Bits',0,4,202,3,3
	.word	3729
	.byte	21
	.byte	'Ifx_P_PDR0_Bits',0,4,223,3,3
	.word	2760
	.byte	21
	.byte	'Ifx_P_PDR1_Bits',0,4,244,3,3
	.word	3064
	.byte	21
	.byte	'Ifx_P_ACCEN0',0,4,129,4,3
	.word	7660
	.byte	21
	.byte	'Ifx_P_ACCEN1',0,4,137,4,3
	.word	7093
	.byte	21
	.byte	'Ifx_P_ESR',0,4,145,4,3
	.word	3680
	.byte	21
	.byte	'Ifx_P_ID',0,4,153,4,3
	.word	1521
	.byte	21
	.byte	'Ifx_P_IN',0,4,161,4,3
	.word	2711
	.byte	21
	.byte	'Ifx_P_IOCR0',0,4,169,4,3
	.word	1745
	.byte	21
	.byte	'Ifx_P_IOCR12',0,4,177,4,3
	.word	2397
	.byte	21
	.byte	'Ifx_P_IOCR4',0,4,185,4,3
	.word	1960
	.byte	21
	.byte	'Ifx_P_IOCR8',0,4,193,4,3
	.word	2177
	.byte	21
	.byte	'Ifx_P_LPCR0',0,4,201,4,3
	.word	6489
	.byte	21
	.byte	'Ifx_P_LPCR1',0,4,210,4,3
	.word	6738
	.byte	21
	.byte	'Ifx_P_LPCR2',0,4,218,4,3
	.word	6997
	.byte	21
	.byte	'Ifx_P_OMCR',0,4,226,4,3
	.word	6365
	.byte	21
	.byte	'Ifx_P_OMCR0',0,4,234,4,3
	.word	5178
	.byte	21
	.byte	'Ifx_P_OMCR12',0,4,242,4,3
	.word	5684
	.byte	21
	.byte	'Ifx_P_OMCR4',0,4,250,4,3
	.word	5352
	.byte	21
	.byte	'Ifx_P_OMCR8',0,4,130,5,3
	.word	5528
	.byte	21
	.byte	'Ifx_P_OMR',0,4,138,5,3
	.word	1402
	.byte	21
	.byte	'Ifx_P_OMSR',0,4,146,5,3
	.word	6017
	.byte	21
	.byte	'Ifx_P_OMSR0',0,4,154,5,3
	.word	4488
	.byte	21
	.byte	'Ifx_P_OMSR12',0,4,162,5,3
	.word	5004
	.byte	21
	.byte	'Ifx_P_OMSR4',0,4,170,5,3
	.word	4657
	.byte	21
	.byte	'Ifx_P_OMSR8',0,4,178,5,3
	.word	4829
	.byte	21
	.byte	'Ifx_P_OUT',0,4,186,5,3
	.word	831
	.byte	21
	.byte	'Ifx_P_PCSR',0,4,194,5,3
	.word	4341
	.byte	21
	.byte	'Ifx_P_PDISC',0,4,202,5,3
	.word	4055
	.byte	21
	.byte	'Ifx_P_PDR0',0,4,210,5,3
	.word	3024
	.byte	21
	.byte	'Ifx_P_PDR1',0,4,218,5,3
	.word	3340
	.byte	10
	.word	7700
	.byte	21
	.byte	'Ifx_P',0,4,139,6,3
	.word	130465
	.byte	17,22,250,10,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,21
	.byte	'IfxScu_WDTCON1_IR',0,22,255,10,3
	.word	130485
	.byte	11
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,23,45,16,4,12
	.byte	'EN0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	516
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	516
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_ACCEN0_Bits',0,23,79,3
	.word	130607
	.byte	11
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,23,82,16,4,12
	.byte	'reserved_0',0,4
	.word	319
	.byte	32,0,2,35,0,0,21
	.byte	'Ifx_SCU_ACCEN1_Bits',0,23,85,3
	.word	131164
	.byte	11
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,23,88,16,4,12
	.byte	'STM0DIS',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'STM1DIS',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'STM2DIS',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,4
	.word	319
	.byte	29,0,2,35,0,0,21
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,23,94,3
	.word	131241
	.byte	11
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,23,97,16,4,12
	.byte	'BAUD1DIV',0,1
	.word	516
	.byte	4,4,2,35,0,12
	.byte	'BAUD2DIV',0,1
	.word	516
	.byte	4,0,2,35,0,12
	.byte	'SRIDIV',0,1
	.word	516
	.byte	4,4,2,35,1,12
	.byte	'LPDIV',0,1
	.word	516
	.byte	4,0,2,35,1,12
	.byte	'SPBDIV',0,1
	.word	516
	.byte	4,4,2,35,2,12
	.byte	'FSI2DIV',0,1
	.word	516
	.byte	2,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	516
	.byte	2,0,2,35,2,12
	.byte	'FSIDIV',0,1
	.word	516
	.byte	2,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	516
	.byte	2,4,2,35,3,12
	.byte	'CLKSEL',0,1
	.word	516
	.byte	2,2,2,35,3,12
	.byte	'UP',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_CCUCON0_Bits',0,23,111,3
	.word	131377
	.byte	11
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,23,114,16,4,12
	.byte	'CANDIV',0,1
	.word	516
	.byte	4,4,2,35,0,12
	.byte	'ERAYDIV',0,1
	.word	516
	.byte	4,0,2,35,0,12
	.byte	'STMDIV',0,1
	.word	516
	.byte	4,4,2,35,1,12
	.byte	'GTMDIV',0,1
	.word	516
	.byte	4,0,2,35,1,12
	.byte	'ETHDIV',0,1
	.word	516
	.byte	4,4,2,35,2,12
	.byte	'ASCLINFDIV',0,1
	.word	516
	.byte	4,0,2,35,2,12
	.byte	'ASCLINSDIV',0,1
	.word	516
	.byte	4,4,2,35,3,12
	.byte	'INSEL',0,1
	.word	516
	.byte	2,2,2,35,3,12
	.byte	'UP',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_CCUCON1_Bits',0,23,126,3
	.word	131657
	.byte	11
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,23,129,1,16,4,12
	.byte	'BBBDIV',0,1
	.word	516
	.byte	4,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	319
	.byte	26,2,2,35,0,12
	.byte	'UP',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_CCUCON2_Bits',0,23,135,1,3
	.word	131895
	.byte	11
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,23,138,1,16,4,12
	.byte	'PLLDIV',0,1
	.word	516
	.byte	6,2,2,35,0,12
	.byte	'PLLSEL',0,1
	.word	516
	.byte	2,0,2,35,0,12
	.byte	'PLLERAYDIV',0,1
	.word	516
	.byte	6,2,2,35,1,12
	.byte	'PLLERAYSEL',0,1
	.word	516
	.byte	2,0,2,35,1,12
	.byte	'SRIDIV',0,1
	.word	516
	.byte	6,2,2,35,2,12
	.byte	'SRISEL',0,1
	.word	516
	.byte	2,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	5,3,2,35,3,12
	.byte	'SLCK',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'UP',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_CCUCON3_Bits',0,23,150,1,3
	.word	132023
	.byte	11
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,23,153,1,16,4,12
	.byte	'SPBDIV',0,1
	.word	516
	.byte	6,2,2,35,0,12
	.byte	'SPBSEL',0,1
	.word	516
	.byte	2,0,2,35,0,12
	.byte	'GTMDIV',0,1
	.word	516
	.byte	6,2,2,35,1,12
	.byte	'GTMSEL',0,1
	.word	516
	.byte	2,0,2,35,1,12
	.byte	'STMDIV',0,1
	.word	516
	.byte	6,2,2,35,2,12
	.byte	'STMSEL',0,1
	.word	516
	.byte	2,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	5,3,2,35,3,12
	.byte	'SLCK',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'UP',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_CCUCON4_Bits',0,23,165,1,3
	.word	132266
	.byte	11
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,23,168,1,16,4,12
	.byte	'MAXDIV',0,1
	.word	516
	.byte	4,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	319
	.byte	26,2,2,35,0,12
	.byte	'UP',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_CCUCON5_Bits',0,23,174,1,3
	.word	132501
	.byte	11
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,23,177,1,16,4,12
	.byte	'CPU0DIV',0,1
	.word	516
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	319
	.byte	26,0,2,35,0,0,21
	.byte	'Ifx_SCU_CCUCON6_Bits',0,23,181,1,3
	.word	132629
	.byte	11
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,23,184,1,16,4,12
	.byte	'CPU1DIV',0,1
	.word	516
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	319
	.byte	26,0,2,35,0,0,21
	.byte	'Ifx_SCU_CCUCON7_Bits',0,23,188,1,3
	.word	132729
	.byte	11
	.byte	'_Ifx_SCU_CHIPID_Bits',0,23,191,1,16,4,12
	.byte	'CHREV',0,1
	.word	516
	.byte	6,2,2,35,0,12
	.byte	'CHTEC',0,1
	.word	516
	.byte	2,0,2,35,0,12
	.byte	'CHID',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'EEA',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'UCODE',0,1
	.word	516
	.byte	7,0,2,35,2,12
	.byte	'FSIZE',0,1
	.word	516
	.byte	4,4,2,35,3,12
	.byte	'SP',0,1
	.word	516
	.byte	2,2,2,35,3,12
	.byte	'SEC',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_CHIPID_Bits',0,23,202,1,3
	.word	132829
	.byte	11
	.byte	'_Ifx_SCU_DTSCON_Bits',0,23,205,1,16,4,12
	.byte	'PWD',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'START',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	516
	.byte	2,4,2,35,0,12
	.byte	'CAL',0,4
	.word	319
	.byte	20,8,2,35,0,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'SLCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_DTSCON_Bits',0,23,213,1,3
	.word	133037
	.byte	11
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,23,216,1,16,4,12
	.byte	'LOWER',0,2
	.word	533
	.byte	10,6,2,35,0,12
	.byte	'reserved_10',0,1
	.word	516
	.byte	5,1,2,35,1,12
	.byte	'LLU',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'UPPER',0,2
	.word	533
	.byte	10,6,2,35,2,12
	.byte	'reserved_26',0,1
	.word	516
	.byte	4,2,2,35,3,12
	.byte	'SLCK',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'UOF',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_DTSLIM_Bits',0,23,225,1,3
	.word	133202
	.byte	11
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,23,228,1,16,4,12
	.byte	'RESULT',0,2
	.word	533
	.byte	10,6,2,35,0,12
	.byte	'reserved_10',0,1
	.word	516
	.byte	4,2,2,35,1,12
	.byte	'RDY',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'BUSY',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	533
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,23,235,1,3
	.word	133385
	.byte	11
	.byte	'_Ifx_SCU_EICR_Bits',0,23,238,1,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	4,4,2,35,0,12
	.byte	'EXIS0',0,1
	.word	516
	.byte	3,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'FEN0',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'REN0',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'LDEN0',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'EIEN0',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'INP0',0,1
	.word	516
	.byte	3,1,2,35,1,12
	.byte	'reserved_15',0,4
	.word	319
	.byte	5,12,2,35,0,12
	.byte	'EXIS1',0,1
	.word	516
	.byte	3,1,2,35,2,12
	.byte	'reserved_23',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'FEN1',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'REN1',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'LDEN1',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'EIEN1',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'INP1',0,1
	.word	516
	.byte	3,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EICR_Bits',0,23,129,2,3
	.word	133539
	.byte	11
	.byte	'_Ifx_SCU_EIFR_Bits',0,23,132,2,16,4,12
	.byte	'INTF0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'INTF1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'INTF2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'INTF3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'INTF4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'INTF5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'INTF6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'INTF7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	319
	.byte	24,0,2,35,0,0,21
	.byte	'Ifx_SCU_EIFR_Bits',0,23,143,2,3
	.word	133903
	.byte	11
	.byte	'_Ifx_SCU_EMSR_Bits',0,23,146,2,16,4,12
	.byte	'POL',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'MODE',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'ENON',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'PSEL',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,2
	.word	533
	.byte	12,0,2,35,0,12
	.byte	'EMSF',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'SEMSF',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	516
	.byte	6,0,2,35,2,12
	.byte	'EMSFM',0,1
	.word	516
	.byte	2,6,2,35,3,12
	.byte	'SEMSFM',0,1
	.word	516
	.byte	2,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	516
	.byte	4,0,2,35,3,0,21
	.byte	'Ifx_SCU_EMSR_Bits',0,23,159,2,3
	.word	134114
	.byte	11
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,23,162,2,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	7,1,2,35,0,12
	.byte	'EDCON',0,2
	.word	533
	.byte	2,7,2,35,0,12
	.byte	'reserved_9',0,4
	.word	319
	.byte	23,0,2,35,0,0,21
	.byte	'Ifx_SCU_ESRCFG_Bits',0,23,167,2,3
	.word	134366
	.byte	11
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,23,170,2,16,4,12
	.byte	'ARI',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'ARC',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	319
	.byte	30,0,2,35,0,0,21
	.byte	'Ifx_SCU_ESROCFG_Bits',0,23,175,2,3
	.word	134484
	.byte	11
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,23,178,2,16,4,12
	.byte	'reserved_0',0,4
	.word	319
	.byte	28,4,2,35,0,12
	.byte	'EVR13OFF',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'BPEVR13OFF',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVR13CON_Bits',0,23,185,2,3
	.word	134595
	.byte	11
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,23,188,2,16,4,12
	.byte	'reserved_0',0,4
	.word	319
	.byte	28,4,2,35,0,12
	.byte	'EVR33OFF',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'BPEVR33OFF',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVR33CON_Bits',0,23,195,2,3
	.word	134758
	.byte	11
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,23,198,2,16,4,12
	.byte	'ADC13V',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'ADC33V',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'ADCSWDV',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'VAL',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,23,205,2,3
	.word	134921
	.byte	11
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,23,208,2,16,4,12
	.byte	'DVS13TRIM',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'DVS33TRIM',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'VAL',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,23,215,2,3
	.word	135079
	.byte	11
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,23,218,2,16,4,12
	.byte	'EVR13OVMOD',0,1
	.word	516
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	516
	.byte	2,4,2,35,0,12
	.byte	'EVR13UVMOD',0,1
	.word	516
	.byte	2,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	516
	.byte	2,0,2,35,0,12
	.byte	'EVR33OVMOD',0,1
	.word	516
	.byte	2,6,2,35,1,12
	.byte	'reserved_10',0,1
	.word	516
	.byte	2,4,2,35,1,12
	.byte	'EVR33UVMOD',0,1
	.word	516
	.byte	2,2,2,35,1,12
	.byte	'reserved_14',0,1
	.word	516
	.byte	2,0,2,35,1,12
	.byte	'SWDOVMOD',0,1
	.word	516
	.byte	2,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	516
	.byte	2,4,2,35,2,12
	.byte	'SWDUVMOD',0,1
	.word	516
	.byte	2,2,2,35,2,12
	.byte	'reserved_22',0,2
	.word	533
	.byte	10,0,2,35,2,0,21
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,23,232,2,3
	.word	135244
	.byte	11
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,23,235,2,16,4,12
	.byte	'OSCTRIM',0,2
	.word	533
	.byte	10,6,2,35,0,12
	.byte	'OSCPTAT',0,1
	.word	516
	.byte	6,0,2,35,1,12
	.byte	'OSCANASEL',0,1
	.word	516
	.byte	4,4,2,35,2,12
	.byte	'HPBGTRIM',0,2
	.word	533
	.byte	7,5,2,35,2,12
	.byte	'HPBGCLKEN',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'OSC3V3',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	516
	.byte	2,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,23,245,2,3
	.word	135573
	.byte	11
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,23,248,2,16,4,12
	.byte	'EVR13OVVAL',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'EVR33OVVAL',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'SWDOVVAL',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVROVMON_Bits',0,23,255,2,3
	.word	135794
	.byte	11
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,23,130,3,16,4,12
	.byte	'RST13TRIM',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	319
	.byte	16,8,2,35,0,12
	.byte	'RST13OFF',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'BPRST13OFF',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'RST33OFF',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'BPRST33OFF',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'RSTSWDOFF',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'BPRSTSWDOFF',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,23,142,3,3
	.word	135957
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,23,145,3,16,4,12
	.byte	'SD5P',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'SD5I',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'SD5D',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,23,152,3,3
	.word	136229
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,23,155,3,16,4,12
	.byte	'SD33P',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'SD33I',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'SD33D',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,23,162,3,3
	.word	136382
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,23,165,3,16,4,12
	.byte	'CT5REG0',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'CT5REG1',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'CT5REG2',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,23,172,3,3
	.word	136538
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,23,175,3,16,4,12
	.byte	'CT5REG3',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'CT5REG4',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	533
	.byte	15,1,2,35,2,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,23,181,3,3
	.word	136700
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,23,184,3,16,4,12
	.byte	'CT33REG0',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'CT33REG1',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'CT33REG2',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,23,191,3,3
	.word	136843
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,23,194,3,16,4,12
	.byte	'CT33REG3',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'CT33REG4',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	533
	.byte	15,1,2,35,2,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,23,200,3,3
	.word	137008
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,23,203,3,16,4,12
	.byte	'SDFREQSPRD',0,2
	.word	533
	.byte	16,0,2,35,0,12
	.byte	'SDFREQ',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'SDSTEP',0,1
	.word	516
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	516
	.byte	2,2,2,35,3,12
	.byte	'SDSAMPLE',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,23,211,3,3
	.word	137153
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,23,214,3,16,4,12
	.byte	'DRVP',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'SDMINMAXDC',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'DRVN',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'SDLUT',0,1
	.word	516
	.byte	6,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,23,222,3,3
	.word	137334
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,23,225,3,16,4,12
	.byte	'SDPWMPRE',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'SDPID',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'SDVOKLVL',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,23,232,3,3
	.word	137508
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,23,235,3,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'SYNCDIV',0,1
	.word	516
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	319
	.byte	20,1,2,35,0,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,23,241,3,3
	.word	137668
	.byte	11
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,23,244,3,16,4,12
	.byte	'EVR13',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'OV13',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'EVR33',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'OV33',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'OVSWD',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'UV13',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'UV33',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'UVSWD',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'EXTPASS13',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'EXTPASS33',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'BGPROK',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	319
	.byte	21,0,2,35,0,0,21
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,23,130,4,3
	.word	137812
	.byte	11
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,23,133,4,16,4,12
	.byte	'EVR13TRIM',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'SDVOUTSEL',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	533
	.byte	15,1,2,35,2,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,23,139,4,3
	.word	138086
	.byte	11
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,23,142,4,16,4,12
	.byte	'EVR13UVVAL',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'EVR33UVVAL',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'SWDUVVAL',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,23,149,4,3
	.word	138225
	.byte	11
	.byte	'_Ifx_SCU_EXTCON_Bits',0,23,152,4,16,4,12
	.byte	'EN0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'SEL0',0,1
	.word	516
	.byte	4,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	533
	.byte	10,0,2,35,0,12
	.byte	'EN1',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'NSEL',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'SEL1',0,1
	.word	516
	.byte	4,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	516
	.byte	2,0,2,35,2,12
	.byte	'DIV1',0,1
	.word	516
	.byte	8,0,2,35,3,0,21
	.byte	'Ifx_SCU_EXTCON_Bits',0,23,163,4,3
	.word	138388
	.byte	11
	.byte	'_Ifx_SCU_FDR_Bits',0,23,166,4,16,4,12
	.byte	'STEP',0,2
	.word	533
	.byte	10,6,2,35,0,12
	.byte	'reserved_10',0,1
	.word	516
	.byte	4,2,2,35,1,12
	.byte	'DM',0,1
	.word	516
	.byte	2,0,2,35,1,12
	.byte	'RESULT',0,2
	.word	533
	.byte	10,6,2,35,2,12
	.byte	'reserved_26',0,1
	.word	516
	.byte	5,1,2,35,3,12
	.byte	'DISCLK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_FDR_Bits',0,23,174,4,3
	.word	138606
	.byte	11
	.byte	'_Ifx_SCU_FMR_Bits',0,23,177,4,16,4,12
	.byte	'FS0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'FS1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'FS2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'FS3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'FS4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'FS5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'FS6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'FS7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'FC0',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'FC1',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'FC2',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'FC3',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'FC4',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'FC5',0,1
	.word	516
	.byte	1,2,2,35,2,12
	.byte	'FC6',0,1
	.word	516
	.byte	1,1,2,35,2,12
	.byte	'FC7',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	8,0,2,35,3,0,21
	.byte	'Ifx_SCU_FMR_Bits',0,23,197,4,3
	.word	138769
	.byte	11
	.byte	'_Ifx_SCU_ID_Bits',0,23,200,4,16,4,12
	.byte	'MODREV',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'MODTYPE',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'MODNUMBER',0,2
	.word	533
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_SCU_ID_Bits',0,23,205,4,3
	.word	139105
	.byte	11
	.byte	'_Ifx_SCU_IGCR_Bits',0,23,208,4,16,4,12
	.byte	'IPEN00',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'IPEN01',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'IPEN02',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'IPEN03',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'IPEN04',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'IPEN05',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'IPEN06',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'IPEN07',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	5,3,2,35,1,12
	.byte	'GEEN0',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'IGP0',0,1
	.word	516
	.byte	2,0,2,35,1,12
	.byte	'IPEN10',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'IPEN11',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'IPEN12',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'IPEN13',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'IPEN14',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'IPEN15',0,1
	.word	516
	.byte	1,2,2,35,2,12
	.byte	'IPEN16',0,1
	.word	516
	.byte	1,1,2,35,2,12
	.byte	'IPEN17',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	5,3,2,35,3,12
	.byte	'GEEN1',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'IGP1',0,1
	.word	516
	.byte	2,0,2,35,3,0,21
	.byte	'Ifx_SCU_IGCR_Bits',0,23,232,4,3
	.word	139212
	.byte	11
	.byte	'_Ifx_SCU_IN_Bits',0,23,235,4,16,4,12
	.byte	'P0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	319
	.byte	30,0,2,35,0,0,21
	.byte	'Ifx_SCU_IN_Bits',0,23,240,4,3
	.word	139664
	.byte	11
	.byte	'_Ifx_SCU_IOCR_Bits',0,23,243,4,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	4,4,2,35,0,12
	.byte	'PC0',0,1
	.word	516
	.byte	4,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	4,4,2,35,1,12
	.byte	'PC1',0,1
	.word	516
	.byte	4,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	533
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_SCU_IOCR_Bits',0,23,250,4,3
	.word	139763
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,23,253,4,16,4,12
	.byte	'LBISTREQ',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'LBISTREQP',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'PATTERNS',0,2
	.word	533
	.byte	14,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	533
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,23,131,5,3
	.word	139913
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,23,134,5,16,4,12
	.byte	'SEED',0,4
	.word	319
	.byte	23,9,2,35,0,12
	.byte	'reserved_23',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'SPLITSH',0,1
	.word	516
	.byte	3,5,2,35,3,12
	.byte	'BODY',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'LBISTFREQU',0,1
	.word	516
	.byte	4,0,2,35,3,0,21
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,23,141,5,3
	.word	140062
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,23,144,5,16,4,12
	.byte	'SIGNATURE',0,4
	.word	319
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'LBISTDONE',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,23,149,5,3
	.word	140223
	.byte	11
	.byte	'_Ifx_SCU_LCLCON_Bits',0,23,152,5,16,4,12
	.byte	'reserved_0',0,2
	.word	533
	.byte	16,0,2,35,0,12
	.byte	'LS',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,2
	.word	533
	.byte	14,1,2,35,2,12
	.byte	'LSEN',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_LCLCON_Bits',0,23,158,5,3
	.word	140353
	.byte	11
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,23,161,5,16,4,12
	.byte	'LCLT0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'LCLT1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	319
	.byte	30,0,2,35,0,0,21
	.byte	'Ifx_SCU_LCLTEST_Bits',0,23,166,5,3
	.word	140485
	.byte	11
	.byte	'_Ifx_SCU_MANID_Bits',0,23,169,5,16,4,12
	.byte	'DEPT',0,1
	.word	516
	.byte	5,3,2,35,0,12
	.byte	'MANUF',0,2
	.word	533
	.byte	11,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	533
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_SCU_MANID_Bits',0,23,174,5,3
	.word	140600
	.byte	11
	.byte	'_Ifx_SCU_OMR_Bits',0,23,177,5,16,4,12
	.byte	'PS0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,2
	.word	533
	.byte	14,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,2
	.word	533
	.byte	14,0,2,35,2,0,21
	.byte	'Ifx_SCU_OMR_Bits',0,23,185,5,3
	.word	140711
	.byte	11
	.byte	'_Ifx_SCU_OSCCON_Bits',0,23,188,5,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PLLLV',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'OSCRES',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'GAINSEL',0,1
	.word	516
	.byte	2,3,2,35,0,12
	.byte	'MODE',0,1
	.word	516
	.byte	2,1,2,35,0,12
	.byte	'SHBY',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'PLLHV',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'X1D',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'X1DEN',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	516
	.byte	4,0,2,35,1,12
	.byte	'OSCVAL',0,1
	.word	516
	.byte	5,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	516
	.byte	2,1,2,35,2,12
	.byte	'APREN',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'CAP0EN',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'CAP1EN',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'CAP2EN',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'CAP3EN',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	516
	.byte	4,0,2,35,3,0,21
	.byte	'Ifx_SCU_OSCCON_Bits',0,23,209,5,3
	.word	140869
	.byte	11
	.byte	'_Ifx_SCU_OUT_Bits',0,23,212,5,16,4,12
	.byte	'P0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	319
	.byte	30,0,2,35,0,0,21
	.byte	'Ifx_SCU_OUT_Bits',0,23,217,5,3
	.word	141281
	.byte	11
	.byte	'_Ifx_SCU_OVCCON_Bits',0,23,220,5,16,4,12
	.byte	'CSEL0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'CSEL1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'CSEL2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,2
	.word	533
	.byte	13,0,2,35,0,12
	.byte	'OVSTRT',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'OVSTP',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'DCINVAL',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	516
	.byte	5,0,2,35,2,12
	.byte	'OVCONF',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'POVCONF',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	516
	.byte	6,0,2,35,3,0,21
	.byte	'Ifx_SCU_OVCCON_Bits',0,23,233,5,3
	.word	141382
	.byte	11
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,23,236,5,16,4,12
	.byte	'OVEN0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'OVEN1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'OVEN2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,4
	.word	319
	.byte	29,0,2,35,0,0,21
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,23,242,5,3
	.word	141649
	.byte	11
	.byte	'_Ifx_SCU_PDISC_Bits',0,23,245,5,16,4,12
	.byte	'PDIS0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PDIS1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	319
	.byte	30,0,2,35,0,0,21
	.byte	'Ifx_SCU_PDISC_Bits',0,23,250,5,3
	.word	141785
	.byte	11
	.byte	'_Ifx_SCU_PDR_Bits',0,23,253,5,16,4,12
	.byte	'PD0',0,1
	.word	516
	.byte	3,5,2,35,0,12
	.byte	'PL0',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'PD1',0,1
	.word	516
	.byte	3,1,2,35,0,12
	.byte	'PL1',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	319
	.byte	24,0,2,35,0,0,21
	.byte	'Ifx_SCU_PDR_Bits',0,23,132,6,3
	.word	141896
	.byte	11
	.byte	'_Ifx_SCU_PDRR_Bits',0,23,135,6,16,4,12
	.byte	'PDR0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PDR1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'PDR2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'PDR3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'PDR4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'PDR5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'PDR6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PDR7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	319
	.byte	24,0,2,35,0,0,21
	.byte	'Ifx_SCU_PDRR_Bits',0,23,146,6,3
	.word	142029
	.byte	11
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,23,149,6,16,4,12
	.byte	'VCOBYP',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'VCOPWD',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'MODEN',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'SETFINDIS',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'CLRFINDIS',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'OSCDISCDIS',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,2
	.word	533
	.byte	2,7,2,35,0,12
	.byte	'NDIV',0,1
	.word	516
	.byte	7,0,2,35,1,12
	.byte	'PLLPWD',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'RESLD',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	516
	.byte	5,0,2,35,2,12
	.byte	'PDIV',0,1
	.word	516
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	516
	.byte	4,0,2,35,3,0,21
	.byte	'Ifx_SCU_PLLCON0_Bits',0,23,166,6,3
	.word	142232
	.byte	11
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,23,169,6,16,4,12
	.byte	'K2DIV',0,1
	.word	516
	.byte	7,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'K3DIV',0,1
	.word	516
	.byte	7,1,2,35,1,12
	.byte	'reserved_15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'K1DIV',0,1
	.word	516
	.byte	7,1,2,35,2,12
	.byte	'reserved_23',0,2
	.word	533
	.byte	9,0,2,35,2,0,21
	.byte	'Ifx_SCU_PLLCON1_Bits',0,23,177,6,3
	.word	142588
	.byte	11
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,23,180,6,16,4,12
	.byte	'MODCFG',0,2
	.word	533
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	533
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_SCU_PLLCON2_Bits',0,23,184,6,3
	.word	142766
	.byte	11
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,23,187,6,16,4,12
	.byte	'VCOBYP',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'VCOPWD',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	516
	.byte	2,4,2,35,0,12
	.byte	'SETFINDIS',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'CLRFINDIS',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'OSCDISCDIS',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,2
	.word	533
	.byte	2,7,2,35,0,12
	.byte	'NDIV',0,1
	.word	516
	.byte	5,2,2,35,1,12
	.byte	'reserved_14',0,1
	.word	516
	.byte	2,0,2,35,1,12
	.byte	'PLLPWD',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'RESLD',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	516
	.byte	5,0,2,35,2,12
	.byte	'PDIV',0,1
	.word	516
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	516
	.byte	4,0,2,35,3,0,21
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,23,204,6,3
	.word	142866
	.byte	11
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,23,207,6,16,4,12
	.byte	'K2DIV',0,1
	.word	516
	.byte	7,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'K3DIV',0,1
	.word	516
	.byte	4,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	516
	.byte	4,0,2,35,1,12
	.byte	'K1DIV',0,1
	.word	516
	.byte	7,1,2,35,2,12
	.byte	'reserved_23',0,2
	.word	533
	.byte	9,0,2,35,2,0,21
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,23,215,6,3
	.word	143236
	.byte	11
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,23,218,6,16,4,12
	.byte	'VCOBYST',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PWDSTAT',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'VCOLOCK',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'FINDIS',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'K1RDY',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'K2RDY',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	319
	.byte	26,0,2,35,0,0,21
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,23,227,6,3
	.word	143422
	.byte	11
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,23,230,6,16,4,12
	.byte	'VCOBYST',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'VCOLOCK',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'FINDIS',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'K1RDY',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'K2RDY',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'MODRUN',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	319
	.byte	24,0,2,35,0,0,21
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,23,241,6,3
	.word	143620
	.byte	11
	.byte	'_Ifx_SCU_PMCSR_Bits',0,23,244,6,16,4,12
	.byte	'REQSLP',0,1
	.word	516
	.byte	2,6,2,35,0,12
	.byte	'SMUSLP',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	516
	.byte	5,0,2,35,0,12
	.byte	'PMST',0,1
	.word	516
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	319
	.byte	21,0,2,35,0,0,21
	.byte	'Ifx_SCU_PMCSR_Bits',0,23,251,6,3
	.word	143853
	.byte	11
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,23,254,6,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'ESR1WKEN',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'PINAWKEN',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'PINBWKEN',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'ESR0DFEN',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'ESR0EDCON',0,1
	.word	516
	.byte	2,1,2,35,0,12
	.byte	'ESR1DFEN',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'ESR1EDCON',0,1
	.word	516
	.byte	2,6,2,35,1,12
	.byte	'PINADFEN',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'PINAEDCON',0,1
	.word	516
	.byte	2,3,2,35,1,12
	.byte	'PINBDFEN',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'PINBEDCON',0,1
	.word	516
	.byte	2,0,2,35,1,12
	.byte	'SCREN',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'STBYRAMSEL',0,1
	.word	516
	.byte	2,5,2,35,2,12
	.byte	'SCRCLKSEL',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'SCRWKEN',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'TRISTEN',0,1
	.word	516
	.byte	1,2,2,35,2,12
	.byte	'TRISTREQ',0,1
	.word	516
	.byte	1,1,2,35,2,12
	.byte	'PORSTDF',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'DCDCSYNC',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	516
	.byte	3,3,2,35,3,12
	.byte	'ESR0TRIST',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,23,153,7,3
	.word	144005
	.byte	11
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,23,156,7,16,4,12
	.byte	'SCRSTEN',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'SCRSTREQ',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	516
	.byte	6,0,2,35,0,12
	.byte	'CPUIDLSEL',0,1
	.word	516
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'IRADIS',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	516
	.byte	3,0,2,35,1,12
	.byte	'SCRCFG',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'CPUSEL',0,1
	.word	516
	.byte	3,5,2,35,3,12
	.byte	'STBYEVEN',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'STBYEV',0,1
	.word	516
	.byte	3,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,23,170,7,3
	.word	144572
	.byte	11
	.byte	'_Ifx_SCU_PMSWCR2_Bits',0,23,173,7,16,4,12
	.byte	'SCRINT',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'BUSY',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'SCRECC',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'SCRWDT',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'SCRRST',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	516
	.byte	4,0,2,35,1,12
	.byte	'TCINT',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'TCINTREQ',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'SMURST',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'RST',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'reserved_27',0,1
	.word	516
	.byte	4,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_SCU_PMSWCR2_Bits',0,23,187,7,3
	.word	144866
	.byte	11
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,23,190,7,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	2,6,2,35,0,12
	.byte	'ESR1WKP',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'ESR1OVRUN',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'PINAWKP',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'PINAOVRUN',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'PINBWKP',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PINBOVRUN',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'PORSTDF',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'HWCFGEVR',0,1
	.word	516
	.byte	3,3,2,35,1,12
	.byte	'STBYRAM',0,1
	.word	516
	.byte	2,1,2,35,1,12
	.byte	'TRIST',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'SCRST',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'SCRWKP',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'SCR',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'SCRWKEN',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'ESR1WKEN',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'PINAWKEN',0,1
	.word	516
	.byte	1,2,2,35,2,12
	.byte	'PINBWKEN',0,1
	.word	516
	.byte	1,1,2,35,2,12
	.byte	'reserved_23',0,2
	.word	533
	.byte	4,5,2,35,2,12
	.byte	'ESR0TRIST',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	516
	.byte	4,0,2,35,3,0,21
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,23,214,7,3
	.word	145144
	.byte	11
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,23,217,7,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	2,6,2,35,0,12
	.byte	'ESR1WKPCLR',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'ESR1OVRUNCLR',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'PINAWKPCLR',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'PINAOVRUNCLR',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'PINBWKPCLR',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PINBOVRUNCLR',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'SCRSTCLR',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'SCRWKPCLR',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,2
	.word	533
	.byte	14,0,2,35,2,0,21
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,23,230,7,3
	.word	145640
	.byte	11
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,23,233,7,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'CLRC',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,2
	.word	533
	.byte	10,4,2,35,0,12
	.byte	'CSS0',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'CSS1',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'CSS2',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'reserved_15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'USRINFO',0,2
	.word	533
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_SCU_RSTCON2_Bits',0,23,243,7,3
	.word	145953
	.byte	11
	.byte	'_Ifx_SCU_RSTCON_Bits',0,23,246,7,16,4,12
	.byte	'ESR0',0,1
	.word	516
	.byte	2,6,2,35,0,12
	.byte	'ESR1',0,1
	.word	516
	.byte	2,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	516
	.byte	2,2,2,35,0,12
	.byte	'SMU',0,1
	.word	516
	.byte	2,0,2,35,0,12
	.byte	'SW',0,1
	.word	516
	.byte	2,6,2,35,1,12
	.byte	'STM0',0,1
	.word	516
	.byte	2,4,2,35,1,12
	.byte	'STM1',0,1
	.word	516
	.byte	2,2,2,35,1,12
	.byte	'STM2',0,1
	.word	516
	.byte	2,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	533
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_SCU_RSTCON_Bits',0,23,129,8,3
	.word	146162
	.byte	11
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,23,132,8,16,4,12
	.byte	'ESR0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'ESR1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'SMU',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'SW',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'STM0',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'STM1',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'STM2',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'PORST',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'CB0',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'CB1',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'CB3',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	516
	.byte	2,1,2,35,2,12
	.byte	'EVR13',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'EVR33',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'SWD',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	516
	.byte	2,4,2,35,3,12
	.byte	'STBYR',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	516
	.byte	3,0,2,35,3,0,21
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,23,155,8,3
	.word	146373
	.byte	11
	.byte	'_Ifx_SCU_SAFECON_Bits',0,23,158,8,16,4,12
	.byte	'HBT',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,4
	.word	319
	.byte	31,0,2,35,0,0,21
	.byte	'Ifx_SCU_SAFECON_Bits',0,23,162,8,3
	.word	146805
	.byte	11
	.byte	'_Ifx_SCU_STSTAT_Bits',0,23,165,8,16,4,12
	.byte	'HWCFG',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'FTM',0,1
	.word	516
	.byte	7,1,2,35,1,12
	.byte	'MODE',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'FCBAE',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'LUDIS',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'TRSTL',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'SPDEN',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	516
	.byte	3,0,2,35,2,12
	.byte	'RAMINT',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'reserved_25',0,1
	.word	516
	.byte	7,0,2,35,3,0,21
	.byte	'Ifx_SCU_STSTAT_Bits',0,23,178,8,3
	.word	146901
	.byte	11
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,23,181,8,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'SWRSTREQ',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	319
	.byte	30,0,2,35,0,0,21
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,23,186,8,3
	.word	147161
	.byte	11
	.byte	'_Ifx_SCU_SYSCON_Bits',0,23,189,8,16,4,12
	.byte	'CCTRIG0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'RAMINTM',0,1
	.word	516
	.byte	2,4,2,35,0,12
	.byte	'SETLUDIS',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	516
	.byte	3,0,2,35,0,12
	.byte	'DATM',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,4
	.word	319
	.byte	23,0,2,35,0,0,21
	.byte	'Ifx_SCU_SYSCON_Bits',0,23,198,8,3
	.word	147286
	.byte	11
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,23,201,8,16,4,12
	.byte	'ESR0T',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	319
	.byte	28,0,2,35,0,0,21
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,23,208,8,3
	.word	147483
	.byte	11
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,23,211,8,16,4,12
	.byte	'ESR0T',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	319
	.byte	28,0,2,35,0,0,21
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,23,218,8,3
	.word	147636
	.byte	11
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,23,221,8,16,4,12
	.byte	'ESR0T',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	319
	.byte	28,0,2,35,0,0,21
	.byte	'Ifx_SCU_TRAPSET_Bits',0,23,228,8,3
	.word	147789
	.byte	11
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,23,231,8,16,4,12
	.byte	'ESR0T',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	319
	.byte	28,0,2,35,0,0,21
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,23,238,8,3
	.word	147942
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,23,241,8,16,4,12
	.byte	'ENDINIT',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'LCK',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'PW',0,4
	.word	9049
	.byte	14,16,2,35,0,12
	.byte	'REL',0,4
	.word	9049
	.byte	16,0,2,35,0,0,21
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,23,247,8,3
	.word	148097
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,23,250,8,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	2,6,2,35,0,12
	.byte	'IR0',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'DR',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'IR1',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'UR',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PAR',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'TCR',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'TCTR',0,1
	.word	516
	.byte	7,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	533
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,23,134,9,3
	.word	148227
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,23,137,9,16,4,12
	.byte	'AE',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'OE',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'IS0',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'DS',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'TO',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'IS1',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'US',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PAS',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'TCS',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'TCT',0,1
	.word	516
	.byte	7,0,2,35,1,12
	.byte	'TIM',0,2
	.word	533
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,23,150,9,3
	.word	148465
	.byte	11
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,23,153,9,16,4,12
	.byte	'ENDINIT',0,4
	.word	9049
	.byte	1,31,2,35,0,12
	.byte	'LCK',0,4
	.word	9049
	.byte	1,30,2,35,0,12
	.byte	'PW',0,4
	.word	9049
	.byte	14,16,2,35,0,12
	.byte	'REL',0,4
	.word	9049
	.byte	16,0,2,35,0,0,21
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,23,159,9,3
	.word	148688
	.byte	11
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,23,162,9,16,4,12
	.byte	'CLRIRF',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'IR0',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'DR',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'IR1',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'UR',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PAR',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'TCR',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'TCTR',0,1
	.word	516
	.byte	7,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	533
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,23,175,9,3
	.word	148814
	.byte	11
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,23,178,9,16,4,12
	.byte	'AE',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'OE',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'IS0',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'DS',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'TO',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'IS1',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'US',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PAS',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'TCS',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'TCT',0,1
	.word	516
	.byte	7,0,2,35,1,12
	.byte	'TIM',0,2
	.word	533
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,23,191,9,3
	.word	149066
	.byte	13,23,199,9,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	130607
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_ACCEN0',0,23,204,9,3
	.word	149285
	.byte	13,23,207,9,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	131164
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_ACCEN1',0,23,212,9,3
	.word	149349
	.byte	13,23,215,9,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	131241
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_ARSTDIS',0,23,220,9,3
	.word	149413
	.byte	13,23,223,9,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	131377
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_CCUCON0',0,23,228,9,3
	.word	149478
	.byte	13,23,231,9,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	131657
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_CCUCON1',0,23,236,9,3
	.word	149543
	.byte	13,23,239,9,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	131895
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_CCUCON2',0,23,244,9,3
	.word	149608
	.byte	13,23,247,9,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	132023
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_CCUCON3',0,23,252,9,3
	.word	149673
	.byte	13,23,255,9,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	132266
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_CCUCON4',0,23,132,10,3
	.word	149738
	.byte	13,23,135,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	132501
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_CCUCON5',0,23,140,10,3
	.word	149803
	.byte	13,23,143,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	132629
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_CCUCON6',0,23,148,10,3
	.word	149868
	.byte	13,23,151,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	132729
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_CCUCON7',0,23,156,10,3
	.word	149933
	.byte	13,23,159,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	132829
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_CHIPID',0,23,164,10,3
	.word	149998
	.byte	13,23,167,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	133037
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_DTSCON',0,23,172,10,3
	.word	150062
	.byte	13,23,175,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	133202
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_DTSLIM',0,23,180,10,3
	.word	150126
	.byte	13,23,183,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	133385
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_DTSSTAT',0,23,188,10,3
	.word	150190
	.byte	13,23,191,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	133539
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EICR',0,23,196,10,3
	.word	150255
	.byte	13,23,199,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	133903
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EIFR',0,23,204,10,3
	.word	150317
	.byte	13,23,207,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	134114
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EMSR',0,23,212,10,3
	.word	150379
	.byte	13,23,215,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	134366
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_ESRCFG',0,23,220,10,3
	.word	150441
	.byte	13,23,223,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	134484
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_ESROCFG',0,23,228,10,3
	.word	150505
	.byte	13,23,231,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	134595
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVR13CON',0,23,236,10,3
	.word	150570
	.byte	13,23,239,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	134758
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVR33CON',0,23,244,10,3
	.word	150636
	.byte	13,23,247,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	134921
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVRADCSTAT',0,23,252,10,3
	.word	150702
	.byte	13,23,255,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	135079
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVRDVSTAT',0,23,132,11,3
	.word	150770
	.byte	13,23,135,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	135244
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVRMONCTRL',0,23,140,11,3
	.word	150837
	.byte	13,23,143,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	135573
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVROSCCTRL',0,23,148,11,3
	.word	150905
	.byte	13,23,151,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	135794
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVROVMON',0,23,156,11,3
	.word	150973
	.byte	13,23,159,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	135957
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVRRSTCON',0,23,164,11,3
	.word	151039
	.byte	13,23,167,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	136229
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,23,172,11,3
	.word	151106
	.byte	13,23,175,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	136382
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,23,180,11,3
	.word	151175
	.byte	13,23,183,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	136538
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,23,188,11,3
	.word	151244
	.byte	13,23,191,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	136700
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,23,196,11,3
	.word	151313
	.byte	13,23,199,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	136843
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,23,204,11,3
	.word	151382
	.byte	13,23,207,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	137008
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,23,212,11,3
	.word	151451
	.byte	13,23,215,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	137153
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVRSDCTRL1',0,23,220,11,3
	.word	151520
	.byte	13,23,223,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	137334
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVRSDCTRL2',0,23,228,11,3
	.word	151588
	.byte	13,23,231,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	137508
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVRSDCTRL3',0,23,236,11,3
	.word	151656
	.byte	13,23,239,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	137668
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVRSDCTRL4',0,23,244,11,3
	.word	151724
	.byte	13,23,247,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	137812
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVRSTAT',0,23,252,11,3
	.word	151792
	.byte	13,23,255,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	138086
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVRTRIM',0,23,132,12,3
	.word	151857
	.byte	13,23,135,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	138225
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EVRUVMON',0,23,140,12,3
	.word	151922
	.byte	13,23,143,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	138388
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_EXTCON',0,23,148,12,3
	.word	151988
	.byte	13,23,151,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	138606
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_FDR',0,23,156,12,3
	.word	152052
	.byte	13,23,159,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	138769
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_FMR',0,23,164,12,3
	.word	152113
	.byte	13,23,167,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	139105
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_ID',0,23,172,12,3
	.word	152174
	.byte	13,23,175,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	139212
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_IGCR',0,23,180,12,3
	.word	152234
	.byte	13,23,183,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	139664
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_IN',0,23,188,12,3
	.word	152296
	.byte	13,23,191,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	139763
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_IOCR',0,23,196,12,3
	.word	152356
	.byte	13,23,199,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	139913
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_LBISTCTRL0',0,23,204,12,3
	.word	152418
	.byte	13,23,207,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	140062
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_LBISTCTRL1',0,23,212,12,3
	.word	152486
	.byte	13,23,215,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	140223
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_LBISTCTRL2',0,23,220,12,3
	.word	152554
	.byte	13,23,223,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	140353
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_LCLCON',0,23,228,12,3
	.word	152622
	.byte	13,23,231,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	140485
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_LCLTEST',0,23,236,12,3
	.word	152686
	.byte	13,23,239,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	140600
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_MANID',0,23,244,12,3
	.word	152751
	.byte	13,23,247,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	140711
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_OMR',0,23,252,12,3
	.word	152814
	.byte	13,23,255,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	140869
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_OSCCON',0,23,132,13,3
	.word	152875
	.byte	13,23,135,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	141281
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_OUT',0,23,140,13,3
	.word	152939
	.byte	13,23,143,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	141382
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_OVCCON',0,23,148,13,3
	.word	153000
	.byte	13,23,151,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	141649
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_OVCENABLE',0,23,156,13,3
	.word	153064
	.byte	13,23,159,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	141785
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_PDISC',0,23,164,13,3
	.word	153131
	.byte	13,23,167,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	141896
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_PDR',0,23,172,13,3
	.word	153194
	.byte	13,23,175,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	142029
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_PDRR',0,23,180,13,3
	.word	153255
	.byte	13,23,183,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	142232
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_PLLCON0',0,23,188,13,3
	.word	153317
	.byte	13,23,191,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	142588
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_PLLCON1',0,23,196,13,3
	.word	153382
	.byte	13,23,199,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	142766
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_PLLCON2',0,23,204,13,3
	.word	153447
	.byte	13,23,207,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	142866
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_PLLERAYCON0',0,23,212,13,3
	.word	153512
	.byte	13,23,215,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	143236
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_PLLERAYCON1',0,23,220,13,3
	.word	153581
	.byte	13,23,223,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	143422
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_PLLERAYSTAT',0,23,228,13,3
	.word	153650
	.byte	13,23,231,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	143620
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_PLLSTAT',0,23,236,13,3
	.word	153719
	.byte	13,23,239,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	143853
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_PMCSR',0,23,244,13,3
	.word	153784
	.byte	13,23,247,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	144005
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_PMSWCR0',0,23,252,13,3
	.word	153847
	.byte	13,23,255,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	144572
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_PMSWCR1',0,23,132,14,3
	.word	153912
	.byte	13,23,135,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	144866
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_PMSWCR2',0,23,140,14,3
	.word	153977
	.byte	13,23,143,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	145144
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_PMSWSTAT',0,23,148,14,3
	.word	154042
	.byte	13,23,151,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	145640
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_PMSWSTATCLR',0,23,156,14,3
	.word	154108
	.byte	13,23,159,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	146162
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_RSTCON',0,23,164,14,3
	.word	154177
	.byte	13,23,167,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	145953
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_RSTCON2',0,23,172,14,3
	.word	154241
	.byte	13,23,175,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	146373
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_RSTSTAT',0,23,180,14,3
	.word	154306
	.byte	13,23,183,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	146805
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_SAFECON',0,23,188,14,3
	.word	154371
	.byte	13,23,191,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	146901
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_STSTAT',0,23,196,14,3
	.word	154436
	.byte	13,23,199,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	147161
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_SWRSTCON',0,23,204,14,3
	.word	154500
	.byte	13,23,207,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	147286
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_SYSCON',0,23,212,14,3
	.word	154566
	.byte	13,23,215,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	147483
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_TRAPCLR',0,23,220,14,3
	.word	154630
	.byte	13,23,223,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	147636
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_TRAPDIS',0,23,228,14,3
	.word	154695
	.byte	13,23,231,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	147789
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_TRAPSET',0,23,236,14,3
	.word	154760
	.byte	13,23,239,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	147942
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_TRAPSTAT',0,23,244,14,3
	.word	154825
	.byte	13,23,247,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	148097
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_WDTCPU_CON0',0,23,252,14,3
	.word	154891
	.byte	13,23,255,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	148227
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_WDTCPU_CON1',0,23,132,15,3
	.word	154960
	.byte	13,23,135,15,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	148465
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_WDTCPU_SR',0,23,140,15,3
	.word	155029
	.byte	13,23,143,15,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	148688
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_WDTS_CON0',0,23,148,15,3
	.word	155096
	.byte	13,23,151,15,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	148814
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_WDTS_CON1',0,23,156,15,3
	.word	155163
	.byte	13,23,159,15,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	149066
	.byte	4,2,35,0,0,21
	.byte	'Ifx_SCU_WDTS_SR',0,23,164,15,3
	.word	155230
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU',0,23,175,15,25,12,14
	.byte	'CON0',0
	.word	154891
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	154960
	.byte	4,2,35,4,14
	.byte	'SR',0
	.word	155029
	.byte	4,2,35,8,0,10
	.word	155295
	.byte	21
	.byte	'Ifx_SCU_WDTCPU',0,23,180,15,3
	.word	155358
	.byte	11
	.byte	'_Ifx_SCU_WDTS',0,23,183,15,25,12,14
	.byte	'CON0',0
	.word	155096
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	155163
	.byte	4,2,35,4,14
	.byte	'SR',0
	.word	155230
	.byte	4,2,35,8,0,10
	.word	155387
	.byte	21
	.byte	'Ifx_SCU_WDTS',0,23,188,15,3
	.word	155448
	.byte	17,3,83,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,21
	.byte	'IfxPort_InputMode',0,3,89,3
	.word	155475
	.byte	21
	.byte	'IfxPort_OutputIdx',0,3,130,1,3
	.word	102963
	.byte	21
	.byte	'IfxPort_OutputMode',0,3,138,1,3
	.word	103287
	.byte	21
	.byte	'IfxPort_PadDriver',0,3,158,1,3
	.word	103357
	.byte	21
	.byte	'IfxPort_State',0,3,178,1,3
	.word	8313
	.byte	21
	.byte	'IfxPort_Pin',0,3,194,1,3
	.word	102924
	.byte	10
	.word	19996
	.byte	21
	.byte	'Ifx_GTM_TOM_TGC',0,10,202,1,40
	.word	155752
	.byte	17,10,212,1,9,1,18
	.byte	'IfxGtm_Atom_0',0,0,18
	.byte	'IfxGtm_Atom_1',0,1,18
	.byte	'IfxGtm_Atom_2',0,2,18
	.byte	'IfxGtm_Atom_3',0,3,0,21
	.byte	'IfxGtm_Atom',0,10,218,1,3
	.word	155782
	.byte	21
	.byte	'IfxGtm_Atom_Ch',0,10,233,1,3
	.word	15524
	.byte	17,10,255,1,9,1,18
	.byte	'IfxGtm_Tim_0',0,0,18
	.byte	'IfxGtm_Tim_1',0,1,18
	.byte	'IfxGtm_Tim_2',0,2,0,21
	.byte	'IfxGtm_Tim',0,10,132,2,3
	.word	155898
	.byte	17,10,136,2,9,1,18
	.byte	'IfxGtm_Tim_Ch_0',0,0,18
	.byte	'IfxGtm_Tim_Ch_1',0,1,18
	.byte	'IfxGtm_Tim_Ch_2',0,2,18
	.byte	'IfxGtm_Tim_Ch_3',0,3,18
	.byte	'IfxGtm_Tim_Ch_4',0,4,18
	.byte	'IfxGtm_Tim_Ch_5',0,5,18
	.byte	'IfxGtm_Tim_Ch_6',0,6,18
	.byte	'IfxGtm_Tim_Ch_7',0,7,0,21
	.byte	'IfxGtm_Tim_Ch',0,10,146,2,3
	.word	155970
	.byte	21
	.byte	'IfxGtm_Tom',0,10,154,2,3
	.word	100470
	.byte	21
	.byte	'IfxGtm_Tom_Ch',0,10,177,2,3
	.word	25483
	.byte	21
	.byte	'IfxGtm_IrqMode',0,14,73,3
	.word	101451
	.byte	17,14,77,9,1,18
	.byte	'IfxGtm_SuspendMode_none',0,0,18
	.byte	'IfxGtm_SuspendMode_hard',0,1,18
	.byte	'IfxGtm_SuspendMode_soft',0,2,0,21
	.byte	'IfxGtm_SuspendMode',0,14,82,3
	.word	156210
	.byte	17,24,69,9,1,18
	.byte	'IfxGtm_Tbu_Ts_0',0,0,18
	.byte	'IfxGtm_Tbu_Ts_1',0,1,18
	.byte	'IfxGtm_Tbu_Ts_2',0,2,0,21
	.byte	'IfxGtm_Tbu_Ts',0,24,74,3
	.word	156321
	.byte	21
	.byte	'IfxSrc_Tos',0,7,74,3
	.word	8913
	.byte	21
	.byte	'Ifx_SRC_SRCR_Bits',0,6,62,3
	.word	8494
	.byte	21
	.byte	'Ifx_SRC_SRCR',0,6,75,3
	.word	8784
	.byte	11
	.byte	'_Ifx_SRC_AGBT',0,6,86,25,4,14
	.byte	'SR',0
	.word	8784
	.byte	4,2,35,0,0,10
	.word	156469
	.byte	21
	.byte	'Ifx_SRC_AGBT',0,6,89,3
	.word	156501
	.byte	11
	.byte	'_Ifx_SRC_ASCLIN',0,6,92,25,12,14
	.byte	'TX',0
	.word	8784
	.byte	4,2,35,0,14
	.byte	'RX',0
	.word	8784
	.byte	4,2,35,4,14
	.byte	'ERR',0
	.word	8784
	.byte	4,2,35,8,0,10
	.word	156527
	.byte	21
	.byte	'Ifx_SRC_ASCLIN',0,6,97,3
	.word	156586
	.byte	11
	.byte	'_Ifx_SRC_BCUSPB',0,6,100,25,4,14
	.byte	'SBSRC',0
	.word	8784
	.byte	4,2,35,0,0,10
	.word	156614
	.byte	21
	.byte	'Ifx_SRC_BCUSPB',0,6,103,3
	.word	156651
	.byte	15,64
	.word	8784
	.byte	16,15,0,11
	.byte	'_Ifx_SRC_CAN',0,6,106,25,64,14
	.byte	'INT',0
	.word	156679
	.byte	64,2,35,0,0,10
	.word	156688
	.byte	21
	.byte	'Ifx_SRC_CAN',0,6,109,3
	.word	156720
	.byte	11
	.byte	'_Ifx_SRC_CCU6',0,6,112,25,16,14
	.byte	'SR0',0
	.word	8784
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	8784
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	8784
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	8784
	.byte	4,2,35,12,0,10
	.word	156745
	.byte	21
	.byte	'Ifx_SRC_CCU6',0,6,118,3
	.word	156817
	.byte	15,8
	.word	8784
	.byte	16,1,0,11
	.byte	'_Ifx_SRC_CERBERUS',0,6,121,25,8,14
	.byte	'SR',0
	.word	156843
	.byte	8,2,35,0,0,10
	.word	156852
	.byte	21
	.byte	'Ifx_SRC_CERBERUS',0,6,124,3
	.word	156888
	.byte	11
	.byte	'_Ifx_SRC_CIF',0,6,127,25,16,14
	.byte	'MI',0
	.word	8784
	.byte	4,2,35,0,14
	.byte	'MIEP',0
	.word	8784
	.byte	4,2,35,4,14
	.byte	'ISP',0
	.word	8784
	.byte	4,2,35,8,14
	.byte	'MJPEG',0
	.word	8784
	.byte	4,2,35,12,0,10
	.word	156918
	.byte	21
	.byte	'Ifx_SRC_CIF',0,6,133,1,3
	.word	156991
	.byte	11
	.byte	'_Ifx_SRC_CPU',0,6,136,1,25,4,14
	.byte	'SBSRC',0
	.word	8784
	.byte	4,2,35,0,0,10
	.word	157017
	.byte	21
	.byte	'Ifx_SRC_CPU',0,6,139,1,3
	.word	157052
	.byte	15,192,1
	.word	8784
	.byte	16,47,0,11
	.byte	'_Ifx_SRC_DMA',0,6,142,1,25,208,1,14
	.byte	'ERR',0
	.word	8784
	.byte	4,2,35,0,14
	.byte	'reserved_4',0
	.word	3720
	.byte	12,2,35,4,14
	.byte	'CH',0
	.word	157078
	.byte	192,1,2,35,16,0,10
	.word	157088
	.byte	21
	.byte	'Ifx_SRC_DMA',0,6,147,1,3
	.word	157155
	.byte	11
	.byte	'_Ifx_SRC_DSADC',0,6,150,1,25,8,14
	.byte	'SRM',0
	.word	8784
	.byte	4,2,35,0,14
	.byte	'SRA',0
	.word	8784
	.byte	4,2,35,4,0,10
	.word	157181
	.byte	21
	.byte	'Ifx_SRC_DSADC',0,6,154,1,3
	.word	157229
	.byte	11
	.byte	'_Ifx_SRC_EMEM',0,6,157,1,25,4,14
	.byte	'SR',0
	.word	8784
	.byte	4,2,35,0,0,10
	.word	157257
	.byte	21
	.byte	'Ifx_SRC_EMEM',0,6,160,1,3
	.word	157290
	.byte	11
	.byte	'_Ifx_SRC_ERAY',0,6,163,1,25,80,14
	.byte	'INT',0
	.word	156843
	.byte	8,2,35,0,14
	.byte	'TINT',0
	.word	156843
	.byte	8,2,35,8,14
	.byte	'NDAT',0
	.word	156843
	.byte	8,2,35,16,14
	.byte	'MBSC',0
	.word	156843
	.byte	8,2,35,24,14
	.byte	'OBUSY',0
	.word	8784
	.byte	4,2,35,32,14
	.byte	'IBUSY',0
	.word	8784
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	89074
	.byte	40,2,35,40,0,10
	.word	157317
	.byte	21
	.byte	'Ifx_SRC_ERAY',0,6,172,1,3
	.word	157444
	.byte	11
	.byte	'_Ifx_SRC_ETH',0,6,175,1,25,4,14
	.byte	'SR',0
	.word	8784
	.byte	4,2,35,0,0,10
	.word	157471
	.byte	21
	.byte	'Ifx_SRC_ETH',0,6,178,1,3
	.word	157503
	.byte	11
	.byte	'_Ifx_SRC_FCE',0,6,181,1,25,4,14
	.byte	'SR',0
	.word	8784
	.byte	4,2,35,0,0,10
	.word	157529
	.byte	21
	.byte	'Ifx_SRC_FCE',0,6,184,1,3
	.word	157561
	.byte	11
	.byte	'_Ifx_SRC_FFT',0,6,187,1,25,12,14
	.byte	'DONE',0
	.word	8784
	.byte	4,2,35,0,14
	.byte	'ERR',0
	.word	8784
	.byte	4,2,35,4,14
	.byte	'RFS',0
	.word	8784
	.byte	4,2,35,8,0,10
	.word	157587
	.byte	21
	.byte	'Ifx_SRC_FFT',0,6,192,1,3
	.word	157647
	.byte	11
	.byte	'_Ifx_SRC_GPSR',0,6,195,1,25,32,14
	.byte	'SR0',0
	.word	8784
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	8784
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	8784
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	8784
	.byte	4,2,35,12,14
	.byte	'reserved_10',0
	.word	12233
	.byte	16,2,35,16,0,10
	.word	157673
	.byte	21
	.byte	'Ifx_SRC_GPSR',0,6,202,1,3
	.word	157767
	.byte	11
	.byte	'_Ifx_SRC_GPT12',0,6,205,1,25,48,14
	.byte	'CIRQ',0
	.word	8784
	.byte	4,2,35,0,14
	.byte	'T2',0
	.word	8784
	.byte	4,2,35,4,14
	.byte	'T3',0
	.word	8784
	.byte	4,2,35,8,14
	.byte	'T4',0
	.word	8784
	.byte	4,2,35,12,14
	.byte	'T5',0
	.word	8784
	.byte	4,2,35,16,14
	.byte	'T6',0
	.word	8784
	.byte	4,2,35,20,14
	.byte	'reserved_18',0
	.word	2751
	.byte	24,2,35,24,0,10
	.word	157794
	.byte	21
	.byte	'Ifx_SRC_GPT12',0,6,214,1,3
	.word	157911
	.byte	15,12
	.word	8784
	.byte	16,2,0,15,32
	.word	8784
	.byte	16,7,0,15,32
	.word	157948
	.byte	16,0,0,15,108
	.word	8784
	.byte	16,26,0,15,96
	.word	157948
	.byte	16,2,0,15,160,3
	.word	516
	.byte	16,159,3,0,15,64
	.word	157948
	.byte	16,1,0,15,192,3
	.word	516
	.byte	16,191,3,0,15,16
	.word	8784
	.byte	16,3,0,15,64
	.word	158015
	.byte	16,3,0,15,192,2
	.word	516
	.byte	16,191,2,0,11
	.byte	'_Ifx_SRC_GTM',0,6,217,1,25,204,18,14
	.byte	'AEIIRQ',0
	.word	8784
	.byte	4,2,35,0,14
	.byte	'ARUIRQ',0
	.word	157939
	.byte	12,2,35,4,14
	.byte	'reserved_10',0
	.word	1561
	.byte	4,2,35,16,14
	.byte	'BRCIRQ',0
	.word	8784
	.byte	4,2,35,20,14
	.byte	'CMPIRQ',0
	.word	8784
	.byte	4,2,35,24,14
	.byte	'SPEIRQ',0
	.word	156843
	.byte	8,2,35,28,14
	.byte	'reserved_24',0
	.word	3380
	.byte	8,2,35,36,14
	.byte	'PSM',0
	.word	157957
	.byte	32,2,35,44,14
	.byte	'reserved_4C',0
	.word	80127
	.byte	88,2,35,76,14
	.byte	'DPLL',0
	.word	157966
	.byte	108,3,35,164,1,14
	.byte	'reserved_110',0
	.word	80268
	.byte	96,3,35,144,2,14
	.byte	'ERR',0
	.word	8784
	.byte	4,3,35,240,2,14
	.byte	'reserved_174',0
	.word	3720
	.byte	12,3,35,244,2,14
	.byte	'TIM',0
	.word	157975
	.byte	96,3,35,128,3,14
	.byte	'reserved_1E0',0
	.word	157984
	.byte	160,3,3,35,224,3,14
	.byte	'MCS',0
	.word	157975
	.byte	96,3,35,128,7,14
	.byte	'reserved_3E0',0
	.word	157984
	.byte	160,3,3,35,224,7,14
	.byte	'TOM',0
	.word	157995
	.byte	64,3,35,128,11,14
	.byte	'reserved_5C0',0
	.word	158004
	.byte	192,3,3,35,192,11,14
	.byte	'ATOM',0
	.word	158024
	.byte	64,3,35,128,15,14
	.byte	'reserved_7C0',0
	.word	158033
	.byte	192,2,3,35,192,15,14
	.byte	'MCSW0',0
	.word	157939
	.byte	12,3,35,128,18,14
	.byte	'reserved_90C',0
	.word	95175
	.byte	52,3,35,140,18,14
	.byte	'MCSW1',0
	.word	157939
	.byte	12,3,35,192,18,0,10
	.word	158044
	.byte	21
	.byte	'Ifx_SRC_GTM',0,6,243,1,3
	.word	158504
	.byte	11
	.byte	'_Ifx_SRC_HSCT',0,6,246,1,25,4,14
	.byte	'SR',0
	.word	8784
	.byte	4,2,35,0,0,10
	.word	158530
	.byte	21
	.byte	'Ifx_SRC_HSCT',0,6,249,1,3
	.word	158563
	.byte	11
	.byte	'_Ifx_SRC_HSSL',0,6,252,1,25,16,14
	.byte	'COK',0
	.word	8784
	.byte	4,2,35,0,14
	.byte	'RDI',0
	.word	8784
	.byte	4,2,35,4,14
	.byte	'ERR',0
	.word	8784
	.byte	4,2,35,8,14
	.byte	'TRG',0
	.word	8784
	.byte	4,2,35,12,0,10
	.word	158590
	.byte	21
	.byte	'Ifx_SRC_HSSL',0,6,130,2,3
	.word	158663
	.byte	11
	.byte	'_Ifx_SRC_I2C',0,6,133,2,25,80,14
	.byte	'BREQ',0
	.word	8784
	.byte	4,2,35,0,14
	.byte	'LBREQ',0
	.word	8784
	.byte	4,2,35,4,14
	.byte	'SREQ',0
	.word	8784
	.byte	4,2,35,8,14
	.byte	'LSREQ',0
	.word	8784
	.byte	4,2,35,12,14
	.byte	'ERR',0
	.word	8784
	.byte	4,2,35,16,14
	.byte	'P',0
	.word	8784
	.byte	4,2,35,20,14
	.byte	'reserved_18',0
	.word	57577
	.byte	56,2,35,24,0,10
	.word	158690
	.byte	21
	.byte	'Ifx_SRC_I2C',0,6,142,2,3
	.word	158813
	.byte	11
	.byte	'_Ifx_SRC_LMU',0,6,145,2,25,4,14
	.byte	'SR',0
	.word	8784
	.byte	4,2,35,0,0,10
	.word	158839
	.byte	21
	.byte	'Ifx_SRC_LMU',0,6,148,2,3
	.word	158871
	.byte	11
	.byte	'_Ifx_SRC_MSC',0,6,151,2,25,20,14
	.byte	'SR0',0
	.word	8784
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	8784
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	8784
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	8784
	.byte	4,2,35,12,14
	.byte	'SR4',0
	.word	8784
	.byte	4,2,35,16,0,10
	.word	158897
	.byte	21
	.byte	'Ifx_SRC_MSC',0,6,158,2,3
	.word	158982
	.byte	11
	.byte	'_Ifx_SRC_PMU',0,6,161,2,25,4,14
	.byte	'SR',0
	.word	8784
	.byte	4,2,35,0,0,10
	.word	159008
	.byte	21
	.byte	'Ifx_SRC_PMU',0,6,164,2,3
	.word	159040
	.byte	11
	.byte	'_Ifx_SRC_PSI5',0,6,167,2,25,32,14
	.byte	'SR',0
	.word	157948
	.byte	32,2,35,0,0,10
	.word	159066
	.byte	21
	.byte	'Ifx_SRC_PSI5',0,6,170,2,3
	.word	159099
	.byte	11
	.byte	'_Ifx_SRC_PSI5S',0,6,173,2,25,32,14
	.byte	'SR',0
	.word	157948
	.byte	32,2,35,0,0,10
	.word	159126
	.byte	21
	.byte	'Ifx_SRC_PSI5S',0,6,176,2,3
	.word	159160
	.byte	11
	.byte	'_Ifx_SRC_QSPI',0,6,179,2,25,24,14
	.byte	'TX',0
	.word	8784
	.byte	4,2,35,0,14
	.byte	'RX',0
	.word	8784
	.byte	4,2,35,4,14
	.byte	'ERR',0
	.word	8784
	.byte	4,2,35,8,14
	.byte	'PT',0
	.word	8784
	.byte	4,2,35,12,14
	.byte	'HC',0
	.word	8784
	.byte	4,2,35,16,14
	.byte	'U',0
	.word	8784
	.byte	4,2,35,20,0,10
	.word	159188
	.byte	21
	.byte	'Ifx_SRC_QSPI',0,6,187,2,3
	.word	159281
	.byte	11
	.byte	'_Ifx_SRC_SCR',0,6,190,2,25,4,14
	.byte	'SR',0
	.word	8784
	.byte	4,2,35,0,0,10
	.word	159308
	.byte	21
	.byte	'Ifx_SRC_SCR',0,6,193,2,3
	.word	159340
	.byte	11
	.byte	'_Ifx_SRC_SCU',0,6,196,2,25,20,14
	.byte	'DTS',0
	.word	8784
	.byte	4,2,35,0,14
	.byte	'ERU',0
	.word	158015
	.byte	16,2,35,4,0,10
	.word	159366
	.byte	21
	.byte	'Ifx_SRC_SCU',0,6,200,2,3
	.word	159412
	.byte	15,24
	.word	8784
	.byte	16,5,0,11
	.byte	'_Ifx_SRC_SENT',0,6,203,2,25,24,14
	.byte	'SR',0
	.word	159438
	.byte	24,2,35,0,0,10
	.word	159447
	.byte	21
	.byte	'Ifx_SRC_SENT',0,6,206,2,3
	.word	159480
	.byte	11
	.byte	'_Ifx_SRC_SMU',0,6,209,2,25,12,14
	.byte	'SR',0
	.word	157939
	.byte	12,2,35,0,0,10
	.word	159507
	.byte	21
	.byte	'Ifx_SRC_SMU',0,6,212,2,3
	.word	159539
	.byte	11
	.byte	'_Ifx_SRC_STM',0,6,215,2,25,8,14
	.byte	'SR0',0
	.word	8784
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	8784
	.byte	4,2,35,4,0,10
	.word	159565
	.byte	21
	.byte	'Ifx_SRC_STM',0,6,219,2,3
	.word	159611
	.byte	11
	.byte	'_Ifx_SRC_VADCCG',0,6,222,2,25,16,14
	.byte	'SR0',0
	.word	8784
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	8784
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	8784
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	8784
	.byte	4,2,35,12,0,10
	.word	159637
	.byte	21
	.byte	'Ifx_SRC_VADCCG',0,6,228,2,3
	.word	159712
	.byte	11
	.byte	'_Ifx_SRC_VADCG',0,6,231,2,25,16,14
	.byte	'SR0',0
	.word	8784
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	8784
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	8784
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	8784
	.byte	4,2,35,12,0,10
	.word	159741
	.byte	21
	.byte	'Ifx_SRC_VADCG',0,6,237,2,3
	.word	159815
	.byte	11
	.byte	'_Ifx_SRC_XBAR',0,6,240,2,25,4,14
	.byte	'SRC',0
	.word	8784
	.byte	4,2,35,0,0,10
	.word	159843
	.byte	21
	.byte	'Ifx_SRC_XBAR',0,6,243,2,3
	.word	159877
	.byte	15,4
	.word	156469
	.byte	16,0,0,10
	.word	159904
	.byte	11
	.byte	'_Ifx_SRC_GAGBT',0,6,128,3,25,4,14
	.byte	'AGBT',0
	.word	159913
	.byte	4,2,35,0,0,10
	.word	159918
	.byte	21
	.byte	'Ifx_SRC_GAGBT',0,6,131,3,3
	.word	159954
	.byte	15,48
	.word	156527
	.byte	16,3,0,10
	.word	159982
	.byte	11
	.byte	'_Ifx_SRC_GASCLIN',0,6,134,3,25,48,14
	.byte	'ASCLIN',0
	.word	159991
	.byte	48,2,35,0,0,10
	.word	159996
	.byte	21
	.byte	'Ifx_SRC_GASCLIN',0,6,137,3,3
	.word	160036
	.byte	10
	.word	156614
	.byte	11
	.byte	'_Ifx_SRC_GBCU',0,6,140,3,25,4,14
	.byte	'SPB',0
	.word	160066
	.byte	4,2,35,0,0,10
	.word	160071
	.byte	21
	.byte	'Ifx_SRC_GBCU',0,6,143,3,3
	.word	160105
	.byte	15,64
	.word	156688
	.byte	16,0,0,10
	.word	160132
	.byte	11
	.byte	'_Ifx_SRC_GCAN',0,6,146,3,25,64,14
	.byte	'CAN',0
	.word	160141
	.byte	64,2,35,0,0,10
	.word	160146
	.byte	21
	.byte	'Ifx_SRC_GCAN',0,6,149,3,3
	.word	160180
	.byte	15,32
	.word	156745
	.byte	16,1,0,10
	.word	160207
	.byte	11
	.byte	'_Ifx_SRC_GCCU6',0,6,152,3,25,32,14
	.byte	'CCU6',0
	.word	160216
	.byte	32,2,35,0,0,10
	.word	160221
	.byte	21
	.byte	'Ifx_SRC_GCCU6',0,6,155,3,3
	.word	160257
	.byte	10
	.word	156852
	.byte	11
	.byte	'_Ifx_SRC_GCERBERUS',0,6,158,3,25,8,14
	.byte	'CERBERUS',0
	.word	160285
	.byte	8,2,35,0,0,10
	.word	160290
	.byte	21
	.byte	'Ifx_SRC_GCERBERUS',0,6,161,3,3
	.word	160334
	.byte	15,16
	.word	156918
	.byte	16,0,0,10
	.word	160366
	.byte	11
	.byte	'_Ifx_SRC_GCIF',0,6,164,3,25,16,14
	.byte	'CIF',0
	.word	160375
	.byte	16,2,35,0,0,10
	.word	160380
	.byte	21
	.byte	'Ifx_SRC_GCIF',0,6,167,3,3
	.word	160414
	.byte	15,8
	.word	157017
	.byte	16,1,0,10
	.word	160441
	.byte	11
	.byte	'_Ifx_SRC_GCPU',0,6,170,3,25,8,14
	.byte	'CPU',0
	.word	160450
	.byte	8,2,35,0,0,10
	.word	160455
	.byte	21
	.byte	'Ifx_SRC_GCPU',0,6,173,3,3
	.word	160489
	.byte	15,208,1
	.word	157088
	.byte	16,0,0,10
	.word	160516
	.byte	11
	.byte	'_Ifx_SRC_GDMA',0,6,176,3,25,208,1,14
	.byte	'DMA',0
	.word	160526
	.byte	208,1,2,35,0,0,10
	.word	160531
	.byte	21
	.byte	'Ifx_SRC_GDMA',0,6,179,3,3
	.word	160567
	.byte	10
	.word	157181
	.byte	10
	.word	157181
	.byte	10
	.word	157181
	.byte	11
	.byte	'_Ifx_SRC_GDSADC',0,6,182,3,25,32,14
	.byte	'DSADC0',0
	.word	160594
	.byte	8,2,35,0,14
	.byte	'reserved_8',0
	.word	3380
	.byte	8,2,35,8,14
	.byte	'DSADC2',0
	.word	160599
	.byte	8,2,35,16,14
	.byte	'DSADC3',0
	.word	160604
	.byte	8,2,35,24,0,10
	.word	160609
	.byte	21
	.byte	'Ifx_SRC_GDSADC',0,6,188,3,3
	.word	160700
	.byte	15,4
	.word	157257
	.byte	16,0,0,10
	.word	160729
	.byte	11
	.byte	'_Ifx_SRC_GEMEM',0,6,191,3,25,4,14
	.byte	'EMEM',0
	.word	160738
	.byte	4,2,35,0,0,10
	.word	160743
	.byte	21
	.byte	'Ifx_SRC_GEMEM',0,6,194,3,3
	.word	160779
	.byte	15,80
	.word	157317
	.byte	16,0,0,10
	.word	160807
	.byte	11
	.byte	'_Ifx_SRC_GERAY',0,6,197,3,25,80,14
	.byte	'ERAY',0
	.word	160816
	.byte	80,2,35,0,0,10
	.word	160821
	.byte	21
	.byte	'Ifx_SRC_GERAY',0,6,200,3,3
	.word	160857
	.byte	15,4
	.word	157471
	.byte	16,0,0,10
	.word	160885
	.byte	11
	.byte	'_Ifx_SRC_GETH',0,6,203,3,25,4,14
	.byte	'ETH',0
	.word	160894
	.byte	4,2,35,0,0,10
	.word	160899
	.byte	21
	.byte	'Ifx_SRC_GETH',0,6,206,3,3
	.word	160933
	.byte	15,4
	.word	157529
	.byte	16,0,0,10
	.word	160960
	.byte	11
	.byte	'_Ifx_SRC_GFCE',0,6,209,3,25,4,14
	.byte	'FCE',0
	.word	160969
	.byte	4,2,35,0,0,10
	.word	160974
	.byte	21
	.byte	'Ifx_SRC_GFCE',0,6,212,3,3
	.word	161008
	.byte	15,12
	.word	157587
	.byte	16,0,0,10
	.word	161035
	.byte	11
	.byte	'_Ifx_SRC_GFFT',0,6,215,3,25,12,14
	.byte	'FFT',0
	.word	161044
	.byte	12,2,35,0,0,10
	.word	161049
	.byte	21
	.byte	'Ifx_SRC_GFFT',0,6,218,3,3
	.word	161083
	.byte	15,64
	.word	157673
	.byte	16,1,0,10
	.word	161110
	.byte	11
	.byte	'_Ifx_SRC_GGPSR',0,6,221,3,25,64,14
	.byte	'GPSR',0
	.word	161119
	.byte	64,2,35,0,0,10
	.word	161124
	.byte	21
	.byte	'Ifx_SRC_GGPSR',0,6,224,3,3
	.word	161160
	.byte	15,48
	.word	157794
	.byte	16,0,0,10
	.word	161188
	.byte	11
	.byte	'_Ifx_SRC_GGPT12',0,6,227,3,25,48,14
	.byte	'GPT12',0
	.word	161197
	.byte	48,2,35,0,0,10
	.word	161202
	.byte	21
	.byte	'Ifx_SRC_GGPT12',0,6,230,3,3
	.word	161240
	.byte	15,204,18
	.word	158044
	.byte	16,0,0,10
	.word	161269
	.byte	11
	.byte	'_Ifx_SRC_GGTM',0,6,233,3,25,204,18,14
	.byte	'GTM',0
	.word	161279
	.byte	204,18,2,35,0,0,10
	.word	161284
	.byte	21
	.byte	'Ifx_SRC_GGTM',0,6,236,3,3
	.word	161320
	.byte	15,4
	.word	158530
	.byte	16,0,0,10
	.word	161347
	.byte	11
	.byte	'_Ifx_SRC_GHSCT',0,6,239,3,25,4,14
	.byte	'HSCT',0
	.word	161356
	.byte	4,2,35,0,0,10
	.word	161361
	.byte	21
	.byte	'Ifx_SRC_GHSCT',0,6,242,3,3
	.word	161397
	.byte	15,64
	.word	158590
	.byte	16,3,0,10
	.word	161425
	.byte	11
	.byte	'_Ifx_SRC_GHSSL',0,6,245,3,25,68,14
	.byte	'HSSL',0
	.word	161434
	.byte	64,2,35,0,14
	.byte	'EXI',0
	.word	8784
	.byte	4,2,35,64,0,10
	.word	161439
	.byte	21
	.byte	'Ifx_SRC_GHSSL',0,6,249,3,3
	.word	161488
	.byte	15,80
	.word	158690
	.byte	16,0,0,10
	.word	161516
	.byte	11
	.byte	'_Ifx_SRC_GI2C',0,6,252,3,25,80,14
	.byte	'I2C',0
	.word	161525
	.byte	80,2,35,0,0,10
	.word	161530
	.byte	21
	.byte	'Ifx_SRC_GI2C',0,6,255,3,3
	.word	161564
	.byte	15,4
	.word	158839
	.byte	16,0,0,10
	.word	161591
	.byte	11
	.byte	'_Ifx_SRC_GLMU',0,6,130,4,25,4,14
	.byte	'LMU',0
	.word	161600
	.byte	4,2,35,0,0,10
	.word	161605
	.byte	21
	.byte	'Ifx_SRC_GLMU',0,6,133,4,3
	.word	161639
	.byte	15,40
	.word	158897
	.byte	16,1,0,10
	.word	161666
	.byte	11
	.byte	'_Ifx_SRC_GMSC',0,6,136,4,25,40,14
	.byte	'MSC',0
	.word	161675
	.byte	40,2,35,0,0,10
	.word	161680
	.byte	21
	.byte	'Ifx_SRC_GMSC',0,6,139,4,3
	.word	161714
	.byte	15,8
	.word	159008
	.byte	16,1,0,10
	.word	161741
	.byte	11
	.byte	'_Ifx_SRC_GPMU',0,6,142,4,25,8,14
	.byte	'PMU',0
	.word	161750
	.byte	8,2,35,0,0,10
	.word	161755
	.byte	21
	.byte	'Ifx_SRC_GPMU',0,6,145,4,3
	.word	161789
	.byte	15,32
	.word	159066
	.byte	16,0,0,10
	.word	161816
	.byte	11
	.byte	'_Ifx_SRC_GPSI5',0,6,148,4,25,32,14
	.byte	'PSI5',0
	.word	161825
	.byte	32,2,35,0,0,10
	.word	161830
	.byte	21
	.byte	'Ifx_SRC_GPSI5',0,6,151,4,3
	.word	161866
	.byte	15,32
	.word	159126
	.byte	16,0,0,10
	.word	161894
	.byte	11
	.byte	'_Ifx_SRC_GPSI5S',0,6,154,4,25,32,14
	.byte	'PSI5S',0
	.word	161903
	.byte	32,2,35,0,0,10
	.word	161908
	.byte	21
	.byte	'Ifx_SRC_GPSI5S',0,6,157,4,3
	.word	161946
	.byte	15,96
	.word	159188
	.byte	16,3,0,10
	.word	161975
	.byte	11
	.byte	'_Ifx_SRC_GQSPI',0,6,160,4,25,96,14
	.byte	'QSPI',0
	.word	161984
	.byte	96,2,35,0,0,10
	.word	161989
	.byte	21
	.byte	'Ifx_SRC_GQSPI',0,6,163,4,3
	.word	162025
	.byte	15,4
	.word	159308
	.byte	16,0,0,10
	.word	162053
	.byte	11
	.byte	'_Ifx_SRC_GSCR',0,6,166,4,25,4,14
	.byte	'SCR',0
	.word	162062
	.byte	4,2,35,0,0,10
	.word	162067
	.byte	21
	.byte	'Ifx_SRC_GSCR',0,6,169,4,3
	.word	162101
	.byte	10
	.word	159366
	.byte	11
	.byte	'_Ifx_SRC_GSCU',0,6,172,4,25,20,14
	.byte	'SCU',0
	.word	162128
	.byte	20,2,35,0,0,10
	.word	162133
	.byte	21
	.byte	'Ifx_SRC_GSCU',0,6,175,4,3
	.word	162167
	.byte	15,24
	.word	159447
	.byte	16,0,0,10
	.word	162194
	.byte	11
	.byte	'_Ifx_SRC_GSENT',0,6,178,4,25,24,14
	.byte	'SENT',0
	.word	162203
	.byte	24,2,35,0,0,10
	.word	162208
	.byte	21
	.byte	'Ifx_SRC_GSENT',0,6,181,4,3
	.word	162244
	.byte	15,12
	.word	159507
	.byte	16,0,0,10
	.word	162272
	.byte	11
	.byte	'_Ifx_SRC_GSMU',0,6,184,4,25,12,14
	.byte	'SMU',0
	.word	162281
	.byte	12,2,35,0,0,10
	.word	162286
	.byte	21
	.byte	'Ifx_SRC_GSMU',0,6,187,4,3
	.word	162320
	.byte	15,16
	.word	159565
	.byte	16,1,0,10
	.word	162347
	.byte	11
	.byte	'_Ifx_SRC_GSTM',0,6,190,4,25,16,14
	.byte	'STM',0
	.word	162356
	.byte	16,2,35,0,0,10
	.word	162361
	.byte	21
	.byte	'Ifx_SRC_GSTM',0,6,193,4,3
	.word	162395
	.byte	15,64
	.word	159741
	.byte	16,3,0,10
	.word	162422
	.byte	15,224,1
	.word	516
	.byte	16,223,1,0,15,32
	.word	159637
	.byte	16,1,0,10
	.word	162447
	.byte	11
	.byte	'_Ifx_SRC_GVADC',0,6,196,4,25,192,2,14
	.byte	'G',0
	.word	162431
	.byte	64,2,35,0,14
	.byte	'reserved_40',0
	.word	162436
	.byte	224,1,2,35,64,14
	.byte	'CG',0
	.word	162456
	.byte	32,3,35,160,2,0,10
	.word	162461
	.byte	21
	.byte	'Ifx_SRC_GVADC',0,6,201,4,3
	.word	162530
	.byte	10
	.word	159843
	.byte	11
	.byte	'_Ifx_SRC_GXBAR',0,6,204,4,25,4,14
	.byte	'XBAR',0
	.word	162558
	.byte	4,2,35,0,0,10
	.word	162563
	.byte	21
	.byte	'Ifx_SRC_GXBAR',0,6,207,4,3
	.word	162599
	.byte	21
	.byte	'IfxGtm_Tom_Ch_ClkSrc',0,11,92,3
	.word	100892
	.byte	21
	.byte	'IfxGtm_Tom_Ch_OutputTrigger',0,11,100,3
	.word	102096
	.byte	21
	.byte	'IfxGtm_Tom_Ch_ResetEvent',0,11,108,3
	.word	101795
	.byte	17,16,62,9,1,18
	.byte	'IfxGtm_ChXSel_a',0,0,18
	.byte	'IfxGtm_ChXSel_b',0,1,18
	.byte	'IfxGtm_ChXSel_c',0,2,18
	.byte	'IfxGtm_ChXSel_d',0,3,18
	.byte	'IfxGtm_ChXSel_e',0,4,18
	.byte	'IfxGtm_ChXSel_f',0,5,18
	.byte	'IfxGtm_ChXSel_g',0,6,18
	.byte	'IfxGtm_ChXSel_h',0,7,18
	.byte	'IfxGtm_ChXSel_i',0,8,18
	.byte	'IfxGtm_ChXSel_j',0,9,18
	.byte	'IfxGtm_ChXSel_k',0,10,18
	.byte	'IfxGtm_ChXSel_l',0,11,18
	.byte	'IfxGtm_ChXSel_m',0,12,18
	.byte	'IfxGtm_ChXSel_n',0,13,18
	.byte	'IfxGtm_ChXSel_o',0,14,18
	.byte	'IfxGtm_ChXSel_p',0,15,0,21
	.byte	'IfxGtm_ChXSel',0,16,83,3
	.word	162725
	.byte	21
	.byte	'IfxGtm_ToutSel',0,16,93,3
	.word	102823
	.byte	35,16,105,15,20,14
	.byte	'atom',0
	.word	155782
	.byte	1,2,35,0,14
	.byte	'channel',0
	.word	15524
	.byte	1,2,35,1,14
	.byte	'toutSel',0
	.word	102823
	.byte	1,2,35,2,14
	.byte	'toutn',0
	.word	20195
	.byte	4,2,35,4,14
	.byte	'pin',0
	.word	102924
	.byte	8,2,35,8,14
	.byte	'select',0
	.word	102963
	.byte	1,2,35,16,0,25
	.word	163064
	.byte	21
	.byte	'IfxGtm_Atom_ToutMap',0,16,113,3
	.word	163162
	.byte	25
	.word	103180
	.byte	21
	.byte	'IfxGtm_Tom_ToutMap',0,16,127,3
	.word	163195
	.byte	21
	.byte	'IfxStdIf_Timer_CountDir',0,12,93,3
	.word	104089
	.byte	21
	.byte	'IfxStdIf_Timer',0,12,96,32
	.word	21051
	.byte	21
	.byte	'IfxStdIf_Timer_TrigConfig',0,12,144,2,3
	.word	103908
	.byte	21
	.byte	'IfxStdIf_Timer_Config',0,12,156,2,3
	.word	104191
	.byte	21
	.byte	'IfxGtm_Tom_Timer_Base',0,17,155,1,3
	.word	104395
	.byte	21
	.byte	'IfxGtm_Tom_Timer',0,17,176,1,3
	.word	104506
	.byte	21
	.byte	'IfxGtm_Tom_Timer_Config',0,17,192,1,3
	.word	104749
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L103:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,53,0,73,19,0,0,11,19
	.byte	1,3,8,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,13,23,1,58,15,59,15,57
	.byte	15,11,15,0,0,14,13,0,3,8,73,19,11,15,56,9,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,11,1,0,0,20,13,0,73,19,11,15,56,9,0,0,21,22,0,3,8,58,15,59
	.byte	15,57,15,73,19,0,0,22,21,1,73,19,54,15,39,12,0,0,23,5,0,73,19,0,0,24,21,1,54,15,39,12,0,0,25,38,0,73,19
	.byte	0,0,26,46,1,3,8,54,15,39,12,63,12,60,12,0,0,27,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,28,5,0,3,8,73
	.byte	19,0,0,29,46,1,49,19,0,0,30,5,0,49,19,0,0,31,29,1,49,19,0,0,32,11,0,49,19,0,0,33,46,1,3,8,58,15,59,15
	.byte	57,15,54,15,39,12,63,12,60,12,0,0,34,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,35,19
	.byte	1,58,15,59,15,57,15,11,15,0,0,36,5,0,58,15,59,15,57,15,73,19,0,0,37,46,0,3,8,58,15,59,15,57,15,54,15,63
	.byte	12,60,12,0,0,38,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L104:
	.word	.L413-.L412
.L412:
	.half	3
	.word	.L415-.L414
.L414:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap',0
	.byte	'C:\\Program Files\\TASKING\\TriCore v6.3r1\\ctc\\include\\',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxPort.h',0,2,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxSrc.h',0,4,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxSrc_cfg.h',0,5,0,0
	.byte	'IfxGtm_Atom.h',0,6,0,0
	.byte	'IfxGtm_regdef.h',0,3,0,0
	.byte	'IfxGtm_cfg.h',0,5,0,0
	.byte	'IfxGtm_Tom.h',0,6,0,0
	.byte	'IfxStdIf_Timer.h',0,7,0,0
	.byte	'IfxStdIf.h',0,7,0,0
	.byte	'IfxGtm.h',0,6,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'IfxGtm_PinMap.h',0,8,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.h',0,0,0,0
	.byte	'string.h',0,9,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0
	.byte	'stddef.h',0,9,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'IfxScu_cfg.h',0,5,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxGtm_Tbu.h',0,6,0,0,0
.L415:
.L413:
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_getOffset')
	.sect	'.debug_info'
.L105:
	.word	276
	.half	3
	.word	.L106
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L108,.L107
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_getOffset',0,1,153,1,16
	.word	.L230
	.byte	1,1,1
	.word	.L68,.L231,.L67
	.byte	4
	.byte	'driver',0,1,153,1,61
	.word	.L232,.L233
	.byte	5
	.word	.L68,.L231
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_getOffset')
	.sect	'.debug_abbrev'
.L106:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_getOffset')
	.sect	'.debug_line'
.L107:
	.word	.L417-.L416
.L416:
	.half	3
	.word	.L419-.L418
.L418:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L419:
	.byte	5,18,7,0,5,2
	.word	.L68
	.byte	3,154,1,1,5,1,9
	.half	.L420-.L68
	.byte	3,1,1,7,9
	.half	.L109-.L420
	.byte	0,1,1
.L417:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_getOffset')
	.sect	'.debug_ranges'
.L108:
	.word	-1,.L68,0,.L109-.L68,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_getPointer')
	.sect	'.debug_info'
.L110:
	.word	277
	.half	3
	.word	.L111
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L113,.L112
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_getPointer',0,1,165,1,18
	.word	.L234
	.byte	1,1,1
	.word	.L72,.L235,.L71
	.byte	4
	.byte	'driver',0,1,165,1,64
	.word	.L232,.L236
	.byte	5
	.word	.L72,.L235
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_getPointer')
	.sect	'.debug_abbrev'
.L111:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_getPointer')
	.sect	'.debug_line'
.L112:
	.word	.L422-.L421
.L421:
	.half	3
	.word	.L424-.L423
.L423:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L424:
	.byte	5,48,7,0,5,2
	.word	.L72
	.byte	3,166,1,1,5,61,9
	.half	.L425-.L72
	.byte	1,5,1,9
	.half	.L114-.L425
	.byte	3,1,0,1,1
.L422:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_getPointer')
	.sect	'.debug_ranges'
.L113:
	.word	-1,.L72,0,.L114-.L72,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_getTriggerPointer')
	.sect	'.debug_info'
.L115:
	.word	284
	.half	3
	.word	.L116
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L118,.L117
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_getTriggerPointer',0,1,183,1,18
	.word	.L234
	.byte	1,1,1
	.word	.L78,.L237,.L77
	.byte	4
	.byte	'driver',0,1,183,1,71
	.word	.L232,.L238
	.byte	5
	.word	.L78,.L237
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_getTriggerPointer')
	.sect	'.debug_abbrev'
.L116:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_getTriggerPointer')
	.sect	'.debug_line'
.L117:
	.word	.L427-.L426
.L426:
	.half	3
	.word	.L429-.L428
.L428:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L429:
	.byte	5,53,7,0,5,2
	.word	.L78
	.byte	3,184,1,1,5,66,9
	.half	.L430-.L78
	.byte	1,5,1,9
	.half	.L119-.L430
	.byte	3,1,0,1,1
.L427:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_getTriggerPointer')
	.sect	'.debug_ranges'
.L118:
	.word	-1,.L78,0,.L119-.L78,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_init')
	.sect	'.debug_info'
.L120:
	.word	661
	.half	3
	.word	.L121
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L123,.L122
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_init',0,1,189,1,9
	.word	.L239
	.byte	1,1,1
	.word	.L80,.L240,.L79
	.byte	4
	.byte	'driver',0,1,189,1,49
	.word	.L232,.L241
	.byte	4
	.byte	'config',0,1,189,1,88
	.word	.L242,.L243
	.byte	5
	.word	.L80,.L240
	.byte	6
	.byte	'result',0,1,191,1,28
	.word	.L239,.L244
	.byte	6
	.byte	'base',0,1,192,1,28
	.word	.L245,.L246
	.byte	6
	.byte	'maskShift',0,1,193,1,28
	.word	.L247,.L248
	.byte	7
	.word	.L249,.L250,.L251
	.byte	8
	.word	.L252,.L253
	.byte	8
	.word	.L254,.L255
	.byte	9
	.word	.L256,.L250,.L251
	.byte	0,5
	.word	.L257,.L28
	.byte	6
	.byte	'triggerChannel',0,1,138,2,23
	.word	.L258,.L259
	.byte	6
	.byte	'triggerChannelMask',0,1,139,2,23
	.word	.L247,.L260
	.byte	0,5
	.word	.L28,.L43
	.byte	6
	.byte	'src',0,1,174,2,32
	.word	.L261,.L262
	.byte	6
	.byte	'timerHasIrq',0,1,175,2,32
	.word	.L239,.L263
	.byte	6
	.byte	'triggerHasIrq',0,1,176,2,32
	.word	.L239,.L264
	.byte	5
	.word	.L34,.L43
	.byte	7
	.word	.L265,.L266,.L42
	.byte	8
	.word	.L267,.L268
	.byte	8
	.word	.L269,.L270
	.byte	8
	.word	.L271,.L272
	.byte	10
	.word	.L273,.L274
	.byte	0,7
	.word	.L265,.L275,.L43
	.byte	8
	.word	.L267,.L268
	.byte	8
	.word	.L269,.L270
	.byte	8
	.word	.L271,.L272
	.byte	9
	.word	.L273,.L275,.L43
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_init')
	.sect	'.debug_abbrev'
.L121:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,10,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_init')
	.sect	'.debug_line'
.L122:
	.word	.L432-.L431
.L431:
	.half	3
	.word	.L434-.L433
.L433:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0
	.byte	'IfxSrc.h',0,2,0,0,0
.L434:
	.byte	5,9,7,0,5,2
	.word	.L80
	.byte	3,188,1,1,5,34,9
	.half	.L361-.L80
	.byte	3,8,1,5,26,9
	.half	.L435-.L361
	.byte	1,5,45,9
	.half	.L436-.L435
	.byte	3,2,1,5,34,9
	.half	.L437-.L436
	.byte	3,127,1,5,26,9
	.half	.L438-.L437
	.byte	1,5,35,9
	.half	.L439-.L438
	.byte	3,121,1,9
	.half	.L362-.L439
	.byte	3,8,1,5,52,9
	.half	.L440-.L362
	.byte	1,5,45,9
	.half	.L441-.L440
	.byte	1,5,26,9
	.half	.L442-.L441
	.byte	1,5,34,9
	.half	.L443-.L442
	.byte	3,1,1,5,26,9
	.half	.L444-.L443
	.byte	1,5,48,9
	.half	.L445-.L444
	.byte	3,2,1,5,26,9
	.half	.L446-.L445
	.byte	1,5,5,9
	.half	.L447-.L446
	.byte	3,2,1,5,19,7,9
	.half	.L448-.L447
	.byte	3,2,1,5,9,9
	.half	.L449-.L448
	.byte	1,5,56,7,9
	.half	.L450-.L449
	.byte	3,2,1,5,65,9
	.half	.L451-.L450
	.byte	1,5,20,9
	.half	.L21-.L451
	.byte	3,4,1,5,9,3,126,1,5,40,9
	.half	.L20-.L21
	.byte	3,8,1,5,32,9
	.half	.L22-.L20
	.byte	1,5,33,9
	.half	.L23-.L22
	.byte	3,3,1,5,15,1,5,60,9
	.half	.L452-.L23
	.byte	3,2,1,5,5,9
	.half	.L358-.L452
	.byte	3,126,1,5,67,7,9
	.half	.L453-.L358
	.byte	3,2,1,5,24,9
	.half	.L357-.L453
	.byte	1,5,67,9
	.half	.L454-.L357
	.byte	3,1,1,5,60,9
	.half	.L455-.L454
	.byte	1,5,67,9
	.half	.L456-.L455
	.byte	1,5,69,9
	.half	.L457-.L456
	.byte	3,127,1,5,67,9
	.half	.L24-.L457
	.byte	3,5,1,5,24,9
	.half	.L359-.L24
	.byte	1,5,26,9
	.half	.L458-.L359
	.byte	3,1,1,5,24,9
	.half	.L25-.L458
	.byte	1,5,48,9
	.half	.L459-.L25
	.byte	3,3,1,5,46,1,9
	.half	.L460-.L459
	.byte	3,1,1,9
	.half	.L461-.L460
	.byte	3,1,1,9
	.half	.L462-.L461
	.byte	3,2,1,9
	.half	.L463-.L462
	.byte	3,1,1,9
	.half	.L464-.L463
	.byte	3,1,1,5,40,9
	.half	.L465-.L464
	.byte	3,3,1,5,75,9
	.half	.L466-.L465
	.byte	1,5,42,9
	.half	.L467-.L466
	.byte	3,1,1,5,71,9
	.half	.L468-.L467
	.byte	1,5,43,9
	.half	.L469-.L468
	.byte	3,2,1,5,22,9
	.half	.L364-.L469
	.byte	3,2,1,5,39,9
	.half	.L470-.L364
	.byte	1,5,37,9
	.half	.L471-.L470
	.byte	1,5,9,9
	.half	.L472-.L471
	.byte	1,5,47,7,9
	.half	.L473-.L472
	.byte	1,5,57,1,5,51,9
	.half	.L474-.L473
	.byte	1,5,70,9
	.half	.L475-.L474
	.byte	1,5,16,9
	.half	.L476-.L475
	.byte	3,2,1,5,55,9
	.half	.L26-.L476
	.byte	3,6,1,5,69,9
	.half	.L366-.L26
	.byte	3,2,1,5,87,1,5,57,9
	.half	.L477-.L366
	.byte	1,5,73,9
	.half	.L478-.L477
	.byte	1,5,112,1,5,98,9
	.half	.L479-.L478
	.byte	1,4,2,5,20,9
	.half	.L250-.L479
	.byte	3,195,1,1,4,1,9
	.half	.L480-.L250
	.byte	3,189,126,1,5,41,9
	.half	.L251-.L480
	.byte	3,2,1,5,76,9
	.half	.L388-.L251
	.byte	1,5,24,9
	.half	.L481-.L388
	.byte	3,3,1,5,53,9
	.half	.L482-.L481
	.byte	3,1,1,5,24,9
	.half	.L483-.L482
	.byte	3,127,1,5,53,3,1,1,5,39,9
	.half	.L367-.L483
	.byte	3,127,1,5,53,3,1,1,5,13,9
	.half	.L368-.L367
	.byte	3,2,1,5,5,9
	.half	.L484-.L368
	.byte	1,5,50,7,9
	.half	.L257-.L484
	.byte	3,2,1,5,44,9
	.half	.L370-.L257
	.byte	3,1,1,3,3,1,5,65,9
	.half	.L485-.L370
	.byte	3,125,1,5,46,9
	.half	.L486-.L485
	.byte	1,5,87,9
	.half	.L487-.L486
	.byte	3,3,1,5,107,9
	.half	.L369-.L487
	.byte	1,5,67,9
	.half	.L372-.L369
	.byte	1,5,107,1,5,45,9
	.half	.L373-.L372
	.byte	3,1,1,5,74,9
	.half	.L488-.L373
	.byte	1,5,37,9
	.half	.L489-.L488
	.byte	3,2,1,5,9,9
	.half	.L490-.L489
	.byte	1,5,71,7,9
	.half	.L491-.L490
	.byte	3,2,1,5,48,1,5,71,9
	.half	.L374-.L491
	.byte	1,5,48,9
	.half	.L375-.L374
	.byte	3,1,1,5,77,9
	.half	.L492-.L375
	.byte	1,5,73,9
	.half	.L493-.L492
	.byte	3,1,1,5,50,1,5,73,9
	.half	.L376-.L493
	.byte	1,5,79,9
	.half	.L377-.L376
	.byte	3,1,1,5,54,1,5,82,9
	.half	.L494-.L377
	.byte	1,5,61,9
	.half	.L379-.L494
	.byte	3,1,1,5,81,9
	.half	.L29-.L379
	.byte	3,6,1,5,56,1,5,84,9
	.half	.L495-.L29
	.byte	1,5,34,9
	.half	.L382-.L495
	.byte	3,2,1,5,13,9
	.half	.L371-.L382
	.byte	1,5,60,7,9
	.half	.L496-.L371
	.byte	1,5,71,9
	.half	.L497-.L496
	.byte	1,5,44,7,9
	.half	.L498-.L497
	.byte	3,3,1,5,78,9
	.half	.L499-.L498
	.byte	1,5,111,9
	.half	.L500-.L499
	.byte	1,5,65,9
	.half	.L30-.L500
	.byte	3,5,1,5,60,9
	.half	.L28-.L30
	.byte	3,8,1,5,87,9
	.half	.L501-.L28
	.byte	3,1,1,5,73,9
	.half	.L390-.L501
	.byte	3,127,1,5,69,3,1,1,5,48,9
	.half	.L389-.L390
	.byte	1,5,94,7,9
	.half	.L502-.L389
	.byte	1,5,87,9
	.half	.L503-.L502
	.byte	1,5,45,9
	.half	.L32-.L503
	.byte	3,2,1,5,19,9
	.half	.L504-.L32
	.byte	1,5,9,9
	.half	.L505-.L504
	.byte	1,5,78,7,9
	.half	.L506-.L505
	.byte	3,2,1,5,98,7,9
	.half	.L507-.L506
	.byte	1,5,113,9
	.half	.L508-.L507
	.byte	1,5,121,9
	.half	.L35-.L508
	.byte	1,5,49,9
	.half	.L36-.L35
	.byte	1,5,152,1,9
	.half	.L509-.L36
	.byte	1,5,53,9
	.half	.L510-.L509
	.byte	3,1,1,5,66,9
	.half	.L511-.L510
	.byte	1,5,79,9
	.half	.L512-.L511
	.byte	1,5,30,9
	.half	.L384-.L512
	.byte	3,1,1,5,56,7,9
	.half	.L513-.L384
	.byte	1,5,69,9
	.half	.L514-.L513
	.byte	1,5,91,9
	.half	.L37-.L514
	.byte	1,5,105,9
	.half	.L38-.L37
	.byte	1,5,131,1,7,9
	.half	.L515-.L38
	.byte	1,5,144,1,9
	.half	.L516-.L515
	.byte	1,5,166,1,9
	.half	.L39-.L516
	.byte	1,5,179,1,9
	.half	.L517-.L39
	.byte	1,5,13,9
	.half	.L34-.L517
	.byte	3,7,1,5,82,7,9
	.half	.L518-.L34
	.byte	3,2,1,5,53,1,5,91,9
	.half	.L519-.L518
	.byte	1,5,97,9
	.half	.L520-.L519
	.byte	1,5,57,9
	.half	.L521-.L520
	.byte	3,1,1,5,70,9
	.half	.L522-.L521
	.byte	1,5,83,9
	.half	.L523-.L522
	.byte	1,5,46,9
	.half	.L385-.L523
	.byte	3,1,1,5,72,9
	.half	.L266-.L385
	.byte	1,4,3,5,17,9
	.half	.L524-.L266
	.byte	3,83,1,5,11,9
	.half	.L525-.L524
	.byte	3,1,1,4,1,5,13,9
	.half	.L42-.L525
	.byte	3,48,1,5,84,7,9
	.half	.L526-.L42
	.byte	3,2,1,5,53,1,5,93,9
	.half	.L527-.L526
	.byte	1,5,66,1,5,100,9
	.half	.L528-.L527
	.byte	1,5,57,9
	.half	.L529-.L528
	.byte	3,1,1,5,70,9
	.half	.L530-.L529
	.byte	1,5,83,9
	.half	.L531-.L530
	.byte	1,5,54,9
	.half	.L387-.L531
	.byte	3,1,1,5,88,9
	.half	.L275-.L387
	.byte	1,4,3,5,17,9
	.half	.L41-.L275
	.byte	3,75,1,5,11,9
	.half	.L532-.L41
	.byte	3,1,1,4,1,5,84,9
	.half	.L43-.L532
	.byte	3,59,1,5,54,1,5,87,9
	.half	.L533-.L43
	.byte	1,5,79,1,5,90,9
	.half	.L534-.L533
	.byte	1,5,39,9
	.half	.L535-.L534
	.byte	3,1,1,5,54,9
	.half	.L536-.L535
	.byte	3,1,1,5,59,9
	.half	.L537-.L536
	.byte	1,5,82,1,5,87,9
	.half	.L538-.L537
	.byte	1,5,90,1,5,5,9
	.half	.L539-.L538
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L124-.L539
	.byte	0,1,1
.L432:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_init')
	.sect	'.debug_ranges'
.L123:
	.word	-1,.L80,0,.L124-.L80,0,0
.L274:
	.word	-1,.L80,.L266-.L80,.L42-.L80,-1,.L82,0,.L224-.L82,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_initConfig')
	.sect	'.debug_info'
.L125:
	.word	290
	.half	3
	.word	.L126
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L128,.L127
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_initConfig',0,1,216,2,6,1,1,1
	.word	.L84,.L276,.L83
	.byte	4
	.byte	'config',0,1,216,2,59
	.word	.L277,.L278
	.byte	4
	.byte	'gtm',0,1,216,2,76
	.word	.L279,.L280
	.byte	5
	.word	.L84,.L276
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_initConfig')
	.sect	'.debug_abbrev'
.L126:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_initConfig')
	.sect	'.debug_line'
.L127:
	.word	.L541-.L540
.L540:
	.half	3
	.word	.L543-.L542
.L542:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L543:
	.byte	5,6,7,0,5,2
	.word	.L84
	.byte	3,215,2,1,5,38,9
	.half	.L393-.L84
	.byte	3,2,1,5,28,9
	.half	.L391-.L393
	.byte	3,1,1,5,30,9
	.half	.L544-.L391
	.byte	3,1,1,5,28,1,9
	.half	.L545-.L544
	.byte	3,1,1,5,30,9
	.half	.L546-.L545
	.byte	3,1,1,5,28,9
	.half	.L547-.L546
	.byte	1,9
	.half	.L548-.L547
	.byte	3,1,1,9
	.half	.L549-.L548
	.byte	3,1,1,9
	.half	.L550-.L549
	.byte	3,1,1,9
	.half	.L551-.L550
	.byte	3,1,1,5,30,9
	.half	.L552-.L551
	.byte	3,1,1,5,28,1,5,1,9
	.half	.L553-.L552
	.byte	3,1,1,7,9
	.half	.L129-.L553
	.byte	0,1,1
.L541:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_initConfig')
	.sect	'.debug_ranges'
.L128:
	.word	-1,.L84,0,.L129-.L84,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTimerIrq')
	.sect	'.debug_info'
.L130:
	.word	299
	.half	3
	.word	.L131
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L133,.L132
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_acknowledgeTimerIrq',0,1,59,9
	.word	.L239
	.byte	1,1,1
	.word	.L52,.L281,.L51
	.byte	4
	.byte	'driver',0,1,59,64
	.word	.L232,.L282
	.byte	5
	.word	.L283
	.byte	6
	.byte	'event',0,1,61,13
	.word	.L239,.L284
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTimerIrq')
	.sect	'.debug_abbrev'
.L131:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0
	.byte	3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTimerIrq')
	.sect	'.debug_line'
.L132:
	.word	.L555-.L554
.L554:
	.half	3
	.word	.L557-.L556
.L556:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L557:
	.byte	5,9,7,0,5,2
	.word	.L52
	.byte	3,58,1,5,52,9
	.half	.L342-.L52
	.byte	3,4,1,5,65,9
	.half	.L340-.L342
	.byte	1,5,11,9
	.half	.L344-.L340
	.byte	1,5,5,9
	.half	.L343-.L344
	.byte	3,2,1,5,51,7,9
	.half	.L558-.L343
	.byte	3,2,1,5,64,9
	.half	.L559-.L558
	.byte	1,5,5,9
	.half	.L2-.L559
	.byte	3,5,1,5,1,3,1,1,7,9
	.half	.L134-.L2
	.byte	0,1,1
.L555:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTimerIrq')
	.sect	'.debug_ranges'
.L133:
	.word	-1,.L52,0,.L134-.L52,0,0
.L283:
	.word	-1,.L52,0,.L281-.L52,-1,.L54,0,.L229-.L54,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTriggerIrq')
	.sect	'.debug_info'
.L135:
	.word	305
	.half	3
	.word	.L136
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L138,.L137
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_acknowledgeTriggerIrq',0,1,76,9
	.word	.L239
	.byte	1,1,1
	.word	.L56,.L285,.L55
	.byte	4
	.byte	'driver',0,1,76,66
	.word	.L232,.L286
	.byte	5
	.word	.L56,.L285
	.byte	6
	.byte	'event',0,1,78,13
	.word	.L239,.L287
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTriggerIrq')
	.sect	'.debug_abbrev'
.L136:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTriggerIrq')
	.sect	'.debug_line'
.L137:
	.word	.L561-.L560
.L560:
	.half	3
	.word	.L563-.L562
.L562:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L563:
	.byte	5,9,7,0,5,2
	.word	.L56
	.byte	3,203,0,1,5,51,9
	.half	.L346-.L56
	.byte	3,4,1,5,64,9
	.half	.L345-.L346
	.byte	1,5,11,9
	.half	.L347-.L345
	.byte	1,5,5,9
	.half	.L348-.L347
	.byte	3,2,1,5,50,7,9
	.half	.L564-.L348
	.byte	3,2,1,5,63,9
	.half	.L565-.L564
	.byte	1,5,5,9
	.half	.L4-.L565
	.byte	3,5,1,5,1,3,1,1,7,9
	.half	.L139-.L4
	.byte	0,1,1
.L561:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTriggerIrq')
	.sect	'.debug_ranges'
.L138:
	.word	-1,.L56,0,.L139-.L56,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_addToChannelMask')
	.sect	'.debug_info'
.L140:
	.word	297
	.half	3
	.word	.L141
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L143,.L142
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_addToChannelMask',0,1,93,6,1,1,1
	.word	.L58,.L288,.L57
	.byte	4
	.byte	'driver',0,1,93,58
	.word	.L232,.L289
	.byte	4
	.byte	'channel',0,1,93,80
	.word	.L258,.L290
	.byte	5
	.word	.L58,.L288
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_addToChannelMask')
	.sect	'.debug_abbrev'
.L141:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_addToChannelMask')
	.sect	'.debug_line'
.L142:
	.word	.L567-.L566
.L566:
	.half	3
	.word	.L569-.L568
.L568:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L569:
	.byte	5,6,7,0,5,2
	.word	.L58
	.byte	3,220,0,1,5,15,9
	.half	.L351-.L58
	.byte	3,2,1,5,33,9
	.half	.L570-.L351
	.byte	1,5,5,9
	.half	.L571-.L570
	.byte	1,5,9,7,9
	.half	.L572-.L571
	.byte	3,2,1,5,56,7,9
	.half	.L573-.L572
	.byte	3,2,1,5,33,1,5,58,9
	.half	.L574-.L573
	.byte	1,5,53,9
	.half	.L575-.L574
	.byte	1,5,68,9
	.half	.L576-.L575
	.byte	1,5,56,9
	.half	.L7-.L576
	.byte	3,6,1,5,33,1,5,70,9
	.half	.L577-.L7
	.byte	1,5,58,9
	.half	.L349-.L577
	.byte	1,5,53,9
	.half	.L578-.L349
	.byte	1,5,84,9
	.half	.L579-.L578
	.byte	3,1,1,5,107,9
	.half	.L580-.L579
	.byte	1,5,112,9
	.half	.L581-.L580
	.byte	1,5,54,9
	.half	.L350-.L581
	.byte	1,5,109,9
	.half	.L582-.L350
	.byte	3,1,1,5,104,9
	.half	.L583-.L582
	.byte	1,5,112,9
	.half	.L584-.L583
	.byte	1,5,54,9
	.half	.L585-.L584
	.byte	1,5,1,9
	.half	.L586-.L585
	.byte	3,9,1,5,52,7,9
	.half	.L6-.L586
	.byte	3,124,1,5,29,1,5,66,9
	.half	.L587-.L6
	.byte	1,5,54,9
	.half	.L352-.L587
	.byte	1,5,49,9
	.half	.L588-.L352
	.byte	1,5,80,9
	.half	.L8-.L588
	.byte	3,1,1,5,103,1,5,108,9
	.half	.L589-.L8
	.byte	1,5,50,9
	.half	.L353-.L589
	.byte	1,5,105,9
	.half	.L590-.L353
	.byte	3,1,1,5,100,9
	.half	.L591-.L590
	.byte	1,5,108,9
	.half	.L592-.L591
	.byte	1,5,50,9
	.half	.L593-.L592
	.byte	1,5,1,9
	.half	.L594-.L593
	.byte	3,2,1,7,9
	.half	.L144-.L594
	.byte	0,1,1
.L567:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_addToChannelMask')
	.sect	'.debug_ranges'
.L143:
	.word	-1,.L58,0,.L144-.L58,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_applyUpdate')
	.sect	'.debug_info'
.L145:
	.word	363
	.half	3
	.word	.L146
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L148,.L147
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_applyUpdate',0,1,119,6,1,1,1
	.word	.L60,.L291,.L59
	.byte	4
	.byte	'driver',0,1,119,53
	.word	.L232,.L292
	.byte	5
	.word	.L60,.L291
	.byte	6
	.word	.L293,.L60,.L294
	.byte	7
	.word	.L295,.L296
	.byte	7
	.word	.L297,.L298
	.byte	8
	.word	.L299,.L60,.L294
	.byte	0,6
	.word	.L293,.L300,.L10
	.byte	7
	.word	.L295,.L296
	.byte	7
	.word	.L297,.L298
	.byte	8
	.word	.L299,.L300,.L10
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_applyUpdate')
	.sect	'.debug_abbrev'
.L146:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_applyUpdate')
	.sect	'.debug_line'
.L147:
	.word	.L596-.L595
.L595:
	.half	3
	.word	.L598-.L597
.L597:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0
	.byte	'IfxGtm_Tom.h',0,1,0,0,0
.L598:
	.byte	5,50,7,0,5,2
	.word	.L60
	.byte	3,248,0,1,5,90,9
	.half	.L599-.L60
	.byte	1,4,2,5,21,9
	.half	.L600-.L599
	.byte	3,156,3,1,4,1,5,20,9
	.half	.L294-.L600
	.byte	3,230,124,1,5,5,9
	.half	.L601-.L294
	.byte	1,5,94,7,9
	.half	.L300-.L601
	.byte	3,2,1,4,2,5,21,9
	.half	.L602-.L300
	.byte	3,152,3,1,4,1,5,1,9
	.half	.L10-.L602
	.byte	3,234,124,1,7,9
	.half	.L149-.L10
	.byte	0,1,1
.L596:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_applyUpdate')
	.sect	'.debug_ranges'
.L148:
	.word	-1,.L60,0,.L149-.L60,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_disableUpdate')
	.sect	'.debug_info'
.L150:
	.word	367
	.half	3
	.word	.L151
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L153,.L152
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_disableUpdate',0,1,130,1,6,1,1,1
	.word	.L62,.L301,.L61
	.byte	4
	.byte	'driver',0,1,130,1,55
	.word	.L232,.L302
	.byte	5
	.word	.L62,.L301
	.byte	6
	.word	.L293,.L62,.L303
	.byte	7
	.word	.L295,.L304
	.byte	7
	.word	.L297,.L305
	.byte	8
	.word	.L299,.L62,.L303
	.byte	0,6
	.word	.L293,.L306,.L11
	.byte	7
	.word	.L295,.L304
	.byte	7
	.word	.L297,.L305
	.byte	8
	.word	.L299,.L306,.L11
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_disableUpdate')
	.sect	'.debug_abbrev'
.L151:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_disableUpdate')
	.sect	'.debug_line'
.L152:
	.word	.L604-.L603
.L603:
	.half	3
	.word	.L606-.L605
.L605:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0
	.byte	'IfxGtm_Tom.h',0,1,0,0,0
.L606:
	.byte	5,50,7,0,5,2
	.word	.L62
	.byte	3,131,1,1,5,92,9
	.half	.L607-.L62
	.byte	1,4,2,5,21,9
	.half	.L608-.L607
	.byte	3,145,3,1,4,1,5,20,9
	.half	.L303-.L608
	.byte	3,241,124,1,5,5,9
	.half	.L609-.L303
	.byte	1,5,96,7,9
	.half	.L306-.L609
	.byte	3,2,1,4,2,5,21,9
	.half	.L610-.L306
	.byte	3,141,3,1,4,1,5,1,9
	.half	.L11-.L610
	.byte	3,245,124,1,7,9
	.half	.L154-.L11
	.byte	0,1,1
.L604:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_disableUpdate')
	.sect	'.debug_ranges'
.L153:
	.word	-1,.L62,0,.L154-.L62,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_getFrequency')
	.sect	'.debug_info'
.L155:
	.word	279
	.half	3
	.word	.L156
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L158,.L157
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_getFrequency',0,1,141,1,9
	.word	.L307
	.byte	1,1,1
	.word	.L64,.L308,.L63
	.byte	4
	.byte	'driver',0,1,141,1,57
	.word	.L232,.L309
	.byte	5
	.word	.L64,.L308
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_getFrequency')
	.sect	'.debug_abbrev'
.L156:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_getFrequency')
	.sect	'.debug_line'
.L157:
	.word	.L612-.L611
.L611:
	.half	3
	.word	.L614-.L613
.L613:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0,0
.L614:
	.byte	5,77,7,0,5,2
	.word	.L64
	.byte	3,142,1,1,5,53,9
	.half	.L615-.L64
	.byte	1,4,2,5,12,9
	.half	.L616-.L615
	.byte	3,169,2,1,4,1,9
	.half	.L617-.L616
	.byte	3,215,125,1,4,2,5,18,9
	.half	.L618-.L617
	.byte	3,169,2,1,4,1,5,16,9
	.half	.L619-.L618
	.byte	3,215,125,1,5,1,3,1,1,7,9
	.half	.L159-.L619
	.byte	0,1,1
.L612:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_getFrequency')
	.sect	'.debug_ranges'
.L158:
	.word	-1,.L64,0,.L159-.L64,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_getInputFrequency')
	.sect	'.debug_info'
.L160:
	.word	284
	.half	3
	.word	.L161
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L163,.L162
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_getInputFrequency',0,1,147,1,9
	.word	.L307
	.byte	1,1,1
	.word	.L66,.L310,.L65
	.byte	4
	.byte	'driver',0,1,147,1,62
	.word	.L232,.L311
	.byte	5
	.word	.L66,.L310
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_getInputFrequency')
	.sect	'.debug_abbrev'
.L161:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_getInputFrequency')
	.sect	'.debug_line'
.L162:
	.word	.L621-.L620
.L620:
	.half	3
	.word	.L623-.L622
.L622:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L623:
	.byte	5,24,7,0,5,2
	.word	.L66
	.byte	3,148,1,1,5,1,9
	.half	.L624-.L66
	.byte	3,1,1,7,9
	.half	.L164-.L624
	.byte	0,1,1
.L621:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_getInputFrequency')
	.sect	'.debug_ranges'
.L163:
	.word	-1,.L66,0,.L164-.L66,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_getPeriod')
	.sect	'.debug_info'
.L165:
	.word	276
	.half	3
	.word	.L166
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L168,.L167
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_getPeriod',0,1,159,1,16
	.word	.L230
	.byte	1,1,1
	.word	.L70,.L312,.L69
	.byte	4
	.byte	'driver',0,1,159,1,61
	.word	.L232,.L313
	.byte	5
	.word	.L70,.L312
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_getPeriod')
	.sect	'.debug_abbrev'
.L166:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_getPeriod')
	.sect	'.debug_line'
.L167:
	.word	.L626-.L625
.L625:
	.half	3
	.word	.L628-.L627
.L627:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L628:
	.byte	5,24,7,0,5,2
	.word	.L70
	.byte	3,160,1,1,5,1,9
	.half	.L629-.L70
	.byte	3,1,1,7,9
	.half	.L169-.L629
	.byte	0,1,1
.L626:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_getPeriod')
	.sect	'.debug_ranges'
.L168:
	.word	-1,.L70,0,.L169-.L70,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_getResolution')
	.sect	'.debug_info'
.L170:
	.word	280
	.half	3
	.word	.L171
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L173,.L172
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_getResolution',0,1,171,1,9
	.word	.L307
	.byte	1,1,1
	.word	.L74,.L314,.L73
	.byte	4
	.byte	'driver',0,1,171,1,58
	.word	.L232,.L315
	.byte	5
	.word	.L74,.L314
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_getResolution')
	.sect	'.debug_abbrev'
.L171:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_getResolution')
	.sect	'.debug_line'
.L172:
	.word	.L631-.L630
.L630:
	.half	3
	.word	.L633-.L632
.L632:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L633:
	.byte	5,12,7,0,5,2
	.word	.L74
	.byte	3,172,1,1,5,30,1,5,16,9
	.half	.L634-.L74
	.byte	1,5,1,3,1,1,7,9
	.half	.L174-.L634
	.byte	0,1,1
.L631:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_getResolution')
	.sect	'.debug_ranges'
.L173:
	.word	-1,.L74,0,.L174-.L74,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_getTrigger')
	.sect	'.debug_info'
.L175:
	.word	277
	.half	3
	.word	.L176
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L178,.L177
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_getTrigger',0,1,177,1,16
	.word	.L230
	.byte	1,1,1
	.word	.L76,.L316,.L75
	.byte	4
	.byte	'driver',0,1,177,1,62
	.word	.L232,.L317
	.byte	5
	.word	.L76,.L316
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_getTrigger')
	.sect	'.debug_abbrev'
.L176:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_getTrigger')
	.sect	'.debug_line'
.L177:
	.word	.L636-.L635
.L635:
	.half	3
	.word	.L638-.L637
.L637:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L638:
	.byte	5,46,7,0,5,2
	.word	.L76
	.byte	3,178,1,1,5,59,9
	.half	.L639-.L76
	.byte	1,5,77,9
	.half	.L640-.L639
	.byte	1,5,1,3,1,1,7,9
	.half	.L179-.L640
	.byte	0,1,1
.L636:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_getTrigger')
	.sect	'.debug_ranges'
.L178:
	.word	-1,.L76,0,.L179-.L76,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_run')
	.sect	'.debug_info'
.L180:
	.word	266
	.half	3
	.word	.L181
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L183,.L182
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_run',0,1,231,2,6,1,1,1
	.word	.L86,.L318,.L85
	.byte	4
	.byte	'driver',0,1,231,2,45
	.word	.L232,.L319
	.byte	5
	.word	.L86,.L318
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_run')
	.sect	'.debug_abbrev'
.L181:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_run')
	.sect	'.debug_line'
.L182:
	.word	.L642-.L641
.L641:
	.half	3
	.word	.L644-.L643
.L643:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L644:
	.byte	5,76,7,0,5,2
	.word	.L86
	.byte	3,232,2,1,5,6,3,126,1,5,79,9
	.half	.L395-.L86
	.byte	3,2,1,5,46,1,5,71,9
	.half	.L394-.L395
	.byte	1,5,79,9
	.half	.L645-.L394
	.byte	1,5,20,9
	.half	.L646-.L645
	.byte	3,2,1,5,5,9
	.half	.L647-.L646
	.byte	1,5,80,7,9
	.half	.L648-.L647
	.byte	3,2,1,5,75,1,5,83,9
	.half	.L649-.L648
	.byte	1,5,1,9
	.half	.L45-.L649
	.byte	3,2,1,7,9
	.half	.L184-.L45
	.byte	0,1,1
.L642:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_run')
	.sect	'.debug_ranges'
.L183:
	.word	-1,.L86,0,.L184-.L86,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_setFrequency')
	.sect	'.debug_info'
.L185:
	.word	302
	.half	3
	.word	.L186
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L188,.L187
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_setFrequency',0,1,242,2,9
	.word	.L239
	.byte	1,1,1
	.word	.L88,.L320,.L87
	.byte	4
	.byte	'driver',0,1,242,2,57
	.word	.L232,.L321
	.byte	4
	.byte	'frequency',0,1,242,2,73
	.word	.L307,.L322
	.byte	5
	.word	.L88,.L320
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_setFrequency')
	.sect	'.debug_abbrev'
.L186:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_setFrequency')
	.sect	'.debug_line'
.L187:
	.word	.L651-.L650
.L650:
	.half	3
	.word	.L653-.L652
.L652:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0,0
.L653:
	.byte	5,76,7,0,5,2
	.word	.L88
	.byte	3,243,2,1,5,80,9
	.half	.L654-.L88
	.byte	1,5,64,1,4,2,5,20,9
	.half	.L655-.L654
	.byte	3,207,0,1,4,1,5,1,9
	.half	.L189-.L655
	.byte	3,180,127,0,1,1
.L651:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_setFrequency')
	.sect	'.debug_ranges'
.L188:
	.word	-1,.L88,0,.L189-.L88,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_setPeriod')
	.sect	'.debug_info'
.L190:
	.word	296
	.half	3
	.word	.L191
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L193,.L192
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_setPeriod',0,1,250,2,9
	.word	.L239
	.byte	1,1,1
	.word	.L90,.L323,.L89
	.byte	4
	.byte	'driver',0,1,250,2,54
	.word	.L232,.L324
	.byte	4
	.byte	'period',0,1,250,2,77
	.word	.L230,.L325
	.byte	5
	.word	.L90,.L323
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_setPeriod')
	.sect	'.debug_abbrev'
.L191:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_setPeriod')
	.sect	'.debug_line'
.L192:
	.word	.L657-.L656
.L656:
	.half	3
	.word	.L659-.L658
.L658:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L659:
	.byte	5,9,7,0,5,2
	.word	.L90
	.byte	3,249,2,1,5,25,9
	.half	.L398-.L90
	.byte	3,2,1,5,46,9
	.half	.L397-.L398
	.byte	3,1,1,5,75,9
	.half	.L399-.L397
	.byte	1,5,15,9
	.half	.L660-.L399
	.byte	3,2,1,5,41,9
	.half	.L661-.L660
	.byte	1,5,5,9
	.half	.L662-.L661
	.byte	1,5,50,7,9
	.half	.L663-.L662
	.byte	3,2,1,5,81,9
	.half	.L664-.L663
	.byte	1,5,12,9
	.half	.L47-.L664
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L194-.L47
	.byte	0,1,1
.L657:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_setPeriod')
	.sect	'.debug_ranges'
.L193:
	.word	-1,.L90,0,.L194-.L90,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_setSingleMode')
	.sect	'.debug_info'
.L195:
	.word	297
	.half	3
	.word	.L196
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L198,.L197
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_setSingleMode',0,1,136,3,6,1,1,1
	.word	.L92,.L326,.L91
	.byte	4
	.byte	'driver',0,1,136,3,55
	.word	.L232,.L327
	.byte	4
	.byte	'enabled',0,1,136,3,71
	.word	.L239,.L328
	.byte	5
	.word	.L92,.L326
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_setSingleMode')
	.sect	'.debug_abbrev'
.L196:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_setSingleMode')
	.sect	'.debug_line'
.L197:
	.word	.L666-.L665
.L665:
	.half	3
	.word	.L668-.L667
.L667:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L668:
	.byte	5,6,7,0,5,2
	.word	.L92
	.byte	3,135,3,1,5,40,3,2,1,5,53,9
	.half	.L402-.L92
	.byte	1,5,69,9
	.half	.L401-.L402
	.byte	1,5,1,9
	.half	.L199-.L401
	.byte	3,1,0,1,1
.L666:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_setSingleMode')
	.sect	'.debug_ranges'
.L198:
	.word	-1,.L92,0,.L199-.L92,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_setTrigger')
	.sect	'.debug_info'
.L200:
	.word	299
	.half	3
	.word	.L201
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L203,.L202
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_setTrigger',0,1,142,3,6,1,1,1
	.word	.L94,.L329,.L93
	.byte	4
	.byte	'driver',0,1,142,3,52
	.word	.L232,.L330
	.byte	4
	.byte	'triggerPoint',0,1,142,3,75
	.word	.L230,.L331
	.byte	5
	.word	.L94,.L329
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_setTrigger')
	.sect	'.debug_abbrev'
.L201:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_setTrigger')
	.sect	'.debug_line'
.L202:
	.word	.L670-.L669
.L669:
	.half	3
	.word	.L672-.L671
.L671:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L672:
	.byte	5,45,7,0,5,2
	.word	.L94
	.byte	3,143,3,1,5,58,9
	.half	.L673-.L94
	.byte	1,5,89,9
	.half	.L674-.L673
	.byte	1,5,1,9
	.half	.L204-.L674
	.byte	3,1,0,1,1
.L670:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_setTrigger')
	.sect	'.debug_ranges'
.L203:
	.word	-1,.L94,0,.L204-.L94,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_stdIfTimerInit')
	.sect	'.debug_info'
.L205:
	.word	300
	.half	3
	.word	.L206
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L208,.L207
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_stdIfTimerInit',0,1,148,3,9
	.word	.L239
	.byte	1,1,1
	.word	.L96,.L332,.L95
	.byte	4
	.byte	'stdif',0,1,148,3,57
	.word	.L333,.L334
	.byte	4
	.byte	'driver',0,1,148,3,82
	.word	.L232,.L335
	.byte	5
	.word	.L96,.L332
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_stdIfTimerInit')
	.sect	'.debug_abbrev'
.L206:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_stdIfTimerInit')
	.sect	'.debug_line'
.L207:
	.word	.L676-.L675
.L675:
	.half	3
	.word	.L678-.L677
.L677:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L678:
	.byte	5,19,7,0,5,2
	.word	.L96
	.byte	3,150,3,1,5,9,3,125,1,5,22,9
	.half	.L406-.L96
	.byte	3,3,1,5,9,3,125,1,5,22,9
	.half	.L407-.L406
	.byte	3,3,1,5,33,9
	.half	.L405-.L407
	.byte	3,4,1,5,34,9
	.half	.L679-.L405
	.byte	3,1,1,5,33,9
	.half	.L680-.L679
	.byte	1,5,34,9
	.half	.L681-.L680
	.byte	3,1,1,5,33,9
	.half	.L682-.L681
	.byte	1,5,34,9
	.half	.L683-.L682
	.byte	3,1,1,5,33,9
	.half	.L684-.L683
	.byte	1,5,34,9
	.half	.L685-.L684
	.byte	3,1,1,5,33,9
	.half	.L686-.L685
	.byte	1,5,34,9
	.half	.L687-.L686
	.byte	3,1,1,5,33,9
	.half	.L688-.L687
	.byte	1,5,34,9
	.half	.L689-.L688
	.byte	3,1,1,5,33,9
	.half	.L690-.L689
	.byte	1,5,34,9
	.half	.L691-.L690
	.byte	3,1,1,5,33,9
	.half	.L692-.L691
	.byte	1,5,34,9
	.half	.L693-.L692
	.byte	3,1,1,5,33,9
	.half	.L694-.L693
	.byte	1,5,34,9
	.half	.L695-.L694
	.byte	3,1,1,5,33,9
	.half	.L696-.L695
	.byte	1,5,34,9
	.half	.L697-.L696
	.byte	3,1,1,5,33,9
	.half	.L698-.L697
	.byte	1,5,34,9
	.half	.L699-.L698
	.byte	3,1,1,5,33,9
	.half	.L700-.L699
	.byte	1,5,34,9
	.half	.L701-.L700
	.byte	3,1,1,5,33,9
	.half	.L702-.L701
	.byte	1,5,34,9
	.half	.L703-.L702
	.byte	3,1,1,5,33,9
	.half	.L704-.L703
	.byte	1,5,34,9
	.half	.L705-.L704
	.byte	3,1,1,5,33,9
	.half	.L706-.L705
	.byte	1,5,34,9
	.half	.L707-.L706
	.byte	3,1,1,5,33,9
	.half	.L708-.L707
	.byte	1,5,34,9
	.half	.L709-.L708
	.byte	3,1,1,5,33,9
	.half	.L710-.L709
	.byte	1,5,12,9
	.half	.L711-.L710
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L209-.L711
	.byte	0,1,1
.L676:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_stdIfTimerInit')
	.sect	'.debug_ranges'
.L208:
	.word	-1,.L96,0,.L209-.L96,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_stop')
	.sect	'.debug_info'
.L210:
	.word	267
	.half	3
	.word	.L211
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L213,.L212
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_stop',0,1,178,3,6,1,1,1
	.word	.L98,.L336,.L97
	.byte	4
	.byte	'driver',0,1,178,3,46
	.word	.L232,.L337
	.byte	5
	.word	.L98,.L336
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_stop')
	.sect	'.debug_abbrev'
.L211:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_stop')
	.sect	'.debug_line'
.L212:
	.word	.L713-.L712
.L712:
	.half	3
	.word	.L715-.L714
.L714:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L715:
	.byte	5,6,7,0,5,2
	.word	.L98
	.byte	3,177,3,1,5,46,9
	.half	.L409-.L98
	.byte	3,2,1,5,51,9
	.half	.L408-.L409
	.byte	1,5,74,1,5,79,9
	.half	.L716-.L408
	.byte	1,5,20,9
	.half	.L717-.L716
	.byte	3,2,1,5,5,9
	.half	.L718-.L717
	.byte	1,5,55,7,9
	.half	.L719-.L718
	.byte	3,2,1,5,78,1,5,83,9
	.half	.L720-.L719
	.byte	1,5,1,9
	.half	.L50-.L720
	.byte	3,2,1,7,9
	.half	.L214-.L50
	.byte	0,1,1
.L713:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_stop')
	.sect	'.debug_ranges'
.L213:
	.word	-1,.L98,0,.L214-.L98,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Timer_updateInputFrequency')
	.sect	'.debug_info'
.L215:
	.word	283
	.half	3
	.word	.L216
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L218,.L217
	.byte	2
	.word	.L101
	.byte	3
	.byte	'IfxGtm_Tom_Timer_updateInputFrequency',0,1,189,3,6,1,1,1
	.word	.L100,.L338,.L99
	.byte	4
	.byte	'driver',0,1,189,3,62
	.word	.L232,.L339
	.byte	5
	.word	.L100,.L338
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Timer_updateInputFrequency')
	.sect	'.debug_abbrev'
.L216:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Timer_updateInputFrequency')
	.sect	'.debug_line'
.L217:
	.word	.L722-.L721
.L721:
	.half	3
	.word	.L724-.L723
.L723:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L724:
	.byte	5,6,7,0,5,2
	.word	.L100
	.byte	3,188,3,1,5,68,9
	.half	.L411-.L100
	.byte	3,2,1,5,81,9
	.half	.L410-.L411
	.byte	1,5,94,9
	.half	.L725-.L410
	.byte	1,5,28,9
	.half	.L726-.L725
	.byte	1,5,1,9
	.half	.L727-.L726
	.byte	3,1,1,7,9
	.half	.L219-.L727
	.byte	0,1,1
.L722:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Timer_updateInputFrequency')
	.sect	'.debug_ranges'
.L218:
	.word	-1,.L100,0,.L219-.L100,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L220:
	.word	224
	.half	3
	.word	.L221
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L223,.L222
	.byte	2
	.word	.L101
	.byte	3
	.byte	'.cocofun_1',0,1,189,1,9,1
	.word	.L82,.L224,.L81
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L221:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L222:
	.word	.L729-.L728
.L728:
	.half	3
	.word	.L731-.L730
.L730:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0
	.byte	'IfxSrc.h',0,1,0,0,0
.L731:
	.byte	4,2,5,11,7,0,5,2
	.word	.L82
	.byte	3,148,2,1,5,17,9
	.half	.L732-.L82
	.byte	1,5,11,9
	.half	.L733-.L732
	.byte	3,103,1,5,17,9
	.half	.L734-.L733
	.byte	1,5,11,9
	.half	.L735-.L734
	.byte	3,18,1,5,16,9
	.half	.L736-.L735
	.byte	1,9
	.half	.L224-.L736
	.byte	0,1,1,4,2,5,11,0,5,2
	.word	.L82
	.byte	3,148,2,1,5,17,9
	.half	.L732-.L82
	.byte	1,5,11,9
	.half	.L733-.L732
	.byte	3,103,1,5,17,9
	.half	.L734-.L733
	.byte	1,5,11,9
	.half	.L735-.L734
	.byte	3,18,1,5,16,9
	.half	.L736-.L735
	.byte	1,9
	.half	.L224-.L736
	.byte	0,1,1
.L729:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L223:
	.word	-1,.L82,0,.L224-.L82,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_2')
	.sect	'.debug_info'
.L225:
	.word	223
	.half	3
	.word	.L226
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L228,.L227
	.byte	2
	.word	.L101
	.byte	3
	.byte	'.cocofun_2',0,1,59,9,1
	.word	.L54,.L229,.L53
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_2')
	.sect	'.debug_abbrev'
.L226:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_2')
	.sect	'.debug_line'
.L227:
	.word	.L738-.L737
.L737:
	.half	3
	.word	.L740-.L739
.L739:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.c',0,0,0,0,0
.L740:
	.byte	5,52,7,0,5,2
	.word	.L54
	.byte	3,62,1,5,65,9
	.half	.L341-.L54
	.byte	1,9
	.half	.L229-.L341
	.byte	0,1,1,5,51,0,5,2
	.word	.L54
	.byte	3,194,0,1,5,64,9
	.half	.L341-.L54
	.byte	1,5,65,9
	.half	.L741-.L341
	.byte	3,124,1,7,9
	.half	.L229-.L741
	.byte	0,1,1,5,40,0,5,2
	.word	.L54
	.byte	3,240,1,1,5,53,9
	.half	.L341-.L54
	.byte	1,5,65,9
	.half	.L741-.L341
	.byte	3,206,126,1,7,9
	.half	.L229-.L741
	.byte	0,1,1,5,42,0,5,2
	.word	.L54
	.byte	3,241,1,1,5,55,9
	.half	.L341-.L54
	.byte	1,5,65,9
	.half	.L741-.L341
	.byte	3,205,126,1,7,9
	.half	.L229-.L741
	.byte	0,1,1,5,41,0,5,2
	.word	.L54
	.byte	3,129,2,1,5,54,9
	.half	.L341-.L54
	.byte	1,5,65,9
	.half	.L741-.L341
	.byte	3,189,126,1,7,9
	.half	.L229-.L741
	.byte	0,1,1,5,46,0,5,2
	.word	.L54
	.byte	3,252,2,1,5,59,9
	.half	.L341-.L54
	.byte	1,5,65,9
	.half	.L741-.L341
	.byte	3,194,125,1,7,9
	.half	.L229-.L741
	.byte	0,1,1
.L738:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_2')
	.sect	'.debug_ranges'
.L228:
	.word	-1,.L54,0,.L229-.L54,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L81:
	.word	-1,.L82,0,.L224-.L82
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_2')
	.sect	'.debug_loc'
.L53:
	.word	-1,.L54,0,.L229-.L54
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTimerIrq')
	.sect	'.debug_loc'
.L51:
	.word	-1,.L52,0,.L281-.L52
	.half	2
	.byte	138,0
	.word	0,0
.L282:
	.word	-1,.L52,0,.L340-.L52
	.half	1
	.byte	100
	.word	.L54-.L52,.L229-.L52
	.half	1
	.byte	111
	.word	.L54-.L52,.L341-.L52
	.half	1
	.byte	100
	.word	.L342-.L52,.L281-.L52
	.half	1
	.byte	111
	.word	0,0
.L284:
	.word	-1,.L52,.L54-.L52,.L229-.L52
	.half	1
	.byte	95
	.word	.L54-.L52,.L229-.L52
	.half	1
	.byte	82
	.word	.L343-.L52,.L281-.L52
	.half	1
	.byte	95
	.word	.L344-.L52,.L2-.L52
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTriggerIrq')
	.sect	'.debug_loc'
.L55:
	.word	-1,.L56,0,.L285-.L56
	.half	2
	.byte	138,0
	.word	0,0
.L286:
	.word	-1,.L56,0,.L345-.L56
	.half	1
	.byte	100
	.word	.L346-.L56,.L285-.L56
	.half	1
	.byte	111
	.word	0,0
.L287:
	.word	-1,.L56,.L347-.L56,.L4-.L56
	.half	1
	.byte	82
	.word	.L348-.L56,.L285-.L56
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_addToChannelMask')
	.sect	'.debug_loc'
.L57:
	.word	-1,.L58,0,.L288-.L58
	.half	2
	.byte	138,0
	.word	0,0
.L290:
	.word	-1,.L58,0,.L349-.L58
	.half	1
	.byte	84
	.word	.L6-.L58,.L352-.L58
	.half	1
	.byte	84
	.word	0,0
.L289:
	.word	-1,.L58,0,.L350-.L58
	.half	1
	.byte	100
	.word	.L351-.L58,.L288-.L58
	.half	1
	.byte	111
	.word	.L6-.L58,.L353-.L58
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_applyUpdate')
	.sect	'.debug_loc'
.L59:
	.word	-1,.L60,0,.L291-.L60
	.half	2
	.byte	138,0
	.word	0,0
.L298:
	.word	0,0
.L292:
	.word	-1,.L60,0,.L291-.L60
	.half	1
	.byte	100
	.word	0,0
.L296:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_disableUpdate')
	.sect	'.debug_loc'
.L61:
	.word	-1,.L62,0,.L301-.L62
	.half	2
	.byte	138,0
	.word	0,0
.L305:
	.word	0,0
.L302:
	.word	-1,.L62,0,.L301-.L62
	.half	1
	.byte	100
	.word	0,0
.L304:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_getFrequency')
	.sect	'.debug_loc'
.L63:
	.word	-1,.L64,0,.L308-.L64
	.half	2
	.byte	138,0
	.word	0,0
.L309:
	.word	-1,.L64,0,.L308-.L64
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_getInputFrequency')
	.sect	'.debug_loc'
.L65:
	.word	-1,.L66,0,.L310-.L66
	.half	2
	.byte	138,0
	.word	0,0
.L311:
	.word	-1,.L66,0,.L310-.L66
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_getOffset')
	.sect	'.debug_loc'
.L67:
	.word	-1,.L68,0,.L231-.L68
	.half	2
	.byte	138,0
	.word	0,0
.L233:
	.word	-1,.L68,0,.L231-.L68
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_getPeriod')
	.sect	'.debug_loc'
.L69:
	.word	-1,.L70,0,.L312-.L70
	.half	2
	.byte	138,0
	.word	0,0
.L313:
	.word	-1,.L70,0,.L312-.L70
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_getPointer')
	.sect	'.debug_loc'
.L71:
	.word	-1,.L72,0,.L235-.L72
	.half	2
	.byte	138,0
	.word	0,0
.L236:
	.word	-1,.L72,0,.L354-.L72
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_getResolution')
	.sect	'.debug_loc'
.L73:
	.word	-1,.L74,0,.L314-.L74
	.half	2
	.byte	138,0
	.word	0,0
.L315:
	.word	-1,.L74,0,.L314-.L74
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_getTrigger')
	.sect	'.debug_loc'
.L75:
	.word	-1,.L76,0,.L316-.L76
	.half	2
	.byte	138,0
	.word	0,0
.L317:
	.word	-1,.L76,0,.L355-.L76
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_getTriggerPointer')
	.sect	'.debug_loc'
.L77:
	.word	-1,.L78,0,.L237-.L78
	.half	2
	.byte	138,0
	.word	0,0
.L238:
	.word	-1,.L78,0,.L356-.L78
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_init')
	.sect	'.debug_loc'
.L79:
	.word	-1,.L80,0,.L240-.L80
	.half	2
	.byte	138,0
	.word	0,0
.L246:
	.word	0,0
.L253:
	.word	0,0
.L243:
	.word	-1,.L80,0,.L357-.L80
	.half	1
	.byte	101
	.word	.L24-.L80,.L359-.L80
	.half	1
	.byte	101
	.word	.L54-.L80,.L229-.L80
	.half	1
	.byte	108
	.word	.L360-.L80,.L251-.L80
	.half	1
	.byte	108
	.word	.L82-.L80,.L386-.L80
	.half	1
	.byte	108
	.word	.L82-.L80,.L224-.L80
	.half	1
	.byte	108
	.word	.L388-.L80,.L240-.L80
	.half	1
	.byte	108
	.word	0,0
.L241:
	.word	-1,.L80,0,.L358-.L80
	.half	1
	.byte	100
	.word	.L54-.L80,.L229-.L80
	.half	1
	.byte	111
	.word	.L361-.L80,.L251-.L80
	.half	1
	.byte	111
	.word	.L363-.L80,.L364-.L80
	.half	1
	.byte	100
	.word	.L365-.L80,.L366-.L80
	.half	1
	.byte	100
	.word	.L367-.L80,.L368-.L80
	.half	1
	.byte	100
	.word	.L380-.L80,.L29-.L80
	.half	1
	.byte	100
	.word	.L383-.L80,.L28-.L80
	.half	1
	.byte	100
	.word	.L82-.L80,.L386-.L80
	.half	1
	.byte	111
	.word	.L82-.L80,.L224-.L80
	.half	1
	.byte	111
	.word	.L388-.L80,.L240-.L80
	.half	1
	.byte	111
	.word	0,0
.L248:
	.word	-1,.L80,.L367-.L80,.L369-.L80
	.half	1
	.byte	89
	.word	0,0
.L272:
	.word	0,0
.L244:
	.word	-1,.L80,.L54-.L80,.L229-.L80
	.half	1
	.byte	88
	.word	.L362-.L80,.L251-.L80
	.half	1
	.byte	88
	.word	.L82-.L80,.L386-.L80
	.half	1
	.byte	88
	.word	.L82-.L80,.L224-.L80
	.half	1
	.byte	88
	.word	.L388-.L80,.L240-.L80
	.half	1
	.byte	88
	.word	0,0
.L255:
	.word	0,0
.L268:
	.word	0,0
.L262:
	.word	-1,.L80,.L384-.L80,.L34-.L80
	.half	1
	.byte	98
	.word	.L385-.L80,.L42-.L80
	.half	1
	.byte	98
	.word	.L82-.L80,.L386-.L80
	.half	1
	.byte	98
	.word	.L387-.L80,.L43-.L80
	.half	1
	.byte	98
	.word	.L82-.L80,.L224-.L80
	.half	1
	.byte	98
	.word	0,0
.L263:
	.word	-1,.L80,.L82-.L80,.L386-.L80
	.half	1
	.byte	89
	.word	.L82-.L80,.L224-.L80
	.half	1
	.byte	89
	.word	.L389-.L80,.L240-.L80
	.half	1
	.byte	89
	.word	0,0
.L259:
	.word	-1,.L80,.L370-.L80,.L371-.L80
	.half	1
	.byte	95
	.word	.L372-.L80,.L373-.L80
	.half	1
	.byte	84
	.word	.L374-.L80,.L375-.L80
	.half	1
	.byte	84
	.word	.L376-.L80,.L377-.L80
	.half	1
	.byte	84
	.word	0,0
.L260:
	.word	-1,.L80,.L369-.L80,.L28-.L80
	.half	1
	.byte	89
	.word	.L378-.L80,.L379-.L80
	.half	1
	.byte	84
	.word	.L381-.L80,.L382-.L80
	.half	1
	.byte	84
	.word	0,0
.L264:
	.word	-1,.L80,.L82-.L80,.L386-.L80
	.half	1
	.byte	90
	.word	.L82-.L80,.L224-.L80
	.half	1
	.byte	90
	.word	.L390-.L80,.L240-.L80
	.half	1
	.byte	90
	.word	0,0
.L270:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_initConfig')
	.sect	'.debug_loc'
.L83:
	.word	-1,.L84,0,.L276-.L84
	.half	2
	.byte	138,0
	.word	0,0
.L278:
	.word	-1,.L84,0,.L391-.L84
	.half	1
	.byte	100
	.word	.L392-.L84,.L276-.L84
	.half	1
	.byte	111
	.word	0,0
.L280:
	.word	-1,.L84,0,.L391-.L84
	.half	1
	.byte	101
	.word	.L393-.L84,.L276-.L84
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_run')
	.sect	'.debug_loc'
.L85:
	.word	-1,.L86,0,.L318-.L86
	.half	2
	.byte	138,0
	.word	0,0
.L319:
	.word	-1,.L86,0,.L394-.L86
	.half	1
	.byte	100
	.word	.L395-.L86,.L318-.L86
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_setFrequency')
	.sect	'.debug_loc'
.L87:
	.word	-1,.L88,0,.L320-.L88
	.half	2
	.byte	138,0
	.word	0,0
.L321:
	.word	-1,.L88,0,.L320-.L88
	.half	1
	.byte	100
	.word	0,0
.L322:
	.word	-1,.L88,0,.L396-.L88
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_setPeriod')
	.sect	'.debug_loc'
.L89:
	.word	-1,.L90,0,.L323-.L90
	.half	2
	.byte	138,0
	.word	0,0
.L324:
	.word	-1,.L90,0,.L397-.L90
	.half	1
	.byte	100
	.word	.L398-.L90,.L397-.L90
	.half	1
	.byte	111
	.word	.L54-.L90,.L229-.L90
	.half	1
	.byte	111
	.word	.L54-.L90,.L341-.L90
	.half	1
	.byte	100
	.word	.L399-.L90,.L323-.L90
	.half	1
	.byte	111
	.word	0,0
.L325:
	.word	-1,.L90,0,.L397-.L90
	.half	1
	.byte	84
	.word	.L54-.L90,.L229-.L90
	.half	1
	.byte	88
	.word	.L54-.L90,.L229-.L90
	.half	1
	.byte	84
	.word	.L399-.L90,.L323-.L90
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_setSingleMode')
	.sect	'.debug_loc'
.L91:
	.word	-1,.L92,0,.L326-.L92
	.half	2
	.byte	138,0
	.word	0,0
.L327:
	.word	-1,.L92,0,.L400-.L92
	.half	1
	.byte	100
	.word	0,0
.L328:
	.word	-1,.L92,0,.L401-.L92
	.half	1
	.byte	84
	.word	.L402-.L92,.L326-.L92
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_setTrigger')
	.sect	'.debug_loc'
.L93:
	.word	-1,.L94,0,.L329-.L94
	.half	2
	.byte	138,0
	.word	0,0
.L330:
	.word	-1,.L94,0,.L403-.L94
	.half	1
	.byte	100
	.word	0,0
.L331:
	.word	-1,.L94,0,.L404-.L94
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_stdIfTimerInit')
	.sect	'.debug_loc'
.L95:
	.word	-1,.L96,0,.L332-.L96
	.half	2
	.byte	138,0
	.word	0,0
.L335:
	.word	-1,.L96,0,.L405-.L96
	.half	1
	.byte	101
	.word	.L407-.L96,.L332-.L96
	.half	1
	.byte	108
	.word	0,0
.L334:
	.word	-1,.L96,0,.L405-.L96
	.half	1
	.byte	100
	.word	.L406-.L96,.L332-.L96
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_stop')
	.sect	'.debug_loc'
.L97:
	.word	-1,.L98,0,.L336-.L98
	.half	2
	.byte	138,0
	.word	0,0
.L337:
	.word	-1,.L98,0,.L408-.L98
	.half	1
	.byte	100
	.word	.L409-.L98,.L336-.L98
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Timer_updateInputFrequency')
	.sect	'.debug_loc'
.L99:
	.word	-1,.L100,0,.L338-.L100
	.half	2
	.byte	138,0
	.word	0,0
.L339:
	.word	-1,.L100,0,.L410-.L100
	.half	1
	.byte	100
	.word	.L411-.L100,.L338-.L100
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L742:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTimerIrq')
	.sect	'.debug_frame'
	.word	12
	.word	.L742,.L52,.L281-.L52
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_acknowledgeTriggerIrq')
	.sect	'.debug_frame'
	.word	12
	.word	.L742,.L56,.L285-.L56
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_addToChannelMask')
	.sect	'.debug_frame'
	.word	12
	.word	.L742,.L58,.L288-.L58
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_applyUpdate')
	.sect	'.debug_frame'
	.word	24
	.word	.L742,.L60,.L291-.L60
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_disableUpdate')
	.sect	'.debug_frame'
	.word	24
	.word	.L742,.L62,.L301-.L62
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_getFrequency')
	.sect	'.debug_frame'
	.word	24
	.word	.L742,.L64,.L308-.L64
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_getInputFrequency')
	.sect	'.debug_frame'
	.word	24
	.word	.L742,.L66,.L310-.L66
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_getOffset')
	.sect	'.debug_frame'
	.word	24
	.word	.L742,.L68,.L231-.L68
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_getPeriod')
	.sect	'.debug_frame'
	.word	24
	.word	.L742,.L70,.L312-.L70
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_getPointer')
	.sect	'.debug_frame'
	.word	12
	.word	.L742,.L72,.L235-.L72
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_getResolution')
	.sect	'.debug_frame'
	.word	24
	.word	.L742,.L74,.L314-.L74
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_getTrigger')
	.sect	'.debug_frame'
	.word	12
	.word	.L742,.L76,.L316-.L76
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_getTriggerPointer')
	.sect	'.debug_frame'
	.word	12
	.word	.L742,.L78,.L237-.L78
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_init')
	.sect	'.debug_frame'
	.word	12
	.word	.L742,.L80,.L240-.L80
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_initConfig')
	.sect	'.debug_frame'
	.word	12
	.word	.L742,.L84,.L276-.L84
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_run')
	.sect	'.debug_frame'
	.word	12
	.word	.L742,.L86,.L318-.L86
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_setFrequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L742,.L88,.L320-.L88
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_setPeriod')
	.sect	'.debug_frame'
	.word	12
	.word	.L742,.L90,.L323-.L90
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_setSingleMode')
	.sect	'.debug_frame'
	.word	12
	.word	.L742,.L92,.L326-.L92
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_setTrigger')
	.sect	'.debug_frame'
	.word	12
	.word	.L742,.L94,.L329-.L94
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_stdIfTimerInit')
	.sect	'.debug_frame'
	.word	12
	.word	.L742,.L96,.L332-.L96
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_stop')
	.sect	'.debug_frame'
	.word	12
	.word	.L742,.L98,.L336-.L98
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Timer_updateInputFrequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L742,.L100,.L338-.L100
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L743:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_2')
	.sect	'.debug_frame'
	.word	24
	.word	.L743,.L54,.L229-.L54
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L743,.L82,.L224-.L82
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
