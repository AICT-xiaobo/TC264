	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99293038"
	.compiler_invocation	"ctc --dep-file=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\.IfxGtm_Tom_PwmHl.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc26x -D__CPU_TC26X__ --core=tc1.6.x --iso=99 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\User -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Driver -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -g2 --make-target=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.src ..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c"
	.compiler_name		"ctc"
	;source	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c'

	
$TC16X
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_getDeadtime',code,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_getDeadtime'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_getDeadtime

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     2   * \file IfxGtm_Tom_PwmHl.c
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     3   * \brief GTM PWMHL details
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     4   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     5   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     7   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	     9   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    10   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    16  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    19  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    25   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    26  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    32   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    33  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    41  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    42   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    43   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    44  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    45  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    46  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    47  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    48  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    49  #include "IfxGtm_Tom_PwmHl.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    50  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    51  #include "stddef.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    52  #include "string.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    53  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    54  /** \addtogroup IfxLld_Gtm_Tom_PwmHl_PwmHl_StdIf_Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    55   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    56  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    57  /*------------------------Inline Function Prototypes--------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    58  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    59  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    60  /** \brief Inverts the active state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    61   * \param activeState Active state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    62   * \return State
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    63   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    64  IFX_INLINE Ifx_ActiveState IfxGtm_Tom_PwmHl_invertActiveState(Ifx_ActiveState activeState);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    65  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    66  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    67  /*-----------------------Private Function Prototypes--------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    68  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    69  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    70  /** \brief Sets switched to OFF
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    71   * \param driver GTM TOM PWM driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    72   * \param tOn ON time
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    73   * \param shift Shift value in ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    74   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    75   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    76  IFX_STATIC void IfxGtm_Tom_PwmHl_updateAndShiftOff(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    77  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    78  /** \brief Updates the x output duty cycle in center aligned and center aligned inverted modes
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    79   * \param driver GTM TOM PWM driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    80   * \param tOn T on
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    81   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    82   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    83  IFX_STATIC void IfxGtm_Tom_PwmHl_updateCenterAligned(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    84  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    85  /** \brief Updates the x output duty cycle in edge aligned modes (left and right aligned)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    86   * \param driver GTM TOM PWM driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    87   * \param tOn T on
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    88   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    89   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    90  IFX_STATIC void IfxGtm_Tom_PwmHl_updateEdgeAligned(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    91  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    92  /** \brief Set the outputs to inactive
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    93   * \param driver GTM TOM PWM driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    94   * \param tOn T on
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    95   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    96   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    97  IFX_STATIC void IfxGtm_Tom_PwmHl_updateOff(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    98  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	    99  /** \brief Update Pulse
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   100   * \param driver GTM TOM PWM driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   101   * \param tOn ON times. Phase 0 top, phase 1 top, ... phase 0 bottom, phase 1 botteom, ...
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   102   * \param offset Offset value in ticks. Phase 0 top, phase 1 top, ... phase 0 bottom, phase 1 botteom, ...
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   103   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   104   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   105  IFX_STATIC void IfxGtm_Tom_PwmHl_updatePulse(IfxGtm_Tom_PwmHl *driver, float32 *tOn, float32 *offset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   106  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   107  /** \brief Set Pulse to OFF
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   108   * \param driver GTM TOM PWM driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   109   * \param tOn ON times. Phase 0 top, phase 1 top, ... phase 0 bottom, phase 1 botteom, ...
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   110   * \param offset Offset value in ticks. Phase 0 top, phase 1 top, ... phase 0 bottom, phase 1 botteom, ...
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   111   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   112   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   113  IFX_STATIC void IfxGtm_Tom_PwmHl_updatePulseOff(IfxGtm_Tom_PwmHl *driver, float32 *tOn, float32 *offset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   114  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   115  /** \brief Update Shift Center Aligned
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   116   * \param driver GTM TOM PWM driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   117   * \param tOn ON time
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   118   * \param shift Shift value in ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   119   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   120   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   121  IFX_STATIC void IfxGtm_Tom_PwmHl_updateShiftCenterAligned(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   122  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   123  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   124  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   125  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   126  /*------------------------Private Variables/Constants-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   127  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   128  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   129  IFX_STATIC IFX_CONST IfxGtm_Tom_PwmHl_Mode IfxGtm_Tom_PwmHl_modes[Ifx_Pwm_Mode_off + 1] = {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   130      {Ifx_Pwm_Mode_centerAligned,         FALSE, &IfxGtm_Tom_PwmHl_updateCenterAligned, &IfxGtm_Tom_PwmHl_updateShiftCenterAligned, &IfxGtm_Tom_PwmHl_updatePulse   },
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   131      {Ifx_Pwm_Mode_centerAlignedInverted, TRUE,  &IfxGtm_Tom_PwmHl_updateCenterAligned, &IfxGtm_Tom_PwmHl_updateShiftCenterAligned, &IfxGtm_Tom_PwmHl_updatePulse   },
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   132      {Ifx_Pwm_Mode_leftAligned,           FALSE, &IfxGtm_Tom_PwmHl_updateEdgeAligned,   &IfxGtm_Tom_PwmHl_updateAndShiftOff,        &IfxGtm_Tom_PwmHl_updatePulse   },
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   133      {Ifx_Pwm_Mode_rightAligned,          TRUE,  &IfxGtm_Tom_PwmHl_updateEdgeAligned,   &IfxGtm_Tom_PwmHl_updateAndShiftOff,        &IfxGtm_Tom_PwmHl_updatePulse   },
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   134      {Ifx_Pwm_Mode_off,                   FALSE, &IfxGtm_Tom_PwmHl_updateOff,           &IfxGtm_Tom_PwmHl_updateAndShiftOff,        &IfxGtm_Tom_PwmHl_updatePulseOff}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   135  };
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   136  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   137  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   138  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   139  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   140  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   141  IFX_INLINE Ifx_ActiveState IfxGtm_Tom_PwmHl_invertActiveState(Ifx_ActiveState activeState)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   142  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   143      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   144  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   145  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   146  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   147  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   148  /*-------------------------Function Implementations---------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   149  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   150  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   151  float32 IfxGtm_Tom_PwmHl_getDeadtime(IfxGtm_Tom_PwmHl *driver)
; Function IfxGtm_Tom_PwmHl_getDeadtime
.L101:
IfxGtm_Tom_PwmHl_getDeadtime:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   152  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   153      return IfxStdIf_Timer_tickToS(driver->timer->base.clockFreq, driver->base.deadtime);
	ld.w	d15,[a4]
.L721:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
	fcall	.cocofun_8
.L512:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   154  mHl *driver)
	ret
.L385:
	
__IfxGtm_Tom_PwmHl_getDeadtime_function_end:
	.size	IfxGtm_Tom_PwmHl_getDeadtime,__IfxGtm_Tom_PwmHl_getDeadtime_function_end-IfxGtm_Tom_PwmHl_getDeadtime
.L186:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_8',code,cluster('.cocofun_8')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_8'
	.align	2
; Function .cocofun_8
.L103:
.cocofun_8:	.type	func
; Function body .cocofun_8, coco_iter:0
	ld.a	a15,[a4]20
.L1003:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
	utof	d15,d15
.L1004:
	ld.w	d0,[a15]6
.L1005:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
	div.f	d2,d15,d0
	fret
.L306:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_getMinPulse',code,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_getMinPulse'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_getMinPulse

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   155  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   156      return IfxStdIf_Timer_tickToS(driver->timer->base.clockFreq, driver->base.minPulse - driver->base.deadtime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   157  }
; Function IfxGtm_Tom_PwmHl_getMinPulse
.L105:
IfxGtm_Tom_PwmHl_getMinPulse:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   158  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   159  
	ld.w	d15,[a4]4
.L726:
	ld.w	d0,[a4]
.L727:
	sub	d15,d0
.L728:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
	fcall	.cocofun_8
.L729:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   160  Pwm_Mode IfxGtm_Tom_PwmHl_getMode(IfxGtm_Tom_PwmHl *driver)
	ret
.L388:
	
__IfxGtm_Tom_PwmHl_getMinPulse_function_end:
	.size	IfxGtm_Tom_PwmHl_getMinPulse,__IfxGtm_Tom_PwmHl_getMinPulse_function_end-IfxGtm_Tom_PwmHl_getMinPulse
.L191:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_getMode',code,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_getMode'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_getMode

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   161  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   162      return driver->base.mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   163  }
; Function IfxGtm_Tom_PwmHl_getMode
.L107:
IfxGtm_Tom_PwmHl_getMode:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   164  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   165  
	ld.bu	d2,[a4]12
.L734:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   166  boolean IfxGtm_Tom_PwmHl_init(IfxGtm_Tom_PwmHl *driver, const IfxGtm_Tom_PwmHl_Config *config)
	ret
.L391:
	
__IfxGtm_Tom_PwmHl_getMode_function_end:
	.size	IfxGtm_Tom_PwmHl_getMode,__IfxGtm_Tom_PwmHl_getMode_function_end-IfxGtm_Tom_PwmHl_getMode
.L196:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_init',code,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_init'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_init

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   167  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   168      boolean           result       = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   169      uint16            channelMask;
; Function IfxGtm_Tom_PwmHl_init
.L109:
IfxGtm_Tom_PwmHl_init:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   170      uint16            channelsMask = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   171      uint32            channelIndex;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   172      uint16            maskShift    = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   173      IfxGtm_Tom_Timer *timer        = config->timer;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   174  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   175      driver->base.mode             = Ifx_Pwm_Mode_init;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   176      driver->timer                 = timer;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   177      driver->base.setMode          = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   178      driver->base.inverted         = FALSE;
	mov	d15,#5
	mov.aa	a15,a4
.L516:
	mov.aa	a12,a5
.L517:
	mov	d8,#0
	ld.a	a13,[a12]16
.L518:
	st.b	[a15]12,d15
.L635:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   179      driver->base.ccxActiveState   = config->base.ccxActiveState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   180      driver->base.coutxActiveState = config->base.coutxActiveState;
	mov	d15,d8
	st.a	[a15]20,a13
.L519:
	st.b	[a15]13,d15
.L636:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   181      driver->base.channelCount     = config->base.channelCount;
	st.b	[a15]16,d15
.L637:
	sub.a	a10,#16
.L513:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   182  
	ld.bu	d15,[a12]12
.L520:
	st.b	[a15]14,d15
.L638:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   183      IfxGtm_Tom_PwmHl_setDeadtime(driver, config->base.deadtime);
	ld.bu	d15,[a12]13
.L639:
	st.b	[a15]15,d15
.L640:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   184      IfxGtm_Tom_PwmHl_setMinPulse(driver, config->base.minPulse);
	ld.bu	d15,[a12]8
.L641:
	st.b	[a15]17,d15
.L642:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   185  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   186      driver->tom = &(timer->gtm->TOM[config->tom]);
	ld.w	d4,[a12]
	call	IfxGtm_Tom_PwmHl_setDeadtime
.L514:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   187  
	ld.w	d4,[a12]4
	mov.aa	a4,a15
.L521:
	call	IfxGtm_Tom_PwmHl_setMinPulse
.L522:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   188      /* config->ccx[0] is used for the definition of the TGC */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   189      if (config->ccx[0]->channel <= 7)
	ld.a	a2,[a13]12
.L643:
	ld.bu	d15,[a12]20
	sha	d15,d15,#11
.L644:
	addsc.a	a2,a2,d15,#0
	movh.a	a3,#1
	add.a	a3,a2
	lea	a4,[a3]-32768
.L645:
	st.a	[a15]36,a4
.L646:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   190      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   191          driver->tgc = IfxGtm_Tom_Ch_getTgcPointer(driver->tom, 0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   192      }
	ld.a	a2,[a12]24
.L647:
	ld.a	a2,[a2]
.L648:
	ld.b	d15,[a2]1
.L649:
	mov	d0,#7
.L650:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   193      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   194      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   195          driver->tgc = IfxGtm_Tom_Ch_getTgcPointer(driver->tom, 1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   196      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   197  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   198      maskShift = (config->ccx[0]->channel <= 7) ? 0 : 8;
	lt	d4,d0,d15
	call	IfxGtm_Tom_Ch_getTgcPointer
.L651:
	st.a	[a15]40,a2
.L652:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   199  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   200      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, config->base.channelCount <= IFXGTM_TOM_PWMHL_MAX_NUM_CHANNELS);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   201  
	ld.a	a2,[a12]24
.L359:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   202      IfxGtm_Tom_Ch_ClkSrc clock = IfxGtm_Tom_Ch_getClockSource(timer->tom, timer->timerChannel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   203  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   204      for (channelIndex = 0; channelIndex < config->base.channelCount; channelIndex++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   205      {
	ld.a	a4,[a13]16
.L653:
	ld.b	d4,[a13]29
.L360:
	ld.a	a2,[a2]
.L654:
	ld.b	d15,[a2]1
	ge	d9,d15,#8
.L523:
	sha	d9,#3
	call	IfxGtm_Tom_Ch_getClockSource
.L361:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   206          IfxGtm_Tom_Ch channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   207          /* CCX */
	mov	d10,d2
	mov.aa	a14,a15
.L524:
	mov	d11,#0
	j	.L7
.L8:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   208          channel                   = config->ccx[channelIndex]->channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   209          driver->ccx[channelIndex] = channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   210          channelMask               = 1 << (channel - maskShift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   211          channelsMask             |= channelMask;
	ld.a	a2,[a12]24
.L655:
	addsc.a	a2,a2,d11,#2
	ld.a	a2,[a2]
.L656:
	ld.b	d12,[a2]1
.L525:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   212  
	st.b	[a14]44,d12
.L657:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   213          /* Initialize the timer part */
	fcall	.cocofun_2
.L515:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   214          IfxGtm_Tom_Ch_setClockSource(driver->tom, channel, clock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   215  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   216          /* Initialize the SOUR reset value and enable the channel */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   217          IfxGtm_Tom_Ch_setSignalLevel(driver->tom, channel, !driver->base.inverted
	call	IfxGtm_Tom_Ch_setClockSource
.L527:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   218              ? config->base.ccxActiveState
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   219              : IfxGtm_Tom_PwmHl_invertActiveState(config->base.ccxActiveState));
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   220          IfxGtm_Tom_Tgc_enableChannels(driver->tgc, channelMask, 0, TRUE); /* Write the SOUR outout with !SL */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   221          IfxGtm_Tom_Tgc_enableChannelsOutput(driver->tgc, channelMask, 0, TRUE);
	ld.bu	d5,[a12]12
.L658:
	fcall	.cocofun_6
.L528:
	call	IfxGtm_Tom_Ch_setSignalLevel
.L659:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   222  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   223          /* Set the SL to the required level for run time */
	fcall	.cocofun_7
.L660:
	call	IfxGtm_Tom_Tgc_enableChannels
.L661:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   224          IfxGtm_Tom_Ch_setSignalLevel(driver->tom, channel, driver->base.inverted
	fcall	.cocofun_7
.L530:
	call	IfxGtm_Tom_Tgc_enableChannelsOutput
.L531:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   225              ? config->base.ccxActiveState
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   226              : IfxGtm_Tom_PwmHl_invertActiveState(config->base.ccxActiveState));
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   227          IfxGtm_Tom_Ch_setResetSource(driver->tom, channel, IfxGtm_Tom_Ch_ResetEvent_onTrigger);
	ld.bu	d15,[a15]16
.L662:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   228          IfxGtm_Tom_Ch_setTriggerOutput(driver->tom, channel, IfxGtm_Tom_Ch_OutputTrigger_forward);
	ld.bu	d5,[a12]12
.L663:
	jne	d15,#0,.L12
.L664:
	eq	d5,d5,#0

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   229          IfxGtm_Tom_Ch_setCounterValue(driver->tom, channel, IfxGtm_Tom_Timer_getOffset(driver->timer));
.L12:
	ld.a	a4,[a15]36
.L665:
	mov	d4,d12
	call	IfxGtm_Tom_Ch_setSignalLevel
.L666:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   230  
	mov	d4,d12
	ld.a	a4,[a15]36
.L532:
	mov	d5,#1
	call	IfxGtm_Tom_Ch_setResetSource
.L533:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   231          /*Initialize the port */
	mov	d4,d12
	ld.a	a4,[a15]36
.L534:
	mov	d5,#0
	call	IfxGtm_Tom_Ch_setTriggerOutput
.L535:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   232          if (config->initPins == TRUE)
	ld.a	a4,[a15]20
	call	IfxGtm_Tom_Timer_getOffset
.L667:
	ld.a	a4,[a15]36
.L668:
	mov	e4,d2,d12
	call	IfxGtm_Tom_Ch_setCounterValue
.L669:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   233          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   234              IfxGtm_PinMap_setTomTout(config->ccx[channelIndex],
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   235                  config->base.outputMode, config->base.outputDriver);
	ld.bu	d15,[a12]32
.L670:
	jne	d15,#1,.L13
.L671:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   236              IfxPort_setPinState(config->ccx[channelIndex]->pin.port, config->ccx[channelIndex]->pin.pinIndex, config->base.ccxActiveState ? IfxPort_State_low : IfxPort_State_high);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   237          }
	ld.a	a2,[a12]24
.L672:
	fcall	.cocofun_9
.L673:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   238  
	call	IfxGtm_PinMap_setTomTout
.L674:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   239          /* COUTX */
	ld.bu	d15,[a12]12
.L675:
	fcall	.cocofun_10
.L368:
	ld.a	a2,[a12]24
.L676:
	fcall	.cocofun_4
.L13:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   240          channel                     = config->coutx[channelIndex]->channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   241          driver->coutx[channelIndex] = channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   242          channelMask                 = 1 << (channel - maskShift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   243          channelsMask               |= channelMask;
	ld.a	a2,[a12]28
.L677:
	addsc.a	a2,a2,d11,#2
	ld.a	a2,[a2]
.L678:
	ld.b	d12,[a2]1
.L679:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   244  
	st.b	[a14]47,d12
.L680:
	add.a	a14,#1
.L681:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   245          /* Initialize the timer part */
	fcall	.cocofun_2
.L682:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   246          IfxGtm_Tom_Ch_setClockSource(driver->tom, channel, clock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   247  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   248          /* Initialize the SOUR reset value, SL and enable the channel */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   249          IfxGtm_Tom_Ch_setSignalLevel(driver->tom, channel, driver->base.inverted
	call	IfxGtm_Tom_Ch_setClockSource
.L683:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   250              ? IfxGtm_Tom_PwmHl_invertActiveState(config->base.coutxActiveState)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   251              : config->base.coutxActiveState);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   252          IfxGtm_Tom_Tgc_enableChannels(driver->tgc, channelMask, 0, TRUE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   253          IfxGtm_Tom_Tgc_enableChannelsOutput(driver->tgc, channelMask, 0, TRUE);
	ld.bu	d5,[a12]13
.L684:
	fcall	.cocofun_6
.L538:
	call	IfxGtm_Tom_Ch_setSignalLevel
.L685:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   254  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   255          IfxGtm_Tom_Ch_setResetSource(driver->tom, channel, IfxGtm_Tom_Ch_ResetEvent_onTrigger);
	fcall	.cocofun_7
.L539:
	call	IfxGtm_Tom_Tgc_enableChannels
.L686:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   256          IfxGtm_Tom_Ch_setTriggerOutput(driver->tom, channel, IfxGtm_Tom_Ch_OutputTrigger_forward);
	fcall	.cocofun_7
.L687:
	call	IfxGtm_Tom_Tgc_enableChannelsOutput
.L540:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   257          IfxGtm_Tom_Ch_setCounterValue(driver->tom, channel, IfxGtm_Tom_Timer_getOffset(driver->timer));
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   258  
	mov	d4,d12
	ld.a	a4,[a15]36
.L541:
	mov	d5,#1
	call	IfxGtm_Tom_Ch_setResetSource
.L542:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   259          /*Initialize the port */
	mov	d4,d12
	ld.a	a4,[a15]36
.L543:
	mov	d5,#0
	call	IfxGtm_Tom_Ch_setTriggerOutput
.L544:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   260          if (config->initPins == TRUE)
	ld.a	a4,[a15]20
	call	IfxGtm_Tom_Timer_getOffset
.L688:
	ld.a	a4,[a15]36
.L689:
	mov	e4,d2,d12
	call	IfxGtm_Tom_Ch_setCounterValue
.L690:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   261          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   262              IfxGtm_PinMap_setTomTout(config->coutx[channelIndex],
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   263                  config->base.outputMode, config->base.outputDriver);
	ld.bu	d15,[a12]32
.L691:
	jne	d15,#1,.L18
.L692:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   264              IfxPort_setPinState(config->coutx[channelIndex]->pin.port, config->coutx[channelIndex]->pin.pinIndex, config->base.coutxActiveState ? IfxPort_State_low : IfxPort_State_high);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   265          }
	ld.a	a2,[a12]28
.L693:
	fcall	.cocofun_9
.L694:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   266      }
	call	IfxGtm_PinMap_setTomTout
.L695:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   267  
	ld.bu	d15,[a12]13
.L696:
	fcall	.cocofun_10
.L377:
	ld.a	a2,[a12]28
.L697:
	fcall	.cocofun_4
.L18:
	add	d11,#1
.L7:
	ld.bu	d15,[a12]8
.L698:
	jlt.u	d11,d15,.L8
.L699:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   268      IfxGtm_Tom_PwmHl_setMode(driver, Ifx_Pwm_Mode_off);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   269  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   270      Ifx_TimerValue tOn[IFXGTM_TOM_PWMHL_MAX_NUM_CHANNELS] = {0};
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   271      IfxGtm_Tom_PwmHl_updateOff(driver, tOn);     /* tOn do not need defined values */
	mov	d4,#4
	mov.aa	a4,a15
.L546:
	call	IfxGtm_Tom_PwmHl_setMode
.L378:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   272  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   273      /* Transfer the shadow registers */
	movh.a	a2,#@his(.1.ini)
	lea	a2,[a2]@los(.1.ini)
.L700:
	mov.aa	a4,a10
	mov.a	a5,#2
.L21:
	ld.w	d15,[a2+]
	st.w	[a4+],d15
	loop	a5,.L21
.L701:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   274      IfxGtm_Tom_Tgc_setChannelsForceUpdate(driver->tgc, channelsMask, 0, 0, 0);
	mov.aa	a5,a10
	mov.aa	a4,a15
.L547:
	call	IfxGtm_Tom_PwmHl_updateOff
.L548:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   275      IfxGtm_Tom_Tgc_trigger(driver->tgc);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   276      IfxGtm_Tom_Tgc_setChannelsForceUpdate(driver->tgc, 0, channelsMask, 0, 0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   277  
	mov	d5,#0
	ld.a	a4,[a15]40
.L702:
	mov	d4,d8
.L549:
	mov	e6,d5,d5
	call	IfxGtm_Tom_Tgc_setChannelsForceUpdate
.L550:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   278      /* Enable timer to update the channels */
	ld.a	a4,[a15]40
	call	IfxGtm_Tom_Tgc_trigger
.L703:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   279      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
	mov	d4,#0
	ld.a	a4,[a15]40
.L704:
	mov	d5,d8
.L551:
	mov	e6,d4,d4
	call	IfxGtm_Tom_Tgc_setChannelsForceUpdate
.L552:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   280      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   281          IfxGtm_Tom_Timer_addToChannelMask(timer, driver->ccx[channelIndex]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   282          IfxGtm_Tom_Timer_addToChannelMask(timer, driver->coutx[channelIndex]);
	mov	d15,#0
	mov.aa	a12,a15
.L545:
	j	.L22
.L23:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   283      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   284  
	ld.b	d4,[a12]44
	mov.aa	a4,a13
.L553:
	call	IfxGtm_Tom_Timer_addToChannelMask
.L554:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   285      return result;
	ld.b	d4,[a12]47
	mov.aa	a4,a13
.L555:
	call	IfxGtm_Tom_Timer_addToChannelMask
.L556:
	add	d15,#1
	add.a	a12,#1
.L22:
	ld.bu	d0,[a15]17
.L705:
	jlt.u	d15,d0,.L23
.L706:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   286  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   287  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   288  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   289  void IfxGtm_Tom_PwmHl_initConfig(IfxGtm_Tom_PwmHl_Config *config)
	mov	d2,#1
	ret
.L345:
	
__IfxGtm_Tom_PwmHl_init_function_end:
	.size	IfxGtm_Tom_PwmHl_init,__IfxGtm_Tom_PwmHl_init_function_end-IfxGtm_Tom_PwmHl_init
.L176:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_10',code,cluster('.cocofun_10')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_10'
	.align	2
; Function .cocofun_10
.L111:
.cocofun_10:	.type	func
; Function body .cocofun_10, coco_iter:0
	jeq	d15,#0,.L14
.L1018:
	movh	d0,#1
	j	.L15
.L14:
	mov	d0,#1
.L15:
	fret
.L316:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_9',code,cluster('.cocofun_9')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_9'
	.align	2
; Function .cocofun_9
.L113:
.cocofun_9:	.type	func
; Function body .cocofun_9, coco_iter:0
	addsc.a	a2,a2,d11,#2
.L1010:
	ld.bu	d4,[a12]10
.L1011:
	ld.a	a4,[a2]
.L1012:
	ld.bu	d5,[a12]11
.L1013:
	fret
.L311:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_7',code,cluster('.cocofun_7')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_7'
	.align	2
; Function .cocofun_7
.L115:
.cocofun_7:	.type	func
; Function body .cocofun_7, coco_iter:0
	mov	d4,d13
	ld.a	a4,[a15]40
.L529:
	mov	d5,#0
.L998:
	mov	d6,#1
	fret
.L301:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_6',code,cluster('.cocofun_6')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_6'
	.align	2
; Function .cocofun_6
.L117:
.cocofun_6:	.type	func
; Function body .cocofun_6, coco_iter:0
	ld.bu	d15,[a15]16
.L992:
	jeq	d15,#0,.L10
.L993:
	eq	d5,d5,#0
.L10:
	ld.a	a4,[a15]36
.L537:
	mov	d4,d12
	fret
.L296:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_4',code,cluster('.cocofun_4')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_4'
	.align	2
; Function .cocofun_4
.L119:
.cocofun_4:	.type	func
; Function body .cocofun_4, coco_iter:0
	addsc.a	a2,a2,d11,#2
	ld.a	a2,[a2]
.L980:
	ld.a	a4,[a2]8
.L981:
	ld.bu	d15,[a2]12
.L982:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   583  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   584  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   585  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   586  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   587  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   588      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   589  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   590  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   591  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   592  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   593  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   594      port->OMR.U = action << pinIndex;
	sha	d0,d0,d15
	st.w	[a4]4,d0
.L536:
	fret
.L286:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_2',code,cluster('.cocofun_2')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_2'
	.align	2
; Function .cocofun_2
.L121:
.cocofun_2:	.type	func
; Function body .cocofun_2, coco_iter:0
	mov	d0,#1
	ld.a	a4,[a15]36
.L968:
	sub	d1,d12,d9
.L969:
	sha	d0,d0,d1
	extr.u	d13,d0,#0,#16
.L526:
	mov	e4,d10,d12
.L970:
	or	d8,d13
	fret
.L276:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_initConfig',code,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_initConfig'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_initConfig

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   290  g->base);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   291      config->timer    = NULL_PTR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   292      config->tom      = IfxGtm_Tom_0;
; Function IfxGtm_Tom_PwmHl_initConfig
.L123:
IfxGtm_Tom_PwmHl_initConfig:	.type	func
	mov.aa	a12,a4
.L558:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   293      config->ccx      = NULL_PTR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   294      config->coutx    = NULL_PTR;
	call	IfxStdIf_PwmHl_initConfig
.L557:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   295      config->initPins = TRUE;
	mov.a	a15,#0
.L711:
	st.a	[a12]16,a15
.L712:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   296  }
	mov	d15,#0
	st.b	[a12]20,d15
.L713:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   297  
	st.a	[a12]24,a15
.L714:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   298  
	st.a	[a12]28,a15
.L715:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   299  boolean IfxGtm_Tom_PwmHl_setDeadtime(IfxGtm_Tom_PwmHl *driver, float32 deadtime)
	mov	d15,#1
	st.b	[a12]32,d15
.L716:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   300  {
	ret
.L381:
	
__IfxGtm_Tom_PwmHl_initConfig_function_end:
	.size	IfxGtm_Tom_PwmHl_initConfig,__IfxGtm_Tom_PwmHl_initConfig_function_end-IfxGtm_Tom_PwmHl_initConfig
.L181:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setDeadtime',code,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setDeadtime'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setDeadtime

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   301      Ifx_TimerValue value = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, deadtime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   302      driver->base.deadtime = value;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   303  
; Function IfxGtm_Tom_PwmHl_setDeadtime
.L125:
IfxGtm_Tom_PwmHl_setDeadtime:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   304      return TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   305  }
	fcall	.cocofun_11
.L739:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   306  
	st.w	[a4],d15
.L559:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   307  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   308  boolean IfxGtm_Tom_PwmHl_setMinPulse(IfxGtm_Tom_PwmHl *driver, float32 minPulse)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   309  {
	mov	d2,#1
	ret
.L393:
	
__IfxGtm_Tom_PwmHl_setDeadtime_function_end:
	.size	IfxGtm_Tom_PwmHl_setDeadtime,__IfxGtm_Tom_PwmHl_setDeadtime_function_end-IfxGtm_Tom_PwmHl_setDeadtime
.L201:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_11',code,cluster('.cocofun_11')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_11'
	.align	2
; Function .cocofun_11
.L127:
.cocofun_11:	.type	func
; Function body .cocofun_11, coco_iter:0
	ld.a	a15,[a4]20
.L1023:
	ld.w	d15,[a15]6
.L1024:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	mul.f	d15,d4,d15
	ftouz	d15,d15
	fret
.L321:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setMinPulse',code,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setMinPulse'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setMinPulse

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   310  alue = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, minPulse);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   311  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   312      driver->base.minPulse = value + driver->base.deadtime;
; Function IfxGtm_Tom_PwmHl_setMinPulse
.L129:
IfxGtm_Tom_PwmHl_setMinPulse:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   313      driver->base.maxPulse = driver->timer->base.period - driver->base.minPulse;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   314  
	fcall	.cocofun_11
.L560:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   315      return TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   316  }
	ld.w	d0,[a4]
.L744:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   317  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   318  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   319  boolean IfxGtm_Tom_PwmHl_setMode(IfxGtm_Tom_PwmHl *driver, Ifx_Pwm_Mode mode)
	mov	d2,#1
.L745:
	add	d15,d0
	st.w	[a4]4,d15
.L746:
	ld.w	d0,[a15]
.L747:
	sub	d0,d15
	st.w	[a4]8,d0
.L748:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   320  {
	ret
.L397:
	
__IfxGtm_Tom_PwmHl_setMinPulse_function_end:
	.size	IfxGtm_Tom_PwmHl_setMinPulse,__IfxGtm_Tom_PwmHl_setMinPulse_function_end-IfxGtm_Tom_PwmHl_setMinPulse
.L206:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setMode',code,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setMode'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setMode

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   321      boolean                result = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   322      IfxGtm_Tom_PwmHl_Base *base   = &driver->base;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   323  
; Function IfxGtm_Tom_PwmHl_setMode
.L131:
IfxGtm_Tom_PwmHl_setMode:	.type	func
	mov.aa	a15,a4
.L562:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   324      if (base->mode != mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   325      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   326          if ((mode > Ifx_Pwm_Mode_off) || (IfxGtm_Tom_PwmHl_modes[mode].update == NULL_PTR))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   327          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   328              mode   = Ifx_Pwm_Mode_off;
	ld.bu	d15,[a15]12
.L753:
	mov	d9,#1
.L563:
	jeq	d15,d4,.L27
.L754:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   329              result = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   330          }
	jge.u	d4,#5,.L28
.L755:
	fcall	.cocofun_12
.L756:
	ld.w	d15,[a2]4
.L757:
	jne	d15,#0,.L29
.L28:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   331  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   332          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode == IfxGtm_Tom_PwmHl_modes[mode].mode);
	mov	d4,#4
.L758:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   333  
	mov	d9,#0
.L29:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   334          base->mode             = mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   335          driver->update         = IfxGtm_Tom_PwmHl_modes[mode].update;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   336          driver->updateAndShift = IfxGtm_Tom_PwmHl_modes[mode].updateAndShift;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   337          driver->updatePulse    = IfxGtm_Tom_PwmHl_modes[mode].updatePulse;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   338  
	st.b	[a15]12,d4
.L759:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   339          if (base->mode != Ifx_Pwm_Mode_off)
	fcall	.cocofun_12
.L760:
	ld.a	a4,[a2]4
.L561:
	st.a	[a15]24,a4
.L761:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   340          {
	ld.a	a4,[a2]8
.L762:
	st.a	[a15]28,a4
.L763:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   341              base->inverted = IfxGtm_Tom_PwmHl_modes[mode].inverted;
	ld.a	a4,[a2]12
.L764:
	st.a	[a15]32,a4
.L765:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   342          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   343          else
	jeq	d4,#4,.L30
.L766:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   344          {                       /* Keep previous inverted for off mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   345          }
	ld.bu	d15,[a2]1
.L767:
	st.b	[a15]16,d15
.L30:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   346  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   347          if (base->inverted)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   348          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   349              driver->ccxTemp   = driver->coutx;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   350              driver->coutxTemp = driver->ccx;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   351          }
	ld.bu	d15,[a15]16
.L768:
	jeq	d15,#0,.L31
.L769:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   352          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   353          {
	lea	a2,[a15]47
.L770:
	st.a	[a15]52,a2
.L771:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   354              driver->ccxTemp   = driver->ccx;
	lea	a2,[a15]44
.L772:
	j	.L32
.L31:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   355              driver->coutxTemp = driver->coutx;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   356          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   358          {   /* Workaround to enable the signal inversion required for center aligned inverted
	lea	a2,[a15]44
.L773:
	st.a	[a15]52,a2
.L774:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   359               * and right aligned modes */
	lea	a2,[a15]47
.L32:
	st.a	[a15]56,a2
.L407:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   360              /** \note that changing signal level may produce short circuit at the power stage,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   361               * in which case the inverter must be disable during this action. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   362  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   363              /* Ifx_Pwm_Mode_centerAligned and Ifx_Pwm_Mode_LeftAligned use inverted=FALSE */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   364              /* Ifx_Pwm_Mode_centerAlignedInverted and Ifx_Pwm_Mode_RightAligned use inverted=TRUE */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   365              uint32 channelIndex;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   366  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   367              for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   368              {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   369                  IfxGtm_Tom_Ch channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   370  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   371                  channel = driver->ccx[channelIndex];
	mov	d8,#0
	mov.aa	a12,a15
.L564:
	j	.L33
.L34:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   372                  IfxGtm_Tom_Ch_setSignalLevel(driver->tom, channel, base->inverted
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   373                      ? base->ccxActiveState
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   374                      : IfxGtm_Tom_PwmHl_invertActiveState(driver->base.ccxActiveState));
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   375  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   376                  channel = driver->coutx[channelIndex];
	ld.bu	d15,[a15]16
.L775:
	ld.b	d4,[a12]44
.L565:
	jeq	d15,#0,.L35
.L776:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   377                  IfxGtm_Tom_Ch_setSignalLevel(driver->tom, channel, base->inverted
	ld.bu	d5,[a15]14
.L777:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   378                      ? IfxGtm_Tom_PwmHl_invertActiveState(driver->base.coutxActiveState)
	j	.L36
.L35:
	ld.bu	d15,[a15]14
.L778:
	eq	d5,d15,#0
.L36:
	ld.a	a4,[a15]36
.L779:
	call	IfxGtm_Tom_Ch_setSignalLevel
.L566:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   379                      : base->coutxActiveState);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   380              }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   381          }
	ld.bu	d15,[a15]16
.L780:
	ld.b	d4,[a12]47
.L567:
	add.a	a12,#1
.L781:
	jeq	d15,#0,.L37
.L782:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   382      }
	ld.bu	d15,[a15]15
.L783:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   383  
	eq	d5,d15,#0
	j	.L38
.L37:
	ld.bu	d5,[a15]15
.L38:
	ld.a	a4,[a15]36
.L784:
	call	IfxGtm_Tom_Ch_setSignalLevel
.L409:
	add	d8,#1
.L33:
	ld.bu	d15,[a15]17
.L785:
	jlt.u	d8,d15,.L34
.L27:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   384      return result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   385  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   386  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   387  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   388  void IfxGtm_Tom_PwmHl_setOnTime(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   389  {
	mov	d2,d9
	ret
.L400:
	
__IfxGtm_Tom_PwmHl_setMode_function_end:
	.size	IfxGtm_Tom_PwmHl_setMode,__IfxGtm_Tom_PwmHl_setMode_function_end-IfxGtm_Tom_PwmHl_setMode
.L211:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_12',code,cluster('.cocofun_12')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_12'
	.align	2
; Function .cocofun_12
.L133:
.cocofun_12:	.type	func
; Function body .cocofun_12, coco_iter:0
	sha	d15,d4,#4
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_modes)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_modes)
.L1029:
	addsc.a	a2,a2,d15,#0
.L1030:
	fret
.L326:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setOnTime',code,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setOnTime'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setOnTime

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   390      driver->update(driver, tOn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   391  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   392  
; Function IfxGtm_Tom_PwmHl_setOnTime
.L135:
IfxGtm_Tom_PwmHl_setOnTime:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   393  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   394  void IfxGtm_Tom_PwmHl_setOnTimeAndShift(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift)
	ld.a	a15,[a4]24
.L790:
	ji	a15
.L411:
	
__IfxGtm_Tom_PwmHl_setOnTime_function_end:
	.size	IfxGtm_Tom_PwmHl_setOnTime,__IfxGtm_Tom_PwmHl_setOnTime_function_end-IfxGtm_Tom_PwmHl_setOnTime
.L216:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setOnTimeAndShift',code,cluster('IfxGtm_Tom_PwmHl_setOnTimeAndShift')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setOnTimeAndShift'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setOnTimeAndShift

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   395  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   396      driver->updateAndShift(driver, tOn, shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   397  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   398  
; Function IfxGtm_Tom_PwmHl_setOnTimeAndShift
.L137:
IfxGtm_Tom_PwmHl_setOnTimeAndShift:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   399  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   400  void IfxGtm_Tom_PwmHl_setPulse(IfxGtm_Tom_PwmHl *driver, float32 *tOn, float32 *offset)
	ld.a	a15,[a4]28
.L795:
	ji	a15
.L415:
	
__IfxGtm_Tom_PwmHl_setOnTimeAndShift_function_end:
	.size	IfxGtm_Tom_PwmHl_setOnTimeAndShift,__IfxGtm_Tom_PwmHl_setOnTimeAndShift_function_end-IfxGtm_Tom_PwmHl_setOnTimeAndShift
.L221:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setPulse',code,cluster('IfxGtm_Tom_PwmHl_setPulse')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setPulse'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setPulse

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   401  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   402      driver->updatePulse(driver, tOn, offset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   403  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   404  
; Function IfxGtm_Tom_PwmHl_setPulse
.L139:
IfxGtm_Tom_PwmHl_setPulse:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   405  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   406  void IfxGtm_Tom_PwmHl_setupChannels(IfxGtm_Tom_PwmHl *driver, boolean *activeCh, boolean *stuckSt)
	ld.a	a15,[a4]32
.L800:
	ji	a15
.L419:
	
__IfxGtm_Tom_PwmHl_setPulse_function_end:
	.size	IfxGtm_Tom_PwmHl_setPulse,__IfxGtm_Tom_PwmHl_setPulse_function_end-IfxGtm_Tom_PwmHl_setPulse
.L226:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setupChannels',code,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_setupChannels'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_setupChannels

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   407  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   408      /* Dummy Function for StdIf compile */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   409      IFX_UNUSED_PARAMETER(driver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   410      IFX_UNUSED_PARAMETER(activeCh)
; Function IfxGtm_Tom_PwmHl_setupChannels
.L141:
IfxGtm_Tom_PwmHl_setupChannels:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   411      IFX_UNUSED_PARAMETER(stuckSt)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   412  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   414  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   415  boolean IfxGtm_Tom_PwmHl_stdIfPwmHlInit(IfxStdIf_PwmHl *stdif, IfxGtm_Tom_PwmHl *driver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   416  {
	ret
.L424:
	
__IfxGtm_Tom_PwmHl_setupChannels_function_end:
	.size	IfxGtm_Tom_PwmHl_setupChannels,__IfxGtm_Tom_PwmHl_setupChannels_function_end-IfxGtm_Tom_PwmHl_setupChannels
.L231:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_stdIfPwmHlInit',code,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_stdIfPwmHlInit'
	.align	2
	
	.global	IfxGtm_Tom_PwmHl_stdIfPwmHlInit

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   417      /* Ensure the stdif is reset to zeros */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   418      memset(stdif, 0, sizeof(IfxStdIf_PwmHl));
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   419  
; Function IfxGtm_Tom_PwmHl_stdIfPwmHlInit
.L143:
IfxGtm_Tom_PwmHl_stdIfPwmHlInit:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   420      /* *INDENT-OFF* Note: this file was indented manually by the author. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   421      /* Set the API link */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   422      stdif->driver               = driver;
	mov	d4,#0
	mov.aa	a15,a4
.L569:
	mov	d5,#112
	mov.aa	a12,a5
.L570:
	call	memset
.L568:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   423      stdif->setDeadtime          = (IfxStdIf_PwmHl_SetDeadtime      )&IfxGtm_Tom_PwmHl_setDeadtime;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   424      stdif->getDeadtime          = (IfxStdIf_PwmHl_GetDeadtime      )&IfxGtm_Tom_PwmHl_getDeadtime;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   425      stdif->setMinPulse          = (IfxStdIf_PwmHl_SetMinPulse      )&IfxGtm_Tom_PwmHl_setMinPulse;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   426      stdif->getMinPulse          = (IfxStdIf_PwmHl_GetMinPulse      )&IfxGtm_Tom_PwmHl_getMinPulse;
	st.a	[a15],a12
.L809:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   427      stdif->getMode              = (IfxStdIf_PwmHl_GetMode          )&IfxGtm_Tom_PwmHl_getMode;
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_setDeadtime)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_setDeadtime)
.L810:
	st.a	[a15]4,a2
.L811:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   428      stdif->setMode              = (IfxStdIf_PwmHl_SetMode          )&IfxGtm_Tom_PwmHl_setMode;
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_getDeadtime)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_getDeadtime)
.L812:
	st.a	[a15]8,a2
.L813:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   429      stdif->setOnTime            = (IfxStdIf_PwmHl_SetOnTime        )&IfxGtm_Tom_PwmHl_setOnTime;
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_setMinPulse)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_setMinPulse)
.L814:
	st.a	[a15]12,a2
.L815:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   430      stdif->setOnTimeAndShift    = (IfxStdIf_PwmHl_SetOnTimeAndShift)&IfxGtm_Tom_PwmHl_setOnTimeAndShift;
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_getMinPulse)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_getMinPulse)
.L816:
	st.a	[a15]16,a2
.L817:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   431      stdif->setPulse             = (IfxStdIf_PwmHl_SetPulse         )&IfxGtm_Tom_PwmHl_setPulse;
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_getMode)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_getMode)
.L818:
	st.a	[a15]20,a2
.L819:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   432      stdif->setupChannels        = (IfxStdIf_PwmHl_SetupChannels    )&IfxGtm_Tom_PwmHl_setupChannels;
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_setMode)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_setMode)
.L820:
	st.a	[a15]24,a2
.L821:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   433      IfxGtm_Tom_Timer_stdIfTimerInit(&stdif->timer, driver->timer);
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_setOnTime)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_setOnTime)
.L822:
	st.a	[a15]28,a2
.L823:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   434      /* *INDENT-ON* */
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_setOnTimeAndShift)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_setOnTimeAndShift)
.L824:
	st.a	[a15]32,a2
.L825:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   435  
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_setPulse)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_setPulse)
.L826:
	st.a	[a15]36,a2
.L827:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   436      return TRUE;
	movh.a	a2,#@his(IfxGtm_Tom_PwmHl_setupChannels)
	lea	a2,[a2]@los(IfxGtm_Tom_PwmHl_setupChannels)
.L828:
	st.a	[a15]40,a2
.L829:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   437  }
	lea	a4,[a15]44
.L830:
	ld.a	a5,[a12]20
	call	IfxGtm_Tom_Timer_stdIfTimerInit
.L831:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   439  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   440  IFX_STATIC void IfxGtm_Tom_PwmHl_updateAndShiftOff(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   441  {
	mov	d2,#1
	ret
.L429:
	
__IfxGtm_Tom_PwmHl_stdIfPwmHlInit_function_end:
	.size	IfxGtm_Tom_PwmHl_stdIfPwmHlInit,__IfxGtm_Tom_PwmHl_stdIfPwmHlInit_function_end-IfxGtm_Tom_PwmHl_stdIfPwmHlInit
.L236:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateAndShiftOff',code,cluster('IfxGtm_Tom_PwmHl_updateAndShiftOff')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateAndShiftOff'
	.align	2
	

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   442      IFX_UNUSED_PARAMETER(tOn)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   443      IFX_UNUSED_PARAMETER(shift)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   444  
; Function IfxGtm_Tom_PwmHl_updateAndShiftOff
.L145:
IfxGtm_Tom_PwmHl_updateAndShiftOff:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   445      IfxGtm_Tom_PwmHl_updateOff(driver, NULL_PTR);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   446  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   447  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   448  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   449  IFX_STATIC void IfxGtm_Tom_PwmHl_updateCenterAligned(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn)
	mov.a	a5,#0
.L571:
	j	IfxGtm_Tom_PwmHl_updateOff
.L433:
	
__IfxGtm_Tom_PwmHl_updateAndShiftOff_function_end:
	.size	IfxGtm_Tom_PwmHl_updateAndShiftOff,__IfxGtm_Tom_PwmHl_updateAndShiftOff_function_end-IfxGtm_Tom_PwmHl_updateAndShiftOff
.L241:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateCenterAligned',code,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateCenterAligned'
	.align	2
	

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   450  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   451      uint8          channelIndex;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   452      Ifx_TimerValue period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   453      Ifx_TimerValue deadtime = driver->base.deadtime;
; Function IfxGtm_Tom_PwmHl_updateCenterAligned
.L147:
IfxGtm_Tom_PwmHl_updateCenterAligned:	.type	func
	fcall	.cocofun_14
.L575:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   454  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   455      period = driver->timer->base.period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   456  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   457      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   458      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   459          Ifx_TimerValue x;             /* x=period*dutyCycle, x=OnTime+deadTime */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   460          Ifx_TimerValue cm0, cm1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   461          x = tOn[channelIndex];
	j	.L41
.L42:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   462  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   463          if (driver->base.inverted != FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   464          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   465              x = period - x;
	addsc.a	a2,a12,d10,#2
.L840:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   466          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   467          else
	ld.bu	d15,[a15]16
.L841:
	ld.w	d0,[a2]
.L578:
	jeq	d15,#0,.L43
.L842:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   468          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   469  
	sub	d0,d9,d0
.L43:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   470          if ((x < driver->base.minPulse) || (x <= deadtime))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   471          {                       /* For deadtime condition: avoid leading edge of top channel to occur after the trailing edge */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   472              x = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   473          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   474          else if (x > driver->base.maxPulse)
	ld.w	d15,[a15]4
.L843:
	jlt.u	d0,d15,.L44
.L844:
	jlt.u	d8,d0,.L45
.L44:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   475          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   476              x = period;
	mov	d0,#0
	j	.L46
.L45:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   477          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   478          else
	ld.w	d15,[a15]8
.L845:
	ge.u	d15,d15,d0
.L846:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   479          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   480  
	cmovn	d0,d15,d9
.L46:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   481          /* Special handling due to GTM issue */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   482          if (x == period)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   483          {                       /* 100% duty cycle */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   484              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex],
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   485                  period + 1 /* No compare event */,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   486                  2 /* 1st compare event (issue: expected to be 1) */ + deadtime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   487              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex],
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   488                  period + 2 /* No compare event, issues has been seen with +1 */,
	ld.a	a2,[a15]52
.L847:
	fcall	.cocofun_3
.L848:
	jne	d0,d9,.L48
.L849:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   489                  2 /* 1st compare event (issue: expected to be 1) */);
	add	d5,d9,#1
.L850:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   490          }
	add	d6,d8,#2
	call	IfxGtm_Tom_Ch_setCompareShadow
.L579:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   491          else if (x == 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   492          {
	add	d5,d9,#2
.L851:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   493              cm0 = 1;
	mov	d6,#2
	j	.L49
.L48:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   494              cm1 = period + 2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   495              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1);
	jne	d0,#0,.L50
.L852:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   496              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   497          }
	mov	d11,#1
.L581:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   498          else
	add	d15,d9,#2
.L582:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   499          {                           /* x% duty cycle */
	mov	d6,d15
	j	.L51
.L50:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   500              cm1 = (period - x) / 2; // CM1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   501              cm0 = (period + x) / 2; // CM0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   502              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1 + deadtime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   503              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   504          }
	sub	d15,d9,d0
.L583:
	sh	d15,#-1
.L853:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   505      }
	add	d0,d9
.L580:
	sh	d11,d0,#-1
.L584:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   506  }
	add	d6,d15,d8
.L51:
	mov	d5,d11
	call	IfxGtm_Tom_Ch_setCompareShadow
.L854:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   507  
	add	d5,d11,d8
.L855:
	mov	d6,d15
.L49:
	ld.a	a2,[a15]56
.L856:
	fcall	.cocofun_3
.L587:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L445:
	add	d10,#1
.L585:
	extr.u	d10,d10,#0,#8
.L41:
	ld.bu	d15,[a15]17
.L857:
	jlt.u	d10,d15,.L42
.L858:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   508  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   509  IFX_STATIC void IfxGtm_Tom_PwmHl_updateEdgeAligned(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   510  {
	ret
.L437:
	
__IfxGtm_Tom_PwmHl_updateCenterAligned_function_end:
	.size	IfxGtm_Tom_PwmHl_updateCenterAligned,__IfxGtm_Tom_PwmHl_updateCenterAligned_function_end-IfxGtm_Tom_PwmHl_updateCenterAligned
.L246:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_14',code,cluster('.cocofun_14')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_14'
	.align	2
; Function .cocofun_14
.L149:
.cocofun_14:	.type	func
; Function body .cocofun_14, coco_iter:0
	mov.aa	a15,a4
.L572:
	ld.a	a2,[a15]20
.L588:
	mov	d10,#0
	mov.aa	a12,a5
.L573:
	ld.w	d8,[a15]
.L574:
	ld.w	d9,[a2]
.L576:
	fret
.L336:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_3',code,cluster('.cocofun_3')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_3'
	.align	2
; Function .cocofun_3
.L151:
.cocofun_3:	.type	func
; Function body .cocofun_3, coco_iter:0
	addsc.a	a2,a2,d10,#0
.L975:
	fcall	.cocofun_15
.L577:
	fret
.L281:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateEdgeAligned',code,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateEdgeAligned'
	.align	2
	

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   511      uint8          channelIndex;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   512      Ifx_TimerValue period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   513      Ifx_TimerValue deadtime = driver->base.deadtime;
; Function IfxGtm_Tom_PwmHl_updateEdgeAligned
.L153:
IfxGtm_Tom_PwmHl_updateEdgeAligned:	.type	func
	fcall	.cocofun_14
.L589:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   514  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   515      period = driver->timer->base.period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   516  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   517      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   518      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   519          Ifx_TimerValue x;             /* x=period*dutyCycle, x=OnTime+deadTime */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   520          Ifx_TimerValue cm0, cm1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   521          x = tOn[channelIndex];
	j	.L52
.L53:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   522  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   523          if (driver->base.inverted != FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   524          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   525              x = period - x;
	addsc.a	a2,a12,d10,#2
.L863:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   526          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   527          else
	ld.bu	d15,[a15]16
.L864:
	ld.w	d11,[a2]
.L594:
	jeq	d15,#0,.L54
.L865:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   528          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   529  
	sub	d11,d9,d11
.L54:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   530          if ((x < driver->base.minPulse) || (x <= deadtime))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   531          {                       /* For deadtime condition: avoid leading edge of top channel to occur after the trailing edge */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   532              x = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   533          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   534          else if (x > driver->base.maxPulse)
	ld.w	d15,[a15]4
.L866:
	jlt.u	d11,d15,.L55
.L867:
	jlt.u	d8,d11,.L56
.L55:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   535          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   536              x = period;
	mov	d11,#0
	j	.L57
.L56:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   537          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   538          else
	ld.w	d15,[a15]8
.L868:
	ge.u	d15,d15,d11
.L869:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   539          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   540  
	cmovn	d11,d15,d9
.L57:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   541          /* Special handling due to GTM issue */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   542          if (x == period)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   543          {                       /* 100% duty cycle */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   544              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex],
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   545                  period + 1 /* No compare event */,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   546                  2 /* 1st compare event (issue: expected to be 1) */ + deadtime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   547              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex],
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   548                  period + 2 /* No compare event, issues has been seen with +1 */,
	ld.a	a2,[a15]52
.L870:
	fcall	.cocofun_3
.L871:
	jne	d11,d9,.L59
.L872:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   549                  2 /* 1st compare event (issue: expected to be 1) */);
	add	d5,d9,#1
.L873:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   550          }
	add	d6,d8,#2
	call	IfxGtm_Tom_Ch_setCompareShadow
.L874:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   551          else if (x == 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   552          {
	add	d5,d9,#2
.L875:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   553              cm0 = 1;
	mov	d6,#2
	j	.L60
.L59:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   554              cm1 = period + 2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   555              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1);
	jne	d11,#0,.L61
.L876:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   556              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   557          }
	mov	d11,#1
.L877:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   558          else
	add	d15,d9,#2
.L590:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   559          {                       /* x% duty cycle */
	mov	d6,d15
	j	.L62
.L61:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   560              cm1 = 2;            // CM1, set to 2 due to a GTM issue. should be 1 according to spec
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   561              cm0 = x;            // CM0, set to x+2 due to a GTM issue. should be x+1 according to spec
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   562              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1 + deadtime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   563              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   564          }
	mov	d15,#2
.L591:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   565      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   566  }
	add	d6,d8,#2
.L62:
	mov	d5,d11
	call	IfxGtm_Tom_Ch_setCompareShadow
.L878:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   567  
	add	d5,d11,d8
.L879:
	mov	d6,d15
.L60:
	ld.a	a2,[a15]56
.L880:
	fcall	.cocofun_3
.L593:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L455:
	add	d10,#1
.L592:
	extr.u	d10,d10,#0,#8
.L52:
	ld.bu	d15,[a15]17
.L881:
	jlt.u	d10,d15,.L53
.L882:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   568  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   569  IFX_STATIC void IfxGtm_Tom_PwmHl_updateOff(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   570  {
	ret
.L449:
	
__IfxGtm_Tom_PwmHl_updateEdgeAligned_function_end:
	.size	IfxGtm_Tom_PwmHl_updateEdgeAligned,__IfxGtm_Tom_PwmHl_updateEdgeAligned_function_end-IfxGtm_Tom_PwmHl_updateEdgeAligned
.L251:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateOff',code,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateOff'
	.align	2
	

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   571      IFX_UNUSED_PARAMETER(tOn)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   572      uint8 channelIndex;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   573      Ifx_TimerValue period;
; Function IfxGtm_Tom_PwmHl_updateOff
.L155:
IfxGtm_Tom_PwmHl_updateOff:	.type	func
	mov.aa	a15,a4
.L462:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   574  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   575      period = driver->timer->base.period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   576  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   577      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   578      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   579          IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex],
	ld.a	a2,[a15]20
.L887:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   580              2 /* 1 will keep the previous level */, period + 2);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   581          IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], period + 1, 2);
	mov	d15,#0
.L595:
	ld.w	d8,[a2]
.L597:
	j	.L63
.L64:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   582      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   583  }
	ld.a	a2,[a15]52
.L888:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   584  
	mov	d5,#2
	ld.a	a4,[a15]36
.L889:
	add	d6,d8,#2
.L890:
	addsc.a	a2,a2,d15,#0
	ld.b	d4,[a2]0
.L891:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L892:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   585  
	ld.a	a2,[a15]56
.L893:
	add	d5,d8,#1
	ld.a	a4,[a15]36
.L894:
	mov	d6,#2
.L895:
	addsc.a	a2,a2,d15,#0
	ld.b	d4,[a2]0
.L896:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L897:
	add	d15,#1
.L596:
	extr.u	d15,d15,#0,#8
.L63:
	ld.bu	d0,[a15]17
.L898:
	jlt.u	d15,d0,.L64
.L899:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   586  IFX_STATIC void IfxGtm_Tom_PwmHl_updatePulse(IfxGtm_Tom_PwmHl *driver, float32 *tOn, float32 *offset)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   587  {
	ret
.L459:
	
__IfxGtm_Tom_PwmHl_updateOff_function_end:
	.size	IfxGtm_Tom_PwmHl_updateOff,__IfxGtm_Tom_PwmHl_updateOff_function_end-IfxGtm_Tom_PwmHl_updateOff
.L256:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updatePulse',code,cluster('IfxGtm_Tom_PwmHl_updatePulse')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updatePulse'
	.align	2
	

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   588      uint8          channelIndex;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   589      Ifx_TimerValue period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   590  
; Function IfxGtm_Tom_PwmHl_updatePulse
.L157:
IfxGtm_Tom_PwmHl_updatePulse:	.type	func
	mov.aa	a15,a4
.L600:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   591      period = driver->timer->base.period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   592  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   593      /* Top channels */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   594      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   595      {
	ld.a	a2,[a15]20
.L904:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   596          Ifx_TimerValue x; /* x=period*dutyCycle, x=OnTime+deadTime */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   597          Ifx_TimerValue o;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   598          Ifx_TimerValue cm0, cm1;
	mov	d9,#0
	mov.aa	a12,a5
.L599:
	mov.aa	a13,a6
.L601:
	ld.w	d8,[a2]
.L602:
	j	.L65
.L66:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   599  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   600          x = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, tOn[channelIndex]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   601          o = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, offset[channelIndex]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   602  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   603          if (driver->base.inverted != FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   604          {
	ld.a	a2,[a15]20
.L905:
	ld.w	d0,[a2]6
.L906:
	addsc.a	a2,a12,d9,#2
	ld.w	d1,[a2]
.L907:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   605              x = period - x;
	addsc.a	a2,a13,d9,#2
.L477:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	mul.f	d1,d1,d0
.L908:
	ftouz	d5,d1
	ld.w	d1,[a2]
.L478:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	mul.f	d0,d1,d0
.L909:
	ftouz	d0,d0

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   606  e) || (o > period))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   607          {
	fcall	.cocofun_13
.L484:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   608              x = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   609          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   610          else if ((x > driver->base.maxPulse) || (o + x > period))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   611          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   612              x = period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   613          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   614          else
	jlt.u	d5,d15,.L68
.L910:
	jge.u	d8,d0,.L69
.L68:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   615          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   616  
	mov	d5,#0
	j	.L70
.L69:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   617          /* Special handling due to GTM issue */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   618          if (x == period)
	ld.w	d15,[a15]8
.L911:
	jlt.u	d15,d5,.L71
.L912:
	add	d15,d0,d5
.L913:
	jge.u	d8,d15,.L72
.L71:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   619          {   /* 100% duty cycle */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   620              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex],
	mov	d5,d8
.L72:
.L70:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   621                  period + 1 /* No compare event */,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   622                  2 /* 1st compare event (issue: expected to be 1)*/);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   623          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   624          else if (x == 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   625          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   626              cm0 = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   627              cm1 = period + 2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   628              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1);
	ld.a	a2,[a15]52
.L914:
	addsc.a	a2,a2,d9,#0
	fcall	.cocofun_15
.L915:
	jne	d5,d8,.L73
.L916:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   629          }
	add	d5,d8,#1
.L603:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   630          else
	mov	d6,#2
	j	.L74
.L73:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   631          {                /* x% duty cycle */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   632              cm1 = 2 + o; // CM1, set to 2 due to a GTM issue. should be 1 according to spec
	fcall	.cocofun_5
.L74:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   633              cm0 = o + x; // CM0, set to x+2 due to a GTM issue. should be x+1 according to spec
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   634              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   635          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   636      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   637  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   638      /* Bottom channels */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   639      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   640      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   641          Ifx_TimerValue x; /* x=period*dutyCycle, x=OnTime+deadTime */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   642          Ifx_TimerValue o;
	call	IfxGtm_Tom_Ch_setCompareShadow
.L472:
	add	d9,#1
.L606:
	extr.u	d9,d9,#0,#8
.L65:
	ld.bu	d15,[a15]17
.L917:
	jlt.u	d9,d15,.L66
.L918:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   643          Ifx_TimerValue cm0, cm1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   644  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   645          x = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, tOn[channelIndex + driver->base.channelCount]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   646          o = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, offset[channelIndex + driver->base.channelCount]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   647  
	mov	d9,#0
	j	.L77
.L78:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   648          if (driver->base.inverted != FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   649          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   650              x = period - x;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   651          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   652          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   653          {}
	ld.a	a2,[a15]20
.L919:
	ld.bu	d0,[a15]17
.L920:
	add	d15,d9,d0
	ld.w	d1,[a2]6
.L921:
	addsc.a	a2,a12,d15,#2
	ld.w	d0,[a2]
.L922:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   654  
	addsc.a	a2,a13,d15,#2
.L489:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	mul.f	d0,d0,d1
.L490:
	ld.w	d15,[a2]
.L492:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	ftouz	d5,d0
.L493:
	mul.f	d15,d15,d1
.L923:
	ftouz	d0,d15

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   655              x = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   656          }
	fcall	.cocofun_13
.L494:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   657          else if (x > driver->base.maxPulse)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   658          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   659              x = period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   660          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   661          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   662          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   663  
	jge.u	d5,d15,.L80
.L924:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   664          /* Special handling due to GTM issue */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   665          if (x == period)
	mov	d5,#0
	j	.L81
.L80:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   666          {   /* 100% duty cycle */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   667              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex],
	ld.w	d15,[a15]8
.L925:
	ge.u	d15,d15,d5
.L926:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   668                  period + 2 /* No compare event, issues has been seen with +1 */,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   669                  2 /* 1st compare event (issue: expected to be 1)*/);
	cmovn	d5,d15,d8
.L81:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   670          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   671          else if (x == 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   672          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   673              cm0 = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   674              cm1 = period + 2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   675              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0, cm1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   676          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   677          else
	ld.a	a2,[a15]56
.L927:
	addsc.a	a2,a2,d9,#0
	fcall	.cocofun_15
.L928:
	jne	d5,d8,.L83
.L929:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   678          {                /* x% duty cycle */
	add	d5,d8,#2
.L607:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   679              cm1 = 2 + o; // CM1, set to 2 due to a GTM issue. should be 1 according to spec
	mov	d6,#2
	j	.L84
.L83:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   680              cm0 = o + x; // CM0, set to x+2 due to a GTM issue. should be x+1 according to spec
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   681              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0, cm1);
	fcall	.cocofun_5
.L84:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   682          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   683      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   684  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   686  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   687  IFX_STATIC void IfxGtm_Tom_PwmHl_updatePulseOff(IfxGtm_Tom_PwmHl *driver, float32 *tOn, float32 *offset)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   688  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   689      IFX_UNUSED_PARAMETER(tOn)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   690      IFX_UNUSED_PARAMETER(offset)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   691      IfxGtm_Tom_PwmHl_updateOff(driver, NULL_PTR);
	call	IfxGtm_Tom_Ch_setCompareShadow
.L485:
	add	d9,#1
.L608:
	extr.u	d9,d9,#0,#8
.L77:
	ld.bu	d15,[a15]17
.L930:
	jlt.u	d9,d15,.L78
.L931:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   692  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   693  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   694  
	ret
.L465:
	
__IfxGtm_Tom_PwmHl_updatePulse_function_end:
	.size	IfxGtm_Tom_PwmHl_updatePulse,__IfxGtm_Tom_PwmHl_updatePulse_function_end-IfxGtm_Tom_PwmHl_updatePulse
.L261:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_15',code,cluster('.cocofun_15')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_15'
	.align	2
; Function .cocofun_15
.L159:
.cocofun_15:	.type	func
; Function body .cocofun_15, coco_iter:1
	ld.b	d4,[a2]0
.L1045:
	ld.a	a4,[a15]36
.L586:
	fret
.L341:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_13',code,cluster('.cocofun_13')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_13'
	.align	2
; Function .cocofun_13
.L161:
.cocofun_13:	.type	func
; Function body .cocofun_13, coco_iter:0
	ld.bu	d15,[a15]16
.L598:
	jeq	d15,#0,.L67
.L1035:
	sub	d5,d8,d5
.L67:
	ld.w	d15,[a15]4
.L1036:
	fret
.L331:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl..cocofun_5',code,cluster('.cocofun_5')
	.sect	'.text.IfxGtm_Tom_PwmHl..cocofun_5'
	.align	2
; Function .cocofun_5
.L163:
.cocofun_5:	.type	func
; Function body .cocofun_5, coco_iter:0
	jne	d5,#0,.L75
.L987:
	mov	d5,#1
.L604:
	add	d6,d8,#2
	j	.L76
.L75:
	add	d6,d0,#2
.L605:
	add	d5,d0
.L76:
	fret
.L291:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updatePulseOff',code,cluster('IfxGtm_Tom_PwmHl_updatePulseOff')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updatePulseOff'
	.align	2
	

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   695  IFX_STATIC void IfxGtm_Tom_PwmHl_updateShiftCenterAligned(IfxGtm_Tom_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   696  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   697      uint8          channelIndex;
; Function IfxGtm_Tom_PwmHl_updatePulseOff
.L165:
IfxGtm_Tom_PwmHl_updatePulseOff:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   698      Ifx_TimerValue period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   699      Ifx_TimerValue deadtime = driver->base.deadtime;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   700  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   701      period = driver->timer->base.period;
	mov.a	a5,#0
.L609:
	j	IfxGtm_Tom_PwmHl_updateOff
.L495:
	
__IfxGtm_Tom_PwmHl_updatePulseOff_function_end:
	.size	IfxGtm_Tom_PwmHl_updatePulseOff,__IfxGtm_Tom_PwmHl_updatePulseOff_function_end-IfxGtm_Tom_PwmHl_updatePulseOff
.L266:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateShiftCenterAligned',code,cluster('IfxGtm_Tom_PwmHl_updateShiftCenterAligned')
	.sect	'.text.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_updateShiftCenterAligned'
	.align	2
	

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   702  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   703      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   704      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   705          Ifx_TimerValue x; /* x=period*dutyCycle, x=OnTime+deadTime */
; Function IfxGtm_Tom_PwmHl_updateShiftCenterAligned
.L167:
IfxGtm_Tom_PwmHl_updateShiftCenterAligned:	.type	func
	mov.aa	a15,a4
.L623:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   706          Ifx_TimerValue s; /* Shift value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   707          Ifx_TimerValue cm0, cm1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   708          x = tOn[channelIndex];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   709  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   710          if (driver->base.inverted != FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   711          {
	ld.a	a2,[a15]20
.L940:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   712              x = period - x;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   713          }
	mov	d11,#0
	mov.aa	a12,a5
.L619:
	mov.aa	a13,a6
.L625:
	ld.w	d9,[a15]
.L622:
	ld.w	d10,[a2]
.L624:
	j	.L87
.L88:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   714          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   715          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   716  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   717          if ((x < driver->base.minPulse) || (x <= deadtime))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   718          {   /* For deadtime condition: avoid leading edge of top channel to occur after the trailing edge */
	addsc.a	a2,a12,d11,#2
.L941:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   719              x = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   720          }
	ld.bu	d15,[a15]16
.L942:
	ld.w	d2,[a2]
.L610:
	jeq	d15,#0,.L89
.L943:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   721          else if (x > driver->base.maxPulse)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   722          {
	sub	d2,d10,d2
.L89:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   723              x = period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   724          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   725          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   726          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   727  
	ld.w	d15,[a15]4
.L944:
	jlt.u	d2,d15,.L90
.L945:
	jlt.u	d9,d2,.L91
.L90:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   728          /* Special handling due to GTM issue */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   729          if (x == period)
	mov	d2,#0
	j	.L92
.L91:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   730          {   /* 100% duty cycle */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   731              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex],
	ld.w	d15,[a15]8
.L946:
	ge.u	d15,d15,d2
.L947:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   732                  period + 1 /* No compare event */,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   733                  2 /* 1st compare event (issue: expected to be 1)*/ + deadtime);
	cmovn	d2,d15,d10
.L92:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   734              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex],
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   735                  period + 2 /* No compare event, issues has been seen with +1 */,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   736                  2 /* 1st compare event (issue: expected to be 1)*/);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   737          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   738          else if (x == 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   739          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   740              cm0 = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   741              cm1 = period + 2;
	ld.a	a2,[a15]52
.L948:
	addsc.a	a2,a2,d11,#0
	fcall	.cocofun_15
.L949:
	jne	d2,d10,.L94
.L950:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   742              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1);
	add	d5,d10,#1
.L951:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   743              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
	add	d6,d9,#2
	call	IfxGtm_Tom_Ch_setCompareShadow
.L611:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   744          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   745          else
	add	d5,d10,#2
.L952:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   746          {                           /* x% duty cycle */
	mov	d6,#2
	j	.L95
.L94:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   747              s = shift[channelIndex];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   748  
	jne	d2,#0,.L96
.L953:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   749              if (s > 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   750              {
	mov	d8,#1
.L613:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   751                  s = __minX(s, (period - x) / 2 - 1);
	add	d12,d10,#2
.L614:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   752              }
	mov	d6,d12
	j	.L97
.L96:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   753              else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   754              {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   755                  s = __maxX(s, (x - period) / 2 + 1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   756              }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   757  
	addsc.a	a2,a13,d11,#2
.L954:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   758              cm1 = s + (period - x) / 2; // CM1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   759              cm0 = s + (period + x) / 2; // CM0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   760              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccxTemp[channelIndex], cm0, cm1 + deadtime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   761              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
	sub	d1,d10,d2
.L955:
	ld.w	d0,[a2]
.L615:
	sh	d1,#-1
.L956:
	jeq	d0,#0,.L98
.L957:
	add	d15,d1,#-1
.L958:
	min.u	d15,d0,d15
	j	.L99
.L98:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   762          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   763      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Tom\PwmHl\IfxGtm_Tom_PwmHl.c	   764  }

	sub	d0,d2,d10
.L616:


	sh	d0,#-1


	add	d15,d0,#1
.L99:


	add	d12,d15,d1
.L617:


	add	d0,d10,d2


	sh	d0,#-1
.L959:


	add	d8,d15,d0
.L618:


	add	d6,d12,d9
.L97:


	mov	d5,d8


	call	IfxGtm_Tom_Ch_setCompareShadow
.L612:


	add	d5,d8,d9
.L960:


	mov	d6,d12
.L95:


	ld.a	a2,[a15]56
.L961:


	addsc.a	a2,a2,d11,#0


	fcall	.cocofun_15
.L621:


	call	IfxGtm_Tom_Ch_setCompareShadow
.L506:
	add	d11,#1
.L620:
	extr.u	d11,d11,#0,#8
.L87:
	ld.bu	d15,[a15]17
.L962:
	jlt.u	d11,d15,.L88
.L963:


	ret
.L499:
	
__IfxGtm_Tom_PwmHl_updateShiftCenterAligned_function_end:
	.size	IfxGtm_Tom_PwmHl_updateShiftCenterAligned,__IfxGtm_Tom_PwmHl_updateShiftCenterAligned_function_end-IfxGtm_Tom_PwmHl_updateShiftCenterAligned
.L271:
	; End of function
	
	.sdecl	'.rodata.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_modes',data,rom,cluster('IfxGtm_Tom_PwmHl_modes')
	.sect	'.rodata.IfxGtm_Tom_PwmHl.IfxGtm_Tom_PwmHl_modes'
	.align	4
IfxGtm_Tom_PwmHl_modes:	.type	object
	.size	IfxGtm_Tom_PwmHl_modes,80
	.space	4
	.word	IfxGtm_Tom_PwmHl_updateCenterAligned,IfxGtm_Tom_PwmHl_updateShiftCenterAligned,IfxGtm_Tom_PwmHl_updatePulse
	.byte	1,1
	.space	2
	.word	IfxGtm_Tom_PwmHl_updateCenterAligned,IfxGtm_Tom_PwmHl_updateShiftCenterAligned,IfxGtm_Tom_PwmHl_updatePulse
	.byte	2
	.space	3
	.word	IfxGtm_Tom_PwmHl_updateEdgeAligned,IfxGtm_Tom_PwmHl_updateAndShiftOff,IfxGtm_Tom_PwmHl_updatePulse
	.byte	3,1
	.space	2
	.word	IfxGtm_Tom_PwmHl_updateEdgeAligned,IfxGtm_Tom_PwmHl_updateAndShiftOff,IfxGtm_Tom_PwmHl_updatePulse
	.byte	4
	.space	3
	.word	IfxGtm_Tom_PwmHl_updateOff,IfxGtm_Tom_PwmHl_updateAndShiftOff,IfxGtm_Tom_PwmHl_updatePulseOff
	.sdecl	'.rodata.IfxGtm_Tom_PwmHl..1.ini',data,rom
	.sect	'.rodata.IfxGtm_Tom_PwmHl..1.ini'
	.align	2
.1.ini:	.type	object
	.size	.1.ini,12
	.space	12
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_getDeadtime'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_getMinPulse'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_getMode'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setDeadtime'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setMinPulse'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setMode'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setOnTime'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setOnTimeAndShift'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setPulse'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_setupChannels'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_updateAndShiftOff'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_updateCenterAligned'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_updateEdgeAligned'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_updateOff'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_updatePulse'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_updatePulseOff'
	.calls	'__INDIRECT__','IfxGtm_Tom_PwmHl_updateShiftCenterAligned'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_PwmHl_setDeadtime'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_PwmHl_setMinPulse'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_getTgcPointer'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_getClockSource'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_setClockSource'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_setSignalLevel'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Tgc_enableChannels'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Tgc_enableChannelsOutput'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_setResetSource'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_setTriggerOutput'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Timer_getOffset'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Ch_setCounterValue'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_PinMap_setTomTout'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_PwmHl_setMode'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_PwmHl_updateOff'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Tgc_setChannelsForceUpdate'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Tgc_trigger'
	.calls	'IfxGtm_Tom_PwmHl_init','IfxGtm_Tom_Timer_addToChannelMask'
	.calls	'IfxGtm_Tom_PwmHl_initConfig','IfxStdIf_PwmHl_initConfig'
	.calls	'IfxGtm_Tom_PwmHl_setMode','IfxGtm_Tom_Ch_setSignalLevel'
	.calls	'IfxGtm_Tom_PwmHl_setOnTime','__INDIRECT__'
	.calls	'IfxGtm_Tom_PwmHl_setOnTimeAndShift','__INDIRECT__'
	.calls	'IfxGtm_Tom_PwmHl_setPulse','__INDIRECT__'
	.calls	'IfxGtm_Tom_PwmHl_stdIfPwmHlInit','memset'
	.calls	'IfxGtm_Tom_PwmHl_stdIfPwmHlInit','IfxGtm_Tom_Timer_stdIfTimerInit'
	.calls	'IfxGtm_Tom_PwmHl_updateAndShiftOff','IfxGtm_Tom_PwmHl_updateOff'
	.calls	'IfxGtm_Tom_PwmHl_updateCenterAligned','IfxGtm_Tom_Ch_setCompareShadow'
	.calls	'IfxGtm_Tom_PwmHl_updateEdgeAligned','IfxGtm_Tom_Ch_setCompareShadow'
	.calls	'IfxGtm_Tom_PwmHl_updateOff','IfxGtm_Tom_Ch_setCompareShadow'
	.calls	'IfxGtm_Tom_PwmHl_updatePulse','IfxGtm_Tom_Ch_setCompareShadow'
	.calls	'IfxGtm_Tom_PwmHl_updatePulseOff','IfxGtm_Tom_PwmHl_updateOff'
	.calls	'IfxGtm_Tom_PwmHl_updateShiftCenterAligned','IfxGtm_Tom_Ch_setCompareShadow'
	.calls	'IfxGtm_Tom_PwmHl_getDeadtime','.cocofun_8'
	.calls	'IfxGtm_Tom_PwmHl_getMinPulse','.cocofun_8'
	.calls	'IfxGtm_Tom_PwmHl_init','.cocofun_2'
	.calls	'IfxGtm_Tom_PwmHl_init','.cocofun_6'
	.calls	'IfxGtm_Tom_PwmHl_init','.cocofun_7'
	.calls	'IfxGtm_Tom_PwmHl_init','.cocofun_9'
	.calls	'IfxGtm_Tom_PwmHl_init','.cocofun_10'
	.calls	'IfxGtm_Tom_PwmHl_init','.cocofun_4'
	.calls	'IfxGtm_Tom_PwmHl_setDeadtime','.cocofun_11'
	.calls	'IfxGtm_Tom_PwmHl_setMinPulse','.cocofun_11'
	.calls	'IfxGtm_Tom_PwmHl_setMode','.cocofun_12'
	.calls	'IfxGtm_Tom_PwmHl_updateCenterAligned','.cocofun_14'
	.calls	'IfxGtm_Tom_PwmHl_updateCenterAligned','.cocofun_3'
	.calls	'.cocofun_3','.cocofun_15'
	.calls	'IfxGtm_Tom_PwmHl_updateEdgeAligned','.cocofun_14'
	.calls	'IfxGtm_Tom_PwmHl_updateEdgeAligned','.cocofun_3'
	.calls	'IfxGtm_Tom_PwmHl_updatePulse','.cocofun_13'
	.calls	'IfxGtm_Tom_PwmHl_updatePulse','.cocofun_15'
	.calls	'IfxGtm_Tom_PwmHl_updatePulse','.cocofun_5'
	.calls	'IfxGtm_Tom_PwmHl_updateShiftCenterAligned','.cocofun_15'
	.calls	'IfxGtm_Tom_PwmHl_getDeadtime','',0
	.calls	'.cocofun_8','',0
	.calls	'IfxGtm_Tom_PwmHl_getMinPulse','',0
	.calls	'IfxGtm_Tom_PwmHl_getMode','',0
	.calls	'IfxGtm_Tom_PwmHl_init','',16
	.calls	'.cocofun_10','',0
	.calls	'.cocofun_9','',0
	.calls	'.cocofun_7','',0
	.calls	'.cocofun_6','',0
	.calls	'.cocofun_4','',0
	.calls	'.cocofun_2','',0
	.calls	'IfxGtm_Tom_PwmHl_initConfig','',0
	.calls	'IfxGtm_Tom_PwmHl_setDeadtime','',0
	.calls	'.cocofun_11','',0
	.calls	'IfxGtm_Tom_PwmHl_setMinPulse','',0
	.calls	'IfxGtm_Tom_PwmHl_setMode','',0
	.calls	'.cocofun_12','',0
	.calls	'IfxGtm_Tom_PwmHl_setOnTime','',0
	.calls	'IfxGtm_Tom_PwmHl_setOnTimeAndShift','',0
	.calls	'IfxGtm_Tom_PwmHl_setPulse','',0
	.calls	'IfxGtm_Tom_PwmHl_setupChannels','',0
	.calls	'IfxGtm_Tom_PwmHl_stdIfPwmHlInit','',0
	.calls	'IfxGtm_Tom_PwmHl_updateAndShiftOff','',0
	.calls	'IfxGtm_Tom_PwmHl_updateCenterAligned','',0
	.calls	'.cocofun_14','',0
	.calls	'.cocofun_3','',0
	.calls	'IfxGtm_Tom_PwmHl_updateEdgeAligned','',0
	.calls	'IfxGtm_Tom_PwmHl_updateOff','',0
	.calls	'IfxGtm_Tom_PwmHl_updatePulse','',0
	.calls	'.cocofun_15','',0
	.calls	'.cocofun_13','',0
	.calls	'.cocofun_5','',0
	.calls	'IfxGtm_Tom_PwmHl_updatePulseOff','',0
	.extern	IfxStdIf_PwmHl_initConfig
	.extern	IfxGtm_Tom_Ch_getClockSource
	.extern	IfxGtm_Tom_Ch_getTgcPointer
	.extern	IfxGtm_Tom_Ch_setClockSource
	.extern	IfxGtm_Tom_Ch_setCompareShadow
	.extern	IfxGtm_Tom_Ch_setCounterValue
	.extern	IfxGtm_Tom_Ch_setResetSource
	.extern	IfxGtm_Tom_Ch_setSignalLevel
	.extern	IfxGtm_Tom_Ch_setTriggerOutput
	.extern	IfxGtm_Tom_Tgc_enableChannels
	.extern	IfxGtm_Tom_Tgc_enableChannelsOutput
	.extern	IfxGtm_Tom_Tgc_setChannelsForceUpdate
	.extern	IfxGtm_Tom_Tgc_trigger
	.extern	IfxGtm_PinMap_setTomTout
	.extern	IfxGtm_Tom_Timer_getOffset
	.extern	IfxGtm_Tom_Timer_addToChannelMask
	.extern	IfxGtm_Tom_Timer_stdIfTimerInit
	.extern	memset
	.extern	__INDIRECT__
	.calls	'IfxGtm_Tom_PwmHl_updateShiftCenterAligned','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L169:
	.word	164497
	.half	3
	.word	.L170
	.byte	4
.L168:
	.byte	1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L171
	.byte	2,1,1,3
	.word	189
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	192
	.byte	6,0,7
	.byte	'__fract',0,4,128,1
.L384:
	.byte	7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	237
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	249
	.byte	6,0,9
	.byte	'void',0,10
	.word	303
	.byte	3
	.word	309
	.byte	7
	.byte	'unsigned int',0,4,7,4
	.byte	'__ldmst_c',0,3,2,111,17,1,1,5
	.byte	'address',0,2,111,42
	.word	314
	.byte	5
	.byte	'mask',0,2,111,60
	.word	319
	.byte	5
	.byte	'value',0,2,111,75
	.word	319
	.byte	6,0,7
	.byte	'unsigned long long int',0,8,7,3
	.word	303
	.byte	8
	.byte	'__ld64',0,3,2,135,1,19
	.word	397
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	423
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	423
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	397
	.byte	6,0,7
	.byte	'int',0,4,5
.L344:
	.byte	7
	.byte	'unsigned char',0,1,8,11
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,45,16,4,12
	.byte	'SRPN',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	2,6,2,35,1,12
	.byte	'SRE',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'TOS',0,1
	.word	516
	.byte	2,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	516
	.byte	3,0,2,35,1,12
	.byte	'ECC',0,1
	.word	516
	.byte	6,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	516
	.byte	2,0,2,35,2,12
	.byte	'SRR',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'CLRR',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'SETR',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'IOV',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'IOVCLR',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'SWS',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'SWSCLR',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	516
	.byte	1,0,2,35,3,0,13,4,70,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	533
	.byte	4,2,35,0,0,10
	.word	823
	.byte	3
	.word	862
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,3,250,1,17,1,1,5
	.byte	'src',0,3,250,1,60
	.word	867
	.byte	6,0
.L350:
	.byte	7
	.byte	'unsigned short int',0,2,7,11
	.byte	'_Ifx_P_OUT_Bits',0,6,143,3,16,4,12
	.byte	'P0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'P2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'P3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'P4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'P5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'P6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'P7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'P8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'P9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'P10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'P11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'P12',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'P13',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'P14',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'P15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	915
	.byte	16,0,2,35,2,0,13,6,181,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	937
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMR_Bits',0,6,169,2,16,4,12
	.byte	'PS0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'PS4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'PS8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'PS12',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'PCL0',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'PCL4',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	516
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	516
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'PCL8',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'PCL12',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	516
	.byte	1,0,2,35,3,0,13,6,133,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1253
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_ID_Bits',0,6,110,16,4,12
	.byte	'MODREV',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'MODTYPE',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'MODNUMBER',0,2
	.word	915
	.byte	16,0,2,35,2,0,13,6,148,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1824
	.byte	4,2,35,0,0,15,4
	.word	516
	.byte	16,3,0,11
	.byte	'_Ifx_P_IOCR0_Bits',0,6,140,1,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	3,5,2,35,0,12
	.byte	'PC0',0,1
	.word	516
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	3,5,2,35,1,12
	.byte	'PC1',0,1
	.word	516
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	516
	.byte	3,5,2,35,2,12
	.byte	'PC2',0,1
	.word	516
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	3,5,2,35,3,12
	.byte	'PC3',0,1
	.word	516
	.byte	5,0,2,35,3,0,13,6,164,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1952
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR4_Bits',0,6,166,1,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	3,5,2,35,0,12
	.byte	'PC4',0,1
	.word	516
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	3,5,2,35,1,12
	.byte	'PC5',0,1
	.word	516
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	516
	.byte	3,5,2,35,2,12
	.byte	'PC6',0,1
	.word	516
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	3,5,2,35,3,12
	.byte	'PC7',0,1
	.word	516
	.byte	5,0,2,35,3,0,13,6,180,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2167
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR8_Bits',0,6,179,1,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	3,5,2,35,0,12
	.byte	'PC8',0,1
	.word	516
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	3,5,2,35,1,12
	.byte	'PC9',0,1
	.word	516
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	516
	.byte	3,5,2,35,2,12
	.byte	'PC10',0,1
	.word	516
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	3,5,2,35,3,12
	.byte	'PC11',0,1
	.word	516
	.byte	5,0,2,35,3,0,13,6,188,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2382
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR12_Bits',0,6,153,1,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	3,5,2,35,0,12
	.byte	'PC12',0,1
	.word	516
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	3,5,2,35,1,12
	.byte	'PC13',0,1
	.word	516
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	516
	.byte	3,5,2,35,2,12
	.byte	'PC14',0,1
	.word	516
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	3,5,2,35,3,12
	.byte	'PC15',0,1
	.word	516
	.byte	5,0,2,35,3,0,13,6,172,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2599
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IN_Bits',0,6,118,16,4,12
	.byte	'P0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'P2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'P3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'P4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'P5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'P6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'P7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'P8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'P9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'P10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'P11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'P12',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'P13',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'P14',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'P15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	915
	.byte	16,0,2,35,2,0,13,6,156,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2819
	.byte	4,2,35,0,0,15,24
	.word	516
	.byte	16,23,0,11
	.byte	'_Ifx_P_PDR0_Bits',0,6,205,3,16,4,12
	.byte	'PD0',0,1
	.word	516
	.byte	3,5,2,35,0,12
	.byte	'PL0',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'PD1',0,1
	.word	516
	.byte	3,1,2,35,0,12
	.byte	'PL1',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'PD2',0,1
	.word	516
	.byte	3,5,2,35,1,12
	.byte	'PL2',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'PD3',0,1
	.word	516
	.byte	3,1,2,35,1,12
	.byte	'PL3',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'PD4',0,1
	.word	516
	.byte	3,5,2,35,2,12
	.byte	'PL4',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'PD5',0,1
	.word	516
	.byte	3,1,2,35,2,12
	.byte	'PL5',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'PD6',0,1
	.word	516
	.byte	3,5,2,35,3,12
	.byte	'PL6',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'PD7',0,1
	.word	516
	.byte	3,1,2,35,3,12
	.byte	'PL7',0,1
	.word	516
	.byte	1,0,2,35,3,0,13,6,205,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3142
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_PDR1_Bits',0,6,226,3,16,4,12
	.byte	'PD8',0,1
	.word	516
	.byte	3,5,2,35,0,12
	.byte	'PL8',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'PD9',0,1
	.word	516
	.byte	3,1,2,35,0,12
	.byte	'PL9',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'PD10',0,1
	.word	516
	.byte	3,5,2,35,1,12
	.byte	'PL10',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'PD11',0,1
	.word	516
	.byte	3,1,2,35,1,12
	.byte	'PL11',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'PD12',0,1
	.word	516
	.byte	3,5,2,35,2,12
	.byte	'PL12',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'PD13',0,1
	.word	516
	.byte	3,1,2,35,2,12
	.byte	'PL13',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'PD14',0,1
	.word	516
	.byte	3,5,2,35,3,12
	.byte	'PL14',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'PD15',0,1
	.word	516
	.byte	3,1,2,35,3,12
	.byte	'PL15',0,1
	.word	516
	.byte	1,0,2,35,3,0,13,6,213,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3446
	.byte	4,2,35,0,0,15,8
	.word	516
	.byte	16,7,0,11
	.byte	'_Ifx_P_ESR_Bits',0,6,88,16,4,12
	.byte	'EN0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	915
	.byte	16,0,2,35,2,0,13,6,140,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3771
	.byte	4,2,35,0,0,15,12
	.word	516
	.byte	16,11,0,11
	.byte	'_Ifx_P_PDISC_Bits',0,6,183,3,16,4,12
	.byte	'PDIS0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PDIS1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'PDIS2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'PDIS3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'PDIS4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'PDIS5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'PDIS6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PDIS7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'PDIS8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'PDIS9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'PDIS10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'PDIS11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'PDIS12',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'PDIS13',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'PDIS14',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'PDIS15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	915
	.byte	16,0,2,35,2,0,13,6,197,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4111
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_PCSR_Bits',0,6,165,3,16,4,12
	.byte	'SEL0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'SEL1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'SEL2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'SEL3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'SEL4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'SEL5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'SEL6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'SEL7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	2,6,2,35,1,12
	.byte	'SEL10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'SEL11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,4
	.word	319
	.byte	19,1,2,35,0,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,13,6,189,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4477
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR0_Bits',0,6,206,2,16,4,12
	.byte	'PS0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	319
	.byte	28,0,2,35,0,0,13,6,149,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4763
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR4_Bits',0,6,227,2,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	4,4,2,35,0,12
	.byte	'PS4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	319
	.byte	24,0,2,35,0,0,13,6,165,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4910
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR8_Bits',0,6,238,2,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'PS8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,4
	.word	319
	.byte	20,0,2,35,0,0,13,6,173,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5079
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR12_Bits',0,6,216,2,16,4,12
	.byte	'reserved_0',0,2
	.word	915
	.byte	12,4,2,35,0,12
	.byte	'PS12',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	915
	.byte	16,0,2,35,2,0,13,6,157,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5251
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR0_Bits',0,6,232,1,16,4,12
	.byte	'reserved_0',0,2
	.word	915
	.byte	16,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'reserved_20',0,2
	.word	915
	.byte	12,0,2,35,2,0,13,6,229,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5426
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR4_Bits',0,6,253,1,16,4,12
	.byte	'reserved_0',0,4
	.word	319
	.byte	20,12,2,35,0,12
	.byte	'PCL4',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	516
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	516
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	8,0,2,35,3,0,13,6,245,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5600
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR8_Bits',0,6,136,2,16,4,12
	.byte	'reserved_0',0,4
	.word	319
	.byte	24,8,2,35,0,12
	.byte	'PCL8',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	516
	.byte	4,0,2,35,3,0,13,6,253,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5774
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR12_Bits',0,6,243,1,16,4,12
	.byte	'reserved_0',0,4
	.word	319
	.byte	28,4,2,35,0,12
	.byte	'PCL12',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	516
	.byte	1,0,2,35,3,0,13,6,237,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5950
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR_Bits',0,6,249,2,16,4,12
	.byte	'PS0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'PS4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'PS8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'PS12',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	915
	.byte	16,0,2,35,2,0,13,6,141,5,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6106
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR_Bits',0,6,147,2,16,4,12
	.byte	'reserved_0',0,2
	.word	915
	.byte	16,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'PCL4',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	516
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	516
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'PCL8',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'PCL12',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	516
	.byte	1,0,2,35,3,0,13,6,221,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6439
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_LPCR0_Bits',0,6,192,1,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	319
	.byte	30,0,2,35,0,0,13,6,196,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6787
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_LPCR1_Bits',0,6,200,1,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	319
	.byte	30,0,2,35,0,0,11
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,6,208,1,16,4,12
	.byte	'RDIS_CTRL',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'RX_DIS',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'TERM',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'LRXTERM',0,1
	.word	516
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	319
	.byte	24,0,2,35,0,0,13,6,204,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6911
	.byte	4,2,35,0,14
	.byte	'B_P21',0
	.word	6995
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_LPCR2_Bits',0,6,218,1,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'LVDSR',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'LVDSRL',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'reserved_10',0,1
	.word	516
	.byte	2,4,2,35,1,12
	.byte	'TDIS_CTRL',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'TX_DIS',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'TX_PD',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'TX_PWDPD',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	915
	.byte	16,0,2,35,2,0,13,6,213,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7175
	.byte	4,2,35,0,0,15,76
	.word	516
	.byte	16,75,0,11
	.byte	'_Ifx_P_ACCEN1_Bits',0,6,82,16,4,12
	.byte	'reserved_0',0,4
	.word	319
	.byte	32,0,2,35,0,0,13,6,132,4,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7428
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_ACCEN0_Bits',0,6,45,16,4,12
	.byte	'EN0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	516
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	516
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	516
	.byte	1,0,2,35,3,0,13,6,252,3,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7515
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P',0,6,229,5,25,128,2,14
	.byte	'OUT',0
	.word	1213
	.byte	4,2,35,0,14
	.byte	'OMR',0
	.word	1784
	.byte	4,2,35,4,14
	.byte	'ID',0
	.word	1903
	.byte	4,2,35,8,14
	.byte	'reserved_C',0
	.word	1943
	.byte	4,2,35,12,14
	.byte	'IOCR0',0
	.word	2127
	.byte	4,2,35,16,14
	.byte	'IOCR4',0
	.word	2342
	.byte	4,2,35,20,14
	.byte	'IOCR8',0
	.word	2559
	.byte	4,2,35,24,14
	.byte	'IOCR12',0
	.word	2779
	.byte	4,2,35,28,14
	.byte	'reserved_20',0
	.word	1943
	.byte	4,2,35,32,14
	.byte	'IN',0
	.word	3093
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	3133
	.byte	24,2,35,40,14
	.byte	'PDR0',0
	.word	3406
	.byte	4,2,35,64,14
	.byte	'PDR1',0
	.word	3722
	.byte	4,2,35,68,14
	.byte	'reserved_48',0
	.word	3762
	.byte	8,2,35,72,14
	.byte	'ESR',0
	.word	4062
	.byte	4,2,35,80,14
	.byte	'reserved_54',0
	.word	4102
	.byte	12,2,35,84,14
	.byte	'PDISC',0
	.word	4437
	.byte	4,2,35,96,14
	.byte	'PCSR',0
	.word	4723
	.byte	4,2,35,100,14
	.byte	'reserved_68',0
	.word	3762
	.byte	8,2,35,104,14
	.byte	'OMSR0',0
	.word	4870
	.byte	4,2,35,112,14
	.byte	'OMSR4',0
	.word	5039
	.byte	4,2,35,116,14
	.byte	'OMSR8',0
	.word	5211
	.byte	4,2,35,120,14
	.byte	'OMSR12',0
	.word	5386
	.byte	4,2,35,124,14
	.byte	'OMCR0',0
	.word	5560
	.byte	4,3,35,128,1,14
	.byte	'OMCR4',0
	.word	5734
	.byte	4,3,35,132,1,14
	.byte	'OMCR8',0
	.word	5910
	.byte	4,3,35,136,1,14
	.byte	'OMCR12',0
	.word	6066
	.byte	4,3,35,140,1,14
	.byte	'OMSR',0
	.word	6399
	.byte	4,3,35,144,1,14
	.byte	'OMCR',0
	.word	6747
	.byte	4,3,35,148,1,14
	.byte	'reserved_98',0
	.word	3762
	.byte	8,3,35,152,1,14
	.byte	'LPCR0',0
	.word	6871
	.byte	4,3,35,160,1,14
	.byte	'LPCR1',0
	.word	7120
	.byte	4,3,35,164,1,14
	.byte	'LPCR2',0
	.word	7379
	.byte	4,3,35,168,1,14
	.byte	'reserved_A4',0
	.word	7419
	.byte	76,3,35,172,1,14
	.byte	'ACCEN1',0
	.word	7475
	.byte	4,3,35,248,1,14
	.byte	'ACCEN0',0
	.word	8042
	.byte	4,3,35,252,1,0,10
	.word	8082
	.byte	3
	.word	8685
	.byte	17,5,172,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0
.L367:
	.byte	4
	.byte	'IfxPort_setPinState',0,3,5,208,4,17,1,1
.L369:
	.byte	5
	.byte	'port',0,5,208,4,44
	.word	8690
.L371:
	.byte	5
	.byte	'pinIndex',0,5,208,4,56
	.word	516
.L373:
	.byte	5
	.byte	'action',0,5,208,4,80
	.word	8695
.L375:
	.byte	6,0,19
	.byte	'IfxStdIf_InterfaceDriver',0,8,118,15
	.word	423
	.byte	20
	.word	249
	.byte	1,1,21
	.word	423
	.byte	0,3
	.word	8909
	.byte	19
	.byte	'IfxStdIf_Timer_GetFrequency',0,7,102,19
	.word	8922
.L353:
	.byte	7
	.byte	'unsigned long int',0,4,7,20
	.word	8963
	.byte	1,1,21
	.word	423
	.byte	0,3
	.word	8984
	.byte	19
	.byte	'IfxStdIf_Timer_GetPeriod',0,7,108,26
	.word	8997
	.byte	19
	.byte	'IfxStdIf_Timer_GetResolution',0,7,114,19
	.word	8922
	.byte	19
	.byte	'IfxStdIf_Timer_GetTrigger',0,7,120,26
	.word	8997
	.byte	20
	.word	516
	.byte	1,1,21
	.word	423
	.byte	21
	.word	249
	.byte	0,3
	.word	9106
	.byte	19
	.byte	'IfxStdIf_Timer_SetFrequency',0,7,128,1,19
	.word	9124
	.byte	22,1,1,21
	.word	423
	.byte	0,3
	.word	9166
	.byte	19
	.byte	'IfxStdIf_Timer_UpdateInputFrequency',0,7,134,1,16
	.word	9175
	.byte	19
	.byte	'IfxStdIf_Timer_ApplyUpdate',0,7,155,1,16
	.word	9175
	.byte	19
	.byte	'IfxStdIf_Timer_DisableUpdate',0,7,172,1,16
	.word	9175
	.byte	19
	.byte	'IfxStdIf_Timer_GetInputFrequency',0,7,178,1,19
	.word	8922
	.byte	19
	.byte	'IfxStdIf_Timer_Run',0,7,187,1,16
	.word	9175
	.byte	20
	.word	516
	.byte	1,1,21
	.word	423
	.byte	21
	.word	8963
	.byte	0,3
	.word	9369
	.byte	19
	.byte	'IfxStdIf_Timer_SetPeriod',0,7,197,1,19
	.word	9387
	.byte	22,1,1,21
	.word	423
	.byte	21
	.word	516
	.byte	0,3
	.word	9426
	.byte	19
	.byte	'IfxStdIf_Timer_SetSingleMode',0,7,206,1,16
	.word	9440
	.byte	22,1,1,21
	.word	423
	.byte	21
	.word	8963
	.byte	0,3
	.word	9483
	.byte	19
	.byte	'IfxStdIf_Timer_SetTrigger',0,7,218,1,16
	.word	9497
	.byte	19
	.byte	'IfxStdIf_Timer_Stop',0,7,224,1,16
	.word	9175
	.byte	20
	.word	516
	.byte	1,1,21
	.word	423
	.byte	0,3
	.word	9566
	.byte	19
	.byte	'IfxStdIf_Timer_AckTimerIrq',0,7,230,1,19
	.word	9579
	.byte	19
	.byte	'IfxStdIf_Timer_AckTriggerIrq',0,7,236,1,19
	.word	9579
	.byte	11
	.byte	'IfxStdIf_Timer_',0,7,240,1,8,68,14
	.byte	'driver',0
	.word	8876
	.byte	4,2,35,0,14
	.byte	'getFrequency',0
	.word	8927
	.byte	4,2,35,4,14
	.byte	'getPeriod',0
	.word	9002
	.byte	4,2,35,8,14
	.byte	'getResolution',0
	.word	9035
	.byte	4,2,35,12,14
	.byte	'getTrigger',0
	.word	9072
	.byte	4,2,35,16,14
	.byte	'setFrequency',0
	.word	9129
	.byte	4,2,35,20,14
	.byte	'updateInputFrequency',0
	.word	9180
	.byte	4,2,35,24,14
	.byte	'applyUpdate',0
	.word	9225
	.byte	4,2,35,28,14
	.byte	'disableUpdate',0
	.word	9261
	.byte	4,2,35,32,14
	.byte	'getInputFrequency',0
	.word	9299
	.byte	4,2,35,36,14
	.byte	'run',0
	.word	9341
	.byte	4,2,35,40,14
	.byte	'setPeriod',0
	.word	9392
	.byte	4,2,35,44,14
	.byte	'setSingleMode',0
	.word	9445
	.byte	4,2,35,48,14
	.byte	'setTrigger',0
	.word	9502
	.byte	4,2,35,52,14
	.byte	'stop',0
	.word	9537
	.byte	4,2,35,56,14
	.byte	'ackTimerIrq',0
	.word	9584
	.byte	4,2,35,60,14
	.byte	'ackTriggerIrq',0
	.word	9620
	.byte	4,2,35,64,0,3
	.word	9658
	.byte	8
	.byte	'IfxStdIf_Timer_getInputFrequency',0,3,7,236,2,20
	.word	249
	.byte	1,1,5
	.byte	'stdIf',0,7,236,2,69
	.word	10037
	.byte	6,0,3
	.word	303
	.byte	3
	.word	8909
	.byte	3
	.word	8984
	.byte	3
	.word	8909
	.byte	3
	.word	8984
	.byte	3
	.word	9106
	.byte	3
	.word	9166
	.byte	3
	.word	9166
	.byte	3
	.word	9166
	.byte	3
	.word	8909
	.byte	3
	.word	9166
	.byte	3
	.word	9369
	.byte	3
	.word	9426
	.byte	3
	.word	9483
	.byte	3
	.word	9166
	.byte	3
	.word	9566
	.byte	3
	.word	9566
	.byte	8
	.byte	'IfxStdIf_Timer_tickToS',0,3,7,182,3,20
	.word	249
	.byte	1,1,5
	.byte	'clockFreq',0,7,182,3,51
	.word	249
	.byte	5
	.byte	'ticks',0,7,182,3,77
	.word	8963
	.byte	6,0
.L476:
	.byte	8
	.byte	'IfxStdIf_Timer_sToTick',0,3,7,193,3,27
	.word	8963
	.byte	1,1
.L479:
	.byte	5
	.byte	'clockFreq',0,7,193,3,58
	.word	249
.L481:
	.byte	5
	.byte	'seconds',0,7,193,3,77
	.word	249
.L483:
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,11
	.byte	'_Ifx_GTM_ATOM_CH_RDADDR_Bits',0,10,171,3,16,4,12
	.byte	'RDADDR0',0,4
	.word	10333
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	7,16,2,35,0,12
	.byte	'RDADDR1',0,4
	.word	10333
	.byte	9,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10333
	.byte	7,0,2,35,0,0,13,10,224,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	10349
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CTRL_Bits',0,10,245,2,16,4,12
	.byte	'MODE',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'TB12_SEL',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'ACB',0,4
	.word	10333
	.byte	5,23,2,35,0,12
	.byte	'CMP_CTRL',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'SL',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC',0,4
	.word	10333
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'WR_REQ',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	10333
	.byte	3,12,2,35,0,12
	.byte	'RST_CCU0',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10333
	.byte	3,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'SLA',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'OSM',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'ABM',0,4
	.word	10333
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10333
	.byte	4,0,2,35,0,0,13,10,184,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	10508
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMC_Bits',0,10,180,3,16,4,12
	.byte	'MODE',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'TB12_SEL',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'ACB10',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'ACB42',0,4
	.word	10333
	.byte	3,23,2,35,0,12
	.byte	'CMP_CTRL',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'SL',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10333
	.byte	4,16,2,35,0,12
	.byte	'WR_REQ',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	10333
	.byte	7,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'SLA',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'ABM',0,4
	.word	10333
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10333
	.byte	4,0,2,35,0,0,13,10,232,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	10921
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMI_Bits',0,10,201,3,16,4,12
	.byte	'MODE',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'ACB0',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10333
	.byte	6,21,2,35,0,12
	.byte	'SL',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10333
	.byte	20,0,2,35,0,0,13,10,240,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11299
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMP_Bits',0,10,213,3,16,4,12
	.byte	'MODE',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'ADL',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10333
	.byte	5,21,2,35,0,12
	.byte	'SL',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC_SR',0,4
	.word	10333
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	10333
	.byte	5,12,2,35,0,12
	.byte	'RST_CCU0',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10333
	.byte	3,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'OSM',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10333
	.byte	5,0,2,35,0,0,13,10,248,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11504
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMS_Bits',0,10,232,3,16,4,12
	.byte	'MODE',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'ACB0',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10333
	.byte	6,21,2,35,0,12
	.byte	'SL',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC',0,4
	.word	10333
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	10333
	.byte	11,6,2,35,0,12
	.byte	'OSM',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10333
	.byte	5,0,2,35,0,0,13,10,128,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11853
	.byte	4,2,35,0,0,13,10,177,55,5,4,14
	.byte	'CTRL',0
	.word	10881
	.byte	4,2,35,0,14
	.byte	'SOMC',0
	.word	11259
	.byte	4,2,35,0,14
	.byte	'SOMI',0
	.word	11464
	.byte	4,2,35,0,14
	.byte	'SOMP',0
	.word	11813
	.byte	4,2,35,0,14
	.byte	'SOMS',0
	.word	12075
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SR0_Bits',0,10,247,3,16,4,12
	.byte	'SR0',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,136,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12192
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SR1_Bits',0,10,254,3,16,4,12
	.byte	'SR1',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,144,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12303
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CM0_Bits',0,10,224,2,16,4,12
	.byte	'CM0',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,160,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12414
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CM1_Bits',0,10,231,2,16,4,12
	.byte	'CM1',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,168,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12525
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CN0_Bits',0,10,238,2,16,4,12
	.byte	'CN0',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,176,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12636
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_STAT_Bits',0,10,133,4,16,4,12
	.byte	'OL',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10333
	.byte	15,16,2,35,0,12
	.byte	'ACBI',0,4
	.word	10333
	.byte	5,11,2,35,0,12
	.byte	'DV',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'WRF',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'ACBO',0,4
	.word	10333
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10333
	.byte	3,0,2,35,0,0,13,10,152,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12747
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_NOTIFY_Bits',0,10,163,3,16,4,12
	.byte	'CCU0TC',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	30,0,2,35,0,0,13,10,216,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12964
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_EN_Bits',0,10,140,3,16,4,12
	.byte	'CCU0TC_IRQ_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC_IRQ_EN',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	30,0,2,35,0,0,13,10,192,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13102
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_FORCINT_Bits',0,10,148,3,16,4,12
	.byte	'TRG_CCU0TC',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'TRG_CCU1TC',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	30,0,2,35,0,0,13,10,200,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13250
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_MODE_Bits',0,10,156,3,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	30,0,2,35,0,0,13,10,208,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13397
	.byte	4,2,35,0,0,15,16
	.word	516
	.byte	16,15,0,11
	.byte	'_Ifx_GTM_ATOM_CH',0,10,174,55,25,64,14
	.byte	'RDADDR',0
	.word	10468
	.byte	4,2,35,0,23
	.word	12115
	.byte	4,2,35,4,14
	.byte	'SR0',0
	.word	12263
	.byte	4,2,35,8,14
	.byte	'SR1',0
	.word	12374
	.byte	4,2,35,12,14
	.byte	'CM0',0
	.word	12485
	.byte	4,2,35,16,14
	.byte	'CM1',0
	.word	12596
	.byte	4,2,35,20,14
	.byte	'CN0',0
	.word	12707
	.byte	4,2,35,24,14
	.byte	'STAT',0
	.word	12924
	.byte	4,2,35,28,14
	.byte	'IRQ_NOTIFY',0
	.word	13062
	.byte	4,2,35,32,14
	.byte	'IRQ_EN',0
	.word	13210
	.byte	4,2,35,36,14
	.byte	'IRQ_FORCINT',0
	.word	13357
	.byte	4,2,35,40,14
	.byte	'IRQ_MODE',0
	.word	13477
	.byte	4,2,35,44,14
	.byte	'reserved_30',0
	.word	13517
	.byte	16,2,35,48,0,10
	.word	13526
	.byte	3
	.word	13750
	.byte	10
	.word	13526
	.byte	11
	.byte	'_Ifx_GTM_ATOM_AGC_GLB_CTRL_Bits',0,10,159,2,16,4,12
	.byte	'HOST_TRIG',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10333
	.byte	7,24,2,35,0,12
	.byte	'RST_CH0',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'UPEN_CTRL0',0,4
	.word	10333
	.byte	2,14,2,35,0,12
	.byte	'UPEN_CTRL1',0,4
	.word	10333
	.byte	2,12,2,35,0,12
	.byte	'UPEN_CTRL2',0,4
	.word	10333
	.byte	2,10,2,35,0,12
	.byte	'UPEN_CTRL3',0,4
	.word	10333
	.byte	2,8,2,35,0,12
	.byte	'UPEN_CTRL4',0,4
	.word	10333
	.byte	2,6,2,35,0,12
	.byte	'UPEN_CTRL5',0,4
	.word	10333
	.byte	2,4,2,35,0,12
	.byte	'UPEN_CTRL6',0,4
	.word	10333
	.byte	2,2,2,35,0,12
	.byte	'UPEN_CTRL7',0,4
	.word	10333
	.byte	2,0,2,35,0,0,13,10,128,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13765
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_ENDIS_CTRL_Bits',0,10,238,1,16,4,12
	.byte	'ENDIS_CTRL0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CTRL1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CTRL2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_CTRL3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_CTRL4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_CTRL5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_CTRL6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_CTRL7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,232,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14215
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_ENDIS_STAT_Bits',0,10,252,1,16,4,12
	.byte	'ENDIS_STAT0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_STAT1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_STAT2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_STAT3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_STAT4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_STAT5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_STAT6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_STAT7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,240,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14503
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_ACT_TB_Bits',0,10,229,1,16,4,12
	.byte	'ACT_TB',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'TB_TRIG',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'TBU_SEL',0,4
	.word	10333
	.byte	2,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10333
	.byte	5,0,2,35,0,0,13,10,224,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14791
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_OUTEN_CTRL_Bits',0,10,196,2,16,4,12
	.byte	'OUTEN_CTRL0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_CTRL1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_CTRL2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_CTRL3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_CTRL4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_CTRL5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_CTRL6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_CTRL7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,144,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14947
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_OUTEN_STAT_Bits',0,10,210,2,16,4,12
	.byte	'OUTEN_STAT0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_STAT1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_STAT2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_STAT3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_STAT4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_STAT5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_STAT6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_STAT7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,152,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15235
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_FUPD_CTRL_Bits',0,10,138,2,16,4,12
	.byte	'FUPD_CTRL0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'FUPD_CTRL1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'FUPD_CTRL2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'FUPD_CTRL3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'FUPD_CTRL4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'FUPD_CTRL5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'FUPD_CTRL6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'FUPD_CTRL7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'RSTCN0_CH0',0,4
	.word	10333
	.byte	2,14,2,35,0,12
	.byte	'RSTCN0_CH1',0,4
	.word	10333
	.byte	2,12,2,35,0,12
	.byte	'RSTCN0_CH2',0,4
	.word	10333
	.byte	2,10,2,35,0,12
	.byte	'RSTCN0_CH3',0,4
	.word	10333
	.byte	2,8,2,35,0,12
	.byte	'RSTCN0_CH4',0,4
	.word	10333
	.byte	2,6,2,35,0,12
	.byte	'RSTCN0_CH5',0,4
	.word	10333
	.byte	2,4,2,35,0,12
	.byte	'RSTCN0_CH6',0,4
	.word	10333
	.byte	2,2,2,35,0,12
	.byte	'RSTCN0_CH7',0,4
	.word	10333
	.byte	2,0,2,35,0,0,13,10,248,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15523
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_INT_TRIG_Bits',0,10,182,2,16,4,12
	.byte	'INT_TRIG0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'INT_TRIG1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'INT_TRIG2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'INT_TRIG3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'INT_TRIG4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'INT_TRIG5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'INT_TRIG6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'INT_TRIG7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,136,35,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15955
	.byte	4,2,35,0,0,15,32
	.word	516
	.byte	16,31,0,11
	.byte	'_Ifx_GTM_ATOM_AGC',0,10,160,55,25,64,14
	.byte	'GLB_CTRL',0
	.word	14175
	.byte	4,2,35,0,14
	.byte	'ENDIS_CTRL',0
	.word	14463
	.byte	4,2,35,4,14
	.byte	'ENDIS_STAT',0
	.word	14751
	.byte	4,2,35,8,14
	.byte	'ACT_TB',0
	.word	14907
	.byte	4,2,35,12,14
	.byte	'OUTEN_CTRL',0
	.word	15195
	.byte	4,2,35,16,14
	.byte	'OUTEN_STAT',0
	.word	15483
	.byte	4,2,35,20,14
	.byte	'FUPD_CTRL',0
	.word	15915
	.byte	4,2,35,24,14
	.byte	'INT_TRIG',0
	.word	16185
	.byte	4,2,35,28,14
	.byte	'reserved_20',0
	.word	16225
	.byte	32,2,35,32,0,10
	.word	16234
	.byte	10
	.word	13526
	.byte	15,64
	.word	516
	.byte	16,63,0,10
	.word	13526
	.byte	10
	.word	13526
	.byte	10
	.word	13526
	.byte	10
	.word	13526
	.byte	10
	.word	13526
	.byte	10
	.word	13526
	.byte	15,192,8
	.word	516
	.byte	16,191,8,0,11
	.byte	'_Ifx_GTM_ATOM',0,10,166,57,25,128,16,14
	.byte	'CH0',0
	.word	13760
	.byte	64,2,35,0,14
	.byte	'AGC',0
	.word	16431
	.byte	64,2,35,64,14
	.byte	'CH1',0
	.word	16436
	.byte	64,3,35,128,1,14
	.byte	'reserved_C0',0
	.word	16441
	.byte	64,3,35,192,1,14
	.byte	'CH2',0
	.word	16450
	.byte	64,3,35,128,2,14
	.byte	'reserved_140',0
	.word	16441
	.byte	64,3,35,192,2,14
	.byte	'CH3',0
	.word	16455
	.byte	64,3,35,128,3,14
	.byte	'reserved_1C0',0
	.word	16441
	.byte	64,3,35,192,3,14
	.byte	'CH4',0
	.word	16460
	.byte	64,3,35,128,4,14
	.byte	'reserved_240',0
	.word	16441
	.byte	64,3,35,192,4,14
	.byte	'CH5',0
	.word	16465
	.byte	64,3,35,128,5,14
	.byte	'reserved_2C0',0
	.word	16441
	.byte	64,3,35,192,5,14
	.byte	'CH6',0
	.word	16470
	.byte	64,3,35,128,6,14
	.byte	'reserved_340',0
	.word	16441
	.byte	64,3,35,192,6,14
	.byte	'CH7',0
	.word	16475
	.byte	64,3,35,128,7,14
	.byte	'reserved_3C0',0
	.word	16480
	.byte	192,8,3,35,192,7,0,10
	.word	16491
	.byte	3
	.word	16798
	.byte	17,11,222,1,9,1,18
	.byte	'IfxGtm_Atom_Ch_none',0,127,18
	.byte	'IfxGtm_Atom_Ch_0',0,0,18
	.byte	'IfxGtm_Atom_Ch_1',0,1,18
	.byte	'IfxGtm_Atom_Ch_2',0,2,18
	.byte	'IfxGtm_Atom_Ch_3',0,3,18
	.byte	'IfxGtm_Atom_Ch_4',0,4,18
	.byte	'IfxGtm_Atom_Ch_5',0,5,18
	.byte	'IfxGtm_Atom_Ch_6',0,6,18
	.byte	'IfxGtm_Atom_Ch_7',0,7,0,8
	.byte	'IfxGtm_Atom_Ch_getChannelPointer',0,3,9,204,4,29
	.word	13755
	.byte	1,1,5
	.byte	'atom',0,9,204,4,76
	.word	16803
	.byte	5
	.byte	'channel',0,9,204,4,97
	.word	16808
	.byte	6,0,17,13,116,9,1,18
	.byte	'Ifx_ActiveState_low',0,0,18
	.byte	'Ifx_ActiveState_high',0,1,0,8
	.byte	'IfxGtm_Tom_PwmHl_invertActiveState',0,3,12,141,1,28
	.word	17067
	.byte	1,1,5
	.byte	'activeState',0,12,141,1,79
	.word	17067
	.byte	6,0,24
	.word	509
	.byte	25
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,21
	.word	17188
	.byte	0,10
	.word	319
	.byte	3
	.word	319
	.byte	26
	.byte	'__cmpswapw',0
	.word	17230
	.byte	1,1,1,1,27
	.byte	'p',0
	.word	17235
	.byte	27
	.byte	'value',0
	.word	319
	.byte	27
	.byte	'compare',0
	.word	319
	.byte	0,28
	.word	197
	.byte	29
	.word	223
	.byte	6,0,28
	.word	258
	.byte	29
	.word	290
	.byte	6,0,28
	.word	335
	.byte	29
	.word	352
	.byte	29
	.word	368
	.byte	29
	.word	381
	.byte	6,0,28
	.word	428
	.byte	29
	.word	447
	.byte	6,0,28
	.word	463
	.byte	29
	.word	478
	.byte	29
	.word	492
	.byte	6,0,28
	.word	872
	.byte	29
	.word	900
	.byte	6,0,28
	.word	8798
	.byte	29
	.word	8826
	.byte	29
	.word	8840
	.byte	29
	.word	8858
	.byte	6,0,28
	.word	10042
	.byte	29
	.word	10087
	.byte	6,0,28
	.word	10189
	.byte	29
	.word	10224
	.byte	29
	.word	10243
	.byte	6,0,28
	.word	10260
	.byte	29
	.word	10295
	.byte	29
	.word	10314
	.byte	6,0,17,5,134,1,9,1,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,17,5,144,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,18
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,18
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,18
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,30,14,195,1,9,16,14
	.byte	'deadtime',0
	.word	249
	.byte	4,2,35,0,14
	.byte	'minPulse',0
	.word	249
	.byte	4,2,35,4,14
	.byte	'channelCount',0
	.word	516
	.byte	1,2,35,8,14
	.byte	'emergencyEnabled',0
	.word	516
	.byte	1,2,35,9,14
	.byte	'outputMode',0
	.word	17447
	.byte	1,2,35,10,14
	.byte	'outputDriver',0
	.word	17517
	.byte	1,2,35,11,14
	.byte	'ccxActiveState',0
	.word	17067
	.byte	1,2,35,12,14
	.byte	'coutxActiveState',0
	.word	17067
	.byte	1,2,35,13,0,3
	.word	17932
	.byte	31
	.byte	'IfxStdIf_PwmHl_initConfig',0,14,192,2,17,1,1,1,1,5
	.byte	'config',0,14,192,2,66
	.word	18115
	.byte	0,28
	.word	16989
	.byte	29
	.word	17034
	.byte	29
	.word	17048
	.byte	6,0
.L362:
	.byte	17,15,84,9,1,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk0',0,0,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk1',0,1,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk2',0,2,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk3',0,3,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk4',0,4,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_noClock',0,5,0,11
	.byte	'_Ifx_GTM_TOM_CH_CTRL_Bits',0,10,249,30,16,4,12
	.byte	'reserved_0',0,4
	.word	10333
	.byte	11,21,2,35,0,12
	.byte	'SL',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC_SR',0,4
	.word	10333
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	10333
	.byte	5,12,2,35,0,12
	.byte	'RST_CCU0',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10333
	.byte	3,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'OSM',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'BITREV',0,4
	.word	10333
	.byte	1,4,2,35,0,12
	.byte	'SPEM',0,4
	.word	10333
	.byte	1,3,2,35,0,12
	.byte	'GCM',0,4
	.word	10333
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	10333
	.byte	2,0,2,35,0,0,13,10,201,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18391
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_SR0_Bits',0,10,170,31,16,4,12
	.byte	'SR0',0,4
	.word	10333
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,241,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18717
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_SR1_Bits',0,10,177,31,16,4,12
	.byte	'SR1',0,4
	.word	10333
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,249,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18827
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_CM0_Bits',0,10,228,30,16,4,12
	.byte	'CM0',0,4
	.word	10333
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,177,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18937
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_CM1_Bits',0,10,235,30,16,4,12
	.byte	'CM1',0,4
	.word	10333
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,185,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19047
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_CN0_Bits',0,10,242,30,16,4,12
	.byte	'CN0',0,4
	.word	10333
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,193,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19157
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_STAT_Bits',0,10,184,31,16,4,12
	.byte	'OL',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10333
	.byte	31,0,2,35,0,0,13,10,129,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19267
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits',0,10,162,31,16,4,12
	.byte	'CCU0TC',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	30,0,2,35,0,0,13,10,233,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19376
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_EN_Bits',0,10,139,31,16,4,12
	.byte	'CCU0TC_IRQ_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC_IRQ_EN',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	30,0,2,35,0,0,13,10,209,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19513
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits',0,10,147,31,16,4,12
	.byte	'TRG_CCU0TC0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'TRG_CCU1TC0',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	30,0,2,35,0,0,13,10,217,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19660
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_MODE_Bits',0,10,155,31,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	30,0,2,35,0,0,13,10,225,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19808
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH',0,10,243,56,25,48,14
	.byte	'CTRL',0
	.word	18677
	.byte	4,2,35,0,14
	.byte	'SR0',0
	.word	18787
	.byte	4,2,35,4,14
	.byte	'SR1',0
	.word	18897
	.byte	4,2,35,8,14
	.byte	'CM0',0
	.word	19007
	.byte	4,2,35,12,14
	.byte	'CM1',0
	.word	19117
	.byte	4,2,35,16,14
	.byte	'CN0',0
	.word	19227
	.byte	4,2,35,20,14
	.byte	'STAT',0
	.word	19336
	.byte	4,2,35,24,14
	.byte	'IRQ_NOTIFY',0
	.word	19473
	.byte	4,2,35,28,14
	.byte	'IRQ_EN',0
	.word	19620
	.byte	4,2,35,32,14
	.byte	'IRQ_FORCINT',0
	.word	19768
	.byte	4,2,35,36,14
	.byte	'IRQ_MODE',0
	.word	19887
	.byte	4,2,35,40,14
	.byte	'reserved_2C',0
	.word	1943
	.byte	4,2,35,44,0,10
	.word	19927
	.byte	11
	.byte	'_Ifx_GTM_TOM_TGC0_GLB_CTRL_Bits',0,10,249,31,16,4,12
	.byte	'HOST_TRIG',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10333
	.byte	7,24,2,35,0,12
	.byte	'RST_CH0',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'UPEN_CTRL0',0,4
	.word	10333
	.byte	2,14,2,35,0,12
	.byte	'UPEN_CTRL1',0,4
	.word	10333
	.byte	2,12,2,35,0,12
	.byte	'UPEN_CTRL2',0,4
	.word	10333
	.byte	2,10,2,35,0,12
	.byte	'UPEN_CTRL3',0,4
	.word	10333
	.byte	2,8,2,35,0,12
	.byte	'UPEN_CTRL4',0,4
	.word	10333
	.byte	2,6,2,35,0,12
	.byte	'UPEN_CTRL5',0,4
	.word	10333
	.byte	2,4,2,35,0,12
	.byte	'UPEN_CTRL6',0,4
	.word	10333
	.byte	2,2,2,35,0,12
	.byte	'UPEN_CTRL7',0,4
	.word	10333
	.byte	2,0,2,35,0,0,13,10,169,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20144
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_ACT_TB_Bits',0,10,191,31,16,4,12
	.byte	'ACT_TB',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'TB_TRIG',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'TBU_SEL',0,4
	.word	10333
	.byte	2,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10333
	.byte	5,0,2,35,0,0,13,10,137,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20594
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_FUPD_CTRL_Bits',0,10,228,31,16,4,12
	.byte	'FUPD_CTRL0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'FUPD_CTRL1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'FUPD_CTRL2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'FUPD_CTRL3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'FUPD_CTRL4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'FUPD_CTRL5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'FUPD_CTRL6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'FUPD_CTRL7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'RSTCN0_CH0',0,4
	.word	10333
	.byte	2,14,2,35,0,12
	.byte	'RSTCN0_CH1',0,4
	.word	10333
	.byte	2,12,2,35,0,12
	.byte	'RSTCN0_CH2',0,4
	.word	10333
	.byte	2,10,2,35,0,12
	.byte	'RSTCN0_CH3',0,4
	.word	10333
	.byte	2,8,2,35,0,12
	.byte	'RSTCN0_CH4',0,4
	.word	10333
	.byte	2,6,2,35,0,12
	.byte	'RSTCN0_CH5',0,4
	.word	10333
	.byte	2,4,2,35,0,12
	.byte	'RSTCN0_CH6',0,4
	.word	10333
	.byte	2,2,2,35,0,12
	.byte	'RSTCN0_CH7',0,4
	.word	10333
	.byte	2,0,2,35,0,0,13,10,161,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20750
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_INT_TRIG_Bits',0,10,144,32,16,4,12
	.byte	'INT_TRIG0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'INT_TRIG1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'INT_TRIG2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'INT_TRIG3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'INT_TRIG4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'INT_TRIG5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'INT_TRIG6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'INT_TRIG7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,177,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21182
	.byte	4,2,35,0,0,10
	.word	19927
	.byte	11
	.byte	'_Ifx_GTM_TOM_TGC0_ENDIS_CTRL_Bits',0,10,200,31,16,4,12
	.byte	'ENDIS_CTRL0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CTRL1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CTRL2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_CTRL3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_CTRL4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_CTRL5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_CTRL6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_CTRL7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,145,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21457
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_ENDIS_STAT_Bits',0,10,214,31,16,4,12
	.byte	'ENDIS_STAT0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_STAT1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_STAT2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_STAT3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_STAT4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_STAT5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_STAT6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_STAT7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,153,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21745
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_OUTEN_CTRL_Bits',0,10,158,32,16,4,12
	.byte	'OUTEN_CTRL0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_CTRL1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_CTRL2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_CTRL3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_CTRL4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_CTRL5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_CTRL6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_CTRL7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,185,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22033
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_OUTEN_STAT_Bits',0,10,172,32,16,4,12
	.byte	'OUTEN_STAT0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_STAT1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_STAT2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_STAT3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_STAT4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_STAT5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_STAT6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_STAT7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,193,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22321
	.byte	4,2,35,0,0,10
	.word	19927
	.byte	10
	.word	19927
	.byte	10
	.word	19927
	.byte	10
	.word	19927
	.byte	10
	.word	19927
	.byte	10
	.word	19927
	.byte	10
	.word	19927
	.byte	11
	.byte	'_Ifx_GTM_TOM_TGC1_GLB_CTRL_Bits',0,10,244,32,16,4,12
	.byte	'HOST_TRIG',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10333
	.byte	7,24,2,35,0,12
	.byte	'RST_CH0',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'UPEN_CTRL0',0,4
	.word	10333
	.byte	2,14,2,35,0,12
	.byte	'UPEN_CTRL1',0,4
	.word	10333
	.byte	2,12,2,35,0,12
	.byte	'UPEN_CTRL2',0,4
	.word	10333
	.byte	2,10,2,35,0,12
	.byte	'UPEN_CTRL3',0,4
	.word	10333
	.byte	2,8,2,35,0,12
	.byte	'UPEN_CTRL4',0,4
	.word	10333
	.byte	2,6,2,35,0,12
	.byte	'UPEN_CTRL5',0,4
	.word	10333
	.byte	2,4,2,35,0,12
	.byte	'UPEN_CTRL6',0,4
	.word	10333
	.byte	2,2,2,35,0,12
	.byte	'UPEN_CTRL7',0,4
	.word	10333
	.byte	2,0,2,35,0,0,13,10,233,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22644
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_ACT_TB_Bits',0,10,186,32,16,4,12
	.byte	'ACT_TB',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'TB_TRIG',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'TBU_SEL',0,4
	.word	10333
	.byte	2,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10333
	.byte	5,0,2,35,0,0,13,10,201,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23094
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_FUPD_CTRL_Bits',0,10,223,32,16,4,12
	.byte	'FUPD_CTRL0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'FUPD_CTRL1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'FUPD_CTRL2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'FUPD_CTRL3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'FUPD_CTRL4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'FUPD_CTRL5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'FUPD_CTRL6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'FUPD_CTRL7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'RSTCN0_CH0',0,4
	.word	10333
	.byte	2,14,2,35,0,12
	.byte	'RSTCN0_CH1',0,4
	.word	10333
	.byte	2,12,2,35,0,12
	.byte	'RSTCN0_CH2',0,4
	.word	10333
	.byte	2,10,2,35,0,12
	.byte	'RSTCN0_CH3',0,4
	.word	10333
	.byte	2,8,2,35,0,12
	.byte	'RSTCN0_CH4',0,4
	.word	10333
	.byte	2,6,2,35,0,12
	.byte	'RSTCN0_CH5',0,4
	.word	10333
	.byte	2,4,2,35,0,12
	.byte	'RSTCN0_CH6',0,4
	.word	10333
	.byte	2,2,2,35,0,12
	.byte	'RSTCN0_CH7',0,4
	.word	10333
	.byte	2,0,2,35,0,0,13,10,225,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23250
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_INT_TRIG_Bits',0,10,139,33,16,4,12
	.byte	'INT_TRIG0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'INT_TRIG1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'INT_TRIG2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'INT_TRIG3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'INT_TRIG4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'INT_TRIG5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'INT_TRIG6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'INT_TRIG7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,241,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23682
	.byte	4,2,35,0,0,10
	.word	19927
	.byte	11
	.byte	'_Ifx_GTM_TOM_TGC1_ENDIS_CTRL_Bits',0,10,195,32,16,4,12
	.byte	'ENDIS_CTRL0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CTRL1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CTRL2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_CTRL3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_CTRL4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_CTRL5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_CTRL6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_CTRL7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,209,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23957
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_ENDIS_STAT_Bits',0,10,209,32,16,4,12
	.byte	'ENDIS_STAT0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_STAT1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_STAT2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_STAT3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_STAT4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_STAT5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_STAT6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_STAT7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,217,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	24245
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_OUTEN_CTRL_Bits',0,10,153,33,16,4,12
	.byte	'OUTEN_CTRL0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_CTRL1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_CTRL2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_CTRL3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_CTRL4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_CTRL5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_CTRL6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_CTRL7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,249,54,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	24533
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_OUTEN_STAT_Bits',0,10,167,33,16,4,12
	.byte	'OUTEN_STAT0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_STAT1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_STAT2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_STAT3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_STAT4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_STAT5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_STAT6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_STAT7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,129,55,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	24821
	.byte	4,2,35,0,0,10
	.word	19927
	.byte	10
	.word	19927
	.byte	10
	.word	19927
	.byte	10
	.word	19927
	.byte	10
	.word	19927
	.byte	10
	.word	19927
	.byte	15,144,8
	.word	516
	.byte	16,143,8,0,11
	.byte	'_Ifx_GTM_TOM',0,10,131,60,25,128,16,14
	.byte	'CH0',0
	.word	20139
	.byte	48,2,35,0,14
	.byte	'TGC0_GLB_CTRL',0
	.word	20554
	.byte	4,2,35,48,14
	.byte	'TGC0_ACT_TB',0
	.word	20710
	.byte	4,2,35,52,14
	.byte	'TGC0_FUPD_CTRL',0
	.word	21142
	.byte	4,2,35,56,14
	.byte	'TGC0_INT_TRIG',0
	.word	21412
	.byte	4,2,35,60,14
	.byte	'CH1',0
	.word	21452
	.byte	48,2,35,64,14
	.byte	'TGC0_ENDIS_CTRL',0
	.word	21705
	.byte	4,2,35,112,14
	.byte	'TGC0_ENDIS_STAT',0
	.word	21993
	.byte	4,2,35,116,14
	.byte	'TGC0_OUTEN_CTRL',0
	.word	22281
	.byte	4,2,35,120,14
	.byte	'TGC0_OUTEN_STAT',0
	.word	22569
	.byte	4,2,35,124,14
	.byte	'CH2',0
	.word	22609
	.byte	48,3,35,128,1,14
	.byte	'reserved_B0',0
	.word	13517
	.byte	16,3,35,176,1,14
	.byte	'CH3',0
	.word	22614
	.byte	48,3,35,192,1,14
	.byte	'reserved_F0',0
	.word	13517
	.byte	16,3,35,240,1,14
	.byte	'CH4',0
	.word	22619
	.byte	48,3,35,128,2,14
	.byte	'reserved_130',0
	.word	13517
	.byte	16,3,35,176,2,14
	.byte	'CH5',0
	.word	22624
	.byte	48,3,35,192,2,14
	.byte	'reserved_170',0
	.word	13517
	.byte	16,3,35,240,2,14
	.byte	'CH6',0
	.word	22629
	.byte	48,3,35,128,3,14
	.byte	'reserved_1B0',0
	.word	13517
	.byte	16,3,35,176,3,14
	.byte	'CH7',0
	.word	22634
	.byte	48,3,35,192,3,14
	.byte	'reserved_1F0',0
	.word	13517
	.byte	16,3,35,240,3,14
	.byte	'CH8',0
	.word	22639
	.byte	48,3,35,128,4,14
	.byte	'TGC1_GLB_CTRL',0
	.word	23054
	.byte	4,3,35,176,4,14
	.byte	'TGC1_ACT_TB',0
	.word	23210
	.byte	4,3,35,180,4,14
	.byte	'TGC1_FUPD_CTRL',0
	.word	23642
	.byte	4,3,35,184,4,14
	.byte	'TGC1_INT_TRIG',0
	.word	23912
	.byte	4,3,35,188,4,14
	.byte	'CH9',0
	.word	23952
	.byte	48,3,35,192,4,14
	.byte	'TGC1_ENDIS_CTRL',0
	.word	24205
	.byte	4,3,35,240,4,14
	.byte	'TGC1_ENDIS_STAT',0
	.word	24493
	.byte	4,3,35,244,4,14
	.byte	'TGC1_OUTEN_CTRL',0
	.word	24781
	.byte	4,3,35,248,4,14
	.byte	'TGC1_OUTEN_STAT',0
	.word	25069
	.byte	4,3,35,252,4,14
	.byte	'CH10',0
	.word	25109
	.byte	48,3,35,128,5,14
	.byte	'reserved_2B0',0
	.word	13517
	.byte	16,3,35,176,5,14
	.byte	'CH11',0
	.word	25114
	.byte	48,3,35,192,5,14
	.byte	'reserved_2F0',0
	.word	13517
	.byte	16,3,35,240,5,14
	.byte	'CH12',0
	.word	25119
	.byte	48,3,35,128,6,14
	.byte	'reserved_330',0
	.word	13517
	.byte	16,3,35,176,6,14
	.byte	'CH13',0
	.word	25124
	.byte	48,3,35,192,6,14
	.byte	'reserved_370',0
	.word	13517
	.byte	16,3,35,240,6,14
	.byte	'CH14',0
	.word	25129
	.byte	48,3,35,128,7,14
	.byte	'reserved_3B0',0
	.word	13517
	.byte	16,3,35,176,7,14
	.byte	'CH15',0
	.word	25134
	.byte	48,3,35,192,7,14
	.byte	'reserved_3F0',0
	.word	25139
	.byte	144,8,3,35,240,7,0,10
	.word	25150
	.byte	3
	.word	26064
.L365:
	.byte	17,11,158,2,9,1,18
	.byte	'IfxGtm_Tom_Ch_none',0,127,18
	.byte	'IfxGtm_Tom_Ch_0',0,0,18
	.byte	'IfxGtm_Tom_Ch_1',0,1,18
	.byte	'IfxGtm_Tom_Ch_2',0,2,18
	.byte	'IfxGtm_Tom_Ch_3',0,3,18
	.byte	'IfxGtm_Tom_Ch_4',0,4,18
	.byte	'IfxGtm_Tom_Ch_5',0,5,18
	.byte	'IfxGtm_Tom_Ch_6',0,6,18
	.byte	'IfxGtm_Tom_Ch_7',0,7,18
	.byte	'IfxGtm_Tom_Ch_8',0,8,18
	.byte	'IfxGtm_Tom_Ch_9',0,9,18
	.byte	'IfxGtm_Tom_Ch_10',0,10,18
	.byte	'IfxGtm_Tom_Ch_11',0,11,18
	.byte	'IfxGtm_Tom_Ch_12',0,12,18
	.byte	'IfxGtm_Tom_Ch_13',0,13,18
	.byte	'IfxGtm_Tom_Ch_14',0,14,18
	.byte	'IfxGtm_Tom_Ch_15',0,15,0,32
	.byte	'IfxGtm_Tom_Ch_getClockSource',0,15,157,1,33
	.word	18189
	.byte	1,1,1,1,5
	.byte	'tom',0,15,157,1,75
	.word	26069
	.byte	5
	.byte	'channel',0,15,157,1,94
	.word	26074
	.byte	0,10
	.word	19927
	.byte	11
	.byte	'IfxGtm_Tom_TGC',0,11,197,2,8,80,14
	.byte	'GLB_CTRL',0
	.word	20554
	.byte	4,2,35,0,14
	.byte	'ACT_TB',0
	.word	20710
	.byte	4,2,35,4,14
	.byte	'FUPD_CTRL',0
	.word	21142
	.byte	4,2,35,8,14
	.byte	'INT_TRIG',0
	.word	21412
	.byte	4,2,35,12,14
	.byte	'xxxCH1',0
	.word	26469
	.byte	48,2,35,16,14
	.byte	'ENDIS_CTRL',0
	.word	21705
	.byte	4,2,35,64,14
	.byte	'ENDIS_STAT',0
	.word	21993
	.byte	4,2,35,68,14
	.byte	'OUTEN_CTRL',0
	.word	22281
	.byte	4,2,35,72,14
	.byte	'OUTEN_STAT',0
	.word	22569
	.byte	4,2,35,76,0,10
	.word	26474
	.byte	3
	.word	26663
	.byte	32
	.byte	'IfxGtm_Tom_Ch_getTgcPointer',0,15,207,1,29
	.word	26668
	.byte	1,1,1,1,5
	.byte	'tom',0,15,207,1,70
	.word	26069
	.byte	5
	.byte	'tgcIndex',0,15,207,1,82
	.word	8963
	.byte	0,31
	.byte	'IfxGtm_Tom_Ch_setClockSource',0,15,250,1,17,1,1,1,1,5
	.byte	'tom',0,15,250,1,59
	.word	26069
	.byte	5
	.byte	'channel',0,15,250,1,78
	.word	26074
	.byte	5
	.byte	'clock',0,15,250,1,108
	.word	18189
	.byte	0,31
	.byte	'IfxGtm_Tom_Ch_setCompareShadow',0,15,156,2,17,1,1,1,1,5
	.byte	'tom',0,15,156,2,61
	.word	26069
	.byte	5
	.byte	'channel',0,15,156,2,80
	.word	26074
	.byte	5
	.byte	'shadowZero',0,15,156,2,96
	.word	8963
	.byte	5
	.byte	'shadowOne',0,15,156,2,115
	.word	8963
	.byte	0,31
	.byte	'IfxGtm_Tom_Ch_setCounterValue',0,15,180,2,17,1,1,1,1,5
	.byte	'tom',0,15,180,2,60
	.word	26069
	.byte	5
	.byte	'channel',0,15,180,2,79
	.word	26074
	.byte	5
	.byte	'value',0,15,180,2,95
	.word	8963
	.byte	0,17,15,104,9,1,18
	.byte	'IfxGtm_Tom_Ch_ResetEvent_onCm0',0,0,18
	.byte	'IfxGtm_Tom_Ch_ResetEvent_onTrigger',0,1,0,31
	.byte	'IfxGtm_Tom_Ch_setResetSource',0,15,222,2,17,1,1,1,1,5
	.byte	'tom',0,15,222,2,59
	.word	26069
	.byte	5
	.byte	'channel',0,15,222,2,78
	.word	26074
	.byte	5
	.byte	'event',0,15,222,2,112
	.word	27025
	.byte	0,31
	.byte	'IfxGtm_Tom_Ch_setSignalLevel',0,15,230,2,17,1,1,1,1,5
	.byte	'tom',0,15,230,2,59
	.word	26069
	.byte	5
	.byte	'channel',0,15,230,2,78
	.word	26074
	.byte	5
	.byte	'activeState',0,15,230,2,103
	.word	17067
	.byte	0,17,15,96,9,1,18
	.byte	'IfxGtm_Tom_Ch_OutputTrigger_forward',0,0,18
	.byte	'IfxGtm_Tom_Ch_OutputTrigger_generate',0,1,0,31
	.byte	'IfxGtm_Tom_Ch_setTriggerOutput',0,15,246,2,17,1,1,1,1,5
	.byte	'tom',0,15,246,2,61
	.word	26069
	.byte	5
	.byte	'channel',0,15,246,2,80
	.word	26074
	.byte	5
	.byte	'trigger',0,15,246,2,117
	.word	27275
	.byte	0,31
	.byte	'IfxGtm_Tom_Tgc_enableChannels',0,15,189,3,17,1,1,1,1,5
	.byte	'tgc',0,15,189,3,64
	.word	26668
	.byte	5
	.byte	'enableMask',0,15,189,3,76
	.word	915
	.byte	5
	.byte	'disableMask',0,15,189,3,95
	.word	915
	.byte	5
	.byte	'immediate',0,15,189,3,116
	.word	516
	.byte	0,31
	.byte	'IfxGtm_Tom_Tgc_enableChannelsOutput',0,15,198,3,17,1,1,1,1,5
	.byte	'tgc',0,15,198,3,70
	.word	26668
	.byte	5
	.byte	'enableMask',0,15,198,3,82
	.word	915
	.byte	5
	.byte	'disableMask',0,15,198,3,101
	.word	915
	.byte	5
	.byte	'immediate',0,15,198,3,122
	.word	516
	.byte	0,31
	.byte	'IfxGtm_Tom_Tgc_setChannelsForceUpdate',0,15,247,3,17,1,1,1,1,5
	.byte	'tgc',0,15,247,3,72
	.word	26668
	.byte	5
	.byte	'enableMask',0,15,247,3,84
	.word	915
	.byte	5
	.byte	'disableMask',0,15,247,3,103
	.word	915
	.byte	5
	.byte	'resetEnableMask',0,15,247,3,123
	.word	915
	.byte	5
	.byte	'resetDisableMask',0,15,247,3,147,1
	.word	915
	.byte	0,31
	.byte	'IfxGtm_Tom_Tgc_trigger',0,15,133,4,17,1,1,1,1,5
	.byte	'tgc',0,15,133,4,57
	.word	26668
	.byte	0,17,11,150,2,9,1,18
	.byte	'IfxGtm_Tom_0',0,0,18
	.byte	'IfxGtm_Tom_1',0,1,0,17,16,86,9,1,18
	.byte	'IfxGtm_ToutSel_a',0,0,18
	.byte	'IfxGtm_ToutSel_b',0,1,18
	.byte	'IfxGtm_ToutSel_c',0,2,18
	.byte	'IfxGtm_ToutSel_d',0,3,18
	.byte	'IfxGtm_ToutSel_e',0,4,0,30,5,190,1,9,8,14
	.byte	'port',0
	.word	8690
	.byte	4,2,35,0,14
	.byte	'pinIndex',0
	.word	516
	.byte	1,2,35,4,0,17,5,120,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,30,16,119,15,20,14
	.byte	'tom',0
	.word	27878
	.byte	1,2,35,0,14
	.byte	'channel',0
	.word	26074
	.byte	1,2,35,1,14
	.byte	'toutSel',0
	.word	27915
	.byte	1,2,35,2,14
	.byte	'toutn',0
	.word	8963
	.byte	4,2,35,4,14
	.byte	'pin',0
	.word	28016
	.byte	8,2,35,8,14
	.byte	'select',0
	.word	28055
	.byte	1,2,35,16,0,24
	.word	28272
	.byte	3
	.word	28369
	.byte	31
	.byte	'IfxGtm_PinMap_setTomTout',0,16,142,1,17,1,1,1,1,5
	.byte	'config',0,16,142,1,62
	.word	28374
	.byte	5
	.byte	'outputMode',0,16,142,1,89
	.word	17447
	.byte	5
	.byte	'padDriver',0,16,142,1,119
	.word	17517
	.byte	0,17,7,88,9,1,18
	.byte	'IfxStdIf_Timer_CountDir_up',0,0,18
	.byte	'IfxStdIf_Timer_CountDir_upAndDown',0,1,18
	.byte	'IfxStdIf_Timer_CountDir_down',0,2,0,30,17,149,1,9,12,14
	.byte	'period',0
	.word	8963
	.byte	4,2,35,0,14
	.byte	'triggerEnabled',0
	.word	516
	.byte	1,2,35,4,14
	.byte	'clockFreq',0
	.word	249
	.byte	4,2,35,6,14
	.byte	'countDir',0
	.word	28469
	.byte	1,2,35,10,0,11
	.byte	'_Ifx_GTM_REV_Bits',0,10,213,27,16,4,12
	.byte	'STEP',0,4
	.word	10333
	.byte	8,24,2,35,0,12
	.byte	'NO',0,4
	.word	10333
	.byte	4,20,2,35,0,12
	.byte	'MINOR',0,4
	.word	10333
	.byte	4,16,2,35,0,12
	.byte	'MAJOR',0,4
	.word	10333
	.byte	4,12,2,35,0,12
	.byte	'DEV_CODE0',0,4
	.word	10333
	.byte	4,8,2,35,0,12
	.byte	'DEV_CODE1',0,4
	.word	10333
	.byte	4,4,2,35,0,12
	.byte	'DEV_CODE2',0,4
	.word	10333
	.byte	4,0,2,35,0,0,13,10,249,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28655
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_RST_Bits',0,10,225,27,16,4,12
	.byte	'RST',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10333
	.byte	31,0,2,35,0,0,13,10,129,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28847
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CTRL_Bits',0,10,201,10,16,4,12
	.byte	'RF_PROT',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'TO_MODE',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'TO_VAL',0,4
	.word	10333
	.byte	5,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	23,0,2,35,0,0,13,10,168,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28949
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_AEI_ADDR_XPT_Bits',0,10,114,16,4,12
	.byte	'TO_ADDR',0,4
	.word	10333
	.byte	20,12,2,35,0,12
	.byte	'TO_W1R0',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10333
	.byte	11,0,2,35,0,0,13,10,232,33,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29115
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_NOTIFY_Bits',0,10,139,23,16,4,12
	.byte	'AEI_TO_XPT',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'AEI_USP_ADDR',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'AEI_IM_ADDR',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'AEI_USP_BE',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10333
	.byte	28,0,2,35,0,0,13,10,137,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29249
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_EN_Bits',0,10,240,22,16,4,12
	.byte	'AEI_TO_XPT_IRQ_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'AEI_USP_ADDR_IRQ_EN',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'AEI_IM_ADDR_IRQ_EN',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'AEI_USP_BE_IRQ_EN',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10333
	.byte	28,0,2,35,0,0,13,10,241,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29434
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_FORCINT_Bits',0,10,250,22,16,4,12
	.byte	'TRG_AEI_TO_XPT',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'TRG_AEI_USP_ADDR',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'TRG_AEI_IM_ADDR',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'TRG_AEI_USP_BE',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10333
	.byte	28,0,2,35,0,0,13,10,249,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29643
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_MODE_Bits',0,10,132,23,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	30,0,2,35,0,0,13,10,129,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29845
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_EIRQ_EN_Bits',0,10,211,18,16,4,12
	.byte	'AEI_TO_XPT_EIRQ_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'AEI_USP_ADDR_EIRQ_EN',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'AEI_IM_ADDR_EIRQ_EN',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'AEI_USP_BE_EIRQ_EN',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10333
	.byte	28,0,2,35,0,0,13,10,217,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29957
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE_MODE_Bits',0,10,180,8,16,4,12
	.byte	'BRG_MODE',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'MSK_WR_RSP',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	6,24,2,35,0,12
	.byte	'MODE_UP_PGR',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'BUFF_OVL',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'SYNC_INPUT_REG',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	3,16,2,35,0,12
	.byte	'BRG_RST',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	10333
	.byte	7,8,2,35,0,12
	.byte	'BUFF_DPT',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,144,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30171
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE_PTR1_Bits',0,10,196,8,16,4,12
	.byte	'NEW_TRAN_PTR',0,4
	.word	10333
	.byte	5,27,2,35,0,12
	.byte	'FIRST_RSP_PTR',0,4
	.word	10333
	.byte	5,22,2,35,0,12
	.byte	'TRAN_IN_PGR',0,4
	.word	10333
	.byte	5,17,2,35,0,12
	.byte	'ABT_TRAN_PGR',0,4
	.word	10333
	.byte	5,12,2,35,0,12
	.byte	'FBC',0,4
	.word	10333
	.byte	6,6,2,35,0,12
	.byte	'RSP_TRAN_RDY',0,4
	.word	10333
	.byte	6,0,2,35,0,0,13,10,152,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30485
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE_PTR2_Bits',0,10,207,8,16,4,12
	.byte	'TRAN_IN_PGR2',0,4
	.word	10333
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10333
	.byte	27,0,2,35,0,0,13,10,160,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30693
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE',0,10,222,57,25,12,14
	.byte	'MODE',0
	.word	30445
	.byte	4,2,35,0,14
	.byte	'PTR1',0
	.word	30653
	.byte	4,2,35,4,14
	.byte	'PTR2',0
	.word	30772
	.byte	4,2,35,8,0,10
	.word	30812
	.byte	11
	.byte	'_Ifx_GTM_TIM_AUX_IN_SRC_Bits',0,10,151,29,16,4,12
	.byte	'SRC_CH0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'SRC_CH1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'SRC_CH2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'SRC_CH3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'SRC_CH4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'SRC_CH5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'SRC_CH6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'SRC_CH7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10333
	.byte	24,0,2,35,0,0,13,10,153,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30882
	.byte	4,2,35,0,0,15,12
	.word	31092
	.byte	16,2,0,15,180,1
	.word	516
	.byte	16,179,1,0,11
	.byte	'_Ifx_GTM_TBU_CHEN_Bits',0,10,142,29,16,4,12
	.byte	'ENDIS_CH0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CH1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CH2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10333
	.byte	26,0,2,35,0,0,13,10,145,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31152
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH0_CTRL_Bits',0,10,232,28,16,4,12
	.byte	'LOW_RES',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'CH_CLK_SRC',0,4
	.word	10333
	.byte	3,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10333
	.byte	28,0,2,35,0,0,13,10,233,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31307
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH0_BASE_Bits',0,10,225,28,16,4,12
	.byte	'BASE',0,4
	.word	10333
	.byte	27,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10333
	.byte	5,0,2,35,0,0,13,10,225,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31444
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH1_CTRL_Bits',0,10,247,28,16,4,12
	.byte	'CH_MODE',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'CH_CLK_SRC',0,4
	.word	10333
	.byte	3,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10333
	.byte	28,0,2,35,0,0,13,10,249,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31557
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH1_BASE_Bits',0,10,240,28,16,4,12
	.byte	'BASE',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,241,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31694
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH2_CTRL_Bits',0,10,134,29,16,4,12
	.byte	'CH_MODE',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'CH_CLK_SRC',0,4
	.word	10333
	.byte	3,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10333
	.byte	28,0,2,35,0,0,13,10,137,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31807
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH2_BASE_Bits',0,10,255,28,16,4,12
	.byte	'BASE',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,129,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31944
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU',0,10,225,59,25,28,14
	.byte	'CHEN',0
	.word	31267
	.byte	4,2,35,0,14
	.byte	'CH0_CTRL',0
	.word	31404
	.byte	4,2,35,4,14
	.byte	'CH0_BASE',0
	.word	31517
	.byte	4,2,35,8,14
	.byte	'CH1_CTRL',0
	.word	31654
	.byte	4,2,35,12,14
	.byte	'CH1_BASE',0
	.word	31767
	.byte	4,2,35,16,14
	.byte	'CH2_CTRL',0
	.word	31904
	.byte	4,2,35,20,14
	.byte	'CH2_BASE',0
	.word	32017
	.byte	4,2,35,24,0,10
	.word	32057
	.byte	15,100
	.word	516
	.byte	16,99,0,11
	.byte	'_Ifx_GTM_MON_STATUS_Bits',0,10,246,25,16,4,12
	.byte	'ACT_CMU0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'ACT_CMU1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'ACT_CMU2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'ACT_CMU3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'ACT_CMU4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'ACT_CMU5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'ACT_CMU6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'ACT_CMU7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'ACT_CMUFX0',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'ACT_CMUFX1',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'ACT_CMUFX2',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'ACT_CMUFX3',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'ACT_CMUFX4',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	3,16,2,35,0,12
	.byte	'CMP_ERR',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	10333
	.byte	3,12,2,35,0,12
	.byte	'MCS0_ERR',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'MCS1_ERR',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'MCS2_ERR',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10333
	.byte	9,0,2,35,0,0,13,10,249,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	32213
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MON_ACTIVITY_0_Bits',0,10,216,25,16,4,12
	.byte	'MCA_0_0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'MCA_0_1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'MCA_0_2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'MCA_0_3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'MCA_0_4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'MCA_0_5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'MCA_0_6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'MCA_0_7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'MCA_1_0',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'MCA_1_1',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'MCA_1_2',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'MCA_1_3',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'MCA_1_4',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'MCA_1_5',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'MCA_1_6',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'MCA_1_7',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'MCA_2_0',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'MCA_2_1',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'MCA_2_2',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'MCA_2_3',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'MCA_2_4',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'MCA_2_5',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'MCA_2_6',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'MCA_2_7',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,241,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	32703
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MON',0,10,185,59,25,8,14
	.byte	'STATUS',0
	.word	32663
	.byte	4,2,35,0,14
	.byte	'ACTIVITY_0',0
	.word	33218
	.byte	4,2,35,4,0,10
	.word	33258
	.byte	15,120
	.word	516
	.byte	16,119,0,11
	.byte	'_Ifx_GTM_CMP_EN_Bits',0,10,254,8,16,4,12
	.byte	'ABWC0_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'ABWC1_EN',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'ABWC2_EN',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'ABWC3_EN',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'ABWC4_EN',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'ABWC5_EN',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'ABWC6_EN',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'ABWC7_EN',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'ABWC8_EN',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'ABWC9_EN',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'ABWC10_EN',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'ABWC11_EN',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'TBWC0_EN',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'TBWC1_EN',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'TBWC2_EN',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'TBWC3_EN',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'TBWC4_EN',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'TBWC5_EN',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'TBWC6_EN',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'TBWC7_EN',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'TBWC8_EN',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'TBWC9_EN',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'TBWC10_EN',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'TBWC11_EN',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,184,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	33328
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_NOTIFY_Bits',0,10,223,9,16,4,12
	.byte	'ABWC0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'ABWC1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'ABWC2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'ABWC3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'ABWC4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'ABWC5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'ABWC6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'ABWC7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'ABWC8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'ABWC9',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'ABWC10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'ABWC11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'TBWC0',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'TBWC1',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'TBWC2',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'TBWC3',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'TBWC4',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'TBWC5',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'TBWC6',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'TBWC7',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'TBWC8',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'TBWC9',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'TBWC10',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'TBWC11',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,216,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	33903
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_EN_Bits',0,10,156,9,16,4,12
	.byte	'ABWC0_EN_IRQ',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'ABWC1_EN_IRQ',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'ABWC2_EN_IRQ',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'ABWC3_EN_IRQ',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'ABWC4_EN_IRQ',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'ABWC5_EN_IRQ',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'ABWC6_EN_IRQ',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'ABWC7_EN_IRQ',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'ABWC8_EN_IRQ',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'ABWC9_EN_IRQ',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'ABWC10_EN_IRQ',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'ABWC11_EN_IRQ',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'TBWC0_EN_IRQ',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'TBWC1_EN_IRQ',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'TBWC2_EN_IRQ',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'TBWC3_EN_IRQ',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'TBWC4_EN_IRQ',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'TBWC5_EN_IRQ',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'TBWC6_EN_IRQ',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'TBWC7_EN_IRQ',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'TBWC8_EN_IRQ',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'TBWC9_EN_IRQ',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'TBWC10_EN_IRQ',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'TBWC11_EN_IRQ',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,192,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34414
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_FORCINT_Bits',0,10,186,9,16,4,12
	.byte	'TRG_ABWC0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'TRG_ABWC1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'TRG_ABWC2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'TRG_ABWC3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'TRG_ABWC4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'TRG_ABWC5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'TRG_ABWC6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'TRG_ABWC7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'TRG_ABWC8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'TRG_ABWC9',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'TRG_ABWC10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'TRG_ABWC11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'TRG_TBWC0',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'TRG_TBWC1',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'TRG_TBWC2',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'TRG_TBWC3',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'TRG_TBWC4',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'TRG_TBWC5',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'TRG_TBWC6',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'TRG_TBWC7',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'TRG_TBWC8',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'TRG_TBWC9',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'TRG_TBWC10',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'TRG_TBWC11',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,200,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35089
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_MODE_Bits',0,10,216,9,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	30,0,2,35,0,0,13,10,208,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35697
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_EIRQ_EN_Bits',0,10,224,8,16,4,12
	.byte	'ABWC0_EN_EIRQ',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'ABWC1_EN_EIRQ',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'ABWC2_EN_EIRQ',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'ABWC3_EN_EIRQ',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'ABWC4_EN_EIRQ',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'ABWC5_EN_EIRQ',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'ABWC6_EN_EIRQ',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'ABWC7_EN_EIRQ',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'ABWC8_EN_EIRQ',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'ABWC9_EN_EIRQ',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'ABWC10_EN_EIRQ',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'ABWC11_EN_EIRQ',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'TBWC0_EN_EIRQ',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'TBWC1_EN_EIRQ',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'TBWC2_EN_EIRQ',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'TBWC3_EN_EIRQ',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'TBWC4_EN_EIRQ',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'TBWC5_EN_EIRQ',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'TBWC6_EN_EIRQ',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'TBWC7_EN_EIRQ',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'TBWC8_EN_EIRQ',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'TBWC9_EN_EIRQ',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'TBWC10_EN_EIRQ',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'TBWC11_EN_EIRQ',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,176,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35813
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP',0,10,230,57,25,24,14
	.byte	'EN',0
	.word	33863
	.byte	4,2,35,0,14
	.byte	'IRQ_NOTIFY',0
	.word	34374
	.byte	4,2,35,4,14
	.byte	'IRQ_EN',0
	.word	35049
	.byte	4,2,35,8,14
	.byte	'IRQ_FORCINT',0
	.word	35657
	.byte	4,2,35,12,14
	.byte	'IRQ_MODE',0
	.word	35773
	.byte	4,2,35,16,14
	.byte	'EIRQ_EN',0
	.word	36473
	.byte	4,2,35,20,0,10
	.word	36513
	.byte	15,104
	.word	516
	.byte	16,103,0,11
	.byte	'_Ifx_GTM_ARU_ARU_ACCESS_Bits',0,10,129,1,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	3,20,2,35,0,12
	.byte	'RREQ',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'WREQ',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	10333
	.byte	18,0,2,35,0,0,13,10,248,33,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36651
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DATA_H_Bits',0,10,139,1,16,4,12
	.byte	'DATA',0,4
	.word	10333
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10333
	.byte	3,0,2,35,0,0,13,10,128,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36820
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DATA_L_Bits',0,10,146,1,16,4,12
	.byte	'DATA',0,4
	.word	10333
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10333
	.byte	3,0,2,35,0,0,13,10,136,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36931
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_ACCESS0_Bits',0,10,153,1,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	23,0,2,35,0,0,13,10,144,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37042
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA0_H_Bits',0,10,167,1,16,4,12
	.byte	'DATA',0,4
	.word	10333
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10333
	.byte	3,0,2,35,0,0,13,10,160,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37157
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA0_L_Bits',0,10,174,1,16,4,12
	.byte	'DATA',0,4
	.word	10333
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10333
	.byte	3,0,2,35,0,0,13,10,168,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37273
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_ACCESS1_Bits',0,10,160,1,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	23,0,2,35,0,0,13,10,152,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37389
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA1_H_Bits',0,10,181,1,16,4,12
	.byte	'DATA',0,4
	.word	10333
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10333
	.byte	3,0,2,35,0,0,13,10,176,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37504
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA1_L_Bits',0,10,188,1,16,4,12
	.byte	'DATA',0,4
	.word	10333
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10333
	.byte	3,0,2,35,0,0,13,10,184,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37620
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_NOTIFY_Bits',0,10,220,1,16,4,12
	.byte	'NEW_DATA0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'NEW_DATA1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'ACC_ACK',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10333
	.byte	29,0,2,35,0,0,13,10,216,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37736
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_EN_Bits',0,10,195,1,16,4,12
	.byte	'NEW_DATA0_IRQ_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'NEW_DATA1_IRQ_EN',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'ACC_ACK_IRQ_EN',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10333
	.byte	29,0,2,35,0,0,13,10,192,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37895
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_FORCINT_Bits',0,10,204,1,16,4,12
	.byte	'TRG_NEW_DATA0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'TRG_NEW_DATA',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'TRG_ACC_ACK',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10333
	.byte	29,0,2,35,0,0,13,10,200,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38071
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_MODE_Bits',0,10,213,1,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	30,0,2,35,0,0,13,10,208,34,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38242
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU',0,10,148,57,25,52,14
	.byte	'ARU_ACCESS',0
	.word	36780
	.byte	4,2,35,0,14
	.byte	'DATA_H',0
	.word	36891
	.byte	4,2,35,4,14
	.byte	'DATA_L',0
	.word	37002
	.byte	4,2,35,8,14
	.byte	'DBG_ACCESS0',0
	.word	37117
	.byte	4,2,35,12,14
	.byte	'DBG_DATA0_H',0
	.word	37233
	.byte	4,2,35,16,14
	.byte	'DBG_DATA0_L',0
	.word	37349
	.byte	4,2,35,20,14
	.byte	'DBG_ACCESS1',0
	.word	37464
	.byte	4,2,35,24,14
	.byte	'DBG_DATA1_H',0
	.word	37580
	.byte	4,2,35,28,14
	.byte	'DBG_DATA1_L',0
	.word	37696
	.byte	4,2,35,32,14
	.byte	'IRQ_NOTIFY',0
	.word	37855
	.byte	4,2,35,36,14
	.byte	'IRQ_EN',0
	.word	38031
	.byte	4,2,35,40,14
	.byte	'IRQ_FORCINT',0
	.word	38202
	.byte	4,2,35,44,14
	.byte	'IRQ_MODE',0
	.word	38318
	.byte	4,2,35,48,0,10
	.word	38358
	.byte	11
	.byte	'_Ifx_GTM_CMU_CLK_EN_Bits',0,10,148,10,16,4,12
	.byte	'EN_CLK0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'EN_CLK1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'EN_CLK2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'EN_CLK3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'EN_CLK4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'EN_CLK5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'EN_CLK6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'EN_CLK7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'EN_ECLK0',0,4
	.word	10333
	.byte	2,14,2,35,0,12
	.byte	'EN_ECLK1',0,4
	.word	10333
	.byte	2,12,2,35,0,12
	.byte	'EN_ECLK2',0,4
	.word	10333
	.byte	2,10,2,35,0,12
	.byte	'EN_FXCLK',0,4
	.word	10333
	.byte	2,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,248,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38636
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_GCLK_NUM_Bits',0,10,194,10,16,4,12
	.byte	'GCLK_NUM',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,160,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38963
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_GCLK_DEN_Bits',0,10,187,10,16,4,12
	.byte	'GCLK_DEN',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,152,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39080
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK0_5_CTRL_Bits',0,10,253,9,16,4,12
	.byte	'CLK_CNT',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,224,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39197
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK0_5',0,10,200,55,25,4,14
	.byte	'CTRL',0
	.word	39276
	.byte	4,2,35,0,0,15,24
	.word	39316
	.byte	16,5,0,10
	.word	39357
	.byte	11
	.byte	'_Ifx_GTM_CMU_CLK_6_CTRL_Bits',0,10,132,10,16,4,12
	.byte	'CLK_CNT',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'CLK6_SEL',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10333
	.byte	7,0,2,35,0,0,13,10,232,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39371
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK_6',0,10,206,55,25,4,14
	.byte	'CTRL',0
	.word	39469
	.byte	4,2,35,0,0,10
	.word	39509
	.byte	11
	.byte	'_Ifx_GTM_CMU_CLK_7_CTRL_Bits',0,10,140,10,16,4,12
	.byte	'CLK_CNT',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'CLK7_SEL',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10333
	.byte	7,0,2,35,0,0,13,10,240,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39554
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK_7',0,10,212,55,25,4,14
	.byte	'CTRL',0
	.word	39652
	.byte	4,2,35,0,0,10
	.word	39692
	.byte	11
	.byte	'_Ifx_GTM_CMU_ECLK_NUM_Bits',0,10,173,10,16,4,12
	.byte	'ECLK_NUM',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,136,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39737
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_ECLK_DEN_Bits',0,10,166,10,16,4,12
	.byte	'ECLK_DEN',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,128,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39854
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_ECLK',0,10,218,55,25,8,14
	.byte	'NUM',0
	.word	39814
	.byte	4,2,35,0,14
	.byte	'DEN',0
	.word	39931
	.byte	4,2,35,4,0,15,24
	.word	39971
	.byte	16,2,0,10
	.word	40022
	.byte	11
	.byte	'_Ifx_GTM_CMU_FXCLK_CTRL_Bits',0,10,180,10,16,4,12
	.byte	'FXCLK_SEL',0,4
	.word	10333
	.byte	4,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10333
	.byte	28,0,2,35,0,0,13,10,144,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40036
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_FXCLK',0,10,225,55,25,4,14
	.byte	'CTRL',0
	.word	40115
	.byte	4,2,35,0,0,10
	.word	40155
	.byte	11
	.byte	'_Ifx_GTM_CMU',0,10,241,57,25,72,14
	.byte	'CLK_EN',0
	.word	38923
	.byte	4,2,35,0,14
	.byte	'GCLK_NUM',0
	.word	39040
	.byte	4,2,35,4,14
	.byte	'GCLK_DEN',0
	.word	39157
	.byte	4,2,35,8,14
	.byte	'CLK0_5',0
	.word	39366
	.byte	24,2,35,12,14
	.byte	'CLK_6',0
	.word	39549
	.byte	4,2,35,36,14
	.byte	'CLK_7',0
	.word	39732
	.byte	4,2,35,40,14
	.byte	'ECLK',0
	.word	40031
	.byte	24,2,35,44,14
	.byte	'FXCLK',0
	.word	40195
	.byte	4,2,35,68,0,10
	.word	40200
	.byte	15,184,1
	.word	516
	.byte	16,183,1,0,11
	.byte	'_Ifx_GTM_BRC_SRC0_ADDR_Bits',0,10,236,4,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	19,0,2,35,0,0,13,10,208,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40363
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC0_DEST_Bits',0,10,245,4,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10333
	.byte	9,0,2,35,0,0,13,10,216,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40519
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC1_ADDR_Bits',0,10,222,5,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	19,0,2,35,0,0,13,10,128,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41092
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC1_DEST_Bits',0,10,231,5,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10333
	.byte	9,0,2,35,0,0,13,10,136,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41248
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC2_ADDR_Bits',0,10,132,6,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	19,0,2,35,0,0,13,10,144,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41821
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC2_DEST_Bits',0,10,141,6,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10333
	.byte	9,0,2,35,0,0,13,10,152,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41977
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC3_ADDR_Bits',0,10,170,6,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	19,0,2,35,0,0,13,10,160,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	42550
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC3_DEST_Bits',0,10,179,6,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10333
	.byte	9,0,2,35,0,0,13,10,168,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	42706
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC4_ADDR_Bits',0,10,208,6,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	19,0,2,35,0,0,13,10,176,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	43279
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC4_DEST_Bits',0,10,217,6,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10333
	.byte	9,0,2,35,0,0,13,10,184,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	43435
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC5_ADDR_Bits',0,10,246,6,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	19,0,2,35,0,0,13,10,192,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44008
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC5_DEST_Bits',0,10,255,6,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10333
	.byte	9,0,2,35,0,0,13,10,200,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44164
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC6_ADDR_Bits',0,10,156,7,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	19,0,2,35,0,0,13,10,208,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44737
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC6_DEST_Bits',0,10,165,7,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10333
	.byte	9,0,2,35,0,0,13,10,216,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44893
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC7_ADDR_Bits',0,10,194,7,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	19,0,2,35,0,0,13,10,224,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	45466
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC7_DEST_Bits',0,10,203,7,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10333
	.byte	9,0,2,35,0,0,13,10,232,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	45622
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC8_ADDR_Bits',0,10,232,7,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	19,0,2,35,0,0,13,10,240,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	46195
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC8_DEST_Bits',0,10,241,7,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10333
	.byte	9,0,2,35,0,0,13,10,248,37,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	46351
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC9_ADDR_Bits',0,10,142,8,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	19,0,2,35,0,0,13,10,128,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	46924
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC9_DEST_Bits',0,10,151,8,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10333
	.byte	9,0,2,35,0,0,13,10,136,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	47080
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC10_ADDR_Bits',0,10,146,5,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	19,0,2,35,0,0,13,10,224,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	47653
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC10_DEST_Bits',0,10,155,5,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10333
	.byte	9,0,2,35,0,0,13,10,232,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	47810
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC11_ADDR_Bits',0,10,184,5,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	19,0,2,35,0,0,13,10,240,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	48384
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC11_DEST_Bits',0,10,193,5,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10333
	.byte	9,0,2,35,0,0,13,10,248,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	48541
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_NOTIFY_Bits',0,10,210,4,16,4,12
	.byte	'DEST_ERR',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'DID0',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'DID1',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'DID2',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'DID3',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'DID4',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'DID5',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'DID6',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'DID7',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'DID8',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'DID9',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'DID10',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'DID11',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	19,0,2,35,0,0,13,10,192,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	49115
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_EN_Bits',0,10,165,4,16,4,12
	.byte	'DEST_ERR_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'DID_EN0',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'DID_EN1',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'DID_EN2',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'DID_EN3',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'DID_EN4',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'DID_EN5',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'DID_EN6',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'DID_EN7',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'DID_EN8',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'DID_EN9',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'DID_EN10',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'DID_EN11',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	19,0,2,35,0,0,13,10,168,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	49428
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_FORCINT_Bits',0,10,184,4,16,4,12
	.byte	'TRG_DEST_ERR',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'TRG_DID0',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'TRG_DID1',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'TRG_DID2',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'TRG_DID3',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'TRG_DID4',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'TRG_DID5',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'TRG_DID6',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'TRG_DID7',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'TRG_DID8',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'TRG_DID9',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'TRG_DID10',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'TRG_DID11',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	19,0,2,35,0,0,13,10,176,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	49776
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_MODE_Bits',0,10,203,4,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	30,0,2,35,0,0,13,10,184,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50142
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_RST_Bits',0,10,229,4,16,4,12
	.byte	'RST',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10333
	.byte	31,0,2,35,0,0,13,10,200,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50258
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_EIRQ_EN_Bits',0,10,146,4,16,4,12
	.byte	'DEST_ERR_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'DID_EN0',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'DID_EN1',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'DID_EN2',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'DID_EN3',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'DID_EN4',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'DID_EN5',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'DID_EN6',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'DID_EN7',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'DID_EN8',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'DID_EN9',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'DID_EN10',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'DID_EN11',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	19,0,2,35,0,0,13,10,160,36,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50364
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC',0,10,187,57,25,120,14
	.byte	'SRC0_ADDR',0
	.word	40479
	.byte	4,2,35,0,14
	.byte	'SRC0_DEST',0
	.word	41052
	.byte	4,2,35,4,14
	.byte	'SRC1_ADDR',0
	.word	41208
	.byte	4,2,35,8,14
	.byte	'SRC1_DEST',0
	.word	41781
	.byte	4,2,35,12,14
	.byte	'SRC2_ADDR',0
	.word	41937
	.byte	4,2,35,16,14
	.byte	'SRC2_DEST',0
	.word	42510
	.byte	4,2,35,20,14
	.byte	'SRC3_ADDR',0
	.word	42666
	.byte	4,2,35,24,14
	.byte	'SRC3_DEST',0
	.word	43239
	.byte	4,2,35,28,14
	.byte	'SRC4_ADDR',0
	.word	43395
	.byte	4,2,35,32,14
	.byte	'SRC4_DEST',0
	.word	43968
	.byte	4,2,35,36,14
	.byte	'SRC5_ADDR',0
	.word	44124
	.byte	4,2,35,40,14
	.byte	'SRC5_DEST',0
	.word	44697
	.byte	4,2,35,44,14
	.byte	'SRC6_ADDR',0
	.word	44853
	.byte	4,2,35,48,14
	.byte	'SRC6_DEST',0
	.word	45426
	.byte	4,2,35,52,14
	.byte	'SRC7_ADDR',0
	.word	45582
	.byte	4,2,35,56,14
	.byte	'SRC7_DEST',0
	.word	46155
	.byte	4,2,35,60,14
	.byte	'SRC8_ADDR',0
	.word	46311
	.byte	4,2,35,64,14
	.byte	'SRC8_DEST',0
	.word	46884
	.byte	4,2,35,68,14
	.byte	'SRC9_ADDR',0
	.word	47040
	.byte	4,2,35,72,14
	.byte	'SRC9_DEST',0
	.word	47613
	.byte	4,2,35,76,14
	.byte	'SRC10_ADDR',0
	.word	47770
	.byte	4,2,35,80,14
	.byte	'SRC10_DEST',0
	.word	48344
	.byte	4,2,35,84,14
	.byte	'SRC11_ADDR',0
	.word	48501
	.byte	4,2,35,88,14
	.byte	'SRC11_DEST',0
	.word	49075
	.byte	4,2,35,92,14
	.byte	'IRQ_NOTIFY',0
	.word	49388
	.byte	4,2,35,96,14
	.byte	'IRQ_EN',0
	.word	49736
	.byte	4,2,35,100,14
	.byte	'IRQ_FORCINT',0
	.word	50102
	.byte	4,2,35,104,14
	.byte	'IRQ_MODE',0
	.word	50218
	.byte	4,2,35,108,14
	.byte	'RST',0
	.word	50324
	.byte	4,2,35,112,14
	.byte	'EIRQ_EN',0
	.word	50673
	.byte	4,2,35,116,0,10
	.word	50713
	.byte	15,136,3
	.word	516
	.byte	16,135,3,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_0_Bits',0,10,241,19,16,4,12
	.byte	'ARU_NEW_DATA0_IRQ',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'ARU_NEW_DATA1_IRQ',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'ARU_ACC_ACK_IRQ',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'BRC_IRQ',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'AEI_IRQ',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'CMP_IRQ',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'SPE0_IRQ',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'SPE1_IRQ',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10333
	.byte	8,16,2,35,0,12
	.byte	'PSM0_CH0_IRQ',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'PSM0_CH1_IRQ',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'PSM0_CH2_IRQ',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'PSM0_CH3_IRQ',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'PSM0_CH4_IRQ',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'PSM0_CH5_IRQ',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'PSM0_CH6_IRQ',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'PSM0_CH7_IRQ',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,233,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51314
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_1_Bits',0,10,136,20,16,4,12
	.byte	'DPLL_DCG_IRQ',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'DPLL_EDI_IRQ',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'DPLL_TIN_IRQ',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'DPLL_TAX_IRQ',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'DPLL_SIS_IRQ',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'DPLL_TIS_IRQ',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'DPLL_MSI_IRQ',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'DPLL_MTI_IRQ',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'DPLL_SAS_IRQ',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'DPLL_TAS_IRQ',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'DPLL_PWI_IRQ',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'DPLL_W2I_IRQ',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'DPLL_W1I_IRQ',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'DPLL_GLI_IRQ',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'DPLL_LLI_IRQ',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'DPLL_EI_IRQ',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'DPLL_GL2I_IRQ',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'DPLL_LL2I_IRQ',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'DPLL_TE0_IRQ',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'DPLL_TE1_IRQ',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'DPLL_TE2_IRQ',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'DPLL_TE3_IRQ',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'DPLL_TE4_IRQ',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'DPLL_CDIT_IRQ',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'DPLL_CDIS_IRQ',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'DPLL_TORI_IRQ',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'DPLL_SORI_IRQ',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10333
	.byte	5,0,2,35,0,0,13,10,241,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51805
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_2_Bits',0,10,169,20,16,4,12
	.byte	'TIM0_CH0_IRQ',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'TIM0_CH1_IRQ',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'TIM0_CH2_IRQ',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'TIM0_CH3_IRQ',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'TIM0_CH4_IRQ',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'TIM0_CH5_IRQ',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'TIM0_CH6_IRQ',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'TIM0_CH7_IRQ',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'TIM1_CH0_IRQ',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'TIM1_CH1_IRQ',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'TIM1_CH2_IRQ',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'TIM1_CH3_IRQ',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'TIM1_CH4_IRQ',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'TIM1_CH5_IRQ',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'TIM1_CH6_IRQ',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'TIM1_CH7_IRQ',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'TIM2_CH0_IRQ',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'TIM2_CH1_IRQ',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'TIM2_CH2_IRQ',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'TIM2_CH3_IRQ',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'TIM2_CH4_IRQ',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'TIM2_CH5_IRQ',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'TIM2_CH6_IRQ',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'TIM2_CH7_IRQ',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,249,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	52553
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_4_Bits',0,10,199,20,16,4,12
	.byte	'MCS0_CH0_IRQ',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'MCS0_CH1_IRQ',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'MCS0_CH2_IRQ',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'MCS0_CH3_IRQ',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'MCS0_CH4_IRQ',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'MCS0_CH5_IRQ',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'MCS0_CH6_IRQ',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'MCS0_CH7_IRQ',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'MCS1_CH0_IRQ',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'MCS1_CH1_IRQ',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'MCS1_CH2_IRQ',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'MCS1_CH3_IRQ',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'MCS1_CH4_IRQ',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'MCS1_CH5_IRQ',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'MCS1_CH6_IRQ',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'MCS1_CH7_IRQ',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'MCS2_CH0_IRQ',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'MCS2_CH1_IRQ',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'MCS2_CH2_IRQ',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'MCS2_CH3_IRQ',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'MCS2_CH4_IRQ',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'MCS2_CH5_IRQ',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'MCS2_CH6_IRQ',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'MCS2_CH7_IRQ',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,129,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	53224
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_6_Bits',0,10,229,20,16,4,12
	.byte	'TOM0_CH0_IRQ',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'TOM0_CH1_IRQ',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'TOM0_CH2_IRQ',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'TOM0_CH3_IRQ',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'TOM0_CH4_IRQ',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'TOM0_CH5_IRQ',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'TOM0_CH6_IRQ',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'TOM0_CH7_IRQ',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'TOM0_CH8_IRQ',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'TOM0_CH9_IRQ',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'TOM0_CH10_IRQ',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'TOM0_CH11_IRQ',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'TOM0_CH12_IRQ',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'TOM0_CH13_IRQ',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'TOM0_CH14_IRQ',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'TOM0_CH15_IRQ',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'TOM1_CH0_IRQ',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'TOM1_CH1_IRQ',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'TOM1_CH2_IRQ',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'TOM1_CH3_IRQ',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'TOM1_CH4_IRQ',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'TOM1_CH5_IRQ',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'TOM1_CH6_IRQ',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'TOM1_CH7_IRQ',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'TOM1_CH8_IRQ',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'TOM1_CH9_IRQ',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'TOM1_CH10_IRQ',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'TOM1_CH11_IRQ',0,4
	.word	10333
	.byte	1,4,2,35,0,12
	.byte	'TOM1_CH12_IRQ',0,4
	.word	10333
	.byte	1,3,2,35,0,12
	.byte	'TOM1_CH13_IRQ',0,4
	.word	10333
	.byte	1,2,2,35,0,12
	.byte	'TOM1_CH14_IRQ',0,4
	.word	10333
	.byte	1,1,2,35,0,12
	.byte	'TOM1_CH15_IRQ',0,4
	.word	10333
	.byte	1,0,2,35,0,0,13,10,137,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	53895
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_9_Bits',0,10,138,21,16,4,12
	.byte	'ATOM0_CH0_IRQ',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'ATOM0_CH1_IRQ',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'ATOM0_CH2_IRQ',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'ATOM0_CH3_IRQ',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'ATOM0_CH4_IRQ',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'ATOM0_CH5_IRQ',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'ATOM0_CH6_IRQ',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'ATOM0_CH7_IRQ',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'ATOM1_CH0_IRQ',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'ATOM1_CH1_IRQ',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'ATOM1_CH2_IRQ',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'ATOM1_CH3_IRQ',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'ATOM1_CH4_IRQ',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'ATOM1_CH5_IRQ',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'ATOM1_CH6_IRQ',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'ATOM1_CH7_IRQ',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'ATOM2_CH0_IRQ',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'ATOM2_CH1_IRQ',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'ATOM2_CH2_IRQ',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'ATOM2_CH3_IRQ',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'ATOM2_CH4_IRQ',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'ATOM2_CH5_IRQ',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'ATOM2_CH6_IRQ',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'ATOM2_CH7_IRQ',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'ATOM3_CH0_IRQ',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'ATOM3_CH1_IRQ',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'ATOM3_CH2_IRQ',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'ATOM3_CH3_IRQ',0,4
	.word	10333
	.byte	1,4,2,35,0,12
	.byte	'ATOM3_CH4_IRQ',0,4
	.word	10333
	.byte	1,3,2,35,0,12
	.byte	'ATOM3_CH5_IRQ',0,4
	.word	10333
	.byte	1,2,2,35,0,12
	.byte	'ATOM3_CH6_IRQ',0,4
	.word	10333
	.byte	1,1,2,35,0,12
	.byte	'ATOM3_CH7_IRQ',0,4
	.word	10333
	.byte	1,0,2,35,0,0,13,10,145,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	54747
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_MEI_Bits',0,10,249,21,16,4,12
	.byte	'GTM_EIRQ',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'BRC_EIRQ',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'FIFO0_EIRQ',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'TIM0_EIRQ',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'TIM1_EIRQ',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'TIM2_EIRQ',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	10333
	.byte	5,20,2,35,0,12
	.byte	'MCS0_EIRQ',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'MCS1_EIRQ',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'MCS2_EIRQ',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	10333
	.byte	5,12,2,35,0,12
	.byte	'SPE0_EIRQ',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'SPE1_EIRQ',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	10333
	.byte	2,8,2,35,0,12
	.byte	'CMP_EIRQ',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'DPLL_EIRQ',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	10333
	.byte	6,0,2,35,0,0,13,10,177,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	55619
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI0_Bits',0,10,175,21,16,4,12
	.byte	'FIFO0_CH0_EIRQ',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'FIFO0_CH1_EIRQ',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'FIFO0_CH2_EIRQ',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'FIFO0_CH3_EIRQ',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'FIFO0_CH4_EIRQ',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'FIFO0_CH5_EIRQ',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'FIFO0_CH6_EIRQ',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'FIFO0_CH7_EIRQ',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10333
	.byte	24,0,2,35,0,0,13,10,153,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	56077
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI1_Bits',0,10,189,21,16,4,12
	.byte	'TIM0_CH0_EIRQ',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'TIM0_CH1_EIRQ',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'TIM0_CH2_EIRQ',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'TIM0_CH3_EIRQ',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'TIM0_CH4_EIRQ',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'TIM0_CH5_EIRQ',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'TIM0_CH6_EIRQ',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'TIM0_CH7_EIRQ',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'TIM1_CH0_EIRQ',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'TIM1_CH1_EIRQ',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'TIM1_CH2_EIRQ',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'TIM1_CH3_EIRQ',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'TIM1_CH4_EIRQ',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'TIM1_CH5_EIRQ',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'TIM1_CH6_EIRQ',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'TIM1_CH7_EIRQ',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'TIM2_CH0_EIRQ',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'TIM2_CH1_EIRQ',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'TIM2_CH2_EIRQ',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'TIM2_CH3_EIRQ',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'TIM2_CH4_EIRQ',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'TIM2_CH5_EIRQ',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'TIM2_CH6_EIRQ',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'TIM2_CH7_EIRQ',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,161,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	56382
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI3_Bits',0,10,219,21,16,4,12
	.byte	'MCS0_CH0_EIRQ',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'MCS0_CH1_EIRQ',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'MCS0_CH2_EIRQ',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'MCS0_CH3_EIRQ',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'MCS0_CH4_EIRQ',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'MCS0_CH5_EIRQ',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'MCS0_CH6_EIRQ',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'MCS0_CH7_EIRQ',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'MCS1_CH0_EIRQ',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'MCS1_CH1_EIRQ',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'MCS1_CH2_EIRQ',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'MCS1_CH3_EIRQ',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'MCS1_CH4_EIRQ',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'MCS1_CH5_EIRQ',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'MCS1_CH6_EIRQ',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'MCS1_CH7_EIRQ',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'MCS2_CH0_EIRQ',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'MCS2_CH1_EIRQ',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'MCS2_CH2_EIRQ',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'MCS2_CH3_EIRQ',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'MCS2_CH4_EIRQ',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'MCS2_CH5_EIRQ',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'MCS2_CH6_EIRQ',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'MCS2_CH7_EIRQ',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,169,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	57080
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM',0,10,133,59,25,68,14
	.byte	'IRQG_0',0
	.word	51765
	.byte	4,2,35,0,14
	.byte	'IRQG_1',0
	.word	52513
	.byte	4,2,35,4,14
	.byte	'IRQG_2',0
	.word	53184
	.byte	4,2,35,8,14
	.byte	'reserved_C',0
	.word	1943
	.byte	4,2,35,12,14
	.byte	'IRQG_4',0
	.word	53855
	.byte	4,2,35,16,14
	.byte	'reserved_14',0
	.word	1943
	.byte	4,2,35,20,14
	.byte	'IRQG_6',0
	.word	54707
	.byte	4,2,35,24,14
	.byte	'reserved_1C',0
	.word	3762
	.byte	8,2,35,28,14
	.byte	'IRQG_9',0
	.word	55579
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	3762
	.byte	8,2,35,40,14
	.byte	'IRQG_MEI',0
	.word	56037
	.byte	4,2,35,48,14
	.byte	'IRQG_CEI0',0
	.word	56342
	.byte	4,2,35,52,14
	.byte	'IRQG_CEI1',0
	.word	57040
	.byte	4,2,35,56,14
	.byte	'reserved_3C',0
	.word	1943
	.byte	4,2,35,60,14
	.byte	'IRQG_CEI3',0
	.word	57738
	.byte	4,2,35,64,0,10
	.word	57778
	.byte	15,188,3
	.word	516
	.byte	16,187,3,0,11
	.byte	'_Ifx_GTM_SPE_CTRL_STAT_Bits',0,10,246,27,16,4,12
	.byte	'SPE_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'SIE0',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'SIE1',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'SIE2',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'TRIG_SEL',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'TIM_SEL',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'FSOM',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'SPE_PAT_PTR',0,4
	.word	10333
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'AIP',0,4
	.word	10333
	.byte	3,17,2,35,0,12
	.byte	'ADIR',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'PIP',0,4
	.word	10333
	.byte	3,13,2,35,0,12
	.byte	'PDIR',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'NIP',0,4
	.word	10333
	.byte	3,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'FSOL',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,153,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58089
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_PAT_Bits',0,10,204,28,16,4,12
	.byte	'IP0_VAL',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'IP0_PAT',0,4
	.word	10333
	.byte	3,28,2,35,0,12
	.byte	'IP1_VAL',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'IP1_PAT',0,4
	.word	10333
	.byte	3,24,2,35,0,12
	.byte	'IP2_VAL',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'IP2_PAT',0,4
	.word	10333
	.byte	3,20,2,35,0,12
	.byte	'IP3_VAL',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'IP3_PAT',0,4
	.word	10333
	.byte	3,16,2,35,0,12
	.byte	'IP4_VAL',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'IP4_PAT',0,4
	.word	10333
	.byte	3,12,2,35,0,12
	.byte	'IP5_VAL',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'IP5_PAT',0,4
	.word	10333
	.byte	3,8,2,35,0,12
	.byte	'IP6_VAL',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'IP6_PAT',0,4
	.word	10333
	.byte	3,4,2,35,0,12
	.byte	'IP7_VAL',0,4
	.word	10333
	.byte	1,3,2,35,0,12
	.byte	'IP7_PAT',0,4
	.word	10333
	.byte	3,0,2,35,0,0,13,10,217,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58447
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_OUT_PAT_Bits',0,10,197,28,16,4,12
	.byte	'SPE_OUT_PAT',0,4
	.word	10333
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,209,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58820
	.byte	4,2,35,0,0,15,32
	.word	58899
	.byte	16,7,0,11
	.byte	'_Ifx_GTM_SPE_OUT_CTRL_Bits',0,10,190,28,16,4,12
	.byte	'SPE_OUT_CTRL',0,4
	.word	10333
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,201,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58948
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_NOTIFY_Bits',0,10,179,28,16,4,12
	.byte	'SPE_NIPD',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'SPE_DCHG',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'SPE_PERR',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'SPE_BIS',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'SPE_RCMP',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10333
	.byte	27,0,2,35,0,0,13,10,193,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59069
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_EN_Bits',0,10,150,28,16,4,12
	.byte	'SPE_NIPD_IRQ_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'SPE_DCHG_IRQ_EN',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'SPE_PERR_IRQ_EN',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'SPE_BIS_IRQ_EN',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'SPE_RCMP_IRQ_EN',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10333
	.byte	27,0,2,35,0,0,13,10,169,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59266
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_FORCINT_Bits',0,10,161,28,16,4,12
	.byte	'TRG_SPE_NIPD',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'TRG_SPE_DCHG',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'TRG_SPE_PERR',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'TRG_SPE_BIS',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'TRG_SPE_RCMP',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10333
	.byte	27,0,2,35,0,0,13,10,177,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59494
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_MODE_Bits',0,10,172,28,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	30,0,2,35,0,0,13,10,185,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59712
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_EIRQ_EN_Bits',0,10,139,28,16,4,12
	.byte	'SPE_NIPD_EIRQ_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'SPE_DCHG_EIRQ_EN',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'SPE_PERR_EIRQ_EN',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'SPE_BIS_EIRQ_EN',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'SPE_RCMP_EIRQ_EN',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10333
	.byte	27,0,2,35,0,0,13,10,161,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59828
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_CNT_Bits',0,10,239,27,16,4,12
	.byte	'CNT',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,145,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60062
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_CMP_Bits',0,10,232,27,16,4,12
	.byte	'CMP',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,137,51,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60169
	.byte	4,2,35,0,0,15,56
	.word	516
	.byte	16,55,0,11
	.byte	'_Ifx_GTM_SPE',0,10,208,59,25,128,1,14
	.byte	'CTRL_STAT',0
	.word	58407
	.byte	4,2,35,0,14
	.byte	'PAT',0
	.word	58780
	.byte	4,2,35,4,14
	.byte	'OUT_PAT',0
	.word	58939
	.byte	32,2,35,8,14
	.byte	'OUT_CTRL',0
	.word	59029
	.byte	4,2,35,40,14
	.byte	'IRQ_NOTIFY',0
	.word	59226
	.byte	4,2,35,44,14
	.byte	'IRQ_EN',0
	.word	59454
	.byte	4,2,35,48,14
	.byte	'IRQ_FORCINT',0
	.word	59672
	.byte	4,2,35,52,14
	.byte	'IRQ_MODE',0
	.word	59788
	.byte	4,2,35,56,14
	.byte	'EIRQ_EN',0
	.word	60022
	.byte	4,2,35,60,14
	.byte	'CNT',0
	.word	60129
	.byte	4,2,35,64,14
	.byte	'CMP',0
	.word	60236
	.byte	4,2,35,68,14
	.byte	'reserved_48',0
	.word	60276
	.byte	56,2,35,72,0,15,128,2
	.word	60285
	.byte	16,1,0,10
	.word	60512
	.byte	15,128,12
	.word	516
	.byte	16,255,11,0,11
	.byte	'_Ifx_GTM_MAP_CTRL_Bits',0,10,171,23,16,4,12
	.byte	'TSEL',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'SSL',0,4
	.word	10333
	.byte	3,28,2,35,0,12
	.byte	'LSEL',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10333
	.byte	11,16,2,35,0,12
	.byte	'TSPP0_EN',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'TSPP0_DLD',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	10333
	.byte	2,12,2,35,0,12
	.byte	'TSPP0_I0V',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'TSPP0_I1V',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'TSPP0_I2V',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'TSPP1_EN',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'TSPP1_DLD',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	10333
	.byte	2,4,2,35,0,12
	.byte	'TSPP1_I0V',0,4
	.word	10333
	.byte	1,3,2,35,0,12
	.byte	'TSPP1_I1V',0,4
	.word	10333
	.byte	1,2,2,35,0,12
	.byte	'TSPP1_I2V',0,4
	.word	10333
	.byte	1,1,2,35,0,12
	.byte	'reserved_31',0,4
	.word	10333
	.byte	1,0,2,35,0,0,13,10,169,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60538
	.byte	4,2,35,0,0,15,60
	.word	516
	.byte	16,59,0,11
	.byte	'_Ifx_GTM_MCFG_CTRL_Bits',0,10,194,23,16,4,12
	.byte	'MEM0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'MEM1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'MEM2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10333
	.byte	26,0,2,35,0,0,13,10,177,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60986
	.byte	4,2,35,0,0,15,188,1
	.word	516
	.byte	16,187,1,0,11
	.byte	'_Ifx_GTM_TIM_CH_GPR0_Bits',0,10,248,29,16,4,12
	.byte	'GPR0',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'ECNT',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,225,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61138
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_GPR1_Bits',0,10,255,29,16,4,12
	.byte	'GPR1',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'ECNT',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,233,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61243
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_CNT_Bits',0,10,165,29,16,4,12
	.byte	'CNT',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,161,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61348
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_ECNT_Bits',0,10,208,29,16,4,12
	.byte	'ECNT',0,4
	.word	10333
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,185,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61458
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_CNTS_Bits',0,10,172,29,16,4,12
	.byte	'CNTS',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'ECNT',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,169,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61570
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_TDUC_Bits',0,10,177,30,16,4,12
	.byte	'TO_CNT',0,4
	.word	10333
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10333
	.byte	24,0,2,35,0,0,13,10,145,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61675
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_TDUV_Bits',0,10,184,30,16,4,12
	.byte	'TOV',0,4
	.word	10333
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10333
	.byte	20,4,2,35,0,12
	.byte	'TCS',0,4
	.word	10333
	.byte	3,1,2,35,0,12
	.byte	'reserved_31',0,4
	.word	10333
	.byte	1,0,2,35,0,0,13,10,153,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61788
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_FLT_RE_Bits',0,10,241,29,16,4,12
	.byte	'FLT_RE',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,217,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61936
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_FLT_FE_Bits',0,10,234,29,16,4,12
	.byte	'FLT_FE',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,209,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62052
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_CTRL_Bits',0,10,179,29,16,4,12
	.byte	'TIM_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'TIM_MODE',0,4
	.word	10333
	.byte	3,28,2,35,0,12
	.byte	'OSM',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'CICTRL',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'TBU0_SEL',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'GPR0_SEL',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'GPR1_SEL',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'CNTS_SEL',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'DSL',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'ISL',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'ECNT_RESET',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'FLT_EN',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'FLT_CNT_FRQ',0,4
	.word	10333
	.byte	2,13,2,35,0,12
	.byte	'EXT_CAP_EN',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'FLT_MODE_RE',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'FLT_CTR_RE',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'FLT_MODE_FE',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'FLT_CTR_FE',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'CLK_SEL',0,4
	.word	10333
	.byte	3,5,2,35,0,12
	.byte	'FR_ECNT_OFL',0,4
	.word	10333
	.byte	1,4,2,35,0,12
	.byte	'EGPR0_SEL',0,4
	.word	10333
	.byte	1,3,2,35,0,12
	.byte	'EGPR1_SEL',0,4
	.word	10333
	.byte	1,2,2,35,0,12
	.byte	'TOCTRL',0,4
	.word	10333
	.byte	2,0,2,35,0,0,13,10,177,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62168
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_ECTRL_Bits',0,10,215,29,16,4,12
	.byte	'EXT_CAP_SRC',0,4
	.word	10333
	.byte	3,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10333
	.byte	29,0,2,35,0,0,13,10,193,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62717
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits',0,10,165,30,16,4,12
	.byte	'NEWVAL',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'ECNTOFL',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'CNTOFL',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'GPROFL',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'TODET',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'GLITCHDET',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10333
	.byte	26,0,2,35,0,0,13,10,137,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62836
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_EN_Bits',0,10,134,30,16,4,12
	.byte	'NEWVAL_IRQ_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'ECNTOFL_IRQ_EN',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'CNTOFL_IRQ_EN',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'GPROFL_IRQ_EN',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'TODET_IRQ_EN',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'GLITCHDET_IRQ_EN',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10333
	.byte	26,0,2,35,0,0,13,10,241,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63048
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits',0,10,146,30,16,4,12
	.byte	'TRG_NEWVAL',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'TRG_ECNTOFL',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'TRG_CNTOFL',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'TRG_GPROFL',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'TRG_TODET',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'TRG_GLITCHDET',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10333
	.byte	26,0,2,35,0,0,13,10,249,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63298
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_MODE_Bits',0,10,158,30,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	30,0,2,35,0,0,13,10,129,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63535
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_EIRQ_EN_Bits',0,10,222,29,16,4,12
	.byte	'NEWVAL_EIRQ_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'ECNTOFL_EIRQ_EN',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'CNTOFL_EIRQ_EN',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'GPROFL_EIRQ_EN',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'TODET_EIRQ_EN',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'GLITCHDET_EIRQ_EN',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10333
	.byte	26,0,2,35,0,0,13,10,201,52,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63654
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH',0,10,221,56,25,120,14
	.byte	'GPR0',0
	.word	61203
	.byte	4,2,35,0,14
	.byte	'GPR1',0
	.word	61308
	.byte	4,2,35,4,14
	.byte	'CNT',0
	.word	61418
	.byte	4,2,35,8,14
	.byte	'ECNT',0
	.word	61530
	.byte	4,2,35,12,14
	.byte	'CNTS',0
	.word	61635
	.byte	4,2,35,16,14
	.byte	'TDUC',0
	.word	61748
	.byte	4,2,35,20,14
	.byte	'TDUV',0
	.word	61896
	.byte	4,2,35,24,14
	.byte	'FLT_RE',0
	.word	62012
	.byte	4,2,35,28,14
	.byte	'FLT_FE',0
	.word	62128
	.byte	4,2,35,32,14
	.byte	'CTRL',0
	.word	62677
	.byte	4,2,35,36,14
	.byte	'ECTRL',0
	.word	62796
	.byte	4,2,35,40,14
	.byte	'IRQ_NOTIFY',0
	.word	63008
	.byte	4,2,35,44,14
	.byte	'IRQ_EN',0
	.word	63258
	.byte	4,2,35,48,14
	.byte	'IRQ_FORCINT',0
	.word	63495
	.byte	4,2,35,52,14
	.byte	'IRQ_MODE',0
	.word	63614
	.byte	4,2,35,56,14
	.byte	'EIRQ_EN',0
	.word	63871
	.byte	4,2,35,60,14
	.byte	'reserved_40',0
	.word	60276
	.byte	56,2,35,64,0,10
	.word	63911
	.byte	11
	.byte	'_Ifx_GTM_TIM_IN_SRC_Bits',0,10,193,30,16,4,12
	.byte	'VAL_0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'MODE_0',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'VAL_1',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'MODE_1',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'VAL_2',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'MODE_2',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'VAL_3',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'MODE_3',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'VAL_4',0,4
	.word	10333
	.byte	2,14,2,35,0,12
	.byte	'MODE_4',0,4
	.word	10333
	.byte	2,12,2,35,0,12
	.byte	'VAL_5',0,4
	.word	10333
	.byte	2,10,2,35,0,12
	.byte	'MODE_5',0,4
	.word	10333
	.byte	2,8,2,35,0,12
	.byte	'VAL_6',0,4
	.word	10333
	.byte	2,6,2,35,0,12
	.byte	'MODE_6',0,4
	.word	10333
	.byte	2,4,2,35,0,12
	.byte	'VAL_7',0,4
	.word	10333
	.byte	2,2,2,35,0,12
	.byte	'MODE_7',0,4
	.word	10333
	.byte	2,0,2,35,0,0,13,10,161,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64210
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_RST_Bits',0,10,214,30,16,4,12
	.byte	'RST_CH0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10333
	.byte	24,0,2,35,0,0,13,10,169,53,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64562
	.byte	4,2,35,0,0,10
	.word	63911
	.byte	10
	.word	63911
	.byte	10
	.word	63911
	.byte	10
	.word	63911
	.byte	10
	.word	63911
	.byte	10
	.word	63911
	.byte	10
	.word	63911
	.byte	15,136,8
	.word	516
	.byte	16,135,8,0,11
	.byte	'_Ifx_GTM_TIM',0,10,237,59,25,128,16,14
	.byte	'CH0',0
	.word	64205
	.byte	120,2,35,0,14
	.byte	'IN_SRC',0
	.word	64522
	.byte	4,2,35,120,14
	.byte	'RST',0
	.word	64765
	.byte	4,2,35,124,14
	.byte	'CH1',0
	.word	64805
	.byte	120,3,35,128,1,14
	.byte	'reserved_F8',0
	.word	3762
	.byte	8,3,35,248,1,14
	.byte	'CH2',0
	.word	64810
	.byte	120,3,35,128,2,14
	.byte	'reserved_178',0
	.word	3762
	.byte	8,3,35,248,2,14
	.byte	'CH3',0
	.word	64815
	.byte	120,3,35,128,3,14
	.byte	'reserved_1F8',0
	.word	3762
	.byte	8,3,35,248,3,14
	.byte	'CH4',0
	.word	64820
	.byte	120,3,35,128,4,14
	.byte	'reserved_278',0
	.word	3762
	.byte	8,3,35,248,4,14
	.byte	'CH5',0
	.word	64825
	.byte	120,3,35,128,5,14
	.byte	'reserved_2F8',0
	.word	3762
	.byte	8,3,35,248,5,14
	.byte	'CH6',0
	.word	64830
	.byte	120,3,35,128,6,14
	.byte	'reserved_378',0
	.word	3762
	.byte	8,3,35,248,6,14
	.byte	'CH7',0
	.word	64835
	.byte	120,3,35,128,7,14
	.byte	'reserved_3F8',0
	.word	64840
	.byte	136,8,3,35,248,7,0,15,128,48
	.word	64851
	.byte	16,2,0,10
	.word	65173
	.byte	15,128,176,1
	.word	516
	.byte	16,255,175,1,0,15,128,32
	.word	25150
	.byte	16,1,0,10
	.word	65201
	.byte	15,128,128,1
	.word	516
	.byte	16,255,127,0,15,128,64
	.word	16491
	.byte	16,3,0,10
	.word	65228
	.byte	15,128,160,2
	.word	516
	.byte	16,255,159,2,0,11
	.byte	'_Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO_Bits',0,10,235,18,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	23,0,2,35,0,0,13,10,233,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65256
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_F2A_RD_CH',0,10,231,55,25,4,14
	.byte	'ARU_RD_FIFO',0
	.word	65337
	.byte	4,2,35,0,0,15,32
	.word	65377
	.byte	16,7,0,10
	.word	65424
	.byte	11
	.byte	'_Ifx_GTM_F2A_STR_CH_STR_CFG_Bits',0,10,242,18,16,4,12
	.byte	'reserved_0',0,4
	.word	10333
	.byte	16,16,2,35,0,12
	.byte	'TMODE',0,4
	.word	10333
	.byte	2,14,2,35,0,12
	.byte	'DIR',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	10333
	.byte	13,0,2,35,0,0,13,10,241,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65438
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_F2A_STR_CH',0,10,237,55,25,4,14
	.byte	'STR_CFG',0
	.word	65555
	.byte	4,2,35,0,0,15,32
	.word	65595
	.byte	16,7,0,10
	.word	65639
	.byte	11
	.byte	'_Ifx_GTM_F2A_ENABLE_Bits',0,10,221,18,16,4,12
	.byte	'STR0_EN',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'STR1_EN',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'STR2_EN',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'STR3_EN',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'STR4_EN',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'STR5_EN',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'STR6_EN',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'STR7_EN',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,225,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65653
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_F2A',0,10,247,58,25,68,14
	.byte	'RD_CH',0
	.word	65433
	.byte	32,2,35,0,14
	.byte	'STR_CH',0
	.word	65648
	.byte	32,2,35,32,14
	.byte	'ENABLE',0
	.word	65860
	.byte	4,2,35,64,0,10
	.word	65900
	.byte	11
	.byte	'_Ifx_GTM_AFD_CH_BUF_ACC_Bits',0,10,122,16,4,12
	.byte	'DATA',0,4
	.word	10333
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10333
	.byte	3,0,2,35,0,0,13,10,240,33,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65972
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_AFD_CH',0,10,153,55,25,16,14
	.byte	'BUF_ACC',0
	.word	66046
	.byte	4,2,35,0,14
	.byte	'reserved_4',0
	.word	4102
	.byte	12,2,35,4,0,15,128,1
	.word	66086
	.byte	16,7,0,10
	.word	66146
	.byte	11
	.byte	'_Ifx_GTM_AFD',0,10,142,57,25,128,1,14
	.byte	'CH',0
	.word	66156
	.byte	128,1,2,35,0,0,10
	.word	66161
	.byte	15,128,6
	.word	516
	.byte	16,255,5,0,11
	.byte	'_Ifx_GTM_FIFO_CH_CTRL_Bits',0,10,251,18,16,4,12
	.byte	'RBM',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'RAP',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'FLUSH',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'WULOCK',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10333
	.byte	28,0,2,35,0,0,13,10,249,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66211
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_END_ADDR_Bits',0,10,143,19,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10333
	.byte	22,0,2,35,0,0,13,10,137,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66372
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_START_ADDR_Bits',0,10,210,19,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10333
	.byte	22,0,2,35,0,0,13,10,201,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66489
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_UPPER_WM_Bits',0,10,227,19,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10333
	.byte	22,0,2,35,0,0,13,10,217,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66608
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_LOWER_WM_Bits',0,10,196,19,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10333
	.byte	22,0,2,35,0,0,13,10,185,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66725
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_STATUS_Bits',0,10,217,19,16,4,12
	.byte	'EMPTY',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'FULL',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'LOW_WM',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'UP_WM',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10333
	.byte	28,0,2,35,0,0,13,10,209,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66842
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_FILL_LEVEL_Bits',0,10,150,19,16,4,12
	.byte	'LEVEL',0,4
	.word	10333
	.byte	11,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10333
	.byte	21,0,2,35,0,0,13,10,145,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67008
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_WR_PTR_Bits',0,10,234,19,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10333
	.byte	22,0,2,35,0,0,13,10,225,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67128
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_RD_PTR_Bits',0,10,203,19,16,4,12
	.byte	'ADDR',0,4
	.word	10333
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10333
	.byte	22,0,2,35,0,0,13,10,193,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67243
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_NOTIFY_Bits',0,10,186,19,16,4,12
	.byte	'FIFO_EMPTY',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'FIFO_FULL',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'FIFO_LWM',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'FIFO_UWM',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10333
	.byte	28,0,2,35,0,0,13,10,177,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67358
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_EN_Bits',0,10,157,19,16,4,12
	.byte	'FIFO_EMPTY_IRQ_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'FIFO_FULL_IRQ_EN',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'FIFO_LWM_IRQ_EN',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'FIFO_UWM_IRQ_EN',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10333
	.byte	28,0,2,35,0,0,13,10,153,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67543
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_FORCINT_Bits',0,10,167,19,16,4,12
	.byte	'TRG_FIFO_EMPTY',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'TRG_FIFO_FULL',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'TRG_FIFO_LWM',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'TRG_FIFO_UWM',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10333
	.byte	28,0,2,35,0,0,13,10,161,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67752
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_MODE_Bits',0,10,177,19,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'DMA_HYSTERESIS',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'DMA_HYST_DIR',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10333
	.byte	28,0,2,35,0,0,13,10,169,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67954
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_EIRQ_EN_Bits',0,10,133,19,16,4,12
	.byte	'FIFO_EMPTY_EIRQ_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'FIFO_FULL_EIRQ_EN',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'FIFO_LWM_EIRQ_EN',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'FIFO_UWM_EIRQ_EN',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'Reserved',0,4
	.word	10333
	.byte	28,0,2,35,0,0,13,10,129,46,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68124
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH',0,10,243,55,25,64,14
	.byte	'CTRL',0
	.word	66332
	.byte	4,2,35,0,14
	.byte	'END_ADDR',0
	.word	66449
	.byte	4,2,35,4,14
	.byte	'START_ADDR',0
	.word	66568
	.byte	4,2,35,8,14
	.byte	'UPPER_WM',0
	.word	66685
	.byte	4,2,35,12,14
	.byte	'LOWER_WM',0
	.word	66802
	.byte	4,2,35,16,14
	.byte	'STATUS',0
	.word	66968
	.byte	4,2,35,20,14
	.byte	'FILL_LEVEL',0
	.word	67088
	.byte	4,2,35,24,14
	.byte	'WR_PTR',0
	.word	67203
	.byte	4,2,35,28,14
	.byte	'RD_PTR',0
	.word	67318
	.byte	4,2,35,32,14
	.byte	'IRQ_NOTIFY',0
	.word	67503
	.byte	4,2,35,36,14
	.byte	'IRQ_EN',0
	.word	67712
	.byte	4,2,35,40,14
	.byte	'IRQ_FORCINT',0
	.word	67914
	.byte	4,2,35,44,14
	.byte	'IRQ_MODE',0
	.word	68084
	.byte	4,2,35,48,14
	.byte	'EIRQ_EN',0
	.word	68296
	.byte	4,2,35,52,14
	.byte	'reserved_38',0
	.word	3762
	.byte	8,2,35,56,0,15,128,4
	.word	68336
	.byte	16,7,0,10
	.word	68629
	.byte	11
	.byte	'_Ifx_GTM_FIFO',0,10,255,58,25,128,4,14
	.byte	'CH',0
	.word	68639
	.byte	128,4,2,35,0,0,10
	.word	68644
	.byte	15,128,244,3
	.word	516
	.byte	16,255,243,3,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_0_Bits',0,10,144,12,16,4,12
	.byte	'MLT',0,4
	.word	10333
	.byte	10,22,2,35,0,12
	.byte	'IFP',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'SNU',0,4
	.word	10333
	.byte	5,16,2,35,0,12
	.byte	'TNU',0,4
	.word	10333
	.byte	9,7,2,35,0,12
	.byte	'AMS',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'AMT',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'IDS',0,4
	.word	10333
	.byte	1,4,2,35,0,12
	.byte	'IDT',0,4
	.word	10333
	.byte	1,3,2,35,0,12
	.byte	'SEN',0,4
	.word	10333
	.byte	1,2,2,35,0,12
	.byte	'TEN',0,4
	.word	10333
	.byte	1,1,2,35,0,12
	.byte	'RMO',0,4
	.word	10333
	.byte	1,0,2,35,0,0,13,10,224,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68697
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_1_Bits',0,10,186,12,16,4,12
	.byte	'DMO',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'DEN',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'IDDS',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'COA',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'PIT',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'SGE1',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'DLM1',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'PCM1',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'SGE2',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'DLM2',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'PCM2',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'SYN_NS',0,4
	.word	10333
	.byte	5,16,2,35,0,12
	.byte	'SYN_NT',0,4
	.word	10333
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'LCD',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'SWR',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'SYSF',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'TS0_HRS',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'TS0_HRT',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'SMC',0,4
	.word	10333
	.byte	1,4,2,35,0,12
	.byte	'SSL',0,4
	.word	10333
	.byte	2,2,2,35,0,12
	.byte	'TSL',0,4
	.word	10333
	.byte	2,0,2,35,0,0,13,10,248,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68935
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_2_Bits',0,10,226,12,16,4,12
	.byte	'reserved_0',0,4
	.word	10333
	.byte	8,24,2,35,0,12
	.byte	'AEN0',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'AEN1',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'AEN2',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'AEN3',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'AEN4',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'AEN5',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'AEN6',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'AEN7',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'WAD0',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'WAD1',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'WAD2',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'WAD3',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'WAD4',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'WAD5',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'WAD6',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'WAD7',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,136,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	69368
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_3_Bits',0,10,249,12,16,4,12
	.byte	'reserved_0',0,4
	.word	10333
	.byte	8,24,2,35,0,12
	.byte	'AEN8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'AEN9',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'AEN10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'AEN11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'AEN12',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'AEN13',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'AEN14',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'AEN15',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'WAD8',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'WAD9',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'WAD10',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'WAD11',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'WAD12',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'WAD13',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'WAD14',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'WAD15',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,144,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	69742
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_4_Bits',0,10,144,13,16,4,12
	.byte	'reserved_0',0,4
	.word	10333
	.byte	8,24,2,35,0,12
	.byte	'AEN16',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'AEN17',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'AEN18',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'AEN19',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'AEN20',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'AEN21',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'AEN22',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'AEN23',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'WAD16',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'WAD17',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'WAD18',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'WAD19',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'WAD20',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'WAD21',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'WAD22',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'WAD23',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,152,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70128
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ACT_STA_Bits',0,10,230,10,16,4,12
	.byte	'ACT_Ni',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,192,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70518
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_OSW_Bits',0,10,147,16,16,4,12
	.byte	'SWON_S',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'SWON_T',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	6,24,2,35,0,12
	.byte	'OSS',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10333
	.byte	22,0,2,35,0,0,13,10,175,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70633
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_AOSV_2_Bits',0,10,145,11,16,4,12
	.byte	'AOSV_2A',0,4
	.word	10333
	.byte	8,24,2,35,0,12
	.byte	'AOSV_2B',0,4
	.word	10333
	.byte	8,16,2,35,0,12
	.byte	'AOSV_2C',0,4
	.word	10333
	.byte	8,8,2,35,0,12
	.byte	'AOSV_2D',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,240,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70799
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APT_Bits',0,10,192,11,16,4,12
	.byte	'reserved_0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'WAPT',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'APT',0,4
	.word	10333
	.byte	10,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'WAPT_2B',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'APT_2B',0,4
	.word	10333
	.byte	10,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,144,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70948
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APS_Bits',0,10,162,11,16,4,12
	.byte	'reserved_0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'WAPS',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'APS',0,4
	.word	10333
	.byte	6,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10333
	.byte	5,19,2,35,0,12
	.byte	'WAPS_1C2',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'APS_1C2',0,4
	.word	10333
	.byte	6,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10333
	.byte	12,0,2,35,0,0,13,10,248,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	71154
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APT_2C_Bits',0,10,184,11,16,4,12
	.byte	'reserved_0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'APT_2C',0,4
	.word	10333
	.byte	10,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10333
	.byte	20,0,2,35,0,0,13,10,152,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	71361
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APS_1C3_Bits',0,10,154,11,16,4,12
	.byte	'reserved_0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'APS_1C3',0,4
	.word	10333
	.byte	6,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10333
	.byte	24,0,2,35,0,0,13,10,128,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	71497
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NUTC_Bits',0,10,132,16,16,4,12
	.byte	'NUTE',0,4
	.word	10333
	.byte	10,22,2,35,0,12
	.byte	'FST',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10333
	.byte	2,19,2,35,0,12
	.byte	'SYN_T',0,4
	.word	10333
	.byte	3,16,2,35,0,12
	.byte	'SYN_T_OLD',0,4
	.word	10333
	.byte	3,13,2,35,0,12
	.byte	'VTN',0,4
	.word	10333
	.byte	6,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10333
	.byte	4,3,2,35,0,12
	.byte	'WNUT',0,4
	.word	10333
	.byte	1,2,2,35,0,12
	.byte	'WSYN',0,4
	.word	10333
	.byte	1,1,2,35,0,12
	.byte	'WVTN',0,4
	.word	10333
	.byte	1,0,2,35,0,0,13,10,167,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	71634
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NUSC_Bits',0,10,246,15,16,4,12
	.byte	'NUSE',0,4
	.word	10333
	.byte	6,26,2,35,0,12
	.byte	'FSS',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'SYN_S',0,4
	.word	10333
	.byte	6,19,2,35,0,12
	.byte	'SYN_S_OLD',0,4
	.word	10333
	.byte	6,13,2,35,0,12
	.byte	'VSN',0,4
	.word	10333
	.byte	6,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10333
	.byte	4,3,2,35,0,12
	.byte	'WNUS',0,4
	.word	10333
	.byte	1,2,2,35,0,12
	.byte	'WSYN',0,4
	.word	10333
	.byte	1,1,2,35,0,12
	.byte	'WVSN',0,4
	.word	10333
	.byte	1,0,2,35,0,0,13,10,159,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	71883
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NTI_CNT_Bits',0,10,239,15,16,4,12
	.byte	'NTI_CNT',0,4
	.word	10333
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10333
	.byte	22,0,2,35,0,0,13,10,151,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	72109
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_NOTIFY_Bits',0,10,235,14,16,4,12
	.byte	'PDI',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'PEI',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'TINI',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'TAXI',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'SISI',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'TISI',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'MSI',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'MTI',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'SASI',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'TASI',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'PWI',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'W2I',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'W1I',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'GL1I',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'LL1I',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'EI',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'GL2I',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'LL2I',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'TE0I',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'TE1I',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'TE2I',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'TE3I',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'TE4I',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'CDTI',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'CDSI',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'TORI',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'SORI',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'DCGI',0,4
	.word	10333
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10333
	.byte	4,0,2,35,0,0,13,10,163,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	72225
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_EN_Bits',0,10,160,14,16,4,12
	.byte	'PDI_IRQ_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'PEI_IRQ_EN',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'TINI_IRQ_EN',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'TAXI_IRQ_EN',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'SISI_IRQ_EN',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'TISI_IRQ_EN',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'MSI_IRQ_EN',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'MTI_IRQ_EN',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'SASI_IRQ_EN',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'TASI_IRQ_EN',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'PWI_IRQ_EN',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'W2I_IRQ_EN',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'W1I_IRQ_EN',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'GL1I_IRQ_EN',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'LL1I_IRQ_EN',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'EI_IRQ_EN',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'GL2I_IRQ_EN',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'LL2I_IRQ_EN',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'TE0I_IRQ_EN',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'TE1I_IRQ_EN',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'TE2I_IRQ_EN',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'TE3I_IRQ_EN',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'TE4I_IRQ_EN',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'CDTI_IRQ_EN',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'CDSI_IRQ_EN',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'TORI',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'SORI',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'DCGI',0,4
	.word	10333
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10333
	.byte	4,0,2,35,0,0,13,10,139,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	72764
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_FORCINT_Bits',0,10,194,14,16,4,12
	.byte	'TRG_PDI',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'TRG_PEI',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'TRG_TINI',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'TRG_TAXI',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'TRG_SISI',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'TRG_TISI',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'TRG_MSI',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'TRG_MTI',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'TRG_SASI',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'TRG_TASI',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'TRG_PWI',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'TRG_W2I',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'TRG_W1I',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'TRG_GL1I',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'TRG_LL1I',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'TRG_EI',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'TRG_GL2I',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'TRG_LL2I',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'TRG_TE0I',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'TRG_TE1I',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'TRG_TE2I',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'TRG_TE3I',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'TRG_TE4I',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'TRG_CDTI',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'TRG_CDSI',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'TRG_TORI',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'TRG_SORI',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'TRG_DCGI',0,4
	.word	10333
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10333
	.byte	4,0,2,35,0,0,13,10,147,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	73474
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_MODE_Bits',0,10,228,14,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	30,0,2,35,0,0,13,10,155,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	74126
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_EIRQ_EN_Bits',0,10,218,13,16,4,12
	.byte	'PDI_EIRQ_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'PEI_EIRQ_EN',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'TINI_EIRQ_EN',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'TAXI_EIRQ_EN',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'SISI_EIRQ_EN',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'TISI_EIRQ_EN',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'MSI_EIRQ_EN',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'MTI_EIRQ_EN',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'SASI_EIRQ_EN',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'TASI_EIRQ_EN',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'PWI_EIRQ_EN',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'W2I_EIRQ_EN',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'W1I_EIRQ_EN',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'GL1I_EIRQ_EN',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'LL1I_EIRQ_EN',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'EI_EIRQ_EN',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'GL2I_EIRQ_EN',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'LL2I_EIRQ_EN',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'TE0I_EIRQ_EN',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'TE1I_EIRQ_EN',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'TE2I_EIRQ_EN',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'TE3I_EIRQ_EN',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'TE4I_EIRQ_EN',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'CDTI_EIRQ_EN',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'CDSI_EIRQ_EN',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'TORI',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'SORI',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'DCGI',0,4
	.word	10333
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10333
	.byte	4,0,2,35,0,0,13,10,218,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	74243
	.byte	4,2,35,0,0,15,92
	.word	516
	.byte	16,91,0,11
	.byte	'_Ifx_GTM_DPLL_INC_CNT1_Bits',0,10,145,14,16,4,12
	.byte	'INC_CNT1',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,250,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	74988
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_INC_CNT2_Bits',0,10,153,14,16,4,12
	.byte	'INC_CNT2',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,131,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75106
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APT_SYNC_Bits',0,10,204,11,16,4,12
	.byte	'APT_2B_EXT',0,4
	.word	10333
	.byte	6,26,2,35,0,12
	.byte	'APT_2B_STATUS',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	10333
	.byte	7,18,2,35,0,12
	.byte	'APT_2B_OLD',0,4
	.word	10333
	.byte	10,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,160,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75224
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APS_SYNC_Bits',0,10,174,11,16,4,12
	.byte	'APS_1C2_EXT',0,4
	.word	10333
	.byte	6,26,2,35,0,12
	.byte	'APS_1C2_STATUS',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	10333
	.byte	7,18,2,35,0,12
	.byte	'APS_1C2_OLD',0,4
	.word	10333
	.byte	6,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10333
	.byte	12,0,2,35,0,0,13,10,136,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75413
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TBU_TS0_T_Bits',0,10,212,17,16,4,12
	.byte	'TBU_TS0_T',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,225,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75605
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TBU_TS0_S_Bits',0,10,205,17,16,4,12
	.byte	'TBU_TS0_S',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,217,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75725
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_LD1_Bits',0,10,251,10,16,4,12
	.byte	'ADD_IN_LD_1',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,216,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75845
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_LD2_Bits',0,10,130,11,16,4,12
	.byte	'ADD_IN_LD_2',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,224,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75968
	.byte	4,2,35,0,0,15,44
	.word	516
	.byte	16,43,0,11
	.byte	'_Ifx_GTM_DPLL_STATUS_Bits',0,10,169,17,16,4,12
	.byte	'reserved_0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'CSO',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'CTO',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'CRO',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'RCS',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'RCT',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'PSE',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'SOR',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'MS',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'TOR',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'MT',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'RAM2_ERR',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	2,17,2,35,0,12
	.byte	'LOW_RES',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'CSVS',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'CSVT',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'CAIP2',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'CAIP1',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'ISN',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'ITN',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'BWD2',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'BWD1',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'LOCK2',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'SYS',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'SYT',0,4
	.word	10333
	.byte	1,4,2,35,0,12
	.byte	'FSD',0,4
	.word	10333
	.byte	1,3,2,35,0,12
	.byte	'FTD',0,4
	.word	10333
	.byte	1,2,2,35,0,12
	.byte	'LOCK1',0,4
	.word	10333
	.byte	1,1,2,35,0,12
	.byte	'ERR',0,4
	.word	10333
	.byte	1,0,2,35,0,0,13,10,209,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76100
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ID_PMTR_Bits',0,10,138,14,16,4,12
	.byte	'ID_PMTR_x',0,4
	.word	10333
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10333
	.byte	23,0,2,35,0,0,13,10,242,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76687
	.byte	4,2,35,0,0,15,96
	.word	76764
	.byte	16,23,0,15,128,1
	.word	516
	.byte	16,127,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER_Bits',0,10,173,12,16,4,12
	.byte	'MLT',0,4
	.word	10333
	.byte	10,22,2,35,0,12
	.byte	'IFP',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10333
	.byte	15,6,2,35,0,12
	.byte	'AMT',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'IDS',0,4
	.word	10333
	.byte	1,4,2,35,0,12
	.byte	'IDT',0,4
	.word	10333
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10333
	.byte	2,1,2,35,0,12
	.byte	'RMO',0,4
	.word	10333
	.byte	1,0,2,35,0,0,13,10,240,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76823
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE_Bits',0,10,160,12,16,4,12
	.byte	'reserved_0',0,4
	.word	10333
	.byte	10,22,2,35,0,12
	.byte	'IFP',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10333
	.byte	14,7,2,35,0,12
	.byte	'AMS',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'IDS',0,4
	.word	10333
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10333
	.byte	3,1,2,35,0,12
	.byte	'RMO',0,4
	.word	10333
	.byte	1,0,2,35,0,0,13,10,232,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77047
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER_Bits',0,10,213,12,16,4,12
	.byte	'DMO',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10333
	.byte	2,29,2,35,0,12
	.byte	'COA',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'PIT',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'SGE1',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'DLM1',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'PCM1',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10333
	.byte	24,0,2,35,0,0,13,10,128,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77284
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE_Bits',0,10,128,12,16,4,12
	.byte	'DMO',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10333
	.byte	2,29,2,35,0,12
	.byte	'COA',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'PIT',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'SGE1',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'DLM1',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'PCM1',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'SGE2',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'DLM2',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'PCM2',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'SYN_NS',0,4
	.word	10333
	.byte	21,0,2,35,0,0,13,10,216,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77509
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RAM_INI_Bits',0,10,228,16,16,4,12
	.byte	'INIT_1A',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'INIT_1B',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'INIT_2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'INIT_RAM',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10333
	.byte	27,0,2,35,0,0,13,10,135,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77776
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSA_Bits',0,10,165,16,16,4,12
	.byte	'PSA',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,191,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77970
	.byte	4,2,35,0,0,15,96
	.word	78038
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_DLA_Bits',0,10,167,13,16,4,12
	.byte	'DLA',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,160,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78087
	.byte	4,2,35,0,0,15,96
	.word	78155
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_NA_Bits',0,10,189,15,16,4,12
	.byte	'DB',0,4
	.word	10333
	.byte	10,22,2,35,0,12
	.byte	'DW',0,4
	.word	10333
	.byte	10,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10333
	.byte	12,0,2,35,0,0,13,10,223,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78204
	.byte	4,2,35,0,0,15,96
	.word	78284
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_DTA_Bits',0,10,195,13,16,4,12
	.byte	'DTA',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,192,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78333
	.byte	4,2,35,0,0,15,96
	.word	78401
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_TS_T_0_Bits',0,10,149,18,16,4,12
	.byte	'TRIGGER_TS',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,169,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78450
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TS_T_1_Bits',0,10,156,18,16,4,12
	.byte	'TRIGGER_TS',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,177,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78568
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_FTV_T_Bits',0,10,131,14,16,4,12
	.byte	'TRIGGER_FT',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,234,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78686
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TS_S_0_Bits',0,10,135,18,16,4,12
	.byte	'STATE_TS',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,153,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78803
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TS_S_1_Bits',0,10,142,18,16,4,12
	.byte	'STATE_TS',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,161,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78919
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_FTV_S_Bits',0,10,252,13,16,4,12
	.byte	'STATE_FT',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,226,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79035
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_THMI_Bits',0,10,226,17,16,4,12
	.byte	'THMI',0,4
	.word	10333
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,241,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79150
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_THMA_Bits',0,10,219,17,16,4,12
	.byte	'THMA',0,4
	.word	10333
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,233,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79260
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_THVAL_Bits',0,10,233,17,16,4,12
	.byte	'THVAL',0,4
	.word	10333
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,249,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79370
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TOV_Bits',0,10,247,17,16,4,12
	.byte	'DB',0,4
	.word	10333
	.byte	10,22,2,35,0,12
	.byte	'DW',0,4
	.word	10333
	.byte	6,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,137,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79482
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TOV_S_Bits',0,10,255,17,16,4,12
	.byte	'DB',0,4
	.word	10333
	.byte	10,22,2,35,0,12
	.byte	'DW',0,4
	.word	10333
	.byte	6,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,145,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79603
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_CAL1_Bits',0,10,237,10,16,4,12
	.byte	'ADD_IN_CAL_1',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,200,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79726
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_CAL2_Bits',0,10,244,10,16,4,12
	.byte	'ADD_IN_CAL_2',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,208,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79851
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MPVAL1_Bits',0,10,172,15,16,4,12
	.byte	'MPVAL1',0,4
	.word	10333
	.byte	16,16,2,35,0,12
	.byte	'SIX1',0,4
	.word	10333
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,206,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79976
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MPVAL2_Bits',0,10,181,15,16,4,12
	.byte	'MPVAL2',0,4
	.word	10333
	.byte	16,16,2,35,0,12
	.byte	'SIX2',0,4
	.word	10333
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,215,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80106
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_T_TAR_Bits',0,10,225,15,16,4,12
	.byte	'NMB_T_TAR',0,4
	.word	10333
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,135,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80236
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_T_TAR_OLD_Bits',0,10,232,15,16,4,12
	.byte	'NMB_T_TAR_OLD',0,4
	.word	10333
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,143,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80356
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_S_TAR_Bits',0,10,204,15,16,4,12
	.byte	'NMB_S_TAR',0,4
	.word	10333
	.byte	20,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10333
	.byte	12,0,2,35,0,0,13,10,239,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80484
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_S_TAR_OLD_Bits',0,10,211,15,16,4,12
	.byte	'NMB_S_TAR_OLD',0,4
	.word	10333
	.byte	20,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10333
	.byte	12,0,2,35,0,0,13,10,247,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80604
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_TX_Bits',0,10,254,16,16,4,12
	.byte	'RCDT_TX',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,160,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80732
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_SX_Bits',0,10,239,16,16,4,12
	.byte	'RCDT_SX',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,143,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80848
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_TX_NOM_Bits',0,10,134,17,16,4,12
	.byte	'RCDT_TX_NOM',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,169,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80964
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_SX_NOM_Bits',0,10,247,16,16,4,12
	.byte	'RCDT_SX_NOM',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,152,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81088
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RDT_T_ACT_Bits',0,10,155,17,16,4,12
	.byte	'RDT_T_ACT',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,193,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81212
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RDT_S_ACT_Bits',0,10,141,17,16,4,12
	.byte	'RDT_S_ACT',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,185,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81332
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_DT_T_ACT_Bits',0,10,188,13,16,4,12
	.byte	'DT_T_ACT',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,184,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81452
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_DT_S_ACT_Bits',0,10,174,13,16,4,12
	.byte	'DT_S_ACT',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,176,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81570
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_EDT_T_Bits',0,10,211,13,16,4,12
	.byte	'EDT_T',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,210,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81688
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MEDT_T_Bits',0,10,150,15,16,4,12
	.byte	'MEDT_T',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,181,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81800
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_EDT_S_Bits',0,10,203,13,16,4,12
	.byte	'EDT_S',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,201,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81914
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MEDT_S_Bits',0,10,142,15,16,4,12
	.byte	'MEDT_S',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,172,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82026
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_TX_Bits',0,10,228,11,16,4,12
	.byte	'CDT_TX',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,184,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82140
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_SX_Bits',0,10,214,11,16,4,12
	.byte	'CDT_SX',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,168,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82254
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_TX_NOM_Bits',0,10,235,11,16,4,12
	.byte	'CDT_TX_NOM',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,192,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82368
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_SX_NOM_Bits',0,10,221,11,16,4,12
	.byte	'CDT_SX_NOM',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,176,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82490
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TLR_Bits',0,10,240,17,16,4,12
	.byte	'TLR',0,4
	.word	10333
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10333
	.byte	24,0,2,35,0,0,13,10,129,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82612
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_SLR_Bits',0,10,162,17,16,4,12
	.byte	'SLR',0,4
	.word	10333
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10333
	.byte	24,0,2,35,0,0,13,10,201,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82719
	.byte	4,2,35,0,0,15,88
	.word	516
	.byte	16,87,0,11
	.byte	'_Ifx_GTM_DPLL_PDT_T_Bits',0,10,157,16,16,4,12
	.byte	'DB',0,4
	.word	10333
	.byte	14,18,2,35,0,12
	.byte	'DW',0,4
	.word	10333
	.byte	10,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,183,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82835
	.byte	4,2,35,0,0,15,96
	.word	82918
	.byte	16,23,0,15,96
	.word	516
	.byte	16,95,0,11
	.byte	'_Ifx_GTM_DPLL_MLS1_Bits',0,10,157,15,16,4,12
	.byte	'MLS1',0,4
	.word	10333
	.byte	18,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	10333
	.byte	14,0,2,35,0,0,13,10,189,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82976
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MLS2_Bits',0,10,164,15,16,4,12
	.byte	'MLS2',0,4
	.word	10333
	.byte	18,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	10333
	.byte	14,0,2,35,0,0,13,10,197,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83086
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CNT_NUM1_Bits',0,10,242,11,16,4,12
	.byte	'CNT_NUM_1',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,200,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83196
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CNT_NUM2_Bits',0,10,249,11,16,4,12
	.byte	'CNT_NUM_2',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,208,40,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83315
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PVT_Bits',0,10,221,16,16,4,12
	.byte	'PVT',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,255,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83434
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSTC_Bits',0,10,200,16,16,4,12
	.byte	'PSTC',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,231,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83542
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSSC_Bits',0,10,179,16,16,4,12
	.byte	'PSSC',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,207,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83652
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSTM_0_Bits',0,10,207,16,16,4,12
	.byte	'PSTM',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,239,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83762
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSTM_1_Bits',0,10,214,16,16,4,12
	.byte	'PSTM',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,247,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83874
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSSM_0_Bits',0,10,186,16,16,4,12
	.byte	'PSSM',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,215,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83986
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSSM_1_Bits',0,10,193,16,16,4,12
	.byte	'PSSM',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,223,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84098
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_T_Bits',0,10,218,15,16,4,12
	.byte	'NMB_T',0,4
	.word	10333
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,255,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84210
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_S_Bits',0,10,197,15,16,4,12
	.byte	'NMB_S',0,4
	.word	10333
	.byte	20,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10333
	.byte	12,0,2,35,0,0,13,10,231,42,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84322
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RDT_S_Bits',0,10,148,17,16,4,12
	.byte	'RDT_S',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,177,44,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84434
	.byte	4,2,35,0,0,15,128,2
	.word	84506
	.byte	16,63,0,11
	.byte	'_Ifx_GTM_DPLL_TSF_S_Bits',0,10,170,18,16,4,12
	.byte	'TSF_S',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,193,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84556
	.byte	4,2,35,0,0,15,128,2
	.word	84628
	.byte	16,63,0,11
	.byte	'_Ifx_GTM_DPLL_ADT_S_Bits',0,10,137,11,16,4,12
	.byte	'PD_S',0,4
	.word	10333
	.byte	16,16,2,35,0,12
	.byte	'NS',0,4
	.word	10333
	.byte	6,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	10333
	.byte	10,0,2,35,0,0,13,10,232,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84678
	.byte	4,2,35,0,0,15,128,2
	.word	84763
	.byte	16,63,0,11
	.byte	'_Ifx_GTM_DPLL_DT_S_Bits',0,10,181,13,16,4,12
	.byte	'DT_S',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,168,41,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84813
	.byte	4,2,35,0,0,15,128,2
	.word	84883
	.byte	16,63,0,15,128,8
	.word	516
	.byte	16,255,7,0,11
	.byte	'_Ifx_GTM_DPLL_TSAC_Bits',0,10,163,18,16,4,12
	.byte	'TSAC',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,185,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84944
	.byte	4,2,35,0,0,15,96
	.word	85014
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_PSAC_Bits',0,10,172,16,16,4,12
	.byte	'PSAC',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,199,43,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85063
	.byte	4,2,35,0,0,15,96
	.word	85133
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_ACB_Bits',0,10,217,10,16,4,12
	.byte	'ACB_0',0,4
	.word	10333
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10333
	.byte	3,24,2,35,0,12
	.byte	'ACB_1',0,4
	.word	10333
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	3,16,2,35,0,12
	.byte	'ACB_2',0,4
	.word	10333
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10333
	.byte	3,8,2,35,0,12
	.byte	'ACB_3',0,4
	.word	10333
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10333
	.byte	3,0,2,35,0,0,13,10,184,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85182
	.byte	4,2,35,0,0,15,24
	.word	85371
	.byte	16,5,0,11
	.byte	'_Ifx_GTM_DPLL',0,10,254,57,25,152,30,14
	.byte	'CTRL_0',0
	.word	68895
	.byte	4,2,35,0,14
	.byte	'CTRL_1',0
	.word	69328
	.byte	4,2,35,4,14
	.byte	'CTRL_2',0
	.word	69702
	.byte	4,2,35,8,14
	.byte	'CTRL_3',0
	.word	70088
	.byte	4,2,35,12,14
	.byte	'CTRL_4',0
	.word	70478
	.byte	4,2,35,16,14
	.byte	'reserved_14',0
	.word	1943
	.byte	4,2,35,20,14
	.byte	'ACT_STA',0
	.word	70593
	.byte	4,2,35,24,14
	.byte	'OSW',0
	.word	70759
	.byte	4,2,35,28,14
	.byte	'AOSV_2',0
	.word	70908
	.byte	4,2,35,32,14
	.byte	'APT',0
	.word	71114
	.byte	4,2,35,36,14
	.byte	'APS',0
	.word	71321
	.byte	4,2,35,40,14
	.byte	'APT_2C',0
	.word	71457
	.byte	4,2,35,44,14
	.byte	'APS_1C3',0
	.word	71594
	.byte	4,2,35,48,14
	.byte	'NUTC',0
	.word	71843
	.byte	4,2,35,52,14
	.byte	'NUSC',0
	.word	72069
	.byte	4,2,35,56,14
	.byte	'NTI_CNT',0
	.word	72185
	.byte	4,2,35,60,14
	.byte	'IRQ_NOTIFY',0
	.word	72724
	.byte	4,2,35,64,14
	.byte	'IRQ_EN',0
	.word	73434
	.byte	4,2,35,68,14
	.byte	'IRQ_FORCINT',0
	.word	74086
	.byte	4,2,35,72,14
	.byte	'IRQ_MODE',0
	.word	74203
	.byte	4,2,35,76,14
	.byte	'EIRQ_EN',0
	.word	74939
	.byte	4,2,35,80,14
	.byte	'reserved_54',0
	.word	74979
	.byte	92,2,35,84,14
	.byte	'INC_CNT1',0
	.word	75066
	.byte	4,3,35,176,1,14
	.byte	'INC_CNT2',0
	.word	75184
	.byte	4,3,35,180,1,14
	.byte	'APT_SYNC',0
	.word	75373
	.byte	4,3,35,184,1,14
	.byte	'APS_SYNC',0
	.word	75565
	.byte	4,3,35,188,1,14
	.byte	'TBU_TS0_T',0
	.word	75685
	.byte	4,3,35,192,1,14
	.byte	'TBU_TS0_S',0
	.word	75805
	.byte	4,3,35,196,1,14
	.byte	'ADD_IN_LD1',0
	.word	75928
	.byte	4,3,35,200,1,14
	.byte	'ADD_IN_LD2',0
	.word	76051
	.byte	4,3,35,204,1,14
	.byte	'reserved_D0',0
	.word	76091
	.byte	44,3,35,208,1,14
	.byte	'STATUS',0
	.word	76647
	.byte	4,3,35,252,1,14
	.byte	'ID_PMTR',0
	.word	76804
	.byte	96,3,35,128,2,14
	.byte	'reserved_160',0
	.word	76813
	.byte	128,1,3,35,224,2,14
	.byte	'CTRL_0_SHADOW_TRIGGER',0
	.word	77007
	.byte	4,3,35,224,3,14
	.byte	'CTRL_0_SHADOW_STATE',0
	.word	77244
	.byte	4,3,35,228,3,14
	.byte	'CTRL_1_SHADOW_TRIGGER',0
	.word	77469
	.byte	4,3,35,232,3,14
	.byte	'CRTL_1_SHADOW_STATE',0
	.word	77736
	.byte	4,3,35,236,3,14
	.byte	'reserved_1F0',0
	.word	4102
	.byte	12,3,35,240,3,14
	.byte	'RAM_INI',0
	.word	77930
	.byte	4,3,35,252,3,14
	.byte	'PSA',0
	.word	78078
	.byte	96,3,35,128,4,14
	.byte	'reserved_260',0
	.word	16225
	.byte	32,3,35,224,4,14
	.byte	'DLA',0
	.word	78195
	.byte	96,3,35,128,5,14
	.byte	'reserved_2E0',0
	.word	16225
	.byte	32,3,35,224,5,14
	.byte	'NA',0
	.word	78324
	.byte	96,3,35,128,6,14
	.byte	'reserved_360',0
	.word	16225
	.byte	32,3,35,224,6,14
	.byte	'DTA',0
	.word	78441
	.byte	96,3,35,128,7,14
	.byte	'reserved_3E0',0
	.word	16225
	.byte	32,3,35,224,7,14
	.byte	'TS_T_0',0
	.word	78528
	.byte	4,3,35,128,8,14
	.byte	'TS_T_1',0
	.word	78646
	.byte	4,3,35,132,8,14
	.byte	'FTV_T',0
	.word	78763
	.byte	4,3,35,136,8,14
	.byte	'reserved_40C',0
	.word	1943
	.byte	4,3,35,140,8,14
	.byte	'TS_S_0',0
	.word	78879
	.byte	4,3,35,144,8,14
	.byte	'TS_S_1',0
	.word	78995
	.byte	4,3,35,148,8,14
	.byte	'FTV_S',0
	.word	79110
	.byte	4,3,35,152,8,14
	.byte	'reserved_41C',0
	.word	1943
	.byte	4,3,35,156,8,14
	.byte	'THMI',0
	.word	79220
	.byte	4,3,35,160,8,14
	.byte	'THMA',0
	.word	79330
	.byte	4,3,35,164,8,14
	.byte	'THVAL',0
	.word	79442
	.byte	4,3,35,168,8,14
	.byte	'reserved_42C',0
	.word	1943
	.byte	4,3,35,172,8,14
	.byte	'TOV',0
	.word	79563
	.byte	4,3,35,176,8,14
	.byte	'TOV_S',0
	.word	79686
	.byte	4,3,35,180,8,14
	.byte	'ADD_IN_CAL1',0
	.word	79811
	.byte	4,3,35,184,8,14
	.byte	'ADD_IN_CAL2',0
	.word	79936
	.byte	4,3,35,188,8,14
	.byte	'MPVAL1',0
	.word	80066
	.byte	4,3,35,192,8,14
	.byte	'MPVAL2',0
	.word	80196
	.byte	4,3,35,196,8,14
	.byte	'NMB_T_TAR',0
	.word	80316
	.byte	4,3,35,200,8,14
	.byte	'NMB_T_TAR_OLD',0
	.word	80444
	.byte	4,3,35,204,8,14
	.byte	'NMB_S_TAR',0
	.word	80564
	.byte	4,3,35,208,8,14
	.byte	'NMB_S_TAR_OLD',0
	.word	80692
	.byte	4,3,35,212,8,14
	.byte	'reserved_458',0
	.word	3762
	.byte	8,3,35,216,8,14
	.byte	'RCDT_TX',0
	.word	80808
	.byte	4,3,35,224,8,14
	.byte	'RCDT_SX',0
	.word	80924
	.byte	4,3,35,228,8,14
	.byte	'RCDT_TX_NOM',0
	.word	81048
	.byte	4,3,35,232,8,14
	.byte	'RCDT_SX_NOM',0
	.word	81172
	.byte	4,3,35,236,8,14
	.byte	'RDT_T_ACT',0
	.word	81292
	.byte	4,3,35,240,8,14
	.byte	'RDT_S_ACT',0
	.word	81412
	.byte	4,3,35,244,8,14
	.byte	'DT_T_ACT',0
	.word	81530
	.byte	4,3,35,248,8,14
	.byte	'DT_S_ACT',0
	.word	81648
	.byte	4,3,35,252,8,14
	.byte	'EDT_T',0
	.word	81760
	.byte	4,3,35,128,9,14
	.byte	'MEDT_T',0
	.word	81874
	.byte	4,3,35,132,9,14
	.byte	'EDT_S',0
	.word	81986
	.byte	4,3,35,136,9,14
	.byte	'MEDT_S',0
	.word	82100
	.byte	4,3,35,140,9,14
	.byte	'CDT_TX',0
	.word	82214
	.byte	4,3,35,144,9,14
	.byte	'CDT_SX',0
	.word	82328
	.byte	4,3,35,148,9,14
	.byte	'CDT_TX_NOM',0
	.word	82450
	.byte	4,3,35,152,9,14
	.byte	'CDT_SX_NOM',0
	.word	82572
	.byte	4,3,35,156,9,14
	.byte	'TLR',0
	.word	82679
	.byte	4,3,35,160,9,14
	.byte	'SLR',0
	.word	82786
	.byte	4,3,35,164,9,14
	.byte	'reserved_4A8',0
	.word	82826
	.byte	88,3,35,168,9,14
	.byte	'PDT_T',0
	.word	82958
	.byte	96,3,35,128,10,14
	.byte	'reserved_560',0
	.word	82967
	.byte	96,3,35,224,10,14
	.byte	'MLS1',0
	.word	83046
	.byte	4,3,35,192,11,14
	.byte	'MLS2',0
	.word	83156
	.byte	4,3,35,196,11,14
	.byte	'CNT_NUM1',0
	.word	83275
	.byte	4,3,35,200,11,14
	.byte	'CNT_NUM2',0
	.word	83394
	.byte	4,3,35,204,11,14
	.byte	'PVT',0
	.word	83502
	.byte	4,3,35,208,11,14
	.byte	'reserved_5D4',0
	.word	4102
	.byte	12,3,35,212,11,14
	.byte	'PSTC',0
	.word	83612
	.byte	4,3,35,224,11,14
	.byte	'PSSC',0
	.word	83722
	.byte	4,3,35,228,11,14
	.byte	'PSTM_0',0
	.word	83834
	.byte	4,3,35,232,11,14
	.byte	'PSTM_1',0
	.word	83946
	.byte	4,3,35,236,11,14
	.byte	'PSSM_0',0
	.word	84058
	.byte	4,3,35,240,11,14
	.byte	'PSSM_1',0
	.word	84170
	.byte	4,3,35,244,11,14
	.byte	'NMB_T',0
	.word	84282
	.byte	4,3,35,248,11,14
	.byte	'NMB_S',0
	.word	84394
	.byte	4,3,35,252,11,14
	.byte	'RDT_S',0
	.word	84546
	.byte	128,2,3,35,128,12,14
	.byte	'TSF_S',0
	.word	84668
	.byte	128,2,3,35,128,14,14
	.byte	'ADT_S',0
	.word	84803
	.byte	128,2,3,35,128,16,14
	.byte	'DT_S',0
	.word	84923
	.byte	128,2,3,35,128,18,14
	.byte	'reserved_A00',0
	.word	84933
	.byte	128,8,3,35,128,20,14
	.byte	'TSAC',0
	.word	85054
	.byte	96,3,35,128,28,14
	.byte	'reserved_E60',0
	.word	16225
	.byte	32,3,35,224,28,14
	.byte	'PSAC',0
	.word	85173
	.byte	96,3,35,128,29,14
	.byte	'reserved_EE0',0
	.word	16225
	.byte	32,3,35,224,29,14
	.byte	'ACB',0
	.word	85411
	.byte	24,3,35,128,30,0,10
	.word	85420
	.byte	15,232,225,1
	.word	516
	.byte	16,231,225,1,0,11
	.byte	'_Ifx_GTM_MCS_CH_R0_Bits',0,10,198,24,16,4,12
	.byte	'DATA',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,137,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87615
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R1_Bits',0,10,205,24,16,4,12
	.byte	'DATA',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,145,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87725
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R2_Bits',0,10,212,24,16,4,12
	.byte	'DATA',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,153,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87835
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R3_Bits',0,10,219,24,16,4,12
	.byte	'DATA',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,161,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87945
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R4_Bits',0,10,226,24,16,4,12
	.byte	'DATA',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,169,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88055
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R5_Bits',0,10,233,24,16,4,12
	.byte	'DATA',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,177,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88165
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R6_Bits',0,10,240,24,16,4,12
	.byte	'DATA',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,185,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88275
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R7_Bits',0,10,247,24,16,4,12
	.byte	'DATA',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,193,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88385
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_CTRL_Bits',0,10,130,24,16,4,12
	.byte	'EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'IRQ',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'ERR',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'CY',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'Z',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'V',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'N',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'CAT',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'CWT',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10333
	.byte	6,16,2,35,0,12
	.byte	'SP_CNT',0,4
	.word	10333
	.byte	3,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	10333
	.byte	13,0,2,35,0,0,13,10,209,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88495
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_ACB_Bits',0,10,247,23,16,4,12
	.byte	'ACB0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'ACB1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'ACB2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'ACB3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'ACB4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10333
	.byte	27,0,2,35,0,0,13,10,201,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88781
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH0_CTRG_Bits',0,10,203,23,16,4,12
	.byte	'TRG0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'TRG1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'TRG2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'TRG3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'TRG4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'TRG5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'TRG6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'TRG7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'TRG8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'TRG9',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'TRG10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'TRG11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'TRG12',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'TRG13',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'TRG14',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'TRG15',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,185,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88955
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH0_STRG_Bits',0,10,225,23,16,4,12
	.byte	'TRG0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'TRG1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'TRG2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'TRG3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'TRG4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'TRG5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'TRG6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'TRG7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'TRG8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'TRG9',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'TRG10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'TRG11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'TRG12',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'TRG13',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'TRG14',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'TRG15',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,193,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89314
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_PC_Bits',0,10,191,24,16,4,12
	.byte	'PC',0,4
	.word	10333
	.byte	14,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	10333
	.byte	18,0,2,35,0,0,13,10,129,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89673
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_NOTIFY_Bits',0,10,182,24,16,4,12
	.byte	'MCS_IRQ',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'STK_ERR_IRQ',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'MEM_ERR_IRQ',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10333
	.byte	29,0,2,35,0,0,13,10,249,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89781
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_EN_Bits',0,10,157,24,16,4,12
	.byte	'MCS_IRQ_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'STK_ERR_IRQ_EN',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'MEM_ERR_IRQ_EN',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10333
	.byte	29,0,2,35,0,0,13,10,225,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89947
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_FORCINT_Bits',0,10,166,24,16,4,12
	.byte	'TRG_MCS_IRQ',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'TRG_STK_ERR_IRQ',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'TRG_MEM_ERR_IRQ',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10333
	.byte	29,0,2,35,0,0,13,10,233,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90118
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_MODE_Bits',0,10,175,24,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	30,0,2,35,0,0,13,10,241,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90297
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_EIRQ_EN_Bits',0,10,148,24,16,4,12
	.byte	'MCS_EIRQ_EN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'STK_ERR_EIRQ_EN',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'MEM_ERR_EIRQ_EN',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10333
	.byte	29,0,2,35,0,0,13,10,217,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90416
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH0',0,10,197,56,25,88,14
	.byte	'R0',0
	.word	87685
	.byte	4,2,35,0,14
	.byte	'R1',0
	.word	87795
	.byte	4,2,35,4,14
	.byte	'R2',0
	.word	87905
	.byte	4,2,35,8,14
	.byte	'R3',0
	.word	88015
	.byte	4,2,35,12,14
	.byte	'R4',0
	.word	88125
	.byte	4,2,35,16,14
	.byte	'R5',0
	.word	88235
	.byte	4,2,35,20,14
	.byte	'R6',0
	.word	88345
	.byte	4,2,35,24,14
	.byte	'R7',0
	.word	88455
	.byte	4,2,35,28,14
	.byte	'CTRL',0
	.word	88741
	.byte	4,2,35,32,14
	.byte	'ACB',0
	.word	88915
	.byte	4,2,35,36,14
	.byte	'CTRG',0
	.word	89274
	.byte	4,2,35,40,14
	.byte	'STRG',0
	.word	89633
	.byte	4,2,35,44,14
	.byte	'reserved_30',0
	.word	13517
	.byte	16,2,35,48,14
	.byte	'PC',0
	.word	89741
	.byte	4,2,35,64,14
	.byte	'IRQ_NOTIFY',0
	.word	89907
	.byte	4,2,35,68,14
	.byte	'IRQ_EN',0
	.word	90078
	.byte	4,2,35,72,14
	.byte	'IRQ_FORCINT',0
	.word	90257
	.byte	4,2,35,76,14
	.byte	'IRQ_MODE',0
	.word	90376
	.byte	4,2,35,80,14
	.byte	'EIRQ_EN',0
	.word	90551
	.byte	4,2,35,84,0,10
	.word	90591
	.byte	15,28
	.word	516
	.byte	16,27,0,11
	.byte	'_Ifx_GTM_MCS_CTRL_Bits',0,10,254,24,16,4,12
	.byte	'SCHED',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'HLT_SP_OFL',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	14,16,2,35,0,12
	.byte	'RAM_RST',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	10333
	.byte	15,0,2,35,0,0,13,10,201,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90905
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_RST_Bits',0,10,150,25,16,4,12
	.byte	'RST0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'RST1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'RST2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'RST3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'RST4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'RST5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'RST6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'RST7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'CAT0',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'CAT1',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'CAT2',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'CAT3',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'CAT4',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'CAT5',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'CAT6',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'CAT7',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'CWT0',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'CWT1',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'CWT2',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'CWT3',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'CWT4',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'CWT5',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'CWT6',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'CWT7',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,217,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	91078
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_ERR_Bits',0,10,136,25,16,4,12
	.byte	'ERR0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'ERR1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'ERR2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'ERR3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'ERR4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'ERR5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'ERR6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'ERR7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10333
	.byte	24,0,2,35,0,0,13,10,209,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	91554
	.byte	4,2,35,0,0,15,40
	.word	516
	.byte	16,39,0,11
	.byte	'_Ifx_GTM_MCS_CH',0,10,174,56,25,128,1,14
	.byte	'R0',0
	.word	87685
	.byte	4,2,35,0,14
	.byte	'R1',0
	.word	87795
	.byte	4,2,35,4,14
	.byte	'R2',0
	.word	87905
	.byte	4,2,35,8,14
	.byte	'R3',0
	.word	88015
	.byte	4,2,35,12,14
	.byte	'R4',0
	.word	88125
	.byte	4,2,35,16,14
	.byte	'R5',0
	.word	88235
	.byte	4,2,35,20,14
	.byte	'R6',0
	.word	88345
	.byte	4,2,35,24,14
	.byte	'R7',0
	.word	88455
	.byte	4,2,35,28,14
	.byte	'CTRL',0
	.word	88741
	.byte	4,2,35,32,14
	.byte	'ACB',0
	.word	88915
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	3133
	.byte	24,2,35,40,14
	.byte	'PC',0
	.word	89741
	.byte	4,2,35,64,14
	.byte	'IRQ_NOTIFY',0
	.word	89907
	.byte	4,2,35,68,14
	.byte	'IRQ_EN',0
	.word	90078
	.byte	4,2,35,72,14
	.byte	'IRQ_FORCINT',0
	.word	90257
	.byte	4,2,35,76,14
	.byte	'IRQ_MODE',0
	.word	90376
	.byte	4,2,35,80,14
	.byte	'EIRQ_EN',0
	.word	90551
	.byte	4,2,35,84,14
	.byte	'reserved_58',0
	.word	91773
	.byte	40,2,35,88,0,10
	.word	91782
	.byte	10
	.word	91782
	.byte	10
	.word	91782
	.byte	10
	.word	91782
	.byte	10
	.word	91782
	.byte	10
	.word	91782
	.byte	10
	.word	91782
	.byte	15,128,24
	.word	516
	.byte	16,255,23,0,11
	.byte	'_Ifx_GTM_MCS',0,10,167,59,25,128,32,14
	.byte	'CH0',0
	.word	90891
	.byte	88,2,35,0,14
	.byte	'reserved_58',0
	.word	90896
	.byte	28,2,35,88,14
	.byte	'CTRL',0
	.word	91038
	.byte	4,2,35,116,14
	.byte	'RST',0
	.word	91514
	.byte	4,2,35,120,14
	.byte	'ERR',0
	.word	91733
	.byte	4,2,35,124,14
	.byte	'CH1',0
	.word	92075
	.byte	128,1,3,35,128,1,14
	.byte	'CH2',0
	.word	92080
	.byte	128,1,3,35,128,2,14
	.byte	'CH3',0
	.word	92085
	.byte	128,1,3,35,128,3,14
	.byte	'CH4',0
	.word	92090
	.byte	128,1,3,35,128,4,14
	.byte	'CH5',0
	.word	92095
	.byte	128,1,3,35,128,5,14
	.byte	'CH6',0
	.word	92100
	.byte	128,1,3,35,128,6,14
	.byte	'CH7',0
	.word	92105
	.byte	128,1,3,35,128,7,14
	.byte	'reserved_400',0
	.word	92110
	.byte	128,24,3,35,128,8,0,15,128,96
	.word	92121
	.byte	16,2,0,10
	.word	92345
	.byte	15,128,154,27
	.word	516
	.byte	16,255,153,27,0,11
	.byte	'_Ifx_GTM_CLC_Bits',0,10,214,8,16,4,12
	.byte	'DISR',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'DISS',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'EDIS',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10333
	.byte	28,0,2,35,0,0,13,10,168,38,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	92373
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_TIM_INSEL_Bits',0,10,227,22,16,4,12
	.byte	'CH0SEL',0,4
	.word	10333
	.byte	4,28,2,35,0,12
	.byte	'CH1SEL',0,4
	.word	10333
	.byte	4,24,2,35,0,12
	.byte	'CH2SEL',0,4
	.word	10333
	.byte	4,20,2,35,0,12
	.byte	'CH3SEL',0,4
	.word	10333
	.byte	4,16,2,35,0,12
	.byte	'CH4SEL',0,4
	.word	10333
	.byte	4,12,2,35,0,12
	.byte	'CH5SEL',0,4
	.word	10333
	.byte	4,8,2,35,0,12
	.byte	'CH6SEL',0,4
	.word	10333
	.byte	4,4,2,35,0,12
	.byte	'CH7SEL',0,4
	.word	10333
	.byte	4,0,2,35,0,0,13,10,233,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	92530
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_TIM',0,10,168,56,25,4,14
	.byte	'INSEL',0
	.word	92714
	.byte	4,2,35,0,0,15,12
	.word	92754
	.byte	16,2,0,10
	.word	92798
	.byte	15,20
	.word	516
	.byte	16,19,0,11
	.byte	'_Ifx_GTM_INOUTSEL_T_OUTSEL_Bits',0,10,206,22,16,4,12
	.byte	'SEL0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'SEL1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'SEL2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'SEL3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'SEL4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'SEL5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'SEL6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'SEL7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'SEL8',0,4
	.word	10333
	.byte	2,14,2,35,0,12
	.byte	'SEL9',0,4
	.word	10333
	.byte	2,12,2,35,0,12
	.byte	'SEL10',0,4
	.word	10333
	.byte	2,10,2,35,0,12
	.byte	'SEL11',0,4
	.word	10333
	.byte	2,8,2,35,0,12
	.byte	'SEL12',0,4
	.word	10333
	.byte	2,6,2,35,0,12
	.byte	'SEL13',0,4
	.word	10333
	.byte	2,4,2,35,0,12
	.byte	'SEL14',0,4
	.word	10333
	.byte	2,2,2,35,0,12
	.byte	'SEL15',0,4
	.word	10333
	.byte	2,0,2,35,0,0,13,10,225,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	92821
	.byte	4,2,35,0,0,15,40
	.word	93122
	.byte	16,9,0,11
	.byte	'_Ifx_GTM_INOUTSEL_T',0,10,162,56,25,40,14
	.byte	'OUTSEL',0
	.word	93162
	.byte	40,2,35,0,0,10
	.word	93171
	.byte	15,36
	.word	516
	.byte	16,35,0,11
	.byte	'_Ifx_GTM_INOUTSEL_DSADC_INSEL_Bits',0,10,157,22,16,4,12
	.byte	'INSEL0',0,4
	.word	10333
	.byte	4,28,2,35,0,12
	.byte	'INSEL1',0,4
	.word	10333
	.byte	4,24,2,35,0,12
	.byte	'INSEL2',0,4
	.word	10333
	.byte	4,20,2,35,0,12
	.byte	'INSEL3',0,4
	.word	10333
	.byte	4,16,2,35,0,12
	.byte	'INSEL4',0,4
	.word	10333
	.byte	4,12,2,35,0,12
	.byte	'INSEL5',0,4
	.word	10333
	.byte	4,8,2,35,0,12
	.byte	'INSEL6',0,4
	.word	10333
	.byte	4,4,2,35,0,12
	.byte	'INSEL7',0,4
	.word	10333
	.byte	4,0,2,35,0,0,13,10,193,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	93228
	.byte	4,2,35,0,0,15,12
	.word	93414
	.byte	16,2,0,11
	.byte	'_Ifx_GTM_INOUTSEL_DSADC_OUTSEL_Bits',0,10,170,22,16,4,12
	.byte	'SEL0',0,4
	.word	10333
	.byte	3,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10333
	.byte	5,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	10333
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	10333
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	10333
	.byte	17,0,2,35,0,0,13,10,201,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	93463
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_DSADC',0,10,141,56,25,24,14
	.byte	'INSEL',0
	.word	93454
	.byte	12,2,35,0,14
	.byte	'OUTSEL00',0
	.word	93622
	.byte	4,2,35,12,14
	.byte	'reserved_10',0
	.word	1943
	.byte	4,2,35,16,14
	.byte	'OUTSEL10',0
	.word	93622
	.byte	4,2,35,20,0,10
	.word	93662
	.byte	11
	.byte	'_Ifx_GTM_INOUTSEL_CAN_OUTSEL_Bits',0,10,144,22,16,4,12
	.byte	'SEL0',0,4
	.word	10333
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	10333
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	10333
	.byte	4,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	10333
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	10333
	.byte	4,12,2,35,0,12
	.byte	'SEL5',0,4
	.word	10333
	.byte	4,8,2,35,0,12
	.byte	'SEL6',0,4
	.word	10333
	.byte	4,4,2,35,0,12
	.byte	'SEL7',0,4
	.word	10333
	.byte	4,0,2,35,0,0,13,10,185,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	93770
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_CAN',0,10,135,56,25,4,14
	.byte	'OUTSEL',0
	.word	93939
	.byte	4,2,35,0,0,10
	.word	93979
	.byte	11
	.byte	'_Ifx_GTM_INOUTSEL_PSI5_OUTSEL0_Bits',0,10,181,22,16,4,12
	.byte	'SEL0',0,4
	.word	10333
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	10333
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	10333
	.byte	4,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	10333
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	10333
	.byte	4,12,2,35,0,12
	.byte	'SEL5',0,4
	.word	10333
	.byte	4,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	8,0,2,35,0,0,13,10,209,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94029
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_PSI5',0,10,150,56,25,4,14
	.byte	'OUTSEL0',0
	.word	94191
	.byte	4,2,35,0,0,10
	.word	94231
	.byte	11
	.byte	'_Ifx_GTM_INOUTSEL_PSI5S_OUTSEL_Bits',0,10,193,22,16,4,12
	.byte	'SEL0',0,4
	.word	10333
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	10333
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	10333
	.byte	4,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10333
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	10333
	.byte	4,12,2,35,0,12
	.byte	'SEL5',0,4
	.word	10333
	.byte	4,8,2,35,0,12
	.byte	'SEL6',0,4
	.word	10333
	.byte	4,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10333
	.byte	4,0,2,35,0,0,13,10,217,47,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94283
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_PSI5S',0,10,156,56,25,4,14
	.byte	'OUTSEL',0
	.word	94468
	.byte	4,2,35,0,0,10
	.word	94508
	.byte	11
	.byte	'_Ifx_GTM_INOUTSEL',0,10,153,59,25,156,1,14
	.byte	'TIM',0
	.word	92807
	.byte	12,2,35,0,14
	.byte	'reserved_C',0
	.word	92812
	.byte	20,2,35,12,14
	.byte	'T',0
	.word	93214
	.byte	40,2,35,32,14
	.byte	'reserved_48',0
	.word	93219
	.byte	36,2,35,72,14
	.byte	'DSADC',0
	.word	93765
	.byte	24,2,35,108,14
	.byte	'reserved_84',0
	.word	4102
	.byte	12,3,35,132,1,14
	.byte	'CAN',0
	.word	94024
	.byte	4,3,35,144,1,14
	.byte	'PSI5',0
	.word	94278
	.byte	4,3,35,148,1,14
	.byte	'PSI5S',0
	.word	94555
	.byte	4,3,35,152,1,0,10
	.word	94560
	.byte	11
	.byte	'_Ifx_GTM_ADCTRIG0OUT0_Bits',0,10,92,16,4,12
	.byte	'SEL0',0,4
	.word	10333
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	10333
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	10333
	.byte	4,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	10333
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	10333
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10333
	.byte	12,0,2,35,0,0,13,10,216,33,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94738
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ADCTRIG1OUT0_Bits',0,10,103,16,4,12
	.byte	'SEL0',0,4
	.word	10333
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	10333
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	10333
	.byte	4,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	10333
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	10333
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10333
	.byte	12,0,2,35,0,0,13,10,224,33,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94914
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTBU0T_Bits',0,10,148,27,16,4,12
	.byte	'CV',0,4
	.word	10333
	.byte	27,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10333
	.byte	1,4,2,35,0,12
	.byte	'CM',0,4
	.word	10333
	.byte	2,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	10333
	.byte	2,0,2,35,0,0,13,10,201,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95090
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTBU1T_Bits',0,10,157,27,16,4,12
	.byte	'CV',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	4,4,2,35,0,12
	.byte	'EN',0,4
	.word	10333
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10333
	.byte	3,0,2,35,0,0,13,10,209,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95232
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTBU2T_Bits',0,10,166,27,16,4,12
	.byte	'CV',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10333
	.byte	4,4,2,35,0,12
	.byte	'EN',0,4
	.word	10333
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10333
	.byte	3,0,2,35,0,0,13,10,217,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95374
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTSS_Bits',0,10,202,27,16,4,12
	.byte	'OTGB0',0,4
	.word	10333
	.byte	4,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10333
	.byte	4,24,2,35,0,12
	.byte	'OTGB1',0,4
	.word	10333
	.byte	4,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10333
	.byte	4,16,2,35,0,12
	.byte	'OTGB2',0,4
	.word	10333
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10333
	.byte	12,0,2,35,0,0,13,10,241,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95516
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTSC0_Bits',0,10,175,27,16,4,12
	.byte	'B0LMT',0,4
	.word	10333
	.byte	3,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'B0LMI',0,4
	.word	10333
	.byte	4,24,2,35,0,12
	.byte	'B0HMT',0,4
	.word	10333
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'B0HMI',0,4
	.word	10333
	.byte	4,16,2,35,0,12
	.byte	'B1LMT',0,4
	.word	10333
	.byte	3,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'B1LMI',0,4
	.word	10333
	.byte	4,8,2,35,0,12
	.byte	'B1HMT',0,4
	.word	10333
	.byte	3,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10333
	.byte	1,4,2,35,0,12
	.byte	'B1HMI',0,4
	.word	10333
	.byte	4,0,2,35,0,0,13,10,225,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95701
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTSC1_Bits',0,10,192,27,16,4,12
	.byte	'MCS',0,4
	.word	10333
	.byte	4,28,2,35,0,12
	.byte	'MI',0,4
	.word	10333
	.byte	4,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'MOE',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10333
	.byte	22,0,2,35,0,0,13,10,233,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95995
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ODA_Bits',0,10,140,27,16,4,12
	.byte	'DDREN',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'DREN',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	30,0,2,35,0,0,13,10,193,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96151
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OCS_Bits',0,10,130,27,16,4,12
	.byte	'reserved_0',0,4
	.word	10333
	.byte	24,8,2,35,0,12
	.byte	'SUS',0,4
	.word	10333
	.byte	4,4,2,35,0,12
	.byte	'SUS_P',0,4
	.word	10333
	.byte	1,3,2,35,0,12
	.byte	'SUSSTA',0,4
	.word	10333
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	10333
	.byte	2,0,2,35,0,0,13,10,185,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96271
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_KRSTCLR_Bits',0,10,164,23,16,4,12
	.byte	'CLR',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10333
	.byte	31,0,2,35,0,0,13,10,161,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96431
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_KRST1_Bits',0,10,157,23,16,4,12
	.byte	'RST',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10333
	.byte	31,0,2,35,0,0,13,10,153,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96537
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_KRST0_Bits',0,10,149,23,16,4,12
	.byte	'RST',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'RSTSTAT',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10333
	.byte	30,0,2,35,0,0,13,10,145,48,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96641
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ACCEN1_Bits',0,10,86,16,4,12
	.byte	'reserved_0',0,4
	.word	10333
	.byte	32,0,2,35,0,0,13,10,208,33,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96764
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ACCEN0_Bits',0,10,49,16,4,12
	.byte	'EN0',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'EN1',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'EN2',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'EN3',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'EN4',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'EN5',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'EN6',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'EN7',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'EN8',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'EN9',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'EN10',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'EN11',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'EN12',0,4
	.word	10333
	.byte	1,19,2,35,0,12
	.byte	'EN13',0,4
	.word	10333
	.byte	1,18,2,35,0,12
	.byte	'EN14',0,4
	.word	10333
	.byte	1,17,2,35,0,12
	.byte	'EN15',0,4
	.word	10333
	.byte	1,16,2,35,0,12
	.byte	'EN16',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'EN17',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'EN18',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'EN19',0,4
	.word	10333
	.byte	1,12,2,35,0,12
	.byte	'EN20',0,4
	.word	10333
	.byte	1,11,2,35,0,12
	.byte	'EN21',0,4
	.word	10333
	.byte	1,10,2,35,0,12
	.byte	'EN22',0,4
	.word	10333
	.byte	1,9,2,35,0,12
	.byte	'EN23',0,4
	.word	10333
	.byte	1,8,2,35,0,12
	.byte	'EN24',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'EN25',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'EN26',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'EN27',0,4
	.word	10333
	.byte	1,4,2,35,0,12
	.byte	'EN28',0,4
	.word	10333
	.byte	1,3,2,35,0,12
	.byte	'EN29',0,4
	.word	10333
	.byte	1,2,2,35,0,12
	.byte	'EN30',0,4
	.word	10333
	.byte	1,1,2,35,0,12
	.byte	'EN31',0,4
	.word	10333
	.byte	1,0,2,35,0,0,13,10,200,33,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96853
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DXOUTCON_Bits',0,10,198,18,16,4,12
	.byte	'OUT00',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'OUT01',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'OUT02',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10333
	.byte	5,24,2,35,0,12
	.byte	'OUT10',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'OUT11',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'OUT12',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10333
	.byte	21,0,2,35,0,0,13,10,209,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	97422
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TRIGOUT_Bits',0,10,181,33,16,4,12
	.byte	'INT0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'INT1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'TRIG0',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'TRIG1',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'TRIG2',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'TRIG3',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'TRIG4',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'TRIG5',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10333
	.byte	16,0,2,35,0,0,13,10,137,55,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	97639
	.byte	4,2,35,0,0,15,12
	.word	97825
	.byte	16,2,0,15,52
	.word	516
	.byte	16,51,0,11
	.byte	'_Ifx_GTM_MCSINTSTAT_Bits',0,10,198,25,16,4,12
	.byte	'MCS000',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'MCS001',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'MCS010',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'MCS011',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'MCS100',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'MCS101',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'MCS110',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'MCS111',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'MCS200',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'MCS201',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'MCS210',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'MCS211',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10333
	.byte	20,0,2,35,0,0,13,10,233,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	97883
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCSINTCLR_Bits',0,10,180,25,16,4,12
	.byte	'MCS000',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'MCS001',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'MCS010',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'MCS011',0,4
	.word	10333
	.byte	1,28,2,35,0,12
	.byte	'MCS100',0,4
	.word	10333
	.byte	1,27,2,35,0,12
	.byte	'MCS101',0,4
	.word	10333
	.byte	1,26,2,35,0,12
	.byte	'MCS110',0,4
	.word	10333
	.byte	1,25,2,35,0,12
	.byte	'MCS111',0,4
	.word	10333
	.byte	1,24,2,35,0,12
	.byte	'MCS200',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'MCS201',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'MCS210',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'MCS211',0,4
	.word	10333
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10333
	.byte	20,0,2,35,0,0,13,10,225,49,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98194
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DXINCON_Bits',0,10,177,18,16,4,12
	.byte	'IN00',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'IN01',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'IN02',0,4
	.word	10333
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10333
	.byte	5,24,2,35,0,12
	.byte	'IN10',0,4
	.word	10333
	.byte	1,23,2,35,0,12
	.byte	'IN11',0,4
	.word	10333
	.byte	1,22,2,35,0,12
	.byte	'IN12',0,4
	.word	10333
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10333
	.byte	5,16,2,35,0,12
	.byte	'DSS00',0,4
	.word	10333
	.byte	1,15,2,35,0,12
	.byte	'DSS01',0,4
	.word	10333
	.byte	1,14,2,35,0,12
	.byte	'DSS02',0,4
	.word	10333
	.byte	1,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	10333
	.byte	5,8,2,35,0,12
	.byte	'DSS10',0,4
	.word	10333
	.byte	1,7,2,35,0,12
	.byte	'DSS11',0,4
	.word	10333
	.byte	1,6,2,35,0,12
	.byte	'DSS12',0,4
	.word	10333
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10333
	.byte	5,0,2,35,0,0,13,10,201,45,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98504
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DATAIN_Bits',0,10,211,10,16,4,12
	.byte	'DATA',0,4
	.word	10333
	.byte	32,0,2,35,0,0,13,10,176,39,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98862
	.byte	4,2,35,0,0,15,12
	.word	98906
	.byte	16,2,0,11
	.byte	'_Ifx_GTM_MSCSET_CON0_Bits',0,10,206,26,16,4,12
	.byte	'SEL0',0,4
	.word	10333
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10333
	.byte	3,24,2,35,0,12
	.byte	'SEL1',0,4
	.word	10333
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	3,16,2,35,0,12
	.byte	'SEL2',0,4
	.word	10333
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10333
	.byte	3,8,2,35,0,12
	.byte	'SEL3',0,4
	.word	10333
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10333
	.byte	3,0,2,35,0,0,13,10,153,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98955
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCSET_CON1_Bits',0,10,219,26,16,4,12
	.byte	'SEL4',0,4
	.word	10333
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10333
	.byte	3,24,2,35,0,12
	.byte	'SEL5',0,4
	.word	10333
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	3,16,2,35,0,12
	.byte	'SEL6',0,4
	.word	10333
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10333
	.byte	3,8,2,35,0,12
	.byte	'SEL7',0,4
	.word	10333
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10333
	.byte	3,0,2,35,0,0,13,10,161,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99183
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCSET_CON2_Bits',0,10,232,26,16,4,12
	.byte	'SEL8',0,4
	.word	10333
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10333
	.byte	3,24,2,35,0,12
	.byte	'SEL9',0,4
	.word	10333
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	3,16,2,35,0,12
	.byte	'SEL10',0,4
	.word	10333
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10333
	.byte	3,8,2,35,0,12
	.byte	'SEL11',0,4
	.word	10333
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10333
	.byte	3,0,2,35,0,0,13,10,169,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99411
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCSET_CON3_Bits',0,10,245,26,16,4,12
	.byte	'SEL12',0,4
	.word	10333
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10333
	.byte	3,24,2,35,0,12
	.byte	'SEL13',0,4
	.word	10333
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10333
	.byte	3,16,2,35,0,12
	.byte	'SEL14',0,4
	.word	10333
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10333
	.byte	3,8,2,35,0,12
	.byte	'SEL15',0,4
	.word	10333
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10333
	.byte	3,0,2,35,0,0,13,10,177,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99641
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCSET',0,10,199,59,25,16,14
	.byte	'CON0',0
	.word	99143
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	99371
	.byte	4,2,35,4,14
	.byte	'CON2',0
	.word	99601
	.byte	4,2,35,8,14
	.byte	'CON3',0
	.word	99833
	.byte	4,2,35,12,0,15,64
	.word	99873
	.byte	16,3,0,10
	.word	99952
	.byte	11
	.byte	'_Ifx_GTM_MSCIN_INLCON_Bits',0,10,185,26,16,4,12
	.byte	'SEL0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'SEL1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'SEL2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'SEL3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'SEL4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'SEL5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'SEL6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'SEL7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'SEL8',0,4
	.word	10333
	.byte	2,14,2,35,0,12
	.byte	'SEL9',0,4
	.word	10333
	.byte	2,12,2,35,0,12
	.byte	'SEL10',0,4
	.word	10333
	.byte	2,10,2,35,0,12
	.byte	'SEL11',0,4
	.word	10333
	.byte	2,8,2,35,0,12
	.byte	'SEL12',0,4
	.word	10333
	.byte	2,6,2,35,0,12
	.byte	'SEL13',0,4
	.word	10333
	.byte	2,4,2,35,0,12
	.byte	'SEL14',0,4
	.word	10333
	.byte	2,2,2,35,0,12
	.byte	'SEL15',0,4
	.word	10333
	.byte	2,0,2,35,0,0,13,10,145,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99966
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCIN_INHCON_Bits',0,10,164,26,16,4,12
	.byte	'SEL0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'SEL1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'SEL2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'SEL3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'SEL4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'SEL5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'SEL6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'SEL7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'SEL8',0,4
	.word	10333
	.byte	2,14,2,35,0,12
	.byte	'SEL9',0,4
	.word	10333
	.byte	2,12,2,35,0,12
	.byte	'SEL10',0,4
	.word	10333
	.byte	2,10,2,35,0,12
	.byte	'SEL11',0,4
	.word	10333
	.byte	2,8,2,35,0,12
	.byte	'SEL12',0,4
	.word	10333
	.byte	2,6,2,35,0,12
	.byte	'SEL13',0,4
	.word	10333
	.byte	2,4,2,35,0,12
	.byte	'SEL14',0,4
	.word	10333
	.byte	2,2,2,35,0,12
	.byte	'SEL15',0,4
	.word	10333
	.byte	2,0,2,35,0,0,13,10,137,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	100302
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCIN',0,10,192,59,25,8,14
	.byte	'INLCON',0
	.word	100262
	.byte	4,2,35,0,14
	.byte	'INHCON',0
	.word	100598
	.byte	4,2,35,4,0,15,16
	.word	100638
	.byte	16,1,0,10
	.word	100692
	.byte	11
	.byte	'_Ifx_GTM_MSC0INLEXTCON_Bits',0,10,143,26,16,4,12
	.byte	'SEL0',0,4
	.word	10333
	.byte	2,30,2,35,0,12
	.byte	'SEL1',0,4
	.word	10333
	.byte	2,28,2,35,0,12
	.byte	'SEL2',0,4
	.word	10333
	.byte	2,26,2,35,0,12
	.byte	'SEL3',0,4
	.word	10333
	.byte	2,24,2,35,0,12
	.byte	'SEL4',0,4
	.word	10333
	.byte	2,22,2,35,0,12
	.byte	'SEL5',0,4
	.word	10333
	.byte	2,20,2,35,0,12
	.byte	'SEL6',0,4
	.word	10333
	.byte	2,18,2,35,0,12
	.byte	'SEL7',0,4
	.word	10333
	.byte	2,16,2,35,0,12
	.byte	'SEL8',0,4
	.word	10333
	.byte	2,14,2,35,0,12
	.byte	'SEL9',0,4
	.word	10333
	.byte	2,12,2,35,0,12
	.byte	'SEL10',0,4
	.word	10333
	.byte	2,10,2,35,0,12
	.byte	'SEL11',0,4
	.word	10333
	.byte	2,8,2,35,0,12
	.byte	'SEL12',0,4
	.word	10333
	.byte	2,6,2,35,0,12
	.byte	'SEL13',0,4
	.word	10333
	.byte	2,4,2,35,0,12
	.byte	'SEL14',0,4
	.word	10333
	.byte	2,2,2,35,0,12
	.byte	'SEL15',0,4
	.word	10333
	.byte	2,0,2,35,0,0,13,10,129,50,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	100706
	.byte	4,2,35,0,0,15,140,1
	.word	516
	.byte	16,139,1,0,11
	.byte	'_Ifx_GTM',0,10,190,60,25,128,128,40,14
	.byte	'REV',0
	.word	28807
	.byte	4,2,35,0,14
	.byte	'RST',0
	.word	28909
	.byte	4,2,35,4,14
	.byte	'CTRL',0
	.word	29075
	.byte	4,2,35,8,14
	.byte	'AEI_ADDR_XPT',0
	.word	29209
	.byte	4,2,35,12,14
	.byte	'IRQ_NOTIFY',0
	.word	29394
	.byte	4,2,35,16,14
	.byte	'IRQ_EN',0
	.word	29603
	.byte	4,2,35,20,14
	.byte	'IRQ_FORCINT',0
	.word	29805
	.byte	4,2,35,24,14
	.byte	'IRQ_MODE',0
	.word	29917
	.byte	4,2,35,28,14
	.byte	'EIRQ_EN',0
	.word	30131
	.byte	4,2,35,32,14
	.byte	'reserved_24',0
	.word	4102
	.byte	12,2,35,36,14
	.byte	'BRIDGE',0
	.word	30877
	.byte	12,2,35,48,14
	.byte	'reserved_3C',0
	.word	1943
	.byte	4,2,35,60,14
	.byte	'TIM_AUX_IN_SRC',0
	.word	31132
	.byte	12,2,35,64,14
	.byte	'reserved_4C',0
	.word	31141
	.byte	180,1,2,35,76,14
	.byte	'TBU',0
	.word	32199
	.byte	28,3,35,128,2,14
	.byte	'reserved_11C',0
	.word	32204
	.byte	100,3,35,156,2,14
	.byte	'MON',0
	.word	33314
	.byte	8,3,35,128,3,14
	.byte	'reserved_188',0
	.word	33319
	.byte	120,3,35,136,3,14
	.byte	'CMP',0
	.word	36637
	.byte	24,3,35,128,4,14
	.byte	'reserved_218',0
	.word	36642
	.byte	104,3,35,152,4,14
	.byte	'ARU',0
	.word	38631
	.byte	52,3,35,128,5,14
	.byte	'reserved_2B4',0
	.word	7419
	.byte	76,3,35,180,5,14
	.byte	'CMU',0
	.word	40347
	.byte	72,3,35,128,6,14
	.byte	'reserved_348',0
	.word	40352
	.byte	184,1,3,35,200,6,14
	.byte	'BRC',0
	.word	51298
	.byte	120,3,35,128,8,14
	.byte	'reserved_478',0
	.word	51303
	.byte	136,3,3,35,248,8,14
	.byte	'ICM',0
	.word	58073
	.byte	68,3,35,128,12,14
	.byte	'reserved_644',0
	.word	58078
	.byte	188,3,3,35,196,12,14
	.byte	'SPE',0
	.word	60522
	.byte	128,2,3,35,128,16,14
	.byte	'reserved_900',0
	.word	60527
	.byte	128,12,3,35,128,18,14
	.byte	'MAP_CTRL',0
	.word	60937
	.byte	4,3,35,128,30,14
	.byte	'reserved_F04',0
	.word	60977
	.byte	60,3,35,132,30,14
	.byte	'MCFG_CTRL',0
	.word	61087
	.byte	4,3,35,192,30,14
	.byte	'reserved_F44',0
	.word	61127
	.byte	188,1,3,35,196,30,14
	.byte	'TIM',0
	.word	65183
	.byte	128,48,3,35,128,32,14
	.byte	'reserved_2800',0
	.word	65188
	.byte	128,176,1,3,35,128,80,14
	.byte	'TOM',0
	.word	65211
	.byte	128,32,4,35,128,128,2,14
	.byte	'reserved_9000',0
	.word	65216
	.byte	128,128,1,4,35,128,160,2,14
	.byte	'ATOM',0
	.word	65238
	.byte	128,64,4,35,128,160,3,14
	.byte	'reserved_F000',0
	.word	65243
	.byte	128,160,2,4,35,128,224,3,14
	.byte	'F2A0',0
	.word	65967
	.byte	68,4,35,128,128,6,14
	.byte	'reserved_18044',0
	.word	60977
	.byte	60,4,35,196,128,6,14
	.byte	'AFD0',0
	.word	66195
	.byte	128,1,4,35,128,129,6,14
	.byte	'reserved_18100',0
	.word	66200
	.byte	128,6,4,35,128,130,6,14
	.byte	'FIFO0',0
	.word	68679
	.byte	128,4,4,35,128,136,6,14
	.byte	'reserved_18600',0
	.word	68684
	.byte	128,244,3,4,35,128,140,6,14
	.byte	'DPLL',0
	.word	87597
	.byte	152,30,4,35,128,128,10,14
	.byte	'reserved_28F18',0
	.word	87602
	.byte	232,225,1,4,35,152,158,10,14
	.byte	'MCS',0
	.word	92355
	.byte	128,96,4,35,128,128,12,14
	.byte	'reserved_33000',0
	.word	92360
	.byte	128,154,27,4,35,128,224,12,14
	.byte	'CLC',0
	.word	92490
	.byte	4,4,35,128,250,39,14
	.byte	'reserved_9FD04',0
	.word	4102
	.byte	12,4,35,132,250,39,14
	.byte	'INOUTSEL',0
	.word	94733
	.byte	156,1,4,35,144,250,39,14
	.byte	'reserved_9FDAC',0
	.word	1943
	.byte	4,4,35,172,251,39,14
	.byte	'ADCTRIG0OUT0',0
	.word	94874
	.byte	4,4,35,176,251,39,14
	.byte	'reserved_9FDB4',0
	.word	1943
	.byte	4,4,35,180,251,39,14
	.byte	'ADCTRIG1OUT0',0
	.word	95050
	.byte	4,4,35,184,251,39,14
	.byte	'reserved_9FDBC',0
	.word	3762
	.byte	8,4,35,188,251,39,14
	.byte	'OTBU0T',0
	.word	95192
	.byte	4,4,35,196,251,39,14
	.byte	'OTBU1T',0
	.word	95334
	.byte	4,4,35,200,251,39,14
	.byte	'OTBU2T',0
	.word	95476
	.byte	4,4,35,204,251,39,14
	.byte	'OTSS',0
	.word	95661
	.byte	4,4,35,208,251,39,14
	.byte	'OTSC0',0
	.word	95955
	.byte	4,4,35,212,251,39,14
	.byte	'OTSC1',0
	.word	96111
	.byte	4,4,35,216,251,39,14
	.byte	'ODA',0
	.word	96231
	.byte	4,4,35,220,251,39,14
	.byte	'reserved_9FDE0',0
	.word	3762
	.byte	8,4,35,224,251,39,14
	.byte	'OCS',0
	.word	96391
	.byte	4,4,35,232,251,39,14
	.byte	'KRSTCLR',0
	.word	96497
	.byte	4,4,35,236,251,39,14
	.byte	'KRST1',0
	.word	96601
	.byte	4,4,35,240,251,39,14
	.byte	'KRST0',0
	.word	96724
	.byte	4,4,35,244,251,39,14
	.byte	'ACCEN1',0
	.word	96813
	.byte	4,4,35,248,251,39,14
	.byte	'ACCEN0',0
	.word	97382
	.byte	4,4,35,252,251,39,14
	.byte	'DXOUTCON',0
	.word	97599
	.byte	4,4,35,128,252,39,14
	.byte	'TRIGOUT0',0
	.word	97865
	.byte	12,4,35,132,252,39,14
	.byte	'reserved_9FE10',0
	.word	97874
	.byte	52,4,35,144,252,39,14
	.byte	'TRIGOUT1',0
	.word	97865
	.byte	12,4,35,196,252,39,14
	.byte	'reserved_9FE50',0
	.word	16225
	.byte	32,4,35,208,252,39,14
	.byte	'MCSINTSTAT',0
	.word	98154
	.byte	4,4,35,240,252,39,14
	.byte	'MCSINTCLR',0
	.word	98464
	.byte	4,4,35,244,252,39,14
	.byte	'reserved_9FE78',0
	.word	3133
	.byte	24,4,35,248,252,39,14
	.byte	'DXINCON',0
	.word	98822
	.byte	4,4,35,144,253,39,14
	.byte	'DATAIN0',0
	.word	98946
	.byte	12,4,35,148,253,39,14
	.byte	'reserved_9FEA0',0
	.word	97874
	.byte	52,4,35,160,253,39,14
	.byte	'DATAIN1',0
	.word	98946
	.byte	12,4,35,212,253,39,14
	.byte	'reserved_9FEE0',0
	.word	16225
	.byte	32,4,35,224,253,39,14
	.byte	'MSCSET_1S',0
	.word	99961
	.byte	64,4,35,128,254,39,14
	.byte	'reserved_9FF40',0
	.word	16225
	.byte	32,4,35,192,254,39,14
	.byte	'MSCIN',0
	.word	100701
	.byte	16,4,35,224,254,39,14
	.byte	'MSC0INLEXTCON',0
	.word	101003
	.byte	4,4,35,240,254,39,14
	.byte	'reserved_9FF74',0
	.word	101043
	.byte	140,1,4,35,244,254,39,0,10
	.word	101054
	.byte	3
	.word	102909
	.byte	15,8
	.word	26668
	.byte	16,1,0,15,4
	.word	915
	.byte	16,1,0,15,8
	.word	8963
	.byte	16,1,0,30,17,163,1,9,56,14
	.byte	'base',0
	.word	28571
	.byte	12,2,35,0,14
	.byte	'gtm',0
	.word	102914
	.byte	4,2,35,12,14
	.byte	'tom',0
	.word	26069
	.byte	4,2,35,16,14
	.byte	'tgc',0
	.word	102919
	.byte	8,2,35,20,14
	.byte	'tomIndex',0
	.word	27878
	.byte	1,2,35,28,14
	.byte	'timerChannel',0
	.word	26074
	.byte	1,2,35,29,14
	.byte	'triggerChannel',0
	.word	26074
	.byte	1,2,35,30,14
	.byte	'channelsMask',0
	.word	102928
	.byte	4,2,35,32,14
	.byte	'offset',0
	.word	8963
	.byte	4,2,35,36,14
	.byte	'tgcGlobalControlDisableUpdate',0
	.word	102937
	.byte	8,2,35,40,14
	.byte	'tgcGlobalControlApplyUpdate',0
	.word	102937
	.byte	8,2,35,48,0
.L356:
	.byte	3
	.word	102946
	.byte	32
	.byte	'IfxGtm_Tom_Timer_getOffset',0,17,207,1,27
	.word	8963
	.byte	1,1,1,1,5
	.byte	'driver',0,17,207,1,72
	.word	103184
	.byte	0,31
	.byte	'IfxGtm_Tom_Timer_addToChannelMask',0,17,137,2,17,1,1,1,1,5
	.byte	'driver',0,17,137,2,69
	.word	103184
	.byte	5
	.byte	'channel',0,17,137,2,91
	.word	26074
	.byte	0,32
	.byte	'IfxGtm_Tom_Timer_stdIfTimerInit',0,17,232,2,20
	.word	516
	.byte	1,1,1,1,5
	.byte	'stdif',0,17,232,2,68
	.word	10037
	.byte	5
	.byte	'driver',0,17,232,2,93
	.word	103184
	.byte	0
.L390:
	.byte	17,13,178,1,9,1,18
	.byte	'Ifx_Pwm_Mode_centerAligned',0,0,18
	.byte	'Ifx_Pwm_Mode_centerAlignedInverted',0,1,18
	.byte	'Ifx_Pwm_Mode_leftAligned',0,2,18
	.byte	'Ifx_Pwm_Mode_rightAligned',0,3,18
	.byte	'Ifx_Pwm_Mode_off',0,4,18
	.byte	'Ifx_Pwm_Mode_init',0,5,18
	.byte	'Ifx_Pwm_Mode_count',0,6,0,7
	.byte	'char',0,1,6,30,18,171,1,9,20,14
	.byte	'deadtime',0
	.word	8963
	.byte	4,2,35,0,14
	.byte	'minPulse',0
	.word	8963
	.byte	4,2,35,4,14
	.byte	'maxPulse',0
	.word	8963
	.byte	4,2,35,8,14
	.byte	'mode',0
	.word	103400
	.byte	1,2,35,12,14
	.byte	'setMode',0
	.word	103588
	.byte	1,2,35,13,14
	.byte	'ccxActiveState',0
	.word	17067
	.byte	1,2,35,14,14
	.byte	'coutxActiveState',0
	.word	17067
	.byte	1,2,35,15,14
	.byte	'inverted',0
	.word	516
	.byte	1,2,35,16,14
	.byte	'channelCount',0
	.word	516
	.byte	1,2,35,17,0,3
	.word	.L626-.L169
	.byte	3
	.word	8963
	.byte	22,1,1,21
	.word	103778
	.byte	21
	.word	103783
	.byte	0,3
	.word	103788
	.byte	19
	.byte	'IfxGtm_Tom_PwmHl_Update',0,18,157,1,35
	.word	103802
	.byte	22,1,1,21
	.word	103778
	.byte	21
	.word	103783
	.byte	21
	.word	103783
	.byte	0,3
	.word	103840
	.byte	19
	.byte	'IfxGtm_Tom_PwmHl_UpdateShift',0,18,159,1,35
	.word	103859
	.byte	3
	.word	249
	.byte	22,1,1,21
	.word	103778
	.byte	21
	.word	103902
	.byte	21
	.word	103902
	.byte	0,3
	.word	103907
	.byte	19
	.byte	'IfxGtm_Tom_PwmHl_UpdatePulse',0,18,161,1,35
	.word	103926
	.byte	15,3
	.word	26074
	.byte	16,2,0,3
	.word	26074
.L626:
	.byte	11
	.byte	'IfxGtm_Tom_PwmHl_s',0,18,214,1,8,60,14
	.byte	'base',0
	.word	103596
	.byte	20,2,35,0,14
	.byte	'timer',0
	.word	103184
	.byte	4,2,35,20,14
	.byte	'update',0
	.word	103807
	.byte	4,2,35,24,14
	.byte	'updateAndShift',0
	.word	103864
	.byte	4,2,35,28,14
	.byte	'updatePulse',0
	.word	103931
	.byte	4,2,35,32,14
	.byte	'tom',0
	.word	26069
	.byte	4,2,35,36,14
	.byte	'tgc',0
	.word	26668
	.byte	4,2,35,40,14
	.byte	'ccx',0
	.word	103969
	.byte	3,2,35,44,14
	.byte	'coutx',0
	.word	103969
	.byte	3,2,35,47,14
	.byte	'ccxTemp',0
	.word	103978
	.byte	4,2,35,52,14
	.byte	'coutxTemp',0
	.word	103978
	.byte	4,2,35,56,0
.L346:
	.byte	3
	.word	103983
	.byte	3
	.word	103788
	.byte	3
	.word	103840
	.byte	3
	.word	103907
	.byte	19
	.byte	'IfxGtm_Tom_ToutMapP',0,16,138,1,29
	.word	28374
	.byte	24
	.word	104209
	.byte	3
	.word	104238
	.byte	30,18,190,1,9,36,14
	.byte	'base',0
	.word	17932
	.byte	16,2,35,0,14
	.byte	'timer',0
	.word	103184
	.byte	4,2,35,16,14
	.byte	'tom',0
	.word	27878
	.byte	1,2,35,20,14
	.byte	'ccx',0
	.word	104243
	.byte	4,2,35,24,14
	.byte	'coutx',0
	.word	104243
	.byte	4,2,35,28,14
	.byte	'initPins',0
	.word	516
	.byte	1,2,35,32,0,24
	.word	104248
.L348:
	.byte	3
	.word	104343
	.byte	24
	.word	28272
	.byte	3
	.word	104353
.L379:
	.byte	15,12
	.word	8963
	.byte	16,2,0
.L382:
	.byte	3
	.word	104248
.L405:
	.byte	3
	.word	103596
.L413:
	.byte	3
	.word	8963
.L421:
	.byte	3
	.word	249
.L426:
	.byte	3
	.word	516
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetDeadtime',0,14,89,19
	.word	9124
	.byte	19
	.byte	'IfxStdIf_PwmHl_GetDeadtime',0,14,97,19
	.word	8922
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetMinPulse',0,14,105,19
	.word	9124
	.byte	19
	.byte	'IfxStdIf_PwmHl_GetMinPulse',0,14,113,19
	.word	8922
	.byte	20
	.word	103400
	.byte	1,1,21
	.word	423
	.byte	0,3
	.word	104537
	.byte	19
	.byte	'IfxStdIf_PwmHl_GetMode',0,14,121,24
	.word	104550
	.byte	20
	.word	516
	.byte	1,1,21
	.word	423
	.byte	21
	.word	103400
	.byte	0,3
	.word	104586
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetMode',0,14,129,1,19
	.word	104604
	.byte	22,1,1,21
	.word	423
	.byte	21
	.word	103783
	.byte	0,3
	.word	104641
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetOnTime',0,14,136,1,16
	.word	104655
	.byte	22,1,1,21
	.word	423
	.byte	21
	.word	103783
	.byte	21
	.word	103783
	.byte	0,3
	.word	104694
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetOnTimeAndShift',0,14,144,1,16
	.word	104713
	.byte	22,1,1,21
	.word	423
	.byte	21
	.word	103902
	.byte	21
	.word	103902
	.byte	0,3
	.word	104760
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetPulse',0,14,152,1,16
	.word	104779
	.byte	3
	.word	516
	.byte	22,1,1,21
	.word	423
	.byte	21
	.word	104817
	.byte	21
	.word	104817
	.byte	0,3
	.word	104822
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetupChannels',0,14,171,1,16
	.word	104841
	.byte	11
	.byte	'IfxStdIf_PwmHl_',0,14,175,1,8,112,14
	.byte	'driver',0
	.word	8876
	.byte	4,2,35,0,14
	.byte	'setDeadtime',0
	.word	104397
	.byte	4,2,35,4,14
	.byte	'getDeadtime',0
	.word	104432
	.byte	4,2,35,8,14
	.byte	'setMinPulse',0
	.word	104467
	.byte	4,2,35,12,14
	.byte	'getMinPulse',0
	.word	104502
	.byte	4,2,35,16,14
	.byte	'getMode',0
	.word	104555
	.byte	4,2,35,20,14
	.byte	'setMode',0
	.word	104609
	.byte	4,2,35,24,14
	.byte	'setOnTime',0
	.word	104660
	.byte	4,2,35,28,14
	.byte	'setOnTimeAndShift',0
	.word	104718
	.byte	4,2,35,32,14
	.byte	'setPulse',0
	.word	104784
	.byte	4,2,35,36,14
	.byte	'setupChannels',0
	.word	104846
	.byte	4,2,35,40,14
	.byte	'timer',0
	.word	9658
	.byte	68,2,35,44,0
.L430:
	.byte	3
	.word	104884
	.byte	3
	.word	9106
	.byte	3
	.word	8909
	.byte	3
	.word	9106
	.byte	3
	.word	8909
	.byte	3
	.word	104537
	.byte	3
	.word	104586
	.byte	3
	.word	104641
	.byte	3
	.word	104694
	.byte	3
	.word	104760
	.byte	3
	.word	104822
	.byte	32
	.byte	'memset',0,19,56,17
	.word	423
	.byte	1,1,1,1,33,19,56,33
	.word	423
	.byte	33,19,56,36
	.word	509
	.byte	33,19,56,41
	.word	319
	.byte	0,28
	.word	17118
	.byte	29
	.word	17165
	.byte	6,0,34
	.byte	'__INDIRECT__',0,12,1,1,1,1,1,7
	.byte	'short int',0,2,5,19
	.byte	'__wchar_t',0,12,1,1
	.word	105274
	.byte	19
	.byte	'__size_t',0,12,1,1
	.word	319
	.byte	19
	.byte	'__ptrdiff_t',0,12,1,1
	.word	509
	.byte	35,1,3
	.word	105342
	.byte	19
	.byte	'__codeptr',0,12,1,1
	.word	105344
	.byte	19
	.byte	'size_t',0,20,24,25
	.word	319
	.byte	19
	.byte	'boolean',0,21,101,29
	.word	516
	.byte	19
	.byte	'uint8',0,21,105,29
	.word	516
	.byte	19
	.byte	'uint16',0,21,109,29
	.word	915
	.byte	19
	.byte	'uint32',0,21,113,29
	.word	8963
	.byte	19
	.byte	'uint64',0,21,118,29
	.word	397
	.byte	19
	.byte	'sint8',0,21,122,29
	.word	103588
	.byte	19
	.byte	'sint16',0,21,126,29
	.word	105274
	.byte	7
	.byte	'long int',0,4,5,19
	.byte	'sint32',0,21,131,1,29
	.word	105486
	.byte	7
	.byte	'long long int',0,8,5,19
	.byte	'sint64',0,21,139,1,29
	.word	105514
	.byte	19
	.byte	'float32',0,21,168,1,29
	.word	249
	.byte	19
	.byte	'pvoid',0,13,57,28
	.word	423
	.byte	19
	.byte	'Ifx_TickTime',0,13,79,28
	.word	105514
	.byte	19
	.byte	'Ifx_Priority',0,13,103,16
	.word	915
	.byte	19
	.byte	'Ifx_TimerValue',0,13,104,16
	.word	8963
	.byte	19
	.byte	'Ifx_ActiveState',0,13,120,3
	.word	17067
	.byte	19
	.byte	'Ifx_Pwm_Mode',0,13,187,1,3
	.word	103400
	.byte	17,22,69,9,1,18
	.byte	'IfxSrc_Tos_cpu0',0,0,18
	.byte	'IfxSrc_Tos_cpu1',0,1,18
	.byte	'IfxSrc_Tos_dma',0,3,0,19
	.byte	'IfxSrc_Tos',0,22,74,3
	.word	105689
	.byte	19
	.byte	'Ifx_SRC_SRCR_Bits',0,4,62,3
	.word	533
	.byte	19
	.byte	'Ifx_SRC_SRCR',0,4,75,3
	.word	823
	.byte	11
	.byte	'_Ifx_SRC_AGBT',0,4,86,25,4,14
	.byte	'SR',0
	.word	823
	.byte	4,2,35,0,0,10
	.word	105814
	.byte	19
	.byte	'Ifx_SRC_AGBT',0,4,89,3
	.word	105846
	.byte	11
	.byte	'_Ifx_SRC_ASCLIN',0,4,92,25,12,14
	.byte	'TX',0
	.word	823
	.byte	4,2,35,0,14
	.byte	'RX',0
	.word	823
	.byte	4,2,35,4,14
	.byte	'ERR',0
	.word	823
	.byte	4,2,35,8,0,10
	.word	105872
	.byte	19
	.byte	'Ifx_SRC_ASCLIN',0,4,97,3
	.word	105931
	.byte	11
	.byte	'_Ifx_SRC_BCUSPB',0,4,100,25,4,14
	.byte	'SBSRC',0
	.word	823
	.byte	4,2,35,0,0,10
	.word	105959
	.byte	19
	.byte	'Ifx_SRC_BCUSPB',0,4,103,3
	.word	105996
	.byte	15,64
	.word	823
	.byte	16,15,0,11
	.byte	'_Ifx_SRC_CAN',0,4,106,25,64,14
	.byte	'INT',0
	.word	106024
	.byte	64,2,35,0,0,10
	.word	106033
	.byte	19
	.byte	'Ifx_SRC_CAN',0,4,109,3
	.word	106065
	.byte	11
	.byte	'_Ifx_SRC_CCU6',0,4,112,25,16,14
	.byte	'SR0',0
	.word	823
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	823
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	823
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	823
	.byte	4,2,35,12,0,10
	.word	106090
	.byte	19
	.byte	'Ifx_SRC_CCU6',0,4,118,3
	.word	106162
	.byte	15,8
	.word	823
	.byte	16,1,0,11
	.byte	'_Ifx_SRC_CERBERUS',0,4,121,25,8,14
	.byte	'SR',0
	.word	106188
	.byte	8,2,35,0,0,10
	.word	106197
	.byte	19
	.byte	'Ifx_SRC_CERBERUS',0,4,124,3
	.word	106233
	.byte	11
	.byte	'_Ifx_SRC_CIF',0,4,127,25,16,14
	.byte	'MI',0
	.word	823
	.byte	4,2,35,0,14
	.byte	'MIEP',0
	.word	823
	.byte	4,2,35,4,14
	.byte	'ISP',0
	.word	823
	.byte	4,2,35,8,14
	.byte	'MJPEG',0
	.word	823
	.byte	4,2,35,12,0,10
	.word	106263
	.byte	19
	.byte	'Ifx_SRC_CIF',0,4,133,1,3
	.word	106336
	.byte	11
	.byte	'_Ifx_SRC_CPU',0,4,136,1,25,4,14
	.byte	'SBSRC',0
	.word	823
	.byte	4,2,35,0,0,10
	.word	106362
	.byte	19
	.byte	'Ifx_SRC_CPU',0,4,139,1,3
	.word	106397
	.byte	15,192,1
	.word	823
	.byte	16,47,0,11
	.byte	'_Ifx_SRC_DMA',0,4,142,1,25,208,1,14
	.byte	'ERR',0
	.word	823
	.byte	4,2,35,0,14
	.byte	'reserved_4',0
	.word	4102
	.byte	12,2,35,4,14
	.byte	'CH',0
	.word	106423
	.byte	192,1,2,35,16,0,10
	.word	106433
	.byte	19
	.byte	'Ifx_SRC_DMA',0,4,147,1,3
	.word	106500
	.byte	11
	.byte	'_Ifx_SRC_DSADC',0,4,150,1,25,8,14
	.byte	'SRM',0
	.word	823
	.byte	4,2,35,0,14
	.byte	'SRA',0
	.word	823
	.byte	4,2,35,4,0,10
	.word	106526
	.byte	19
	.byte	'Ifx_SRC_DSADC',0,4,154,1,3
	.word	106574
	.byte	11
	.byte	'_Ifx_SRC_EMEM',0,4,157,1,25,4,14
	.byte	'SR',0
	.word	823
	.byte	4,2,35,0,0,10
	.word	106602
	.byte	19
	.byte	'Ifx_SRC_EMEM',0,4,160,1,3
	.word	106635
	.byte	11
	.byte	'_Ifx_SRC_ERAY',0,4,163,1,25,80,14
	.byte	'INT',0
	.word	106188
	.byte	8,2,35,0,14
	.byte	'TINT',0
	.word	106188
	.byte	8,2,35,8,14
	.byte	'NDAT',0
	.word	106188
	.byte	8,2,35,16,14
	.byte	'MBSC',0
	.word	106188
	.byte	8,2,35,24,14
	.byte	'OBUSY',0
	.word	823
	.byte	4,2,35,32,14
	.byte	'IBUSY',0
	.word	823
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	91773
	.byte	40,2,35,40,0,10
	.word	106662
	.byte	19
	.byte	'Ifx_SRC_ERAY',0,4,172,1,3
	.word	106789
	.byte	11
	.byte	'_Ifx_SRC_ETH',0,4,175,1,25,4,14
	.byte	'SR',0
	.word	823
	.byte	4,2,35,0,0,10
	.word	106816
	.byte	19
	.byte	'Ifx_SRC_ETH',0,4,178,1,3
	.word	106848
	.byte	11
	.byte	'_Ifx_SRC_FCE',0,4,181,1,25,4,14
	.byte	'SR',0
	.word	823
	.byte	4,2,35,0,0,10
	.word	106874
	.byte	19
	.byte	'Ifx_SRC_FCE',0,4,184,1,3
	.word	106906
	.byte	11
	.byte	'_Ifx_SRC_FFT',0,4,187,1,25,12,14
	.byte	'DONE',0
	.word	823
	.byte	4,2,35,0,14
	.byte	'ERR',0
	.word	823
	.byte	4,2,35,4,14
	.byte	'RFS',0
	.word	823
	.byte	4,2,35,8,0,10
	.word	106932
	.byte	19
	.byte	'Ifx_SRC_FFT',0,4,192,1,3
	.word	106992
	.byte	11
	.byte	'_Ifx_SRC_GPSR',0,4,195,1,25,32,14
	.byte	'SR0',0
	.word	823
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	823
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	823
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	823
	.byte	4,2,35,12,14
	.byte	'reserved_10',0
	.word	13517
	.byte	16,2,35,16,0,10
	.word	107018
	.byte	19
	.byte	'Ifx_SRC_GPSR',0,4,202,1,3
	.word	107112
	.byte	11
	.byte	'_Ifx_SRC_GPT12',0,4,205,1,25,48,14
	.byte	'CIRQ',0
	.word	823
	.byte	4,2,35,0,14
	.byte	'T2',0
	.word	823
	.byte	4,2,35,4,14
	.byte	'T3',0
	.word	823
	.byte	4,2,35,8,14
	.byte	'T4',0
	.word	823
	.byte	4,2,35,12,14
	.byte	'T5',0
	.word	823
	.byte	4,2,35,16,14
	.byte	'T6',0
	.word	823
	.byte	4,2,35,20,14
	.byte	'reserved_18',0
	.word	3133
	.byte	24,2,35,24,0,10
	.word	107139
	.byte	19
	.byte	'Ifx_SRC_GPT12',0,4,214,1,3
	.word	107256
	.byte	15,12
	.word	823
	.byte	16,2,0,15,32
	.word	823
	.byte	16,7,0,15,32
	.word	107293
	.byte	16,0,0,15,108
	.word	823
	.byte	16,26,0,15,96
	.word	107293
	.byte	16,2,0,15,160,3
	.word	516
	.byte	16,159,3,0,15,64
	.word	107293
	.byte	16,1,0,15,192,3
	.word	516
	.byte	16,191,3,0,15,16
	.word	823
	.byte	16,3,0,15,64
	.word	107360
	.byte	16,3,0,15,192,2
	.word	516
	.byte	16,191,2,0,11
	.byte	'_Ifx_SRC_GTM',0,4,217,1,25,204,18,14
	.byte	'AEIIRQ',0
	.word	823
	.byte	4,2,35,0,14
	.byte	'ARUIRQ',0
	.word	107284
	.byte	12,2,35,4,14
	.byte	'reserved_10',0
	.word	1943
	.byte	4,2,35,16,14
	.byte	'BRCIRQ',0
	.word	823
	.byte	4,2,35,20,14
	.byte	'CMPIRQ',0
	.word	823
	.byte	4,2,35,24,14
	.byte	'SPEIRQ',0
	.word	106188
	.byte	8,2,35,28,14
	.byte	'reserved_24',0
	.word	3762
	.byte	8,2,35,36,14
	.byte	'PSM',0
	.word	107302
	.byte	32,2,35,44,14
	.byte	'reserved_4C',0
	.word	82826
	.byte	88,2,35,76,14
	.byte	'DPLL',0
	.word	107311
	.byte	108,3,35,164,1,14
	.byte	'reserved_110',0
	.word	82967
	.byte	96,3,35,144,2,14
	.byte	'ERR',0
	.word	823
	.byte	4,3,35,240,2,14
	.byte	'reserved_174',0
	.word	4102
	.byte	12,3,35,244,2,14
	.byte	'TIM',0
	.word	107320
	.byte	96,3,35,128,3,14
	.byte	'reserved_1E0',0
	.word	107329
	.byte	160,3,3,35,224,3,14
	.byte	'MCS',0
	.word	107320
	.byte	96,3,35,128,7,14
	.byte	'reserved_3E0',0
	.word	107329
	.byte	160,3,3,35,224,7,14
	.byte	'TOM',0
	.word	107340
	.byte	64,3,35,128,11,14
	.byte	'reserved_5C0',0
	.word	107349
	.byte	192,3,3,35,192,11,14
	.byte	'ATOM',0
	.word	107369
	.byte	64,3,35,128,15,14
	.byte	'reserved_7C0',0
	.word	107378
	.byte	192,2,3,35,192,15,14
	.byte	'MCSW0',0
	.word	107284
	.byte	12,3,35,128,18,14
	.byte	'reserved_90C',0
	.word	97874
	.byte	52,3,35,140,18,14
	.byte	'MCSW1',0
	.word	107284
	.byte	12,3,35,192,18,0,10
	.word	107389
	.byte	19
	.byte	'Ifx_SRC_GTM',0,4,243,1,3
	.word	107849
	.byte	11
	.byte	'_Ifx_SRC_HSCT',0,4,246,1,25,4,14
	.byte	'SR',0
	.word	823
	.byte	4,2,35,0,0,10
	.word	107875
	.byte	19
	.byte	'Ifx_SRC_HSCT',0,4,249,1,3
	.word	107908
	.byte	11
	.byte	'_Ifx_SRC_HSSL',0,4,252,1,25,16,14
	.byte	'COK',0
	.word	823
	.byte	4,2,35,0,14
	.byte	'RDI',0
	.word	823
	.byte	4,2,35,4,14
	.byte	'ERR',0
	.word	823
	.byte	4,2,35,8,14
	.byte	'TRG',0
	.word	823
	.byte	4,2,35,12,0,10
	.word	107935
	.byte	19
	.byte	'Ifx_SRC_HSSL',0,4,130,2,3
	.word	108008
	.byte	11
	.byte	'_Ifx_SRC_I2C',0,4,133,2,25,80,14
	.byte	'BREQ',0
	.word	823
	.byte	4,2,35,0,14
	.byte	'LBREQ',0
	.word	823
	.byte	4,2,35,4,14
	.byte	'SREQ',0
	.word	823
	.byte	4,2,35,8,14
	.byte	'LSREQ',0
	.word	823
	.byte	4,2,35,12,14
	.byte	'ERR',0
	.word	823
	.byte	4,2,35,16,14
	.byte	'P',0
	.word	823
	.byte	4,2,35,20,14
	.byte	'reserved_18',0
	.word	60276
	.byte	56,2,35,24,0,10
	.word	108035
	.byte	19
	.byte	'Ifx_SRC_I2C',0,4,142,2,3
	.word	108158
	.byte	11
	.byte	'_Ifx_SRC_LMU',0,4,145,2,25,4,14
	.byte	'SR',0
	.word	823
	.byte	4,2,35,0,0,10
	.word	108184
	.byte	19
	.byte	'Ifx_SRC_LMU',0,4,148,2,3
	.word	108216
	.byte	11
	.byte	'_Ifx_SRC_MSC',0,4,151,2,25,20,14
	.byte	'SR0',0
	.word	823
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	823
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	823
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	823
	.byte	4,2,35,12,14
	.byte	'SR4',0
	.word	823
	.byte	4,2,35,16,0,10
	.word	108242
	.byte	19
	.byte	'Ifx_SRC_MSC',0,4,158,2,3
	.word	108327
	.byte	11
	.byte	'_Ifx_SRC_PMU',0,4,161,2,25,4,14
	.byte	'SR',0
	.word	823
	.byte	4,2,35,0,0,10
	.word	108353
	.byte	19
	.byte	'Ifx_SRC_PMU',0,4,164,2,3
	.word	108385
	.byte	11
	.byte	'_Ifx_SRC_PSI5',0,4,167,2,25,32,14
	.byte	'SR',0
	.word	107293
	.byte	32,2,35,0,0,10
	.word	108411
	.byte	19
	.byte	'Ifx_SRC_PSI5',0,4,170,2,3
	.word	108444
	.byte	11
	.byte	'_Ifx_SRC_PSI5S',0,4,173,2,25,32,14
	.byte	'SR',0
	.word	107293
	.byte	32,2,35,0,0,10
	.word	108471
	.byte	19
	.byte	'Ifx_SRC_PSI5S',0,4,176,2,3
	.word	108505
	.byte	11
	.byte	'_Ifx_SRC_QSPI',0,4,179,2,25,24,14
	.byte	'TX',0
	.word	823
	.byte	4,2,35,0,14
	.byte	'RX',0
	.word	823
	.byte	4,2,35,4,14
	.byte	'ERR',0
	.word	823
	.byte	4,2,35,8,14
	.byte	'PT',0
	.word	823
	.byte	4,2,35,12,14
	.byte	'HC',0
	.word	823
	.byte	4,2,35,16,14
	.byte	'U',0
	.word	823
	.byte	4,2,35,20,0,10
	.word	108533
	.byte	19
	.byte	'Ifx_SRC_QSPI',0,4,187,2,3
	.word	108626
	.byte	11
	.byte	'_Ifx_SRC_SCR',0,4,190,2,25,4,14
	.byte	'SR',0
	.word	823
	.byte	4,2,35,0,0,10
	.word	108653
	.byte	19
	.byte	'Ifx_SRC_SCR',0,4,193,2,3
	.word	108685
	.byte	11
	.byte	'_Ifx_SRC_SCU',0,4,196,2,25,20,14
	.byte	'DTS',0
	.word	823
	.byte	4,2,35,0,14
	.byte	'ERU',0
	.word	107360
	.byte	16,2,35,4,0,10
	.word	108711
	.byte	19
	.byte	'Ifx_SRC_SCU',0,4,200,2,3
	.word	108757
	.byte	15,24
	.word	823
	.byte	16,5,0,11
	.byte	'_Ifx_SRC_SENT',0,4,203,2,25,24,14
	.byte	'SR',0
	.word	108783
	.byte	24,2,35,0,0,10
	.word	108792
	.byte	19
	.byte	'Ifx_SRC_SENT',0,4,206,2,3
	.word	108825
	.byte	11
	.byte	'_Ifx_SRC_SMU',0,4,209,2,25,12,14
	.byte	'SR',0
	.word	107284
	.byte	12,2,35,0,0,10
	.word	108852
	.byte	19
	.byte	'Ifx_SRC_SMU',0,4,212,2,3
	.word	108884
	.byte	11
	.byte	'_Ifx_SRC_STM',0,4,215,2,25,8,14
	.byte	'SR0',0
	.word	823
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	823
	.byte	4,2,35,4,0,10
	.word	108910
	.byte	19
	.byte	'Ifx_SRC_STM',0,4,219,2,3
	.word	108956
	.byte	11
	.byte	'_Ifx_SRC_VADCCG',0,4,222,2,25,16,14
	.byte	'SR0',0
	.word	823
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	823
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	823
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	823
	.byte	4,2,35,12,0,10
	.word	108982
	.byte	19
	.byte	'Ifx_SRC_VADCCG',0,4,228,2,3
	.word	109057
	.byte	11
	.byte	'_Ifx_SRC_VADCG',0,4,231,2,25,16,14
	.byte	'SR0',0
	.word	823
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	823
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	823
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	823
	.byte	4,2,35,12,0,10
	.word	109086
	.byte	19
	.byte	'Ifx_SRC_VADCG',0,4,237,2,3
	.word	109160
	.byte	11
	.byte	'_Ifx_SRC_XBAR',0,4,240,2,25,4,14
	.byte	'SRC',0
	.word	823
	.byte	4,2,35,0,0,10
	.word	109188
	.byte	19
	.byte	'Ifx_SRC_XBAR',0,4,243,2,3
	.word	109222
	.byte	15,4
	.word	105814
	.byte	16,0,0,10
	.word	109249
	.byte	11
	.byte	'_Ifx_SRC_GAGBT',0,4,128,3,25,4,14
	.byte	'AGBT',0
	.word	109258
	.byte	4,2,35,0,0,10
	.word	109263
	.byte	19
	.byte	'Ifx_SRC_GAGBT',0,4,131,3,3
	.word	109299
	.byte	15,48
	.word	105872
	.byte	16,3,0,10
	.word	109327
	.byte	11
	.byte	'_Ifx_SRC_GASCLIN',0,4,134,3,25,48,14
	.byte	'ASCLIN',0
	.word	109336
	.byte	48,2,35,0,0,10
	.word	109341
	.byte	19
	.byte	'Ifx_SRC_GASCLIN',0,4,137,3,3
	.word	109381
	.byte	10
	.word	105959
	.byte	11
	.byte	'_Ifx_SRC_GBCU',0,4,140,3,25,4,14
	.byte	'SPB',0
	.word	109411
	.byte	4,2,35,0,0,10
	.word	109416
	.byte	19
	.byte	'Ifx_SRC_GBCU',0,4,143,3,3
	.word	109450
	.byte	15,64
	.word	106033
	.byte	16,0,0,10
	.word	109477
	.byte	11
	.byte	'_Ifx_SRC_GCAN',0,4,146,3,25,64,14
	.byte	'CAN',0
	.word	109486
	.byte	64,2,35,0,0,10
	.word	109491
	.byte	19
	.byte	'Ifx_SRC_GCAN',0,4,149,3,3
	.word	109525
	.byte	15,32
	.word	106090
	.byte	16,1,0,10
	.word	109552
	.byte	11
	.byte	'_Ifx_SRC_GCCU6',0,4,152,3,25,32,14
	.byte	'CCU6',0
	.word	109561
	.byte	32,2,35,0,0,10
	.word	109566
	.byte	19
	.byte	'Ifx_SRC_GCCU6',0,4,155,3,3
	.word	109602
	.byte	10
	.word	106197
	.byte	11
	.byte	'_Ifx_SRC_GCERBERUS',0,4,158,3,25,8,14
	.byte	'CERBERUS',0
	.word	109630
	.byte	8,2,35,0,0,10
	.word	109635
	.byte	19
	.byte	'Ifx_SRC_GCERBERUS',0,4,161,3,3
	.word	109679
	.byte	15,16
	.word	106263
	.byte	16,0,0,10
	.word	109711
	.byte	11
	.byte	'_Ifx_SRC_GCIF',0,4,164,3,25,16,14
	.byte	'CIF',0
	.word	109720
	.byte	16,2,35,0,0,10
	.word	109725
	.byte	19
	.byte	'Ifx_SRC_GCIF',0,4,167,3,3
	.word	109759
	.byte	15,8
	.word	106362
	.byte	16,1,0,10
	.word	109786
	.byte	11
	.byte	'_Ifx_SRC_GCPU',0,4,170,3,25,8,14
	.byte	'CPU',0
	.word	109795
	.byte	8,2,35,0,0,10
	.word	109800
	.byte	19
	.byte	'Ifx_SRC_GCPU',0,4,173,3,3
	.word	109834
	.byte	15,208,1
	.word	106433
	.byte	16,0,0,10
	.word	109861
	.byte	11
	.byte	'_Ifx_SRC_GDMA',0,4,176,3,25,208,1,14
	.byte	'DMA',0
	.word	109871
	.byte	208,1,2,35,0,0,10
	.word	109876
	.byte	19
	.byte	'Ifx_SRC_GDMA',0,4,179,3,3
	.word	109912
	.byte	10
	.word	106526
	.byte	10
	.word	106526
	.byte	10
	.word	106526
	.byte	11
	.byte	'_Ifx_SRC_GDSADC',0,4,182,3,25,32,14
	.byte	'DSADC0',0
	.word	109939
	.byte	8,2,35,0,14
	.byte	'reserved_8',0
	.word	3762
	.byte	8,2,35,8,14
	.byte	'DSADC2',0
	.word	109944
	.byte	8,2,35,16,14
	.byte	'DSADC3',0
	.word	109949
	.byte	8,2,35,24,0,10
	.word	109954
	.byte	19
	.byte	'Ifx_SRC_GDSADC',0,4,188,3,3
	.word	110045
	.byte	15,4
	.word	106602
	.byte	16,0,0,10
	.word	110074
	.byte	11
	.byte	'_Ifx_SRC_GEMEM',0,4,191,3,25,4,14
	.byte	'EMEM',0
	.word	110083
	.byte	4,2,35,0,0,10
	.word	110088
	.byte	19
	.byte	'Ifx_SRC_GEMEM',0,4,194,3,3
	.word	110124
	.byte	15,80
	.word	106662
	.byte	16,0,0,10
	.word	110152
	.byte	11
	.byte	'_Ifx_SRC_GERAY',0,4,197,3,25,80,14
	.byte	'ERAY',0
	.word	110161
	.byte	80,2,35,0,0,10
	.word	110166
	.byte	19
	.byte	'Ifx_SRC_GERAY',0,4,200,3,3
	.word	110202
	.byte	15,4
	.word	106816
	.byte	16,0,0,10
	.word	110230
	.byte	11
	.byte	'_Ifx_SRC_GETH',0,4,203,3,25,4,14
	.byte	'ETH',0
	.word	110239
	.byte	4,2,35,0,0,10
	.word	110244
	.byte	19
	.byte	'Ifx_SRC_GETH',0,4,206,3,3
	.word	110278
	.byte	15,4
	.word	106874
	.byte	16,0,0,10
	.word	110305
	.byte	11
	.byte	'_Ifx_SRC_GFCE',0,4,209,3,25,4,14
	.byte	'FCE',0
	.word	110314
	.byte	4,2,35,0,0,10
	.word	110319
	.byte	19
	.byte	'Ifx_SRC_GFCE',0,4,212,3,3
	.word	110353
	.byte	15,12
	.word	106932
	.byte	16,0,0,10
	.word	110380
	.byte	11
	.byte	'_Ifx_SRC_GFFT',0,4,215,3,25,12,14
	.byte	'FFT',0
	.word	110389
	.byte	12,2,35,0,0,10
	.word	110394
	.byte	19
	.byte	'Ifx_SRC_GFFT',0,4,218,3,3
	.word	110428
	.byte	15,64
	.word	107018
	.byte	16,1,0,10
	.word	110455
	.byte	11
	.byte	'_Ifx_SRC_GGPSR',0,4,221,3,25,64,14
	.byte	'GPSR',0
	.word	110464
	.byte	64,2,35,0,0,10
	.word	110469
	.byte	19
	.byte	'Ifx_SRC_GGPSR',0,4,224,3,3
	.word	110505
	.byte	15,48
	.word	107139
	.byte	16,0,0,10
	.word	110533
	.byte	11
	.byte	'_Ifx_SRC_GGPT12',0,4,227,3,25,48,14
	.byte	'GPT12',0
	.word	110542
	.byte	48,2,35,0,0,10
	.word	110547
	.byte	19
	.byte	'Ifx_SRC_GGPT12',0,4,230,3,3
	.word	110585
	.byte	15,204,18
	.word	107389
	.byte	16,0,0,10
	.word	110614
	.byte	11
	.byte	'_Ifx_SRC_GGTM',0,4,233,3,25,204,18,14
	.byte	'GTM',0
	.word	110624
	.byte	204,18,2,35,0,0,10
	.word	110629
	.byte	19
	.byte	'Ifx_SRC_GGTM',0,4,236,3,3
	.word	110665
	.byte	15,4
	.word	107875
	.byte	16,0,0,10
	.word	110692
	.byte	11
	.byte	'_Ifx_SRC_GHSCT',0,4,239,3,25,4,14
	.byte	'HSCT',0
	.word	110701
	.byte	4,2,35,0,0,10
	.word	110706
	.byte	19
	.byte	'Ifx_SRC_GHSCT',0,4,242,3,3
	.word	110742
	.byte	15,64
	.word	107935
	.byte	16,3,0,10
	.word	110770
	.byte	11
	.byte	'_Ifx_SRC_GHSSL',0,4,245,3,25,68,14
	.byte	'HSSL',0
	.word	110779
	.byte	64,2,35,0,14
	.byte	'EXI',0
	.word	823
	.byte	4,2,35,64,0,10
	.word	110784
	.byte	19
	.byte	'Ifx_SRC_GHSSL',0,4,249,3,3
	.word	110833
	.byte	15,80
	.word	108035
	.byte	16,0,0,10
	.word	110861
	.byte	11
	.byte	'_Ifx_SRC_GI2C',0,4,252,3,25,80,14
	.byte	'I2C',0
	.word	110870
	.byte	80,2,35,0,0,10
	.word	110875
	.byte	19
	.byte	'Ifx_SRC_GI2C',0,4,255,3,3
	.word	110909
	.byte	15,4
	.word	108184
	.byte	16,0,0,10
	.word	110936
	.byte	11
	.byte	'_Ifx_SRC_GLMU',0,4,130,4,25,4,14
	.byte	'LMU',0
	.word	110945
	.byte	4,2,35,0,0,10
	.word	110950
	.byte	19
	.byte	'Ifx_SRC_GLMU',0,4,133,4,3
	.word	110984
	.byte	15,40
	.word	108242
	.byte	16,1,0,10
	.word	111011
	.byte	11
	.byte	'_Ifx_SRC_GMSC',0,4,136,4,25,40,14
	.byte	'MSC',0
	.word	111020
	.byte	40,2,35,0,0,10
	.word	111025
	.byte	19
	.byte	'Ifx_SRC_GMSC',0,4,139,4,3
	.word	111059
	.byte	15,8
	.word	108353
	.byte	16,1,0,10
	.word	111086
	.byte	11
	.byte	'_Ifx_SRC_GPMU',0,4,142,4,25,8,14
	.byte	'PMU',0
	.word	111095
	.byte	8,2,35,0,0,10
	.word	111100
	.byte	19
	.byte	'Ifx_SRC_GPMU',0,4,145,4,3
	.word	111134
	.byte	15,32
	.word	108411
	.byte	16,0,0,10
	.word	111161
	.byte	11
	.byte	'_Ifx_SRC_GPSI5',0,4,148,4,25,32,14
	.byte	'PSI5',0
	.word	111170
	.byte	32,2,35,0,0,10
	.word	111175
	.byte	19
	.byte	'Ifx_SRC_GPSI5',0,4,151,4,3
	.word	111211
	.byte	15,32
	.word	108471
	.byte	16,0,0,10
	.word	111239
	.byte	11
	.byte	'_Ifx_SRC_GPSI5S',0,4,154,4,25,32,14
	.byte	'PSI5S',0
	.word	111248
	.byte	32,2,35,0,0,10
	.word	111253
	.byte	19
	.byte	'Ifx_SRC_GPSI5S',0,4,157,4,3
	.word	111291
	.byte	15,96
	.word	108533
	.byte	16,3,0,10
	.word	111320
	.byte	11
	.byte	'_Ifx_SRC_GQSPI',0,4,160,4,25,96,14
	.byte	'QSPI',0
	.word	111329
	.byte	96,2,35,0,0,10
	.word	111334
	.byte	19
	.byte	'Ifx_SRC_GQSPI',0,4,163,4,3
	.word	111370
	.byte	15,4
	.word	108653
	.byte	16,0,0,10
	.word	111398
	.byte	11
	.byte	'_Ifx_SRC_GSCR',0,4,166,4,25,4,14
	.byte	'SCR',0
	.word	111407
	.byte	4,2,35,0,0,10
	.word	111412
	.byte	19
	.byte	'Ifx_SRC_GSCR',0,4,169,4,3
	.word	111446
	.byte	10
	.word	108711
	.byte	11
	.byte	'_Ifx_SRC_GSCU',0,4,172,4,25,20,14
	.byte	'SCU',0
	.word	111473
	.byte	20,2,35,0,0,10
	.word	111478
	.byte	19
	.byte	'Ifx_SRC_GSCU',0,4,175,4,3
	.word	111512
	.byte	15,24
	.word	108792
	.byte	16,0,0,10
	.word	111539
	.byte	11
	.byte	'_Ifx_SRC_GSENT',0,4,178,4,25,24,14
	.byte	'SENT',0
	.word	111548
	.byte	24,2,35,0,0,10
	.word	111553
	.byte	19
	.byte	'Ifx_SRC_GSENT',0,4,181,4,3
	.word	111589
	.byte	15,12
	.word	108852
	.byte	16,0,0,10
	.word	111617
	.byte	11
	.byte	'_Ifx_SRC_GSMU',0,4,184,4,25,12,14
	.byte	'SMU',0
	.word	111626
	.byte	12,2,35,0,0,10
	.word	111631
	.byte	19
	.byte	'Ifx_SRC_GSMU',0,4,187,4,3
	.word	111665
	.byte	15,16
	.word	108910
	.byte	16,1,0,10
	.word	111692
	.byte	11
	.byte	'_Ifx_SRC_GSTM',0,4,190,4,25,16,14
	.byte	'STM',0
	.word	111701
	.byte	16,2,35,0,0,10
	.word	111706
	.byte	19
	.byte	'Ifx_SRC_GSTM',0,4,193,4,3
	.word	111740
	.byte	15,64
	.word	109086
	.byte	16,3,0,10
	.word	111767
	.byte	15,224,1
	.word	516
	.byte	16,223,1,0,15,32
	.word	108982
	.byte	16,1,0,10
	.word	111792
	.byte	11
	.byte	'_Ifx_SRC_GVADC',0,4,196,4,25,192,2,14
	.byte	'G',0
	.word	111776
	.byte	64,2,35,0,14
	.byte	'reserved_40',0
	.word	111781
	.byte	224,1,2,35,64,14
	.byte	'CG',0
	.word	111801
	.byte	32,3,35,160,2,0,10
	.word	111806
	.byte	19
	.byte	'Ifx_SRC_GVADC',0,4,201,4,3
	.word	111875
	.byte	10
	.word	109188
	.byte	11
	.byte	'_Ifx_SRC_GXBAR',0,4,204,4,25,4,14
	.byte	'XBAR',0
	.word	111903
	.byte	4,2,35,0,0,10
	.word	111908
	.byte	19
	.byte	'Ifx_SRC_GXBAR',0,4,207,4,3
	.word	111944
	.byte	19
	.byte	'Ifx_P_ACCEN0_Bits',0,6,79,3
	.word	7515
	.byte	19
	.byte	'Ifx_P_ACCEN1_Bits',0,6,85,3
	.word	7428
	.byte	19
	.byte	'Ifx_P_ESR_Bits',0,6,107,3
	.word	3771
	.byte	19
	.byte	'Ifx_P_ID_Bits',0,6,115,3
	.word	1824
	.byte	19
	.byte	'Ifx_P_IN_Bits',0,6,137,1,3
	.word	2819
	.byte	19
	.byte	'Ifx_P_IOCR0_Bits',0,6,150,1,3
	.word	1952
	.byte	19
	.byte	'Ifx_P_IOCR12_Bits',0,6,163,1,3
	.word	2599
	.byte	19
	.byte	'Ifx_P_IOCR4_Bits',0,6,176,1,3
	.word	2167
	.byte	19
	.byte	'Ifx_P_IOCR8_Bits',0,6,189,1,3
	.word	2382
	.byte	19
	.byte	'Ifx_P_LPCR0_Bits',0,6,197,1,3
	.word	6787
	.byte	19
	.byte	'Ifx_P_LPCR1_Bits',0,6,205,1,3
	.word	6911
	.byte	19
	.byte	'Ifx_P_LPCR1_P21_Bits',0,6,215,1,3
	.word	6995
	.byte	19
	.byte	'Ifx_P_LPCR2_Bits',0,6,229,1,3
	.word	7175
	.byte	19
	.byte	'Ifx_P_OMCR0_Bits',0,6,240,1,3
	.word	5426
	.byte	19
	.byte	'Ifx_P_OMCR12_Bits',0,6,250,1,3
	.word	5950
	.byte	19
	.byte	'Ifx_P_OMCR4_Bits',0,6,133,2,3
	.word	5600
	.byte	19
	.byte	'Ifx_P_OMCR8_Bits',0,6,144,2,3
	.word	5774
	.byte	19
	.byte	'Ifx_P_OMCR_Bits',0,6,166,2,3
	.word	6439
	.byte	19
	.byte	'Ifx_P_OMR_Bits',0,6,203,2,3
	.word	1253
	.byte	19
	.byte	'Ifx_P_OMSR0_Bits',0,6,213,2,3
	.word	4763
	.byte	19
	.byte	'Ifx_P_OMSR12_Bits',0,6,224,2,3
	.word	5251
	.byte	19
	.byte	'Ifx_P_OMSR4_Bits',0,6,235,2,3
	.word	4910
	.byte	19
	.byte	'Ifx_P_OMSR8_Bits',0,6,246,2,3
	.word	5079
	.byte	19
	.byte	'Ifx_P_OMSR_Bits',0,6,140,3,3
	.word	6106
	.byte	19
	.byte	'Ifx_P_OUT_Bits',0,6,162,3,3
	.word	937
	.byte	19
	.byte	'Ifx_P_PCSR_Bits',0,6,180,3,3
	.word	4477
	.byte	19
	.byte	'Ifx_P_PDISC_Bits',0,6,202,3,3
	.word	4111
	.byte	19
	.byte	'Ifx_P_PDR0_Bits',0,6,223,3,3
	.word	3142
	.byte	19
	.byte	'Ifx_P_PDR1_Bits',0,6,244,3,3
	.word	3446
	.byte	19
	.byte	'Ifx_P_ACCEN0',0,6,129,4,3
	.word	8042
	.byte	19
	.byte	'Ifx_P_ACCEN1',0,6,137,4,3
	.word	7475
	.byte	19
	.byte	'Ifx_P_ESR',0,6,145,4,3
	.word	4062
	.byte	19
	.byte	'Ifx_P_ID',0,6,153,4,3
	.word	1903
	.byte	19
	.byte	'Ifx_P_IN',0,6,161,4,3
	.word	3093
	.byte	19
	.byte	'Ifx_P_IOCR0',0,6,169,4,3
	.word	2127
	.byte	19
	.byte	'Ifx_P_IOCR12',0,6,177,4,3
	.word	2779
	.byte	19
	.byte	'Ifx_P_IOCR4',0,6,185,4,3
	.word	2342
	.byte	19
	.byte	'Ifx_P_IOCR8',0,6,193,4,3
	.word	2559
	.byte	19
	.byte	'Ifx_P_LPCR0',0,6,201,4,3
	.word	6871
	.byte	19
	.byte	'Ifx_P_LPCR1',0,6,210,4,3
	.word	7120
	.byte	19
	.byte	'Ifx_P_LPCR2',0,6,218,4,3
	.word	7379
	.byte	19
	.byte	'Ifx_P_OMCR',0,6,226,4,3
	.word	6747
	.byte	19
	.byte	'Ifx_P_OMCR0',0,6,234,4,3
	.word	5560
	.byte	19
	.byte	'Ifx_P_OMCR12',0,6,242,4,3
	.word	6066
	.byte	19
	.byte	'Ifx_P_OMCR4',0,6,250,4,3
	.word	5734
	.byte	19
	.byte	'Ifx_P_OMCR8',0,6,130,5,3
	.word	5910
	.byte	19
	.byte	'Ifx_P_OMR',0,6,138,5,3
	.word	1784
	.byte	19
	.byte	'Ifx_P_OMSR',0,6,146,5,3
	.word	6399
	.byte	19
	.byte	'Ifx_P_OMSR0',0,6,154,5,3
	.word	4870
	.byte	19
	.byte	'Ifx_P_OMSR12',0,6,162,5,3
	.word	5386
	.byte	19
	.byte	'Ifx_P_OMSR4',0,6,170,5,3
	.word	5039
	.byte	19
	.byte	'Ifx_P_OMSR8',0,6,178,5,3
	.word	5211
	.byte	19
	.byte	'Ifx_P_OUT',0,6,186,5,3
	.word	1213
	.byte	19
	.byte	'Ifx_P_PCSR',0,6,194,5,3
	.word	4723
	.byte	19
	.byte	'Ifx_P_PDISC',0,6,202,5,3
	.word	4437
	.byte	19
	.byte	'Ifx_P_PDR0',0,6,210,5,3
	.word	3406
	.byte	19
	.byte	'Ifx_P_PDR1',0,6,218,5,3
	.word	3722
	.byte	10
	.word	8082
	.byte	19
	.byte	'Ifx_P',0,6,139,6,3
	.word	113290
	.byte	17,23,250,10,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,19
	.byte	'IfxScu_WDTCON1_IR',0,23,255,10,3
	.word	113310
	.byte	11
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,24,45,16,4,12
	.byte	'EN0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	516
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	516
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_ACCEN0_Bits',0,24,79,3
	.word	113432
	.byte	11
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,24,82,16,4,12
	.byte	'reserved_0',0,4
	.word	319
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_SCU_ACCEN1_Bits',0,24,85,3
	.word	113989
	.byte	11
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,24,88,16,4,12
	.byte	'STM0DIS',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'STM1DIS',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'STM2DIS',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,4
	.word	319
	.byte	29,0,2,35,0,0,19
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,24,94,3
	.word	114066
	.byte	11
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,24,97,16,4,12
	.byte	'BAUD1DIV',0,1
	.word	516
	.byte	4,4,2,35,0,12
	.byte	'BAUD2DIV',0,1
	.word	516
	.byte	4,0,2,35,0,12
	.byte	'SRIDIV',0,1
	.word	516
	.byte	4,4,2,35,1,12
	.byte	'LPDIV',0,1
	.word	516
	.byte	4,0,2,35,1,12
	.byte	'SPBDIV',0,1
	.word	516
	.byte	4,4,2,35,2,12
	.byte	'FSI2DIV',0,1
	.word	516
	.byte	2,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	516
	.byte	2,0,2,35,2,12
	.byte	'FSIDIV',0,1
	.word	516
	.byte	2,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	516
	.byte	2,4,2,35,3,12
	.byte	'CLKSEL',0,1
	.word	516
	.byte	2,2,2,35,3,12
	.byte	'UP',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON0_Bits',0,24,111,3
	.word	114202
	.byte	11
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,24,114,16,4,12
	.byte	'CANDIV',0,1
	.word	516
	.byte	4,4,2,35,0,12
	.byte	'ERAYDIV',0,1
	.word	516
	.byte	4,0,2,35,0,12
	.byte	'STMDIV',0,1
	.word	516
	.byte	4,4,2,35,1,12
	.byte	'GTMDIV',0,1
	.word	516
	.byte	4,0,2,35,1,12
	.byte	'ETHDIV',0,1
	.word	516
	.byte	4,4,2,35,2,12
	.byte	'ASCLINFDIV',0,1
	.word	516
	.byte	4,0,2,35,2,12
	.byte	'ASCLINSDIV',0,1
	.word	516
	.byte	4,4,2,35,3,12
	.byte	'INSEL',0,1
	.word	516
	.byte	2,2,2,35,3,12
	.byte	'UP',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON1_Bits',0,24,126,3
	.word	114482
	.byte	11
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,24,129,1,16,4,12
	.byte	'BBBDIV',0,1
	.word	516
	.byte	4,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	319
	.byte	26,2,2,35,0,12
	.byte	'UP',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON2_Bits',0,24,135,1,3
	.word	114720
	.byte	11
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,24,138,1,16,4,12
	.byte	'PLLDIV',0,1
	.word	516
	.byte	6,2,2,35,0,12
	.byte	'PLLSEL',0,1
	.word	516
	.byte	2,0,2,35,0,12
	.byte	'PLLERAYDIV',0,1
	.word	516
	.byte	6,2,2,35,1,12
	.byte	'PLLERAYSEL',0,1
	.word	516
	.byte	2,0,2,35,1,12
	.byte	'SRIDIV',0,1
	.word	516
	.byte	6,2,2,35,2,12
	.byte	'SRISEL',0,1
	.word	516
	.byte	2,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	5,3,2,35,3,12
	.byte	'SLCK',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'UP',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON3_Bits',0,24,150,1,3
	.word	114848
	.byte	11
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,24,153,1,16,4,12
	.byte	'SPBDIV',0,1
	.word	516
	.byte	6,2,2,35,0,12
	.byte	'SPBSEL',0,1
	.word	516
	.byte	2,0,2,35,0,12
	.byte	'GTMDIV',0,1
	.word	516
	.byte	6,2,2,35,1,12
	.byte	'GTMSEL',0,1
	.word	516
	.byte	2,0,2,35,1,12
	.byte	'STMDIV',0,1
	.word	516
	.byte	6,2,2,35,2,12
	.byte	'STMSEL',0,1
	.word	516
	.byte	2,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	5,3,2,35,3,12
	.byte	'SLCK',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'UP',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON4_Bits',0,24,165,1,3
	.word	115091
	.byte	11
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,24,168,1,16,4,12
	.byte	'MAXDIV',0,1
	.word	516
	.byte	4,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	319
	.byte	26,2,2,35,0,12
	.byte	'UP',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON5_Bits',0,24,174,1,3
	.word	115326
	.byte	11
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,24,177,1,16,4,12
	.byte	'CPU0DIV',0,1
	.word	516
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	319
	.byte	26,0,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON6_Bits',0,24,181,1,3
	.word	115454
	.byte	11
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,24,184,1,16,4,12
	.byte	'CPU1DIV',0,1
	.word	516
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	319
	.byte	26,0,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON7_Bits',0,24,188,1,3
	.word	115554
	.byte	11
	.byte	'_Ifx_SCU_CHIPID_Bits',0,24,191,1,16,4,12
	.byte	'CHREV',0,1
	.word	516
	.byte	6,2,2,35,0,12
	.byte	'CHTEC',0,1
	.word	516
	.byte	2,0,2,35,0,12
	.byte	'CHID',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'EEA',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'UCODE',0,1
	.word	516
	.byte	7,0,2,35,2,12
	.byte	'FSIZE',0,1
	.word	516
	.byte	4,4,2,35,3,12
	.byte	'SP',0,1
	.word	516
	.byte	2,2,2,35,3,12
	.byte	'SEC',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CHIPID_Bits',0,24,202,1,3
	.word	115654
	.byte	11
	.byte	'_Ifx_SCU_DTSCON_Bits',0,24,205,1,16,4,12
	.byte	'PWD',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'START',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	516
	.byte	2,4,2,35,0,12
	.byte	'CAL',0,4
	.word	319
	.byte	20,8,2,35,0,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'SLCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_DTSCON_Bits',0,24,213,1,3
	.word	115862
	.byte	11
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,24,216,1,16,4,12
	.byte	'LOWER',0,2
	.word	915
	.byte	10,6,2,35,0,12
	.byte	'reserved_10',0,1
	.word	516
	.byte	5,1,2,35,1,12
	.byte	'LLU',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'UPPER',0,2
	.word	915
	.byte	10,6,2,35,2,12
	.byte	'reserved_26',0,1
	.word	516
	.byte	4,2,2,35,3,12
	.byte	'SLCK',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'UOF',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_DTSLIM_Bits',0,24,225,1,3
	.word	116027
	.byte	11
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,24,228,1,16,4,12
	.byte	'RESULT',0,2
	.word	915
	.byte	10,6,2,35,0,12
	.byte	'reserved_10',0,1
	.word	516
	.byte	4,2,2,35,1,12
	.byte	'RDY',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'BUSY',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	915
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,24,235,1,3
	.word	116210
	.byte	11
	.byte	'_Ifx_SCU_EICR_Bits',0,24,238,1,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	4,4,2,35,0,12
	.byte	'EXIS0',0,1
	.word	516
	.byte	3,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'FEN0',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'REN0',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'LDEN0',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'EIEN0',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'INP0',0,1
	.word	516
	.byte	3,1,2,35,1,12
	.byte	'reserved_15',0,4
	.word	319
	.byte	5,12,2,35,0,12
	.byte	'EXIS1',0,1
	.word	516
	.byte	3,1,2,35,2,12
	.byte	'reserved_23',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'FEN1',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'REN1',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'LDEN1',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'EIEN1',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'INP1',0,1
	.word	516
	.byte	3,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EICR_Bits',0,24,129,2,3
	.word	116364
	.byte	11
	.byte	'_Ifx_SCU_EIFR_Bits',0,24,132,2,16,4,12
	.byte	'INTF0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'INTF1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'INTF2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'INTF3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'INTF4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'INTF5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'INTF6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'INTF7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	319
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_EIFR_Bits',0,24,143,2,3
	.word	116728
	.byte	11
	.byte	'_Ifx_SCU_EMSR_Bits',0,24,146,2,16,4,12
	.byte	'POL',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'MODE',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'ENON',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'PSEL',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,2
	.word	915
	.byte	12,0,2,35,0,12
	.byte	'EMSF',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'SEMSF',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	516
	.byte	6,0,2,35,2,12
	.byte	'EMSFM',0,1
	.word	516
	.byte	2,6,2,35,3,12
	.byte	'SEMSFM',0,1
	.word	516
	.byte	2,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	516
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_EMSR_Bits',0,24,159,2,3
	.word	116939
	.byte	11
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,24,162,2,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	7,1,2,35,0,12
	.byte	'EDCON',0,2
	.word	915
	.byte	2,7,2,35,0,12
	.byte	'reserved_9',0,4
	.word	319
	.byte	23,0,2,35,0,0,19
	.byte	'Ifx_SCU_ESRCFG_Bits',0,24,167,2,3
	.word	117191
	.byte	11
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,24,170,2,16,4,12
	.byte	'ARI',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'ARC',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	319
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_ESROCFG_Bits',0,24,175,2,3
	.word	117309
	.byte	11
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,24,178,2,16,4,12
	.byte	'reserved_0',0,4
	.word	319
	.byte	28,4,2,35,0,12
	.byte	'EVR13OFF',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'BPEVR13OFF',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVR13CON_Bits',0,24,185,2,3
	.word	117420
	.byte	11
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,24,188,2,16,4,12
	.byte	'reserved_0',0,4
	.word	319
	.byte	28,4,2,35,0,12
	.byte	'EVR33OFF',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'BPEVR33OFF',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVR33CON_Bits',0,24,195,2,3
	.word	117583
	.byte	11
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,24,198,2,16,4,12
	.byte	'ADC13V',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'ADC33V',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'ADCSWDV',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'VAL',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,24,205,2,3
	.word	117746
	.byte	11
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,24,208,2,16,4,12
	.byte	'DVS13TRIM',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'DVS33TRIM',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'VAL',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,24,215,2,3
	.word	117904
	.byte	11
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,24,218,2,16,4,12
	.byte	'EVR13OVMOD',0,1
	.word	516
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	516
	.byte	2,4,2,35,0,12
	.byte	'EVR13UVMOD',0,1
	.word	516
	.byte	2,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	516
	.byte	2,0,2,35,0,12
	.byte	'EVR33OVMOD',0,1
	.word	516
	.byte	2,6,2,35,1,12
	.byte	'reserved_10',0,1
	.word	516
	.byte	2,4,2,35,1,12
	.byte	'EVR33UVMOD',0,1
	.word	516
	.byte	2,2,2,35,1,12
	.byte	'reserved_14',0,1
	.word	516
	.byte	2,0,2,35,1,12
	.byte	'SWDOVMOD',0,1
	.word	516
	.byte	2,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	516
	.byte	2,4,2,35,2,12
	.byte	'SWDUVMOD',0,1
	.word	516
	.byte	2,2,2,35,2,12
	.byte	'reserved_22',0,2
	.word	915
	.byte	10,0,2,35,2,0,19
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,24,232,2,3
	.word	118069
	.byte	11
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,24,235,2,16,4,12
	.byte	'OSCTRIM',0,2
	.word	915
	.byte	10,6,2,35,0,12
	.byte	'OSCPTAT',0,1
	.word	516
	.byte	6,0,2,35,1,12
	.byte	'OSCANASEL',0,1
	.word	516
	.byte	4,4,2,35,2,12
	.byte	'HPBGTRIM',0,2
	.word	915
	.byte	7,5,2,35,2,12
	.byte	'HPBGCLKEN',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'OSC3V3',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	516
	.byte	2,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,24,245,2,3
	.word	118398
	.byte	11
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,24,248,2,16,4,12
	.byte	'EVR13OVVAL',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'EVR33OVVAL',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'SWDOVVAL',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVROVMON_Bits',0,24,255,2,3
	.word	118619
	.byte	11
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,24,130,3,16,4,12
	.byte	'RST13TRIM',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	319
	.byte	16,8,2,35,0,12
	.byte	'RST13OFF',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'BPRST13OFF',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'RST33OFF',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'BPRST33OFF',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'RSTSWDOFF',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'BPRSTSWDOFF',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,24,142,3,3
	.word	118782
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,24,145,3,16,4,12
	.byte	'SD5P',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'SD5I',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'SD5D',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,24,152,3,3
	.word	119054
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,24,155,3,16,4,12
	.byte	'SD33P',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'SD33I',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'SD33D',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,24,162,3,3
	.word	119207
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,24,165,3,16,4,12
	.byte	'CT5REG0',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'CT5REG1',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'CT5REG2',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,24,172,3,3
	.word	119363
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,24,175,3,16,4,12
	.byte	'CT5REG3',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'CT5REG4',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	915
	.byte	15,1,2,35,2,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,24,181,3,3
	.word	119525
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,24,184,3,16,4,12
	.byte	'CT33REG0',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'CT33REG1',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'CT33REG2',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,24,191,3,3
	.word	119668
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,24,194,3,16,4,12
	.byte	'CT33REG3',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'CT33REG4',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	915
	.byte	15,1,2,35,2,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,24,200,3,3
	.word	119833
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,24,203,3,16,4,12
	.byte	'SDFREQSPRD',0,2
	.word	915
	.byte	16,0,2,35,0,12
	.byte	'SDFREQ',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'SDSTEP',0,1
	.word	516
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	516
	.byte	2,2,2,35,3,12
	.byte	'SDSAMPLE',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,24,211,3,3
	.word	119978
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,24,214,3,16,4,12
	.byte	'DRVP',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'SDMINMAXDC',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'DRVN',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'SDLUT',0,1
	.word	516
	.byte	6,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,24,222,3,3
	.word	120159
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,24,225,3,16,4,12
	.byte	'SDPWMPRE',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'SDPID',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'SDVOKLVL',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,24,232,3,3
	.word	120333
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,24,235,3,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'SYNCDIV',0,1
	.word	516
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	319
	.byte	20,1,2,35,0,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,24,241,3,3
	.word	120493
	.byte	11
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,24,244,3,16,4,12
	.byte	'EVR13',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'OV13',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'EVR33',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'OV33',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'OVSWD',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'UV13',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'UV33',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'UVSWD',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'EXTPASS13',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'EXTPASS33',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'BGPROK',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	319
	.byte	21,0,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,24,130,4,3
	.word	120637
	.byte	11
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,24,133,4,16,4,12
	.byte	'EVR13TRIM',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'SDVOUTSEL',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	915
	.byte	15,1,2,35,2,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,24,139,4,3
	.word	120911
	.byte	11
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,24,142,4,16,4,12
	.byte	'EVR13UVVAL',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'EVR33UVVAL',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'SWDUVVAL',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,24,149,4,3
	.word	121050
	.byte	11
	.byte	'_Ifx_SCU_EXTCON_Bits',0,24,152,4,16,4,12
	.byte	'EN0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'SEL0',0,1
	.word	516
	.byte	4,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	915
	.byte	10,0,2,35,0,12
	.byte	'EN1',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'NSEL',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'SEL1',0,1
	.word	516
	.byte	4,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	516
	.byte	2,0,2,35,2,12
	.byte	'DIV1',0,1
	.word	516
	.byte	8,0,2,35,3,0,19
	.byte	'Ifx_SCU_EXTCON_Bits',0,24,163,4,3
	.word	121213
	.byte	11
	.byte	'_Ifx_SCU_FDR_Bits',0,24,166,4,16,4,12
	.byte	'STEP',0,2
	.word	915
	.byte	10,6,2,35,0,12
	.byte	'reserved_10',0,1
	.word	516
	.byte	4,2,2,35,1,12
	.byte	'DM',0,1
	.word	516
	.byte	2,0,2,35,1,12
	.byte	'RESULT',0,2
	.word	915
	.byte	10,6,2,35,2,12
	.byte	'reserved_26',0,1
	.word	516
	.byte	5,1,2,35,3,12
	.byte	'DISCLK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_FDR_Bits',0,24,174,4,3
	.word	121431
	.byte	11
	.byte	'_Ifx_SCU_FMR_Bits',0,24,177,4,16,4,12
	.byte	'FS0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'FS1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'FS2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'FS3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'FS4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'FS5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'FS6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'FS7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'FC0',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'FC1',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'FC2',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'FC3',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'FC4',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'FC5',0,1
	.word	516
	.byte	1,2,2,35,2,12
	.byte	'FC6',0,1
	.word	516
	.byte	1,1,2,35,2,12
	.byte	'FC7',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	8,0,2,35,3,0,19
	.byte	'Ifx_SCU_FMR_Bits',0,24,197,4,3
	.word	121594
	.byte	11
	.byte	'_Ifx_SCU_ID_Bits',0,24,200,4,16,4,12
	.byte	'MODREV',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'MODTYPE',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'MODNUMBER',0,2
	.word	915
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_ID_Bits',0,24,205,4,3
	.word	121930
	.byte	11
	.byte	'_Ifx_SCU_IGCR_Bits',0,24,208,4,16,4,12
	.byte	'IPEN00',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'IPEN01',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'IPEN02',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'IPEN03',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'IPEN04',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'IPEN05',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'IPEN06',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'IPEN07',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	5,3,2,35,1,12
	.byte	'GEEN0',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'IGP0',0,1
	.word	516
	.byte	2,0,2,35,1,12
	.byte	'IPEN10',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'IPEN11',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'IPEN12',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'IPEN13',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'IPEN14',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'IPEN15',0,1
	.word	516
	.byte	1,2,2,35,2,12
	.byte	'IPEN16',0,1
	.word	516
	.byte	1,1,2,35,2,12
	.byte	'IPEN17',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	5,3,2,35,3,12
	.byte	'GEEN1',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'IGP1',0,1
	.word	516
	.byte	2,0,2,35,3,0,19
	.byte	'Ifx_SCU_IGCR_Bits',0,24,232,4,3
	.word	122037
	.byte	11
	.byte	'_Ifx_SCU_IN_Bits',0,24,235,4,16,4,12
	.byte	'P0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	319
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_IN_Bits',0,24,240,4,3
	.word	122489
	.byte	11
	.byte	'_Ifx_SCU_IOCR_Bits',0,24,243,4,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	4,4,2,35,0,12
	.byte	'PC0',0,1
	.word	516
	.byte	4,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	4,4,2,35,1,12
	.byte	'PC1',0,1
	.word	516
	.byte	4,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	915
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_IOCR_Bits',0,24,250,4,3
	.word	122588
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,24,253,4,16,4,12
	.byte	'LBISTREQ',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'LBISTREQP',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'PATTERNS',0,2
	.word	915
	.byte	14,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	915
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,24,131,5,3
	.word	122738
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,24,134,5,16,4,12
	.byte	'SEED',0,4
	.word	319
	.byte	23,9,2,35,0,12
	.byte	'reserved_23',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'SPLITSH',0,1
	.word	516
	.byte	3,5,2,35,3,12
	.byte	'BODY',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'LBISTFREQU',0,1
	.word	516
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,24,141,5,3
	.word	122887
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,24,144,5,16,4,12
	.byte	'SIGNATURE',0,4
	.word	319
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	7,1,2,35,3,12
	.byte	'LBISTDONE',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,24,149,5,3
	.word	123048
	.byte	11
	.byte	'_Ifx_SCU_LCLCON_Bits',0,24,152,5,16,4,12
	.byte	'reserved_0',0,2
	.word	915
	.byte	16,0,2,35,0,12
	.byte	'LS',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,2
	.word	915
	.byte	14,1,2,35,2,12
	.byte	'LSEN',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_LCLCON_Bits',0,24,158,5,3
	.word	123178
	.byte	11
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,24,161,5,16,4,12
	.byte	'LCLT0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'LCLT1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	319
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_LCLTEST_Bits',0,24,166,5,3
	.word	123310
	.byte	11
	.byte	'_Ifx_SCU_MANID_Bits',0,24,169,5,16,4,12
	.byte	'DEPT',0,1
	.word	516
	.byte	5,3,2,35,0,12
	.byte	'MANUF',0,2
	.word	915
	.byte	11,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	915
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_MANID_Bits',0,24,174,5,3
	.word	123425
	.byte	11
	.byte	'_Ifx_SCU_OMR_Bits',0,24,177,5,16,4,12
	.byte	'PS0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,2
	.word	915
	.byte	14,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,2
	.word	915
	.byte	14,0,2,35,2,0,19
	.byte	'Ifx_SCU_OMR_Bits',0,24,185,5,3
	.word	123536
	.byte	11
	.byte	'_Ifx_SCU_OSCCON_Bits',0,24,188,5,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PLLLV',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'OSCRES',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'GAINSEL',0,1
	.word	516
	.byte	2,3,2,35,0,12
	.byte	'MODE',0,1
	.word	516
	.byte	2,1,2,35,0,12
	.byte	'SHBY',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'PLLHV',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'X1D',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'X1DEN',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	516
	.byte	4,0,2,35,1,12
	.byte	'OSCVAL',0,1
	.word	516
	.byte	5,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	516
	.byte	2,1,2,35,2,12
	.byte	'APREN',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'CAP0EN',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'CAP1EN',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'CAP2EN',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'CAP3EN',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	516
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_OSCCON_Bits',0,24,209,5,3
	.word	123694
	.byte	11
	.byte	'_Ifx_SCU_OUT_Bits',0,24,212,5,16,4,12
	.byte	'P0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	319
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_OUT_Bits',0,24,217,5,3
	.word	124106
	.byte	11
	.byte	'_Ifx_SCU_OVCCON_Bits',0,24,220,5,16,4,12
	.byte	'CSEL0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'CSEL1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'CSEL2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,2
	.word	915
	.byte	13,0,2,35,0,12
	.byte	'OVSTRT',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'OVSTP',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'DCINVAL',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	516
	.byte	5,0,2,35,2,12
	.byte	'OVCONF',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'POVCONF',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	516
	.byte	6,0,2,35,3,0,19
	.byte	'Ifx_SCU_OVCCON_Bits',0,24,233,5,3
	.word	124207
	.byte	11
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,24,236,5,16,4,12
	.byte	'OVEN0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'OVEN1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'OVEN2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,4
	.word	319
	.byte	29,0,2,35,0,0,19
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,24,242,5,3
	.word	124474
	.byte	11
	.byte	'_Ifx_SCU_PDISC_Bits',0,24,245,5,16,4,12
	.byte	'PDIS0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PDIS1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	319
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_PDISC_Bits',0,24,250,5,3
	.word	124610
	.byte	11
	.byte	'_Ifx_SCU_PDR_Bits',0,24,253,5,16,4,12
	.byte	'PD0',0,1
	.word	516
	.byte	3,5,2,35,0,12
	.byte	'PL0',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'PD1',0,1
	.word	516
	.byte	3,1,2,35,0,12
	.byte	'PL1',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	319
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_PDR_Bits',0,24,132,6,3
	.word	124721
	.byte	11
	.byte	'_Ifx_SCU_PDRR_Bits',0,24,135,6,16,4,12
	.byte	'PDR0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PDR1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'PDR2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'PDR3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'PDR4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'PDR5',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'PDR6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PDR7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	319
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_PDRR_Bits',0,24,146,6,3
	.word	124854
	.byte	11
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,24,149,6,16,4,12
	.byte	'VCOBYP',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'VCOPWD',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'MODEN',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'SETFINDIS',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'CLRFINDIS',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'OSCDISCDIS',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,2
	.word	915
	.byte	2,7,2,35,0,12
	.byte	'NDIV',0,1
	.word	516
	.byte	7,0,2,35,1,12
	.byte	'PLLPWD',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'RESLD',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	516
	.byte	5,0,2,35,2,12
	.byte	'PDIV',0,1
	.word	516
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	516
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_PLLCON0_Bits',0,24,166,6,3
	.word	125057
	.byte	11
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,24,169,6,16,4,12
	.byte	'K2DIV',0,1
	.word	516
	.byte	7,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'K3DIV',0,1
	.word	516
	.byte	7,1,2,35,1,12
	.byte	'reserved_15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'K1DIV',0,1
	.word	516
	.byte	7,1,2,35,2,12
	.byte	'reserved_23',0,2
	.word	915
	.byte	9,0,2,35,2,0,19
	.byte	'Ifx_SCU_PLLCON1_Bits',0,24,177,6,3
	.word	125413
	.byte	11
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,24,180,6,16,4,12
	.byte	'MODCFG',0,2
	.word	915
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	915
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_PLLCON2_Bits',0,24,184,6,3
	.word	125591
	.byte	11
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,24,187,6,16,4,12
	.byte	'VCOBYP',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'VCOPWD',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	516
	.byte	2,4,2,35,0,12
	.byte	'SETFINDIS',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'CLRFINDIS',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'OSCDISCDIS',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,2
	.word	915
	.byte	2,7,2,35,0,12
	.byte	'NDIV',0,1
	.word	516
	.byte	5,2,2,35,1,12
	.byte	'reserved_14',0,1
	.word	516
	.byte	2,0,2,35,1,12
	.byte	'PLLPWD',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'RESLD',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	516
	.byte	5,0,2,35,2,12
	.byte	'PDIV',0,1
	.word	516
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	516
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,24,204,6,3
	.word	125691
	.byte	11
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,24,207,6,16,4,12
	.byte	'K2DIV',0,1
	.word	516
	.byte	7,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'K3DIV',0,1
	.word	516
	.byte	4,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	516
	.byte	4,0,2,35,1,12
	.byte	'K1DIV',0,1
	.word	516
	.byte	7,1,2,35,2,12
	.byte	'reserved_23',0,2
	.word	915
	.byte	9,0,2,35,2,0,19
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,24,215,6,3
	.word	126061
	.byte	11
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,24,218,6,16,4,12
	.byte	'VCOBYST',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'PWDSTAT',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'VCOLOCK',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'FINDIS',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'K1RDY',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'K2RDY',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	319
	.byte	26,0,2,35,0,0,19
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,24,227,6,3
	.word	126247
	.byte	11
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,24,230,6,16,4,12
	.byte	'VCOBYST',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'VCOLOCK',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'FINDIS',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'K1RDY',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'K2RDY',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'MODRUN',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	319
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,24,241,6,3
	.word	126445
	.byte	11
	.byte	'_Ifx_SCU_PMCSR_Bits',0,24,244,6,16,4,12
	.byte	'REQSLP',0,1
	.word	516
	.byte	2,6,2,35,0,12
	.byte	'SMUSLP',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	516
	.byte	5,0,2,35,0,12
	.byte	'PMST',0,1
	.word	516
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	319
	.byte	21,0,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR_Bits',0,24,251,6,3
	.word	126678
	.byte	11
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,24,254,6,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'ESR1WKEN',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'PINAWKEN',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'PINBWKEN',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'ESR0DFEN',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'ESR0EDCON',0,1
	.word	516
	.byte	2,1,2,35,0,12
	.byte	'ESR1DFEN',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'ESR1EDCON',0,1
	.word	516
	.byte	2,6,2,35,1,12
	.byte	'PINADFEN',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'PINAEDCON',0,1
	.word	516
	.byte	2,3,2,35,1,12
	.byte	'PINBDFEN',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'PINBEDCON',0,1
	.word	516
	.byte	2,0,2,35,1,12
	.byte	'SCREN',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'STBYRAMSEL',0,1
	.word	516
	.byte	2,5,2,35,2,12
	.byte	'SCRCLKSEL',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'SCRWKEN',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'TRISTEN',0,1
	.word	516
	.byte	1,2,2,35,2,12
	.byte	'TRISTREQ',0,1
	.word	516
	.byte	1,1,2,35,2,12
	.byte	'PORSTDF',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'DCDCSYNC',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	516
	.byte	3,3,2,35,3,12
	.byte	'ESR0TRIST',0,1
	.word	516
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	516
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,24,153,7,3
	.word	126830
	.byte	11
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,24,156,7,16,4,12
	.byte	'SCRSTEN',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'SCRSTREQ',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	516
	.byte	6,0,2,35,0,12
	.byte	'CPUIDLSEL',0,1
	.word	516
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'IRADIS',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	516
	.byte	3,0,2,35,1,12
	.byte	'SCRCFG',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'CPUSEL',0,1
	.word	516
	.byte	3,5,2,35,3,12
	.byte	'STBYEVEN',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'STBYEV',0,1
	.word	516
	.byte	3,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,24,170,7,3
	.word	127397
	.byte	11
	.byte	'_Ifx_SCU_PMSWCR2_Bits',0,24,173,7,16,4,12
	.byte	'SCRINT',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'BUSY',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'SCRECC',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'SCRWDT',0,1
	.word	516
	.byte	1,5,2,35,1,12
	.byte	'SCRRST',0,1
	.word	516
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	516
	.byte	4,0,2,35,1,12
	.byte	'TCINT',0,1
	.word	516
	.byte	8,0,2,35,2,12
	.byte	'TCINTREQ',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'SMURST',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'RST',0,1
	.word	516
	.byte	1,5,2,35,3,12
	.byte	'reserved_27',0,1
	.word	516
	.byte	4,1,2,35,3,12
	.byte	'LCK',0,1
	.word	516
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMSWCR2_Bits',0,24,187,7,3
	.word	127691
	.byte	11
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,24,190,7,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	2,6,2,35,0,12
	.byte	'ESR1WKP',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'ESR1OVRUN',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'PINAWKP',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'PINAOVRUN',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'PINBWKP',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PINBOVRUN',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'PORSTDF',0,1
	.word	516
	.byte	1,6,2,35,1,12
	.byte	'HWCFGEVR',0,1
	.word	516
	.byte	3,3,2,35,1,12
	.byte	'STBYRAM',0,1
	.word	516
	.byte	2,1,2,35,1,12
	.byte	'TRIST',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'SCRST',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'SCRWKP',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'SCR',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'SCRWKEN',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'ESR1WKEN',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'PINAWKEN',0,1
	.word	516
	.byte	1,2,2,35,2,12
	.byte	'PINBWKEN',0,1
	.word	516
	.byte	1,1,2,35,2,12
	.byte	'reserved_23',0,2
	.word	915
	.byte	4,5,2,35,2,12
	.byte	'ESR0TRIST',0,1
	.word	516
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	516
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,24,214,7,3
	.word	127969
	.byte	11
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,24,217,7,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	2,6,2,35,0,12
	.byte	'ESR1WKPCLR',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'ESR1OVRUNCLR',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'PINAWKPCLR',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'PINAOVRUNCLR',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'PINBWKPCLR',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PINBOVRUNCLR',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'SCRSTCLR',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'SCRWKPCLR',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,2
	.word	915
	.byte	14,0,2,35,2,0,19
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,24,230,7,3
	.word	128465
	.byte	11
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,24,233,7,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'CLRC',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,2
	.word	915
	.byte	10,4,2,35,0,12
	.byte	'CSS0',0,1
	.word	516
	.byte	1,3,2,35,1,12
	.byte	'CSS1',0,1
	.word	516
	.byte	1,2,2,35,1,12
	.byte	'CSS2',0,1
	.word	516
	.byte	1,1,2,35,1,12
	.byte	'reserved_15',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'USRINFO',0,2
	.word	915
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_RSTCON2_Bits',0,24,243,7,3
	.word	128778
	.byte	11
	.byte	'_Ifx_SCU_RSTCON_Bits',0,24,246,7,16,4,12
	.byte	'ESR0',0,1
	.word	516
	.byte	2,6,2,35,0,12
	.byte	'ESR1',0,1
	.word	516
	.byte	2,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	516
	.byte	2,2,2,35,0,12
	.byte	'SMU',0,1
	.word	516
	.byte	2,0,2,35,0,12
	.byte	'SW',0,1
	.word	516
	.byte	2,6,2,35,1,12
	.byte	'STM0',0,1
	.word	516
	.byte	2,4,2,35,1,12
	.byte	'STM1',0,1
	.word	516
	.byte	2,2,2,35,1,12
	.byte	'STM2',0,1
	.word	516
	.byte	2,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	915
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_RSTCON_Bits',0,24,129,8,3
	.word	128987
	.byte	11
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,24,132,8,16,4,12
	.byte	'ESR0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'ESR1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'SMU',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'SW',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'STM0',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'STM1',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'STM2',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	516
	.byte	8,0,2,35,1,12
	.byte	'PORST',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'CB0',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'CB1',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'CB3',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	516
	.byte	2,1,2,35,2,12
	.byte	'EVR13',0,1
	.word	516
	.byte	1,0,2,35,2,12
	.byte	'EVR33',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'SWD',0,1
	.word	516
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	516
	.byte	2,4,2,35,3,12
	.byte	'STBYR',0,1
	.word	516
	.byte	1,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	516
	.byte	3,0,2,35,3,0,19
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,24,155,8,3
	.word	129198
	.byte	11
	.byte	'_Ifx_SCU_SAFECON_Bits',0,24,158,8,16,4,12
	.byte	'HBT',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,4
	.word	319
	.byte	31,0,2,35,0,0,19
	.byte	'Ifx_SCU_SAFECON_Bits',0,24,162,8,3
	.word	129630
	.byte	11
	.byte	'_Ifx_SCU_STSTAT_Bits',0,24,165,8,16,4,12
	.byte	'HWCFG',0,1
	.word	516
	.byte	8,0,2,35,0,12
	.byte	'FTM',0,1
	.word	516
	.byte	7,1,2,35,1,12
	.byte	'MODE',0,1
	.word	516
	.byte	1,0,2,35,1,12
	.byte	'FCBAE',0,1
	.word	516
	.byte	1,7,2,35,2,12
	.byte	'LUDIS',0,1
	.word	516
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	516
	.byte	1,5,2,35,2,12
	.byte	'TRSTL',0,1
	.word	516
	.byte	1,4,2,35,2,12
	.byte	'SPDEN',0,1
	.word	516
	.byte	1,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	516
	.byte	3,0,2,35,2,12
	.byte	'RAMINT',0,1
	.word	516
	.byte	1,7,2,35,3,12
	.byte	'reserved_25',0,1
	.word	516
	.byte	7,0,2,35,3,0,19
	.byte	'Ifx_SCU_STSTAT_Bits',0,24,178,8,3
	.word	129726
	.byte	11
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,24,181,8,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'SWRSTREQ',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	319
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,24,186,8,3
	.word	129986
	.byte	11
	.byte	'_Ifx_SCU_SYSCON_Bits',0,24,189,8,16,4,12
	.byte	'CCTRIG0',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'RAMINTM',0,1
	.word	516
	.byte	2,4,2,35,0,12
	.byte	'SETLUDIS',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	516
	.byte	3,0,2,35,0,12
	.byte	'DATM',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,4
	.word	319
	.byte	23,0,2,35,0,0,19
	.byte	'Ifx_SCU_SYSCON_Bits',0,24,198,8,3
	.word	130111
	.byte	11
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,24,201,8,16,4,12
	.byte	'ESR0T',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	319
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,24,208,8,3
	.word	130308
	.byte	11
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,24,211,8,16,4,12
	.byte	'ESR0T',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	319
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,24,218,8,3
	.word	130461
	.byte	11
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,24,221,8,16,4,12
	.byte	'ESR0T',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	319
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSET_Bits',0,24,228,8,3
	.word	130614
	.byte	11
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,24,231,8,16,4,12
	.byte	'ESR0T',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	319
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,24,238,8,3
	.word	130767
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,24,241,8,16,4,12
	.byte	'ENDINIT',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'LCK',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'PW',0,4
	.word	10333
	.byte	14,16,2,35,0,12
	.byte	'REL',0,4
	.word	10333
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,24,247,8,3
	.word	130922
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,24,250,8,16,4,12
	.byte	'reserved_0',0,1
	.word	516
	.byte	2,6,2,35,0,12
	.byte	'IR0',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'DR',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'IR1',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'UR',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PAR',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'TCR',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'TCTR',0,1
	.word	516
	.byte	7,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	915
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,24,134,9,3
	.word	131052
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,24,137,9,16,4,12
	.byte	'AE',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'OE',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'IS0',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'DS',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'TO',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'IS1',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'US',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PAS',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'TCS',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'TCT',0,1
	.word	516
	.byte	7,0,2,35,1,12
	.byte	'TIM',0,2
	.word	915
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,24,150,9,3
	.word	131290
	.byte	11
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,24,153,9,16,4,12
	.byte	'ENDINIT',0,4
	.word	10333
	.byte	1,31,2,35,0,12
	.byte	'LCK',0,4
	.word	10333
	.byte	1,30,2,35,0,12
	.byte	'PW',0,4
	.word	10333
	.byte	14,16,2,35,0,12
	.byte	'REL',0,4
	.word	10333
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,24,159,9,3
	.word	131513
	.byte	11
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,24,162,9,16,4,12
	.byte	'CLRIRF',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'IR0',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'DR',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'IR1',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'UR',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PAR',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'TCR',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'TCTR',0,1
	.word	516
	.byte	7,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	915
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,24,175,9,3
	.word	131639
	.byte	11
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,24,178,9,16,4,12
	.byte	'AE',0,1
	.word	516
	.byte	1,7,2,35,0,12
	.byte	'OE',0,1
	.word	516
	.byte	1,6,2,35,0,12
	.byte	'IS0',0,1
	.word	516
	.byte	1,5,2,35,0,12
	.byte	'DS',0,1
	.word	516
	.byte	1,4,2,35,0,12
	.byte	'TO',0,1
	.word	516
	.byte	1,3,2,35,0,12
	.byte	'IS1',0,1
	.word	516
	.byte	1,2,2,35,0,12
	.byte	'US',0,1
	.word	516
	.byte	1,1,2,35,0,12
	.byte	'PAS',0,1
	.word	516
	.byte	1,0,2,35,0,12
	.byte	'TCS',0,1
	.word	516
	.byte	1,7,2,35,1,12
	.byte	'TCT',0,1
	.word	516
	.byte	7,0,2,35,1,12
	.byte	'TIM',0,2
	.word	915
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,24,191,9,3
	.word	131891
	.byte	13,24,199,9,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	113432
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ACCEN0',0,24,204,9,3
	.word	132110
	.byte	13,24,207,9,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	113989
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ACCEN1',0,24,212,9,3
	.word	132174
	.byte	13,24,215,9,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114066
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ARSTDIS',0,24,220,9,3
	.word	132238
	.byte	13,24,223,9,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114202
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON0',0,24,228,9,3
	.word	132303
	.byte	13,24,231,9,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114482
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON1',0,24,236,9,3
	.word	132368
	.byte	13,24,239,9,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114720
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON2',0,24,244,9,3
	.word	132433
	.byte	13,24,247,9,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114848
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON3',0,24,252,9,3
	.word	132498
	.byte	13,24,255,9,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115091
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON4',0,24,132,10,3
	.word	132563
	.byte	13,24,135,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115326
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON5',0,24,140,10,3
	.word	132628
	.byte	13,24,143,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115454
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON6',0,24,148,10,3
	.word	132693
	.byte	13,24,151,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115554
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON7',0,24,156,10,3
	.word	132758
	.byte	13,24,159,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115654
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CHIPID',0,24,164,10,3
	.word	132823
	.byte	13,24,167,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115862
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_DTSCON',0,24,172,10,3
	.word	132887
	.byte	13,24,175,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116027
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_DTSLIM',0,24,180,10,3
	.word	132951
	.byte	13,24,183,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116210
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_DTSSTAT',0,24,188,10,3
	.word	133015
	.byte	13,24,191,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116364
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EICR',0,24,196,10,3
	.word	133080
	.byte	13,24,199,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116728
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EIFR',0,24,204,10,3
	.word	133142
	.byte	13,24,207,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116939
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EMSR',0,24,212,10,3
	.word	133204
	.byte	13,24,215,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117191
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ESRCFG',0,24,220,10,3
	.word	133266
	.byte	13,24,223,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117309
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ESROCFG',0,24,228,10,3
	.word	133330
	.byte	13,24,231,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117420
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVR13CON',0,24,236,10,3
	.word	133395
	.byte	13,24,239,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117583
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVR33CON',0,24,244,10,3
	.word	133461
	.byte	13,24,247,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117746
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRADCSTAT',0,24,252,10,3
	.word	133527
	.byte	13,24,255,10,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117904
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRDVSTAT',0,24,132,11,3
	.word	133595
	.byte	13,24,135,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	118069
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRMONCTRL',0,24,140,11,3
	.word	133662
	.byte	13,24,143,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	118398
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVROSCCTRL',0,24,148,11,3
	.word	133730
	.byte	13,24,151,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	118619
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVROVMON',0,24,156,11,3
	.word	133798
	.byte	13,24,159,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	118782
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRRSTCON',0,24,164,11,3
	.word	133864
	.byte	13,24,167,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119054
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,24,172,11,3
	.word	133931
	.byte	13,24,175,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119207
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,24,180,11,3
	.word	134000
	.byte	13,24,183,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119363
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,24,188,11,3
	.word	134069
	.byte	13,24,191,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119525
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,24,196,11,3
	.word	134138
	.byte	13,24,199,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119668
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,24,204,11,3
	.word	134207
	.byte	13,24,207,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119833
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,24,212,11,3
	.word	134276
	.byte	13,24,215,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119978
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCTRL1',0,24,220,11,3
	.word	134345
	.byte	13,24,223,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120159
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCTRL2',0,24,228,11,3
	.word	134413
	.byte	13,24,231,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120333
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCTRL3',0,24,236,11,3
	.word	134481
	.byte	13,24,239,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120493
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCTRL4',0,24,244,11,3
	.word	134549
	.byte	13,24,247,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120637
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSTAT',0,24,252,11,3
	.word	134617
	.byte	13,24,255,11,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120911
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRTRIM',0,24,132,12,3
	.word	134682
	.byte	13,24,135,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	121050
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRUVMON',0,24,140,12,3
	.word	134747
	.byte	13,24,143,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	121213
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EXTCON',0,24,148,12,3
	.word	134813
	.byte	13,24,151,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	121431
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_FDR',0,24,156,12,3
	.word	134877
	.byte	13,24,159,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	121594
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_FMR',0,24,164,12,3
	.word	134938
	.byte	13,24,167,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	121930
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ID',0,24,172,12,3
	.word	134999
	.byte	13,24,175,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122037
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_IGCR',0,24,180,12,3
	.word	135059
	.byte	13,24,183,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122489
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_IN',0,24,188,12,3
	.word	135121
	.byte	13,24,191,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122588
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_IOCR',0,24,196,12,3
	.word	135181
	.byte	13,24,199,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122738
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LBISTCTRL0',0,24,204,12,3
	.word	135243
	.byte	13,24,207,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122887
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LBISTCTRL1',0,24,212,12,3
	.word	135311
	.byte	13,24,215,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123048
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LBISTCTRL2',0,24,220,12,3
	.word	135379
	.byte	13,24,223,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123178
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LCLCON',0,24,228,12,3
	.word	135447
	.byte	13,24,231,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123310
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LCLTEST',0,24,236,12,3
	.word	135511
	.byte	13,24,239,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123425
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_MANID',0,24,244,12,3
	.word	135576
	.byte	13,24,247,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123536
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OMR',0,24,252,12,3
	.word	135639
	.byte	13,24,255,12,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123694
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OSCCON',0,24,132,13,3
	.word	135700
	.byte	13,24,135,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124106
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OUT',0,24,140,13,3
	.word	135764
	.byte	13,24,143,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124207
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OVCCON',0,24,148,13,3
	.word	135825
	.byte	13,24,151,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124474
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OVCENABLE',0,24,156,13,3
	.word	135889
	.byte	13,24,159,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124610
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PDISC',0,24,164,13,3
	.word	135956
	.byte	13,24,167,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124721
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PDR',0,24,172,13,3
	.word	136019
	.byte	13,24,175,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124854
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PDRR',0,24,180,13,3
	.word	136080
	.byte	13,24,183,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	125057
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLCON0',0,24,188,13,3
	.word	136142
	.byte	13,24,191,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	125413
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLCON1',0,24,196,13,3
	.word	136207
	.byte	13,24,199,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	125591
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLCON2',0,24,204,13,3
	.word	136272
	.byte	13,24,207,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	125691
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLERAYCON0',0,24,212,13,3
	.word	136337
	.byte	13,24,215,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	126061
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLERAYCON1',0,24,220,13,3
	.word	136406
	.byte	13,24,223,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	126247
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLERAYSTAT',0,24,228,13,3
	.word	136475
	.byte	13,24,231,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	126445
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLSTAT',0,24,236,13,3
	.word	136544
	.byte	13,24,239,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	126678
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR',0,24,244,13,3
	.word	136609
	.byte	13,24,247,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	126830
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWCR0',0,24,252,13,3
	.word	136672
	.byte	13,24,255,13,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	127397
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWCR1',0,24,132,14,3
	.word	136737
	.byte	13,24,135,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	127691
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWCR2',0,24,140,14,3
	.word	136802
	.byte	13,24,143,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	127969
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWSTAT',0,24,148,14,3
	.word	136867
	.byte	13,24,151,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	128465
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWSTATCLR',0,24,156,14,3
	.word	136933
	.byte	13,24,159,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	128987
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_RSTCON',0,24,164,14,3
	.word	137002
	.byte	13,24,167,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	128778
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_RSTCON2',0,24,172,14,3
	.word	137066
	.byte	13,24,175,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	129198
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_RSTSTAT',0,24,180,14,3
	.word	137131
	.byte	13,24,183,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	129630
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SAFECON',0,24,188,14,3
	.word	137196
	.byte	13,24,191,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	129726
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_STSTAT',0,24,196,14,3
	.word	137261
	.byte	13,24,199,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	129986
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SWRSTCON',0,24,204,14,3
	.word	137325
	.byte	13,24,207,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	130111
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SYSCON',0,24,212,14,3
	.word	137391
	.byte	13,24,215,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	130308
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPCLR',0,24,220,14,3
	.word	137455
	.byte	13,24,223,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	130461
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPDIS',0,24,228,14,3
	.word	137520
	.byte	13,24,231,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	130614
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSET',0,24,236,14,3
	.word	137585
	.byte	13,24,239,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	130767
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSTAT',0,24,244,14,3
	.word	137650
	.byte	13,24,247,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	130922
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTCPU_CON0',0,24,252,14,3
	.word	137716
	.byte	13,24,255,14,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	131052
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTCPU_CON1',0,24,132,15,3
	.word	137785
	.byte	13,24,135,15,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	131290
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTCPU_SR',0,24,140,15,3
	.word	137854
	.byte	13,24,143,15,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	131513
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_CON0',0,24,148,15,3
	.word	137921
	.byte	13,24,151,15,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	131639
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_CON1',0,24,156,15,3
	.word	137988
	.byte	13,24,159,15,9,4,14
	.byte	'U',0
	.word	319
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	509
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	131891
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_SR',0,24,164,15,3
	.word	138055
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU',0,24,175,15,25,12,14
	.byte	'CON0',0
	.word	137716
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	137785
	.byte	4,2,35,4,14
	.byte	'SR',0
	.word	137854
	.byte	4,2,35,8,0,10
	.word	138120
	.byte	19
	.byte	'Ifx_SCU_WDTCPU',0,24,180,15,3
	.word	138183
	.byte	11
	.byte	'_Ifx_SCU_WDTS',0,24,183,15,25,12,14
	.byte	'CON0',0
	.word	137921
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	137988
	.byte	4,2,35,4,14
	.byte	'SR',0
	.word	138055
	.byte	4,2,35,8,0,10
	.word	138212
	.byte	19
	.byte	'Ifx_SCU_WDTS',0,24,188,15,3
	.word	138273
	.byte	17,5,83,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,19
	.byte	'IfxPort_InputMode',0,5,89,3
	.word	138300
	.byte	19
	.byte	'IfxPort_OutputIdx',0,5,130,1,3
	.word	28055
	.byte	19
	.byte	'IfxPort_OutputMode',0,5,138,1,3
	.word	17447
	.byte	19
	.byte	'IfxPort_PadDriver',0,5,158,1,3
	.word	17517
	.byte	19
	.byte	'IfxPort_State',0,5,178,1,3
	.word	8695
	.byte	19
	.byte	'IfxPort_Pin',0,5,194,1,3
	.word	28016
	.byte	19
	.byte	'IfxStdIf_Timer_CountDir',0,7,93,3
	.word	28469
	.byte	19
	.byte	'IfxStdIf_Timer',0,7,96,32
	.word	9658
	.byte	30,7,134,2,9,16,14
	.byte	'enabled',0
	.word	516
	.byte	1,2,35,0,14
	.byte	'triggerPoint',0
	.word	8963
	.byte	4,2,35,2,14
	.byte	'isrPriority',0
	.word	915
	.byte	2,2,35,6,14
	.byte	'isrProvider',0
	.word	105689
	.byte	1,2,35,8,14
	.byte	'outputMode',0
	.word	17447
	.byte	1,2,35,9,14
	.byte	'outputDriver',0
	.word	17517
	.byte	1,2,35,10,14
	.byte	'risingEdgeAtPeriod',0
	.word	516
	.byte	1,2,35,11,14
	.byte	'outputEnabled',0
	.word	516
	.byte	1,2,35,12,0,19
	.byte	'IfxStdIf_Timer_TrigConfig',0,7,144,2,3
	.word	138632
	.byte	30,7,147,2,9,36,14
	.byte	'frequency',0
	.word	249
	.byte	4,2,35,0,14
	.byte	'isrPriority',0
	.word	915
	.byte	2,2,35,4,14
	.byte	'isrProvider',0
	.word	105689
	.byte	1,2,35,6,14
	.byte	'minResolution',0
	.word	249
	.byte	4,2,35,8,14
	.byte	'trigger',0
	.word	138632
	.byte	16,2,35,12,14
	.byte	'countDir',0
	.word	28469
	.byte	1,2,35,28,14
	.byte	'startOffset',0
	.word	249
	.byte	4,2,35,30,0,19
	.byte	'IfxStdIf_Timer_Config',0,7,156,2,3
	.word	138848
	.byte	19
	.byte	'IfxStdIf_PwmHl',0,14,81,32
	.word	104884
	.byte	19
	.byte	'IfxStdIf_PwmHl_Config',0,14,207,1,3
	.word	17932
	.byte	19
	.byte	'Ifx_GTM_ACCEN0_Bits',0,10,83,3
	.word	96853
	.byte	19
	.byte	'Ifx_GTM_ACCEN1_Bits',0,10,89,3
	.word	96764
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG0OUT0_Bits',0,10,100,3
	.word	94738
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG1OUT0_Bits',0,10,111,3
	.word	94914
	.byte	19
	.byte	'Ifx_GTM_AEI_ADDR_XPT_Bits',0,10,119,3
	.word	29115
	.byte	19
	.byte	'Ifx_GTM_AFD_CH_BUF_ACC_Bits',0,10,126,3
	.word	65972
	.byte	19
	.byte	'Ifx_GTM_ARU_ARU_ACCESS_Bits',0,10,136,1,3
	.word	36651
	.byte	19
	.byte	'Ifx_GTM_ARU_DATA_H_Bits',0,10,143,1,3
	.word	36820
	.byte	19
	.byte	'Ifx_GTM_ARU_DATA_L_Bits',0,10,150,1,3
	.word	36931
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_ACCESS0_Bits',0,10,157,1,3
	.word	37042
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_ACCESS1_Bits',0,10,164,1,3
	.word	37389
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA0_H_Bits',0,10,171,1,3
	.word	37157
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA0_L_Bits',0,10,178,1,3
	.word	37273
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA1_H_Bits',0,10,185,1,3
	.word	37504
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA1_L_Bits',0,10,192,1,3
	.word	37620
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_EN_Bits',0,10,201,1,3
	.word	37895
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_FORCINT_Bits',0,10,210,1,3
	.word	38071
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_MODE_Bits',0,10,217,1,3
	.word	38242
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_NOTIFY_Bits',0,10,226,1,3
	.word	37736
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ACT_TB_Bits',0,10,235,1,3
	.word	14791
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_CTRL_Bits',0,10,249,1,3
	.word	14215
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_STAT_Bits',0,10,135,2,3
	.word	14503
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_FUPD_CTRL_Bits',0,10,156,2,3
	.word	15523
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_GLB_CTRL_Bits',0,10,179,2,3
	.word	13765
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_INT_TRIG_Bits',0,10,193,2,3
	.word	15955
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_CTRL_Bits',0,10,207,2,3
	.word	14947
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_STAT_Bits',0,10,221,2,3
	.word	15235
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CM0_Bits',0,10,228,2,3
	.word	12414
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CM1_Bits',0,10,235,2,3
	.word	12525
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CN0_Bits',0,10,242,2,3
	.word	12636
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CTRL_Bits',0,10,137,3,3
	.word	10508
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_EN_Bits',0,10,145,3,3
	.word	13102
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_FORCINT_Bits',0,10,153,3,3
	.word	13250
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_MODE_Bits',0,10,160,3,3
	.word	13397
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_NOTIFY_Bits',0,10,168,3,3
	.word	12964
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_RDADDR_Bits',0,10,177,3,3
	.word	10349
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMC_Bits',0,10,198,3,3
	.word	10921
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMI_Bits',0,10,210,3,3
	.word	11299
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMP_Bits',0,10,229,3,3
	.word	11504
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMS_Bits',0,10,244,3,3
	.word	11853
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SR0_Bits',0,10,251,3,3
	.word	12192
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SR1_Bits',0,10,130,4,3
	.word	12303
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_STAT_Bits',0,10,143,4,3
	.word	12747
	.byte	19
	.byte	'Ifx_GTM_BRC_EIRQ_EN_Bits',0,10,162,4,3
	.word	50364
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_EN_Bits',0,10,181,4,3
	.word	49428
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_FORCINT_Bits',0,10,200,4,3
	.word	49776
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_MODE_Bits',0,10,207,4,3
	.word	50142
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_NOTIFY_Bits',0,10,226,4,3
	.word	49115
	.byte	19
	.byte	'Ifx_GTM_BRC_RST_Bits',0,10,233,4,3
	.word	50258
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC0_ADDR_Bits',0,10,242,4,3
	.word	40363
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC0_DEST_Bits',0,10,143,5,3
	.word	40519
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC10_ADDR_Bits',0,10,152,5,3
	.word	47653
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC10_DEST_Bits',0,10,181,5,3
	.word	47810
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC11_ADDR_Bits',0,10,190,5,3
	.word	48384
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC11_DEST_Bits',0,10,219,5,3
	.word	48541
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC1_ADDR_Bits',0,10,228,5,3
	.word	41092
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC1_DEST_Bits',0,10,129,6,3
	.word	41248
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC2_ADDR_Bits',0,10,138,6,3
	.word	41821
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC2_DEST_Bits',0,10,167,6,3
	.word	41977
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC3_ADDR_Bits',0,10,176,6,3
	.word	42550
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC3_DEST_Bits',0,10,205,6,3
	.word	42706
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC4_ADDR_Bits',0,10,214,6,3
	.word	43279
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC4_DEST_Bits',0,10,243,6,3
	.word	43435
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC5_ADDR_Bits',0,10,252,6,3
	.word	44008
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC5_DEST_Bits',0,10,153,7,3
	.word	44164
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC6_ADDR_Bits',0,10,162,7,3
	.word	44737
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC6_DEST_Bits',0,10,191,7,3
	.word	44893
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC7_ADDR_Bits',0,10,200,7,3
	.word	45466
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC7_DEST_Bits',0,10,229,7,3
	.word	45622
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC8_ADDR_Bits',0,10,238,7,3
	.word	46195
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC8_DEST_Bits',0,10,139,8,3
	.word	46351
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC9_ADDR_Bits',0,10,148,8,3
	.word	46924
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC9_DEST_Bits',0,10,177,8,3
	.word	47080
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_MODE_Bits',0,10,193,8,3
	.word	30171
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR1_Bits',0,10,204,8,3
	.word	30485
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR2_Bits',0,10,211,8,3
	.word	30693
	.byte	19
	.byte	'Ifx_GTM_CLC_Bits',0,10,221,8,3
	.word	92373
	.byte	19
	.byte	'Ifx_GTM_CMP_EIRQ_EN_Bits',0,10,251,8,3
	.word	35813
	.byte	19
	.byte	'Ifx_GTM_CMP_EN_Bits',0,10,153,9,3
	.word	33328
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_EN_Bits',0,10,183,9,3
	.word	34414
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_FORCINT_Bits',0,10,213,9,3
	.word	35089
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_MODE_Bits',0,10,220,9,3
	.word	35697
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_NOTIFY_Bits',0,10,250,9,3
	.word	33903
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK0_5_CTRL_Bits',0,10,129,10,3
	.word	39197
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_6_CTRL_Bits',0,10,137,10,3
	.word	39371
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_7_CTRL_Bits',0,10,145,10,3
	.word	39554
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_EN_Bits',0,10,163,10,3
	.word	38636
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_DEN_Bits',0,10,170,10,3
	.word	39854
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_NUM_Bits',0,10,177,10,3
	.word	39737
	.byte	19
	.byte	'Ifx_GTM_CMU_FXCLK_CTRL_Bits',0,10,184,10,3
	.word	40036
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_DEN_Bits',0,10,191,10,3
	.word	39080
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_NUM_Bits',0,10,198,10,3
	.word	38963
	.byte	19
	.byte	'Ifx_GTM_CTRL_Bits',0,10,208,10,3
	.word	28949
	.byte	19
	.byte	'Ifx_GTM_DATAIN_Bits',0,10,214,10,3
	.word	98862
	.byte	19
	.byte	'Ifx_GTM_DPLL_ACB_Bits',0,10,227,10,3
	.word	85182
	.byte	19
	.byte	'Ifx_GTM_DPLL_ACT_STA_Bits',0,10,234,10,3
	.word	70518
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL1_Bits',0,10,241,10,3
	.word	79726
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL2_Bits',0,10,248,10,3
	.word	79851
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD1_Bits',0,10,255,10,3
	.word	75845
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD2_Bits',0,10,134,11,3
	.word	75968
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADT_S_Bits',0,10,142,11,3
	.word	84678
	.byte	19
	.byte	'Ifx_GTM_DPLL_AOSV_2_Bits',0,10,151,11,3
	.word	70799
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_1C3_Bits',0,10,159,11,3
	.word	71497
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_Bits',0,10,171,11,3
	.word	71154
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_SYNC_Bits',0,10,181,11,3
	.word	75413
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_2C_Bits',0,10,189,11,3
	.word	71361
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_Bits',0,10,201,11,3
	.word	70948
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_SYNC_Bits',0,10,211,11,3
	.word	75224
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_SX_Bits',0,10,218,11,3
	.word	82254
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_SX_NOM_Bits',0,10,225,11,3
	.word	82490
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_TX_Bits',0,10,232,11,3
	.word	82140
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_TX_NOM_Bits',0,10,239,11,3
	.word	82368
	.byte	19
	.byte	'Ifx_GTM_DPLL_CNT_NUM1_Bits',0,10,246,11,3
	.word	83196
	.byte	19
	.byte	'Ifx_GTM_DPLL_CNT_NUM2_Bits',0,10,253,11,3
	.word	83315
	.byte	19
	.byte	'Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE_Bits',0,10,141,12,3
	.word	77509
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_Bits',0,10,157,12,3
	.word	68697
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE_Bits',0,10,170,12,3
	.word	77047
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER_Bits',0,10,183,12,3
	.word	76823
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_1_Bits',0,10,210,12,3
	.word	68935
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER_Bits',0,10,223,12,3
	.word	77284
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_2_Bits',0,10,246,12,3
	.word	69368
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_3_Bits',0,10,141,13,3
	.word	69742
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_4_Bits',0,10,164,13,3
	.word	70128
	.byte	19
	.byte	'Ifx_GTM_DPLL_DLA_Bits',0,10,171,13,3
	.word	78087
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_S_ACT_Bits',0,10,178,13,3
	.word	81570
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_S_Bits',0,10,185,13,3
	.word	84813
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_T_ACT_Bits',0,10,192,13,3
	.word	81452
	.byte	19
	.byte	'Ifx_GTM_DPLL_DTA_Bits',0,10,199,13,3
	.word	78333
	.byte	19
	.byte	'Ifx_GTM_DPLL_EDT_S_Bits',0,10,207,13,3
	.word	81914
	.byte	19
	.byte	'Ifx_GTM_DPLL_EDT_T_Bits',0,10,215,13,3
	.word	81688
	.byte	19
	.byte	'Ifx_GTM_DPLL_EIRQ_EN_Bits',0,10,249,13,3
	.word	74243
	.byte	19
	.byte	'Ifx_GTM_DPLL_FTV_S_Bits',0,10,128,14,3
	.word	79035
	.byte	19
	.byte	'Ifx_GTM_DPLL_FTV_T_Bits',0,10,135,14,3
	.word	78686
	.byte	19
	.byte	'Ifx_GTM_DPLL_ID_PMTR_Bits',0,10,142,14,3
	.word	76687
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT1_Bits',0,10,149,14,3
	.word	74988
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT2_Bits',0,10,157,14,3
	.word	75106
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_EN_Bits',0,10,191,14,3
	.word	72764
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_FORCINT_Bits',0,10,225,14,3
	.word	73474
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_MODE_Bits',0,10,232,14,3
	.word	74126
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_NOTIFY_Bits',0,10,138,15,3
	.word	72225
	.byte	19
	.byte	'Ifx_GTM_DPLL_MEDT_S_Bits',0,10,146,15,3
	.word	82026
	.byte	19
	.byte	'Ifx_GTM_DPLL_MEDT_T_Bits',0,10,154,15,3
	.word	81800
	.byte	19
	.byte	'Ifx_GTM_DPLL_MLS1_Bits',0,10,161,15,3
	.word	82976
	.byte	19
	.byte	'Ifx_GTM_DPLL_MLS2_Bits',0,10,168,15,3
	.word	83086
	.byte	19
	.byte	'Ifx_GTM_DPLL_MPVAL1_Bits',0,10,177,15,3
	.word	79976
	.byte	19
	.byte	'Ifx_GTM_DPLL_MPVAL2_Bits',0,10,186,15,3
	.word	80106
	.byte	19
	.byte	'Ifx_GTM_DPLL_NA_Bits',0,10,194,15,3
	.word	78204
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_Bits',0,10,201,15,3
	.word	84322
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR_Bits',0,10,208,15,3
	.word	80484
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR_OLD_Bits',0,10,215,15,3
	.word	80604
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_Bits',0,10,222,15,3
	.word	84210
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR_Bits',0,10,229,15,3
	.word	80236
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR_OLD_Bits',0,10,236,15,3
	.word	80356
	.byte	19
	.byte	'Ifx_GTM_DPLL_NTI_CNT_Bits',0,10,243,15,3
	.word	72109
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUSC_Bits',0,10,129,16,3
	.word	71883
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUTC_Bits',0,10,144,16,3
	.word	71634
	.byte	19
	.byte	'Ifx_GTM_DPLL_OSW_Bits',0,10,154,16,3
	.word	70633
	.byte	19
	.byte	'Ifx_GTM_DPLL_PDT_T_Bits',0,10,162,16,3
	.word	82835
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSA_Bits',0,10,169,16,3
	.word	77970
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSAC_Bits',0,10,176,16,3
	.word	85063
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSC_Bits',0,10,183,16,3
	.word	83652
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSM_0_Bits',0,10,190,16,3
	.word	83986
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSM_1_Bits',0,10,197,16,3
	.word	84098
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTC_Bits',0,10,204,16,3
	.word	83542
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTM_0_Bits',0,10,211,16,3
	.word	83762
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTM_1_Bits',0,10,218,16,3
	.word	83874
	.byte	19
	.byte	'Ifx_GTM_DPLL_PVT_Bits',0,10,225,16,3
	.word	83434
	.byte	19
	.byte	'Ifx_GTM_DPLL_RAM_INI_Bits',0,10,236,16,3
	.word	77776
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_SX_Bits',0,10,243,16,3
	.word	80848
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_SX_NOM_Bits',0,10,251,16,3
	.word	81088
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_TX_Bits',0,10,130,17,3
	.word	80732
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_TX_NOM_Bits',0,10,138,17,3
	.word	80964
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_S_ACT_Bits',0,10,145,17,3
	.word	81332
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_S_Bits',0,10,152,17,3
	.word	84434
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_T_ACT_Bits',0,10,159,17,3
	.word	81212
	.byte	19
	.byte	'Ifx_GTM_DPLL_SLR_Bits',0,10,166,17,3
	.word	82719
	.byte	19
	.byte	'Ifx_GTM_DPLL_STATUS_Bits',0,10,202,17,3
	.word	76100
	.byte	19
	.byte	'Ifx_GTM_DPLL_TBU_TS0_S_Bits',0,10,209,17,3
	.word	75725
	.byte	19
	.byte	'Ifx_GTM_DPLL_TBU_TS0_T_Bits',0,10,216,17,3
	.word	75605
	.byte	19
	.byte	'Ifx_GTM_DPLL_THMA_Bits',0,10,223,17,3
	.word	79260
	.byte	19
	.byte	'Ifx_GTM_DPLL_THMI_Bits',0,10,230,17,3
	.word	79150
	.byte	19
	.byte	'Ifx_GTM_DPLL_THVAL_Bits',0,10,237,17,3
	.word	79370
	.byte	19
	.byte	'Ifx_GTM_DPLL_TLR_Bits',0,10,244,17,3
	.word	82612
	.byte	19
	.byte	'Ifx_GTM_DPLL_TOV_Bits',0,10,252,17,3
	.word	79482
	.byte	19
	.byte	'Ifx_GTM_DPLL_TOV_S_Bits',0,10,132,18,3
	.word	79603
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_S_0_Bits',0,10,139,18,3
	.word	78803
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_S_1_Bits',0,10,146,18,3
	.word	78919
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_T_0_Bits',0,10,153,18,3
	.word	78450
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_T_1_Bits',0,10,160,18,3
	.word	78568
	.byte	19
	.byte	'Ifx_GTM_DPLL_TSAC_Bits',0,10,167,18,3
	.word	84944
	.byte	19
	.byte	'Ifx_GTM_DPLL_TSF_S_Bits',0,10,174,18,3
	.word	84556
	.byte	19
	.byte	'Ifx_GTM_DXINCON_Bits',0,10,195,18,3
	.word	98504
	.byte	19
	.byte	'Ifx_GTM_DXOUTCON_Bits',0,10,208,18,3
	.word	97422
	.byte	19
	.byte	'Ifx_GTM_EIRQ_EN_Bits',0,10,218,18,3
	.word	29957
	.byte	19
	.byte	'Ifx_GTM_F2A_ENABLE_Bits',0,10,232,18,3
	.word	65653
	.byte	19
	.byte	'Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO_Bits',0,10,239,18,3
	.word	65256
	.byte	19
	.byte	'Ifx_GTM_F2A_STR_CH_STR_CFG_Bits',0,10,248,18,3
	.word	65438
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_CTRL_Bits',0,10,130,19,3
	.word	66211
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_EIRQ_EN_Bits',0,10,140,19,3
	.word	68124
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_END_ADDR_Bits',0,10,147,19,3
	.word	66372
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_FILL_LEVEL_Bits',0,10,154,19,3
	.word	67008
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_EN_Bits',0,10,164,19,3
	.word	67543
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_FORCINT_Bits',0,10,174,19,3
	.word	67752
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_MODE_Bits',0,10,183,19,3
	.word	67954
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_NOTIFY_Bits',0,10,193,19,3
	.word	67358
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_LOWER_WM_Bits',0,10,200,19,3
	.word	66725
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_RD_PTR_Bits',0,10,207,19,3
	.word	67243
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_START_ADDR_Bits',0,10,214,19,3
	.word	66489
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_STATUS_Bits',0,10,224,19,3
	.word	66842
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_UPPER_WM_Bits',0,10,231,19,3
	.word	66608
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_WR_PTR_Bits',0,10,238,19,3
	.word	67128
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_0_Bits',0,10,133,20,3
	.word	51314
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_1_Bits',0,10,166,20,3
	.word	51805
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_2_Bits',0,10,196,20,3
	.word	52553
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_4_Bits',0,10,226,20,3
	.word	53224
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_6_Bits',0,10,135,21,3
	.word	53895
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_9_Bits',0,10,172,21,3
	.word	54747
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI0_Bits',0,10,186,21,3
	.word	56077
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI1_Bits',0,10,216,21,3
	.word	56382
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI3_Bits',0,10,246,21,3
	.word	57080
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_MEI_Bits',0,10,141,22,3
	.word	55619
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_CAN_OUTSEL_Bits',0,10,154,22,3
	.word	93770
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_DSADC_INSEL_Bits',0,10,167,22,3
	.word	93228
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_DSADC_OUTSEL_Bits',0,10,178,22,3
	.word	93463
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_PSI5_OUTSEL0_Bits',0,10,190,22,3
	.word	94029
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_PSI5S_OUTSEL_Bits',0,10,203,22,3
	.word	94283
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_T_OUTSEL_Bits',0,10,224,22,3
	.word	92821
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_TIM_INSEL_Bits',0,10,237,22,3
	.word	92530
	.byte	19
	.byte	'Ifx_GTM_IRQ_EN_Bits',0,10,247,22,3
	.word	29434
	.byte	19
	.byte	'Ifx_GTM_IRQ_FORCINT_Bits',0,10,129,23,3
	.word	29643
	.byte	19
	.byte	'Ifx_GTM_IRQ_MODE_Bits',0,10,136,23,3
	.word	29845
	.byte	19
	.byte	'Ifx_GTM_IRQ_NOTIFY_Bits',0,10,146,23,3
	.word	29249
	.byte	19
	.byte	'Ifx_GTM_KRST0_Bits',0,10,154,23,3
	.word	96641
	.byte	19
	.byte	'Ifx_GTM_KRST1_Bits',0,10,161,23,3
	.word	96537
	.byte	19
	.byte	'Ifx_GTM_KRSTCLR_Bits',0,10,168,23,3
	.word	96431
	.byte	19
	.byte	'Ifx_GTM_MAP_CTRL_Bits',0,10,191,23,3
	.word	60538
	.byte	19
	.byte	'Ifx_GTM_MCFG_CTRL_Bits',0,10,200,23,3
	.word	60986
	.byte	19
	.byte	'Ifx_GTM_MCS_CH0_CTRG_Bits',0,10,222,23,3
	.word	88955
	.byte	19
	.byte	'Ifx_GTM_MCS_CH0_STRG_Bits',0,10,244,23,3
	.word	89314
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_ACB_Bits',0,10,255,23,3
	.word	88781
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_CTRL_Bits',0,10,145,24,3
	.word	88495
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_EIRQ_EN_Bits',0,10,154,24,3
	.word	90416
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_EN_Bits',0,10,163,24,3
	.word	89947
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_FORCINT_Bits',0,10,172,24,3
	.word	90118
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_MODE_Bits',0,10,179,24,3
	.word	90297
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_NOTIFY_Bits',0,10,188,24,3
	.word	89781
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_PC_Bits',0,10,195,24,3
	.word	89673
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R0_Bits',0,10,202,24,3
	.word	87615
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R1_Bits',0,10,209,24,3
	.word	87725
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R2_Bits',0,10,216,24,3
	.word	87835
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R3_Bits',0,10,223,24,3
	.word	87945
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R4_Bits',0,10,230,24,3
	.word	88055
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R5_Bits',0,10,237,24,3
	.word	88165
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R6_Bits',0,10,244,24,3
	.word	88275
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R7_Bits',0,10,251,24,3
	.word	88385
	.byte	19
	.byte	'Ifx_GTM_MCS_CTRL_Bits',0,10,133,25,3
	.word	90905
	.byte	19
	.byte	'Ifx_GTM_MCS_ERR_Bits',0,10,147,25,3
	.word	91554
	.byte	19
	.byte	'Ifx_GTM_MCS_RST_Bits',0,10,177,25,3
	.word	91078
	.byte	19
	.byte	'Ifx_GTM_MCSINTCLR_Bits',0,10,195,25,3
	.word	98194
	.byte	19
	.byte	'Ifx_GTM_MCSINTSTAT_Bits',0,10,213,25,3
	.word	97883
	.byte	19
	.byte	'Ifx_GTM_MON_ACTIVITY_0_Bits',0,10,243,25,3
	.word	32703
	.byte	19
	.byte	'Ifx_GTM_MON_STATUS_Bits',0,10,140,26,3
	.word	32213
	.byte	19
	.byte	'Ifx_GTM_MSC0INLEXTCON_Bits',0,10,161,26,3
	.word	100706
	.byte	19
	.byte	'Ifx_GTM_MSCIN_INHCON_Bits',0,10,182,26,3
	.word	100302
	.byte	19
	.byte	'Ifx_GTM_MSCIN_INLCON_Bits',0,10,203,26,3
	.word	99966
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON0_Bits',0,10,216,26,3
	.word	98955
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON1_Bits',0,10,229,26,3
	.word	99183
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON2_Bits',0,10,242,26,3
	.word	99411
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON3_Bits',0,10,255,26,3
	.word	99641
	.byte	19
	.byte	'Ifx_GTM_OCS_Bits',0,10,137,27,3
	.word	96271
	.byte	19
	.byte	'Ifx_GTM_ODA_Bits',0,10,145,27,3
	.word	96151
	.byte	19
	.byte	'Ifx_GTM_OTBU0T_Bits',0,10,154,27,3
	.word	95090
	.byte	19
	.byte	'Ifx_GTM_OTBU1T_Bits',0,10,163,27,3
	.word	95232
	.byte	19
	.byte	'Ifx_GTM_OTBU2T_Bits',0,10,172,27,3
	.word	95374
	.byte	19
	.byte	'Ifx_GTM_OTSC0_Bits',0,10,189,27,3
	.word	95701
	.byte	19
	.byte	'Ifx_GTM_OTSC1_Bits',0,10,199,27,3
	.word	95995
	.byte	19
	.byte	'Ifx_GTM_OTSS_Bits',0,10,210,27,3
	.word	95516
	.byte	19
	.byte	'Ifx_GTM_REV_Bits',0,10,222,27,3
	.word	28655
	.byte	19
	.byte	'Ifx_GTM_RST_Bits',0,10,229,27,3
	.word	28847
	.byte	19
	.byte	'Ifx_GTM_SPE_CMP_Bits',0,10,236,27,3
	.word	60169
	.byte	19
	.byte	'Ifx_GTM_SPE_CNT_Bits',0,10,243,27,3
	.word	60062
	.byte	19
	.byte	'Ifx_GTM_SPE_CTRL_STAT_Bits',0,10,136,28,3
	.word	58089
	.byte	19
	.byte	'Ifx_GTM_SPE_EIRQ_EN_Bits',0,10,147,28,3
	.word	59828
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_EN_Bits',0,10,158,28,3
	.word	59266
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_FORCINT_Bits',0,10,169,28,3
	.word	59494
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_MODE_Bits',0,10,176,28,3
	.word	59712
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_NOTIFY_Bits',0,10,187,28,3
	.word	59069
	.byte	19
	.byte	'Ifx_GTM_SPE_OUT_CTRL_Bits',0,10,194,28,3
	.word	58948
	.byte	19
	.byte	'Ifx_GTM_SPE_OUT_PAT_Bits',0,10,201,28,3
	.word	58820
	.byte	19
	.byte	'Ifx_GTM_SPE_PAT_Bits',0,10,222,28,3
	.word	58447
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_BASE_Bits',0,10,229,28,3
	.word	31444
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_CTRL_Bits',0,10,237,28,3
	.word	31307
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_BASE_Bits',0,10,244,28,3
	.word	31694
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_CTRL_Bits',0,10,252,28,3
	.word	31557
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_BASE_Bits',0,10,131,29,3
	.word	31944
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_CTRL_Bits',0,10,139,29,3
	.word	31807
	.byte	19
	.byte	'Ifx_GTM_TBU_CHEN_Bits',0,10,148,29,3
	.word	31152
	.byte	19
	.byte	'Ifx_GTM_TIM_AUX_IN_SRC_Bits',0,10,162,29,3
	.word	30882
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNT_Bits',0,10,169,29,3
	.word	61348
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNTS_Bits',0,10,176,29,3
	.word	61570
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CTRL_Bits',0,10,205,29,3
	.word	62168
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECNT_Bits',0,10,212,29,3
	.word	61458
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECTRL_Bits',0,10,219,29,3
	.word	62717
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_EIRQ_EN_Bits',0,10,231,29,3
	.word	63654
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_FE_Bits',0,10,238,29,3
	.word	62052
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_RE_Bits',0,10,245,29,3
	.word	61936
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR0_Bits',0,10,252,29,3
	.word	61138
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR1_Bits',0,10,131,30,3
	.word	61243
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_EN_Bits',0,10,143,30,3
	.word	63048
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits',0,10,155,30,3
	.word	63298
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_MODE_Bits',0,10,162,30,3
	.word	63535
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits',0,10,174,30,3
	.word	62836
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUC_Bits',0,10,181,30,3
	.word	61675
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUV_Bits',0,10,190,30,3
	.word	61788
	.byte	19
	.byte	'Ifx_GTM_TIM_IN_SRC_Bits',0,10,211,30,3
	.word	64210
	.byte	19
	.byte	'Ifx_GTM_TIM_RST_Bits',0,10,225,30,3
	.word	64562
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM0_Bits',0,10,232,30,3
	.word	18937
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM1_Bits',0,10,239,30,3
	.word	19047
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CN0_Bits',0,10,246,30,3
	.word	19157
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CTRL_Bits',0,10,136,31,3
	.word	18391
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_EN_Bits',0,10,144,31,3
	.word	19513
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits',0,10,152,31,3
	.word	19660
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_MODE_Bits',0,10,159,31,3
	.word	19808
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits',0,10,167,31,3
	.word	19376
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR0_Bits',0,10,174,31,3
	.word	18717
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR1_Bits',0,10,181,31,3
	.word	18827
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_STAT_Bits',0,10,188,31,3
	.word	19267
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ACT_TB_Bits',0,10,197,31,3
	.word	20594
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_CTRL_Bits',0,10,211,31,3
	.word	21457
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_STAT_Bits',0,10,225,31,3
	.word	21745
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_FUPD_CTRL_Bits',0,10,246,31,3
	.word	20750
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_GLB_CTRL_Bits',0,10,141,32,3
	.word	20144
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_INT_TRIG_Bits',0,10,155,32,3
	.word	21182
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_CTRL_Bits',0,10,169,32,3
	.word	22033
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_STAT_Bits',0,10,183,32,3
	.word	22321
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ACT_TB_Bits',0,10,192,32,3
	.word	23094
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_CTRL_Bits',0,10,206,32,3
	.word	23957
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_STAT_Bits',0,10,220,32,3
	.word	24245
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_FUPD_CTRL_Bits',0,10,241,32,3
	.word	23250
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_GLB_CTRL_Bits',0,10,136,33,3
	.word	22644
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_INT_TRIG_Bits',0,10,150,33,3
	.word	23682
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_CTRL_Bits',0,10,164,33,3
	.word	24533
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_STAT_Bits',0,10,178,33,3
	.word	24821
	.byte	19
	.byte	'Ifx_GTM_TRIGOUT_Bits',0,10,192,33,3
	.word	97639
	.byte	19
	.byte	'Ifx_GTM_ACCEN0',0,10,205,33,3
	.word	97382
	.byte	19
	.byte	'Ifx_GTM_ACCEN1',0,10,213,33,3
	.word	96813
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG0OUT0',0,10,221,33,3
	.word	94874
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG1OUT0',0,10,229,33,3
	.word	95050
	.byte	19
	.byte	'Ifx_GTM_AEI_ADDR_XPT',0,10,237,33,3
	.word	29209
	.byte	19
	.byte	'Ifx_GTM_AFD_CH_BUF_ACC',0,10,245,33,3
	.word	66046
	.byte	19
	.byte	'Ifx_GTM_ARU_ARU_ACCESS',0,10,253,33,3
	.word	36780
	.byte	19
	.byte	'Ifx_GTM_ARU_DATA_H',0,10,133,34,3
	.word	36891
	.byte	19
	.byte	'Ifx_GTM_ARU_DATA_L',0,10,141,34,3
	.word	37002
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_ACCESS0',0,10,149,34,3
	.word	37117
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_ACCESS1',0,10,157,34,3
	.word	37464
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA0_H',0,10,165,34,3
	.word	37233
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA0_L',0,10,173,34,3
	.word	37349
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA1_H',0,10,181,34,3
	.word	37580
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA1_L',0,10,189,34,3
	.word	37696
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_EN',0,10,197,34,3
	.word	38031
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_FORCINT',0,10,205,34,3
	.word	38202
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_MODE',0,10,213,34,3
	.word	38318
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_NOTIFY',0,10,221,34,3
	.word	37855
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ACT_TB',0,10,229,34,3
	.word	14907
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_CTRL',0,10,237,34,3
	.word	14463
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_STAT',0,10,245,34,3
	.word	14751
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_FUPD_CTRL',0,10,253,34,3
	.word	15915
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_GLB_CTRL',0,10,133,35,3
	.word	14175
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_INT_TRIG',0,10,141,35,3
	.word	16185
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_CTRL',0,10,149,35,3
	.word	15195
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_STAT',0,10,157,35,3
	.word	15483
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CM0',0,10,165,35,3
	.word	12485
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CM1',0,10,173,35,3
	.word	12596
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CN0',0,10,181,35,3
	.word	12707
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CTRL',0,10,189,35,3
	.word	10881
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_EN',0,10,197,35,3
	.word	13210
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_FORCINT',0,10,205,35,3
	.word	13357
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_MODE',0,10,213,35,3
	.word	13477
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_NOTIFY',0,10,221,35,3
	.word	13062
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_RDADDR',0,10,229,35,3
	.word	10468
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMC',0,10,237,35,3
	.word	11259
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMI',0,10,245,35,3
	.word	11464
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMP',0,10,253,35,3
	.word	11813
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMS',0,10,133,36,3
	.word	12075
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SR0',0,10,141,36,3
	.word	12263
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SR1',0,10,149,36,3
	.word	12374
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_STAT',0,10,157,36,3
	.word	12924
	.byte	19
	.byte	'Ifx_GTM_BRC_EIRQ_EN',0,10,165,36,3
	.word	50673
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_EN',0,10,173,36,3
	.word	49736
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_FORCINT',0,10,181,36,3
	.word	50102
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_MODE',0,10,189,36,3
	.word	50218
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_NOTIFY',0,10,197,36,3
	.word	49388
	.byte	19
	.byte	'Ifx_GTM_BRC_RST',0,10,205,36,3
	.word	50324
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC0_ADDR',0,10,213,36,3
	.word	40479
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC0_DEST',0,10,221,36,3
	.word	41052
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC10_ADDR',0,10,229,36,3
	.word	47770
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC10_DEST',0,10,237,36,3
	.word	48344
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC11_ADDR',0,10,245,36,3
	.word	48501
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC11_DEST',0,10,253,36,3
	.word	49075
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC1_ADDR',0,10,133,37,3
	.word	41208
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC1_DEST',0,10,141,37,3
	.word	41781
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC2_ADDR',0,10,149,37,3
	.word	41937
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC2_DEST',0,10,157,37,3
	.word	42510
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC3_ADDR',0,10,165,37,3
	.word	42666
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC3_DEST',0,10,173,37,3
	.word	43239
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC4_ADDR',0,10,181,37,3
	.word	43395
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC4_DEST',0,10,189,37,3
	.word	43968
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC5_ADDR',0,10,197,37,3
	.word	44124
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC5_DEST',0,10,205,37,3
	.word	44697
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC6_ADDR',0,10,213,37,3
	.word	44853
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC6_DEST',0,10,221,37,3
	.word	45426
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC7_ADDR',0,10,229,37,3
	.word	45582
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC7_DEST',0,10,237,37,3
	.word	46155
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC8_ADDR',0,10,245,37,3
	.word	46311
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC8_DEST',0,10,253,37,3
	.word	46884
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC9_ADDR',0,10,133,38,3
	.word	47040
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC9_DEST',0,10,141,38,3
	.word	47613
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_MODE',0,10,149,38,3
	.word	30445
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR1',0,10,157,38,3
	.word	30653
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR2',0,10,165,38,3
	.word	30772
	.byte	19
	.byte	'Ifx_GTM_CLC',0,10,173,38,3
	.word	92490
	.byte	19
	.byte	'Ifx_GTM_CMP_EIRQ_EN',0,10,181,38,3
	.word	36473
	.byte	19
	.byte	'Ifx_GTM_CMP_EN',0,10,189,38,3
	.word	33863
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_EN',0,10,197,38,3
	.word	35049
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_FORCINT',0,10,205,38,3
	.word	35657
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_MODE',0,10,213,38,3
	.word	35773
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_NOTIFY',0,10,221,38,3
	.word	34374
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK0_5_CTRL',0,10,229,38,3
	.word	39276
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_6_CTRL',0,10,237,38,3
	.word	39469
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_7_CTRL',0,10,245,38,3
	.word	39652
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_EN',0,10,253,38,3
	.word	38923
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_DEN',0,10,133,39,3
	.word	39931
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_NUM',0,10,141,39,3
	.word	39814
	.byte	19
	.byte	'Ifx_GTM_CMU_FXCLK_CTRL',0,10,149,39,3
	.word	40115
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_DEN',0,10,157,39,3
	.word	39157
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_NUM',0,10,165,39,3
	.word	39040
	.byte	19
	.byte	'Ifx_GTM_CTRL',0,10,173,39,3
	.word	29075
	.byte	19
	.byte	'Ifx_GTM_DATAIN',0,10,181,39,3
	.word	98906
	.byte	19
	.byte	'Ifx_GTM_DPLL_ACB',0,10,189,39,3
	.word	85371
	.byte	19
	.byte	'Ifx_GTM_DPLL_ACT_STA',0,10,197,39,3
	.word	70593
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL1',0,10,205,39,3
	.word	79811
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL2',0,10,213,39,3
	.word	79936
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD1',0,10,221,39,3
	.word	75928
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD2',0,10,229,39,3
	.word	76051
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADT_S',0,10,237,39,3
	.word	84763
	.byte	19
	.byte	'Ifx_GTM_DPLL_AOSV_2',0,10,245,39,3
	.word	70908
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS',0,10,253,39,3
	.word	71321
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_1C3',0,10,133,40,3
	.word	71594
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_SYNC',0,10,141,40,3
	.word	75565
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT',0,10,149,40,3
	.word	71114
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_2C',0,10,157,40,3
	.word	71457
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_SYNC',0,10,165,40,3
	.word	75373
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_SX',0,10,173,40,3
	.word	82328
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_SX_NOM',0,10,181,40,3
	.word	82572
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_TX',0,10,189,40,3
	.word	82214
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_TX_NOM',0,10,197,40,3
	.word	82450
	.byte	19
	.byte	'Ifx_GTM_DPLL_CNT_NUM1',0,10,205,40,3
	.word	83275
	.byte	19
	.byte	'Ifx_GTM_DPLL_CNT_NUM2',0,10,213,40,3
	.word	83394
	.byte	19
	.byte	'Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE',0,10,221,40,3
	.word	77736
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0',0,10,229,40,3
	.word	68895
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE',0,10,237,40,3
	.word	77244
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER',0,10,245,40,3
	.word	77007
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_1',0,10,253,40,3
	.word	69328
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER',0,10,133,41,3
	.word	77469
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_2',0,10,141,41,3
	.word	69702
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_3',0,10,149,41,3
	.word	70088
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_4',0,10,157,41,3
	.word	70478
	.byte	19
	.byte	'Ifx_GTM_DPLL_DLA',0,10,165,41,3
	.word	78155
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_S',0,10,173,41,3
	.word	84883
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_S_ACT',0,10,181,41,3
	.word	81648
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_T_ACT',0,10,189,41,3
	.word	81530
	.byte	19
	.byte	'Ifx_GTM_DPLL_DTA',0,10,197,41,3
	.word	78401
	.byte	19
	.byte	'Ifx_GTM_DPLL_EDT_S',0,10,206,41,3
	.word	81986
	.byte	19
	.byte	'Ifx_GTM_DPLL_EDT_T',0,10,215,41,3
	.word	81760
	.byte	19
	.byte	'Ifx_GTM_DPLL_EIRQ_EN',0,10,223,41,3
	.word	74939
	.byte	19
	.byte	'Ifx_GTM_DPLL_FTV_S',0,10,231,41,3
	.word	79110
	.byte	19
	.byte	'Ifx_GTM_DPLL_FTV_T',0,10,239,41,3
	.word	78763
	.byte	19
	.byte	'Ifx_GTM_DPLL_ID_PMTR',0,10,247,41,3
	.word	76764
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT1',0,10,255,41,3
	.word	75066
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT2',0,10,136,42,3
	.word	75184
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_EN',0,10,144,42,3
	.word	73434
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_FORCINT',0,10,152,42,3
	.word	74086
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_MODE',0,10,160,42,3
	.word	74203
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_NOTIFY',0,10,168,42,3
	.word	72724
	.byte	19
	.byte	'Ifx_GTM_DPLL_MEDT_S',0,10,177,42,3
	.word	82100
	.byte	19
	.byte	'Ifx_GTM_DPLL_MEDT_T',0,10,186,42,3
	.word	81874
	.byte	19
	.byte	'Ifx_GTM_DPLL_MLS1',0,10,194,42,3
	.word	83046
	.byte	19
	.byte	'Ifx_GTM_DPLL_MLS2',0,10,202,42,3
	.word	83156
	.byte	19
	.byte	'Ifx_GTM_DPLL_MPVAL1',0,10,211,42,3
	.word	80066
	.byte	19
	.byte	'Ifx_GTM_DPLL_MPVAL2',0,10,220,42,3
	.word	80196
	.byte	19
	.byte	'Ifx_GTM_DPLL_NA',0,10,228,42,3
	.word	78284
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S',0,10,236,42,3
	.word	84394
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR',0,10,244,42,3
	.word	80564
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR_OLD',0,10,252,42,3
	.word	80692
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T',0,10,132,43,3
	.word	84282
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR',0,10,140,43,3
	.word	80316
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR_OLD',0,10,148,43,3
	.word	80444
	.byte	19
	.byte	'Ifx_GTM_DPLL_NTI_CNT',0,10,156,43,3
	.word	72185
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUSC',0,10,164,43,3
	.word	72069
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUTC',0,10,172,43,3
	.word	71843
	.byte	19
	.byte	'Ifx_GTM_DPLL_OSW',0,10,180,43,3
	.word	70759
	.byte	19
	.byte	'Ifx_GTM_DPLL_PDT_T',0,10,188,43,3
	.word	82918
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSA',0,10,196,43,3
	.word	78038
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSAC',0,10,204,43,3
	.word	85133
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSC',0,10,212,43,3
	.word	83722
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSM_0',0,10,220,43,3
	.word	84058
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSM_1',0,10,228,43,3
	.word	84170
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTC',0,10,236,43,3
	.word	83612
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTM_0',0,10,244,43,3
	.word	83834
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTM_1',0,10,252,43,3
	.word	83946
	.byte	19
	.byte	'Ifx_GTM_DPLL_PVT',0,10,132,44,3
	.word	83502
	.byte	19
	.byte	'Ifx_GTM_DPLL_RAM_INI',0,10,140,44,3
	.word	77930
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_SX',0,10,148,44,3
	.word	80924
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_SX_NOM',0,10,157,44,3
	.word	81172
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_TX',0,10,165,44,3
	.word	80808
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_TX_NOM',0,10,174,44,3
	.word	81048
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_S',0,10,182,44,3
	.word	84506
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_S_ACT',0,10,190,44,3
	.word	81412
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_T_ACT',0,10,198,44,3
	.word	81292
	.byte	19
	.byte	'Ifx_GTM_DPLL_SLR',0,10,206,44,3
	.word	82786
	.byte	19
	.byte	'Ifx_GTM_DPLL_STATUS',0,10,214,44,3
	.word	76647
	.byte	19
	.byte	'Ifx_GTM_DPLL_TBU_TS0_S',0,10,222,44,3
	.word	75805
	.byte	19
	.byte	'Ifx_GTM_DPLL_TBU_TS0_T',0,10,230,44,3
	.word	75685
	.byte	19
	.byte	'Ifx_GTM_DPLL_THMA',0,10,238,44,3
	.word	79330
	.byte	19
	.byte	'Ifx_GTM_DPLL_THMI',0,10,246,44,3
	.word	79220
	.byte	19
	.byte	'Ifx_GTM_DPLL_THVAL',0,10,254,44,3
	.word	79442
	.byte	19
	.byte	'Ifx_GTM_DPLL_TLR',0,10,134,45,3
	.word	82679
	.byte	19
	.byte	'Ifx_GTM_DPLL_TOV',0,10,142,45,3
	.word	79563
	.byte	19
	.byte	'Ifx_GTM_DPLL_TOV_S',0,10,150,45,3
	.word	79686
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_S_0',0,10,158,45,3
	.word	78879
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_S_1',0,10,166,45,3
	.word	78995
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_T_0',0,10,174,45,3
	.word	78528
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_T_1',0,10,182,45,3
	.word	78646
	.byte	19
	.byte	'Ifx_GTM_DPLL_TSAC',0,10,190,45,3
	.word	85014
	.byte	19
	.byte	'Ifx_GTM_DPLL_TSF_S',0,10,198,45,3
	.word	84628
	.byte	19
	.byte	'Ifx_GTM_DXINCON',0,10,206,45,3
	.word	98822
	.byte	19
	.byte	'Ifx_GTM_DXOUTCON',0,10,214,45,3
	.word	97599
	.byte	19
	.byte	'Ifx_GTM_EIRQ_EN',0,10,222,45,3
	.word	30131
	.byte	19
	.byte	'Ifx_GTM_F2A_ENABLE',0,10,230,45,3
	.word	65860
	.byte	19
	.byte	'Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO',0,10,238,45,3
	.word	65337
	.byte	19
	.byte	'Ifx_GTM_F2A_STR_CH_STR_CFG',0,10,246,45,3
	.word	65555
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_CTRL',0,10,254,45,3
	.word	66332
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_EIRQ_EN',0,10,134,46,3
	.word	68296
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_END_ADDR',0,10,142,46,3
	.word	66449
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_FILL_LEVEL',0,10,150,46,3
	.word	67088
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_EN',0,10,158,46,3
	.word	67712
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_FORCINT',0,10,166,46,3
	.word	67914
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_MODE',0,10,174,46,3
	.word	68084
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_NOTIFY',0,10,182,46,3
	.word	67503
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_LOWER_WM',0,10,190,46,3
	.word	66802
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_RD_PTR',0,10,198,46,3
	.word	67318
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_START_ADDR',0,10,206,46,3
	.word	66568
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_STATUS',0,10,214,46,3
	.word	66968
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_UPPER_WM',0,10,222,46,3
	.word	66685
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_WR_PTR',0,10,230,46,3
	.word	67203
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_0',0,10,238,46,3
	.word	51765
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_1',0,10,246,46,3
	.word	52513
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_2',0,10,254,46,3
	.word	53184
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_4',0,10,134,47,3
	.word	53855
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_6',0,10,142,47,3
	.word	54707
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_9',0,10,150,47,3
	.word	55579
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI0',0,10,158,47,3
	.word	56342
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI1',0,10,166,47,3
	.word	57040
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI3',0,10,174,47,3
	.word	57738
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_MEI',0,10,182,47,3
	.word	56037
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_CAN_OUTSEL',0,10,190,47,3
	.word	93939
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_DSADC_INSEL',0,10,198,47,3
	.word	93414
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_DSADC_OUTSEL',0,10,206,47,3
	.word	93622
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_PSI5_OUTSEL0',0,10,214,47,3
	.word	94191
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_PSI5S_OUTSEL',0,10,222,47,3
	.word	94468
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_T_OUTSEL',0,10,230,47,3
	.word	93122
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_TIM_INSEL',0,10,238,47,3
	.word	92714
	.byte	19
	.byte	'Ifx_GTM_IRQ_EN',0,10,246,47,3
	.word	29603
	.byte	19
	.byte	'Ifx_GTM_IRQ_FORCINT',0,10,254,47,3
	.word	29805
	.byte	19
	.byte	'Ifx_GTM_IRQ_MODE',0,10,134,48,3
	.word	29917
	.byte	19
	.byte	'Ifx_GTM_IRQ_NOTIFY',0,10,142,48,3
	.word	29394
	.byte	19
	.byte	'Ifx_GTM_KRST0',0,10,150,48,3
	.word	96724
	.byte	19
	.byte	'Ifx_GTM_KRST1',0,10,158,48,3
	.word	96601
	.byte	19
	.byte	'Ifx_GTM_KRSTCLR',0,10,166,48,3
	.word	96497
	.byte	19
	.byte	'Ifx_GTM_MAP_CTRL',0,10,174,48,3
	.word	60937
	.byte	19
	.byte	'Ifx_GTM_MCFG_CTRL',0,10,182,48,3
	.word	61087
	.byte	19
	.byte	'Ifx_GTM_MCS_CH0_CTRG',0,10,190,48,3
	.word	89274
	.byte	19
	.byte	'Ifx_GTM_MCS_CH0_STRG',0,10,198,48,3
	.word	89633
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_ACB',0,10,206,48,3
	.word	88915
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_CTRL',0,10,214,48,3
	.word	88741
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_EIRQ_EN',0,10,222,48,3
	.word	90551
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_EN',0,10,230,48,3
	.word	90078
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_FORCINT',0,10,238,48,3
	.word	90257
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_MODE',0,10,246,48,3
	.word	90376
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_NOTIFY',0,10,254,48,3
	.word	89907
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_PC',0,10,134,49,3
	.word	89741
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R0',0,10,142,49,3
	.word	87685
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R1',0,10,150,49,3
	.word	87795
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R2',0,10,158,49,3
	.word	87905
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R3',0,10,166,49,3
	.word	88015
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R4',0,10,174,49,3
	.word	88125
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R5',0,10,182,49,3
	.word	88235
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R6',0,10,190,49,3
	.word	88345
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R7',0,10,198,49,3
	.word	88455
	.byte	19
	.byte	'Ifx_GTM_MCS_CTRL',0,10,206,49,3
	.word	91038
	.byte	19
	.byte	'Ifx_GTM_MCS_ERR',0,10,214,49,3
	.word	91733
	.byte	19
	.byte	'Ifx_GTM_MCS_RST',0,10,222,49,3
	.word	91514
	.byte	19
	.byte	'Ifx_GTM_MCSINTCLR',0,10,230,49,3
	.word	98464
	.byte	19
	.byte	'Ifx_GTM_MCSINTSTAT',0,10,238,49,3
	.word	98154
	.byte	19
	.byte	'Ifx_GTM_MON_ACTIVITY_0',0,10,246,49,3
	.word	33218
	.byte	19
	.byte	'Ifx_GTM_MON_STATUS',0,10,254,49,3
	.word	32663
	.byte	19
	.byte	'Ifx_GTM_MSC0INLEXTCON',0,10,134,50,3
	.word	101003
	.byte	19
	.byte	'Ifx_GTM_MSCIN_INHCON',0,10,142,50,3
	.word	100598
	.byte	19
	.byte	'Ifx_GTM_MSCIN_INLCON',0,10,150,50,3
	.word	100262
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON0',0,10,158,50,3
	.word	99143
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON1',0,10,166,50,3
	.word	99371
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON2',0,10,174,50,3
	.word	99601
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON3',0,10,182,50,3
	.word	99833
	.byte	19
	.byte	'Ifx_GTM_OCS',0,10,190,50,3
	.word	96391
	.byte	19
	.byte	'Ifx_GTM_ODA',0,10,198,50,3
	.word	96231
	.byte	19
	.byte	'Ifx_GTM_OTBU0T',0,10,206,50,3
	.word	95192
	.byte	19
	.byte	'Ifx_GTM_OTBU1T',0,10,214,50,3
	.word	95334
	.byte	19
	.byte	'Ifx_GTM_OTBU2T',0,10,222,50,3
	.word	95476
	.byte	19
	.byte	'Ifx_GTM_OTSC0',0,10,230,50,3
	.word	95955
	.byte	19
	.byte	'Ifx_GTM_OTSC1',0,10,238,50,3
	.word	96111
	.byte	19
	.byte	'Ifx_GTM_OTSS',0,10,246,50,3
	.word	95661
	.byte	19
	.byte	'Ifx_GTM_REV',0,10,254,50,3
	.word	28807
	.byte	19
	.byte	'Ifx_GTM_RST',0,10,134,51,3
	.word	28909
	.byte	19
	.byte	'Ifx_GTM_SPE_CMP',0,10,142,51,3
	.word	60236
	.byte	19
	.byte	'Ifx_GTM_SPE_CNT',0,10,150,51,3
	.word	60129
	.byte	19
	.byte	'Ifx_GTM_SPE_CTRL_STAT',0,10,158,51,3
	.word	58407
	.byte	19
	.byte	'Ifx_GTM_SPE_EIRQ_EN',0,10,166,51,3
	.word	60022
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_EN',0,10,174,51,3
	.word	59454
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_FORCINT',0,10,182,51,3
	.word	59672
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_MODE',0,10,190,51,3
	.word	59788
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_NOTIFY',0,10,198,51,3
	.word	59226
	.byte	19
	.byte	'Ifx_GTM_SPE_OUT_CTRL',0,10,206,51,3
	.word	59029
	.byte	19
	.byte	'Ifx_GTM_SPE_OUT_PAT',0,10,214,51,3
	.word	58899
	.byte	19
	.byte	'Ifx_GTM_SPE_PAT',0,10,222,51,3
	.word	58780
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_BASE',0,10,230,51,3
	.word	31517
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_CTRL',0,10,238,51,3
	.word	31404
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_BASE',0,10,246,51,3
	.word	31767
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_CTRL',0,10,254,51,3
	.word	31654
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_BASE',0,10,134,52,3
	.word	32017
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_CTRL',0,10,142,52,3
	.word	31904
	.byte	19
	.byte	'Ifx_GTM_TBU_CHEN',0,10,150,52,3
	.word	31267
	.byte	19
	.byte	'Ifx_GTM_TIM_AUX_IN_SRC',0,10,158,52,3
	.word	31092
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNT',0,10,166,52,3
	.word	61418
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNTS',0,10,174,52,3
	.word	61635
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CTRL',0,10,182,52,3
	.word	62677
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECNT',0,10,190,52,3
	.word	61530
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECTRL',0,10,198,52,3
	.word	62796
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_EIRQ_EN',0,10,206,52,3
	.word	63871
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_FE',0,10,214,52,3
	.word	62128
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_RE',0,10,222,52,3
	.word	62012
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR0',0,10,230,52,3
	.word	61203
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR1',0,10,238,52,3
	.word	61308
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_EN',0,10,246,52,3
	.word	63258
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_FORCINT',0,10,254,52,3
	.word	63495
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_MODE',0,10,134,53,3
	.word	63614
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_NOTIFY',0,10,142,53,3
	.word	63008
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUC',0,10,150,53,3
	.word	61748
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUV',0,10,158,53,3
	.word	61896
	.byte	19
	.byte	'Ifx_GTM_TIM_IN_SRC',0,10,166,53,3
	.word	64522
	.byte	19
	.byte	'Ifx_GTM_TIM_RST',0,10,174,53,3
	.word	64765
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM0',0,10,182,53,3
	.word	19007
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM1',0,10,190,53,3
	.word	19117
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CN0',0,10,198,53,3
	.word	19227
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CTRL',0,10,206,53,3
	.word	18677
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_EN',0,10,214,53,3
	.word	19620
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_FORCINT',0,10,222,53,3
	.word	19768
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_MODE',0,10,230,53,3
	.word	19887
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_NOTIFY',0,10,238,53,3
	.word	19473
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR0',0,10,246,53,3
	.word	18787
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR1',0,10,254,53,3
	.word	18897
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_STAT',0,10,134,54,3
	.word	19336
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ACT_TB',0,10,142,54,3
	.word	20710
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_CTRL',0,10,150,54,3
	.word	21705
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_STAT',0,10,158,54,3
	.word	21993
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_FUPD_CTRL',0,10,166,54,3
	.word	21142
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_GLB_CTRL',0,10,174,54,3
	.word	20554
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_INT_TRIG',0,10,182,54,3
	.word	21412
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_CTRL',0,10,190,54,3
	.word	22281
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_STAT',0,10,198,54,3
	.word	22569
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ACT_TB',0,10,206,54,3
	.word	23210
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_CTRL',0,10,214,54,3
	.word	24205
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_STAT',0,10,222,54,3
	.word	24493
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_FUPD_CTRL',0,10,230,54,3
	.word	23642
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_GLB_CTRL',0,10,238,54,3
	.word	23054
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_INT_TRIG',0,10,246,54,3
	.word	23912
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_CTRL',0,10,254,54,3
	.word	24781
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_STAT',0,10,134,55,3
	.word	25069
	.byte	19
	.byte	'Ifx_GTM_TRIGOUT',0,10,142,55,3
	.word	97825
	.byte	10
	.word	66086
	.byte	19
	.byte	'Ifx_GTM_AFD_CH',0,10,157,55,3
	.word	161614
	.byte	10
	.word	16234
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC',0,10,171,55,3
	.word	161643
	.byte	10
	.word	13526
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH',0,10,197,55,3
	.word	161674
	.byte	10
	.word	39316
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK0_5',0,10,203,55,3
	.word	161704
	.byte	10
	.word	39509
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_6',0,10,209,55,3
	.word	161737
	.byte	10
	.word	39692
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_7',0,10,215,55,3
	.word	161769
	.byte	10
	.word	39971
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK',0,10,222,55,3
	.word	161801
	.byte	10
	.word	40155
	.byte	19
	.byte	'Ifx_GTM_CMU_FXCLK',0,10,228,55,3
	.word	161832
	.byte	10
	.word	65377
	.byte	19
	.byte	'Ifx_GTM_F2A_RD_CH',0,10,234,55,3
	.word	161864
	.byte	10
	.word	65595
	.byte	19
	.byte	'Ifx_GTM_F2A_STR_CH',0,10,240,55,3
	.word	161896
	.byte	10
	.word	68336
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH',0,10,132,56,3
	.word	161929
	.byte	10
	.word	93979
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_CAN',0,10,138,56,3
	.word	161959
	.byte	10
	.word	93662
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_DSADC',0,10,147,56,3
	.word	161994
	.byte	10
	.word	94231
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_PSI5',0,10,153,56,3
	.word	162031
	.byte	10
	.word	94508
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_PSI5S',0,10,159,56,3
	.word	162067
	.byte	10
	.word	93171
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_T',0,10,165,56,3
	.word	162104
	.byte	10
	.word	92754
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_TIM',0,10,171,56,3
	.word	162137
	.byte	10
	.word	91782
	.byte	19
	.byte	'Ifx_GTM_MCS_CH',0,10,194,56,3
	.word	162172
	.byte	10
	.word	90591
	.byte	19
	.byte	'Ifx_GTM_MCS_CH0',0,10,218,56,3
	.word	162201
	.byte	10
	.word	63911
	.byte	19
	.byte	'Ifx_GTM_TIM_CH',0,10,240,56,3
	.word	162231
	.byte	10
	.word	19927
	.byte	19
	.byte	'Ifx_GTM_TOM_CH',0,10,129,57,3
	.word	162260
	.byte	10
	.word	66161
	.byte	19
	.byte	'Ifx_GTM_AFD',0,10,145,57,3
	.word	162289
	.byte	10
	.word	38358
	.byte	19
	.byte	'Ifx_GTM_ARU',0,10,163,57,3
	.word	162315
	.byte	10
	.word	16491
	.byte	19
	.byte	'Ifx_GTM_ATOM',0,10,184,57,3
	.word	162341
	.byte	10
	.word	50713
	.byte	19
	.byte	'Ifx_GTM_BRC',0,10,219,57,3
	.word	162368
	.byte	10
	.word	30812
	.byte	19
	.byte	'Ifx_GTM_BRIDGE',0,10,227,57,3
	.word	162394
	.byte	10
	.word	36513
	.byte	19
	.byte	'Ifx_GTM_CMP',0,10,238,57,3
	.word	162423
	.byte	10
	.word	40200
	.byte	19
	.byte	'Ifx_GTM_CMU',0,10,251,57,3
	.word	162449
	.byte	10
	.word	85420
	.byte	19
	.byte	'Ifx_GTM_DPLL',0,10,244,58,3
	.word	162475
	.byte	10
	.word	65900
	.byte	19
	.byte	'Ifx_GTM_F2A',0,10,252,58,3
	.word	162502
	.byte	10
	.word	68644
	.byte	19
	.byte	'Ifx_GTM_FIFO',0,10,130,59,3
	.word	162528
	.byte	10
	.word	57778
	.byte	19
	.byte	'Ifx_GTM_ICM',0,10,150,59,3
	.word	162555
	.byte	10
	.word	94560
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL',0,10,164,59,3
	.word	162581
	.byte	10
	.word	92121
	.byte	19
	.byte	'Ifx_GTM_MCS',0,10,182,59,3
	.word	162612
	.byte	10
	.word	33258
	.byte	19
	.byte	'Ifx_GTM_MON',0,10,189,59,3
	.word	162638
	.byte	10
	.word	100638
	.byte	19
	.byte	'Ifx_GTM_MSCIN',0,10,196,59,3
	.word	162664
	.byte	10
	.word	99873
	.byte	19
	.byte	'Ifx_GTM_MSCSET',0,10,205,59,3
	.word	162692
	.byte	10
	.word	60285
	.byte	19
	.byte	'Ifx_GTM_SPE',0,10,222,59,3
	.word	162721
	.byte	10
	.word	32057
	.byte	19
	.byte	'Ifx_GTM_TBU',0,10,234,59,3
	.word	162747
	.byte	10
	.word	64851
	.byte	19
	.byte	'Ifx_GTM_TIM',0,10,128,60,3
	.word	162773
	.byte	10
	.word	25150
	.byte	19
	.byte	'Ifx_GTM_TOM',0,10,177,60,3
	.word	162799
	.byte	10
	.word	101054
	.byte	19
	.byte	'Ifx_GTM',0,10,154,61,3
	.word	162825
	.byte	10
	.word	26474
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC',0,11,202,1,40
	.word	162847
	.byte	17,11,212,1,9,1,18
	.byte	'IfxGtm_Atom_0',0,0,18
	.byte	'IfxGtm_Atom_1',0,1,18
	.byte	'IfxGtm_Atom_2',0,2,18
	.byte	'IfxGtm_Atom_3',0,3,0,19
	.byte	'IfxGtm_Atom',0,11,218,1,3
	.word	162877
	.byte	19
	.byte	'IfxGtm_Atom_Ch',0,11,233,1,3
	.word	16808
	.byte	17,11,255,1,9,1,18
	.byte	'IfxGtm_Tim_0',0,0,18
	.byte	'IfxGtm_Tim_1',0,1,18
	.byte	'IfxGtm_Tim_2',0,2,0,19
	.byte	'IfxGtm_Tim',0,11,132,2,3
	.word	162993
	.byte	17,11,136,2,9,1,18
	.byte	'IfxGtm_Tim_Ch_0',0,0,18
	.byte	'IfxGtm_Tim_Ch_1',0,1,18
	.byte	'IfxGtm_Tim_Ch_2',0,2,18
	.byte	'IfxGtm_Tim_Ch_3',0,3,18
	.byte	'IfxGtm_Tim_Ch_4',0,4,18
	.byte	'IfxGtm_Tim_Ch_5',0,5,18
	.byte	'IfxGtm_Tim_Ch_6',0,6,18
	.byte	'IfxGtm_Tim_Ch_7',0,7,0,19
	.byte	'IfxGtm_Tim_Ch',0,11,146,2,3
	.word	163065
	.byte	19
	.byte	'IfxGtm_Tom',0,11,154,2,3
	.word	27878
	.byte	19
	.byte	'IfxGtm_Tom_Ch',0,11,177,2,3
	.word	26074
	.byte	17,25,67,9,1,18
	.byte	'IfxGtm_IrqMode_level',0,0,18
	.byte	'IfxGtm_IrqMode_pulse',0,1,18
	.byte	'IfxGtm_IrqMode_pulseNotify',0,2,18
	.byte	'IfxGtm_IrqMode_singlePulse',0,3,0,19
	.byte	'IfxGtm_IrqMode',0,25,73,3
	.word	163282
	.byte	17,25,77,9,1,18
	.byte	'IfxGtm_SuspendMode_none',0,0,18
	.byte	'IfxGtm_SuspendMode_hard',0,1,18
	.byte	'IfxGtm_SuspendMode_soft',0,2,0,19
	.byte	'IfxGtm_SuspendMode',0,25,82,3
	.word	163415
	.byte	17,26,69,9,1,18
	.byte	'IfxGtm_Tbu_Ts_0',0,0,18
	.byte	'IfxGtm_Tbu_Ts_1',0,1,18
	.byte	'IfxGtm_Tbu_Ts_2',0,2,0,19
	.byte	'IfxGtm_Tbu_Ts',0,26,74,3
	.word	163526
	.byte	19
	.byte	'IfxGtm_Tom_Ch_ClkSrc',0,15,92,3
	.word	18189
	.byte	19
	.byte	'IfxGtm_Tom_Ch_OutputTrigger',0,15,100,3
	.word	27275
	.byte	19
	.byte	'IfxGtm_Tom_Ch_ResetEvent',0,15,108,3
	.word	27025
	.byte	17,16,62,9,1,18
	.byte	'IfxGtm_ChXSel_a',0,0,18
	.byte	'IfxGtm_ChXSel_b',0,1,18
	.byte	'IfxGtm_ChXSel_c',0,2,18
	.byte	'IfxGtm_ChXSel_d',0,3,18
	.byte	'IfxGtm_ChXSel_e',0,4,18
	.byte	'IfxGtm_ChXSel_f',0,5,18
	.byte	'IfxGtm_ChXSel_g',0,6,18
	.byte	'IfxGtm_ChXSel_h',0,7,18
	.byte	'IfxGtm_ChXSel_i',0,8,18
	.byte	'IfxGtm_ChXSel_j',0,9,18
	.byte	'IfxGtm_ChXSel_k',0,10,18
	.byte	'IfxGtm_ChXSel_l',0,11,18
	.byte	'IfxGtm_ChXSel_m',0,12,18
	.byte	'IfxGtm_ChXSel_n',0,13,18
	.byte	'IfxGtm_ChXSel_o',0,14,18
	.byte	'IfxGtm_ChXSel_p',0,15,0,19
	.byte	'IfxGtm_ChXSel',0,16,83,3
	.word	163706
	.byte	19
	.byte	'IfxGtm_ToutSel',0,16,93,3
	.word	27915
	.byte	30,16,105,15,20,14
	.byte	'atom',0
	.word	162877
	.byte	1,2,35,0,14
	.byte	'channel',0
	.word	16808
	.byte	1,2,35,1,14
	.byte	'toutSel',0
	.word	27915
	.byte	1,2,35,2,14
	.byte	'toutn',0
	.word	8963
	.byte	4,2,35,4,14
	.byte	'pin',0
	.word	28016
	.byte	8,2,35,8,14
	.byte	'select',0
	.word	28055
	.byte	1,2,35,16,0,24
	.word	164045
	.byte	19
	.byte	'IfxGtm_Atom_ToutMap',0,16,113,3
	.word	164143
	.byte	24
	.word	28272
	.byte	19
	.byte	'IfxGtm_Tom_ToutMap',0,16,127,3
	.word	164176
	.byte	19
	.byte	'IfxGtm_Tom_Timer_Base',0,17,155,1,3
	.word	28571
	.byte	19
	.byte	'IfxGtm_Tom_Timer',0,17,176,1,3
	.word	102946
	.byte	19
	.byte	'IfxGtm_Tom_PwmHl',0,18,155,1,35
	.word	103983
	.byte	19
	.byte	'IfxGtm_Tom_PwmHl_Base',0,18,182,1,3
	.word	103596
	.byte	19
	.byte	'IfxGtm_Tom_PwmHl_Config',0,18,199,1,3
	.word	104248
	.byte	30,18,203,1,9,16,14
	.byte	'mode',0
	.word	103400
	.byte	1,2,35,0,14
	.byte	'inverted',0
	.word	516
	.byte	1,2,35,1,14
	.byte	'update',0
	.word	103807
	.byte	4,2,35,4,14
	.byte	'updateAndShift',0
	.word	103864
	.byte	4,2,35,8,14
	.byte	'updatePulse',0
	.word	103931
	.byte	4,2,35,12,0,19
	.byte	'IfxGtm_Tom_PwmHl_Mode',0,18,210,1,3
	.word	164355
	.byte	15,80
	.word	164355
	.byte	16,4,0
.L511:
	.byte	24
	.word	164486
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L170:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,53,0,73,19,0,0,11,19
	.byte	1,3,8,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,13,23,1,58,15,59,15,57
	.byte	15,11,15,0,0,14,13,0,3,8,73,19,11,15,56,9,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,22,0,3,8,58,15,59,15,57,15,73,19,0,0,20,21,1,73,19,54,15,39
	.byte	12,0,0,21,5,0,73,19,0,0,22,21,1,54,15,39,12,0,0,23,13,0,73,19,11,15,56,9,0,0,24,38,0,73,19,0,0,25,46,1
	.byte	3,8,54,15,39,12,63,12,60,12,0,0,26,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,27,5,0,3,8,73,19,0,0,28
	.byte	46,1,49,19,0,0,29,5,0,49,19,0,0,30,19,1,58,15,59,15,57,15,11,15,0,0,31,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,60,12,0,0,32,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,33,5,0,58,15,59
	.byte	15,57,15,73,19,0,0,34,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,35,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L171:
	.word	.L628-.L627
.L627:
	.half	3
	.word	.L630-.L629
.L629:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer',0
	.byte	'C:\\Program Files\\TASKING\\TriCore v6.3r1\\ctc\\include\\',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxSrc.h',0,2,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxPort.h',0,4,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxStdIf_Timer.h',0,5,0,0
	.byte	'IfxStdIf.h',0,5,0,0
	.byte	'IfxGtm_Atom.h',0,6,0,0
	.byte	'IfxGtm_regdef.h',0,3,0,0
	.byte	'IfxGtm_cfg.h',0,7,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'IfxStdIf_PwmHl.h',0,5,0,0
	.byte	'IfxGtm_Tom.h',0,6,0,0
	.byte	'IfxGtm_PinMap.h',0,8,0,0
	.byte	'IfxGtm_Tom_Timer.h',0,9,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.h',0,0,0,0
	.byte	'string.h',0,10,0,0
	.byte	'stddef.h',0,10,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'IfxSrc_cfg.h',0,7,0,0
	.byte	'IfxScu_cfg.h',0,7,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxGtm.h',0,6,0,0
	.byte	'IfxGtm_Tbu.h',0,6,0,0,0
.L630:
.L628:
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.debug_info'
.L172:
	.word	594
	.half	3
	.word	.L173
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L175,.L174
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_init',0,1,169,1,9
	.word	.L344
	.byte	1,1,1
	.word	.L109,.L345,.L108
	.byte	4
	.byte	'driver',0,1,169,1,49
	.word	.L346,.L347
	.byte	4
	.byte	'config',0,1,169,1,88
	.word	.L348,.L349
	.byte	5
	.word	.L109,.L345
	.byte	6
	.byte	'channelMask',0,1,172,1,23
	.word	.L350,.L351
	.byte	6
	.byte	'channelsMask',0,1,173,1,23
	.word	.L350,.L352
	.byte	6
	.byte	'channelIndex',0,1,174,1,23
	.word	.L353,.L354
	.byte	6
	.byte	'maskShift',0,1,175,1,23
	.word	.L350,.L355
	.byte	6
	.byte	'timer',0,1,176,1,23
	.word	.L356,.L357
	.byte	7
	.word	.L358
	.byte	6
	.byte	'clock',0,1,205,1,26
	.word	.L362,.L363
	.byte	7
	.word	.L364
	.byte	6
	.byte	'channel',0,1,209,1,23
	.word	.L365,.L366
	.byte	8
	.word	.L367,.L368,.L13
	.byte	9
	.word	.L369,.L370
	.byte	9
	.word	.L371,.L372
	.byte	9
	.word	.L373,.L374
	.byte	10
	.word	.L375,.L376
	.byte	0,8
	.word	.L367,.L377,.L18
	.byte	9
	.word	.L369,.L370
	.byte	9
	.word	.L371,.L372
	.byte	9
	.word	.L373,.L374
	.byte	11
	.word	.L375,.L377,.L18
	.byte	0,0,5
	.word	.L378,.L345
	.byte	6
	.byte	'tOn',0,1,145,2,20
	.word	.L379,.L380
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.debug_abbrev'
.L173:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,8,29,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2,6,0
	.byte	0,10,11,0,49,16,85,6,0,0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.debug_line'
.L174:
	.word	.L632-.L631
.L631:
	.half	3
	.word	.L634-.L633
.L633:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L634:
	.byte	5,37,7,0,5,2
	.word	.L109
	.byte	3,177,1,1,5,9,3,119,1,5,36,9
	.half	.L517-.L109
	.byte	3,4,1,5,44,3,3,1,5,35,9
	.half	.L518-.L517
	.byte	3,2,1,5,37,9
	.half	.L635-.L518
	.byte	3,2,1,5,35,3,127,1,9
	.half	.L519-.L635
	.byte	3,1,1,9
	.half	.L636-.L519
	.byte	3,1,1,5,9,9
	.half	.L637-.L636
	.byte	3,116,1,5,49,9
	.half	.L513-.L637
	.byte	3,13,1,5,35,9
	.half	.L520-.L513
	.byte	1,5,49,9
	.half	.L638-.L520
	.byte	3,1,1,5,35,9
	.half	.L639-.L638
	.byte	1,5,49,9
	.half	.L640-.L639
	.byte	3,1,1,5,35,9
	.half	.L641-.L640
	.byte	1,5,54,9
	.half	.L642-.L641
	.byte	3,2,1,9
	.half	.L514-.L642
	.byte	3,1,1,5,26,9
	.half	.L522-.L514
	.byte	3,2,1,5,43,9
	.half	.L643-.L522
	.byte	1,5,36,9
	.half	.L644-.L643
	.byte	1,5,17,9
	.half	.L645-.L644
	.byte	1,5,15,9
	.half	.L646-.L645
	.byte	3,3,1,5,20,9
	.half	.L647-.L646
	.byte	1,5,23,9
	.half	.L648-.L647
	.byte	1,5,36,9
	.half	.L649-.L648
	.byte	1,5,5,9
	.half	.L650-.L649
	.byte	1,5,64,3,6,1,5,21,9
	.half	.L651-.L650
	.byte	1,5,24,9
	.half	.L652-.L651
	.byte	3,3,1,5,68,9
	.half	.L359-.L652
	.byte	3,4,1,5,80,9
	.half	.L653-.L359
	.byte	1,5,29,9
	.half	.L360-.L653
	.byte	3,124,1,5,32,9
	.half	.L654-.L360
	.byte	1,5,42,9
	.half	.L523-.L654
	.byte	1,5,80,3,4,1,5,32,9
	.half	.L361-.L523
	.byte	1,5,84,3,2,1,5,23,9
	.half	.L524-.L361
	.byte	1,5,68,1,5,43,9
	.half	.L8-.L524
	.byte	3,4,1,5,48,9
	.half	.L655-.L8
	.byte	1,5,62,9
	.half	.L656-.L655
	.byte	1,5,35,9
	.half	.L525-.L656
	.byte	3,1,1,5,37,9
	.half	.L657-.L525
	.byte	3,1,1,5,60,9
	.half	.L515-.L657
	.byte	3,4,1,5,27,9
	.half	.L527-.L515
	.byte	3,4,1,5,73,9
	.half	.L658-.L527
	.byte	3,127,1,5,13,9
	.half	.L528-.L658
	.byte	3,1,1,5,45,9
	.half	.L659-.L528
	.byte	3,2,1,5,68,9
	.half	.L660-.L659
	.byte	1,5,51,9
	.half	.L661-.L660
	.byte	3,1,1,5,74,9
	.half	.L530-.L661
	.byte	1,5,72,9
	.half	.L531-.L530
	.byte	3,3,1,5,27,9
	.half	.L662-.L531
	.byte	3,1,1,5,60,9
	.half	.L663-.L662
	.byte	3,127,1,5,24,7,9
	.half	.L664-.L663
	.byte	3,172,127,1,5,44,9
	.half	.L12-.L664
	.byte	3,212,0,1,5,13,9
	.half	.L665-.L12
	.byte	3,1,1,5,60,9
	.half	.L666-.L665
	.byte	3,2,1,5,44,1,5,60,9
	.half	.L532-.L666
	.byte	1,5,62,9
	.half	.L533-.L532
	.byte	3,1,1,5,46,1,5,62,9
	.half	.L534-.L533
	.byte	1,5,94,9
	.half	.L535-.L534
	.byte	3,1,1,5,45,9
	.half	.L667-.L535
	.byte	1,5,87,9
	.half	.L668-.L667
	.byte	1,5,19,9
	.half	.L669-.L668
	.byte	3,3,1,5,9,9
	.half	.L670-.L669
	.byte	1,5,44,7,9
	.half	.L671-.L670
	.byte	3,2,1,5,49,9
	.half	.L672-.L671
	.byte	1,5,54,9
	.half	.L673-.L672
	.byte	3,1,1,5,123,9
	.half	.L674-.L673
	.byte	3,1,1,5,111,9
	.half	.L675-.L674
	.byte	1,5,76,9
	.half	.L368-.L675
	.byte	1,5,81,9
	.half	.L676-.L368
	.byte	1,5,45,9
	.half	.L13-.L676
	.byte	3,4,1,5,52,9
	.half	.L677-.L13
	.byte	1,5,66,9
	.half	.L678-.L677
	.byte	1,5,37,9
	.half	.L679-.L678
	.byte	3,1,1,5,82,9
	.half	.L680-.L679
	.byte	3,91,1,5,39,9
	.half	.L681-.L680
	.byte	3,38,1,5,60,9
	.half	.L682-.L681
	.byte	3,4,1,5,62,9
	.half	.L683-.L682
	.byte	3,4,1,5,72,9
	.half	.L684-.L683
	.byte	3,127,1,5,13,9
	.half	.L538-.L684
	.byte	3,1,1,5,45,9
	.half	.L685-.L538
	.byte	3,2,1,5,68,9
	.half	.L539-.L685
	.byte	1,5,51,9
	.half	.L686-.L539
	.byte	3,1,1,5,74,9
	.half	.L687-.L686
	.byte	1,5,60,9
	.half	.L540-.L687
	.byte	3,2,1,5,44,1,5,60,9
	.half	.L541-.L540
	.byte	1,5,62,9
	.half	.L542-.L541
	.byte	3,1,1,5,46,1,5,62,9
	.half	.L543-.L542
	.byte	1,5,94,9
	.half	.L544-.L543
	.byte	3,1,1,5,45,9
	.half	.L688-.L544
	.byte	1,5,87,9
	.half	.L689-.L688
	.byte	1,5,19,9
	.half	.L690-.L689
	.byte	3,3,1,5,9,9
	.half	.L691-.L690
	.byte	1,5,44,7,9
	.half	.L692-.L691
	.byte	3,2,1,5,51,9
	.half	.L693-.L692
	.byte	1,5,54,9
	.half	.L694-.L693
	.byte	3,1,1,5,127,9
	.half	.L695-.L694
	.byte	3,1,1,5,115,9
	.half	.L696-.L695
	.byte	1,5,78,9
	.half	.L377-.L696
	.byte	1,5,85,9
	.half	.L697-.L377
	.byte	1,5,82,9
	.half	.L18-.L697
	.byte	3,68,1,5,55,9
	.half	.L7-.L18
	.byte	1,5,68,9
	.half	.L698-.L7
	.byte	1,5,38,7,9
	.half	.L699-.L698
	.byte	3,192,0,1,5,61,9
	.half	.L378-.L699
	.byte	3,2,1,5,59,9
	.half	.L700-.L378
	.byte	1,5,40,9
	.half	.L701-.L700
	.byte	3,1,1,5,70,9
	.half	.L548-.L701
	.byte	3,3,1,5,49,1,5,76,9
	.half	.L702-.L548
	.byte	1,5,73,9
	.half	.L549-.L702
	.byte	1,5,76,1,5,34,9
	.half	.L550-.L549
	.byte	3,1,1,5,56,9
	.half	.L703-.L550
	.byte	3,1,1,5,49,1,5,76,9
	.half	.L704-.L703
	.byte	1,5,73,9
	.half	.L551-.L704
	.byte	1,5,76,1,5,23,9
	.half	.L552-.L551
	.byte	3,3,1,5,84,1,5,68,9
	.half	.L545-.L552
	.byte	1,5,61,9
	.half	.L23-.L545
	.byte	3,2,1,5,63,9
	.half	.L554-.L23
	.byte	3,1,1,5,82,9
	.half	.L556-.L554
	.byte	3,125,1,5,55,9
	.half	.L22-.L556
	.byte	1,5,68,9
	.half	.L705-.L22
	.byte	1,5,12,7,9
	.half	.L706-.L705
	.byte	3,6,1,5,1,3,1,1,7,9
	.half	.L176-.L706
	.byte	0,1,1
.L632:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.debug_ranges'
.L175:
	.word	-1,.L109,0,.L176-.L109,0,0
.L358:
	.word	-1,.L109,.L359-.L109,.L360-.L109,.L361-.L109,.L345-.L109,0,0
.L364:
	.word	-1,.L109,.L8-.L109,.L18-.L109,-1,.L111,0,.L316-.L111,-1,.L113,0,.L311-.L113,-1,.L115,0,.L301-.L115,-1
	.word	.L117,0,.L296-.L117,-1,.L121,0,.L276-.L121,0,0
.L376:
	.word	-1,.L109,.L368-.L109,.L13-.L109,-1,.L119,0,.L286-.L119,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.debug_info'
.L177:
	.word	273
	.half	3
	.word	.L178
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L180,.L179
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_initConfig',0,1,164,2,6,1,1,1
	.word	.L123,.L381,.L122
	.byte	4
	.byte	'config',0,1,164,2,59
	.word	.L382,.L383
	.byte	5
	.word	.L123,.L381
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.debug_abbrev'
.L178:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.debug_line'
.L179:
	.word	.L708-.L707
.L707:
	.half	3
	.word	.L710-.L709
.L709:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L710:
	.byte	5,6,7,0,5,2
	.word	.L123
	.byte	3,163,2,1,5,38,9
	.half	.L558-.L123
	.byte	3,2,1,5,24,9
	.half	.L557-.L558
	.byte	3,1,1,5,22,9
	.half	.L711-.L557
	.byte	1,5,24,9
	.half	.L712-.L711
	.byte	3,1,1,5,22,1,9
	.half	.L713-.L712
	.byte	3,1,1,9
	.half	.L714-.L713
	.byte	3,1,1,5,24,9
	.half	.L715-.L714
	.byte	3,1,1,5,22,1,5,1,9
	.half	.L716-.L715
	.byte	3,1,1,7,9
	.half	.L181-.L716
	.byte	0,1,1
.L708:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.debug_ranges'
.L180:
	.word	-1,.L123,0,.L181-.L123,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.debug_info'
.L182:
	.word	274
	.half	3
	.word	.L183
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L185,.L184
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_getDeadtime',0,1,151,1,9
	.word	.L384
	.byte	1,1,1
	.word	.L101,.L385,.L100
	.byte	4
	.byte	'driver',0,1,151,1,56
	.word	.L346,.L386
	.byte	5
	.word	.L387
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.debug_abbrev'
.L183:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.debug_line'
.L184:
	.word	.L718-.L717
.L717:
	.half	3
	.word	.L720-.L719
.L719:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0,0
.L720:
	.byte	5,78,7,0,5,2
	.word	.L101
	.byte	3,152,1,1,4,2,5,12,9
	.half	.L721-.L101
	.byte	3,159,2,1,4,1,5,1,9
	.half	.L512-.L721
	.byte	3,226,125,1,7,9
	.half	.L186-.L512
	.byte	0,1,1
.L718:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.debug_ranges'
.L185:
	.word	-1,.L101,0,.L186-.L101,0,0
.L387:
	.word	-1,.L101,0,.L385-.L101,-1,.L103,0,.L306-.L103,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.debug_info'
.L187:
	.word	278
	.half	3
	.word	.L188
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L190,.L189
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_getMinPulse',0,1,157,1,9
	.word	.L384
	.byte	1,1,1
	.word	.L105,.L388,.L104
	.byte	4
	.byte	'driver',0,1,157,1,56
	.word	.L346,.L389
	.byte	5
	.word	.L105,.L388
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.debug_abbrev'
.L188:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.debug_line'
.L189:
	.word	.L723-.L722
.L722:
	.half	3
	.word	.L725-.L724
.L724:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0,0
.L725:
	.byte	5,78,7,0,5,2
	.word	.L105
	.byte	3,158,1,1,5,102,9
	.half	.L726-.L105
	.byte	1,5,88,9
	.half	.L727-.L726
	.byte	1,4,2,5,12,9
	.half	.L728-.L727
	.byte	3,153,2,1,4,1,5,1,9
	.half	.L729-.L728
	.byte	3,232,125,1,7,9
	.half	.L191-.L729
	.byte	0,1,1
.L723:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.debug_ranges'
.L190:
	.word	-1,.L105,0,.L191-.L105,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.debug_info'
.L192:
	.word	274
	.half	3
	.word	.L193
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L195,.L194
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_getMode',0,1,163,1,14
	.word	.L390
	.byte	1,1,1
	.word	.L107,.L391,.L106
	.byte	4
	.byte	'driver',0,1,163,1,57
	.word	.L346,.L392
	.byte	5
	.word	.L107,.L391
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.debug_abbrev'
.L193:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.debug_line'
.L194:
	.word	.L731-.L730
.L730:
	.half	3
	.word	.L733-.L732
.L732:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L733:
	.byte	5,24,7,0,5,2
	.word	.L107
	.byte	3,164,1,1,5,1,9
	.half	.L734-.L107
	.byte	3,1,1,7,9
	.half	.L196-.L734
	.byte	0,1,1
.L731:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.debug_ranges'
.L195:
	.word	-1,.L107,0,.L196-.L107,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.debug_info'
.L197:
	.word	296
	.half	3
	.word	.L198
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L200,.L199
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setDeadtime',0,1,175,2,9
	.word	.L344
	.byte	1,1,1
	.word	.L125,.L393,.L124
	.byte	4
	.byte	'driver',0,1,175,2,56
	.word	.L346,.L394
	.byte	4
	.byte	'deadtime',0,1,175,2,72
	.word	.L384,.L395
	.byte	5
	.word	.L396
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.debug_abbrev'
.L198:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.debug_line'
.L199:
	.word	.L736-.L735
.L735:
	.half	3
	.word	.L738-.L737
.L737:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L738:
	.byte	5,57,7,0,5,2
	.word	.L125
	.byte	3,176,2,1,5,27,9
	.half	.L739-.L125
	.byte	3,1,1,5,12,9
	.half	.L559-.L739
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L201-.L559
	.byte	0,1,1
.L736:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.debug_ranges'
.L200:
	.word	-1,.L125,0,.L201-.L125,0,0
.L396:
	.word	-1,.L125,0,.L393-.L125,-1,.L127,0,.L321-.L127,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.debug_info'
.L202:
	.word	300
	.half	3
	.word	.L203
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L205,.L204
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setMinPulse',0,1,184,2,9
	.word	.L344
	.byte	1,1,1
	.word	.L129,.L397,.L128
	.byte	4
	.byte	'driver',0,1,184,2,56
	.word	.L346,.L398
	.byte	4
	.byte	'minPulse',0,1,184,2,72
	.word	.L384,.L399
	.byte	5
	.word	.L129,.L397
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.debug_abbrev'
.L203:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.debug_line'
.L204:
	.word	.L741-.L740
.L740:
	.half	3
	.word	.L743-.L742
.L742:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L743:
	.byte	5,57,7,0,5,2
	.word	.L129
	.byte	3,185,2,1,5,49,9
	.half	.L560-.L129
	.byte	3,2,1,5,12,9
	.half	.L744-.L560
	.byte	3,3,1,5,35,9
	.half	.L745-.L744
	.byte	3,125,1,5,27,1,5,48,9
	.half	.L746-.L745
	.byte	3,1,1,5,56,9
	.half	.L747-.L746
	.byte	1,5,27,1,5,1,9
	.half	.L748-.L747
	.byte	3,3,1,7,9
	.half	.L206-.L748
	.byte	0,1,1
.L741:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.debug_ranges'
.L205:
	.word	-1,.L129,0,.L206-.L129,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.debug_info'
.L207:
	.word	394
	.half	3
	.word	.L208
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L210,.L209
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setMode',0,1,195,2,9
	.word	.L344
	.byte	1,1,1
	.word	.L131,.L400,.L130
	.byte	4
	.byte	'driver',0,1,195,2,52
	.word	.L346,.L401
	.byte	4
	.byte	'mode',0,1,195,2,73
	.word	.L390,.L402
	.byte	5
	.word	.L403
	.byte	6
	.byte	'result',0,1,197,2,28
	.word	.L344,.L404
	.byte	6
	.byte	'base',0,1,198,2,28
	.word	.L405,.L406
	.byte	7
	.word	.L407,.L27
	.byte	6
	.byte	'channelIndex',0,1,241,2,20
	.word	.L353,.L408
	.byte	7
	.word	.L34,.L409
	.byte	6
	.byte	'channel',0,1,245,2,31
	.word	.L365,.L410
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.debug_abbrev'
.L208:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0
	.byte	3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.debug_line'
.L209:
	.word	.L750-.L749
.L749:
	.half	3
	.word	.L752-.L751
.L751:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L752:
	.byte	5,9,7,0,5,2
	.word	.L131
	.byte	3,194,2,1,5,13,9
	.half	.L562-.L131
	.byte	3,5,1,5,35,9
	.half	.L753-.L562
	.byte	3,125,1,5,5,9
	.half	.L563-.L753
	.byte	3,3,1,5,13,7,9
	.half	.L754-.L563
	.byte	3,2,1,5,66,7,9
	.half	.L755-.L754
	.byte	1,5,71,9
	.half	.L756-.L755
	.byte	1,5,79,9
	.half	.L757-.L756
	.byte	1,5,20,7,9
	.half	.L28-.L757
	.byte	3,2,1,9
	.half	.L758-.L28
	.byte	3,1,1,5,32,9
	.half	.L29-.L758
	.byte	3,5,1,5,57,9
	.half	.L759-.L29
	.byte	3,1,1,5,62,9
	.half	.L760-.L759
	.byte	1,5,32,9
	.half	.L561-.L760
	.byte	1,5,62,9
	.half	.L761-.L561
	.byte	3,1,1,5,32,9
	.half	.L762-.L761
	.byte	1,5,62,9
	.half	.L763-.L762
	.byte	3,1,1,5,32,9
	.half	.L764-.L763
	.byte	1,5,9,9
	.half	.L765-.L764
	.byte	3,2,1,5,58,7,9
	.half	.L766-.L765
	.byte	3,2,1,5,28,9
	.half	.L767-.L766
	.byte	1,5,17,9
	.half	.L30-.L767
	.byte	3,6,1,5,9,9
	.half	.L768-.L30
	.byte	1,5,39,7,9
	.half	.L769-.L768
	.byte	3,2,1,5,31,9
	.half	.L770-.L769
	.byte	1,5,39,9
	.half	.L771-.L770
	.byte	3,1,1,5,46,9
	.half	.L772-.L771
	.byte	3,127,1,5,39,9
	.half	.L31-.L772
	.byte	3,5,1,5,31,9
	.half	.L773-.L31
	.byte	1,5,39,9
	.half	.L774-.L773
	.byte	3,1,1,5,31,9
	.half	.L32-.L774
	.byte	1,9
	.half	.L407-.L32
	.byte	3,12,1,5,92,1,5,76,9
	.half	.L564-.L407
	.byte	1,5,72,9
	.half	.L34-.L564
	.byte	3,5,1,5,38,9
	.half	.L775-.L34
	.byte	3,127,1,5,68,9
	.half	.L565-.L775
	.byte	3,1,1,5,27,7,9
	.half	.L776-.L565
	.byte	3,1,1,5,21,9
	.half	.L777-.L776
	.byte	3,1,1,5,70,9
	.half	.L35-.L777
	.byte	1,5,24,9
	.half	.L778-.L35
	.byte	3,149,126,1,5,52,9
	.half	.L36-.L778
	.byte	3,233,1,1,5,21,9
	.half	.L779-.L36
	.byte	3,1,1,5,72,9
	.half	.L566-.L779
	.byte	3,4,1,5,40,9
	.half	.L780-.L566
	.byte	3,127,1,5,90,9
	.half	.L567-.L780
	.byte	3,119,1,5,68,9
	.half	.L781-.L567
	.byte	3,10,1,5,70,7,9
	.half	.L782-.L781
	.byte	3,1,1,5,24,9
	.half	.L783-.L782
	.byte	3,145,126,1,5,21,3,240,1,1,5,27,9
	.half	.L37-.L783
	.byte	1,5,52,9
	.half	.L38-.L37
	.byte	3,126,1,5,21,9
	.half	.L784-.L38
	.byte	3,1,1,5,90,9
	.half	.L409-.L784
	.byte	3,117,1,5,63,9
	.half	.L33-.L409
	.byte	1,5,76,9
	.half	.L785-.L33
	.byte	1,5,5,7,9
	.half	.L27-.L785
	.byte	3,17,1,5,1,3,1,1,7,9
	.half	.L211-.L27
	.byte	0,1,1
.L750:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.debug_ranges'
.L210:
	.word	-1,.L131,0,.L211-.L131,0,0
.L403:
	.word	-1,.L131,0,.L400-.L131,-1,.L133,0,.L326-.L133,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.debug_info'
.L212:
	.word	289
	.half	3
	.word	.L213
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L215,.L214
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setOnTime',0,1,136,3,6,1,1,1
	.word	.L135,.L411,.L134
	.byte	4
	.byte	'driver',0,1,136,3,51
	.word	.L346,.L412
	.byte	4
	.byte	'tOn',0,1,136,3,75
	.word	.L413,.L414
	.byte	5
	.word	.L135,.L411
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.debug_abbrev'
.L213:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.debug_line'
.L214:
	.word	.L787-.L786
.L786:
	.half	3
	.word	.L789-.L788
.L788:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L789:
	.byte	5,11,7,0,5,2
	.word	.L135
	.byte	3,137,3,1,5,28,9
	.half	.L790-.L135
	.byte	1,5,1,7,9
	.half	.L216-.L790
	.byte	3,1,0,1,1
.L787:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.debug_ranges'
.L215:
	.word	-1,.L135,0,.L216-.L135,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setOnTimeAndShift')
	.sect	'.debug_info'
.L217:
	.word	316
	.half	3
	.word	.L218
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L220,.L219
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setOnTimeAndShift',0,1,142,3,6,1,1,1
	.word	.L137,.L415,.L136
	.byte	4
	.byte	'driver',0,1,142,3,59
	.word	.L346,.L416
	.byte	4
	.byte	'tOn',0,1,142,3,83
	.word	.L413,.L417
	.byte	4
	.byte	'shift',0,1,142,3,104
	.word	.L413,.L418
	.byte	5
	.word	.L137,.L415
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setOnTimeAndShift')
	.sect	'.debug_abbrev'
.L218:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setOnTimeAndShift')
	.sect	'.debug_line'
.L219:
	.word	.L792-.L791
.L791:
	.half	3
	.word	.L794-.L793
.L793:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L794:
	.byte	5,11,7,0,5,2
	.word	.L137
	.byte	3,143,3,1,5,41,9
	.half	.L795-.L137
	.byte	1,5,1,7,9
	.half	.L221-.L795
	.byte	3,1,0,1,1
.L792:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setOnTimeAndShift')
	.sect	'.debug_ranges'
.L220:
	.word	-1,.L137,0,.L221-.L137,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setPulse')
	.sect	'.debug_info'
.L222:
	.word	308
	.half	3
	.word	.L223
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L225,.L224
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setPulse',0,1,148,3,6,1,1,1
	.word	.L139,.L419,.L138
	.byte	4
	.byte	'driver',0,1,148,3,50
	.word	.L346,.L420
	.byte	4
	.byte	'tOn',0,1,148,3,67
	.word	.L421,.L422
	.byte	4
	.byte	'offset',0,1,148,3,81
	.word	.L421,.L423
	.byte	5
	.word	.L139,.L419
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setPulse')
	.sect	'.debug_abbrev'
.L223:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setPulse')
	.sect	'.debug_line'
.L224:
	.word	.L797-.L796
.L796:
	.half	3
	.word	.L799-.L798
.L798:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L799:
	.byte	5,11,7,0,5,2
	.word	.L139
	.byte	3,149,3,1,5,38,9
	.half	.L800-.L139
	.byte	1,5,1,7,9
	.half	.L226-.L800
	.byte	3,1,0,1,1
.L797:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setPulse')
	.sect	'.debug_ranges'
.L225:
	.word	-1,.L139,0,.L226-.L139,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.debug_info'
.L227:
	.word	319
	.half	3
	.word	.L228
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L230,.L229
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_setupChannels',0,1,154,3,6,1,1,1
	.word	.L141,.L424,.L140
	.byte	4
	.byte	'driver',0,1,154,3,55
	.word	.L346,.L425
	.byte	4
	.byte	'activeCh',0,1,154,3,72
	.word	.L426,.L427
	.byte	4
	.byte	'stuckSt',0,1,154,3,91
	.word	.L426,.L428
	.byte	5
	.word	.L141,.L424
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.debug_abbrev'
.L228:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.debug_line'
.L229:
	.word	.L802-.L801
.L801:
	.half	3
	.word	.L804-.L803
.L803:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L804:
	.byte	5,1,7,0,5,2
	.word	.L141
	.byte	3,159,3,1,7,9
	.half	.L231-.L141
	.byte	0,1,1
.L802:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.debug_ranges'
.L230:
	.word	-1,.L141,0,.L231-.L141,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_info'
.L232:
	.word	300
	.half	3
	.word	.L233
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L235,.L234
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_stdIfPwmHlInit',0,1,163,3,9
	.word	.L344
	.byte	1,1,1
	.word	.L143,.L429,.L142
	.byte	4
	.byte	'stdif',0,1,163,3,57
	.word	.L430,.L431
	.byte	4
	.byte	'driver',0,1,163,3,82
	.word	.L346,.L432
	.byte	5
	.word	.L143,.L429
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_abbrev'
.L233:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_line'
.L234:
	.word	.L806-.L805
.L805:
	.half	3
	.word	.L808-.L807
.L807:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L808:
	.byte	5,19,7,0,5,2
	.word	.L143
	.byte	3,165,3,1,5,9,3,125,1,5,22,9
	.half	.L569-.L143
	.byte	3,3,1,5,9,3,125,1,5,22,9
	.half	.L570-.L569
	.byte	3,3,1,5,33,9
	.half	.L568-.L570
	.byte	3,4,1,5,35,9
	.half	.L809-.L568
	.byte	3,1,1,5,33,9
	.half	.L810-.L809
	.byte	1,5,35,9
	.half	.L811-.L810
	.byte	3,1,1,5,33,9
	.half	.L812-.L811
	.byte	1,5,35,9
	.half	.L813-.L812
	.byte	3,1,1,5,33,9
	.half	.L814-.L813
	.byte	1,5,35,9
	.half	.L815-.L814
	.byte	3,1,1,5,33,9
	.half	.L816-.L815
	.byte	1,5,35,9
	.half	.L817-.L816
	.byte	3,1,1,5,33,9
	.half	.L818-.L817
	.byte	1,5,35,9
	.half	.L819-.L818
	.byte	3,1,1,5,33,9
	.half	.L820-.L819
	.byte	1,5,35,9
	.half	.L821-.L820
	.byte	3,1,1,5,33,9
	.half	.L822-.L821
	.byte	1,5,35,9
	.half	.L823-.L822
	.byte	3,1,1,5,33,9
	.half	.L824-.L823
	.byte	1,5,35,9
	.half	.L825-.L824
	.byte	3,1,1,5,33,9
	.half	.L826-.L825
	.byte	1,5,35,9
	.half	.L827-.L826
	.byte	3,1,1,5,33,9
	.half	.L828-.L827
	.byte	1,5,43,9
	.half	.L829-.L828
	.byte	3,1,1,5,58,9
	.half	.L830-.L829
	.byte	1,5,12,9
	.half	.L831-.L830
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L236-.L831
	.byte	0,1,1
.L806:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_ranges'
.L235:
	.word	-1,.L143,0,.L236-.L143,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_updateAndShiftOff')
	.sect	'.debug_info'
.L237:
	.word	315
	.half	3
	.word	.L238
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L240,.L239
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_updateAndShiftOff',0,1,188,3,17,1,1
	.word	.L145,.L433,.L144
	.byte	4
	.byte	'driver',0,1,188,3,70
	.word	.L346,.L434
	.byte	4
	.byte	'tOn',0,1,188,3,94
	.word	.L413,.L435
	.byte	4
	.byte	'shift',0,1,188,3,115
	.word	.L413,.L436
	.byte	5
	.word	.L145,.L433
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_updateAndShiftOff')
	.sect	'.debug_abbrev'
.L238:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_updateAndShiftOff')
	.sect	'.debug_line'
.L239:
	.word	.L833-.L832
.L832:
	.half	3
	.word	.L835-.L834
.L834:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L835:
	.byte	5,40,7,0,5,2
	.word	.L145
	.byte	3,192,3,1,5,1,9
	.half	.L241-.L145
	.byte	3,1,0,1,1
.L833:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_updateAndShiftOff')
	.sect	'.debug_ranges'
.L240:
	.word	-1,.L145,0,.L241-.L145,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.debug_info'
.L242:
	.word	418
	.half	3
	.word	.L243
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L245,.L244
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_updateCenterAligned',0,1,197,3,17,1,1
	.word	.L147,.L437,.L146
	.byte	4
	.byte	'driver',0,1,197,3,72
	.word	.L346,.L438
	.byte	4
	.byte	'tOn',0,1,197,3,96
	.word	.L413,.L439
	.byte	5
	.word	.L440
	.byte	6
	.byte	'channelIndex',0,1,199,3,20
	.word	.L344,.L441
	.byte	6
	.byte	'period',0,1,200,3,20
	.word	.L353,.L442
	.byte	6
	.byte	'deadtime',0,1,201,3,20
	.word	.L353,.L443
	.byte	5
	.word	.L444
	.byte	6
	.byte	'x',0,1,207,3,24
	.word	.L353,.L446
	.byte	6
	.byte	'cm0',0,1,208,3,24
	.word	.L353,.L447
	.byte	6
	.byte	'cm1',0,1,208,3,29
	.word	.L353,.L448
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.debug_abbrev'
.L243:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58,15,59
	.byte	15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.debug_line'
.L244:
	.word	.L837-.L836
.L836:
	.half	3
	.word	.L839-.L838
.L838:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L839:
	.byte	5,17,7,0,5,2
	.word	.L147
	.byte	3,196,3,1,5,68,9
	.half	.L575-.L147
	.byte	3,8,1,5,16,9
	.half	.L42-.L575
	.byte	3,4,1,5,25,9
	.half	.L840-.L42
	.byte	3,2,1,5,16,9
	.half	.L841-.L840
	.byte	3,126,1,5,9,9
	.half	.L578-.L841
	.byte	3,2,1,5,24,7,9
	.half	.L842-.L578
	.byte	3,2,1,5,30,9
	.half	.L43-.L842
	.byte	3,5,1,5,13,9
	.half	.L843-.L43
	.byte	1,5,47,7,9
	.half	.L844-.L843
	.byte	1,5,15,7,9
	.half	.L44-.L844
	.byte	3,2,1,5,18,1,5,34,9
	.half	.L45-.L44
	.byte	3,2,1,5,14,9
	.half	.L845-.L45
	.byte	1,5,15,9
	.half	.L846-.L845
	.byte	3,2,1,5,63,9
	.half	.L46-.L846
	.byte	3,8,1,5,72,9
	.half	.L847-.L46
	.byte	1,5,9,9
	.half	.L848-.L847
	.byte	3,126,1,5,24,7,9
	.half	.L849-.L848
	.byte	3,3,1,5,69,9
	.half	.L850-.L849
	.byte	3,1,1,5,24,9
	.half	.L579-.L850
	.byte	3,2,1,5,17,9
	.half	.L851-.L579
	.byte	3,1,1,5,80,3,125,1,5,14,9
	.half	.L48-.L851
	.byte	3,5,1,5,17,7,9
	.half	.L852-.L48
	.byte	3,2,1,5,26,9
	.half	.L581-.L852
	.byte	3,1,1,5,93,9
	.half	.L582-.L581
	.byte	3,1,1,5,20,3,126,1,5,27,9
	.half	.L50-.L582
	.byte	3,7,1,9
	.half	.L853-.L50
	.byte	3,1,1,5,97,9
	.half	.L584-.L853
	.byte	3,1,1,5,94,9
	.half	.L854-.L584
	.byte	3,1,1,5,106,9
	.half	.L855-.L854
	.byte	1,5,63,9
	.half	.L49-.L855
	.byte	1,5,74,9
	.half	.L856-.L49
	.byte	1,5,106,9
	.half	.L587-.L856
	.byte	1,5,82,9
	.half	.L445-.L587
	.byte	3,82,1,5,55,9
	.half	.L41-.L445
	.byte	1,5,68,9
	.half	.L857-.L41
	.byte	1,5,1,7,9
	.half	.L858-.L857
	.byte	3,49,1,7,9
	.half	.L246-.L858
	.byte	0,1,1
.L837:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.debug_ranges'
.L245:
	.word	-1,.L147,0,.L246-.L147,0,0
.L440:
	.word	-1,.L147,0,.L437-.L147,-1,.L149,0,.L336-.L149,0,0
.L444:
	.word	-1,.L147,.L42-.L147,.L445-.L147,-1,.L151,0,.L281-.L151,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.debug_info'
.L247:
	.word	424
	.half	3
	.word	.L248
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L250,.L249
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_updateEdgeAligned',0,1,129,4,17,1,1
	.word	.L153,.L449,.L152
	.byte	4
	.byte	'driver',0,1,129,4,70
	.word	.L346,.L450
	.byte	4
	.byte	'tOn',0,1,129,4,94
	.word	.L413,.L451
	.byte	5
	.word	.L153,.L449
	.byte	6
	.byte	'channelIndex',0,1,131,4,20
	.word	.L344,.L452
	.byte	6
	.byte	'period',0,1,132,4,20
	.word	.L353,.L453
	.byte	6
	.byte	'deadtime',0,1,133,4,20
	.word	.L353,.L454
	.byte	5
	.word	.L53,.L455
	.byte	6
	.byte	'x',0,1,139,4,24
	.word	.L353,.L456
	.byte	6
	.byte	'cm0',0,1,140,4,24
	.word	.L353,.L457
	.byte	6
	.byte	'cm1',0,1,140,4,29
	.word	.L353,.L458
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.debug_abbrev'
.L248:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.debug_line'
.L249:
	.word	.L860-.L859
.L859:
	.half	3
	.word	.L862-.L861
.L861:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L862:
	.byte	5,17,7,0,5,2
	.word	.L153
	.byte	3,128,4,1,5,68,9
	.half	.L589-.L153
	.byte	3,8,1,5,16,9
	.half	.L53-.L589
	.byte	3,4,1,5,25,9
	.half	.L863-.L53
	.byte	3,2,1,5,16,9
	.half	.L864-.L863
	.byte	3,126,1,5,9,9
	.half	.L594-.L864
	.byte	3,2,1,5,24,7,9
	.half	.L865-.L594
	.byte	3,2,1,5,30,9
	.half	.L54-.L865
	.byte	3,5,1,5,13,9
	.half	.L866-.L54
	.byte	1,5,47,7,9
	.half	.L867-.L866
	.byte	1,5,15,7,9
	.half	.L55-.L867
	.byte	3,2,1,5,18,1,5,34,9
	.half	.L56-.L55
	.byte	3,2,1,5,14,9
	.half	.L868-.L56
	.byte	1,5,15,9
	.half	.L869-.L868
	.byte	3,2,1,5,63,9
	.half	.L57-.L869
	.byte	3,8,1,5,72,9
	.half	.L870-.L57
	.byte	1,5,9,9
	.half	.L871-.L870
	.byte	3,126,1,5,24,7,9
	.half	.L872-.L871
	.byte	3,3,1,5,69,9
	.half	.L873-.L872
	.byte	3,1,1,5,24,9
	.half	.L874-.L873
	.byte	3,2,1,5,17,9
	.half	.L875-.L874
	.byte	3,1,1,5,80,3,125,1,5,14,9
	.half	.L59-.L875
	.byte	3,5,1,5,17,7,9
	.half	.L876-.L59
	.byte	3,2,1,5,26,9
	.half	.L877-.L876
	.byte	3,1,1,5,93,9
	.half	.L590-.L877
	.byte	3,1,1,5,20,3,126,1,5,17,9
	.half	.L61-.L590
	.byte	3,7,1,5,97,9
	.half	.L591-.L61
	.byte	3,2,1,5,94,9
	.half	.L878-.L591
	.byte	3,1,1,5,106,9
	.half	.L879-.L878
	.byte	1,5,63,9
	.half	.L60-.L879
	.byte	1,5,74,9
	.half	.L880-.L60
	.byte	1,5,106,9
	.half	.L593-.L880
	.byte	1,5,82,9
	.half	.L455-.L593
	.byte	3,82,1,5,55,9
	.half	.L52-.L455
	.byte	1,5,68,9
	.half	.L881-.L52
	.byte	1,5,1,7,9
	.half	.L882-.L881
	.byte	3,49,1,7,9
	.half	.L251-.L882
	.byte	0,1,1
.L860:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.debug_ranges'
.L250:
	.word	-1,.L153,0,.L251-.L153,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.debug_info'
.L252:
	.word	345
	.half	3
	.word	.L253
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L255,.L254
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_updateOff',0,1,189,4,17,1,1
	.word	.L155,.L459,.L154
	.byte	4
	.byte	'driver',0,1,189,4,62
	.word	.L346,.L460
	.byte	4
	.byte	'tOn',0,1,189,4,86
	.word	.L413,.L461
	.byte	5
	.word	.L155,.L459
	.byte	5
	.word	.L462,.L459
	.byte	6
	.byte	'channelIndex',0,1,192,4,11
	.word	.L344,.L463
	.byte	6
	.byte	'period',0,1,193,4,20
	.word	.L353,.L464
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.debug_abbrev'
.L253:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.debug_line'
.L254:
	.word	.L884-.L883
.L883:
	.half	3
	.word	.L886-.L885
.L885:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L886:
	.byte	5,17,7,0,5,2
	.word	.L155
	.byte	3,188,4,1,5,20,9
	.half	.L462-.L155
	.byte	3,6,1,5,23,9
	.half	.L887-.L462
	.byte	3,2,1,5,33,9
	.half	.L595-.L887
	.byte	3,126,1,5,68,9
	.half	.L597-.L595
	.byte	3,2,1,5,59,9
	.half	.L64-.L597
	.byte	3,2,1,5,13,9
	.half	.L888-.L64
	.byte	3,1,1,5,46,3,127,1,5,60,9
	.half	.L889-.L888
	.byte	3,1,1,5,68,9
	.half	.L890-.L889
	.byte	3,127,1,5,60,9
	.half	.L891-.L890
	.byte	3,1,1,5,59,9
	.half	.L892-.L891
	.byte	3,1,1,5,93,9
	.half	.L893-.L892
	.byte	1,5,46,1,5,98,9
	.half	.L894-.L893
	.byte	1,5,70,9
	.half	.L895-.L894
	.byte	1,5,98,9
	.half	.L896-.L895
	.byte	1,5,82,9
	.half	.L897-.L896
	.byte	3,124,1,5,55,9
	.half	.L63-.L897
	.byte	1,5,68,9
	.half	.L898-.L63
	.byte	1,5,1,7,9
	.half	.L899-.L898
	.byte	3,6,1,7,9
	.half	.L256-.L899
	.byte	0,1,1
.L884:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.debug_ranges'
.L255:
	.word	-1,.L155,0,.L256-.L155,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_updatePulse')
	.sect	'.debug_info'
.L257:
	.word	679
	.half	3
	.word	.L258
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L260,.L259
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_updatePulse',0,1,206,4,17,1,1
	.word	.L157,.L465,.L156
	.byte	4
	.byte	'driver',0,1,206,4,64
	.word	.L346,.L466
	.byte	4
	.byte	'tOn',0,1,206,4,81
	.word	.L421,.L467
	.byte	4
	.byte	'offset',0,1,206,4,95
	.word	.L421,.L468
	.byte	5
	.word	.L157,.L465
	.byte	6
	.byte	'channelIndex',0,1,208,4,20
	.word	.L344,.L469
	.byte	6
	.byte	'period',0,1,209,4,20
	.word	.L353,.L470
	.byte	7
	.word	.L471
	.byte	6
	.byte	'x',0,1,216,4,24
	.word	.L353,.L473
	.byte	6
	.byte	'cm0',0,1,218,4,24
	.word	.L353,.L474
	.byte	6
	.byte	'cm1',0,1,218,4,29
	.word	.L353,.L475
	.byte	8
	.word	.L476,.L477,.L478
	.byte	9
	.word	.L479,.L480
	.byte	9
	.word	.L481,.L482
	.byte	10
	.word	.L483,.L477,.L478
	.byte	0,8
	.word	.L476,.L478,.L484
	.byte	9
	.word	.L479,.L480
	.byte	9
	.word	.L481,.L482
	.byte	10
	.word	.L483,.L478,.L484
	.byte	0,0,5
	.word	.L78,.L485
	.byte	6
	.byte	'x',0,1,137,5,24
	.word	.L353,.L486
	.byte	6
	.byte	'cm0',0,1,139,5,24
	.word	.L353,.L487
	.byte	6
	.byte	'cm1',0,1,139,5,29
	.word	.L353,.L488
	.byte	8
	.word	.L476,.L489,.L490
	.byte	9
	.word	.L479,.L480
	.byte	9
	.word	.L481,.L482
	.byte	11
	.word	.L483,.L491
	.byte	0,8
	.word	.L476,.L492,.L493
	.byte	9
	.word	.L479,.L480
	.byte	9
	.word	.L481,.L482
	.byte	0,8
	.word	.L476,.L493,.L494
	.byte	9
	.word	.L479,.L480
	.byte	9
	.word	.L481,.L482
	.byte	10
	.word	.L483,.L493,.L494
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_updatePulse')
	.sect	'.debug_abbrev'
.L258:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,8,29,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2,6,0,0,10,11,0,49
	.byte	16,17,1,18,1,0,0,11,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_updatePulse')
	.sect	'.debug_line'
.L259:
	.word	.L901-.L900
.L900:
	.half	3
	.word	.L903-.L902
.L902:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0,0
.L903:
	.byte	5,17,7,0,5,2
	.word	.L157
	.byte	3,205,4,1,5,20,9
	.half	.L600-.L157
	.byte	3,5,1,5,23,9
	.half	.L904-.L600
	.byte	3,3,1,5,17,3,120,1,5,33,9
	.half	.L601-.L904
	.byte	3,5,1,5,68,9
	.half	.L602-.L601
	.byte	3,3,1,5,42,9
	.half	.L66-.L602
	.byte	3,6,1,5,55,9
	.half	.L905-.L66
	.byte	1,5,70,9
	.half	.L906-.L905
	.byte	1,5,73,9
	.half	.L907-.L906
	.byte	3,1,1,4,2,5,20,9
	.half	.L477-.L907
	.byte	3,230,126,1,4,1,5,73,9
	.half	.L908-.L477
	.byte	3,154,1,1,4,2,5,20,9
	.half	.L478-.L908
	.byte	3,230,126,1,4,1,5,25,9
	.half	.L909-.L478
	.byte	3,156,1,1,5,13,9
	.half	.L484-.L909
	.byte	3,7,1,5,47,7,9
	.half	.L910-.L484
	.byte	1,5,15,7,9
	.half	.L68-.L910
	.byte	3,2,1,5,18,1,5,35,9
	.half	.L69-.L68
	.byte	3,2,1,5,18,9
	.half	.L911-.L69
	.byte	1,5,52,7,9
	.half	.L912-.L911
	.byte	1,5,56,9
	.half	.L913-.L912
	.byte	1,5,15,7,9
	.half	.L71-.L913
	.byte	3,2,1,5,63,9
	.half	.L70-.L71
	.byte	3,8,1,5,72,9
	.half	.L914-.L70
	.byte	1,5,9,9
	.half	.L915-.L914
	.byte	3,126,1,5,24,7,9
	.half	.L916-.L915
	.byte	3,3,1,5,17,9
	.half	.L603-.L916
	.byte	3,1,1,5,68,1,5,14,9
	.half	.L73-.L603
	.byte	3,2,1,5,93,9
	.half	.L74-.L73
	.byte	3,10,1,5,82,9
	.half	.L472-.L74
	.byte	3,84,1,5,55,9
	.half	.L65-.L472
	.byte	1,5,68,9
	.half	.L917-.L65
	.byte	1,5,23,7,9
	.half	.L918-.L917
	.byte	3,49,1,5,68,1,5,42,9
	.half	.L78-.L918
	.byte	3,6,1,5,98,9
	.half	.L919-.L78
	.byte	1,5,84,9
	.half	.L920-.L919
	.byte	1,5,55,1,5,70,9
	.half	.L921-.L920
	.byte	1,5,73,9
	.half	.L922-.L921
	.byte	3,1,1,4,2,5,20,9
	.half	.L489-.L922
	.byte	3,181,126,1,4,1,5,73,9
	.half	.L490-.L489
	.byte	3,203,1,1,4,2,5,20,9
	.half	.L492-.L490
	.byte	3,181,126,1,4,1,5,25,9
	.half	.L923-.L492
	.byte	3,205,1,1,5,9,9
	.half	.L494-.L923
	.byte	3,7,1,5,15,7,9
	.half	.L924-.L494
	.byte	3,2,1,5,18,1,5,34,9
	.half	.L80-.L924
	.byte	3,2,1,5,14,9
	.half	.L925-.L80
	.byte	1,5,15,9
	.half	.L926-.L925
	.byte	3,2,1,5,63,9
	.half	.L81-.L926
	.byte	3,8,1,5,74,9
	.half	.L927-.L81
	.byte	1,5,9,9
	.half	.L928-.L927
	.byte	3,126,1,5,24,7,9
	.half	.L929-.L928
	.byte	3,3,1,5,17,9
	.half	.L607-.L929
	.byte	3,1,1,5,68,1,5,14,9
	.half	.L83-.L607
	.byte	3,2,1,5,95,9
	.half	.L84-.L83
	.byte	3,10,1,5,82,9
	.half	.L485-.L84
	.byte	3,84,1,5,55,9
	.half	.L77-.L485
	.byte	1,5,68,9
	.half	.L930-.L77
	.byte	1,5,1,7,9
	.half	.L931-.L930
	.byte	3,47,1,7,9
	.half	.L261-.L931
	.byte	0,1,1
.L901:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_updatePulse')
	.sect	'.debug_ranges'
.L260:
	.word	-1,.L157,0,.L261-.L157,0,0
.L471:
	.word	-1,.L157,.L66-.L157,.L472-.L157,-1,.L159,0,.L341-.L159,-1,.L161,0,.L331-.L161,-1,.L163,0,.L291-.L163,0
	.word	0
.L491:
	.word	-1,.L157,.L489-.L157,.L490-.L157,.L492-.L157,.L493-.L157,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_updatePulseOff')
	.sect	'.debug_info'
.L262:
	.word	313
	.half	3
	.word	.L263
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L265,.L264
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_updatePulseOff',0,1,185,5,17,1,1
	.word	.L165,.L495,.L164
	.byte	4
	.byte	'driver',0,1,185,5,67
	.word	.L346,.L496
	.byte	4
	.byte	'tOn',0,1,185,5,84
	.word	.L421,.L497
	.byte	4
	.byte	'offset',0,1,185,5,98
	.word	.L421,.L498
	.byte	5
	.word	.L165,.L495
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_updatePulseOff')
	.sect	'.debug_abbrev'
.L263:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_updatePulseOff')
	.sect	'.debug_line'
.L264:
	.word	.L933-.L932
.L932:
	.half	3
	.word	.L935-.L934
.L934:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L935:
	.byte	5,40,7,0,5,2
	.word	.L165
	.byte	3,188,5,1,5,1,9
	.half	.L266-.L165
	.byte	3,1,0,1,1
.L933:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_updatePulseOff')
	.sect	'.debug_ranges'
.L265:
	.word	-1,.L165,0,.L266-.L165,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_info'
.L267:
	.word	465
	.half	3
	.word	.L268
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L270,.L269
	.byte	2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_updateShiftCenterAligned',0,1,193,5,17,1,1
	.word	.L167,.L499,.L166
	.byte	4
	.byte	'driver',0,1,193,5,77
	.word	.L346,.L500
	.byte	4
	.byte	'tOn',0,1,193,5,101
	.word	.L413,.L501
	.byte	4
	.byte	'shift',0,1,193,5,122
	.word	.L413,.L502
	.byte	5
	.word	.L167,.L499
	.byte	6
	.byte	'channelIndex',0,1,195,5,20
	.word	.L344,.L503
	.byte	6
	.byte	'period',0,1,196,5,20
	.word	.L353,.L504
	.byte	6
	.byte	'deadtime',0,1,197,5,20
	.word	.L353,.L505
	.byte	5
	.word	.L88,.L506
	.byte	6
	.byte	'x',0,1,203,5,24
	.word	.L353,.L507
	.byte	6
	.byte	's',0,1,204,5,24
	.word	.L353,.L508
	.byte	6
	.byte	'cm0',0,1,205,5,24
	.word	.L353,.L509
	.byte	6
	.byte	'cm1',0,1,205,5,29
	.word	.L353,.L510
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_abbrev'
.L268:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_line'
.L269:
	.word	.L937-.L936
.L936:
	.half	3
	.word	.L939-.L938
.L938:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L939:
	.byte	5,17,7,0,5,2
	.word	.L167
	.byte	3,192,5,1,5,20,9
	.half	.L623-.L167
	.byte	3,6,1,5,23,9
	.half	.L940-.L623
	.byte	3,2,1,5,17,3,120,1,5,43,9
	.half	.L625-.L940
	.byte	3,4,1,5,33,9
	.half	.L622-.L625
	.byte	3,2,1,5,68,9
	.half	.L624-.L622
	.byte	3,2,1,5,16,9
	.half	.L88-.L624
	.byte	3,5,1,5,25,9
	.half	.L941-.L88
	.byte	3,2,1,5,16,9
	.half	.L942-.L941
	.byte	3,126,1,5,9,9
	.half	.L610-.L942
	.byte	3,2,1,5,24,7,9
	.half	.L943-.L610
	.byte	3,2,1,5,30,9
	.half	.L89-.L943
	.byte	3,5,1,5,13,9
	.half	.L944-.L89
	.byte	1,5,47,7,9
	.half	.L945-.L944
	.byte	1,5,15,7,9
	.half	.L90-.L945
	.byte	3,2,1,5,18,1,5,34,9
	.half	.L91-.L90
	.byte	3,2,1,5,14,9
	.half	.L946-.L91
	.byte	1,5,15,9
	.half	.L947-.L946
	.byte	3,2,1,5,63,9
	.half	.L92-.L947
	.byte	3,8,1,5,72,9
	.half	.L948-.L92
	.byte	1,5,9,9
	.half	.L949-.L948
	.byte	3,126,1,5,24,7,9
	.half	.L950-.L949
	.byte	3,3,1,5,68,9
	.half	.L951-.L950
	.byte	3,1,1,5,24,9
	.half	.L611-.L951
	.byte	3,2,1,5,17,9
	.half	.L952-.L611
	.byte	3,1,1,5,79,3,125,1,5,14,9
	.half	.L94-.L952
	.byte	3,5,1,5,17,7,9
	.half	.L953-.L94
	.byte	3,2,1,5,26,9
	.half	.L613-.L953
	.byte	3,1,1,5,93,9
	.half	.L614-.L613
	.byte	3,1,1,5,20,3,126,1,5,22,9
	.half	.L96-.L614
	.byte	3,7,1,5,21,9
	.half	.L954-.L96
	.byte	3,4,1,5,22,9
	.half	.L955-.L954
	.byte	3,124,1,5,21,9
	.half	.L615-.L955
	.byte	3,4,1,5,13,9
	.half	.L956-.L615
	.byte	3,126,1,5,21,7,9
	.half	.L957-.L956
	.byte	3,2,1,5,52,9
	.half	.L958-.L957
	.byte	1,5,21,9
	.half	.L98-.L958
	.byte	3,4,1,9
	.half	.L99-.L98
	.byte	3,3,1,5,31,9
	.half	.L617-.L99
	.byte	3,1,1,5,21,9
	.half	.L959-.L617
	.byte	1,5,97,9
	.half	.L618-.L959
	.byte	3,1,1,5,94,9
	.half	.L612-.L618
	.byte	3,1,1,5,106,9
	.half	.L960-.L612
	.byte	1,5,63,9
	.half	.L95-.L960
	.byte	1,5,74,9
	.half	.L961-.L95
	.byte	1,5,106,9
	.half	.L621-.L961
	.byte	1,5,82,9
	.half	.L506-.L621
	.byte	3,70,1,5,55,9
	.half	.L87-.L506
	.byte	1,5,68,9
	.half	.L962-.L87
	.byte	1,5,1,7,9
	.half	.L963-.L962
	.byte	3,61,1,7,9
	.half	.L271-.L963
	.byte	0,1,1
.L937:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_ranges'
.L270:
	.word	-1,.L167,0,.L271-.L167,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_2')
	.sect	'.debug_info'
.L272:
	.word	224
	.half	3
	.word	.L273
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L275,.L274
	.byte	2
	.word	.L168
	.byte	3
	.byte	'.cocofun_2',0,1,169,1,9,1
	.word	.L121,.L276,.L120
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_2')
	.sect	'.debug_abbrev'
.L273:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_2')
	.sect	'.debug_line'
.L274:
	.word	.L965-.L964
.L964:
	.half	3
	.word	.L967-.L966
.L966:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L967:
	.byte	5,37,7,0,5,2
	.word	.L121
	.byte	3,212,1,1,5,44,3,4,1,5,51,9
	.half	.L968-.L121
	.byte	3,124,1,5,39,9
	.half	.L969-.L968
	.byte	1,5,60,9
	.half	.L526-.L969
	.byte	3,4,1,5,34,9
	.half	.L970-.L526
	.byte	3,125,1,5,60,3,3,1,7,9
	.half	.L276-.L970
	.byte	0,1,1,5,39,0,5,2
	.word	.L121
	.byte	3,244,1,1,5,44,3,4,1,5,53,9
	.half	.L968-.L121
	.byte	3,124,1,5,41,9
	.half	.L969-.L968
	.byte	1,5,60,9
	.half	.L526-.L969
	.byte	3,4,1,5,36,9
	.half	.L970-.L526
	.byte	3,125,1,5,60,3,99,1,7,9
	.half	.L276-.L970
	.byte	0,1,1
.L965:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_2')
	.sect	'.debug_ranges'
.L275:
	.word	-1,.L121,0,.L276-.L121,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_3')
	.sect	'.debug_info'
.L277:
	.word	224
	.half	3
	.word	.L278
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L280,.L279
	.byte	2
	.word	.L168
	.byte	3
	.byte	'.cocofun_3',0,1,197,3,17,1
	.word	.L151,.L281,.L150
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_3')
	.sect	'.debug_abbrev'
.L278:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_3')
	.sect	'.debug_line'
.L279:
	.word	.L972-.L971
.L971:
	.half	3
	.word	.L974-.L973
.L973:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L974:
	.byte	5,72,7,0,5,2
	.word	.L151
	.byte	3,231,3,1,5,50,9
	.half	.L577-.L151
	.byte	1,7,9
	.half	.L281-.L577
	.byte	0,1,1,5,74,0,5,2
	.word	.L151
	.byte	3,250,3,1,5,72,9
	.half	.L975-.L151
	.byte	3,109,1,5,50,9
	.half	.L577-.L975
	.byte	1,7,9
	.half	.L281-.L577
	.byte	0,1,1,5,72,0,5,2
	.word	.L151
	.byte	3,163,4,1,9
	.half	.L975-.L151
	.byte	3,68,1,5,50,9
	.half	.L577-.L975
	.byte	1,7,9
	.half	.L281-.L577
	.byte	0,1,1,5,74,0,5,2
	.word	.L151
	.byte	3,182,4,1,5,72,9
	.half	.L975-.L151
	.byte	3,177,127,1,5,50,9
	.half	.L577-.L975
	.byte	1,7,9
	.half	.L281-.L577
	.byte	0,1,1
.L972:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_3')
	.sect	'.debug_ranges'
.L280:
	.word	-1,.L151,0,.L281-.L151,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_4')
	.sect	'.debug_info'
.L282:
	.word	224
	.half	3
	.word	.L283
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L285,.L284
	.byte	2
	.word	.L168
	.byte	3
	.byte	'.cocofun_4',0,1,169,1,9,1
	.word	.L119,.L286,.L118
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_4')
	.sect	'.debug_abbrev'
.L283:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_4')
	.sect	'.debug_line'
.L284:
	.word	.L977-.L976
.L976:
	.half	3
	.word	.L979-.L978
.L978:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'IfxPort.h',0,1,0,0,0
.L979:
	.byte	5,81,7,0,5,2
	.word	.L119
	.byte	3,238,1,1,5,63,9
	.half	.L980-.L119
	.byte	1,5,100,9
	.half	.L981-.L980
	.byte	1,4,2,5,26,9
	.half	.L982-.L981
	.byte	3,227,2,1,5,17,1,9
	.half	.L286-.L982
	.byte	0,1,1,5,85,0,5,2
	.word	.L119
	.byte	3,138,2,1,5,65,9
	.half	.L980-.L119
	.byte	1,5,104,9
	.half	.L981-.L980
	.byte	1,4,2,5,26,9
	.half	.L982-.L981
	.byte	3,199,2,1,5,17,1,9
	.half	.L286-.L982
	.byte	0,1,1
.L977:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_4')
	.sect	'.debug_ranges'
.L285:
	.word	-1,.L119,0,.L286-.L119,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_5')
	.sect	'.debug_info'
.L287:
	.word	224
	.half	3
	.word	.L288
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L290,.L289
	.byte	2
	.word	.L168
	.byte	3
	.byte	'.cocofun_5',0,1,206,4,17,1
	.word	.L163,.L291,.L162
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_5')
	.sect	'.debug_abbrev'
.L288:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_5')
	.sect	'.debug_line'
.L289:
	.word	.L984-.L983
.L983:
	.half	3
	.word	.L986-.L985
.L985:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L986:
	.byte	5,14,7,0,5,2
	.word	.L163
	.byte	3,247,4,1,5,17,7,9
	.half	.L987-.L163
	.byte	3,2,1,5,26,9
	.half	.L604-.L987
	.byte	3,1,1,5,20,3,127,1,5,21,9
	.half	.L75-.L604
	.byte	3,6,1,9
	.half	.L605-.L75
	.byte	3,1,1,5,9,9
	.half	.L76-.L605
	.byte	3,125,1,7,9
	.half	.L291-.L76
	.byte	0,1,1,5,14,0,5,2
	.word	.L163
	.byte	3,168,5,1,5,17,7,9
	.half	.L987-.L163
	.byte	3,2,1,5,26,9
	.half	.L604-.L987
	.byte	3,1,1,5,20,3,127,1,5,21,9
	.half	.L75-.L604
	.byte	3,6,1,9
	.half	.L605-.L75
	.byte	3,1,1,5,9,9
	.half	.L76-.L605
	.byte	3,76,1,7,9
	.half	.L291-.L76
	.byte	0,1,1
.L984:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_5')
	.sect	'.debug_ranges'
.L290:
	.word	-1,.L163,0,.L291-.L163,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_6')
	.sect	'.debug_info'
.L292:
	.word	224
	.half	3
	.word	.L293
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L295,.L294
	.byte	2
	.word	.L168
	.byte	3
	.byte	'.cocofun_6',0,1,169,1,9,1
	.word	.L117,.L296,.L116
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_6')
	.sect	'.debug_abbrev'
.L293:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_6')
	.sect	'.debug_line'
.L294:
	.word	.L989-.L988
.L988:
	.half	3
	.word	.L991-.L990
.L990:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L991:
	.byte	5,73,7,0,5,2
	.word	.L117
	.byte	3,219,1,1,5,61,9
	.half	.L992-.L117
	.byte	1,5,24,7,9
	.half	.L993-.L992
	.byte	3,179,127,1,5,44,9
	.half	.L10-.L993
	.byte	3,205,0,1,5,13,9
	.half	.L537-.L10
	.byte	3,1,1,9
	.half	.L296-.L537
	.byte	0,1,1,5,72,0,5,2
	.word	.L117
	.byte	3,251,1,1,5,60,9
	.half	.L992-.L117
	.byte	1,5,24,7,9
	.half	.L993-.L992
	.byte	3,147,127,1,5,44,9
	.half	.L10-.L993
	.byte	3,237,0,1,5,13,9
	.half	.L537-.L10
	.byte	3,1,1,3,96,1,7,9
	.half	.L296-.L537
	.byte	0,1,1
.L989:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_6')
	.sect	'.debug_ranges'
.L295:
	.word	-1,.L117,0,.L296-.L117,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_7')
	.sect	'.debug_info'
.L297:
	.word	224
	.half	3
	.word	.L298
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L300,.L299
	.byte	2
	.word	.L168
	.byte	3
	.byte	'.cocofun_7',0,1,169,1,9,1
	.word	.L115,.L301,.L114
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_7')
	.sect	'.debug_abbrev'
.L298:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_7')
	.sect	'.debug_line'
.L299:
	.word	.L995-.L994
.L994:
	.half	3
	.word	.L997-.L996
.L996:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L997:
	.byte	5,68,7,0,5,2
	.word	.L115
	.byte	3,222,1,1,5,45,1,5,65,9
	.half	.L529-.L115
	.byte	1,5,68,9
	.half	.L998-.L529
	.byte	1,9
	.half	.L301-.L998
	.byte	0,1,1,5,74,0,5,2
	.word	.L115
	.byte	3,223,1,1,5,51,1,5,71,9
	.half	.L529-.L115
	.byte	1,5,74,9
	.half	.L998-.L529
	.byte	1,5,68,3,127,1,7,9
	.half	.L301-.L998
	.byte	0,1,1,5,68,0,5,2
	.word	.L115
	.byte	3,254,1,1,5,45,1,5,65,9
	.half	.L529-.L115
	.byte	1,5,68,9
	.half	.L998-.L529
	.byte	1,3,96,1,7,9
	.half	.L301-.L998
	.byte	0,1,1,5,74,0,5,2
	.word	.L115
	.byte	3,255,1,1,5,51,1,5,71,9
	.half	.L529-.L115
	.byte	1,5,74,9
	.half	.L998-.L529
	.byte	1,5,68,3,95,1,7,9
	.half	.L301-.L998
	.byte	0,1,1
.L995:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_7')
	.sect	'.debug_ranges'
.L300:
	.word	-1,.L115,0,.L301-.L115,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_8')
	.sect	'.debug_info'
.L302:
	.word	224
	.half	3
	.word	.L303
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L305,.L304
	.byte	2
	.word	.L168
	.byte	3
	.byte	'.cocofun_8',0,1,151,1,9,1
	.word	.L103,.L306,.L102
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_8')
	.sect	'.debug_abbrev'
.L303:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_8')
	.sect	'.debug_line'
.L304:
	.word	.L1000-.L999
.L999:
	.half	3
	.word	.L1002-.L1001
.L1001:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0,0
.L1002:
	.byte	5,41,7,0,5,2
	.word	.L103
	.byte	3,152,1,1,4,2,5,12,9
	.half	.L1003-.L103
	.byte	3,159,2,1,4,1,5,54,9
	.half	.L1004-.L1003
	.byte	3,225,125,1,4,2,5,18,9
	.half	.L1005-.L1004
	.byte	3,159,2,1,9
	.half	.L306-.L1005
	.byte	0,1,1,5,41,0,5,2
	.word	.L103
	.byte	3,158,1,1,4,2,5,12,9
	.half	.L1003-.L103
	.byte	3,153,2,1,4,1,5,54,9
	.half	.L1004-.L1003
	.byte	3,231,125,1,4,2,5,18,9
	.half	.L1005-.L1004
	.byte	3,153,2,1,9
	.half	.L306-.L1005
	.byte	0,1,1
.L1000:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_8')
	.sect	'.debug_ranges'
.L305:
	.word	-1,.L103,0,.L306-.L103,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_9')
	.sect	'.debug_info'
.L307:
	.word	224
	.half	3
	.word	.L308
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L310,.L309
	.byte	2
	.word	.L168
	.byte	3
	.byte	'.cocofun_9',0,1,169,1,9,1
	.word	.L113,.L311,.L112
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_9')
	.sect	'.debug_abbrev'
.L308:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_9')
	.sect	'.debug_line'
.L309:
	.word	.L1007-.L1006
.L1006:
	.half	3
	.word	.L1009-.L1008
.L1008:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L1009:
	.byte	5,49,7,0,5,2
	.word	.L113
	.byte	3,236,1,1,5,29,9
	.half	.L1010-.L113
	.byte	3,1,1,5,49,9
	.half	.L1011-.L1010
	.byte	3,127,1,5,54,9
	.half	.L1012-.L1011
	.byte	3,1,1,9
	.half	.L311-.L1012
	.byte	0,1,1,5,51,0,5,2
	.word	.L113
	.byte	3,136,2,1,5,29,9
	.half	.L1010-.L113
	.byte	3,1,1,5,51,9
	.half	.L1011-.L1010
	.byte	3,127,1,5,54,9
	.half	.L1012-.L1011
	.byte	3,1,1,9
	.half	.L1013-.L1012
	.byte	3,100,1,7,9
	.half	.L311-.L1013
	.byte	0,1,1
.L1007:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_9')
	.sect	'.debug_ranges'
.L310:
	.word	-1,.L113,0,.L311-.L113,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_10')
	.sect	'.debug_info'
.L312:
	.word	225
	.half	3
	.word	.L313
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L315,.L314
	.byte	2
	.word	.L168
	.byte	3
	.byte	'.cocofun_10',0,1,169,1,9,1
	.word	.L111,.L316,.L110
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_10')
	.sect	'.debug_abbrev'
.L313:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_10')
	.sect	'.debug_line'
.L314:
	.word	.L1015-.L1014
.L1014:
	.half	3
	.word	.L1017-.L1016
.L1016:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L1017:
	.byte	5,111,7,0,5,2
	.word	.L111
	.byte	3,238,1,1,5,141,1,7,9
	.half	.L1018-.L111
	.byte	1,5,159,1,1,5,139,1,9
	.half	.L14-.L1018
	.byte	1,5,159,1,9
	.half	.L15-.L14
	.byte	1,7,9
	.half	.L316-.L15
	.byte	0,1,1,5,115,0,5,2
	.word	.L111
	.byte	3,138,2,1,5,147,1,7,9
	.half	.L1018-.L111
	.byte	1,5,165,1,1,5,145,1,9
	.half	.L14-.L1018
	.byte	1,5,159,1,9
	.half	.L15-.L14
	.byte	3,100,1,7,9
	.half	.L316-.L15
	.byte	0,1,1
.L1015:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_10')
	.sect	'.debug_ranges'
.L315:
	.word	-1,.L111,0,.L316-.L111,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_11')
	.sect	'.debug_info'
.L317:
	.word	225
	.half	3
	.word	.L318
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L320,.L319
	.byte	2
	.word	.L168
	.byte	3
	.byte	'.cocofun_11',0,1,175,2,9,1
	.word	.L127,.L321,.L126
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_11')
	.sect	'.debug_abbrev'
.L318:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_11')
	.sect	'.debug_line'
.L319:
	.word	.L1020-.L1019
.L1019:
	.half	3
	.word	.L1022-.L1021
.L1021:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0,0
.L1022:
	.byte	5,57,7,0,5,2
	.word	.L127
	.byte	3,176,2,1,5,70,9
	.half	.L1023-.L127
	.byte	1,4,2,5,20,9
	.half	.L1024-.L1023
	.byte	3,146,1,1,9
	.half	.L321-.L1024
	.byte	0,1,1,5,57,0,5,2
	.word	.L127
	.byte	3,185,2,1,5,70,9
	.half	.L1023-.L127
	.byte	1,4,2,5,20,9
	.half	.L1024-.L1023
	.byte	3,137,1,1,9
	.half	.L321-.L1024
	.byte	0,1,1
.L1020:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_11')
	.sect	'.debug_ranges'
.L320:
	.word	-1,.L127,0,.L321-.L127,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_12')
	.sect	'.debug_info'
.L322:
	.word	225
	.half	3
	.word	.L323
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L325,.L324
	.byte	2
	.word	.L168
	.byte	3
	.byte	'.cocofun_12',0,1,195,2,9,1
	.word	.L133,.L326,.L132
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_12')
	.sect	'.debug_abbrev'
.L323:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_12')
	.sect	'.debug_line'
.L324:
	.word	.L1026-.L1025
.L1025:
	.half	3
	.word	.L1028-.L1027
.L1027:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L1028:
	.byte	5,66,7,0,5,2
	.word	.L133
	.byte	3,201,2,1,5,43,1,5,65,9
	.half	.L1029-.L133
	.byte	1,9
	.half	.L326-.L1029
	.byte	0,1,1,5,57,0,5,2
	.word	.L133
	.byte	3,210,2,1,5,34,1,5,56,9
	.half	.L1029-.L133
	.byte	1,5,65,9
	.half	.L1030-.L1029
	.byte	3,119,1,7,9
	.half	.L326-.L1030
	.byte	0,1,1
.L1026:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_12')
	.sect	'.debug_ranges'
.L325:
	.word	-1,.L133,0,.L326-.L133,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_13')
	.sect	'.debug_info'
.L327:
	.word	225
	.half	3
	.word	.L328
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L330,.L329
	.byte	2
	.word	.L168
	.byte	3
	.byte	'.cocofun_13',0,1,206,4,17,1
	.word	.L161,.L331,.L160
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_13')
	.sect	'.debug_abbrev'
.L328:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_13')
	.sect	'.debug_line'
.L329:
	.word	.L1032-.L1031
.L1031:
	.half	3
	.word	.L1034-.L1033
.L1033:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L1034:
	.byte	5,25,7,0,5,2
	.word	.L161
	.byte	3,222,4,1,5,9,9
	.half	.L598-.L161
	.byte	1,5,24,7,9
	.half	.L1035-.L598
	.byte	3,2,1,5,30,9
	.half	.L67-.L1035
	.byte	3,5,1,9
	.half	.L331-.L67
	.byte	0,1,1,5,25,0,5,2
	.word	.L161
	.byte	3,143,5,1,5,9,9
	.half	.L598-.L161
	.byte	1,5,24,7,9
	.half	.L1035-.L598
	.byte	3,2,1,5,29,9
	.half	.L67-.L1035
	.byte	3,5,1,5,30,9
	.half	.L1036-.L67
	.byte	3,79,1,7,9
	.half	.L331-.L1036
	.byte	0,1,1
.L1032:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_13')
	.sect	'.debug_ranges'
.L330:
	.word	-1,.L161,0,.L331-.L161,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_14')
	.sect	'.debug_info'
.L332:
	.word	225
	.half	3
	.word	.L333
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L335,.L334
	.byte	2
	.word	.L168
	.byte	3
	.byte	'.cocofun_14',0,1,197,3,17,1
	.word	.L149,.L336,.L148
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_14')
	.sect	'.debug_abbrev'
.L333:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_14')
	.sect	'.debug_line'
.L334:
	.word	.L1038-.L1037
.L1037:
	.half	3
	.word	.L1040-.L1039
.L1039:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L1040:
	.byte	5,17,7,0,5,2
	.word	.L149
	.byte	3,196,3,1,5,20,9
	.half	.L572-.L149
	.byte	3,6,1,5,23,9
	.half	.L588-.L572
	.byte	3,2,1,5,17,3,120,1,5,43,9
	.half	.L573-.L588
	.byte	3,4,1,5,33,9
	.half	.L574-.L573
	.byte	3,2,1,5,23,9
	.half	.L576-.L574
	.byte	3,2,1,7,9
	.half	.L336-.L576
	.byte	0,1,1,5,17,0,5,2
	.word	.L149
	.byte	3,128,4,1,5,20,9
	.half	.L572-.L149
	.byte	3,6,1,5,23,9
	.half	.L588-.L572
	.byte	3,2,1,5,17,3,120,1,5,43,9
	.half	.L573-.L588
	.byte	3,4,1,5,33,9
	.half	.L574-.L573
	.byte	3,2,1,5,23,9
	.half	.L576-.L574
	.byte	3,70,1,7,9
	.half	.L336-.L576
	.byte	0,1,1
.L1038:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_14')
	.sect	'.debug_ranges'
.L335:
	.word	-1,.L149,0,.L336-.L149,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_15')
	.sect	'.debug_info'
.L337:
	.word	225
	.half	3
	.word	.L338
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L340,.L339
	.byte	2
	.word	.L168
	.byte	3
	.byte	'.cocofun_15',0,1,206,4,17,1
	.word	.L159,.L341,.L158
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_15')
	.sect	'.debug_abbrev'
.L338:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_15')
	.sect	'.debug_line'
.L339:
	.word	.L1042-.L1041
.L1041:
	.half	3
	.word	.L1044-.L1043
.L1043:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0,0,0,0,0
.L1044:
	.byte	5,72,7,0,5,2
	.word	.L159
	.byte	3,243,4,1,5,50,9
	.half	.L1045-.L159
	.byte	1,9
	.half	.L341-.L1045
	.byte	0,1,1,5,72,0,5,2
	.word	.L159
	.byte	3,231,3,1,5,50,9
	.half	.L1045-.L159
	.byte	1,9
	.half	.L586-.L1045
	.byte	3,140,1,1,7,9
	.half	.L341-.L586
	.byte	0,1,1,5,74,0,5,2
	.word	.L159
	.byte	3,250,3,1,5,50,9
	.half	.L1045-.L159
	.byte	1,9
	.half	.L586-.L1045
	.byte	3,249,0,1,7,9
	.half	.L341-.L586
	.byte	0,1,1,5,72,0,5,2
	.word	.L159
	.byte	3,163,4,1,5,50,9
	.half	.L1045-.L159
	.byte	1,9
	.half	.L586-.L1045
	.byte	3,208,0,1,7,9
	.half	.L341-.L586
	.byte	0,1,1,5,74,0,5,2
	.word	.L159
	.byte	3,182,4,1,5,50,9
	.half	.L1045-.L159
	.byte	1,9
	.half	.L586-.L1045
	.byte	3,61,1,7,9
	.half	.L341-.L586
	.byte	0,1,1,5,74,0,5,2
	.word	.L159
	.byte	3,164,5,1,5,50,9
	.half	.L1045-.L159
	.byte	1,9
	.half	.L586-.L1045
	.byte	3,79,1,7,9
	.half	.L341-.L586
	.byte	0,1,1,5,72,0,5,2
	.word	.L159
	.byte	3,228,5,1,5,50,9
	.half	.L1045-.L159
	.byte	1,9
	.half	.L586-.L1045
	.byte	3,143,127,1,7,9
	.half	.L341-.L586
	.byte	0,1,1,5,74,0,5,2
	.word	.L159
	.byte	3,130,6,1,5,50,9
	.half	.L1045-.L159
	.byte	1,9
	.half	.L586-.L1045
	.byte	3,241,126,1,7,9
	.half	.L341-.L586
	.byte	0,1,1
.L1042:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_15')
	.sect	'.debug_ranges'
.L340:
	.word	-1,.L159,0,.L341-.L159,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_PwmHl_modes')
	.sect	'.debug_info'
.L342:
	.word	225
	.half	3
	.word	.L343
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl\\IfxGtm_Tom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1,2
	.word	.L168
	.byte	3
	.byte	'IfxGtm_Tom_PwmHl_modes',0,12,129,1,44
	.word	.L511
	.byte	5,3
	.word	IfxGtm_Tom_PwmHl_modes
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_PwmHl_modes')
	.sect	'.debug_abbrev'
.L343:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_10')
	.sect	'.debug_loc'
.L110:
	.word	-1,.L111,0,.L316-.L111
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_11')
	.sect	'.debug_loc'
.L126:
	.word	-1,.L127,0,.L321-.L127
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_12')
	.sect	'.debug_loc'
.L132:
	.word	-1,.L133,0,.L326-.L133
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_13')
	.sect	'.debug_loc'
.L160:
	.word	-1,.L161,0,.L331-.L161
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_14')
	.sect	'.debug_loc'
.L148:
	.word	-1,.L149,0,.L336-.L149
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_15')
	.sect	'.debug_loc'
.L158:
	.word	-1,.L159,0,.L341-.L159
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_2')
	.sect	'.debug_loc'
.L120:
	.word	-1,.L121,0,.L276-.L121
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_3')
	.sect	'.debug_loc'
.L150:
	.word	-1,.L151,0,.L281-.L151
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_4')
	.sect	'.debug_loc'
.L118:
	.word	-1,.L119,0,.L286-.L119
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_5')
	.sect	'.debug_loc'
.L162:
	.word	-1,.L163,0,.L291-.L163
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_6')
	.sect	'.debug_loc'
.L116:
	.word	-1,.L117,0,.L296-.L117
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_7')
	.sect	'.debug_loc'
.L114:
	.word	-1,.L115,0,.L301-.L115
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_8')
	.sect	'.debug_loc'
.L102:
	.word	-1,.L103,0,.L306-.L103
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_9')
	.sect	'.debug_loc'
.L112:
	.word	-1,.L113,0,.L311-.L113
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.debug_loc'
.L100:
	.word	-1,.L101,0,.L385-.L101
	.half	2
	.byte	138,0
	.word	0,0
.L386:
	.word	-1,.L101,0,.L512-.L101
	.half	1
	.byte	100
	.word	.L103-.L101,.L306-.L101
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.debug_loc'
.L104:
	.word	-1,.L105,0,.L388-.L105
	.half	2
	.byte	138,0
	.word	0,0
.L389:
	.word	-1,.L105,.L103-.L105,.L306-.L105
	.half	1
	.byte	100
	.word	0,.L388-.L105
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.debug_loc'
.L106:
	.word	-1,.L107,0,.L391-.L107
	.half	2
	.byte	138,0
	.word	0,0
.L392:
	.word	-1,.L107,0,.L391-.L107
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.debug_loc'
.L108:
	.word	-1,.L109,0,.L513-.L109
	.half	2
	.byte	138,0
	.word	.L513-.L109,.L345-.L109
	.half	2
	.byte	138,16
	.word	.L345-.L109,.L345-.L109
	.half	2
	.byte	138,0
	.word	0,0
.L374:
	.word	0,0
.L366:
	.word	-1,.L109,.L525-.L109,.L515-.L109
	.half	1
	.byte	92
	.word	.L121-.L109,.L276-.L109
	.half	1
	.byte	92
	.word	.L527-.L109,.L528-.L109
	.half	1
	.byte	92
	.word	.L117-.L109,.L296-.L109
	.half	1
	.byte	92
	.word	.L115-.L109,.L301-.L109
	.half	1
	.byte	92
	.word	.L532-.L109,.L533-.L109
	.half	1
	.byte	84
	.word	.L534-.L109,.L535-.L109
	.half	1
	.byte	84
	.word	.L113-.L109,.L311-.L109
	.half	1
	.byte	92
	.word	.L111-.L109,.L316-.L109
	.half	1
	.byte	92
	.word	.L119-.L109,.L536-.L109
	.half	1
	.byte	92
	.word	.L537-.L109,.L296-.L109
	.half	1
	.byte	84
	.word	.L538-.L109,.L539-.L109
	.half	1
	.byte	84
	.word	.L541-.L109,.L542-.L109
	.half	1
	.byte	84
	.word	.L543-.L109,.L544-.L109
	.half	1
	.byte	84
	.word	.L119-.L109,.L286-.L109
	.half	1
	.byte	92
	.word	.L530-.L109,.L7-.L109
	.half	1
	.byte	92
	.word	0,0
.L354:
	.word	-1,.L109,.L8-.L109,.L515-.L109
	.half	1
	.byte	91
	.word	.L121-.L109,.L276-.L109
	.half	1
	.byte	91
	.word	.L527-.L109,.L528-.L109
	.half	1
	.byte	91
	.word	.L117-.L109,.L296-.L109
	.half	1
	.byte	91
	.word	.L115-.L109,.L301-.L109
	.half	1
	.byte	91
	.word	.L113-.L109,.L311-.L109
	.half	1
	.byte	91
	.word	.L111-.L109,.L316-.L109
	.half	1
	.byte	91
	.word	.L119-.L109,.L536-.L109
	.half	1
	.byte	91
	.word	.L119-.L109,.L286-.L109
	.half	1
	.byte	91
	.word	.L530-.L109,.L545-.L109
	.half	1
	.byte	91
	.word	.L545-.L109,.L345-.L109
	.half	1
	.byte	95
	.word	0,0
.L351:
	.word	-1,.L109,.L526-.L109,.L276-.L109
	.half	1
	.byte	93
	.word	.L527-.L109,.L528-.L109
	.half	1
	.byte	93
	.word	.L117-.L109,.L296-.L109
	.half	1
	.byte	93
	.word	.L115-.L109,.L301-.L109
	.half	1
	.byte	93
	.word	.L529-.L109,.L301-.L109
	.half	1
	.byte	84
	.word	.L530-.L109,.L531-.L109
	.half	1
	.byte	84
	.word	.L113-.L109,.L311-.L109
	.half	1
	.byte	93
	.word	.L111-.L109,.L316-.L109
	.half	1
	.byte	93
	.word	.L119-.L109,.L536-.L109
	.half	1
	.byte	93
	.word	.L539-.L109,.L540-.L109
	.half	1
	.byte	84
	.word	.L119-.L109,.L286-.L109
	.half	1
	.byte	93
	.word	.L530-.L109,.L7-.L109
	.half	1
	.byte	93
	.word	0,0
.L352:
	.word	-1,.L109,.L518-.L109,.L515-.L109
	.half	1
	.byte	88
	.word	.L519-.L109,.L520-.L109
	.half	1
	.byte	95
	.word	.L121-.L109,.L276-.L109
	.half	1
	.byte	88
	.word	.L527-.L109,.L528-.L109
	.half	1
	.byte	88
	.word	.L117-.L109,.L296-.L109
	.half	1
	.byte	88
	.word	.L115-.L109,.L301-.L109
	.half	1
	.byte	88
	.word	.L113-.L109,.L311-.L109
	.half	1
	.byte	88
	.word	.L111-.L109,.L316-.L109
	.half	1
	.byte	88
	.word	.L119-.L109,.L536-.L109
	.half	1
	.byte	88
	.word	.L119-.L109,.L286-.L109
	.half	1
	.byte	88
	.word	.L530-.L109,.L345-.L109
	.half	1
	.byte	88
	.word	.L549-.L109,.L550-.L109
	.half	1
	.byte	84
	.word	.L551-.L109,.L552-.L109
	.half	1
	.byte	85
	.word	0,0
.L363:
	.word	-1,.L109,.L361-.L109,.L8-.L109
	.half	1
	.byte	82
	.word	.L524-.L109,.L515-.L109
	.half	1
	.byte	90
	.word	.L121-.L109,.L276-.L109
	.half	1
	.byte	90
	.word	.L527-.L109,.L528-.L109
	.half	1
	.byte	90
	.word	.L117-.L109,.L296-.L109
	.half	1
	.byte	90
	.word	.L115-.L109,.L301-.L109
	.half	1
	.byte	90
	.word	.L113-.L109,.L311-.L109
	.half	1
	.byte	90
	.word	.L111-.L109,.L316-.L109
	.half	1
	.byte	90
	.word	.L119-.L109,.L536-.L109
	.half	1
	.byte	90
	.word	.L119-.L109,.L286-.L109
	.half	1
	.byte	90
	.word	.L530-.L109,.L345-.L109
	.half	1
	.byte	90
	.word	0,0
.L349:
	.word	-1,.L109,0,.L514-.L109
	.half	1
	.byte	101
	.word	.L517-.L109,.L515-.L109
	.half	1
	.byte	108
	.word	.L121-.L109,.L276-.L109
	.half	1
	.byte	108
	.word	.L527-.L109,.L528-.L109
	.half	1
	.byte	108
	.word	.L117-.L109,.L296-.L109
	.half	1
	.byte	108
	.word	.L115-.L109,.L301-.L109
	.half	1
	.byte	108
	.word	.L113-.L109,.L311-.L109
	.half	1
	.byte	108
	.word	.L111-.L109,.L316-.L109
	.half	1
	.byte	108
	.word	.L119-.L109,.L536-.L109
	.half	1
	.byte	108
	.word	.L119-.L109,.L286-.L109
	.half	1
	.byte	108
	.word	.L530-.L109,.L545-.L109
	.half	1
	.byte	108
	.word	0,0
.L347:
	.word	-1,.L109,0,.L514-.L109
	.half	1
	.byte	100
	.word	.L516-.L109,.L515-.L109
	.half	1
	.byte	111
	.word	.L521-.L109,.L522-.L109
	.half	1
	.byte	100
	.word	.L121-.L109,.L276-.L109
	.half	1
	.byte	111
	.word	.L527-.L109,.L528-.L109
	.half	1
	.byte	111
	.word	.L117-.L109,.L296-.L109
	.half	1
	.byte	111
	.word	.L115-.L109,.L301-.L109
	.half	1
	.byte	111
	.word	.L113-.L109,.L311-.L109
	.half	1
	.byte	111
	.word	.L111-.L109,.L316-.L109
	.half	1
	.byte	111
	.word	.L119-.L109,.L536-.L109
	.half	1
	.byte	111
	.word	.L119-.L109,.L286-.L109
	.half	1
	.byte	111
	.word	.L530-.L109,.L345-.L109
	.half	1
	.byte	111
	.word	.L546-.L109,.L378-.L109
	.half	1
	.byte	100
	.word	.L547-.L109,.L548-.L109
	.half	1
	.byte	100
	.word	0,0
.L355:
	.word	-1,.L109,.L523-.L109,.L515-.L109
	.half	1
	.byte	89
	.word	.L121-.L109,.L276-.L109
	.half	1
	.byte	89
	.word	.L527-.L109,.L528-.L109
	.half	1
	.byte	89
	.word	.L117-.L109,.L296-.L109
	.half	1
	.byte	89
	.word	.L115-.L109,.L301-.L109
	.half	1
	.byte	89
	.word	.L113-.L109,.L311-.L109
	.half	1
	.byte	89
	.word	.L111-.L109,.L316-.L109
	.half	1
	.byte	89
	.word	.L119-.L109,.L536-.L109
	.half	1
	.byte	89
	.word	.L119-.L109,.L286-.L109
	.half	1
	.byte	89
	.word	.L530-.L109,.L345-.L109
	.half	1
	.byte	89
	.word	0,0
.L372:
	.word	0,0
.L370:
	.word	0,0
.L380:
	.word	-1,.L109,0,.L515-.L109
	.half	2
	.byte	145,112
	.word	.L121-.L109,.L276-.L109
	.half	2
	.byte	145,112
	.word	.L527-.L109,.L528-.L109
	.half	2
	.byte	145,112
	.word	.L117-.L109,.L296-.L109
	.half	2
	.byte	145,112
	.word	.L115-.L109,.L301-.L109
	.half	2
	.byte	145,112
	.word	.L113-.L109,.L311-.L109
	.half	2
	.byte	145,112
	.word	.L111-.L109,.L316-.L109
	.half	2
	.byte	145,112
	.word	.L119-.L109,.L536-.L109
	.half	2
	.byte	145,112
	.word	.L119-.L109,.L286-.L109
	.half	2
	.byte	145,112
	.word	.L530-.L109,.L345-.L109
	.half	2
	.byte	145,112
	.word	0,0
.L357:
	.word	-1,.L109,.L518-.L109,.L515-.L109
	.half	1
	.byte	109
	.word	.L121-.L109,.L276-.L109
	.half	1
	.byte	109
	.word	.L527-.L109,.L528-.L109
	.half	1
	.byte	109
	.word	.L117-.L109,.L296-.L109
	.half	1
	.byte	109
	.word	.L115-.L109,.L301-.L109
	.half	1
	.byte	109
	.word	.L113-.L109,.L311-.L109
	.half	1
	.byte	109
	.word	.L111-.L109,.L316-.L109
	.half	1
	.byte	109
	.word	.L119-.L109,.L536-.L109
	.half	1
	.byte	109
	.word	.L119-.L109,.L286-.L109
	.half	1
	.byte	109
	.word	.L530-.L109,.L345-.L109
	.half	1
	.byte	109
	.word	.L553-.L109,.L554-.L109
	.half	1
	.byte	100
	.word	.L555-.L109,.L556-.L109
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.debug_loc'
.L122:
	.word	-1,.L123,0,.L381-.L123
	.half	2
	.byte	138,0
	.word	0,0
.L383:
	.word	-1,.L123,0,.L557-.L123
	.half	1
	.byte	100
	.word	.L558-.L123,.L381-.L123
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.debug_loc'
.L124:
	.word	-1,.L125,0,.L393-.L125
	.half	2
	.byte	138,0
	.word	0,0
.L395:
	.word	-1,.L125,.L127-.L125,.L321-.L125
	.half	1
	.byte	84
	.word	.L559-.L125,.L393-.L125
	.half	1
	.byte	84
	.word	0,0
.L394:
	.word	-1,.L125,.L127-.L125,.L321-.L125
	.half	1
	.byte	100
	.word	.L559-.L125,.L393-.L125
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.debug_loc'
.L128:
	.word	-1,.L129,0,.L397-.L129
	.half	2
	.byte	138,0
	.word	0,0
.L398:
	.word	-1,.L129,.L127-.L129,.L321-.L129
	.half	1
	.byte	100
	.word	.L560-.L129,.L397-.L129
	.half	1
	.byte	100
	.word	0,0
.L399:
	.word	-1,.L129,.L127-.L129,.L321-.L129
	.half	1
	.byte	84
	.word	.L560-.L129,.L397-.L129
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.debug_loc'
.L130:
	.word	-1,.L131,0,.L400-.L131
	.half	2
	.byte	138,0
	.word	0,0
.L406:
	.word	0,0
.L410:
	.word	-1,.L131,.L565-.L131,.L566-.L131
	.half	1
	.byte	84
	.word	.L567-.L131,.L409-.L131
	.half	1
	.byte	84
	.word	0,0
.L408:
	.word	-1,.L131,.L564-.L131,.L27-.L131
	.half	1
	.byte	88
	.word	0,0
.L401:
	.word	-1,.L131,.L133-.L131,.L326-.L131
	.half	1
	.byte	100
	.word	.L133-.L131,.L326-.L131
	.half	1
	.byte	111
	.word	0,.L561-.L131
	.half	1
	.byte	100
	.word	.L562-.L131,.L400-.L131
	.half	1
	.byte	111
	.word	0,0
.L402:
	.word	-1,.L131,.L133-.L131,.L326-.L131
	.half	1
	.byte	84
	.word	0,.L34-.L131
	.half	1
	.byte	84
	.word	0,0
.L404:
	.word	-1,.L131,.L133-.L131,.L326-.L131
	.half	1
	.byte	89
	.word	.L563-.L131,.L400-.L131
	.half	1
	.byte	89
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.debug_loc'
.L134:
	.word	-1,.L135,0,.L411-.L135
	.half	2
	.byte	138,0
	.word	0,0
.L412:
	.word	-1,.L135,0,.L411-.L135
	.half	1
	.byte	100
	.word	0,0
.L414:
	.word	-1,.L135,0,.L411-.L135
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setOnTimeAndShift')
	.sect	'.debug_loc'
.L136:
	.word	-1,.L137,0,.L415-.L137
	.half	2
	.byte	138,0
	.word	0,0
.L416:
	.word	-1,.L137,0,.L415-.L137
	.half	1
	.byte	100
	.word	0,0
.L418:
	.word	-1,.L137,0,.L415-.L137
	.half	1
	.byte	102
	.word	0,0
.L417:
	.word	-1,.L137,0,.L415-.L137
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setPulse')
	.sect	'.debug_loc'
.L138:
	.word	-1,.L139,0,.L419-.L139
	.half	2
	.byte	138,0
	.word	0,0
.L420:
	.word	-1,.L139,0,.L419-.L139
	.half	1
	.byte	100
	.word	0,0
.L423:
	.word	-1,.L139,0,.L419-.L139
	.half	1
	.byte	102
	.word	0,0
.L422:
	.word	-1,.L139,0,.L419-.L139
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.debug_loc'
.L140:
	.word	-1,.L141,0,.L424-.L141
	.half	2
	.byte	138,0
	.word	0,0
.L427:
	.word	-1,.L141,0,.L424-.L141
	.half	1
	.byte	101
	.word	0,0
.L425:
	.word	-1,.L141,0,.L424-.L141
	.half	1
	.byte	100
	.word	0,0
.L428:
	.word	-1,.L141,0,.L424-.L141
	.half	1
	.byte	102
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_loc'
.L142:
	.word	-1,.L143,0,.L429-.L143
	.half	2
	.byte	138,0
	.word	0,0
.L432:
	.word	-1,.L143,0,.L568-.L143
	.half	1
	.byte	101
	.word	.L570-.L143,.L429-.L143
	.half	1
	.byte	108
	.word	0,0
.L431:
	.word	-1,.L143,0,.L568-.L143
	.half	1
	.byte	100
	.word	.L569-.L143,.L429-.L143
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_updateAndShiftOff')
	.sect	'.debug_loc'
.L144:
	.word	-1,.L145,0,.L433-.L145
	.half	2
	.byte	138,0
	.word	0,0
.L434:
	.word	-1,.L145,0,.L433-.L145
	.half	1
	.byte	100
	.word	0,0
.L436:
	.word	-1,.L145,0,.L433-.L145
	.half	1
	.byte	102
	.word	0,0
.L435:
	.word	-1,.L145,0,.L571-.L145
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.debug_loc'
.L146:
	.word	-1,.L147,0,.L437-.L147
	.half	2
	.byte	138,0
	.word	0,0
.L441:
	.word	-1,.L147,.L573-.L147,.L336-.L147
	.half	1
	.byte	90
	.word	.L151-.L147,.L577-.L147
	.half	1
	.byte	90
	.word	.L159-.L147,.L341-.L147
	.half	1
	.byte	90
	.word	.L575-.L147,.L585-.L147
	.half	1
	.byte	90
	.word	.L41-.L147,.L437-.L147
	.half	1
	.byte	90
	.word	0,0
.L447:
	.word	-1,.L147,.L581-.L147,.L50-.L147
	.half	1
	.byte	91
	.word	.L584-.L147,.L49-.L147
	.half	1
	.byte	91
	.word	0,0
.L448:
	.word	-1,.L147,.L582-.L147,.L50-.L147
	.half	1
	.byte	95
	.word	.L583-.L147,.L49-.L147
	.half	1
	.byte	95
	.word	.L586-.L147,.L341-.L147
	.half	1
	.byte	86
	.word	.L587-.L147,.L445-.L147
	.half	1
	.byte	86
	.word	0,0
.L443:
	.word	-1,.L147,.L574-.L147,.L336-.L147
	.half	1
	.byte	88
	.word	.L151-.L147,.L577-.L147
	.half	1
	.byte	88
	.word	.L159-.L147,.L341-.L147
	.half	1
	.byte	88
	.word	.L575-.L147,.L437-.L147
	.half	1
	.byte	88
	.word	0,0
.L438:
	.word	-1,.L147,.L149-.L147,.L336-.L147
	.half	1
	.byte	100
	.word	.L572-.L147,.L336-.L147
	.half	1
	.byte	111
	.word	.L575-.L147,.L42-.L147
	.half	1
	.byte	100
	.word	.L151-.L147,.L577-.L147
	.half	1
	.byte	111
	.word	.L159-.L147,.L341-.L147
	.half	1
	.byte	111
	.word	.L575-.L147,.L437-.L147
	.half	1
	.byte	111
	.word	0,0
.L442:
	.word	-1,.L147,.L576-.L147,.L336-.L147
	.half	1
	.byte	89
	.word	.L151-.L147,.L577-.L147
	.half	1
	.byte	89
	.word	.L159-.L147,.L341-.L147
	.half	1
	.byte	89
	.word	.L575-.L147,.L437-.L147
	.half	1
	.byte	89
	.word	0,0
.L439:
	.word	-1,.L147,.L149-.L147,.L336-.L147
	.half	1
	.byte	101
	.word	.L573-.L147,.L336-.L147
	.half	1
	.byte	108
	.word	.L575-.L147,.L42-.L147
	.half	1
	.byte	101
	.word	.L151-.L147,.L577-.L147
	.half	1
	.byte	108
	.word	.L159-.L147,.L341-.L147
	.half	1
	.byte	108
	.word	.L575-.L147,.L437-.L147
	.half	1
	.byte	108
	.word	0,0
.L446:
	.word	-1,.L147,.L151-.L147,.L577-.L147
	.half	5
	.byte	144,32,157,32,0
	.word	.L159-.L147,.L341-.L147
	.half	5
	.byte	144,32,157,32,0
	.word	.L578-.L147,.L579-.L147
	.half	5
	.byte	144,32,157,32,0
	.word	.L48-.L147,.L580-.L147
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.debug_loc'
.L152:
	.word	-1,.L153,0,.L449-.L153
	.half	2
	.byte	138,0
	.word	0,0
.L452:
	.word	-1,.L153,.L588-.L153,.L336-.L153
	.half	1
	.byte	90
	.word	.L151-.L153,.L577-.L153
	.half	1
	.byte	90
	.word	.L159-.L153,.L341-.L153
	.half	1
	.byte	90
	.word	.L589-.L153,.L592-.L153
	.half	1
	.byte	90
	.word	.L52-.L153,.L449-.L153
	.half	1
	.byte	90
	.word	0,0
.L457:
	.word	0,0
.L458:
	.word	-1,.L153,.L590-.L153,.L61-.L153
	.half	1
	.byte	95
	.word	.L591-.L153,.L60-.L153
	.half	1
	.byte	95
	.word	.L586-.L153,.L341-.L153
	.half	1
	.byte	86
	.word	.L593-.L153,.L455-.L153
	.half	1
	.byte	86
	.word	0,0
.L454:
	.word	-1,.L153,.L574-.L153,.L336-.L153
	.half	1
	.byte	88
	.word	.L151-.L153,.L577-.L153
	.half	1
	.byte	88
	.word	.L159-.L153,.L341-.L153
	.half	1
	.byte	88
	.word	.L589-.L153,.L449-.L153
	.half	1
	.byte	88
	.word	0,0
.L450:
	.word	-1,.L153,.L149-.L153,.L336-.L153
	.half	1
	.byte	100
	.word	.L572-.L153,.L336-.L153
	.half	1
	.byte	111
	.word	.L589-.L153,.L53-.L153
	.half	1
	.byte	100
	.word	.L151-.L153,.L577-.L153
	.half	1
	.byte	111
	.word	.L159-.L153,.L341-.L153
	.half	1
	.byte	111
	.word	.L589-.L153,.L449-.L153
	.half	1
	.byte	111
	.word	0,0
.L453:
	.word	-1,.L153,.L576-.L153,.L336-.L153
	.half	1
	.byte	89
	.word	.L151-.L153,.L577-.L153
	.half	1
	.byte	89
	.word	.L159-.L153,.L341-.L153
	.half	1
	.byte	89
	.word	.L589-.L153,.L449-.L153
	.half	1
	.byte	89
	.word	0,0
.L451:
	.word	-1,.L153,.L149-.L153,.L336-.L153
	.half	1
	.byte	101
	.word	.L573-.L153,.L336-.L153
	.half	1
	.byte	108
	.word	.L589-.L153,.L53-.L153
	.half	1
	.byte	101
	.word	.L151-.L153,.L577-.L153
	.half	1
	.byte	108
	.word	.L159-.L153,.L341-.L153
	.half	1
	.byte	108
	.word	.L589-.L153,.L449-.L153
	.half	1
	.byte	108
	.word	0,0
.L456:
	.word	-1,.L153,.L151-.L153,.L577-.L153
	.half	1
	.byte	91
	.word	.L159-.L153,.L341-.L153
	.half	1
	.byte	91
	.word	.L594-.L153,.L52-.L153
	.half	1
	.byte	91
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.debug_loc'
.L154:
	.word	-1,.L155,0,.L459-.L155
	.half	2
	.byte	138,0
	.word	0,0
.L463:
	.word	-1,.L155,.L595-.L155,.L596-.L155
	.half	1
	.byte	95
	.word	.L63-.L155,.L459-.L155
	.half	1
	.byte	95
	.word	0,0
.L460:
	.word	-1,.L155,0,.L64-.L155
	.half	1
	.byte	100
	.word	.L462-.L155,.L459-.L155
	.half	1
	.byte	111
	.word	0,0
.L464:
	.word	-1,.L155,.L597-.L155,.L459-.L155
	.half	1
	.byte	88
	.word	0,0
.L461:
	.word	-1,.L155,0,.L64-.L155
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_updatePulse')
	.sect	'.debug_loc'
.L156:
	.word	-1,.L157,0,.L465-.L157
	.half	2
	.byte	138,0
	.word	0,0
.L469:
	.word	-1,.L157,.L598-.L157,.L331-.L157
	.half	1
	.byte	89
	.word	.L159-.L157,.L341-.L157
	.half	1
	.byte	89
	.word	.L599-.L157,.L73-.L157
	.half	1
	.byte	89
	.word	.L163-.L157,.L291-.L157
	.half	1
	.byte	89
	.word	.L74-.L157,.L606-.L157
	.half	1
	.byte	89
	.word	.L65-.L157,.L83-.L157
	.half	1
	.byte	89
	.word	.L84-.L157,.L608-.L157
	.half	1
	.byte	89
	.word	.L77-.L157,.L465-.L157
	.half	1
	.byte	89
	.word	0,0
.L480:
	.word	0,0
.L474:
	.word	-1,.L157,.L604-.L157,.L75-.L157
	.half	1
	.byte	85
	.word	.L605-.L157,.L291-.L157
	.half	1
	.byte	85
	.word	.L74-.L157,.L472-.L157
	.half	1
	.byte	85
	.word	0,0
.L487:
	.word	-1,.L157,.L604-.L157,.L75-.L157
	.half	1
	.byte	85
	.word	.L605-.L157,.L291-.L157
	.half	1
	.byte	85
	.word	.L84-.L157,.L485-.L157
	.half	1
	.byte	85
	.word	0,0
.L475:
	.word	-1,.L157,.L605-.L157,.L291-.L157
	.half	1
	.byte	86
	.word	.L74-.L157,.L472-.L157
	.half	1
	.byte	86
	.word	0,0
.L488:
	.word	-1,.L157,.L604-.L157,.L75-.L157
	.half	1
	.byte	86
	.word	.L605-.L157,.L291-.L157
	.half	1
	.byte	86
	.word	.L84-.L157,.L485-.L157
	.half	1
	.byte	86
	.word	0,0
.L466:
	.word	-1,.L157,0,.L66-.L157
	.half	1
	.byte	100
	.word	.L598-.L157,.L331-.L157
	.half	1
	.byte	111
	.word	.L159-.L157,.L341-.L157
	.half	1
	.byte	111
	.word	.L600-.L157,.L73-.L157
	.half	1
	.byte	111
	.word	.L163-.L157,.L291-.L157
	.half	1
	.byte	111
	.word	.L74-.L157,.L83-.L157
	.half	1
	.byte	111
	.word	.L84-.L157,.L465-.L157
	.half	1
	.byte	111
	.word	0,0
.L468:
	.word	-1,.L157,0,.L66-.L157
	.half	1
	.byte	102
	.word	.L598-.L157,.L331-.L157
	.half	1
	.byte	109
	.word	.L159-.L157,.L341-.L157
	.half	1
	.byte	109
	.word	.L601-.L157,.L73-.L157
	.half	1
	.byte	109
	.word	.L163-.L157,.L291-.L157
	.half	1
	.byte	109
	.word	.L74-.L157,.L83-.L157
	.half	1
	.byte	109
	.word	.L84-.L157,.L465-.L157
	.half	1
	.byte	109
	.word	0,0
.L470:
	.word	-1,.L157,.L598-.L157,.L331-.L157
	.half	1
	.byte	88
	.word	.L159-.L157,.L341-.L157
	.half	1
	.byte	88
	.word	.L602-.L157,.L73-.L157
	.half	1
	.byte	88
	.word	.L163-.L157,.L291-.L157
	.half	1
	.byte	88
	.word	.L74-.L157,.L83-.L157
	.half	1
	.byte	88
	.word	.L84-.L157,.L465-.L157
	.half	1
	.byte	88
	.word	0,0
.L482:
	.word	0,0
.L467:
	.word	-1,.L157,0,.L66-.L157
	.half	1
	.byte	101
	.word	.L598-.L157,.L331-.L157
	.half	1
	.byte	108
	.word	.L159-.L157,.L341-.L157
	.half	1
	.byte	108
	.word	.L599-.L157,.L73-.L157
	.half	1
	.byte	108
	.word	.L163-.L157,.L291-.L157
	.half	1
	.byte	108
	.word	.L74-.L157,.L83-.L157
	.half	1
	.byte	108
	.word	.L84-.L157,.L465-.L157
	.half	1
	.byte	108
	.word	0,0
.L473:
	.word	-1,.L157,.L598-.L157,.L331-.L157
	.half	1
	.byte	85
	.word	.L159-.L157,.L341-.L157
	.half	1
	.byte	85
	.word	.L478-.L157,.L603-.L157
	.half	1
	.byte	85
	.word	.L163-.L157,.L604-.L157
	.half	1
	.byte	85
	.word	.L75-.L157,.L291-.L157
	.half	1
	.byte	85
	.word	0,0
.L486:
	.word	-1,.L157,.L598-.L157,.L331-.L157
	.half	1
	.byte	85
	.word	.L159-.L157,.L341-.L157
	.half	1
	.byte	85
	.word	.L493-.L157,.L607-.L157
	.half	1
	.byte	85
	.word	.L163-.L157,.L604-.L157
	.half	1
	.byte	85
	.word	.L75-.L157,.L291-.L157
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_updatePulseOff')
	.sect	'.debug_loc'
.L164:
	.word	-1,.L165,0,.L495-.L165
	.half	2
	.byte	138,0
	.word	0,0
.L496:
	.word	-1,.L165,0,.L495-.L165
	.half	1
	.byte	100
	.word	0,0
.L498:
	.word	-1,.L165,0,.L495-.L165
	.half	1
	.byte	102
	.word	0,0
.L497:
	.word	-1,.L165,0,.L609-.L165
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_loc'
.L166:
	.word	-1,.L167,0,.L499-.L167
	.half	2
	.byte	138,0
	.word	0,0
.L503:
	.word	-1,.L167,.L159-.L167,.L341-.L167
	.half	1
	.byte	91
	.word	.L619-.L167,.L620-.L167
	.half	1
	.byte	91
	.word	.L87-.L167,.L499-.L167
	.half	1
	.byte	91
	.word	0,0
.L509:
	.word	-1,.L167,.L613-.L167,.L96-.L167
	.half	1
	.byte	88
	.word	.L618-.L167,.L95-.L167
	.half	1
	.byte	88
	.word	0,0
.L510:
	.word	-1,.L167,.L614-.L167,.L96-.L167
	.half	1
	.byte	92
	.word	.L617-.L167,.L95-.L167
	.half	1
	.byte	92
	.word	.L586-.L167,.L341-.L167
	.half	1
	.byte	86
	.word	.L621-.L167,.L506-.L167
	.half	1
	.byte	86
	.word	0,0
.L505:
	.word	-1,.L167,.L159-.L167,.L341-.L167
	.half	1
	.byte	89
	.word	.L622-.L167,.L499-.L167
	.half	1
	.byte	89
	.word	0,0
.L500:
	.word	-1,.L167,0,.L88-.L167
	.half	1
	.byte	100
	.word	.L159-.L167,.L341-.L167
	.half	1
	.byte	111
	.word	.L623-.L167,.L499-.L167
	.half	1
	.byte	111
	.word	0,0
.L504:
	.word	-1,.L167,.L159-.L167,.L341-.L167
	.half	1
	.byte	90
	.word	.L624-.L167,.L499-.L167
	.half	1
	.byte	90
	.word	0,0
.L508:
	.word	-1,.L167,.L615-.L167,.L616-.L167
	.half	5
	.byte	144,32,157,32,0
	.word	.L99-.L167,.L97-.L167
	.half	1
	.byte	95
	.word	0,0
.L502:
	.word	-1,.L167,0,.L88-.L167
	.half	1
	.byte	102
	.word	.L159-.L167,.L341-.L167
	.half	1
	.byte	109
	.word	.L625-.L167,.L499-.L167
	.half	1
	.byte	109
	.word	0,0
.L501:
	.word	-1,.L167,0,.L88-.L167
	.half	1
	.byte	101
	.word	.L159-.L167,.L341-.L167
	.half	1
	.byte	108
	.word	.L619-.L167,.L499-.L167
	.half	1
	.byte	108
	.word	0,0
.L507:
	.word	-1,.L167,.L159-.L167,.L341-.L167
	.half	1
	.byte	82
	.word	.L610-.L167,.L611-.L167
	.half	1
	.byte	82
	.word	.L94-.L167,.L612-.L167
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1046:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_getDeadtime')
	.sect	'.debug_frame'
	.word	24
	.word	.L1046,.L101,.L385-.L101
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_getMinPulse')
	.sect	'.debug_frame'
	.word	24
	.word	.L1046,.L105,.L388-.L105
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_getMode')
	.sect	'.debug_frame'
	.word	24
	.word	.L1046,.L107,.L391-.L107
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_init')
	.sect	'.debug_frame'
	.word	36
	.word	.L1046,.L109,.L345-.L109
	.byte	4
	.word	(.L513-.L109)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L345-.L513)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_initConfig')
	.sect	'.debug_frame'
	.word	12
	.word	.L1046,.L123,.L381-.L123
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setDeadtime')
	.sect	'.debug_frame'
	.word	24
	.word	.L1046,.L125,.L393-.L125
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setMinPulse')
	.sect	'.debug_frame'
	.word	24
	.word	.L1046,.L129,.L397-.L129
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setMode')
	.sect	'.debug_frame'
	.word	12
	.word	.L1046,.L131,.L400-.L131
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setOnTime')
	.sect	'.debug_frame'
	.word	12
	.word	.L1046,.L135,.L411-.L135
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setOnTimeAndShift')
	.sect	'.debug_frame'
	.word	12
	.word	.L1046,.L137,.L415-.L137
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setPulse')
	.sect	'.debug_frame'
	.word	12
	.word	.L1046,.L139,.L419-.L139
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_setupChannels')
	.sect	'.debug_frame'
	.word	24
	.word	.L1046,.L141,.L424-.L141
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_frame'
	.word	12
	.word	.L1046,.L143,.L429-.L143
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_updateAndShiftOff')
	.sect	'.debug_frame'
	.word	12
	.word	.L1046,.L145,.L433-.L145
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_updateCenterAligned')
	.sect	'.debug_frame'
	.word	12
	.word	.L1046,.L147,.L437-.L147
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_updateEdgeAligned')
	.sect	'.debug_frame'
	.word	12
	.word	.L1046,.L153,.L449-.L153
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_updateOff')
	.sect	'.debug_frame'
	.word	12
	.word	.L1046,.L155,.L459-.L155
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_updatePulse')
	.sect	'.debug_frame'
	.word	12
	.word	.L1046,.L157,.L465-.L157
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_updatePulseOff')
	.sect	'.debug_frame'
	.word	12
	.word	.L1046,.L165,.L495-.L165
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_frame'
	.word	12
	.word	.L1046,.L167,.L499-.L167
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1047:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_8')
	.sect	'.debug_frame'
	.word	24
	.word	.L1047,.L103,.L306-.L103
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_10')
	.sect	'.debug_frame'
	.word	24
	.word	.L1047,.L111,.L316-.L111
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_9')
	.sect	'.debug_frame'
	.word	24
	.word	.L1047,.L113,.L311-.L113
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_7')
	.sect	'.debug_frame'
	.word	24
	.word	.L1047,.L115,.L301-.L115
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_6')
	.sect	'.debug_frame'
	.word	24
	.word	.L1047,.L117,.L296-.L117
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_4')
	.sect	'.debug_frame'
	.word	24
	.word	.L1047,.L119,.L286-.L119
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_2')
	.sect	'.debug_frame'
	.word	24
	.word	.L1047,.L121,.L276-.L121
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_11')
	.sect	'.debug_frame'
	.word	24
	.word	.L1047,.L127,.L321-.L127
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_12')
	.sect	'.debug_frame'
	.word	24
	.word	.L1047,.L133,.L326-.L133
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_14')
	.sect	'.debug_frame'
	.word	24
	.word	.L1047,.L149,.L336-.L149
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_3')
	.sect	'.debug_frame'
	.word	24
	.word	.L1047,.L151,.L281-.L151
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_15')
	.sect	'.debug_frame'
	.word	24
	.word	.L1047,.L159,.L341-.L159
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_13')
	.sect	'.debug_frame'
	.word	24
	.word	.L1047,.L161,.L331-.L161
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_5')
	.sect	'.debug_frame'
	.word	24
	.word	.L1047,.L163,.L291-.L163
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
