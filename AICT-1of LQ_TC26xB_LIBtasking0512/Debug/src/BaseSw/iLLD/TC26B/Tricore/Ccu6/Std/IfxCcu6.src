	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99293038"
	.compiler_invocation	"ctc --dep-file=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\.IfxCcu6.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc26x -D__CPU_TC26X__ --core=tc1.6.x --iso=99 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\User -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Driver -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -g2 --make-target=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.src ..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c"
	.compiler_name		"ctc"
	;source	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c'

	
$TC16X
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_connectTrigger',code,cluster('IfxCcu6_connectTrigger')
	.sect	'.text.IfxCcu6.IfxCcu6_connectTrigger'
	.align	2
	
	.global	IfxCcu6_connectTrigger

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	     2   * \file IfxCcu6.c
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	     3   * \brief CCU6  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	     4   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	     5   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	     7   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	     9   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    10   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    16  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    19  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    25   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    26  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    32   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    33  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    41  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    42   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    44   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    45  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    46  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    47  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    48  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    49  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    50  #include "IfxCcu6.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    51  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    52  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    53  /*-------------------------Function Implementations---------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    54  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    55  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    56  void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger)
; Function IfxCcu6_connectTrigger
.L89:
IfxCcu6_connectTrigger:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    57  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    58      unsigned mosel = ccu6->MOSEL.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    59      uint16   shift = (uint16)outputLine;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    60      uint16   data  = 2 * selectedTrigger;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    61  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    62      if (ccu6 == &MODULE_CCU61)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    63      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    64          data = data + 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    65      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    66  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    67      mosel         = ccu6->MOSEL.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    68      __ldmst_c(&mosel, (0x7U << shift), (data << shift));
	mov	d0,#7
	ld.w	d15,[a4]12
.L484:
	sh	d0,d0,d4
	ld.w	d15,[a4]12
.L251:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     2   * \file IfxCpu_Intrinsics.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     3   * \ingroup IfxLld_Cpu_Intrinsics Intrinsics
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     4   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     5   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     7   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     9   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    10   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    13   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    15   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    16  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    19  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    20   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    21   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    22   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    23   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    24   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    25   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    26  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    27   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    28   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    29   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    30   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    31   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    32   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    33  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    40   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    41  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    42   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    43   * \defgroup IfxLld_Cpu_Intrinsics Intrinsics
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    44   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    45   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    46   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    47  #ifndef IFXCPU_INTRINSICS_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    48  #define IFXCPU_INTRINSICS_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    49  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    50  #include "Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    51  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    52  #if defined(__DCC__)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    53  #include "IfxCpu_IntrinsicsDcc.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    54  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    55  #elif defined(__HIGHTEC__)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    56  #include "IfxCpu_IntrinsicsGnuc.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    57  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    58  #elif defined(__TASKING__)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    59  #include "IfxCpu_IntrinsicsTasking.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    60  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    61  #elif defined(__ghs__)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    62  #include "IfxCpu_IntrinsicsGhs.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    63  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    64  #else
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    65  #error Compiler unsupported
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    66  #endif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    67  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    68  #define IFX_ALIGN_8   (1)            // Align on 8 bit Boundary
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    69  #define IFX_ALIGN_16  (2)            // Align on 16 bit Boundary
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    70  #define IFX_ALIGN_32  (4)            // Align on 32 bit Boundary
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    71  #define IFX_ALIGN_64  (8)            // Align on 64 bit Boundary
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    72  #define IFX_ALIGN_128 (16)           // Align on 128 bit Boundary
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    73  #define IFX_ALIGN_256 (32)           // Align on 256 bit Boundary
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    74  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    75  #define Ifx_AlignOn256(Size) ((((Size) + (IFX_ALIGN_256 - 1)) & (~(IFX_ALIGN_256 - 1))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    76  #define Ifx_AlignOn128(Size) ((((Size) + (IFX_ALIGN_128 - 1)) & (~(IFX_ALIGN_128 - 1))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    77  #define Ifx_AlignOn64(Size)  ((((Size) + (IFX_ALIGN_64 - 1)) & (~(IFX_ALIGN_64 - 1))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    78  #define Ifx_AlignOn32(Size)  ((((Size) + (IFX_ALIGN_32 - 1)) & (~(IFX_ALIGN_32 - 1))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    79  #define Ifx_AlignOn16(Size)  ((((Size) + (IFX_ALIGN_16 - 1)) & (~(IFX_ALIGN_16 - 1))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    80  #define Ifx_AlignOn8(Size)   ((((Size) + (IFX_ALIGN_8 - 1)) & (~(IFX_ALIGN_8 - 1))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    81  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    82  #define Ifx_COUNTOF(x)       (sizeof(x) / sizeof(x[0]))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    83  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    84  //______________________________________________________________________________
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    85  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    86  /** Convert context pointer to address pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    87   * \param[in] cx context pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    88   * \return address pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    89   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    90  IFX_INLINE void *__cx_to_addr(uint32 cx)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    91  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    92      uint32 seg_nr = __extru(cx, 16, 4);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    93      return (void *)__insert(seg_nr << 28, cx, 6, 16);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    94  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    95  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    96  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    97  /** Convert address pointer to context pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    98   * \param[in] addr address pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    99   * \return context pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   100   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   101  IFX_INLINE uint32 __addr_to_cx(void *addr)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   102  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   103      uint32 seg_nr, seg_idx;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   104      seg_nr  = __extru((int)addr, 28, 4) << 16;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   105      seg_idx = __extru((int)addr, 6, 16);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   106      return seg_nr | seg_idx;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   107  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   108  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   110  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   111  IFX_INLINE void __ldmst_c(volatile void *address, unsigned mask, unsigned value)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   112  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   113      *(volatile uint32 *)address = (*(volatile uint32 *)address & ~(mask)) | (mask & value);
	mov	d1,#-1
	lea	a15,0xf0002b00
.L485:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     2   * \file IfxCpu_Intrinsics.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     3   * \ingroup IfxLld_Cpu_Intrinsics Intrinsics
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     4   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     5   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     7   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     9   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    10   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    13   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    15   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    16  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    19  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    20   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    21   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    22   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    23   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    24   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    25   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    26  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    27   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    28   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    29   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    30   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    31   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    32   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    33  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    40   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    41  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    42   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    43   * \defgroup IfxLld_Cpu_Intrinsics Intrinsics
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    44   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    45   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    46   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    47  #ifndef IFXCPU_INTRINSICS_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    48  #define IFXCPU_INTRINSICS_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    49  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    50  #include "Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    51  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    52  #if defined(__DCC__)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    53  #include "IfxCpu_IntrinsicsDcc.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    54  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    55  #elif defined(__HIGHTEC__)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    56  #include "IfxCpu_IntrinsicsGnuc.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    57  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    58  #elif defined(__TASKING__)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    59  #include "IfxCpu_IntrinsicsTasking.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    60  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    61  #elif defined(__ghs__)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    62  #include "IfxCpu_IntrinsicsGhs.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    63  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    64  #else
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    65  #error Compiler unsupported
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    66  #endif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    67  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    68  #define IFX_ALIGN_8   (1)            // Align on 8 bit Boundary
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    69  #define IFX_ALIGN_16  (2)            // Align on 16 bit Boundary
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    70  #define IFX_ALIGN_32  (4)            // Align on 32 bit Boundary
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    71  #define IFX_ALIGN_64  (8)            // Align on 64 bit Boundary
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    72  #define IFX_ALIGN_128 (16)           // Align on 128 bit Boundary
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    73  #define IFX_ALIGN_256 (32)           // Align on 256 bit Boundary
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    74  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    75  #define Ifx_AlignOn256(Size) ((((Size) + (IFX_ALIGN_256 - 1)) & (~(IFX_ALIGN_256 - 1))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    76  #define Ifx_AlignOn128(Size) ((((Size) + (IFX_ALIGN_128 - 1)) & (~(IFX_ALIGN_128 - 1))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    77  #define Ifx_AlignOn64(Size)  ((((Size) + (IFX_ALIGN_64 - 1)) & (~(IFX_ALIGN_64 - 1))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    78  #define Ifx_AlignOn32(Size)  ((((Size) + (IFX_ALIGN_32 - 1)) & (~(IFX_ALIGN_32 - 1))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    79  #define Ifx_AlignOn16(Size)  ((((Size) + (IFX_ALIGN_16 - 1)) & (~(IFX_ALIGN_16 - 1))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    80  #define Ifx_AlignOn8(Size)   ((((Size) + (IFX_ALIGN_8 - 1)) & (~(IFX_ALIGN_8 - 1))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    81  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    82  #define Ifx_COUNTOF(x)       (sizeof(x) / sizeof(x[0]))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    83  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    84  //______________________________________________________________________________
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    85  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    86  /** Convert context pointer to address pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    87   * \param[in] cx context pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    88   * \return address pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    89   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    90  IFX_INLINE void *__cx_to_addr(uint32 cx)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    91  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    92      uint32 seg_nr = __extru(cx, 16, 4);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    93      return (void *)__insert(seg_nr << 28, cx, 6, 16);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    94  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    95  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    96  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    97  /** Convert address pointer to context pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    98   * \param[in] addr address pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    99   * \return context pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   100   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   101  IFX_INLINE uint32 __addr_to_cx(void *addr)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   102  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   103      uint32 seg_nr, seg_idx;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   104      seg_nr  = __extru((int)addr, 28, 4) << 16;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   105      seg_idx = __extru((int)addr, 6, 16);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   106      return seg_nr | seg_idx;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   107  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   108  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   110  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   111  IFX_INLINE void __ldmst_c(volatile void *address, unsigned mask, unsigned value)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   112  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   113      *(volatile uint32 *)address = (*(volatile uint32 *)address & ~(mask)) | (mask & value);
	xor	d1,d0
.L486:
	and	d15,d1
	eq.a	d1,a4,a15
.L431:
	sha	d5,#1
.L430:
	add	d1,d5
.L487:
	sha	d1,d1,d4
.L488:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     2   * \file IfxCpu_Intrinsics.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     3   * \ingroup IfxLld_Cpu_Intrinsics Intrinsics
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     4   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     5   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     7   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     9   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    10   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    13   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    15   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    16  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    19  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    20   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    21   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    22   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    23   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    24   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    25   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    26  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    27   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    28   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    29   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    30   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    31   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    32   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    33  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    40   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    41  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    42   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    43   * \defgroup IfxLld_Cpu_Intrinsics Intrinsics
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    44   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    45   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    46   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    47  #ifndef IFXCPU_INTRINSICS_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    48  #define IFXCPU_INTRINSICS_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    49  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    50  #include "Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    51  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    52  #if defined(__DCC__)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    53  #include "IfxCpu_IntrinsicsDcc.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    54  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    55  #elif defined(__HIGHTEC__)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    56  #include "IfxCpu_IntrinsicsGnuc.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    57  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    58  #elif defined(__TASKING__)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    59  #include "IfxCpu_IntrinsicsTasking.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    60  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    61  #elif defined(__ghs__)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    62  #include "IfxCpu_IntrinsicsGhs.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    63  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    64  #else
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    65  #error Compiler unsupported
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    66  #endif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    67  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    68  #define IFX_ALIGN_8   (1)            // Align on 8 bit Boundary
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    69  #define IFX_ALIGN_16  (2)            // Align on 16 bit Boundary
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    70  #define IFX_ALIGN_32  (4)            // Align on 32 bit Boundary
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    71  #define IFX_ALIGN_64  (8)            // Align on 64 bit Boundary
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    72  #define IFX_ALIGN_128 (16)           // Align on 128 bit Boundary
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    73  #define IFX_ALIGN_256 (32)           // Align on 256 bit Boundary
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    74  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    75  #define Ifx_AlignOn256(Size) ((((Size) + (IFX_ALIGN_256 - 1)) & (~(IFX_ALIGN_256 - 1))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    76  #define Ifx_AlignOn128(Size) ((((Size) + (IFX_ALIGN_128 - 1)) & (~(IFX_ALIGN_128 - 1))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    77  #define Ifx_AlignOn64(Size)  ((((Size) + (IFX_ALIGN_64 - 1)) & (~(IFX_ALIGN_64 - 1))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    78  #define Ifx_AlignOn32(Size)  ((((Size) + (IFX_ALIGN_32 - 1)) & (~(IFX_ALIGN_32 - 1))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    79  #define Ifx_AlignOn16(Size)  ((((Size) + (IFX_ALIGN_16 - 1)) & (~(IFX_ALIGN_16 - 1))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    80  #define Ifx_AlignOn8(Size)   ((((Size) + (IFX_ALIGN_8 - 1)) & (~(IFX_ALIGN_8 - 1))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    81  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    82  #define Ifx_COUNTOF(x)       (sizeof(x) / sizeof(x[0]))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    83  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    84  //______________________________________________________________________________
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    85  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    86  /** Convert context pointer to address pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    87   * \param[in] cx context pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    88   * \return address pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    89   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    90  IFX_INLINE void *__cx_to_addr(uint32 cx)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    91  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    92      uint32 seg_nr = __extru(cx, 16, 4);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    93      return (void *)__insert(seg_nr << 28, cx, 6, 16);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    94  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    95  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    96  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    97  /** Convert address pointer to context pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    98   * \param[in] addr address pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    99   * \return context pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   100   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   101  IFX_INLINE uint32 __addr_to_cx(void *addr)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   102  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   103      uint32 seg_nr, seg_idx;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   104      seg_nr  = __extru((int)addr, 28, 4) << 16;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   105      seg_idx = __extru((int)addr, 6, 16);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   106      return seg_nr | seg_idx;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   107  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   108  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   110  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   111  IFX_INLINE void __ldmst_c(volatile void *address, unsigned mask, unsigned value)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   112  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   113      *(volatile uint32 *)address = (*(volatile uint32 *)address & ~(mask)) | (mask & value);
	and	d0,d1
.L432:
	or	d15,d0

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    69  Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut)
	st.w	[a4]12,d15
.L252:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    70  {
	ret
.L239:
	
__IfxCcu6_connectTrigger_function_end:
	.size	IfxCcu6_connectTrigger,__IfxCcu6_connectTrigger_function_end-IfxCcu6_connectTrigger
.L138:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_disableModulationOutput',code,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.text.IfxCcu6.IfxCcu6_disableModulationOutput'
	.align	2
	
	.global	IfxCcu6_disableModulationOutput

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    71      uint32 shift, mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    72  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    73      if (timer != IfxCcu6_TimerId_t13)
; Function IfxCcu6_disableModulationOutput
.L91:
IfxCcu6_disableModulationOutput:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    74      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    75          if (channelOut != IfxCcu6_ChannelOut_cout3)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    76          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    77              shift          = channelOut;
	jeq	d4,#1,.L2
.L669:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    78              mask           = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    79              ccu6->MODCTR.U = ccu6->MODCTR.U & ~(mask);
	jeq	d5,#6,.L3
.L670:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    80          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    81          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    82          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    83      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    84      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    85      {
	j	.L4
.L2:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    86          if (channelOut != IfxCcu6_ChannelOut_cout3)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    87          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    88              shift          = channelOut + 8;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    89              mask           = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    90              ccu6->MODCTR.U = ccu6->MODCTR.U & ~(mask);
	jeq	d5,#6,.L5
.L671:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    91          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    92          else
	add	d5,d5,#8
.L4:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    93          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    94              ccu6->MODCTR.B.ECT13O = FALSE;
	mov	d0,#1
	ld.w	d15,[a4]128
.L672:
	sha	d0,d0,d5
.L673:
	mov	d1,#-1
	xor	d0,d1
.L674:
	and	d15,d0
	st.w	[a4]128,d15
.L3:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    95          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    96      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    97  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    98  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	    99  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   100  void IfxCcu6_disableModule(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   101  {
	ret
.L5:
	ld.bu	d15,[a4]129
.L675:
	insert	d15,d15,#0,#7,#1
	st.b	[a4]129,d15
.L676:
	ret
.L404:
	
__IfxCcu6_disableModulationOutput_function_end:
	.size	IfxCcu6_disableModulationOutput,__IfxCcu6_disableModulationOutput_function_end-IfxCcu6_disableModulationOutput
.L218:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_disableModule',code,cluster('IfxCcu6_disableModule')
	.sect	'.text.IfxCcu6.IfxCcu6_disableModule'
	.align	2
	
	.global	IfxCcu6_disableModule

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   102      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   103      IfxScuWdt_clearCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   104      ccu6->CLC.U = 0x00000001;
; Function IfxCcu6_disableModule
.L93:
IfxCcu6_disableModule:	.type	func
	mov.aa	a15,a4
.L434:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   105      IfxScuWdt_setCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   106  
	call	IfxScuWdt_getCpuWatchdogPassword
.L433:
	mov	d15,d2
.L436:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   107      /* Wait until module is disabled */
	mov	d4,d15
	call	IfxScuWdt_clearCpuEndinit
.L435:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   108      while (IfxCcu6_isModuleEnabled(ccu6) == TRUE)
	mov	d0,#1
	st.w	[a15],d0
.L681:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   109      {}
	mov	d4,d15
	call	IfxScuWdt_setCpuEndinit

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   110  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   112  
.L7:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    45   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    46   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    47   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    48   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    49   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    50   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    51   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    52   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    53   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    54   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    55   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    56  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    57  #ifndef IFXCCU6_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    58  #define IFXCCU6_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    59  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    60  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    61  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    62  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    63  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    64  #include "_Impl/IfxCcu6_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    65  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    66  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    67  #include "Scu/Std/IfxScuWdt.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    68  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    69  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    70  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    72  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    73  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    74  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    75  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    76  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    77   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    78  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    79   * Definition in Ifx_CCU.PISEL0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    80   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    81  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    82  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    83      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    84      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    85      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    89      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    90  } IfxCcu6_CaptureCompareInput;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    91  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    92  /** \brief Selection of actual input signal for the capture compare inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    93   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    94  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    95  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   100  } IfxCcu6_CaptureCompareInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   101  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   102  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   103   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   104  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   105  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   106      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   107      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   108      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   109  } IfxCcu6_CaptureCompareState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   110  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   111  /** \brief Capture compare output pins
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   112   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   113  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   114  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   116      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   117      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   118      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   119      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   120      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   121      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   122  } IfxCcu6_ChannelOut;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   123  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   124  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   125   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   126   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   127  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   128  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   129      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   130                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   131      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   132                                                      * event. The T1x prescaler is not taken into account */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   133      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   134                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   137  } IfxCcu6_CountingInputMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   138  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   139  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   140   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   141   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   142  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   143  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   144      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   145                                           * the source signal becomes active */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   146      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   147  } IfxCcu6_DelayBypass;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   148  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   149  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   150   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   151   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   152  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   153  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   156                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   157      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   158                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   159      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   160                                                     * detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   161  } IfxCcu6_ExternalTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   162  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   163  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   164   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   165   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   166  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   167  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                             * signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   171      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   173      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   175      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   177  } IfxCcu6_HallSensorTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   178  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   179  /** \brief Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   180   * Description in Ifx_CCU.IEN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   181   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   182  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   183  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   184      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   185                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   186      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   187                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   188      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   189                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   191                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   193                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   197      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   198      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   199      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   200      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   201      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   202      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   203  } IfxCcu6_InterruptSource;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   204  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   205  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   206   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   207   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   208  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   209  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   210      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   211      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   212      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   213      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   214      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   215                                                                         * delay function) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   217  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   218  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   219  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   220   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   221   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   222  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   223  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   224      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   225                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   228                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   229  } IfxCcu6_MultiChannelSwitchingSync;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   230  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   231  /** \brief Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   232   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   233  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   234  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   237      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   238      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   239  } IfxCcu6_ServiceRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   240  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   242   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   243   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   244  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   245  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   248  } IfxCcu6_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   249  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   251   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   252  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   253  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Capture compare channel of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   261  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   262  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   263      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   269   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   270  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   271  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   272      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   274      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   276      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   277      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   278      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   279                                                                          * programmed to Hall Sensor mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   280      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   281      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   282      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   283      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   286  } IfxCcu6_T12ChannelMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   287  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   288  /** \brief Counting direction of Timer12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   289   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   291  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   292  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   293      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   294      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   295  } IfxCcu6_T12CountDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   296  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   297  /** \brief Operating mode of Timer 12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   298   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   299   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   300  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   301  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   302      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   303                                               * from zero after reaching the period value. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   304      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   305                                               * and counts up after detecting a one-match. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   306  } IfxCcu6_T12CountMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   307  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   308  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   309   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   310   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   311  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   312  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   313      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   314      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   315      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   316      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   317  } IfxCcu6_T13TriggerDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   318  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   319  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   320   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   321   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   322  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   323  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   327      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   328      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   329      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   330      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   331                                                     * counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   332      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   333  } IfxCcu6_T13TriggerEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   334  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   335  /** \brief Timer number ( T12 / T13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   336   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   337  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   338  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   350      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   351      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   352      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   353      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   354      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   355      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   356  } IfxCcu6_TimerInputClock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   358  /** \brief Selection of actual input signal for the timer inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   360  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   361  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   362      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   363      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   364      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   365      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   366      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   368      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   370  } IfxCcu6_TimerInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   371  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   372  /** \brief Timer (T12 / T13) run status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   373   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   374   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   375  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   376  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   377      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   378      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   379  } IfxCcu6_TimerRunStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   380  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   381  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   382   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   383   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   384  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   385  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   386      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   387      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   388                                        * ISR.RTRPF = 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   389  } IfxCcu6_TrapMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   392   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   394  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   395  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   396      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   397                                        * of T12 (while counting up) is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   398      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   399                                        * of T13 is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   400      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   401  } IfxCcu6_TrapState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   402  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   403  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   405  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   407  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   408  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   409  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   410  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   411  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   412  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   413   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   414   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   415   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   416   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   417   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   418  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   420  /** \brief Clears all the three dead-time counter channels to zero.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   421   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   422   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   423   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   424  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   425  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   426  /** \brief Clears the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   427   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   428   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   430   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   431  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   433  /** \brief Clears the T12  One notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   434   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   436   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   437  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   439  /** \brief Clears the T12  period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   440   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   442   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   443  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   445  /** \brief Clears the T13  compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   446   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   448   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   449  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   450  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   451  /** \brief Returns the Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   452   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \return Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   454   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   455  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   456  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   457  /** \brief Returns the status of module enabled or disabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   458   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   459   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   460   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   461  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   462  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   463  /** \brief Returns the status of T12 one notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   464   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   465   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   466   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   467  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   468  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   469  /** \brief Returns the status of T12 period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   471   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   472   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   473  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   475  /** \brief Returns the status of T13 compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param pattern Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param value Value of the dead time to be induced
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   500   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   501  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   503  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   504   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param pattern Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   507   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   508  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   510  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   511   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param mode External trigger mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Hall sensor input trigger event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   526   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param frequency Input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   537   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   538  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   539  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   540  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   541   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   542   * \param pattern Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   544   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   545  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   546  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   547  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   548   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   549   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   550   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   551   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   552  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   553  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   554  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   555   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   556   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   557   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   558   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   559   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   560  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   562  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   563   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   564   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   565   * \param state FALSE: passive state when CC6xST == 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   566   * TRUE : passive state when CC6xST == 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   568   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   569  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   570  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   571  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   572   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \param mode The operating mode for the T12 channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   583   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   584   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   585  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   587  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \param mode Operating mode of Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   590   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   591   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   592  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   594  /** \brief Sets the 16-bit counter value of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \param value Counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   597   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   598   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   599  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   600  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   601  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \param value Period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   604   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   605   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   606  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   607  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   608  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   611   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   612   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   613  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   615  /** \brief Sets the 16-bit counter value of Timer13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \param value counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   618   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   619   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   620  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   622  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \param value period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   625   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   627  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   629  /** \brief Sets the Timer13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param direction T13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param mode The trigger event to start T13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   640   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   641  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   643  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   644   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param mode Trap mode selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   647   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   648  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   649  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   650  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   651   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   652   * \param state Trap state selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   653   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   654   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   655  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   657  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param t12 Timer12 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param t13 Timer13 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param t12 Timer12 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param t13 Timer13 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param currentHall Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param expectedHall Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   677   * \param output Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   682  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   683  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   684  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   686  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   687   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   688   * \param outputLine Output Line
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   689   * \param selectedTrigger Trigger selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   690   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   691   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   692  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   693  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   694  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   695   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   696   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   697   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   698   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   699   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   700  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   701  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   702  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   704   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   705   * \param state FALSE: The passive level is 0.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   706   * TRUE : The passive level is 1.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   707   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   708   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   709  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   710  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   711  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   712   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   713   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   714   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   715   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   716   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   717  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   718  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   719  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   720   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   721   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   722   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   724   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   725  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   726  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   727  /** \brief Sets the frequency and clock input of the Timer 12.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   728   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   729   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   730   * The resulting frequency is captured in the handler element : CaptureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   731   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \param countMode Counting mode of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   735   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   736   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   737   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   738  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period, IfxCcu6_T12CountMode countMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   742   * \param extInput External input signal for the Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   743   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   744   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   745  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Sets the frequency and clock input of the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   755   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   756   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   757   * The resulting frequency is captured in the handler element : captureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   759   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   760   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   761   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   762   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   763   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   764  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   766  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   768   * \param extInput External input signal for the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   769   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   770   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   771  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   773  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   774  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   775  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   776   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   777  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   778  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   779  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   780  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   781  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   782  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   783   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   784   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   785   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   786   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   787  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   788  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   789  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   790   * that has been compared to the current and expected value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   791   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   792   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   794   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   795   * FALSE : The input CCPOSx has been sampled as 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Gets the status of the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   802   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   803   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   804  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   805  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   806  /** \brief indicates if the multi-channel mode functionality is available
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   808   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   809   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   810  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   811  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   812  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   815   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   816   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   817   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   818  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   819  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   820  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   822   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   823   * \return Status (TRUE: enable / FALSE: disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   824   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   825  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   826  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   827  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   828   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   829   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   831   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   832  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   833  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   834  /** \brief Returns the current counting direction of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   835   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   836   * \return direction (up / down)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   837   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   838  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   839  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   840  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   841   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   842   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   843   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   844  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   845  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   846  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   847   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   848   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   849   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   850   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   851  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   852  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   853  /** \brief Returns the Timer (T12 / T13) run status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   854   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   855   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   856   * \return Status (stopped / running)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   857   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   858  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   859  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   860  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   861   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   862   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   863   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   864   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   865   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   866  IFX_INLINE boolean IfxCcu6_isModuleSuspended(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   868  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   869   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   870   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   871   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   872   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   873   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   874  IFX_INLINE void IfxCcu6_setSuspendMode(Ifx_CCU6 *ccu6, IfxCcu6_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   875  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   876  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   877  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   878  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   879  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   880  /** \brief Returns the module index of the selected CCU6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return CCU6 module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_EXTERN Ifx_CCU6 *IfxCcu6_getAddress(IfxCcu6_Index ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Returns the capture register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   889   * \return current value of the capture register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   890   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   891  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   892  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   893  /** \brief Returns the capture shadow register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   896   * \return current value of the capture shadow register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   897   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   898  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   899  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   900  /** \brief Returns CCU6 index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \param ccu6 Specifies the pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   902   * \return Returns index. returns -1 in case of unknown index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   903   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   904  IFX_EXTERN IfxCcu6_Index IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   905  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   906  /** \brief Returns the service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return The service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Returns the current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   922  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   924  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   925  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   926  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   927  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   928  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   929  /** \brief Clears all Interrupt flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   931   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   932   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   933  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   935  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   938   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   939   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   940  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   941  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   942  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   944   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   945   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   946   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   947  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   948  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   949  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   951   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   952   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   953  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   954  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   955  /** \brief Disables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   965   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   966  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   967  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   968  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   969   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   972   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   973   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   974  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   975  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   976  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   978   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   979   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   980   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   981  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   982  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   983  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   984   * T13 output CC63_O is equal to CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   985   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   986   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   987   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   988  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   989  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   990  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   991   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   992   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   993   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   994   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   995  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   996  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   997  /** \brief Disables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   998   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   999   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1000   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1001   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1002  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1003  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1004  /** \brief Disables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1005   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1006   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1007   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1008  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1010  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1011   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1012   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1013   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1014   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1015  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1017  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1018   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1019   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1020   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1021   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1022   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1023  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1024  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1025  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1026   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1027   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1028   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1029   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1030  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1031  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1032  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1033   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1034   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1035   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1036  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1037  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1038  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1040   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1041   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1042  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1043  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1044  /** \brief Enables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1047   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1048   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1049  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1050  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1051  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the Multi Channel Mode Availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1066   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1067  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1068  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1069  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1070   * becomes set while a T12 one match is detected while counting down
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1071   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1072   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1073   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1074  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1075  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1076  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * becomes set while a T12 period match is detected while counting up
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * becomes set while a T13 period match is detected
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1087   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1088  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1089  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1090  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1091   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1094   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1095   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1096  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1097  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1098  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1099   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1101   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1102   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1103  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1104  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1105  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1106   * T13 output CC63_O is equal to CC63ST.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1109   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1110  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1112  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1113   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1116   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1117  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1118  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1119  /** \brief Enables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1120   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1121   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1123   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1124  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1125  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1126  /** \brief Enables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1127   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1128   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1129   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1130  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1131  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1132  /** \brief selects the actual input signal for the capture compare inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1133   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1134   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1135   * \param signal selection of actual input signal for the module inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1136   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1137   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1138  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1139  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1140  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1141  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1142  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1143  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1144  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1148   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1149   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1150  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1151  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1152  /** \brief Disables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_EXTERN void IfxCcu6_disableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1162   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1163   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1164  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1165  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1166  /** \brief Enables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1173  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1174  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1177  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1178  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1179  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1180  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1181  /** \brief Initialises a CC60 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a CC60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cc60Out CC60 compare output CC0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a CC61 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1200   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1201  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1203  /** \brief Initialises a CC61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1204   * \param cc61Out CC61 compare output CC1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a CC62 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a CC62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param cc62Out CC62 compare output CC2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1222   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1223   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1224  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1225  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1226  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1227   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1228   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1229   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1230   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1231  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1232  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1233  /** \brief Initialises a CCPOS1 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1235   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1236   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1237   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1238  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1239  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1241   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1242   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1244   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1245  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1246  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1247  /** \brief Initialises a COUT60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1248   * \param cout60 CC60 compare output COUT0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1249   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1250   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1251   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1252   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1253  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1254  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1255  /** \brief Initialises a COUT61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1256   * \param cout61 CC61 compare output COUT1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1257   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1258   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1259   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1261  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1262  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1263  /** \brief Initialises a COUT62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1264   * \param cout62 CC62 compare output COUT2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1265   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1266   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1267   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1268   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1269  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1270  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1271  /** \brief Initialises a COUT63 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1272   * \param cout63 CC63 compare output COUT3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1273   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1274   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1275   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1276   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1277  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1278  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1279  /** \brief Initialises a CTRAP input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1280   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1281   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1282   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1283   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1284  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1286  /** \brief Initialises a T12HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1287   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1288   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1289   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1291  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1293  /** \brief Initialises a T13HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1294   * \param t13hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1295   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1296   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1297   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1298  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1300  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1301  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1302  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1303  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1304  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1305  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1306  /** \brief Provides functionality for both setting of CC60 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1307   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1308   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1309   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1310   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1311   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1312  IFX_INLINE void IfxCcu6_initCc60InPinWithPadLevel(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1314  /** \brief Provides functionality for both setting of CC61 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1315   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1316   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1317   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1318   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1319   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1320  IFX_INLINE void IfxCcu6_initCc61InPinWithPadLevel(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1322  /** \brief Provides functionality for both setting of CC62 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1323   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1324   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1325   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1326   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1327   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_initCc62InPinWithPadLevel(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1329  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1330  /** \brief Provides functionality for both setting of CCPOS0 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1331   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1332   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1333   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1334   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1335   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1336  IFX_INLINE void IfxCcu6_initCcpos0PinWithPadLevel(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1338  /** \brief Provides functionality for both setting of CCPOS1 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1339   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1340   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1341   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1342   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1343   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1344  IFX_INLINE void IfxCcu6_initCcpos1PinWithPadLevel(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1345  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1346  /** \brief Provides functionality for both setting of CCPOS2 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1347   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1348   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1349   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1350   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1352  IFX_INLINE void IfxCcu6_initCcpos2PinWithPadLevel(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1354  /** \brief Provides functionality for both setting of CTRAP pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1355   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1356   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1357   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1358   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1360  IFX_INLINE void IfxCcu6_initCtrapPinWithPadLevel(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1361  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1362  /** \brief Provides functionality for both setting of T12HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1363   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1364   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1365   * \param padDriver Pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1366   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1367   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1368  IFX_INLINE void IfxCcu6_initT12hrPinWithPadLevel(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1369  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1370  /** \brief Provides functionality for both setting of T13HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1371   * \param t13hrIn Timer 13 HR input T13HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1372   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1373   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1374   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1375   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1376  IFX_INLINE void IfxCcu6_initT13hrPinWithPadLevel(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1377  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1378  /** \brief Sets the sensitivity of the module to sleep signal
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1379   * \param ccu6 pointer to CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1380   * \param mode mode selection (enable/disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1381   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1382   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1383  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1384  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1385  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1386  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1387  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1388  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1389  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1390   * \param ccu6 pointer to ccu6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1391   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1392   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1393  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1394  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1395  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1396  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1397  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1398  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1399  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1400  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1401      ccu6->ISR.U = 0xFFFF;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1402  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1403  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1405  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1406  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1407      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1408      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1409      tctr4.B.T12RES = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1410      tctr4.B.T13RES = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1411      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1412  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1414  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1415  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1416  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1417      ccu6->TCTR4.B.DTRES = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1418  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1421  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1422  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1423      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1424      ccu6->ISR.U = mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1425  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1426  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1427  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1428  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1429  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1430      ccu6->ISR.B.RT12OM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1431  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1434  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1435  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1436      ccu6->ISR.B.RT12PM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1437  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1439  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1440  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1441  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1442      ccu6->ISR.B.RT13CM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1443  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1445  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1446  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1447  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1448      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1449      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1450      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1451  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1452  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1453  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1454  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1455  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1456      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1457      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1458      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1459  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1461  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1462  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1463  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1464      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1465  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1466  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1467  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1468  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1469  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1470      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1471      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1472  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1473  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1475  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1476  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1477      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1478  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1479  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1481  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1482  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1483      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1484      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1485      tctr4.B.T12STD = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1486      tctr4.B.T13STD = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1490  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1493      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1494      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1495  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1496  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1497  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1498  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1499  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1500      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1501  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1503  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1504  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1505  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1506      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1507      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1508  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1510  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1511  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1512  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1513      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1514      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1515      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1516  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1518  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1519  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1520  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1521      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1522  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1523  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1525  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1526  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1527      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1528      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1529      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1530  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1531  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1533  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1534  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1535      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1536      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1537      tctr4.B.T12CNT = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1538      tctr4.B.T13CNT = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1539      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1540  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1541  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1542  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1543  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1544  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1545      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1546      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1547      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1548  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1550  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1551  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1552  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1553      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1554  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1555  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1556  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1557  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1558  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1559      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1560  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1562  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1563  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1564  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1565      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1566      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1567  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1568  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1570  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1571  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1572      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1573  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1574  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1575  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1576  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1577  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1578      ccu6->MCFG.B.MCM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1579  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1580  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1581  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1582  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1583  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1584      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1587  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1590      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1591  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1592  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1594  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1595  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1596      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1597  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1599  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1600  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1601  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1602      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1603  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1604  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1605  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1606  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1607  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1608      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1609      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1610      tctr4.B.T12STR = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1611      tctr4.B.T13STR = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1612      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1615  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1618      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1619      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1622  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1625      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1626  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1627  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1629  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1630  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1631      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1632      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1633  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1634  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1636  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1637  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1638      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1639      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1640      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1643  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1646      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1647  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1648  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1649  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1650  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1651  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1652      uint32 shift = (12 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1653      uint32 mask  = 1 << shift;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1654      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1657  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1660      uint32 shift = (channel + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1661      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1662      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1663  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1664  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1665  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1666  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1667  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1668      uint32 shift = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1669      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1670  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1671  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1672  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1673  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1674  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1675      return ccu6->MCFG.B.MCM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1677  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1678  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1681      return ccu6->MCMOUT.B.R != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1682  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1683  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1684  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1685  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1686  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1687      uint32 shift = ((timer * 8) + 5);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1688      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1689      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1690  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1691  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1692  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1693  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1694  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1695      uint32 mask = (1U << channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1696      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1697  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1698  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1699  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1700  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1701  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1702      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1703  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1704  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1705  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1706  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1707  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1708      return (volatile uint32 *)&ccu6->T12PR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1709  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1710  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1711  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1712  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1713  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1714      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1715  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1716  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1717  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1718  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1719  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1720      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1721      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1722  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1723  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1724  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1725  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1726  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1727      uint32 shift = ((timer * 8) + 4);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1728      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1729      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1730  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1731  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1732  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1733  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1734  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1735      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1736      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1737  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1738  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1739  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1740  IFX_INLINE void IfxCcu6_initCc60InPinWithPadLevel(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1741  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1742      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1743      IfxPort_setPinPadDriver(cc60In->pin.port, cc60In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1744      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1745  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1746  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1747  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1748  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1749  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1750      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1751      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1752  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1754  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1755  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1756  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1757      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1758      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1759  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1760  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1761  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1762  IFX_INLINE void IfxCcu6_initCc61InPinWithPadLevel(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1763  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1764      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1765      IfxPort_setPinPadDriver(cc61In->pin.port, cc61In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1766      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1767  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1768  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1769  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1770  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1771  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1772      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1773      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1774  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1775  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1776  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1777  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1778  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1779      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1780      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1781  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1782  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1783  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1784  IFX_INLINE void IfxCcu6_initCc62InPinWithPadLevel(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1785  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1786      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1787      IfxPort_setPinPadDriver(cc62In->pin.port, cc62In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1788      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1789  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1790  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1791  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1792  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1793  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1794      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1795      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1796  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1797  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1798  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1799  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1800  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1801      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1802      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1803  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1804  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1805  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1806  IFX_INLINE void IfxCcu6_initCcpos0PinWithPadLevel(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1807  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1808      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1809      IfxPort_setPinPadDriver(ccpos0->pin.port, ccpos0->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1810      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1811  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1812  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1813  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1814  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1815  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1816      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1817      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1818  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1819  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1820  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1821  IFX_INLINE void IfxCcu6_initCcpos1PinWithPadLevel(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1822  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1823      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1824      IfxPort_setPinPadDriver(ccpos1->pin.port, ccpos1->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1825      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1826  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1827  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1828  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1829  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1830  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1831      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1832      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1833  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1834  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1835  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1836  IFX_INLINE void IfxCcu6_initCcpos2PinWithPadLevel(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1837  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1838      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1839      IfxPort_setPinPadDriver(ccpos2->pin.port, ccpos2->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1840      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1841  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1842  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1843  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1844  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1845  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1846      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1847      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1848  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1849  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1850  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1851  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1852  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1853      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1854      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1855  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1856  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1857  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1858  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1859  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1860      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1861      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1862  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1863  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1864  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1865  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1866  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1867      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1868      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1869  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1870  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1871  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1872  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1873  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1874      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1875      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1876  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1877  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1878  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1879  IFX_INLINE void IfxCcu6_initCtrapPinWithPadLevel(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1880  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1881      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1882      IfxPort_setPinPadDriver(ctrap->pin.port, ctrap->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1883      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1884  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1885  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1886  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1887  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1888  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1889      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1890      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1891  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1892  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1893  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1894  IFX_INLINE void IfxCcu6_initT12hrPinWithPadLevel(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1895  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1896      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1897      IfxPort_setPinPadDriver(t12hrIn->pin.port, t12hrIn->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1898      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1899  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1900  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1901  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1902  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1903  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1904      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1905      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1906  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1907  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1908  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1909  IFX_INLINE void IfxCcu6_initT13hrPinWithPadLevel(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1910  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1911      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1912      IfxPort_setPinPadDriver(t13hrIn->pin.port, t13hrIn->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1913      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1914  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1915  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1916  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1917  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1918  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1919      return ccu6->CLC.B.DISS == 0;
	ld.bu	d15,[a15]
.L413:
	jz.t	d15:1,.L7
.L682:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   113   *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   114  {
	ret
.L409:
	
__IfxCcu6_disableModule_function_end:
	.size	IfxCcu6_disableModule,__IfxCcu6_disableModule_function_end-IfxCcu6_disableModule
.L223:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_enableModulationOutput',code,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.text.IfxCcu6.IfxCcu6_enableModulationOutput'
	.align	2
	
	.global	IfxCcu6_enableModulationOutput

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   115      uint32 shift, mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   116  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   117      if (timer != IfxCcu6_TimerId_t13)
; Function IfxCcu6_enableModulationOutput
.L95:
IfxCcu6_enableModulationOutput:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   118      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   119          if (channelOut != IfxCcu6_ChannelOut_cout3)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   120          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   121              shift          = channelOut;
	jeq	d4,#1,.L8
.L687:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   122              mask           = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   123              ccu6->MODCTR.U = ccu6->MODCTR.U | (mask);
	jeq	d5,#6,.L9
.L688:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   124          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   125          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   126          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   127      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   128      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   129      {
	j	.L10
.L8:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   130          if (channelOut != IfxCcu6_ChannelOut_cout3)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   131          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   132              shift          = channelOut + 8;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   133              mask           = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   134              ccu6->MODCTR.U = ccu6->MODCTR.U | (mask);
	jeq	d5,#6,.L11
.L689:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   135          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   136          else
	add	d5,d5,#8
.L10:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   137          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   138              ccu6->MODCTR.B.ECT13O = TRUE;
	mov	d0,#1
	ld.w	d15,[a4]128
.L690:
	sha	d0,d0,d5
.L691:
	or	d15,d0
	st.w	[a4]128,d15
.L9:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   139          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   140      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   141  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   142  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   143  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   144  void IfxCcu6_enableModule(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   145  {
	ret
.L11:
	ld.bu	d15,[a4]129
.L692:
	or	d15,#128
	st.b	[a4]129,d15
.L693:
	ret
.L417:
	
__IfxCcu6_enableModulationOutput_function_end:
	.size	IfxCcu6_enableModulationOutput,__IfxCcu6_enableModulationOutput_function_end-IfxCcu6_enableModulationOutput
.L228:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_enableModule',code,cluster('IfxCcu6_enableModule')
	.sect	'.text.IfxCcu6.IfxCcu6_enableModule'
	.align	2
	
	.global	IfxCcu6_enableModule

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   146      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   147      IfxScuWdt_clearCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   148      ccu6->CLC.B.DISR = 0U; /* Enable module */
; Function IfxCcu6_enableModule
.L97:
IfxCcu6_enableModule:	.type	func
	mov.aa	a15,a4
.L438:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   149      IfxScuWdt_setCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   150  
	call	IfxScuWdt_getCpuWatchdogPassword
.L437:
	mov	d15,d2
.L440:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   151      /* Wait until module is enabled */
	mov	d4,d15
	call	IfxScuWdt_clearCpuEndinit
.L439:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   152      while (IfxCcu6_isModuleEnabled(ccu6) == FALSE)
	ld.bu	d0,[a15]
.L698:
	insert	d0,d0,#0,#0,#1
	st.b	[a15],d0
.L699:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   153      {}
	mov	d4,d15
	call	IfxScuWdt_setCpuEndinit

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   154  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   155  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   156  
.L13:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    45   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    46   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    47   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    48   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    49   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    50   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    51   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    52   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    53   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    54   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    55   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    56  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    57  #ifndef IFXCCU6_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    58  #define IFXCCU6_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    59  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    60  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    61  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    62  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    63  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    64  #include "_Impl/IfxCcu6_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    65  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    66  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    67  #include "Scu/Std/IfxScuWdt.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    68  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    69  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    70  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    72  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    73  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    74  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    75  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    76  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    77   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    78  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    79   * Definition in Ifx_CCU.PISEL0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    80   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    81  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    82  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    83      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    84      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    85      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    89      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    90  } IfxCcu6_CaptureCompareInput;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    91  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    92  /** \brief Selection of actual input signal for the capture compare inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    93   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    94  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    95  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   100  } IfxCcu6_CaptureCompareInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   101  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   102  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   103   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   104  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   105  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   106      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   107      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   108      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   109  } IfxCcu6_CaptureCompareState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   110  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   111  /** \brief Capture compare output pins
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   112   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   113  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   114  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   116      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   117      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   118      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   119      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   120      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   121      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   122  } IfxCcu6_ChannelOut;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   123  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   124  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   125   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   126   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   127  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   128  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   129      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   130                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   131      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   132                                                      * event. The T1x prescaler is not taken into account */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   133      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   134                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   137  } IfxCcu6_CountingInputMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   138  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   139  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   140   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   141   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   142  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   143  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   144      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   145                                           * the source signal becomes active */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   146      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   147  } IfxCcu6_DelayBypass;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   148  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   149  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   150   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   151   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   152  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   153  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   156                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   157      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   158                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   159      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   160                                                     * detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   161  } IfxCcu6_ExternalTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   162  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   163  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   164   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   165   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   166  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   167  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                             * signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   171      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   173      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   175      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   177  } IfxCcu6_HallSensorTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   178  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   179  /** \brief Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   180   * Description in Ifx_CCU.IEN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   181   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   182  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   183  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   184      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   185                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   186      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   187                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   188      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   189                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   191                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   193                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   197      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   198      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   199      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   200      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   201      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   202      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   203  } IfxCcu6_InterruptSource;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   204  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   205  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   206   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   207   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   208  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   209  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   210      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   211      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   212      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   213      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   214      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   215                                                                         * delay function) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   217  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   218  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   219  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   220   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   221   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   222  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   223  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   224      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   225                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   228                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   229  } IfxCcu6_MultiChannelSwitchingSync;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   230  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   231  /** \brief Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   232   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   233  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   234  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   237      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   238      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   239  } IfxCcu6_ServiceRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   240  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   242   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   243   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   244  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   245  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   248  } IfxCcu6_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   249  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   251   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   252  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   253  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Capture compare channel of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   261  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   262  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   263      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   269   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   270  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   271  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   272      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   274      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   276      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   277      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   278      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   279                                                                          * programmed to Hall Sensor mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   280      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   281      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   282      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   283      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   286  } IfxCcu6_T12ChannelMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   287  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   288  /** \brief Counting direction of Timer12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   289   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   291  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   292  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   293      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   294      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   295  } IfxCcu6_T12CountDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   296  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   297  /** \brief Operating mode of Timer 12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   298   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   299   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   300  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   301  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   302      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   303                                               * from zero after reaching the period value. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   304      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   305                                               * and counts up after detecting a one-match. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   306  } IfxCcu6_T12CountMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   307  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   308  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   309   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   310   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   311  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   312  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   313      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   314      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   315      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   316      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   317  } IfxCcu6_T13TriggerDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   318  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   319  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   320   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   321   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   322  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   323  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   327      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   328      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   329      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   330      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   331                                                     * counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   332      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   333  } IfxCcu6_T13TriggerEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   334  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   335  /** \brief Timer number ( T12 / T13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   336   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   337  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   338  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   350      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   351      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   352      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   353      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   354      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   355      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   356  } IfxCcu6_TimerInputClock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   358  /** \brief Selection of actual input signal for the timer inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   360  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   361  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   362      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   363      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   364      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   365      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   366      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   368      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   370  } IfxCcu6_TimerInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   371  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   372  /** \brief Timer (T12 / T13) run status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   373   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   374   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   375  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   376  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   377      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   378      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   379  } IfxCcu6_TimerRunStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   380  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   381  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   382   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   383   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   384  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   385  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   386      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   387      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   388                                        * ISR.RTRPF = 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   389  } IfxCcu6_TrapMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   392   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   394  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   395  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   396      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   397                                        * of T12 (while counting up) is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   398      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   399                                        * of T13 is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   400      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   401  } IfxCcu6_TrapState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   402  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   403  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   405  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   407  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   408  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   409  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   410  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   411  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   412  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   413   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   414   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   415   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   416   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   417   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   418  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   420  /** \brief Clears all the three dead-time counter channels to zero.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   421   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   422   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   423   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   424  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   425  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   426  /** \brief Clears the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   427   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   428   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   430   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   431  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   433  /** \brief Clears the T12  One notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   434   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   436   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   437  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   439  /** \brief Clears the T12  period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   440   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   442   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   443  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   445  /** \brief Clears the T13  compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   446   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   448   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   449  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   450  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   451  /** \brief Returns the Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   452   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \return Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   454   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   455  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   456  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   457  /** \brief Returns the status of module enabled or disabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   458   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   459   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   460   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   461  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   462  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   463  /** \brief Returns the status of T12 one notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   464   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   465   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   466   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   467  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   468  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   469  /** \brief Returns the status of T12 period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   471   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   472   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   473  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   475  /** \brief Returns the status of T13 compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param pattern Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param value Value of the dead time to be induced
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   500   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   501  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   503  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   504   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param pattern Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   507   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   508  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   510  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   511   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param mode External trigger mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Hall sensor input trigger event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   526   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param frequency Input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   537   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   538  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   539  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   540  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   541   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   542   * \param pattern Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   544   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   545  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   546  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   547  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   548   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   549   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   550   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   551   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   552  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   553  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   554  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   555   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   556   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   557   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   558   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   559   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   560  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   562  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   563   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   564   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   565   * \param state FALSE: passive state when CC6xST == 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   566   * TRUE : passive state when CC6xST == 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   568   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   569  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   570  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   571  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   572   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \param mode The operating mode for the T12 channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   583   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   584   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   585  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   587  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \param mode Operating mode of Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   590   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   591   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   592  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   594  /** \brief Sets the 16-bit counter value of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \param value Counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   597   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   598   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   599  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   600  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   601  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \param value Period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   604   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   605   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   606  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   607  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   608  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   611   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   612   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   613  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   615  /** \brief Sets the 16-bit counter value of Timer13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \param value counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   618   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   619   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   620  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   622  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \param value period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   625   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   627  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   629  /** \brief Sets the Timer13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param direction T13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param mode The trigger event to start T13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   640   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   641  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   643  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   644   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param mode Trap mode selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   647   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   648  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   649  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   650  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   651   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   652   * \param state Trap state selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   653   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   654   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   655  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   657  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param t12 Timer12 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param t13 Timer13 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param t12 Timer12 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param t13 Timer13 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param currentHall Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param expectedHall Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   677   * \param output Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   682  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   683  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   684  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   686  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   687   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   688   * \param outputLine Output Line
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   689   * \param selectedTrigger Trigger selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   690   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   691   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   692  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   693  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   694  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   695   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   696   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   697   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   698   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   699   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   700  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   701  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   702  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   704   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   705   * \param state FALSE: The passive level is 0.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   706   * TRUE : The passive level is 1.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   707   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   708   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   709  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   710  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   711  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   712   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   713   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   714   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   715   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   716   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   717  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   718  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   719  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   720   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   721   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   722   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   724   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   725  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   726  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   727  /** \brief Sets the frequency and clock input of the Timer 12.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   728   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   729   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   730   * The resulting frequency is captured in the handler element : CaptureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   731   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \param countMode Counting mode of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   735   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   736   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   737   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   738  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period, IfxCcu6_T12CountMode countMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   742   * \param extInput External input signal for the Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   743   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   744   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   745  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Sets the frequency and clock input of the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   755   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   756   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   757   * The resulting frequency is captured in the handler element : captureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   759   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   760   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   761   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   762   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   763   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   764  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   766  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   768   * \param extInput External input signal for the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   769   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   770   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   771  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   773  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   774  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   775  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   776   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   777  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   778  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   779  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   780  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   781  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   782  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   783   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   784   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   785   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   786   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   787  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   788  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   789  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   790   * that has been compared to the current and expected value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   791   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   792   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   794   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   795   * FALSE : The input CCPOSx has been sampled as 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Gets the status of the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   802   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   803   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   804  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   805  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   806  /** \brief indicates if the multi-channel mode functionality is available
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   808   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   809   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   810  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   811  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   812  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   815   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   816   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   817   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   818  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   819  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   820  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   822   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   823   * \return Status (TRUE: enable / FALSE: disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   824   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   825  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   826  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   827  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   828   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   829   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   831   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   832  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   833  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   834  /** \brief Returns the current counting direction of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   835   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   836   * \return direction (up / down)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   837   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   838  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   839  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   840  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   841   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   842   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   843   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   844  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   845  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   846  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   847   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   848   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   849   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   850   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   851  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   852  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   853  /** \brief Returns the Timer (T12 / T13) run status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   854   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   855   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   856   * \return Status (stopped / running)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   857   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   858  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   859  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   860  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   861   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   862   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   863   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   864   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   865   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   866  IFX_INLINE boolean IfxCcu6_isModuleSuspended(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   868  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   869   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   870   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   871   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   872   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   873   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   874  IFX_INLINE void IfxCcu6_setSuspendMode(Ifx_CCU6 *ccu6, IfxCcu6_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   875  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   876  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   877  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   878  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   879  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   880  /** \brief Returns the module index of the selected CCU6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return CCU6 module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_EXTERN Ifx_CCU6 *IfxCcu6_getAddress(IfxCcu6_Index ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Returns the capture register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   889   * \return current value of the capture register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   890   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   891  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   892  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   893  /** \brief Returns the capture shadow register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   896   * \return current value of the capture shadow register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   897   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   898  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   899  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   900  /** \brief Returns CCU6 index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \param ccu6 Specifies the pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   902   * \return Returns index. returns -1 in case of unknown index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   903   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   904  IFX_EXTERN IfxCcu6_Index IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   905  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   906  /** \brief Returns the service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return The service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Returns the current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   922  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   924  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   925  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   926  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   927  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   928  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   929  /** \brief Clears all Interrupt flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   931   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   932   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   933  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   935  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   938   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   939   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   940  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   941  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   942  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   944   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   945   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   946   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   947  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   948  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   949  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   951   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   952   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   953  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   954  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   955  /** \brief Disables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   965   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   966  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   967  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   968  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   969   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   972   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   973   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   974  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   975  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   976  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   978   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   979   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   980   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   981  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   982  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   983  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   984   * T13 output CC63_O is equal to CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   985   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   986   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   987   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   988  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   989  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   990  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   991   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   992   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   993   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   994   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   995  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   996  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   997  /** \brief Disables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   998   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   999   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1000   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1001   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1002  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1003  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1004  /** \brief Disables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1005   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1006   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1007   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1008  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1010  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1011   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1012   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1013   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1014   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1015  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1017  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1018   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1019   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1020   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1021   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1022   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1023  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1024  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1025  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1026   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1027   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1028   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1029   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1030  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1031  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1032  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1033   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1034   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1035   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1036  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1037  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1038  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1040   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1041   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1042  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1043  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1044  /** \brief Enables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1047   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1048   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1049  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1050  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1051  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the Multi Channel Mode Availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1066   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1067  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1068  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1069  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1070   * becomes set while a T12 one match is detected while counting down
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1071   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1072   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1073   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1074  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1075  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1076  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * becomes set while a T12 period match is detected while counting up
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * becomes set while a T13 period match is detected
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1087   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1088  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1089  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1090  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1091   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1094   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1095   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1096  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1097  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1098  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1099   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1101   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1102   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1103  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1104  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1105  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1106   * T13 output CC63_O is equal to CC63ST.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1109   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1110  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1112  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1113   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1116   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1117  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1118  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1119  /** \brief Enables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1120   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1121   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1123   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1124  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1125  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1126  /** \brief Enables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1127   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1128   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1129   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1130  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1131  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1132  /** \brief selects the actual input signal for the capture compare inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1133   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1134   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1135   * \param signal selection of actual input signal for the module inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1136   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1137   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1138  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1139  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1140  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1141  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1142  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1143  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1144  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1148   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1149   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1150  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1151  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1152  /** \brief Disables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_EXTERN void IfxCcu6_disableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1162   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1163   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1164  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1165  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1166  /** \brief Enables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1173  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1174  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1177  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1178  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1179  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1180  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1181  /** \brief Initialises a CC60 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a CC60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cc60Out CC60 compare output CC0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a CC61 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1200   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1201  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1203  /** \brief Initialises a CC61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1204   * \param cc61Out CC61 compare output CC1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a CC62 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a CC62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param cc62Out CC62 compare output CC2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1222   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1223   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1224  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1225  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1226  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1227   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1228   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1229   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1230   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1231  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1232  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1233  /** \brief Initialises a CCPOS1 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1235   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1236   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1237   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1238  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1239  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1241   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1242   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1244   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1245  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1246  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1247  /** \brief Initialises a COUT60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1248   * \param cout60 CC60 compare output COUT0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1249   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1250   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1251   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1252   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1253  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1254  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1255  /** \brief Initialises a COUT61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1256   * \param cout61 CC61 compare output COUT1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1257   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1258   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1259   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1261  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1262  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1263  /** \brief Initialises a COUT62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1264   * \param cout62 CC62 compare output COUT2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1265   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1266   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1267   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1268   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1269  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1270  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1271  /** \brief Initialises a COUT63 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1272   * \param cout63 CC63 compare output COUT3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1273   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1274   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1275   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1276   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1277  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1278  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1279  /** \brief Initialises a CTRAP input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1280   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1281   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1282   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1283   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1284  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1286  /** \brief Initialises a T12HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1287   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1288   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1289   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1291  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1293  /** \brief Initialises a T13HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1294   * \param t13hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1295   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1296   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1297   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1298  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1300  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1301  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1302  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1303  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1304  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1305  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1306  /** \brief Provides functionality for both setting of CC60 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1307   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1308   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1309   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1310   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1311   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1312  IFX_INLINE void IfxCcu6_initCc60InPinWithPadLevel(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1314  /** \brief Provides functionality for both setting of CC61 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1315   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1316   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1317   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1318   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1319   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1320  IFX_INLINE void IfxCcu6_initCc61InPinWithPadLevel(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1322  /** \brief Provides functionality for both setting of CC62 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1323   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1324   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1325   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1326   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1327   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_initCc62InPinWithPadLevel(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1329  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1330  /** \brief Provides functionality for both setting of CCPOS0 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1331   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1332   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1333   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1334   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1335   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1336  IFX_INLINE void IfxCcu6_initCcpos0PinWithPadLevel(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1338  /** \brief Provides functionality for both setting of CCPOS1 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1339   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1340   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1341   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1342   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1343   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1344  IFX_INLINE void IfxCcu6_initCcpos1PinWithPadLevel(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1345  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1346  /** \brief Provides functionality for both setting of CCPOS2 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1347   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1348   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1349   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1350   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1352  IFX_INLINE void IfxCcu6_initCcpos2PinWithPadLevel(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1354  /** \brief Provides functionality for both setting of CTRAP pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1355   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1356   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1357   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1358   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1360  IFX_INLINE void IfxCcu6_initCtrapPinWithPadLevel(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1361  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1362  /** \brief Provides functionality for both setting of T12HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1363   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1364   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1365   * \param padDriver Pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1366   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1367   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1368  IFX_INLINE void IfxCcu6_initT12hrPinWithPadLevel(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1369  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1370  /** \brief Provides functionality for both setting of T13HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1371   * \param t13hrIn Timer 13 HR input T13HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1372   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1373   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1374   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1375   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1376  IFX_INLINE void IfxCcu6_initT13hrPinWithPadLevel(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1377  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1378  /** \brief Sets the sensitivity of the module to sleep signal
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1379   * \param ccu6 pointer to CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1380   * \param mode mode selection (enable/disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1381   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1382   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1383  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1384  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1385  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1386  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1387  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1388  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1389  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1390   * \param ccu6 pointer to ccu6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1391   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1392   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1393  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1394  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1395  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1396  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1397  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1398  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1399  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1400  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1401      ccu6->ISR.U = 0xFFFF;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1402  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1403  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1405  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1406  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1407      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1408      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1409      tctr4.B.T12RES = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1410      tctr4.B.T13RES = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1411      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1412  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1414  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1415  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1416  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1417      ccu6->TCTR4.B.DTRES = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1418  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1421  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1422  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1423      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1424      ccu6->ISR.U = mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1425  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1426  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1427  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1428  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1429  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1430      ccu6->ISR.B.RT12OM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1431  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1434  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1435  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1436      ccu6->ISR.B.RT12PM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1437  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1439  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1440  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1441  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1442      ccu6->ISR.B.RT13CM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1443  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1445  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1446  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1447  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1448      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1449      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1450      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1451  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1452  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1453  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1454  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1455  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1456      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1457      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1458      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1459  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1461  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1462  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1463  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1464      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1465  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1466  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1467  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1468  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1469  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1470      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1471      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1472  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1473  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1475  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1476  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1477      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1478  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1479  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1481  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1482  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1483      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1484      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1485      tctr4.B.T12STD = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1486      tctr4.B.T13STD = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1490  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1493      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1494      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1495  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1496  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1497  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1498  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1499  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1500      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1501  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1503  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1504  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1505  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1506      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1507      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1508  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1510  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1511  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1512  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1513      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1514      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1515      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1516  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1518  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1519  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1520  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1521      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1522  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1523  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1525  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1526  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1527      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1528      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1529      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1530  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1531  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1533  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1534  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1535      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1536      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1537      tctr4.B.T12CNT = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1538      tctr4.B.T13CNT = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1539      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1540  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1541  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1542  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1543  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1544  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1545      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1546      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1547      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1548  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1550  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1551  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1552  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1553      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1554  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1555  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1556  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1557  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1558  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1559      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1560  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1562  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1563  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1564  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1565      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1566      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1567  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1568  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1570  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1571  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1572      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1573  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1574  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1575  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1576  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1577  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1578      ccu6->MCFG.B.MCM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1579  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1580  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1581  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1582  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1583  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1584      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1587  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1590      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1591  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1592  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1594  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1595  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1596      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1597  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1599  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1600  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1601  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1602      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1603  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1604  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1605  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1606  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1607  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1608      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1609      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1610      tctr4.B.T12STR = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1611      tctr4.B.T13STR = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1612      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1615  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1618      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1619      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1622  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1625      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1626  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1627  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1629  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1630  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1631      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1632      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1633  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1634  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1636  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1637  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1638      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1639      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1640      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1643  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1646      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1647  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1648  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1649  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1650  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1651  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1652      uint32 shift = (12 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1653      uint32 mask  = 1 << shift;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1654      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1657  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1660      uint32 shift = (channel + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1661      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1662      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1663  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1664  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1665  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1666  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1667  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1668      uint32 shift = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1669      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1670  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1671  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1672  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1673  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1674  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1675      return ccu6->MCFG.B.MCM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1677  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1678  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1681      return ccu6->MCMOUT.B.R != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1682  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1683  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1684  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1685  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1686  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1687      uint32 shift = ((timer * 8) + 5);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1688      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1689      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1690  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1691  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1692  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1693  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1694  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1695      uint32 mask = (1U << channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1696      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1697  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1698  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1699  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1700  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1701  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1702      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1703  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1704  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1705  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1706  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1707  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1708      return (volatile uint32 *)&ccu6->T12PR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1709  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1710  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1711  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1712  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1713  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1714      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1715  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1716  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1717  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1718  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1719  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1720      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1721      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1722  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1723  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1724  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1725  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1726  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1727      uint32 shift = ((timer * 8) + 4);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1728      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1729      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1730  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1731  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1732  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1733  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1734  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1735      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1736      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1737  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1738  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1739  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1740  IFX_INLINE void IfxCcu6_initCc60InPinWithPadLevel(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1741  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1742      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1743      IfxPort_setPinPadDriver(cc60In->pin.port, cc60In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1744      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1745  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1746  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1747  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1748  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1749  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1750      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1751      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1752  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1754  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1755  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1756  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1757      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1758      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1759  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1760  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1761  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1762  IFX_INLINE void IfxCcu6_initCc61InPinWithPadLevel(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1763  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1764      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1765      IfxPort_setPinPadDriver(cc61In->pin.port, cc61In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1766      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1767  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1768  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1769  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1770  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1771  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1772      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1773      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1774  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1775  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1776  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1777  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1778  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1779      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1780      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1781  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1782  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1783  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1784  IFX_INLINE void IfxCcu6_initCc62InPinWithPadLevel(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1785  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1786      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1787      IfxPort_setPinPadDriver(cc62In->pin.port, cc62In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1788      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1789  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1790  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1791  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1792  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1793  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1794      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1795      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1796  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1797  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1798  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1799  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1800  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1801      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1802      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1803  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1804  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1805  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1806  IFX_INLINE void IfxCcu6_initCcpos0PinWithPadLevel(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1807  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1808      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1809      IfxPort_setPinPadDriver(ccpos0->pin.port, ccpos0->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1810      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1811  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1812  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1813  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1814  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1815  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1816      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1817      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1818  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1819  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1820  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1821  IFX_INLINE void IfxCcu6_initCcpos1PinWithPadLevel(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1822  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1823      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1824      IfxPort_setPinPadDriver(ccpos1->pin.port, ccpos1->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1825      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1826  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1827  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1828  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1829  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1830  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1831      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1832      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1833  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1834  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1835  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1836  IFX_INLINE void IfxCcu6_initCcpos2PinWithPadLevel(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1837  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1838      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1839      IfxPort_setPinPadDriver(ccpos2->pin.port, ccpos2->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1840      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1841  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1842  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1843  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1844  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1845  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1846      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1847      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1848  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1849  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1850  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1851  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1852  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1853      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1854      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1855  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1856  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1857  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1858  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1859  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1860      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1861      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1862  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1863  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1864  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1865  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1866  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1867      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1868      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1869  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1870  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1871  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1872  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1873  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1874      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1875      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1876  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1877  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1878  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1879  IFX_INLINE void IfxCcu6_initCtrapPinWithPadLevel(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1880  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1881      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1882      IfxPort_setPinPadDriver(ctrap->pin.port, ctrap->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1883      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1884  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1885  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1886  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1887  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1888  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1889      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1890      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1891  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1892  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1893  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1894  IFX_INLINE void IfxCcu6_initT12hrPinWithPadLevel(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1895  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1896      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1897      IfxPort_setPinPadDriver(t12hrIn->pin.port, t12hrIn->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1898      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1899  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1900  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1901  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1902  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1903  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1904      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1905      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1906  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1907  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1908  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1909  IFX_INLINE void IfxCcu6_initT13hrPinWithPadLevel(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1910  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1911      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1912      IfxPort_setPinPadDriver(t13hrIn->pin.port, t13hrIn->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1913      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1914  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1915  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1916  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1917  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1918  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1919      return ccu6->CLC.B.DISS == 0;
	ld.bu	d15,[a15]
.L425:
	jnz.t	d15:1,.L13
.L700:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   157  cu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   158  {
	ret
.L422:
	
__IfxCcu6_enableModule_function_end:
	.size	IfxCcu6_enableModule,__IfxCcu6_enableModule_function_end-IfxCcu6_enableModule
.L233:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_getAddress',code,cluster('IfxCcu6_getAddress')
	.sect	'.text.IfxCcu6.IfxCcu6_getAddress'
	.align	2
	
	.global	IfxCcu6_getAddress

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   159      Ifx_CCU6 *module;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   160  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   161      if (ccu6 < IFXCCU6_NUM_MODULES)
; Function IfxCcu6_getAddress
.L99:
IfxCcu6_getAddress:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   162      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   163          module = (Ifx_CCU6 *)IfxCcu6_cfg_indexMap[ccu6].module;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   164      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   165      else
	jge	d4,#2,.L14
.L621:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   166      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   167          module = NULL_PTR;
	movh.a	a15,#@his(IfxCcu6_cfg_indexMap)
	lea	a15,[a15]@los(IfxCcu6_cfg_indexMap)
.L622:
	addsc.a	a15,a15,d4,#3
.L623:
	ld.a	a2,[a15]
.L441:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   168      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   169  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   170      return module;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   171  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   172  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   173  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   174  uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   175  {
	ret
.L14:
	mov.a	a2,#0
.L442:
	ret
.L377:
	
__IfxCcu6_getAddress_function_end:
	.size	IfxCcu6_getAddress,__IfxCcu6_getAddress_function_end-IfxCcu6_getAddress
.L188:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_getCaptureRegisterValue',code,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.text.IfxCcu6.IfxCcu6_getCaptureRegisterValue'
	.align	2
	
	.global	IfxCcu6_getCaptureRegisterValue

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   176      uint32 value = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   177  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   178      switch (channel)
; Function IfxCcu6_getCaptureRegisterValue
.L101:
IfxCcu6_getCaptureRegisterValue:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   179      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   180      case IfxCcu6_T12Channel_0:
	mov	d2,#0
.L443:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   181          value = ccu6->CC60R.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   182          break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   183      case IfxCcu6_T12Channel_1:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   184          value = ccu6->CC61R.U;
	jeq	d4,#0,.L17
.L628:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   185          break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   186      case IfxCcu6_T12Channel_2:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   187          value = ccu6->CC62R.U;
	jeq	d4,#1,.L18
.L629:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   188          break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   189      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   190  
	jeq	d4,#2,.L19
.L630:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   191      return value;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   192  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   193  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   194  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   195  uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   196  {
	ret
.L17:
	ld.w	d2,[a4]48
.L631:
	ret
.L18:
	ld.w	d2,[a4]52
.L632:
	ret
.L19:
	ld.w	d2,[a4]56
.L633:
	ret
.L381:
	
__IfxCcu6_getCaptureRegisterValue_function_end:
	.size	IfxCcu6_getCaptureRegisterValue,__IfxCcu6_getCaptureRegisterValue_function_end-IfxCcu6_getCaptureRegisterValue
.L193:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_getCaptureShadowRegisterValue',code,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.text.IfxCcu6.IfxCcu6_getCaptureShadowRegisterValue'
	.align	2
	
	.global	IfxCcu6_getCaptureShadowRegisterValue

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   197      uint32 value = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   198  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   199      switch (channel)
; Function IfxCcu6_getCaptureShadowRegisterValue
.L103:
IfxCcu6_getCaptureShadowRegisterValue:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   200      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   201      case IfxCcu6_T12Channel_0:
	mov	d2,#0
.L444:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   202          value = ccu6->CC60SR.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   203          break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   204      case IfxCcu6_T12Channel_1:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   205          value = ccu6->CC61SR.U;
	jeq	d4,#0,.L24
.L638:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   206          break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   207      case IfxCcu6_T12Channel_2:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   208          value = ccu6->CC62SR.U;
	jeq	d4,#1,.L25
.L639:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   209          break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   210      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   211  
	jeq	d4,#2,.L26
.L640:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   212      return value;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   213  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   214  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   215  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   216  IfxCcu6_Index IfxCcu6_getIndex(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   217  {
	ret
.L24:
	ld.w	d2,[a4]64
.L641:
	ret
.L25:
	ld.w	d2,[a4]68
.L642:
	ret
.L26:
	ld.w	d2,[a4]72
.L643:
	ret
.L385:
	
__IfxCcu6_getCaptureShadowRegisterValue_function_end:
	.size	IfxCcu6_getCaptureShadowRegisterValue,__IfxCcu6_getCaptureShadowRegisterValue_function_end-IfxCcu6_getCaptureShadowRegisterValue
.L198:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_getIndex',code,cluster('IfxCcu6_getIndex')
	.sect	'.text.IfxCcu6.IfxCcu6_getIndex'
	.align	2
	
	.global	IfxCcu6_getIndex

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   218      uint32        index;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   219      IfxCcu6_Index result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   220  
; Function IfxCcu6_getIndex
.L105:
IfxCcu6_getIndex:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   221      result = IfxCcu6_Index_none;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   222  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   223      for (index = 0; index < IFXCCU6_NUM_MODULES; index++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   224      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   225          if (IfxCcu6_cfg_indexMap[index].module == ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   226          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   227              result = (IfxCcu6_Index)IfxCcu6_cfg_indexMap[index].index;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   228              break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   229          }
	mov	d2,#-1
	movh.a	a15,#@his(IfxCcu6_cfg_indexMap)
.L445:
	lea	a15,[a15]@los(IfxCcu6_cfg_indexMap)
.L648:
	mov.a	a2,#1
.L31:
	ld.a	a5,[a15]
.L649:
	jne.a	a5,a4,.L32
.L650:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   230      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   231  
	ld.w	d15,[a15]4
.L651:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   232      return result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   233  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   234  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   235  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   236  volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   237  {
	extr	d2,d15,#0,#8
	ret
.L32:
	lea	a15,[a15]8
	loop	a2,.L31
.L652:
	ret
.L389:
	
__IfxCcu6_getIndex_function_end:
	.size	IfxCcu6_getIndex,__IfxCcu6_getIndex_function_end-IfxCcu6_getIndex
.L203:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_getSrcAddress',code,cluster('IfxCcu6_getSrcAddress')
	.sect	'.text.IfxCcu6.IfxCcu6_getSrcAddress'
	.align	2
	
	.global	IfxCcu6_getSrcAddress

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   238      sint32                 moduleIdx = IfxCcu6_getIndex(ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   239      volatile Ifx_SRC_SRCR *srcr;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   240  
; Function IfxCcu6_getSrcAddress
.L107:
IfxCcu6_getSrcAddress:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   241      srcr = &(MODULE_SRC.CCU6.CCU6[moduleIdx].SR0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   242      return &(srcr[serviceRequest]);
	mov	d15,d4
	call	IfxCcu6_getIndex
.L446:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   243  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   244  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   245  
	sha	d2,#4
	movh.a	a15,#61444
.L447:
	lea	a15,[a15]@los(0xf0038420)
.L657:
	addsc.a	a15,a15,d2,#0
.L658:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   246  uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
	addsc.a	a2,a15,d15,#2
.L659:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   247  {
	ret
.L394:
	
__IfxCcu6_getSrcAddress_function_end:
	.size	IfxCcu6_getSrcAddress,__IfxCcu6_getSrcAddress_function_end-IfxCcu6_getSrcAddress
.L208:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_readTimer',code,cluster('IfxCcu6_readTimer')
	.sect	'.text.IfxCcu6.IfxCcu6_readTimer'
	.align	2
	
	.global	IfxCcu6_readTimer

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   248      uint32 result = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   249  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   250      if (timer != IfxCcu6_TimerId_t13)
; Function IfxCcu6_readTimer
.L109:
IfxCcu6_readTimer:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   251      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   252          result = ccu6->T12.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   253      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   254      else
	jeq	d4,#1,.L36
.L664:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   255      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   256          result = ccu6->T13.U;
	ld.w	d2,[a4]32
.L448:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   257      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   258  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   259      return result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   260  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   261  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   262  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   263  void IfxCcu6_resetModule(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   264  {
	ret
.L36:
	ld.w	d2,[a4]80
.L449:
	ret
.L399:
	
__IfxCcu6_readTimer_function_end:
	.size	IfxCcu6_readTimer,__IfxCcu6_readTimer_function_end-IfxCcu6_readTimer
.L213:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_resetModule',code,cluster('IfxCcu6_resetModule')
	.sect	'.text.IfxCcu6.IfxCcu6_resetModule'
	.align	2
	
	.global	IfxCcu6_resetModule

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   265      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   266  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   267      IfxScuWdt_clearCpuEndinit(passwd);
; Function IfxCcu6_resetModule
.L111:
IfxCcu6_resetModule:	.type	func
	mov.aa	a15,a4
.L451:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   268      ccu6->KRST0.B.RST = 1;          /* Only if both Kernel reset bits are set a reset is executed */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   269      ccu6->KRST1.B.RST = 1;
	call	IfxScuWdt_getCpuWatchdogPassword
.L450:
	mov	d8,d2
.L453:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   270      IfxScuWdt_setCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   271  
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L452:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   272      while (0 == ccu6->KRST0.B.RSTSTAT)  /* Wait until reset is executed */
	ld.bu	d15,[a15]244
.L705:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   273  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   274      {}
	mov	d4,d8
.L454:
	or	d15,#1
	st.b	[a15]244,d15
.L706:
	ld.bu	d15,[a15]240
.L707:
	or	d15,#1
	st.b	[a15]240,d15
.L708:
	call	IfxScuWdt_setCpuEndinit

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   275  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   276      IfxScuWdt_clearCpuEndinit(passwd);
.L39:
	ld.bu	d15,[a15]244
.L709:
	jz.t	d15:1,.L39
.L710:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   277      ccu6->KRSTCLR.B.CLR = 1;            /* Clear Kernel reset status bit */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   278      IfxScuWdt_setCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   279  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   280  
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L711:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   281  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   282  void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest)
	mov	d4,d8
	ld.bu	d15,[a15]236
.L455:
	or	d15,#1
	st.b	[a15]236,d15
.L712:
	j	IfxScuWdt_setCpuEndinit
.L427:
	
__IfxCcu6_resetModule_function_end:
	.size	IfxCcu6_resetModule,__IfxCcu6_resetModule_function_end-IfxCcu6_resetModule
.L238:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_routeInterruptNode',code,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.text.IfxCcu6.IfxCcu6_routeInterruptNode'
	.align	2
	
	.global	IfxCcu6_routeInterruptNode

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   283  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   284      if ((source == IfxCcu6_InterruptSource_cc60RisingEdge) || (source == IfxCcu6_InterruptSource_cc60FallingEdge))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   285      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   286          ccu6->INP.B.INPCC60 = serviceRequest;
; Function IfxCcu6_routeInterruptNode
.L113:
IfxCcu6_routeInterruptNode:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   287      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   288      else if ((source == IfxCcu6_InterruptSource_cc61RisingEdge) || (source == IfxCcu6_InterruptSource_cc61FallingEdge))
	jeq	d4,#0,.L40
.L493:
	jne	d4,#1,.L41
.L40:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   289      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   290          ccu6->INP.B.INPCC61 = serviceRequest;
	ld.bu	d15,[a4]172
.L494:
	insert	d15,d15,d5,#0,#2
	j	.L42
.L41:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   291      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   292      else if ((source == IfxCcu6_InterruptSource_cc62RisingEdge) || (source == IfxCcu6_InterruptSource_cc62FallingEdge))
	jeq	d4,#2,.L43
.L495:
	jne	d4,#3,.L44
.L43:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   293      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   294          ccu6->INP.B.INPCC62 = serviceRequest;
	ld.bu	d15,[a4]172
.L496:
	insert	d15,d15,d5,#2,#2
	j	.L45
.L44:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   295      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   296      else if ((source == IfxCcu6_InterruptSource_correctHallEvent))
	jeq	d4,#4,.L46
.L497:
	jne	d4,#5,.L47
.L46:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   297      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   298          ccu6->INP.B.INPCHE = serviceRequest;
	ld.bu	d15,[a4]172
.L498:
	insert	d15,d15,d5,#4,#2
	j	.L48
.L47:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   299      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   300      else if ((source == IfxCcu6_InterruptSource_trap) || (source == IfxCcu6_InterruptSource_wrongHallEvent))
	mov	d15,#12
.L499:
	jne	d15,d4,.L49
.L500:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   301      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   302          ccu6->INP.B.INPERR = serviceRequest;
	ld.bu	d15,[a4]172
.L501:
	insert	d15,d15,d5,#6,#2
.L48:
.L45:
.L42:
	st.b	[a4]172,d15
.L502:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   303      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   304      else if ((source == IfxCcu6_InterruptSource_t12OneMatch) || (source == IfxCcu6_InterruptSource_t12PeriodMatch))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   305      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   306          ccu6->INP.B.INPT12 = serviceRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   307      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   308      else if ((source == IfxCcu6_InterruptSource_t13CompareMatch) || (source == IfxCcu6_InterruptSource_t13PeriodMatch))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   309      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   310          ccu6->INP.B.INPT13 = serviceRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   311      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   312      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   313      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   314          __debug();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   315      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   316  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   317  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   318  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   319  void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   320  {
	ret
.L49:
	mov	d15,#10
.L503:
	jeq	d15,d4,.L51
.L504:
	mov	d15,#13
.L505:
	jne	d15,d4,.L52
.L51:
	ld.bu	d15,[a4]173
.L506:
	insert	d15,d15,d5,#0,#2
	j	.L53
.L52:
	jeq	d4,#6,.L54
.L507:
	jne	d4,#7,.L55
.L54:
	ld.bu	d15,[a4]173
.L508:
	insert	d15,d15,d5,#2,#2
	j	.L56
.L55:
	mov	d15,#8
.L509:
	jeq	d15,d4,.L57
.L510:
	mov	d15,#9
.L511:
	jne	d15,d4,.L58
.L57:
	ld.bu	d15,[a4]173
.L512:
	insert	d15,d15,d5,#4,#2
.L56:
.L53:
	st.b	[a4]173,d15
.L513:
	ret
.L58:
	debug
.L514:
	ret
.L260:
	
__IfxCcu6_routeInterruptNode_function_end:
	.size	IfxCcu6_routeInterruptNode,__IfxCcu6_routeInterruptNode_function_end-IfxCcu6_routeInterruptNode
.L143:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setOutputPassiveLevel',code,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.text.IfxCcu6.IfxCcu6_setOutputPassiveLevel'
	.align	2
	
	.global	IfxCcu6_setOutputPassiveLevel

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   321      if (channelOut != IfxCcu6_ChannelOut_cout3)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   322      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   323          uint32 shift = channelOut;
; Function IfxCcu6_setOutputPassiveLevel
.L115:
IfxCcu6_setOutputPassiveLevel:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   324          uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   325          ccu6->PSLR.U = (ccu6->PSLR.U & ~mask) | ((uint32)state << shift);
	jeq	d4,#6,.L60
.L272:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   326      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   327      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   328      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   329          ccu6->PSLR.B.PSL63 = state;
	mov	d0,#1
	ld.w	d15,[a4]136
.L519:
	sha	d0,d0,d4
.L520:
	mov	d1,#-1
	xor	d0,d1
.L521:
	and	d15,d0
.L522:
	sh	d5,d5,d4
.L456:
	or	d15,d5
	st.w	[a4]136,d15
.L273:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   330      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   331  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   332  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   333  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   334  void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   335  {
	ret
.L60:
	ld.bu	d15,[a4]136
.L523:
	insert	d15,d15,d5,#7,#1
	st.b	[a4]136,d15
.L524:
	ret
.L266:
	
__IfxCcu6_setOutputPassiveLevel_function_end:
	.size	IfxCcu6_setOutputPassiveLevel,__IfxCcu6_setOutputPassiveLevel_function_end-IfxCcu6_setOutputPassiveLevel
.L148:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT12CaptureCompareState',code,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.text.IfxCcu6.IfxCcu6_setT12CaptureCompareState'
	.align	2
	
	.global	IfxCcu6_setT12CaptureCompareState

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   336      uint32 mask = (0x0101U << channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   337      uint32 mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   338  
; Function IfxCcu6_setT12CaptureCompareState
.L117:
IfxCcu6_setT12CaptureCompareState:	.type	func
	mov	d15,d5
.L457:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   339      if (state == IfxCcu6_CaptureCompareState_set)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   340      {
	mov	d0,#257
.L529:
	sh	d0,d0,d4
.L459:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   341          mode             = 0x0001U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   342          ccu6->CMPMODIF.U = (ccu6->CMPMODIF.U & ~mask) | (mode << channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   343      }
	jne	d15,#0,.L62
.L530:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   344  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   345      if (state == IfxCcu6_CaptureCompareState_clear)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   346      {
	mov	d2,#-1
	ld.w	d1,[a4]100
.L531:
	xor	d2,d0
.L532:
	and	d1,d2
.L533:
	mov	d2,#1
.L534:
	sh	d2,d2,d4
.L535:
	or	d1,d2
	st.w	[a4]100,d1
.L62:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   347          mode             = 0x0100U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   348          ccu6->CMPMODIF.U = (ccu6->CMPMODIF.U & ~mask) | (mode << channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   349      }
	jne	d15,#1,.L63
.L536:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   350  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   351      if (state == IfxCcu6_CaptureCompareState_toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   352      {
	mov	d2,#-1
	ld.w	d1,[a4]100
.L537:
	xor	d2,d0
.L538:
	and	d1,d2
.L539:
	mov	d2,#256
.L540:
	sh	d2,d2,d4
.L541:
	or	d1,d2
	st.w	[a4]100,d1
.L63:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   353          mode             = 0x0101U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   354          ccu6->CMPMODIF.U = (ccu6->CMPMODIF.U & ~mask) | (mode << channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   355      }
	jne	d15,#2,.L64
.L542:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   356  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   358  
	mov	d1,#-1
	ld.w	d15,[a4]100
.L458:
	xor	d0,d1
.L460:
	and	d15,d0
.L543:
	mov	d0,#257
.L544:
	sh	d0,d0,d4
.L545:
	or	d15,d0
	st.w	[a4]100,d15
.L64:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   359  void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   360  {
	ret
.L276:
	
__IfxCcu6_setT12CaptureCompareState_function_end:
	.size	IfxCcu6_setT12CaptureCompareState,__IfxCcu6_setT12CaptureCompareState_function_end-IfxCcu6_setT12CaptureCompareState
.L153:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT12CompareValue',code,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.text.IfxCcu6.IfxCcu6_setT12CompareValue'
	.align	2
	
	.global	IfxCcu6_setT12CompareValue

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   361      switch (channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   362      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   363      case IfxCcu6_T12Channel_0:
; Function IfxCcu6_setT12CompareValue
.L119:
IfxCcu6_setT12CompareValue:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   364          ccu6->CC60SR.B.CCS = value;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   365          break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   366      case IfxCcu6_T12Channel_1:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   367          ccu6->CC61SR.B.CCS = value;
	jeq	d4,#0,.L65
.L550:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   368          break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   369      case IfxCcu6_T12Channel_2:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   370          ccu6->CC62SR.B.CCS = value;
	jeq	d4,#1,.L66
.L551:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   371          break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   372      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   373  }
	jeq	d4,#2,.L67
.L552:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   374  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   375  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   376  float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period, IfxCcu6_T12CountMode countMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   377  {
	ret
.L65:
	st.h	[a4]64,d5
.L553:
	ret
.L66:
	st.h	[a4]68,d5
.L554:
	ret
.L67:
	st.h	[a4]72,d5
.L555:
	ret
.L283:
	
__IfxCcu6_setT12CompareValue_function_end:
	.size	IfxCcu6_setT12CompareValue,__IfxCcu6_setT12CompareValue_function_end-IfxCcu6_setT12CompareValue
.L158:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT12Frequency',code,cluster('IfxCcu6_setT12Frequency')
	.sect	'.text.IfxCcu6.IfxCcu6_setT12Frequency'
	.align	2
	
	.global	IfxCcu6_setT12Frequency

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   378      uint16  prescaler;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   379      float32 freqCC6   = IfxScuCcu_getSpbFrequency();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   380      uint16  divFactor = freqCC6 / frequency;
; Function IfxCcu6_setT12Frequency
.L121:
IfxCcu6_setT12Frequency:	.type	func
	mov	d10,d6
	mov.aa	a15,a4
.L462:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   381  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   382      for (prescaler = 0; prescaler < 16; prescaler++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   383      {
	mov	e8,d4,d5
	call	IfxScuCcu_getSpbFrequency
.L461:
	mov	d11,d2
.L464:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   384          divFactor = divFactor / 2;
	div.f	d4,d11,d9
	call	__f_ftous
.L463:
	mov	d15,d2
.L465:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   385  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   386          if (divFactor == (uint8)0)
	mov	d1,#0
	mov.a	a2,#15
.L71:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   387          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   388              break;
	sha	d15,#-1
.L560:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   389          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   390      }
	jeq	d15,#0,.L72
.L561:
	add	d1,#1
	loop	a2,.L71

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   391  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   392      if (prescaler < 16)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   393      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   394          uint16                  periodVal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   395          boolean                 additionalPrescaler;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   396          IfxCcu6_TimerInputClock clockInput;
.L72:
	mov	d15,#16
.L466:
	jge.u	d1,d15,.L73
.L297:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   397  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   398          periodVal = (uint16)((countMode != IfxCcu6_T12CountMode_edgeAligned) ? ((period / 2) - 1) : (period - 1));
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   399          IfxCcu6_setT12PeriodValue(ccu6, periodVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   400          IfxCcu6_enableShadowTransfer(ccu6, TRUE, FALSE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   401  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   402          clockInput = (IfxCcu6_TimerInputClock)(prescaler & 0x7U);
	jeq	d10,#0,.L74
.L562:
	sh	d8,#-1
.L74:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    45   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    46   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    47   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    48   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    49   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    50   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    51   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    52   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    53   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    54   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    55   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    56  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    57  #ifndef IFXCCU6_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    58  #define IFXCCU6_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    59  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    60  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    61  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    62  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    63  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    64  #include "_Impl/IfxCcu6_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    65  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    66  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    67  #include "Scu/Std/IfxScuWdt.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    68  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    69  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    70  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    72  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    73  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    74  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    75  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    76  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    77   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    78  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    79   * Definition in Ifx_CCU.PISEL0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    80   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    81  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    82  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    83      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    84      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    85      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    89      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    90  } IfxCcu6_CaptureCompareInput;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    91  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    92  /** \brief Selection of actual input signal for the capture compare inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    93   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    94  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    95  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   100  } IfxCcu6_CaptureCompareInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   101  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   102  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   103   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   104  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   105  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   106      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   107      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   108      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   109  } IfxCcu6_CaptureCompareState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   110  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   111  /** \brief Capture compare output pins
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   112   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   113  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   114  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   116      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   117      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   118      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   119      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   120      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   121      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   122  } IfxCcu6_ChannelOut;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   123  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   124  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   125   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   126   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   127  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   128  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   129      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   130                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   131      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   132                                                      * event. The T1x prescaler is not taken into account */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   133      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   134                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   137  } IfxCcu6_CountingInputMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   138  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   139  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   140   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   141   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   142  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   143  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   144      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   145                                           * the source signal becomes active */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   146      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   147  } IfxCcu6_DelayBypass;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   148  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   149  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   150   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   151   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   152  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   153  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   156                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   157      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   158                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   159      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   160                                                     * detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   161  } IfxCcu6_ExternalTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   162  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   163  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   164   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   165   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   166  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   167  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                             * signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   171      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   173      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   175      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   177  } IfxCcu6_HallSensorTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   178  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   179  /** \brief Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   180   * Description in Ifx_CCU.IEN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   181   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   182  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   183  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   184      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   185                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   186      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   187                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   188      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   189                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   191                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   193                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   197      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   198      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   199      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   200      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   201      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   202      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   203  } IfxCcu6_InterruptSource;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   204  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   205  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   206   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   207   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   208  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   209  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   210      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   211      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   212      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   213      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   214      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   215                                                                         * delay function) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   217  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   218  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   219  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   220   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   221   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   222  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   223  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   224      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   225                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   228                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   229  } IfxCcu6_MultiChannelSwitchingSync;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   230  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   231  /** \brief Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   232   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   233  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   234  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   237      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   238      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   239  } IfxCcu6_ServiceRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   240  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   242   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   243   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   244  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   245  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   248  } IfxCcu6_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   249  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   251   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   252  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   253  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Capture compare channel of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   261  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   262  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   263      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   269   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   270  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   271  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   272      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   274      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   276      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   277      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   278      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   279                                                                          * programmed to Hall Sensor mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   280      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   281      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   282      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   283      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   286  } IfxCcu6_T12ChannelMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   287  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   288  /** \brief Counting direction of Timer12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   289   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   291  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   292  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   293      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   294      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   295  } IfxCcu6_T12CountDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   296  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   297  /** \brief Operating mode of Timer 12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   298   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   299   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   300  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   301  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   302      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   303                                               * from zero after reaching the period value. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   304      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   305                                               * and counts up after detecting a one-match. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   306  } IfxCcu6_T12CountMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   307  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   308  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   309   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   310   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   311  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   312  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   313      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   314      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   315      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   316      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   317  } IfxCcu6_T13TriggerDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   318  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   319  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   320   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   321   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   322  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   323  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   327      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   328      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   329      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   330      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   331                                                     * counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   332      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   333  } IfxCcu6_T13TriggerEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   334  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   335  /** \brief Timer number ( T12 / T13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   336   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   337  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   338  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   350      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   351      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   352      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   353      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   354      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   355      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   356  } IfxCcu6_TimerInputClock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   358  /** \brief Selection of actual input signal for the timer inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   360  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   361  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   362      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   363      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   364      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   365      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   366      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   368      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   370  } IfxCcu6_TimerInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   371  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   372  /** \brief Timer (T12 / T13) run status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   373   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   374   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   375  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   376  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   377      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   378      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   379  } IfxCcu6_TimerRunStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   380  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   381  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   382   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   383   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   384  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   385  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   386      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   387      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   388                                        * ISR.RTRPF = 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   389  } IfxCcu6_TrapMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   392   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   394  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   395  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   396      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   397                                        * of T12 (while counting up) is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   398      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   399                                        * of T13 is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   400      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   401  } IfxCcu6_TrapState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   402  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   403  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   405  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   407  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   408  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   409  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   410  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   411  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   412  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   413   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   414   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   415   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   416   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   417   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   418  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   420  /** \brief Clears all the three dead-time counter channels to zero.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   421   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   422   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   423   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   424  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   425  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   426  /** \brief Clears the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   427   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   428   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   430   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   431  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   433  /** \brief Clears the T12  One notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   434   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   436   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   437  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   439  /** \brief Clears the T12  period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   440   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   442   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   443  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   445  /** \brief Clears the T13  compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   446   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   448   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   449  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   450  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   451  /** \brief Returns the Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   452   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \return Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   454   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   455  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   456  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   457  /** \brief Returns the status of module enabled or disabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   458   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   459   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   460   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   461  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   462  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   463  /** \brief Returns the status of T12 one notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   464   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   465   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   466   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   467  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   468  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   469  /** \brief Returns the status of T12 period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   471   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   472   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   473  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   475  /** \brief Returns the status of T13 compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param pattern Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param value Value of the dead time to be induced
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   500   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   501  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   503  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   504   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param pattern Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   507   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   508  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   510  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   511   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param mode External trigger mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Hall sensor input trigger event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   526   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param frequency Input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   537   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   538  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   539  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   540  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   541   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   542   * \param pattern Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   544   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   545  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   546  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   547  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   548   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   549   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   550   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   551   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   552  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   553  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   554  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   555   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   556   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   557   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   558   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   559   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   560  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   562  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   563   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   564   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   565   * \param state FALSE: passive state when CC6xST == 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   566   * TRUE : passive state when CC6xST == 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   568   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   569  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   570  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   571  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   572   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \param mode The operating mode for the T12 channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   583   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   584   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   585  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   587  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \param mode Operating mode of Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   590   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   591   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   592  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   594  /** \brief Sets the 16-bit counter value of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \param value Counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   597   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   598   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   599  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   600  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   601  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \param value Period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   604   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   605   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   606  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   607  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   608  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   611   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   612   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   613  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   615  /** \brief Sets the 16-bit counter value of Timer13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \param value counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   618   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   619   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   620  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   622  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \param value period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   625   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   627  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   629  /** \brief Sets the Timer13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param direction T13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param mode The trigger event to start T13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   640   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   641  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   643  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   644   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param mode Trap mode selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   647   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   648  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   649  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   650  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   651   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   652   * \param state Trap state selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   653   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   654   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   655  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   657  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param t12 Timer12 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param t13 Timer13 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param t12 Timer12 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param t13 Timer13 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param currentHall Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param expectedHall Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   677   * \param output Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   682  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   683  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   684  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   686  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   687   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   688   * \param outputLine Output Line
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   689   * \param selectedTrigger Trigger selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   690   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   691   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   692  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   693  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   694  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   695   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   696   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   697   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   698   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   699   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   700  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   701  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   702  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   704   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   705   * \param state FALSE: The passive level is 0.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   706   * TRUE : The passive level is 1.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   707   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   708   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   709  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   710  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   711  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   712   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   713   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   714   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   715   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   716   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   717  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   718  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   719  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   720   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   721   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   722   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   724   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   725  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   726  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   727  /** \brief Sets the frequency and clock input of the Timer 12.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   728   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   729   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   730   * The resulting frequency is captured in the handler element : CaptureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   731   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \param countMode Counting mode of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   735   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   736   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   737   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   738  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period, IfxCcu6_T12CountMode countMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   742   * \param extInput External input signal for the Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   743   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   744   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   745  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Sets the frequency and clock input of the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   755   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   756   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   757   * The resulting frequency is captured in the handler element : captureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   759   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   760   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   761   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   762   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   763   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   764  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   766  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   768   * \param extInput External input signal for the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   769   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   770   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   771  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   773  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   774  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   775  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   776   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   777  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   778  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   779  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   780  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   781  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   782  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   783   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   784   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   785   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   786   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   787  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   788  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   789  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   790   * that has been compared to the current and expected value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   791   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   792   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   794   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   795   * FALSE : The input CCPOSx has been sampled as 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Gets the status of the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   802   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   803   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   804  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   805  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   806  /** \brief indicates if the multi-channel mode functionality is available
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   808   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   809   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   810  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   811  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   812  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   815   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   816   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   817   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   818  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   819  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   820  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   822   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   823   * \return Status (TRUE: enable / FALSE: disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   824   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   825  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   826  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   827  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   828   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   829   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   831   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   832  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   833  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   834  /** \brief Returns the current counting direction of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   835   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   836   * \return direction (up / down)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   837   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   838  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   839  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   840  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   841   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   842   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   843   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   844  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   845  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   846  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   847   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   848   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   849   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   850   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   851  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   852  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   853  /** \brief Returns the Timer (T12 / T13) run status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   854   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   855   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   856   * \return Status (stopped / running)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   857   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   858  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   859  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   860  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   861   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   862   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   863   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   864   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   865   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   866  IFX_INLINE boolean IfxCcu6_isModuleSuspended(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   868  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   869   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   870   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   871   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   872   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   873   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   874  IFX_INLINE void IfxCcu6_setSuspendMode(Ifx_CCU6 *ccu6, IfxCcu6_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   875  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   876  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   877  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   878  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   879  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   880  /** \brief Returns the module index of the selected CCU6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return CCU6 module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_EXTERN Ifx_CCU6 *IfxCcu6_getAddress(IfxCcu6_Index ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Returns the capture register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   889   * \return current value of the capture register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   890   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   891  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   892  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   893  /** \brief Returns the capture shadow register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   896   * \return current value of the capture shadow register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   897   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   898  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   899  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   900  /** \brief Returns CCU6 index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \param ccu6 Specifies the pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   902   * \return Returns index. returns -1 in case of unknown index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   903   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   904  IFX_EXTERN IfxCcu6_Index IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   905  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   906  /** \brief Returns the service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return The service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Returns the current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   922  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   924  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   925  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   926  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   927  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   928  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   929  /** \brief Clears all Interrupt flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   931   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   932   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   933  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   935  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   938   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   939   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   940  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   941  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   942  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   944   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   945   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   946   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   947  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   948  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   949  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   951   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   952   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   953  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   954  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   955  /** \brief Disables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   965   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   966  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   967  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   968  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   969   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   972   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   973   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   974  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   975  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   976  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   978   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   979   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   980   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   981  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   982  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   983  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   984   * T13 output CC63_O is equal to CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   985   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   986   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   987   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   988  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   989  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   990  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   991   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   992   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   993   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   994   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   995  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   996  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   997  /** \brief Disables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   998   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   999   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1000   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1001   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1002  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1003  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1004  /** \brief Disables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1005   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1006   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1007   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1008  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1010  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1011   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1012   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1013   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1014   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1015  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1017  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1018   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1019   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1020   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1021   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1022   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1023  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1024  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1025  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1026   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1027   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1028   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1029   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1030  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1031  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1032  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1033   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1034   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1035   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1036  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1037  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1038  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1040   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1041   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1042  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1043  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1044  /** \brief Enables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1047   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1048   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1049  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1050  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1051  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the Multi Channel Mode Availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1066   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1067  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1068  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1069  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1070   * becomes set while a T12 one match is detected while counting down
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1071   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1072   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1073   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1074  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1075  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1076  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * becomes set while a T12 period match is detected while counting up
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * becomes set while a T13 period match is detected
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1087   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1088  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1089  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1090  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1091   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1094   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1095   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1096  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1097  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1098  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1099   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1101   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1102   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1103  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1104  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1105  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1106   * T13 output CC63_O is equal to CC63ST.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1109   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1110  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1112  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1113   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1116   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1117  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1118  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1119  /** \brief Enables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1120   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1121   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1123   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1124  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1125  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1126  /** \brief Enables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1127   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1128   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1129   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1130  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1131  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1132  /** \brief selects the actual input signal for the capture compare inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1133   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1134   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1135   * \param signal selection of actual input signal for the module inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1136   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1137   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1138  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1139  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1140  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1141  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1142  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1143  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1144  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1148   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1149   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1150  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1151  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1152  /** \brief Disables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_EXTERN void IfxCcu6_disableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1162   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1163   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1164  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1165  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1166  /** \brief Enables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1173  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1174  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1177  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1178  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1179  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1180  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1181  /** \brief Initialises a CC60 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a CC60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cc60Out CC60 compare output CC0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a CC61 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1200   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1201  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1203  /** \brief Initialises a CC61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1204   * \param cc61Out CC61 compare output CC1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a CC62 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a CC62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param cc62Out CC62 compare output CC2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1222   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1223   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1224  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1225  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1226  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1227   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1228   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1229   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1230   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1231  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1232  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1233  /** \brief Initialises a CCPOS1 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1235   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1236   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1237   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1238  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1239  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1241   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1242   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1244   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1245  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1246  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1247  /** \brief Initialises a COUT60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1248   * \param cout60 CC60 compare output COUT0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1249   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1250   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1251   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1252   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1253  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1254  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1255  /** \brief Initialises a COUT61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1256   * \param cout61 CC61 compare output COUT1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1257   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1258   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1259   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1261  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1262  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1263  /** \brief Initialises a COUT62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1264   * \param cout62 CC62 compare output COUT2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1265   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1266   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1267   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1268   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1269  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1270  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1271  /** \brief Initialises a COUT63 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1272   * \param cout63 CC63 compare output COUT3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1273   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1274   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1275   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1276   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1277  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1278  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1279  /** \brief Initialises a CTRAP input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1280   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1281   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1282   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1283   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1284  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1286  /** \brief Initialises a T12HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1287   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1288   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1289   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1291  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1293  /** \brief Initialises a T13HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1294   * \param t13hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1295   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1296   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1297   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1298  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1300  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1301  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1302  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1303  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1304  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1305  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1306  /** \brief Provides functionality for both setting of CC60 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1307   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1308   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1309   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1310   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1311   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1312  IFX_INLINE void IfxCcu6_initCc60InPinWithPadLevel(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1314  /** \brief Provides functionality for both setting of CC61 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1315   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1316   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1317   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1318   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1319   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1320  IFX_INLINE void IfxCcu6_initCc61InPinWithPadLevel(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1322  /** \brief Provides functionality for both setting of CC62 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1323   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1324   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1325   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1326   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1327   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_initCc62InPinWithPadLevel(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1329  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1330  /** \brief Provides functionality for both setting of CCPOS0 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1331   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1332   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1333   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1334   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1335   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1336  IFX_INLINE void IfxCcu6_initCcpos0PinWithPadLevel(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1338  /** \brief Provides functionality for both setting of CCPOS1 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1339   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1340   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1341   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1342   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1343   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1344  IFX_INLINE void IfxCcu6_initCcpos1PinWithPadLevel(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1345  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1346  /** \brief Provides functionality for both setting of CCPOS2 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1347   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1348   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1349   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1350   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1352  IFX_INLINE void IfxCcu6_initCcpos2PinWithPadLevel(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1354  /** \brief Provides functionality for both setting of CTRAP pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1355   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1356   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1357   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1358   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1360  IFX_INLINE void IfxCcu6_initCtrapPinWithPadLevel(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1361  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1362  /** \brief Provides functionality for both setting of T12HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1363   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1364   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1365   * \param padDriver Pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1366   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1367   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1368  IFX_INLINE void IfxCcu6_initT12hrPinWithPadLevel(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1369  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1370  /** \brief Provides functionality for both setting of T13HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1371   * \param t13hrIn Timer 13 HR input T13HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1372   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1373   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1374   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1375   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1376  IFX_INLINE void IfxCcu6_initT13hrPinWithPadLevel(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1377  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1378  /** \brief Sets the sensitivity of the module to sleep signal
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1379   * \param ccu6 pointer to CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1380   * \param mode mode selection (enable/disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1381   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1382   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1383  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1384  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1385  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1386  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1387  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1388  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1389  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1390   * \param ccu6 pointer to ccu6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1391   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1392   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1393  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1394  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1395  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1396  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1397  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1398  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1399  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1400  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1401      ccu6->ISR.U = 0xFFFF;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1402  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1403  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1405  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1406  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1407      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1408      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1409      tctr4.B.T12RES = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1410      tctr4.B.T13RES = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1411      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1412  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1414  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1415  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1416  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1417      ccu6->TCTR4.B.DTRES = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1418  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1421  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1422  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1423      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1424      ccu6->ISR.U = mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1425  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1426  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1427  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1428  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1429  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1430      ccu6->ISR.B.RT12OM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1431  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1434  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1435  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1436      ccu6->ISR.B.RT12PM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1437  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1439  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1440  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1441  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1442      ccu6->ISR.B.RT13CM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1443  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1445  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1446  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1447  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1448      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1449      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1450      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1451  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1452  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1453  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1454  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1455  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1456      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1457      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1458      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1459  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1461  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1462  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1463  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1464      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1465  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1466  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1467  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1468  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1469  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1470      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1471      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1472  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1473  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1475  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1476  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1477      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1478  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1479  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1481  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1482  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1483      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1484      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1485      tctr4.B.T12STD = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1486      tctr4.B.T13STD = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1490  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1493      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1494      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1495  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1496  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1497  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1498  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1499  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1500      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1501  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1503  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1504  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1505  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1506      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1507      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1508  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1510  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1511  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1512  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1513      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1514      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1515      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1516  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1518  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1519  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1520  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1521      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1522  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1523  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1525  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1526  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1527      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1528      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1529      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1530  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1531  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1533  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1534  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1535      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1536      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1537      tctr4.B.T12CNT = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1538      tctr4.B.T13CNT = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1539      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1540  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1541  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1542  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1543  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1544  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1545      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1546      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1547      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1548  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1550  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1551  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1552  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1553      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1554  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1555  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1556  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1557  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1558  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1559      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1560  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1562  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1563  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1564  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1565      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1566      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1567  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1568  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1570  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1571  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1572      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1573  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1574  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1575  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1576  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1577  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1578      ccu6->MCFG.B.MCM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1579  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1580  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1581  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1582  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1583  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1584      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1587  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1590      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1591  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1592  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1594  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1595  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1596      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1597  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1599  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1600  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1601  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1602      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1603  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1604  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1605  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1606  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1607  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1608      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1609      tctr4.U        = 0;
	mov	d0,#0
.L467:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1610      tctr4.B.T12STR = t12;
	insert	d0,d0,#1,#6,#1
.L299:
	add	d15,d8,#-1

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    45   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    46   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    47   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    48   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    49   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    50   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    51   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    52   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    53   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    54   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    55   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    56  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    57  #ifndef IFXCCU6_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    58  #define IFXCCU6_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    59  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    60  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    61  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    62  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    63  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    64  #include "_Impl/IfxCcu6_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    65  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    66  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    67  #include "Scu/Std/IfxScuWdt.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    68  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    69  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    70  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    72  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    73  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    74  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    75  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    76  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    77   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    78  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    79   * Definition in Ifx_CCU.PISEL0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    80   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    81  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    82  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    83      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    84      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    85      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    89      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    90  } IfxCcu6_CaptureCompareInput;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    91  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    92  /** \brief Selection of actual input signal for the capture compare inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    93   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    94  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    95  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   100  } IfxCcu6_CaptureCompareInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   101  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   102  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   103   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   104  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   105  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   106      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   107      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   108      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   109  } IfxCcu6_CaptureCompareState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   110  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   111  /** \brief Capture compare output pins
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   112   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   113  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   114  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   116      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   117      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   118      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   119      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   120      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   121      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   122  } IfxCcu6_ChannelOut;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   123  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   124  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   125   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   126   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   127  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   128  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   129      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   130                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   131      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   132                                                      * event. The T1x prescaler is not taken into account */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   133      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   134                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   137  } IfxCcu6_CountingInputMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   138  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   139  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   140   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   141   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   142  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   143  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   144      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   145                                           * the source signal becomes active */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   146      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   147  } IfxCcu6_DelayBypass;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   148  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   149  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   150   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   151   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   152  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   153  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   156                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   157      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   158                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   159      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   160                                                     * detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   161  } IfxCcu6_ExternalTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   162  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   163  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   164   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   165   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   166  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   167  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                             * signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   171      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   173      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   175      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   177  } IfxCcu6_HallSensorTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   178  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   179  /** \brief Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   180   * Description in Ifx_CCU.IEN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   181   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   182  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   183  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   184      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   185                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   186      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   187                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   188      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   189                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   191                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   193                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   197      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   198      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   199      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   200      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   201      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   202      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   203  } IfxCcu6_InterruptSource;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   204  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   205  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   206   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   207   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   208  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   209  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   210      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   211      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   212      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   213      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   214      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   215                                                                         * delay function) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   217  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   218  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   219  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   220   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   221   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   222  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   223  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   224      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   225                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   228                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   229  } IfxCcu6_MultiChannelSwitchingSync;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   230  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   231  /** \brief Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   232   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   233  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   234  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   237      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   238      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   239  } IfxCcu6_ServiceRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   240  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   242   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   243   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   244  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   245  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   248  } IfxCcu6_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   249  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   251   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   252  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   253  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Capture compare channel of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   261  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   262  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   263      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   269   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   270  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   271  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   272      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   274      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   276      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   277      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   278      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   279                                                                          * programmed to Hall Sensor mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   280      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   281      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   282      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   283      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   286  } IfxCcu6_T12ChannelMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   287  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   288  /** \brief Counting direction of Timer12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   289   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   291  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   292  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   293      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   294      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   295  } IfxCcu6_T12CountDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   296  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   297  /** \brief Operating mode of Timer 12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   298   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   299   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   300  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   301  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   302      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   303                                               * from zero after reaching the period value. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   304      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   305                                               * and counts up after detecting a one-match. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   306  } IfxCcu6_T12CountMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   307  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   308  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   309   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   310   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   311  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   312  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   313      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   314      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   315      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   316      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   317  } IfxCcu6_T13TriggerDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   318  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   319  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   320   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   321   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   322  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   323  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   327      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   328      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   329      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   330      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   331                                                     * counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   332      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   333  } IfxCcu6_T13TriggerEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   334  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   335  /** \brief Timer number ( T12 / T13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   336   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   337  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   338  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   350      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   351      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   352      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   353      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   354      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   355      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   356  } IfxCcu6_TimerInputClock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   358  /** \brief Selection of actual input signal for the timer inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   360  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   361  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   362      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   363      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   364      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   365      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   366      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   368      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   370  } IfxCcu6_TimerInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   371  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   372  /** \brief Timer (T12 / T13) run status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   373   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   374   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   375  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   376  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   377      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   378      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   379  } IfxCcu6_TimerRunStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   380  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   381  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   382   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   383   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   384  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   385  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   386      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   387      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   388                                        * ISR.RTRPF = 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   389  } IfxCcu6_TrapMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   392   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   394  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   395  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   396      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   397                                        * of T12 (while counting up) is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   398      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   399                                        * of T13 is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   400      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   401  } IfxCcu6_TrapState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   402  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   403  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   405  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   407  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   408  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   409  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   410  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   411  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   412  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   413   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   414   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   415   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   416   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   417   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   418  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   420  /** \brief Clears all the three dead-time counter channels to zero.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   421   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   422   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   423   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   424  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   425  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   426  /** \brief Clears the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   427   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   428   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   430   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   431  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   433  /** \brief Clears the T12  One notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   434   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   436   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   437  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   439  /** \brief Clears the T12  period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   440   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   442   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   443  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   445  /** \brief Clears the T13  compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   446   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   448   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   449  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   450  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   451  /** \brief Returns the Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   452   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \return Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   454   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   455  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   456  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   457  /** \brief Returns the status of module enabled or disabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   458   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   459   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   460   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   461  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   462  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   463  /** \brief Returns the status of T12 one notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   464   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   465   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   466   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   467  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   468  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   469  /** \brief Returns the status of T12 period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   471   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   472   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   473  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   475  /** \brief Returns the status of T13 compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param pattern Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param value Value of the dead time to be induced
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   500   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   501  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   503  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   504   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param pattern Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   507   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   508  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   510  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   511   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param mode External trigger mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Hall sensor input trigger event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   526   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param frequency Input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   537   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   538  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   539  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   540  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   541   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   542   * \param pattern Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   544   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   545  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   546  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   547  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   548   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   549   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   550   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   551   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   552  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   553  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   554  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   555   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   556   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   557   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   558   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   559   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   560  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   562  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   563   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   564   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   565   * \param state FALSE: passive state when CC6xST == 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   566   * TRUE : passive state when CC6xST == 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   568   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   569  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   570  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   571  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   572   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \param mode The operating mode for the T12 channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   583   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   584   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   585  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   587  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \param mode Operating mode of Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   590   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   591   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   592  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   594  /** \brief Sets the 16-bit counter value of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \param value Counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   597   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   598   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   599  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   600  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   601  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \param value Period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   604   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   605   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   606  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   607  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   608  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   611   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   612   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   613  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   615  /** \brief Sets the 16-bit counter value of Timer13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \param value counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   618   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   619   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   620  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   622  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \param value period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   625   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   627  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   629  /** \brief Sets the Timer13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param direction T13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param mode The trigger event to start T13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   640   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   641  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   643  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   644   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param mode Trap mode selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   647   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   648  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   649  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   650  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   651   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   652   * \param state Trap state selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   653   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   654   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   655  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   657  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param t12 Timer12 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param t13 Timer13 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param t12 Timer12 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param t13 Timer13 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param currentHall Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param expectedHall Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   677   * \param output Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   682  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   683  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   684  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   686  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   687   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   688   * \param outputLine Output Line
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   689   * \param selectedTrigger Trigger selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   690   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   691   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   692  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   693  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   694  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   695   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   696   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   697   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   698   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   699   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   700  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   701  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   702  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   704   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   705   * \param state FALSE: The passive level is 0.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   706   * TRUE : The passive level is 1.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   707   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   708   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   709  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   710  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   711  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   712   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   713   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   714   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   715   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   716   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   717  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   718  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   719  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   720   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   721   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   722   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   724   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   725  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   726  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   727  /** \brief Sets the frequency and clock input of the Timer 12.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   728   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   729   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   730   * The resulting frequency is captured in the handler element : CaptureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   731   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \param countMode Counting mode of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   735   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   736   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   737   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   738  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period, IfxCcu6_T12CountMode countMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   742   * \param extInput External input signal for the Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   743   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   744   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   745  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Sets the frequency and clock input of the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   755   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   756   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   757   * The resulting frequency is captured in the handler element : captureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   759   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   760   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   761   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   762   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   763   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   764  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   766  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   768   * \param extInput External input signal for the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   769   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   770   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   771  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   773  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   774  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   775  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   776   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   777  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   778  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   779  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   780  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   781  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   782  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   783   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   784   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   785   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   786   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   787  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   788  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   789  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   790   * that has been compared to the current and expected value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   791   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   792   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   794   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   795   * FALSE : The input CCPOSx has been sampled as 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Gets the status of the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   802   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   803   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   804  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   805  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   806  /** \brief indicates if the multi-channel mode functionality is available
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   808   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   809   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   810  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   811  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   812  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   815   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   816   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   817   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   818  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   819  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   820  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   822   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   823   * \return Status (TRUE: enable / FALSE: disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   824   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   825  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   826  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   827  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   828   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   829   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   831   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   832  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   833  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   834  /** \brief Returns the current counting direction of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   835   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   836   * \return direction (up / down)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   837   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   838  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   839  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   840  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   841   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   842   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   843   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   844  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   845  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   846  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   847   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   848   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   849   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   850   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   851  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   852  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   853  /** \brief Returns the Timer (T12 / T13) run status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   854   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   855   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   856   * \return Status (stopped / running)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   857   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   858  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   859  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   860  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   861   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   862   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   863   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   864   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   865   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   866  IFX_INLINE boolean IfxCcu6_isModuleSuspended(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   868  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   869   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   870   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   871   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   872   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   873   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   874  IFX_INLINE void IfxCcu6_setSuspendMode(Ifx_CCU6 *ccu6, IfxCcu6_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   875  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   876  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   877  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   878  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   879  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   880  /** \brief Returns the module index of the selected CCU6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return CCU6 module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_EXTERN Ifx_CCU6 *IfxCcu6_getAddress(IfxCcu6_Index ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Returns the capture register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   889   * \return current value of the capture register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   890   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   891  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   892  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   893  /** \brief Returns the capture shadow register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   896   * \return current value of the capture shadow register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   897   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   898  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   899  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   900  /** \brief Returns CCU6 index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \param ccu6 Specifies the pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   902   * \return Returns index. returns -1 in case of unknown index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   903   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   904  IFX_EXTERN IfxCcu6_Index IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   905  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   906  /** \brief Returns the service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return The service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Returns the current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   922  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   924  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   925  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   926  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   927  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   928  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   929  /** \brief Clears all Interrupt flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   931   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   932   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   933  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   935  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   938   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   939   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   940  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   941  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   942  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   944   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   945   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   946   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   947  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   948  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   949  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   951   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   952   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   953  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   954  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   955  /** \brief Disables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   965   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   966  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   967  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   968  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   969   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   972   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   973   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   974  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   975  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   976  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   978   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   979   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   980   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   981  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   982  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   983  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   984   * T13 output CC63_O is equal to CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   985   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   986   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   987   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   988  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   989  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   990  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   991   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   992   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   993   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   994   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   995  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   996  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   997  /** \brief Disables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   998   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   999   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1000   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1001   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1002  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1003  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1004  /** \brief Disables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1005   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1006   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1007   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1008  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1010  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1011   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1012   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1013   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1014   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1015  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1017  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1018   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1019   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1020   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1021   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1022   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1023  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1024  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1025  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1026   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1027   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1028   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1029   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1030  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1031  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1032  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1033   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1034   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1035   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1036  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1037  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1038  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1040   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1041   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1042  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1043  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1044  /** \brief Enables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1047   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1048   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1049  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1050  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1051  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the Multi Channel Mode Availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1066   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1067  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1068  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1069  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1070   * becomes set while a T12 one match is detected while counting down
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1071   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1072   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1073   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1074  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1075  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1076  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * becomes set while a T12 period match is detected while counting up
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * becomes set while a T13 period match is detected
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1087   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1088  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1089  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1090  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1091   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1094   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1095   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1096  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1097  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1098  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1099   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1101   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1102   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1103  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1104  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1105  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1106   * T13 output CC63_O is equal to CC63ST.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1109   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1110  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1112  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1113   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1116   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1117  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1118  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1119  /** \brief Enables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1120   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1121   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1123   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1124  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1125  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1126  /** \brief Enables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1127   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1128   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1129   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1130  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1131  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1132  /** \brief selects the actual input signal for the capture compare inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1133   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1134   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1135   * \param signal selection of actual input signal for the module inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1136   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1137   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1138  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1139  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1140  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1141  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1142  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1143  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1144  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1148   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1149   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1150  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1151  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1152  /** \brief Disables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_EXTERN void IfxCcu6_disableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1162   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1163   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1164  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1165  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1166  /** \brief Enables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1173  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1174  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1177  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1178  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1179  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1180  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1181  /** \brief Initialises a CC60 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a CC60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cc60Out CC60 compare output CC0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a CC61 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1200   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1201  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1203  /** \brief Initialises a CC61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1204   * \param cc61Out CC61 compare output CC1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a CC62 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a CC62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param cc62Out CC62 compare output CC2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1222   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1223   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1224  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1225  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1226  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1227   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1228   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1229   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1230   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1231  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1232  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1233  /** \brief Initialises a CCPOS1 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1235   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1236   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1237   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1238  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1239  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1241   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1242   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1244   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1245  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1246  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1247  /** \brief Initialises a COUT60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1248   * \param cout60 CC60 compare output COUT0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1249   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1250   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1251   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1252   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1253  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1254  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1255  /** \brief Initialises a COUT61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1256   * \param cout61 CC61 compare output COUT1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1257   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1258   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1259   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1261  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1262  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1263  /** \brief Initialises a COUT62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1264   * \param cout62 CC62 compare output COUT2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1265   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1266   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1267   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1268   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1269  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1270  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1271  /** \brief Initialises a COUT63 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1272   * \param cout63 CC63 compare output COUT3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1273   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1274   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1275   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1276   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1277  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1278  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1279  /** \brief Initialises a CTRAP input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1280   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1281   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1282   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1283   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1284  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1286  /** \brief Initialises a T12HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1287   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1288   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1289   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1291  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1293  /** \brief Initialises a T13HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1294   * \param t13hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1295   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1296   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1297   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1298  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1300  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1301  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1302  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1303  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1304  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1305  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1306  /** \brief Provides functionality for both setting of CC60 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1307   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1308   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1309   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1310   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1311   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1312  IFX_INLINE void IfxCcu6_initCc60InPinWithPadLevel(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1314  /** \brief Provides functionality for both setting of CC61 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1315   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1316   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1317   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1318   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1319   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1320  IFX_INLINE void IfxCcu6_initCc61InPinWithPadLevel(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1322  /** \brief Provides functionality for both setting of CC62 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1323   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1324   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1325   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1326   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1327   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_initCc62InPinWithPadLevel(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1329  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1330  /** \brief Provides functionality for both setting of CCPOS0 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1331   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1332   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1333   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1334   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1335   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1336  IFX_INLINE void IfxCcu6_initCcpos0PinWithPadLevel(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1338  /** \brief Provides functionality for both setting of CCPOS1 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1339   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1340   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1341   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1342   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1343   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1344  IFX_INLINE void IfxCcu6_initCcpos1PinWithPadLevel(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1345  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1346  /** \brief Provides functionality for both setting of CCPOS2 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1347   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1348   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1349   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1350   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1352  IFX_INLINE void IfxCcu6_initCcpos2PinWithPadLevel(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1354  /** \brief Provides functionality for both setting of CTRAP pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1355   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1356   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1357   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1358   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1360  IFX_INLINE void IfxCcu6_initCtrapPinWithPadLevel(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1361  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1362  /** \brief Provides functionality for both setting of T12HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1363   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1364   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1365   * \param padDriver Pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1366   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1367   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1368  IFX_INLINE void IfxCcu6_initT12hrPinWithPadLevel(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1369  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1370  /** \brief Provides functionality for both setting of T13HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1371   * \param t13hrIn Timer 13 HR input T13HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1372   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1373   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1374   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1375   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1376  IFX_INLINE void IfxCcu6_initT13hrPinWithPadLevel(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1377  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1378  /** \brief Sets the sensitivity of the module to sleep signal
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1379   * \param ccu6 pointer to CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1380   * \param mode mode selection (enable/disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1381   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1382   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1383  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1384  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1385  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1386  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1387  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1388  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1389  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1390   * \param ccu6 pointer to ccu6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1391   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1392   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1393  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1394  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1395  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1396  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1397  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1398  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1399  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1400  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1401      ccu6->ISR.U = 0xFFFF;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1402  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1403  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1405  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1406  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1407      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1408      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1409      tctr4.B.T12RES = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1410      tctr4.B.T13RES = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1411      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1412  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1414  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1415  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1416  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1417      ccu6->TCTR4.B.DTRES = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1418  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1421  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1422  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1423      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1424      ccu6->ISR.U = mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1425  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1426  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1427  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1428  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1429  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1430      ccu6->ISR.B.RT12OM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1431  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1434  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1435  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1436      ccu6->ISR.B.RT12PM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1437  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1439  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1440  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1441  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1442      ccu6->ISR.B.RT13CM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1443  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1445  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1446  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1447  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1448      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1449      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1450      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1451  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1452  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1453  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1454  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1455  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1456      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1457      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1458      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1459  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1461  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1462  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1463  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1464      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1465  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1466  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1467  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1468  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1469  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1470      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1471      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1472  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1473  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1475  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1476  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1477      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1478  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1479  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1481  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1482  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1483      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1484      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1485      tctr4.B.T12STD = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1486      tctr4.B.T13STD = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1490  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1493      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1494      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1495  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1496  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1497  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1498  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1499  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1500      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1501  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1503  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1504  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1505  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1506      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1507      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1508  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1510  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1511  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1512  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1513      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1514      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1515      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1516  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1518  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1519  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1520  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1521      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1522  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1523  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1525  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1526  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1527      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1528      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1529      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1530  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1531  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1533  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1534  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1535      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1536      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1537      tctr4.B.T12CNT = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1538      tctr4.B.T13CNT = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1539      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1540  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1541  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1542  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1543  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1544  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1545      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1546      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1547      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1548  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1550  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1551  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1552  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1553      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1554  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1555  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1556  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1557  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1558  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1559      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1560  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1562  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1563  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1564  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1565      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1566      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1567  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1568  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1570  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1571  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1572      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1573  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1574  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1575  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1576  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1577  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1578      ccu6->MCFG.B.MCM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1579  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1580  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1581  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1582  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1583  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1584      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1587  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1590      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1591  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1592  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1594  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1595  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1596      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1597  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1599  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1600  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1601  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1602      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1603  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1604  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1605  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1606  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1607  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1608      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1609      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1610      tctr4.B.T12STR = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1611      tctr4.B.T13STR = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1612      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1615  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1618      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1619      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1622  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1625      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1626  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1627  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1629  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1630  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1631      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1632      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1633  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1634  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1636  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1637  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1638      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1639      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1640      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1643  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1646      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1647  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1648  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1649  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1650  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1651  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1652      uint32 shift = (12 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1653      uint32 mask  = 1 << shift;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1654      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1657  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1660      uint32 shift = (channel + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1661      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1662      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1663  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1664  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1665  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1666  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1667  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1668      uint32 shift = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1669      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1670  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1671  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1672  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1673  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1674  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1675      return ccu6->MCFG.B.MCM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1677  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1678  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1681      return ccu6->MCMOUT.B.R != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1682  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1683  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1684  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1685  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1686  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1687      uint32 shift = ((timer * 8) + 5);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1688      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1689      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1690  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1691  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1692  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1693  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1694  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1695      uint32 mask = (1U << channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1696      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1697  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1698  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1699  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1700  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1701  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1702      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1703  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1704  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1705  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1706  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1707  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1708      return (volatile uint32 *)&ccu6->T12PR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1709  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1710  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1711  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1712  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1713  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1714      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1715  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1716  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1717  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1718  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1719  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1720      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1721      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1722  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1723  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1724  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1725  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1726  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1727      uint32 shift = ((timer * 8) + 4);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1728      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1729      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1730  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1731  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1732  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1733  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1734  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1735      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1736      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1737  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1738  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1739  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1740  IFX_INLINE void IfxCcu6_initCc60InPinWithPadLevel(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1741  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1742      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1743      IfxPort_setPinPadDriver(cc60In->pin.port, cc60In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1744      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1745  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1746  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1747  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1748  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1749  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1750      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1751      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1752  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1754  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1755  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1756  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1757      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1758      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1759  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1760  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1761  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1762  IFX_INLINE void IfxCcu6_initCc61InPinWithPadLevel(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1763  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1764      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1765      IfxPort_setPinPadDriver(cc61In->pin.port, cc61In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1766      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1767  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1768  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1769  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1770  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1771  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1772      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1773      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1774  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1775  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1776  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1777  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1778  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1779      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1780      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1781  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1782  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1783  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1784  IFX_INLINE void IfxCcu6_initCc62InPinWithPadLevel(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1785  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1786      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1787      IfxPort_setPinPadDriver(cc62In->pin.port, cc62In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1788      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1789  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1790  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1791  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1792  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1793  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1794      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1795      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1796  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1797  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1798  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1799  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1800  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1801      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1802      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1803  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1804  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1805  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1806  IFX_INLINE void IfxCcu6_initCcpos0PinWithPadLevel(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1807  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1808      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1809      IfxPort_setPinPadDriver(ccpos0->pin.port, ccpos0->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1810      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1811  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1812  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1813  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1814  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1815  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1816      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1817      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1818  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1819  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1820  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1821  IFX_INLINE void IfxCcu6_initCcpos1PinWithPadLevel(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1822  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1823      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1824      IfxPort_setPinPadDriver(ccpos1->pin.port, ccpos1->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1825      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1826  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1827  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1828  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1829  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1830  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1831      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1832      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1833  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1834  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1835  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1836  IFX_INLINE void IfxCcu6_initCcpos2PinWithPadLevel(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1837  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1838      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1839      IfxPort_setPinPadDriver(ccpos2->pin.port, ccpos2->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1840      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1841  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1842  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1843  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1844  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1845  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1846      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1847      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1848  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1849  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1850  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1851  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1852  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1853      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1854      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1855  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1856  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1857  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1858  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1859  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1860      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1861      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1862  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1863  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1864  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1865  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1866  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1867      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1868      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1869  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1870  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1871  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1872  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1873  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1874      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1875      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1876  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1877  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1878  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1879  IFX_INLINE void IfxCcu6_initCtrapPinWithPadLevel(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1880  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1881      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1882      IfxPort_setPinPadDriver(ctrap->pin.port, ctrap->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1883      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1884  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1885  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1886  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1887  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1888  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1889      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1890      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1891  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1892  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1893  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1894  IFX_INLINE void IfxCcu6_initT12hrPinWithPadLevel(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1895  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1896      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1897      IfxPort_setPinPadDriver(t12hrIn->pin.port, t12hrIn->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1898      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1899  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1900  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1901  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1902  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1903  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1904      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1905      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1906  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1907  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1908  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1909  IFX_INLINE void IfxCcu6_initT13hrPinWithPadLevel(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1910  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1911      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1912      IfxPort_setPinPadDriver(t13hrIn->pin.port, t13hrIn->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1913      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1914  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1915  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1916  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1917  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1918  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1919      return ccu6->CLC.B.DISS == 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1920  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1922  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1923  IFX_INLINE boolean IfxCcu6_isModuleSuspended(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1924  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1925      Ifx_CCU6_OCS ocs;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1926  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1927      // read the status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1928      ocs.U = ccu6->OCS.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1929  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1930      // return the status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1931      return ocs.B.SUSSTA;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1932  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1933  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1935  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1936  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1937      return ccu6->IS.B.T12OM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1938  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1939  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1940  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1941  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1942  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1943      return ccu6->IS.B.T12PM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1944  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1945  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1946  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1947  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1948  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1949      return ccu6->IS.B.T13CM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1950  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1951  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1952  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1953  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1954  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1955      uint32 shift = (uint32)input;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1956      uint32 mask  = (0x3U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1957      ccu6->PISEL0.U = (ccu6->PISEL0.U & ~mask) | ((uint32)signal << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1958  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1959  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1960  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1961  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1962  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1963      uint32 shift = ((timer * 2) + 2);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1964      uint32 mask  = (0x3U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1965      ccu6->PISEL2.U = (ccu6->PISEL2.U & ~mask) | ((uint32)mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1966  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1967  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1968  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1969  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1970  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1971      ccu6->MCMOUTS.B.CURHS = pattern;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1972  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1973  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1974  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1975  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1976  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1977      ccu6->T12DTC.B.DTM = value;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1978  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1979  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1980  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1981  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1982  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1983      ccu6->MCMOUTS.B.EXPHS = pattern;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1984  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1985  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1986  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1987  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1988  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1989      uint32 shift = ((timer * 2) + 8);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1990      uint32 mask  = (0x3U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1991      ccu6->TCTR2.U = (ccu6->TCTR2.U & ~mask) | ((uint32)mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1992  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1993  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1994  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1995  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1996  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1997      uint32 shift = 12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1998      uint32 mask  = (0x7U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1999      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2000  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2001  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2002  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2003  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2004  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2005      uint32 shift = (timer * 8);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2006      uint32 mask  = (0x7U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2007      ccu6->TCTR0.U = (ccu6->TCTR0.U & ~mask) | ((uint32)frequency << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2008  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2010  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2011  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2012  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2013      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2014      ccu6->ISS.U = ccu6->ISS.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2015  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2017  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2018  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2019  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2020      ccu6->MCMOUTS.B.MCMPS = pattern;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2021  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2022  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2023  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2024  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2025  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2026      ccu6->MCMCTR.B.SWSEL = mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2027  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2028  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2029  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2030  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2031  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2032      ccu6->MCMCTR.B.SWSYN = sync;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2033  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2034  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2035  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2036  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2037  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2038      uint32 shift = (channelOut + 8); // offset at location CC60PS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2039      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2040      ccu6->CMPSTAT.U = (ccu6->CMPSTAT.U & ~mask) | ((uint32)state << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2041  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2042  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2043  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2044  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2045  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2046      Ifx_CCU6_TCTR2 tctr2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2047      tctr2.U        = ccu6->TCTR2.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2048      tctr2.B.T12SSC = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2049      tctr2.B.T13SSC = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2050      ccu6->TCTR2.U  = tctr2.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2051  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2052  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2053  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2054  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2055  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2056      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2057      IfxScuWdt_clearCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2058      ccu6->CLC.B.EDIS = mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2059      IfxScuWdt_setCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2060  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2061  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2062  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2063  IFX_INLINE void IfxCcu6_setSuspendMode(Ifx_CCU6 *ccu6, IfxCcu6_SuspendMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2064  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2065      Ifx_CCU6_OCS ocs;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2066  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2067      // remove protection and configure the suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2068      ocs.B.SUS_P = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2069      ocs.B.SUS   = mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2070      ccu6->OCS.U = ocs.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2071  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2072  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2073  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2074  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2075  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2076      uint32 shift = (4 * channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2077      uint32 mask  = (0xFU << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2078      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2079  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2080  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2081  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2082  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2083  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2084      ccu6->TCTR0.B.CTM = mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2085  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2086  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2087  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2088  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2089  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2090      ccu6->T12.B.T12CV = value;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2091  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2092  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2093  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2094  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2095  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2096      ccu6->T12PR.B.T12PV = value;
	st.h	[a15]36,d15
.L313:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   403  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   405          additionalPrescaler = ((prescaler & 0x8U) != 0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   406  
	and	d15,d1,#7
.L308:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    45   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    46   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    47   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    48   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    49   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    50   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    51   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    52   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    53   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    54   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    55   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    56  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    57  #ifndef IFXCCU6_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    58  #define IFXCCU6_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    59  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    60  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    61  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    62  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    63  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    64  #include "_Impl/IfxCcu6_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    65  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    66  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    67  #include "Scu/Std/IfxScuWdt.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    68  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    69  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    70  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    72  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    73  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    74  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    75  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    76  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    77   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    78  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    79   * Definition in Ifx_CCU.PISEL0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    80   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    81  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    82  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    83      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    84      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    85      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    89      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    90  } IfxCcu6_CaptureCompareInput;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    91  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    92  /** \brief Selection of actual input signal for the capture compare inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    93   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    94  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    95  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   100  } IfxCcu6_CaptureCompareInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   101  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   102  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   103   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   104  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   105  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   106      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   107      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   108      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   109  } IfxCcu6_CaptureCompareState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   110  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   111  /** \brief Capture compare output pins
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   112   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   113  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   114  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   116      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   117      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   118      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   119      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   120      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   121      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   122  } IfxCcu6_ChannelOut;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   123  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   124  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   125   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   126   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   127  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   128  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   129      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   130                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   131      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   132                                                      * event. The T1x prescaler is not taken into account */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   133      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   134                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   137  } IfxCcu6_CountingInputMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   138  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   139  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   140   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   141   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   142  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   143  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   144      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   145                                           * the source signal becomes active */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   146      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   147  } IfxCcu6_DelayBypass;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   148  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   149  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   150   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   151   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   152  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   153  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   156                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   157      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   158                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   159      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   160                                                     * detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   161  } IfxCcu6_ExternalTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   162  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   163  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   164   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   165   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   166  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   167  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                             * signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   171      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   173      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   175      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   177  } IfxCcu6_HallSensorTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   178  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   179  /** \brief Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   180   * Description in Ifx_CCU.IEN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   181   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   182  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   183  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   184      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   185                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   186      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   187                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   188      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   189                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   191                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   193                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   197      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   198      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   199      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   200      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   201      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   202      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   203  } IfxCcu6_InterruptSource;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   204  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   205  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   206   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   207   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   208  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   209  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   210      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   211      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   212      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   213      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   214      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   215                                                                         * delay function) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   217  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   218  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   219  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   220   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   221   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   222  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   223  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   224      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   225                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   228                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   229  } IfxCcu6_MultiChannelSwitchingSync;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   230  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   231  /** \brief Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   232   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   233  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   234  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   237      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   238      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   239  } IfxCcu6_ServiceRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   240  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   242   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   243   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   244  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   245  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   248  } IfxCcu6_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   249  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   251   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   252  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   253  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Capture compare channel of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   261  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   262  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   263      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   269   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   270  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   271  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   272      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   274      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   276      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   277      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   278      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   279                                                                          * programmed to Hall Sensor mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   280      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   281      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   282      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   283      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   286  } IfxCcu6_T12ChannelMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   287  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   288  /** \brief Counting direction of Timer12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   289   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   291  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   292  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   293      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   294      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   295  } IfxCcu6_T12CountDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   296  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   297  /** \brief Operating mode of Timer 12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   298   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   299   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   300  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   301  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   302      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   303                                               * from zero after reaching the period value. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   304      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   305                                               * and counts up after detecting a one-match. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   306  } IfxCcu6_T12CountMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   307  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   308  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   309   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   310   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   311  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   312  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   313      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   314      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   315      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   316      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   317  } IfxCcu6_T13TriggerDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   318  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   319  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   320   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   321   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   322  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   323  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   327      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   328      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   329      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   330      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   331                                                     * counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   332      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   333  } IfxCcu6_T13TriggerEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   334  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   335  /** \brief Timer number ( T12 / T13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   336   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   337  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   338  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   350      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   351      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   352      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   353      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   354      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   355      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   356  } IfxCcu6_TimerInputClock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   358  /** \brief Selection of actual input signal for the timer inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   360  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   361  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   362      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   363      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   364      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   365      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   366      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   368      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   370  } IfxCcu6_TimerInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   371  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   372  /** \brief Timer (T12 / T13) run status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   373   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   374   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   375  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   376  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   377      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   378      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   379  } IfxCcu6_TimerRunStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   380  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   381  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   382   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   383   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   384  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   385  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   386      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   387      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   388                                        * ISR.RTRPF = 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   389  } IfxCcu6_TrapMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   392   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   394  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   395  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   396      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   397                                        * of T12 (while counting up) is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   398      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   399                                        * of T13 is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   400      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   401  } IfxCcu6_TrapState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   402  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   403  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   405  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   407  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   408  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   409  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   410  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   411  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   412  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   413   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   414   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   415   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   416   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   417   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   418  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   420  /** \brief Clears all the three dead-time counter channels to zero.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   421   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   422   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   423   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   424  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   425  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   426  /** \brief Clears the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   427   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   428   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   430   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   431  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   433  /** \brief Clears the T12  One notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   434   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   436   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   437  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   439  /** \brief Clears the T12  period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   440   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   442   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   443  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   445  /** \brief Clears the T13  compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   446   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   448   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   449  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   450  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   451  /** \brief Returns the Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   452   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \return Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   454   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   455  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   456  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   457  /** \brief Returns the status of module enabled or disabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   458   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   459   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   460   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   461  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   462  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   463  /** \brief Returns the status of T12 one notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   464   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   465   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   466   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   467  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   468  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   469  /** \brief Returns the status of T12 period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   471   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   472   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   473  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   475  /** \brief Returns the status of T13 compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param pattern Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param value Value of the dead time to be induced
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   500   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   501  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   503  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   504   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param pattern Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   507   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   508  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   510  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   511   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param mode External trigger mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Hall sensor input trigger event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   526   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param frequency Input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   537   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   538  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   539  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   540  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   541   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   542   * \param pattern Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   544   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   545  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   546  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   547  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   548   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   549   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   550   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   551   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   552  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   553  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   554  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   555   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   556   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   557   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   558   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   559   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   560  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   562  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   563   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   564   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   565   * \param state FALSE: passive state when CC6xST == 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   566   * TRUE : passive state when CC6xST == 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   568   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   569  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   570  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   571  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   572   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \param mode The operating mode for the T12 channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   583   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   584   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   585  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   587  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \param mode Operating mode of Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   590   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   591   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   592  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   594  /** \brief Sets the 16-bit counter value of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \param value Counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   597   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   598   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   599  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   600  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   601  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \param value Period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   604   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   605   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   606  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   607  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   608  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   611   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   612   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   613  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   615  /** \brief Sets the 16-bit counter value of Timer13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \param value counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   618   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   619   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   620  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   622  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \param value period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   625   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   627  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   629  /** \brief Sets the Timer13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param direction T13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param mode The trigger event to start T13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   640   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   641  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   643  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   644   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param mode Trap mode selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   647   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   648  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   649  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   650  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   651   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   652   * \param state Trap state selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   653   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   654   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   655  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   657  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param t12 Timer12 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param t13 Timer13 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param t12 Timer12 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param t13 Timer13 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param currentHall Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param expectedHall Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   677   * \param output Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   682  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   683  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   684  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   686  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   687   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   688   * \param outputLine Output Line
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   689   * \param selectedTrigger Trigger selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   690   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   691   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   692  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   693  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   694  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   695   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   696   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   697   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   698   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   699   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   700  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   701  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   702  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   704   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   705   * \param state FALSE: The passive level is 0.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   706   * TRUE : The passive level is 1.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   707   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   708   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   709  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   710  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   711  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   712   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   713   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   714   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   715   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   716   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   717  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   718  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   719  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   720   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   721   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   722   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   724   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   725  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   726  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   727  /** \brief Sets the frequency and clock input of the Timer 12.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   728   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   729   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   730   * The resulting frequency is captured in the handler element : CaptureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   731   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \param countMode Counting mode of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   735   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   736   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   737   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   738  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period, IfxCcu6_T12CountMode countMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   742   * \param extInput External input signal for the Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   743   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   744   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   745  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Sets the frequency and clock input of the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   755   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   756   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   757   * The resulting frequency is captured in the handler element : captureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   759   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   760   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   761   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   762   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   763   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   764  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   766  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   768   * \param extInput External input signal for the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   769   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   770   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   771  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   773  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   774  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   775  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   776   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   777  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   778  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   779  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   780  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   781  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   782  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   783   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   784   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   785   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   786   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   787  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   788  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   789  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   790   * that has been compared to the current and expected value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   791   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   792   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   794   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   795   * FALSE : The input CCPOSx has been sampled as 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Gets the status of the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   802   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   803   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   804  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   805  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   806  /** \brief indicates if the multi-channel mode functionality is available
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   808   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   809   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   810  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   811  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   812  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   815   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   816   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   817   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   818  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   819  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   820  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   822   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   823   * \return Status (TRUE: enable / FALSE: disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   824   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   825  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   826  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   827  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   828   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   829   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   831   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   832  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   833  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   834  /** \brief Returns the current counting direction of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   835   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   836   * \return direction (up / down)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   837   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   838  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   839  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   840  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   841   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   842   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   843   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   844  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   845  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   846  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   847   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   848   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   849   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   850   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   851  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   852  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   853  /** \brief Returns the Timer (T12 / T13) run status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   854   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   855   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   856   * \return Status (stopped / running)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   857   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   858  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   859  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   860  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   861   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   862   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   863   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   864   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   865   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   866  IFX_INLINE boolean IfxCcu6_isModuleSuspended(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   868  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   869   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   870   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   871   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   872   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   873   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   874  IFX_INLINE void IfxCcu6_setSuspendMode(Ifx_CCU6 *ccu6, IfxCcu6_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   875  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   876  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   877  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   878  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   879  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   880  /** \brief Returns the module index of the selected CCU6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return CCU6 module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_EXTERN Ifx_CCU6 *IfxCcu6_getAddress(IfxCcu6_Index ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Returns the capture register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   889   * \return current value of the capture register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   890   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   891  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   892  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   893  /** \brief Returns the capture shadow register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   896   * \return current value of the capture shadow register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   897   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   898  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   899  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   900  /** \brief Returns CCU6 index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \param ccu6 Specifies the pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   902   * \return Returns index. returns -1 in case of unknown index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   903   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   904  IFX_EXTERN IfxCcu6_Index IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   905  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   906  /** \brief Returns the service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return The service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Returns the current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   922  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   924  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   925  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   926  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   927  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   928  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   929  /** \brief Clears all Interrupt flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   931   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   932   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   933  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   935  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   938   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   939   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   940  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   941  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   942  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   944   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   945   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   946   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   947  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   948  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   949  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   951   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   952   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   953  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   954  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   955  /** \brief Disables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   965   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   966  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   967  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   968  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   969   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   972   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   973   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   974  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   975  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   976  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   978   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   979   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   980   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   981  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   982  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   983  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   984   * T13 output CC63_O is equal to CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   985   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   986   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   987   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   988  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   989  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   990  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   991   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   992   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   993   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   994   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   995  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   996  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   997  /** \brief Disables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   998   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   999   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1000   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1001   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1002  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1003  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1004  /** \brief Disables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1005   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1006   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1007   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1008  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1010  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1011   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1012   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1013   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1014   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1015  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1017  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1018   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1019   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1020   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1021   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1022   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1023  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1024  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1025  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1026   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1027   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1028   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1029   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1030  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1031  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1032  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1033   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1034   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1035   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1036  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1037  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1038  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1040   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1041   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1042  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1043  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1044  /** \brief Enables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1047   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1048   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1049  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1050  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1051  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the Multi Channel Mode Availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1066   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1067  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1068  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1069  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1070   * becomes set while a T12 one match is detected while counting down
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1071   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1072   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1073   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1074  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1075  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1076  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * becomes set while a T12 period match is detected while counting up
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * becomes set while a T13 period match is detected
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1087   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1088  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1089  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1090  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1091   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1094   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1095   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1096  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1097  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1098  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1099   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1101   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1102   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1103  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1104  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1105  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1106   * T13 output CC63_O is equal to CC63ST.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1109   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1110  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1112  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1113   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1116   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1117  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1118  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1119  /** \brief Enables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1120   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1121   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1123   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1124  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1125  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1126  /** \brief Enables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1127   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1128   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1129   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1130  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1131  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1132  /** \brief selects the actual input signal for the capture compare inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1133   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1134   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1135   * \param signal selection of actual input signal for the module inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1136   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1137   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1138  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1139  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1140  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1141  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1142  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1143  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1144  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1148   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1149   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1150  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1151  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1152  /** \brief Disables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_EXTERN void IfxCcu6_disableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1162   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1163   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1164  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1165  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1166  /** \brief Enables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1173  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1174  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1177  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1178  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1179  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1180  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1181  /** \brief Initialises a CC60 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a CC60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cc60Out CC60 compare output CC0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a CC61 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1200   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1201  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1203  /** \brief Initialises a CC61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1204   * \param cc61Out CC61 compare output CC1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a CC62 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a CC62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param cc62Out CC62 compare output CC2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1222   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1223   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1224  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1225  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1226  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1227   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1228   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1229   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1230   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1231  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1232  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1233  /** \brief Initialises a CCPOS1 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1235   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1236   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1237   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1238  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1239  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1241   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1242   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1244   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1245  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1246  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1247  /** \brief Initialises a COUT60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1248   * \param cout60 CC60 compare output COUT0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1249   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1250   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1251   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1252   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1253  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1254  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1255  /** \brief Initialises a COUT61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1256   * \param cout61 CC61 compare output COUT1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1257   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1258   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1259   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1261  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1262  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1263  /** \brief Initialises a COUT62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1264   * \param cout62 CC62 compare output COUT2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1265   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1266   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1267   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1268   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1269  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1270  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1271  /** \brief Initialises a COUT63 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1272   * \param cout63 CC63 compare output COUT3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1273   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1274   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1275   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1276   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1277  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1278  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1279  /** \brief Initialises a CTRAP input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1280   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1281   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1282   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1283   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1284  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1286  /** \brief Initialises a T12HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1287   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1288   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1289   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1291  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1293  /** \brief Initialises a T13HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1294   * \param t13hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1295   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1296   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1297   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1298  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1300  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1301  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1302  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1303  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1304  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1305  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1306  /** \brief Provides functionality for both setting of CC60 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1307   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1308   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1309   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1310   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1311   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1312  IFX_INLINE void IfxCcu6_initCc60InPinWithPadLevel(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1314  /** \brief Provides functionality for both setting of CC61 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1315   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1316   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1317   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1318   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1319   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1320  IFX_INLINE void IfxCcu6_initCc61InPinWithPadLevel(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1322  /** \brief Provides functionality for both setting of CC62 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1323   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1324   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1325   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1326   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1327   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_initCc62InPinWithPadLevel(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1329  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1330  /** \brief Provides functionality for both setting of CCPOS0 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1331   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1332   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1333   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1334   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1335   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1336  IFX_INLINE void IfxCcu6_initCcpos0PinWithPadLevel(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1338  /** \brief Provides functionality for both setting of CCPOS1 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1339   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1340   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1341   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1342   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1343   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1344  IFX_INLINE void IfxCcu6_initCcpos1PinWithPadLevel(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1345  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1346  /** \brief Provides functionality for both setting of CCPOS2 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1347   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1348   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1349   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1350   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1352  IFX_INLINE void IfxCcu6_initCcpos2PinWithPadLevel(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1354  /** \brief Provides functionality for both setting of CTRAP pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1355   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1356   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1357   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1358   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1360  IFX_INLINE void IfxCcu6_initCtrapPinWithPadLevel(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1361  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1362  /** \brief Provides functionality for both setting of T12HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1363   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1364   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1365   * \param padDriver Pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1366   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1367   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1368  IFX_INLINE void IfxCcu6_initT12hrPinWithPadLevel(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1369  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1370  /** \brief Provides functionality for both setting of T13HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1371   * \param t13hrIn Timer 13 HR input T13HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1372   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1373   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1374   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1375   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1376  IFX_INLINE void IfxCcu6_initT13hrPinWithPadLevel(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1377  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1378  /** \brief Sets the sensitivity of the module to sleep signal
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1379   * \param ccu6 pointer to CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1380   * \param mode mode selection (enable/disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1381   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1382   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1383  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1384  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1385  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1386  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1387  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1388  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1389  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1390   * \param ccu6 pointer to ccu6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1391   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1392   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1393  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1394  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1395  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1396  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1397  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1398  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1399  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1400  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1401      ccu6->ISR.U = 0xFFFF;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1402  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1403  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1405  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1406  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1407      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1408      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1409      tctr4.B.T12RES = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1410      tctr4.B.T13RES = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1411      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1412  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1414  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1415  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1416  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1417      ccu6->TCTR4.B.DTRES = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1418  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1421  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1422  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1423      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1424      ccu6->ISR.U = mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1425  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1426  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1427  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1428  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1429  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1430      ccu6->ISR.B.RT12OM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1431  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1434  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1435  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1436      ccu6->ISR.B.RT12PM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1437  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1439  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1440  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1441  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1442      ccu6->ISR.B.RT13CM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1443  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1445  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1446  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1447  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1448      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1449      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1450      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1451  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1452  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1453  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1454  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1455  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1456      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1457      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1458      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1459  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1461  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1462  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1463  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1464      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1465  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1466  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1467  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1468  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1469  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1470      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1471      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1472  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1473  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1475  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1476  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1477      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1478  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1479  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1481  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1482  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1483      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1484      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1485      tctr4.B.T12STD = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1486      tctr4.B.T13STD = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1490  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1493      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1494      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1495  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1496  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1497  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1498  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1499  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1500      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1501  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1503  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1504  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1505  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1506      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1507      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1508  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1510  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1511  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1512  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1513      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1514      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1515      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1516  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1518  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1519  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1520  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1521      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1522  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1523  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1525  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1526  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1527      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1528      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1529      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1530  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1531  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1533  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1534  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1535      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1536      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1537      tctr4.B.T12CNT = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1538      tctr4.B.T13CNT = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1539      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1540  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1541  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1542  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1543  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1544  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1545      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1546      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1547      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1548  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1550  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1551  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1552  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1553      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1554  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1555  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1556  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1557  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1558  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1559      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1560  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1562  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1563  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1564  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1565      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1566      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1567  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1568  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1570  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1571  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1572      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1573  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1574  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1575  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1576  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1577  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1578      ccu6->MCFG.B.MCM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1579  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1580  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1581  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1582  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1583  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1584      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1587  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1590      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1591  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1592  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1594  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1595  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1596      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1597  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1599  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1600  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1601  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1602      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1603  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1604  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1605  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1606  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1607  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1608      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1609      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1610      tctr4.B.T12STR = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1611      tctr4.B.T13STR = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1612      ccu6->TCTR4.U  = tctr4.U;
	insert	d0,d0,#0,#14,#1
	st.w	[a15]120,d0
.L309:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1615  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1618      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1619      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1622  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1625      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1626  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1627  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1629  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1630  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1631      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1632      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1633  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1634  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1636  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1637  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1638      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1639      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1640      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1643  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1646      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1647  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1648  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1649  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1650  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1651  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1652      uint32 shift = (12 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1653      uint32 mask  = 1 << shift;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1654      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1657  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1660      uint32 shift = (channel + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1661      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1662      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1663  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1664  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1665  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1666  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1667  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1668      uint32 shift = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1669      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1670  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1671  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1672  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1673  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1674  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1675      return ccu6->MCFG.B.MCM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1677  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1678  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1681      return ccu6->MCMOUT.B.R != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1682  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1683  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1684  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1685  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1686  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1687      uint32 shift = ((timer * 8) + 5);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1688      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1689      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1690  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1691  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1692  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1693  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1694  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1695      uint32 mask = (1U << channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1696      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1697  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1698  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1699  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1700  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1701  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1702      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1703  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1704  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1705  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1706  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1707  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1708      return (volatile uint32 *)&ccu6->T12PR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1709  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1710  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1711  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1712  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1713  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1714      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1715  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1716  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1717  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1718  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1719  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1720      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1721      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1722  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1723  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1724  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1725  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1726  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1727      uint32 shift = ((timer * 8) + 4);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1728      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1729      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1730  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1731  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1732  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1733  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1734  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1735      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1736      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1737  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1738  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1739  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1740  IFX_INLINE void IfxCcu6_initCc60InPinWithPadLevel(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1741  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1742      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1743      IfxPort_setPinPadDriver(cc60In->pin.port, cc60In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1744      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1745  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1746  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1747  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1748  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1749  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1750      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1751      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1752  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1754  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1755  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1756  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1757      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1758      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1759  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1760  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1761  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1762  IFX_INLINE void IfxCcu6_initCc61InPinWithPadLevel(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1763  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1764      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1765      IfxPort_setPinPadDriver(cc61In->pin.port, cc61In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1766      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1767  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1768  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1769  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1770  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1771  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1772      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1773      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1774  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1775  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1776  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1777  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1778  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1779      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1780      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1781  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1782  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1783  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1784  IFX_INLINE void IfxCcu6_initCc62InPinWithPadLevel(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1785  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1786      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1787      IfxPort_setPinPadDriver(cc62In->pin.port, cc62In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1788      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1789  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1790  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1791  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1792  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1793  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1794      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1795      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1796  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1797  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1798  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1799  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1800  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1801      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1802      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1803  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1804  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1805  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1806  IFX_INLINE void IfxCcu6_initCcpos0PinWithPadLevel(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1807  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1808      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1809      IfxPort_setPinPadDriver(ccpos0->pin.port, ccpos0->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1810      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1811  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1812  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1813  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1814  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1815  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1816      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1817      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1818  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1819  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1820  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1821  IFX_INLINE void IfxCcu6_initCcpos1PinWithPadLevel(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1822  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1823      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1824      IfxPort_setPinPadDriver(ccpos1->pin.port, ccpos1->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1825      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1826  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1827  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1828  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1829  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1830  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1831      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1832      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1833  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1834  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1835  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1836  IFX_INLINE void IfxCcu6_initCcpos2PinWithPadLevel(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1837  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1838      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1839      IfxPort_setPinPadDriver(ccpos2->pin.port, ccpos2->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1840      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1841  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1842  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1843  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1844  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1845  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1846      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1847      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1848  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1849  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1850  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1851  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1852  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1853      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1854      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1855  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1856  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1857  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1858  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1859  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1860      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1861      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1862  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1863  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1864  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1865  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1866  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1867      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1868      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1869  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1870  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1871  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1872  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1873  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1874      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1875      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1876  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1877  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1878  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1879  IFX_INLINE void IfxCcu6_initCtrapPinWithPadLevel(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1880  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1881      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1882      IfxPort_setPinPadDriver(ctrap->pin.port, ctrap->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1883      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1884  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1885  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1886  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1887  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1888  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1889      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1890      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1891  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1892  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1893  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1894  IFX_INLINE void IfxCcu6_initT12hrPinWithPadLevel(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1895  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1896      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1897      IfxPort_setPinPadDriver(t12hrIn->pin.port, t12hrIn->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1898      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1899  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1900  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1901  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1902  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1903  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1904      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1905      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1906  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1907  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1908  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1909  IFX_INLINE void IfxCcu6_initT13hrPinWithPadLevel(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1910  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1911      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1912      IfxPort_setPinPadDriver(t13hrIn->pin.port, t13hrIn->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1913      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1914  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1915  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1916  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1917  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1918  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1919      return ccu6->CLC.B.DISS == 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1920  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1922  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1923  IFX_INLINE boolean IfxCcu6_isModuleSuspended(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1924  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1925      Ifx_CCU6_OCS ocs;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1926  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1927      // read the status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1928      ocs.U = ccu6->OCS.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1929  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1930      // return the status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1931      return ocs.B.SUSSTA;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1932  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1933  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1935  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1936  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1937      return ccu6->IS.B.T12OM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1938  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1939  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1940  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1941  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1942  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1943      return ccu6->IS.B.T12PM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1944  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1945  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1946  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1947  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1948  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1949      return ccu6->IS.B.T13CM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1950  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1951  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1952  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1953  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1954  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1955      uint32 shift = (uint32)input;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1956      uint32 mask  = (0x3U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1957      ccu6->PISEL0.U = (ccu6->PISEL0.U & ~mask) | ((uint32)signal << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1958  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1959  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1960  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1961  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1962  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1963      uint32 shift = ((timer * 2) + 2);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1964      uint32 mask  = (0x3U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1965      ccu6->PISEL2.U = (ccu6->PISEL2.U & ~mask) | ((uint32)mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1966  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1967  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1968  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1969  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1970  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1971      ccu6->MCMOUTS.B.CURHS = pattern;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1972  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1973  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1974  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1975  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1976  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1977      ccu6->T12DTC.B.DTM = value;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1978  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1979  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1980  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1981  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1982  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1983      ccu6->MCMOUTS.B.EXPHS = pattern;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1984  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1985  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1986  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1987  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1988  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1989      uint32 shift = ((timer * 2) + 8);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1990      uint32 mask  = (0x3U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1991      ccu6->TCTR2.U = (ccu6->TCTR2.U & ~mask) | ((uint32)mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1992  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1993  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1994  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1995  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1996  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1997      uint32 shift = 12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1998      uint32 mask  = (0x7U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1999      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2000  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2001  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2002  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2003  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2004  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2005      uint32 shift = (timer * 8);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2006      uint32 mask  = (0x7U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2007      ccu6->TCTR0.U = (ccu6->TCTR0.U & ~mask) | ((uint32)frequency << shift);
	ld.w	d0,[a15]112
.L468:
	insert	d0,d0,#0,#0,#3
.L563:
	or	d0,d15
	st.w	[a15]112,d0
.L322:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   407  Frequency(ccu6, IfxCcu6_TimerId_t12, clockInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   408  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   409          additionalPrescaler = ((prescaler & 0x8U) != 0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   410  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   411          if (additionalPrescaler)
	jz.t	d1:3,.L76
.L324:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    45   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    46   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    47   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    48   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    49   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    50   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    51   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    52   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    53   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    54   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    55   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    56  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    57  #ifndef IFXCCU6_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    58  #define IFXCCU6_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    59  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    60  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    61  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    62  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    63  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    64  #include "_Impl/IfxCcu6_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    65  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    66  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    67  #include "Scu/Std/IfxScuWdt.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    68  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    69  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    70  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    72  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    73  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    74  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    75  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    76  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    77   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    78  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    79   * Definition in Ifx_CCU.PISEL0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    80   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    81  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    82  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    83      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    84      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    85      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    89      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    90  } IfxCcu6_CaptureCompareInput;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    91  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    92  /** \brief Selection of actual input signal for the capture compare inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    93   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    94  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    95  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   100  } IfxCcu6_CaptureCompareInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   101  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   102  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   103   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   104  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   105  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   106      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   107      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   108      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   109  } IfxCcu6_CaptureCompareState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   110  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   111  /** \brief Capture compare output pins
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   112   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   113  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   114  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   116      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   117      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   118      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   119      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   120      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   121      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   122  } IfxCcu6_ChannelOut;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   123  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   124  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   125   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   126   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   127  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   128  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   129      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   130                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   131      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   132                                                      * event. The T1x prescaler is not taken into account */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   133      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   134                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   137  } IfxCcu6_CountingInputMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   138  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   139  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   140   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   141   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   142  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   143  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   144      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   145                                           * the source signal becomes active */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   146      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   147  } IfxCcu6_DelayBypass;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   148  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   149  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   150   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   151   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   152  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   153  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   156                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   157      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   158                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   159      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   160                                                     * detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   161  } IfxCcu6_ExternalTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   162  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   163  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   164   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   165   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   166  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   167  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                             * signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   171      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   173      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   175      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   177  } IfxCcu6_HallSensorTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   178  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   179  /** \brief Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   180   * Description in Ifx_CCU.IEN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   181   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   182  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   183  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   184      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   185                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   186      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   187                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   188      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   189                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   191                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   193                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   197      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   198      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   199      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   200      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   201      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   202      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   203  } IfxCcu6_InterruptSource;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   204  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   205  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   206   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   207   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   208  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   209  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   210      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   211      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   212      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   213      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   214      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   215                                                                         * delay function) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   217  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   218  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   219  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   220   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   221   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   222  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   223  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   224      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   225                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   228                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   229  } IfxCcu6_MultiChannelSwitchingSync;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   230  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   231  /** \brief Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   232   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   233  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   234  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   237      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   238      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   239  } IfxCcu6_ServiceRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   240  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   242   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   243   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   244  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   245  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   248  } IfxCcu6_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   249  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   251   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   252  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   253  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Capture compare channel of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   261  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   262  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   263      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   269   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   270  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   271  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   272      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   274      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   276      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   277      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   278      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   279                                                                          * programmed to Hall Sensor mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   280      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   281      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   282      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   283      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   286  } IfxCcu6_T12ChannelMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   287  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   288  /** \brief Counting direction of Timer12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   289   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   291  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   292  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   293      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   294      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   295  } IfxCcu6_T12CountDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   296  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   297  /** \brief Operating mode of Timer 12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   298   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   299   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   300  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   301  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   302      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   303                                               * from zero after reaching the period value. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   304      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   305                                               * and counts up after detecting a one-match. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   306  } IfxCcu6_T12CountMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   307  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   308  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   309   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   310   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   311  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   312  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   313      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   314      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   315      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   316      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   317  } IfxCcu6_T13TriggerDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   318  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   319  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   320   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   321   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   322  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   323  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   327      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   328      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   329      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   330      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   331                                                     * counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   332      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   333  } IfxCcu6_T13TriggerEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   334  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   335  /** \brief Timer number ( T12 / T13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   336   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   337  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   338  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   350      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   351      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   352      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   353      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   354      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   355      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   356  } IfxCcu6_TimerInputClock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   358  /** \brief Selection of actual input signal for the timer inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   360  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   361  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   362      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   363      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   364      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   365      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   366      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   368      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   370  } IfxCcu6_TimerInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   371  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   372  /** \brief Timer (T12 / T13) run status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   373   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   374   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   375  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   376  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   377      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   378      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   379  } IfxCcu6_TimerRunStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   380  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   381  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   382   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   383   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   384  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   385  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   386      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   387      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   388                                        * ISR.RTRPF = 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   389  } IfxCcu6_TrapMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   392   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   394  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   395  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   396      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   397                                        * of T12 (while counting up) is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   398      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   399                                        * of T13 is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   400      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   401  } IfxCcu6_TrapState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   402  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   403  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   405  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   407  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   408  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   409  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   410  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   411  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   412  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   413   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   414   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   415   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   416   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   417   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   418  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   420  /** \brief Clears all the three dead-time counter channels to zero.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   421   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   422   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   423   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   424  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   425  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   426  /** \brief Clears the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   427   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   428   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   430   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   431  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   433  /** \brief Clears the T12  One notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   434   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   436   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   437  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   439  /** \brief Clears the T12  period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   440   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   442   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   443  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   445  /** \brief Clears the T13  compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   446   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   448   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   449  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   450  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   451  /** \brief Returns the Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   452   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \return Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   454   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   455  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   456  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   457  /** \brief Returns the status of module enabled or disabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   458   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   459   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   460   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   461  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   462  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   463  /** \brief Returns the status of T12 one notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   464   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   465   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   466   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   467  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   468  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   469  /** \brief Returns the status of T12 period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   471   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   472   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   473  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   475  /** \brief Returns the status of T13 compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param pattern Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param value Value of the dead time to be induced
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   500   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   501  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   503  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   504   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param pattern Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   507   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   508  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   510  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   511   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param mode External trigger mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Hall sensor input trigger event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   526   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param frequency Input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   537   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   538  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   539  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   540  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   541   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   542   * \param pattern Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   544   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   545  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   546  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   547  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   548   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   549   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   550   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   551   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   552  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   553  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   554  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   555   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   556   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   557   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   558   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   559   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   560  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   562  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   563   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   564   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   565   * \param state FALSE: passive state when CC6xST == 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   566   * TRUE : passive state when CC6xST == 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   568   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   569  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   570  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   571  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   572   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \param mode The operating mode for the T12 channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   583   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   584   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   585  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   587  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \param mode Operating mode of Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   590   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   591   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   592  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   594  /** \brief Sets the 16-bit counter value of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \param value Counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   597   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   598   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   599  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   600  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   601  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \param value Period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   604   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   605   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   606  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   607  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   608  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   611   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   612   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   613  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   615  /** \brief Sets the 16-bit counter value of Timer13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \param value counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   618   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   619   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   620  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   622  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \param value period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   625   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   627  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   629  /** \brief Sets the Timer13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param direction T13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param mode The trigger event to start T13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   640   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   641  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   643  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   644   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param mode Trap mode selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   647   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   648  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   649  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   650  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   651   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   652   * \param state Trap state selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   653   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   654   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   655  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   657  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param t12 Timer12 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param t13 Timer13 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param t12 Timer12 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param t13 Timer13 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param currentHall Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param expectedHall Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   677   * \param output Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   682  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   683  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   684  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   686  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   687   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   688   * \param outputLine Output Line
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   689   * \param selectedTrigger Trigger selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   690   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   691   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   692  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   693  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   694  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   695   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   696   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   697   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   698   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   699   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   700  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   701  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   702  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   704   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   705   * \param state FALSE: The passive level is 0.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   706   * TRUE : The passive level is 1.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   707   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   708   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   709  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   710  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   711  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   712   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   713   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   714   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   715   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   716   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   717  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   718  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   719  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   720   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   721   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   722   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   724   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   725  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   726  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   727  /** \brief Sets the frequency and clock input of the Timer 12.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   728   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   729   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   730   * The resulting frequency is captured in the handler element : CaptureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   731   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \param countMode Counting mode of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   735   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   736   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   737   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   738  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period, IfxCcu6_T12CountMode countMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   742   * \param extInput External input signal for the Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   743   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   744   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   745  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Sets the frequency and clock input of the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   755   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   756   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   757   * The resulting frequency is captured in the handler element : captureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   759   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   760   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   761   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   762   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   763   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   764  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   766  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   768   * \param extInput External input signal for the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   769   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   770   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   771  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   773  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   774  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   775  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   776   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   777  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   778  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   779  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   780  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   781  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   782  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   783   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   784   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   785   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   786   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   787  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   788  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   789  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   790   * that has been compared to the current and expected value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   791   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   792   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   794   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   795   * FALSE : The input CCPOSx has been sampled as 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Gets the status of the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   802   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   803   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   804  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   805  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   806  /** \brief indicates if the multi-channel mode functionality is available
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   808   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   809   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   810  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   811  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   812  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   815   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   816   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   817   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   818  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   819  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   820  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   822   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   823   * \return Status (TRUE: enable / FALSE: disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   824   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   825  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   826  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   827  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   828   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   829   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   831   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   832  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   833  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   834  /** \brief Returns the current counting direction of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   835   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   836   * \return direction (up / down)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   837   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   838  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   839  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   840  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   841   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   842   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   843   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   844  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   845  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   846  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   847   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   848   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   849   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   850   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   851  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   852  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   853  /** \brief Returns the Timer (T12 / T13) run status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   854   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   855   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   856   * \return Status (stopped / running)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   857   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   858  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   859  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   860  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   861   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   862   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   863   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   864   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   865   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   866  IFX_INLINE boolean IfxCcu6_isModuleSuspended(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   868  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   869   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   870   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   871   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   872   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   873   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   874  IFX_INLINE void IfxCcu6_setSuspendMode(Ifx_CCU6 *ccu6, IfxCcu6_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   875  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   876  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   877  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   878  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   879  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   880  /** \brief Returns the module index of the selected CCU6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return CCU6 module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_EXTERN Ifx_CCU6 *IfxCcu6_getAddress(IfxCcu6_Index ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Returns the capture register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   889   * \return current value of the capture register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   890   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   891  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   892  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   893  /** \brief Returns the capture shadow register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   896   * \return current value of the capture shadow register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   897   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   898  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   899  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   900  /** \brief Returns CCU6 index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \param ccu6 Specifies the pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   902   * \return Returns index. returns -1 in case of unknown index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   903   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   904  IFX_EXTERN IfxCcu6_Index IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   905  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   906  /** \brief Returns the service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return The service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Returns the current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   922  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   924  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   925  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   926  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   927  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   928  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   929  /** \brief Clears all Interrupt flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   931   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   932   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   933  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   935  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   938   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   939   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   940  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   941  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   942  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   944   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   945   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   946   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   947  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   948  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   949  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   951   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   952   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   953  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   954  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   955  /** \brief Disables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   965   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   966  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   967  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   968  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   969   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   972   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   973   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   974  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   975  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   976  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   978   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   979   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   980   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   981  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   982  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   983  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   984   * T13 output CC63_O is equal to CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   985   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   986   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   987   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   988  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   989  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   990  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   991   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   992   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   993   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   994   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   995  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   996  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   997  /** \brief Disables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   998   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   999   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1000   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1001   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1002  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1003  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1004  /** \brief Disables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1005   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1006   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1007   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1008  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1010  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1011   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1012   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1013   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1014   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1015  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1017  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1018   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1019   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1020   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1021   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1022   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1023  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1024  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1025  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1026   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1027   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1028   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1029   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1030  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1031  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1032  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1033   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1034   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1035   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1036  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1037  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1038  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1040   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1041   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1042  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1043  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1044  /** \brief Enables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1047   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1048   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1049  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1050  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1051  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the Multi Channel Mode Availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1066   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1067  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1068  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1069  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1070   * becomes set while a T12 one match is detected while counting down
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1071   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1072   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1073   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1074  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1075  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1076  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * becomes set while a T12 period match is detected while counting up
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * becomes set while a T13 period match is detected
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1087   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1088  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1089  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1090  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1091   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1094   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1095   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1096  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1097  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1098  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1099   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1101   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1102   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1103  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1104  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1105  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1106   * T13 output CC63_O is equal to CC63ST.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1109   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1110  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1112  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1113   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1116   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1117  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1118  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1119  /** \brief Enables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1120   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1121   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1123   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1124  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1125  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1126  /** \brief Enables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1127   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1128   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1129   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1130  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1131  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1132  /** \brief selects the actual input signal for the capture compare inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1133   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1134   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1135   * \param signal selection of actual input signal for the module inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1136   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1137   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1138  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1139  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1140  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1141  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1142  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1143  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1144  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1148   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1149   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1150  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1151  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1152  /** \brief Disables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_EXTERN void IfxCcu6_disableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1162   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1163   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1164  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1165  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1166  /** \brief Enables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1173  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1174  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1177  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1178  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1179  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1180  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1181  /** \brief Initialises a CC60 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a CC60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cc60Out CC60 compare output CC0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a CC61 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1200   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1201  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1203  /** \brief Initialises a CC61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1204   * \param cc61Out CC61 compare output CC1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a CC62 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a CC62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param cc62Out CC62 compare output CC2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1222   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1223   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1224  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1225  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1226  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1227   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1228   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1229   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1230   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1231  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1232  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1233  /** \brief Initialises a CCPOS1 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1235   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1236   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1237   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1238  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1239  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1241   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1242   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1244   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1245  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1246  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1247  /** \brief Initialises a COUT60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1248   * \param cout60 CC60 compare output COUT0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1249   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1250   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1251   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1252   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1253  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1254  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1255  /** \brief Initialises a COUT61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1256   * \param cout61 CC61 compare output COUT1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1257   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1258   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1259   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1261  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1262  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1263  /** \brief Initialises a COUT62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1264   * \param cout62 CC62 compare output COUT2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1265   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1266   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1267   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1268   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1269  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1270  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1271  /** \brief Initialises a COUT63 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1272   * \param cout63 CC63 compare output COUT3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1273   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1274   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1275   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1276   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1277  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1278  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1279  /** \brief Initialises a CTRAP input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1280   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1281   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1282   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1283   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1284  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1286  /** \brief Initialises a T12HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1287   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1288   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1289   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1291  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1293  /** \brief Initialises a T13HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1294   * \param t13hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1295   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1296   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1297   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1298  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1300  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1301  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1302  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1303  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1304  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1305  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1306  /** \brief Provides functionality for both setting of CC60 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1307   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1308   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1309   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1310   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1311   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1312  IFX_INLINE void IfxCcu6_initCc60InPinWithPadLevel(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1314  /** \brief Provides functionality for both setting of CC61 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1315   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1316   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1317   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1318   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1319   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1320  IFX_INLINE void IfxCcu6_initCc61InPinWithPadLevel(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1322  /** \brief Provides functionality for both setting of CC62 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1323   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1324   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1325   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1326   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1327   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_initCc62InPinWithPadLevel(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1329  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1330  /** \brief Provides functionality for both setting of CCPOS0 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1331   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1332   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1333   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1334   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1335   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1336  IFX_INLINE void IfxCcu6_initCcpos0PinWithPadLevel(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1338  /** \brief Provides functionality for both setting of CCPOS1 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1339   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1340   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1341   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1342   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1343   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1344  IFX_INLINE void IfxCcu6_initCcpos1PinWithPadLevel(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1345  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1346  /** \brief Provides functionality for both setting of CCPOS2 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1347   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1348   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1349   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1350   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1352  IFX_INLINE void IfxCcu6_initCcpos2PinWithPadLevel(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1354  /** \brief Provides functionality for both setting of CTRAP pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1355   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1356   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1357   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1358   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1360  IFX_INLINE void IfxCcu6_initCtrapPinWithPadLevel(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1361  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1362  /** \brief Provides functionality for both setting of T12HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1363   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1364   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1365   * \param padDriver Pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1366   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1367   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1368  IFX_INLINE void IfxCcu6_initT12hrPinWithPadLevel(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1369  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1370  /** \brief Provides functionality for both setting of T13HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1371   * \param t13hrIn Timer 13 HR input T13HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1372   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1373   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1374   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1375   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1376  IFX_INLINE void IfxCcu6_initT13hrPinWithPadLevel(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1377  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1378  /** \brief Sets the sensitivity of the module to sleep signal
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1379   * \param ccu6 pointer to CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1380   * \param mode mode selection (enable/disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1381   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1382   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1383  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1384  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1385  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1386  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1387  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1388  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1389  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1390   * \param ccu6 pointer to ccu6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1391   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1392   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1393  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1394  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1395  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1396  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1397  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1398  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1399  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1400  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1401      ccu6->ISR.U = 0xFFFF;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1402  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1403  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1405  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1406  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1407      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1408      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1409      tctr4.B.T12RES = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1410      tctr4.B.T13RES = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1411      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1412  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1414  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1415  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1416  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1417      ccu6->TCTR4.B.DTRES = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1418  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1421  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1422  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1423      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1424      ccu6->ISR.U = mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1425  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1426  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1427  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1428  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1429  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1430      ccu6->ISR.B.RT12OM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1431  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1434  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1435  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1436      ccu6->ISR.B.RT12PM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1437  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1439  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1440  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1441  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1442      ccu6->ISR.B.RT13CM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1443  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1445  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1446  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1447  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1448      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1449      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1450      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1451  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1452  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1453  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1454  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1455  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1456      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1457      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1458      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1459  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1461  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1462  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1463  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1464      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1465  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1466  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1467  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1468  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1469  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1470      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1471      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1472  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1473  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1475  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1476  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1477      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1478  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1479  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1481  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1482  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1483      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1484      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1485      tctr4.B.T12STD = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1486      tctr4.B.T13STD = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1490  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1493      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1494      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1495  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1496  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1497  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1498  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1499  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1500      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1501  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1503  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1504  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1505  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1506      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1507      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1508  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1510  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1511  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1512  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1513      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1514      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1515      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1516  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1518  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1519  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1520  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1521      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1522  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1523  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1525  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1526  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1527      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1528      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1529      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
	ld.w	d15,[a15]112
.L564:
	or	d15,#8
	st.w	[a15]112,d15
.L76:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    45   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    46   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    47   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    48   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    49   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    50   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    51   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    52   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    53   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    54   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    55   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    56  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    57  #ifndef IFXCCU6_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    58  #define IFXCCU6_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    59  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    60  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    61  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    62  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    63  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    64  #include "_Impl/IfxCcu6_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    65  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    66  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    67  #include "Scu/Std/IfxScuWdt.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    68  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    69  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    70  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    72  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    73  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    74  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    75  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    76  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    77   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    78  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    79   * Definition in Ifx_CCU.PISEL0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    80   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    81  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    82  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    83      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    84      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    85      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    89      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    90  } IfxCcu6_CaptureCompareInput;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    91  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    92  /** \brief Selection of actual input signal for the capture compare inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    93   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    94  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    95  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   100  } IfxCcu6_CaptureCompareInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   101  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   102  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   103   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   104  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   105  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   106      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   107      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   108      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   109  } IfxCcu6_CaptureCompareState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   110  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   111  /** \brief Capture compare output pins
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   112   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   113  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   114  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   116      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   117      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   118      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   119      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   120      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   121      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   122  } IfxCcu6_ChannelOut;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   123  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   124  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   125   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   126   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   127  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   128  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   129      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   130                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   131      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   132                                                      * event. The T1x prescaler is not taken into account */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   133      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   134                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   137  } IfxCcu6_CountingInputMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   138  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   139  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   140   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   141   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   142  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   143  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   144      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   145                                           * the source signal becomes active */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   146      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   147  } IfxCcu6_DelayBypass;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   148  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   149  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   150   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   151   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   152  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   153  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   156                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   157      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   158                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   159      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   160                                                     * detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   161  } IfxCcu6_ExternalTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   162  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   163  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   164   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   165   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   166  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   167  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                             * signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   171      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   173      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   175      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   177  } IfxCcu6_HallSensorTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   178  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   179  /** \brief Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   180   * Description in Ifx_CCU.IEN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   181   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   182  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   183  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   184      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   185                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   186      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   187                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   188      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   189                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   191                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   193                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   197      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   198      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   199      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   200      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   201      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   202      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   203  } IfxCcu6_InterruptSource;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   204  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   205  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   206   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   207   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   208  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   209  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   210      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   211      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   212      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   213      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   214      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   215                                                                         * delay function) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   217  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   218  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   219  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   220   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   221   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   222  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   223  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   224      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   225                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   228                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   229  } IfxCcu6_MultiChannelSwitchingSync;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   230  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   231  /** \brief Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   232   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   233  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   234  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   237      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   238      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   239  } IfxCcu6_ServiceRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   240  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   242   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   243   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   244  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   245  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   248  } IfxCcu6_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   249  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   251   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   252  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   253  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Capture compare channel of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   261  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   262  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   263      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   269   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   270  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   271  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   272      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   274      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   276      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   277      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   278      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   279                                                                          * programmed to Hall Sensor mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   280      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   281      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   282      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   283      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   286  } IfxCcu6_T12ChannelMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   287  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   288  /** \brief Counting direction of Timer12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   289   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   291  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   292  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   293      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   294      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   295  } IfxCcu6_T12CountDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   296  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   297  /** \brief Operating mode of Timer 12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   298   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   299   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   300  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   301  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   302      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   303                                               * from zero after reaching the period value. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   304      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   305                                               * and counts up after detecting a one-match. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   306  } IfxCcu6_T12CountMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   307  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   308  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   309   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   310   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   311  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   312  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   313      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   314      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   315      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   316      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   317  } IfxCcu6_T13TriggerDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   318  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   319  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   320   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   321   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   322  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   323  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   327      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   328      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   329      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   330      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   331                                                     * counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   332      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   333  } IfxCcu6_T13TriggerEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   334  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   335  /** \brief Timer number ( T12 / T13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   336   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   337  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   338  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   350      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   351      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   352      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   353      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   354      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   355      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   356  } IfxCcu6_TimerInputClock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   358  /** \brief Selection of actual input signal for the timer inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   360  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   361  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   362      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   363      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   364      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   365      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   366      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   368      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   370  } IfxCcu6_TimerInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   371  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   372  /** \brief Timer (T12 / T13) run status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   373   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   374   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   375  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   376  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   377      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   378      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   379  } IfxCcu6_TimerRunStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   380  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   381  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   382   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   383   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   384  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   385  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   386      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   387      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   388                                        * ISR.RTRPF = 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   389  } IfxCcu6_TrapMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   392   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   394  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   395  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   396      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   397                                        * of T12 (while counting up) is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   398      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   399                                        * of T13 is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   400      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   401  } IfxCcu6_TrapState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   402  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   403  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   405  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   407  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   408  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   409  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   410  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   411  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   412  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   413   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   414   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   415   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   416   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   417   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   418  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   420  /** \brief Clears all the three dead-time counter channels to zero.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   421   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   422   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   423   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   424  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   425  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   426  /** \brief Clears the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   427   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   428   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   430   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   431  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   433  /** \brief Clears the T12  One notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   434   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   436   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   437  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   439  /** \brief Clears the T12  period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   440   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   442   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   443  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   445  /** \brief Clears the T13  compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   446   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   448   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   449  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   450  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   451  /** \brief Returns the Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   452   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \return Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   454   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   455  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   456  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   457  /** \brief Returns the status of module enabled or disabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   458   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   459   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   460   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   461  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   462  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   463  /** \brief Returns the status of T12 one notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   464   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   465   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   466   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   467  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   468  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   469  /** \brief Returns the status of T12 period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   471   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   472   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   473  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   475  /** \brief Returns the status of T13 compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param pattern Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param value Value of the dead time to be induced
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   500   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   501  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   503  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   504   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param pattern Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   507   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   508  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   510  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   511   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param mode External trigger mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Hall sensor input trigger event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   526   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param frequency Input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   537   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   538  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   539  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   540  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   541   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   542   * \param pattern Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   544   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   545  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   546  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   547  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   548   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   549   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   550   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   551   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   552  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   553  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   554  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   555   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   556   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   557   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   558   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   559   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   560  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   562  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   563   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   564   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   565   * \param state FALSE: passive state when CC6xST == 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   566   * TRUE : passive state when CC6xST == 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   568   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   569  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   570  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   571  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   572   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \param mode The operating mode for the T12 channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   583   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   584   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   585  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   587  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \param mode Operating mode of Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   590   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   591   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   592  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   594  /** \brief Sets the 16-bit counter value of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \param value Counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   597   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   598   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   599  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   600  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   601  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \param value Period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   604   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   605   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   606  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   607  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   608  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   611   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   612   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   613  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   615  /** \brief Sets the 16-bit counter value of Timer13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \param value counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   618   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   619   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   620  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   622  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \param value period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   625   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   627  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   629  /** \brief Sets the Timer13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param direction T13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param mode The trigger event to start T13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   640   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   641  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   643  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   644   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param mode Trap mode selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   647   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   648  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   649  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   650  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   651   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   652   * \param state Trap state selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   653   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   654   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   655  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   657  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param t12 Timer12 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param t13 Timer13 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param t12 Timer12 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param t13 Timer13 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param currentHall Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param expectedHall Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   677   * \param output Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   682  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   683  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   684  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   686  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   687   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   688   * \param outputLine Output Line
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   689   * \param selectedTrigger Trigger selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   690   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   691   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   692  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   693  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   694  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   695   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   696   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   697   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   698   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   699   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   700  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   701  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   702  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   704   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   705   * \param state FALSE: The passive level is 0.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   706   * TRUE : The passive level is 1.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   707   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   708   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   709  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   710  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   711  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   712   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   713   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   714   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   715   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   716   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   717  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   718  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   719  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   720   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   721   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   722   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   724   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   725  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   726  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   727  /** \brief Sets the frequency and clock input of the Timer 12.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   728   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   729   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   730   * The resulting frequency is captured in the handler element : CaptureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   731   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \param countMode Counting mode of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   735   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   736   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   737   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   738  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period, IfxCcu6_T12CountMode countMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   742   * \param extInput External input signal for the Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   743   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   744   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   745  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Sets the frequency and clock input of the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   755   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   756   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   757   * The resulting frequency is captured in the handler element : captureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   759   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   760   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   761   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   762   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   763   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   764  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   766  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   768   * \param extInput External input signal for the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   769   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   770   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   771  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   773  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   774  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   775  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   776   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   777  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   778  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   779  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   780  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   781  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   782  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   783   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   784   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   785   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   786   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   787  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   788  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   789  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   790   * that has been compared to the current and expected value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   791   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   792   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   794   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   795   * FALSE : The input CCPOSx has been sampled as 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Gets the status of the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   802   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   803   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   804  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   805  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   806  /** \brief indicates if the multi-channel mode functionality is available
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   808   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   809   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   810  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   811  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   812  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   815   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   816   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   817   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   818  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   819  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   820  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   822   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   823   * \return Status (TRUE: enable / FALSE: disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   824   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   825  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   826  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   827  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   828   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   829   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   831   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   832  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   833  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   834  /** \brief Returns the current counting direction of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   835   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   836   * \return direction (up / down)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   837   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   838  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   839  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   840  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   841   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   842   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   843   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   844  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   845  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   846  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   847   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   848   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   849   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   850   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   851  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   852  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   853  /** \brief Returns the Timer (T12 / T13) run status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   854   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   855   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   856   * \return Status (stopped / running)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   857   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   858  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   859  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   860  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   861   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   862   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   863   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   864   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   865   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   866  IFX_INLINE boolean IfxCcu6_isModuleSuspended(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   868  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   869   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   870   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   871   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   872   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   873   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   874  IFX_INLINE void IfxCcu6_setSuspendMode(Ifx_CCU6 *ccu6, IfxCcu6_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   875  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   876  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   877  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   878  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   879  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   880  /** \brief Returns the module index of the selected CCU6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return CCU6 module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_EXTERN Ifx_CCU6 *IfxCcu6_getAddress(IfxCcu6_Index ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Returns the capture register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   889   * \return current value of the capture register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   890   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   891  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   892  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   893  /** \brief Returns the capture shadow register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   896   * \return current value of the capture shadow register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   897   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   898  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   899  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   900  /** \brief Returns CCU6 index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \param ccu6 Specifies the pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   902   * \return Returns index. returns -1 in case of unknown index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   903   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   904  IFX_EXTERN IfxCcu6_Index IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   905  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   906  /** \brief Returns the service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return The service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Returns the current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   922  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   924  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   925  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   926  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   927  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   928  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   929  /** \brief Clears all Interrupt flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   931   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   932   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   933  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   935  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   938   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   939   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   940  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   941  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   942  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   944   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   945   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   946   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   947  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   948  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   949  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   951   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   952   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   953  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   954  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   955  /** \brief Disables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   965   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   966  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   967  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   968  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   969   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   972   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   973   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   974  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   975  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   976  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   978   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   979   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   980   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   981  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   982  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   983  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   984   * T13 output CC63_O is equal to CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   985   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   986   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   987   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   988  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   989  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   990  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   991   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   992   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   993   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   994   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   995  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   996  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   997  /** \brief Disables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   998   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   999   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1000   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1001   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1002  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1003  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1004  /** \brief Disables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1005   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1006   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1007   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1008  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1010  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1011   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1012   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1013   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1014   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1015  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1017  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1018   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1019   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1020   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1021   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1022   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1023  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1024  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1025  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1026   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1027   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1028   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1029   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1030  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1031  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1032  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1033   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1034   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1035   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1036  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1037  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1038  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1040   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1041   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1042  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1043  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1044  /** \brief Enables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1047   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1048   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1049  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1050  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1051  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the Multi Channel Mode Availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1066   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1067  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1068  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1069  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1070   * becomes set while a T12 one match is detected while counting down
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1071   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1072   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1073   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1074  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1075  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1076  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * becomes set while a T12 period match is detected while counting up
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * becomes set while a T13 period match is detected
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1087   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1088  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1089  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1090  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1091   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1094   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1095   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1096  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1097  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1098  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1099   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1101   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1102   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1103  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1104  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1105  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1106   * T13 output CC63_O is equal to CC63ST.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1109   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1110  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1112  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1113   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1116   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1117  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1118  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1119  /** \brief Enables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1120   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1121   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1123   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1124  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1125  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1126  /** \brief Enables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1127   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1128   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1129   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1130  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1131  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1132  /** \brief selects the actual input signal for the capture compare inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1133   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1134   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1135   * \param signal selection of actual input signal for the module inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1136   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1137   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1138  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1139  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1140  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1141  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1142  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1143  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1144  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1148   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1149   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1150  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1151  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1152  /** \brief Disables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_EXTERN void IfxCcu6_disableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1162   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1163   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1164  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1165  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1166  /** \brief Enables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1173  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1174  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1177  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1178  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1179  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1180  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1181  /** \brief Initialises a CC60 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a CC60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cc60Out CC60 compare output CC0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a CC61 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1200   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1201  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1203  /** \brief Initialises a CC61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1204   * \param cc61Out CC61 compare output CC1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a CC62 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a CC62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param cc62Out CC62 compare output CC2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1222   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1223   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1224  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1225  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1226  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1227   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1228   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1229   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1230   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1231  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1232  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1233  /** \brief Initialises a CCPOS1 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1235   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1236   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1237   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1238  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1239  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1241   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1242   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1244   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1245  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1246  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1247  /** \brief Initialises a COUT60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1248   * \param cout60 CC60 compare output COUT0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1249   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1250   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1251   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1252   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1253  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1254  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1255  /** \brief Initialises a COUT61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1256   * \param cout61 CC61 compare output COUT1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1257   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1258   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1259   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1261  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1262  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1263  /** \brief Initialises a COUT62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1264   * \param cout62 CC62 compare output COUT2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1265   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1266   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1267   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1268   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1269  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1270  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1271  /** \brief Initialises a COUT63 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1272   * \param cout63 CC63 compare output COUT3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1273   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1274   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1275   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1276   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1277  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1278  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1279  /** \brief Initialises a CTRAP input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1280   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1281   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1282   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1283   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1284  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1286  /** \brief Initialises a T12HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1287   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1288   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1289   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1291  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1293  /** \brief Initialises a T13HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1294   * \param t13hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1295   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1296   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1297   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1298  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1300  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1301  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1302  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1303  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1304  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1305  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1306  /** \brief Provides functionality for both setting of CC60 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1307   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1308   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1309   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1310   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1311   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1312  IFX_INLINE void IfxCcu6_initCc60InPinWithPadLevel(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1314  /** \brief Provides functionality for both setting of CC61 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1315   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1316   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1317   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1318   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1319   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1320  IFX_INLINE void IfxCcu6_initCc61InPinWithPadLevel(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1322  /** \brief Provides functionality for both setting of CC62 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1323   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1324   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1325   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1326   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1327   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_initCc62InPinWithPadLevel(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1329  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1330  /** \brief Provides functionality for both setting of CCPOS0 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1331   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1332   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1333   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1334   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1335   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1336  IFX_INLINE void IfxCcu6_initCcpos0PinWithPadLevel(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1338  /** \brief Provides functionality for both setting of CCPOS1 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1339   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1340   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1341   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1342   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1343   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1344  IFX_INLINE void IfxCcu6_initCcpos1PinWithPadLevel(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1345  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1346  /** \brief Provides functionality for both setting of CCPOS2 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1347   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1348   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1349   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1350   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1352  IFX_INLINE void IfxCcu6_initCcpos2PinWithPadLevel(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1354  /** \brief Provides functionality for both setting of CTRAP pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1355   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1356   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1357   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1358   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1360  IFX_INLINE void IfxCcu6_initCtrapPinWithPadLevel(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1361  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1362  /** \brief Provides functionality for both setting of T12HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1363   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1364   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1365   * \param padDriver Pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1366   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1367   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1368  IFX_INLINE void IfxCcu6_initT12hrPinWithPadLevel(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1369  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1370  /** \brief Provides functionality for both setting of T13HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1371   * \param t13hrIn Timer 13 HR input T13HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1372   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1373   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1374   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1375   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1376  IFX_INLINE void IfxCcu6_initT13hrPinWithPadLevel(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1377  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1378  /** \brief Sets the sensitivity of the module to sleep signal
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1379   * \param ccu6 pointer to CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1380   * \param mode mode selection (enable/disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1381   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1382   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1383  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1384  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1385  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1386  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1387  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1388  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1389  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1390   * \param ccu6 pointer to ccu6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1391   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1392   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1393  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1394  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1395  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1396  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1397  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1398  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1399  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1400  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1401      ccu6->ISR.U = 0xFFFF;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1402  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1403  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1405  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1406  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1407      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1408      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1409      tctr4.B.T12RES = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1410      tctr4.B.T13RES = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1411      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1412  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1414  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1415  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1416  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1417      ccu6->TCTR4.B.DTRES = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1418  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1421  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1422  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1423      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1424      ccu6->ISR.U = mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1425  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1426  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1427  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1428  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1429  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1430      ccu6->ISR.B.RT12OM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1431  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1434  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1435  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1436      ccu6->ISR.B.RT12PM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1437  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1439  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1440  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1441  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1442      ccu6->ISR.B.RT13CM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1443  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1445  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1446  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1447  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1448      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1449      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1450      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1451  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1452  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1453  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1454  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1455  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1456      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1457      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1458      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1459  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1461  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1462  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1463  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1464      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1465  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1466  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1467  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1468  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1469  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1470      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1471      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1472  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1473  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1475  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1476  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1477      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1478  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1479  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1481  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1482  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1483      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1484      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1485      tctr4.B.T12STD = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1486      tctr4.B.T13STD = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1490  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1493      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1494      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1495  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1496  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1497  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1498  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1499  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1500      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1501  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1503  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1504  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1505  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1506      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1507      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1508  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1510  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1511  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1512  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1513      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1514      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1515      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1516  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1518  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1519  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1520  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1521      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1522  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1523  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1525  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1526  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1527      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1528      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1529      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1530  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1531  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1533  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1534  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1535      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1536      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1537      tctr4.B.T12CNT = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1538      tctr4.B.T13CNT = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1539      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1540  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1541  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1542  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1543  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1544  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1545      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1546      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1547      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1548  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1550  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1551  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1552  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1553      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1554  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1555  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1556  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1557  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1558  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1559      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1560  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1562  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1563  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1564  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1565      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1566      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1567  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1568  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1570  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1571  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1572      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1573  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1574  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1575  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1576  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1577  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1578      ccu6->MCFG.B.MCM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1579  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1580  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1581  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1582  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1583  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1584      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1587  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1590      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1591  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1592  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1594  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1595  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1596      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1597  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1599  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1600  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1601  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1602      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1603  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1604  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1605  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1606  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1607  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1608      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1609      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1610      tctr4.B.T12STR = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1611      tctr4.B.T13STR = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1612      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1615  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1618      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1619      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1622  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1625      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1626  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1627  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1629  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1630  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1631      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1632      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1633  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1634  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1636  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1637  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1638      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1639      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1640      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1643  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1646      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1647  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1648  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1649  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1650  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1651  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1652      uint32 shift = (12 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1653      uint32 mask  = 1 << shift;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1654      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1657  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1660      uint32 shift = (channel + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1661      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1662      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1663  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1664  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1665  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1666  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1667  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1668      uint32 shift = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1669      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1670  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1671  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1672  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1673  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1674  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1675      return ccu6->MCFG.B.MCM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1677  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1678  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1681      return ccu6->MCMOUT.B.R != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1682  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1683  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1684  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1685  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1686  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1687      uint32 shift = ((timer * 8) + 5);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1688      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1689      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1690  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1691  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1692  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1693  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1694  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1695      uint32 mask = (1U << channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1696      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1697  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1698  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1699  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1700  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1701  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1702      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1703  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1704  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1705  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1706  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1707  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1708      return (volatile uint32 *)&ccu6->T12PR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1709  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1710  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1711  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1712  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1713  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1714      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1715  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1716  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1717  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1718  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1719  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1720      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1721      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1722  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1723  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1724  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1725  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1726  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1727      uint32 shift = ((timer * 8) + 4);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1728      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1729      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1730  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1731  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1732  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1733  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1734  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1735      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1736      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1737  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1738  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1739  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1740  IFX_INLINE void IfxCcu6_initCc60InPinWithPadLevel(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1741  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1742      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1743      IfxPort_setPinPadDriver(cc60In->pin.port, cc60In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1744      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1745  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1746  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1747  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1748  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1749  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1750      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1751      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1752  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1754  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1755  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1756  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1757      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1758      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1759  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1760  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1761  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1762  IFX_INLINE void IfxCcu6_initCc61InPinWithPadLevel(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1763  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1764      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1765      IfxPort_setPinPadDriver(cc61In->pin.port, cc61In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1766      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1767  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1768  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1769  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1770  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1771  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1772      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1773      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1774  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1775  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1776  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1777  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1778  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1779      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1780      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1781  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1782  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1783  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1784  IFX_INLINE void IfxCcu6_initCc62InPinWithPadLevel(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1785  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1786      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1787      IfxPort_setPinPadDriver(cc62In->pin.port, cc62In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1788      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1789  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1790  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1791  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1792  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1793  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1794      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1795      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1796  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1797  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1798  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1799  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1800  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1801      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1802      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1803  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1804  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1805  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1806  IFX_INLINE void IfxCcu6_initCcpos0PinWithPadLevel(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1807  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1808      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1809      IfxPort_setPinPadDriver(ccpos0->pin.port, ccpos0->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1810      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1811  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1812  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1813  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1814  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1815  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1816      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1817      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1818  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1819  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1820  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1821  IFX_INLINE void IfxCcu6_initCcpos1PinWithPadLevel(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1822  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1823      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1824      IfxPort_setPinPadDriver(ccpos1->pin.port, ccpos1->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1825      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1826  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1827  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1828  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1829  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1830  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1831      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1832      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1833  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1834  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1835  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1836  IFX_INLINE void IfxCcu6_initCcpos2PinWithPadLevel(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1837  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1838      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1839      IfxPort_setPinPadDriver(ccpos2->pin.port, ccpos2->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1840      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1841  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1842  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1843  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1844  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1845  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1846      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1847      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1848  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1849  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1850  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1851  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1852  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1853      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1854      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1855  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1856  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1857  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1858  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1859  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1860      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1861      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1862  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1863  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1864  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1865  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1866  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1867      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1868      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1869  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1870  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1871  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1872  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1873  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1874      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1875      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1876  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1877  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1878  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1879  IFX_INLINE void IfxCcu6_initCtrapPinWithPadLevel(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1880  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1881      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1882      IfxPort_setPinPadDriver(ctrap->pin.port, ctrap->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1883      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1884  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1885  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1886  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1887  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1888  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1889      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1890      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1891  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1892  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1893  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1894  IFX_INLINE void IfxCcu6_initT12hrPinWithPadLevel(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1895  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1896      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1897      IfxPort_setPinPadDriver(t12hrIn->pin.port, t12hrIn->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1898      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1899  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1900  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1901  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1902  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1903  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1904      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1905      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1906  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1907  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1908  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1909  IFX_INLINE void IfxCcu6_initT13hrPinWithPadLevel(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1910  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1911      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1912      IfxPort_setPinPadDriver(t13hrIn->pin.port, t13hrIn->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1913      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1914  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1915  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1916  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1917  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1918  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1919      return ccu6->CLC.B.DISS == 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1920  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1922  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1923  IFX_INLINE boolean IfxCcu6_isModuleSuspended(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1924  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1925      Ifx_CCU6_OCS ocs;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1926  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1927      // read the status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1928      ocs.U = ccu6->OCS.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1929  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1930      // return the status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1931      return ocs.B.SUSSTA;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1932  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1933  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1935  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1936  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1937      return ccu6->IS.B.T12OM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1938  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1939  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1940  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1941  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1942  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1943      return ccu6->IS.B.T12PM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1944  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1945  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1946  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1947  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1948  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1949      return ccu6->IS.B.T13CM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1950  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1951  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1952  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1953  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1954  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1955      uint32 shift = (uint32)input;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1956      uint32 mask  = (0x3U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1957      ccu6->PISEL0.U = (ccu6->PISEL0.U & ~mask) | ((uint32)signal << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1958  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1959  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1960  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1961  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1962  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1963      uint32 shift = ((timer * 2) + 2);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1964      uint32 mask  = (0x3U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1965      ccu6->PISEL2.U = (ccu6->PISEL2.U & ~mask) | ((uint32)mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1966  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1967  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1968  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1969  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1970  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1971      ccu6->MCMOUTS.B.CURHS = pattern;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1972  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1973  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1974  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1975  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1976  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1977      ccu6->T12DTC.B.DTM = value;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1978  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1979  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1980  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1981  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1982  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1983      ccu6->MCMOUTS.B.EXPHS = pattern;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1984  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1985  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1986  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1987  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1988  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1989      uint32 shift = ((timer * 2) + 8);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1990      uint32 mask  = (0x3U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1991      ccu6->TCTR2.U = (ccu6->TCTR2.U & ~mask) | ((uint32)mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1992  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1993  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1994  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1995  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1996  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1997      uint32 shift = 12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1998      uint32 mask  = (0x7U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1999      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2000  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2001  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2002  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2003  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2004  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2005      uint32 shift = (timer * 8);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2006      uint32 mask  = (0x7U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2007      ccu6->TCTR0.U = (ccu6->TCTR0.U & ~mask) | ((uint32)frequency << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2008  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2010  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2011  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2012  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2013      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2014      ccu6->ISS.U = ccu6->ISS.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2015  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2017  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2018  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2019  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2020      ccu6->MCMOUTS.B.MCMPS = pattern;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2021  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2022  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2023  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2024  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2025  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2026      ccu6->MCMCTR.B.SWSEL = mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2027  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2028  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2029  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2030  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2031  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2032      ccu6->MCMCTR.B.SWSYN = sync;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2033  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2034  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2035  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2036  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2037  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2038      uint32 shift = (channelOut + 8); // offset at location CC60PS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2039      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2040      ccu6->CMPSTAT.U = (ccu6->CMPSTAT.U & ~mask) | ((uint32)state << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2041  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2042  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2043  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2044  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2045  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2046      Ifx_CCU6_TCTR2 tctr2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2047      tctr2.U        = ccu6->TCTR2.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2048      tctr2.B.T12SSC = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2049      tctr2.B.T13SSC = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2050      ccu6->TCTR2.U  = tctr2.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2051  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2052  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2053  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2054  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2055  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2056      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2057      IfxScuWdt_clearCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2058      ccu6->CLC.B.EDIS = mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2059      IfxScuWdt_setCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2060  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2061  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2062  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2063  IFX_INLINE void IfxCcu6_setSuspendMode(Ifx_CCU6 *ccu6, IfxCcu6_SuspendMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2064  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2065      Ifx_CCU6_OCS ocs;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2066  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2067      // remove protection and configure the suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2068      ocs.B.SUS_P = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2069      ocs.B.SUS   = mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2070      ccu6->OCS.U = ocs.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2071  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2072  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2073  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2074  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2075  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2076      uint32 shift = (4 * channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2077      uint32 mask  = (0xFU << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2078      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2079  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2080  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2081  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2082  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2083  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2084      ccu6->TCTR0.B.CTM = mode;
	ld.bu	d0,[a15]112
.L565:
	insert	d15,d0,d10,#7,#1
	st.b	[a15]112,d15
.L331:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   412  2, clockInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   414          additionalPrescaler = ((prescaler & 0x8U) != 0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   415  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   416          if (additionalPrescaler)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   417          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   418              IfxCcu6_enableAdditionalPrescaler(ccu6, IfxCcu6_TimerId_t12);
	mov	d15,#1
.L566:
	sh	d15,d15,d1
	utof	d15,d15
.L567:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   419          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   421          IfxCcu6_setT12CountMode(ccu6, countMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   422  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   423          frequency = freqCC6 / (0x1u << prescaler); // Frequency = FREQ_CCU6 / (2 ^ prescaler)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   424      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   425      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   426      {
	div.f	d2,d11,d15
	ret
.L73:
	mov	d2,#0
	ret
.L288:
	
__IfxCcu6_setT12Frequency_function_end:
	.size	IfxCcu6_setT12Frequency,__IfxCcu6_setT12Frequency_function_end-IfxCcu6_setT12Frequency
.L163:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT12InputSignal',code,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.text.IfxCcu6.IfxCcu6_setT12InputSignal'
	.align	2
	
	.global	IfxCcu6_setT12InputSignal

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   427          frequency = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   428      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   429  
; Function IfxCcu6_setT12InputSignal
.L123:
IfxCcu6_setT12InputSignal:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   430      return frequency;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   431  }
	ld.bu	d15,[a5]12
.L572:
	ld.bu	d0,[a4]20
.L573:
	ge.u	d15,d15,#4
.L574:
	insert	d15,d0,d15,#6,#1
	st.b	[a4]20,d15
.L575:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   432  
	ld.bu	d15,[a5]12
.L576:
	ld.bu	d0,[a4]17
.L577:
	insert	d15,d0,d15,#6,#2
	st.b	[a4]17,d15
.L578:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   434  void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   435  {
	ret
.L337:
	
__IfxCcu6_setT12InputSignal_function_end:
	.size	IfxCcu6_setT12InputSignal,__IfxCcu6_setT12InputSignal_function_end-IfxCcu6_setT12InputSignal
.L168:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT13CaptureCompareState',code,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.text.IfxCcu6.IfxCcu6_setT13CaptureCompareState'
	.align	2
	
	.global	IfxCcu6_setT13CaptureCompareState

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   436      ccu6->PISEL2.B.T12EXT  = extInput->select >= Ifx_RxSel_e;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   437      ccu6->PISEL0.B.IST12HR = extInput->select;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   438  
; Function IfxCcu6_setT13CaptureCompareState
.L125:
IfxCcu6_setT13CaptureCompareState:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   439      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, extInput->module == ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   440  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   441  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   442  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   443  void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   444  {
	jne	d4,#0,.L79
.L583:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   445      uint32 shift = 6;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   446      uint32 mask  = (0x0101U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   447      uint32 mode;
	ld.w	d15,[a4]100
.L584:
	mov	d0,#-16449
.L585:
	and	d15,d0
.L586:
	or	d15,#64
	st.w	[a4]100,d15
.L79:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   448  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   449      if (state == IfxCcu6_CaptureCompareState_set)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   450      {
	jne	d4,#1,.L80
.L587:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   451          mode             = 0x0001U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   452          ccu6->CMPMODIF.U = (ccu6->CMPMODIF.U & ~mask) | (mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   453      }
	ld.w	d15,[a4]100
.L588:
	mov	d0,#-16449
.L589:
	and	d15,d0
.L590:
	insert	d15,d15,#1,#14,#1
	st.w	[a4]100,d15
.L80:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   454  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   455      if (state == IfxCcu6_CaptureCompareState_clear)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   456      {
	jne	d4,#2,.L81
.L591:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   457          mode             = 0x0100U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   458          ccu6->CMPMODIF.U = (ccu6->CMPMODIF.U & ~mask) | (mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   459      }
	ld.w	d15,[a4]100
.L592:
	mov	d0,#16448
.L593:
	or	d15,d0
	st.w	[a4]100,d15
.L81:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   461      if (state == IfxCcu6_CaptureCompareState_toggle)
	ret
.L341:
	
__IfxCcu6_setT13CaptureCompareState_function_end:
	.size	IfxCcu6_setT13CaptureCompareState,__IfxCcu6_setT13CaptureCompareState_function_end-IfxCcu6_setT13CaptureCompareState
.L173:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT13Frequency',code,cluster('IfxCcu6_setT13Frequency')
	.sect	'.text.IfxCcu6.IfxCcu6_setT13Frequency'
	.align	2
	
	.global	IfxCcu6_setT13Frequency

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   462      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   463          mode             = 0x0101U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   464          ccu6->CMPMODIF.U = (ccu6->CMPMODIF.U & ~mask) | (mode << shift);
; Function IfxCcu6_setT13Frequency
.L127:
IfxCcu6_setT13Frequency:	.type	func
	mov	d15,d4
	mov.aa	a15,a4
.L470:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   465      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   466  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   467  
	mov	d8,d5
	call	IfxScuCcu_getSpbFrequency
.L469:
	mov	d9,d2
.L473:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   468  
	div.f	d4,d9,d15
	call	__f_ftous
.L472:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   469  float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   470  {
	mov	d0,#0
	mov.a	a2,#15
.L82:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   471      uint16  prescaler;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   472      float32 freqCC6   = IfxScuCcu_getSpbFrequency();
	sha	d2,#-1
.L598:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   473      uint16  divFactor = freqCC6 / frequency;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   474  
	jeq	d2,#0,.L83
.L599:
	add	d0,#1
	loop	a2,.L82

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   475      for (prescaler = 0; prescaler < 16; prescaler++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   476      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   477          divFactor = divFactor / 2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   478  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   479          if (divFactor == (uint8)0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   480          {
.L83:
	mov	d15,#16
.L471:
	jge.u	d0,d15,.L84
.L351:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    45   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    46   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    47   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    48   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    49   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    50   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    51   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    52   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    53   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    54   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    55   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    56  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    57  #ifndef IFXCCU6_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    58  #define IFXCCU6_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    59  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    60  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    61  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    62  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    63  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    64  #include "_Impl/IfxCcu6_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    65  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    66  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    67  #include "Scu/Std/IfxScuWdt.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    68  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    69  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    70  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    72  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    73  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    74  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    75  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    76  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    77   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    78  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    79   * Definition in Ifx_CCU.PISEL0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    80   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    81  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    82  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    83      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    84      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    85      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    89      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    90  } IfxCcu6_CaptureCompareInput;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    91  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    92  /** \brief Selection of actual input signal for the capture compare inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    93   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    94  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    95  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   100  } IfxCcu6_CaptureCompareInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   101  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   102  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   103   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   104  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   105  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   106      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   107      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   108      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   109  } IfxCcu6_CaptureCompareState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   110  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   111  /** \brief Capture compare output pins
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   112   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   113  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   114  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   116      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   117      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   118      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   119      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   120      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   121      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   122  } IfxCcu6_ChannelOut;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   123  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   124  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   125   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   126   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   127  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   128  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   129      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   130                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   131      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   132                                                      * event. The T1x prescaler is not taken into account */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   133      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   134                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   137  } IfxCcu6_CountingInputMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   138  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   139  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   140   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   141   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   142  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   143  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   144      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   145                                           * the source signal becomes active */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   146      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   147  } IfxCcu6_DelayBypass;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   148  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   149  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   150   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   151   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   152  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   153  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   156                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   157      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   158                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   159      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   160                                                     * detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   161  } IfxCcu6_ExternalTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   162  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   163  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   164   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   165   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   166  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   167  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                             * signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   171      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   173      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   175      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   177  } IfxCcu6_HallSensorTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   178  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   179  /** \brief Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   180   * Description in Ifx_CCU.IEN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   181   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   182  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   183  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   184      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   185                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   186      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   187                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   188      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   189                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   191                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   193                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   197      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   198      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   199      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   200      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   201      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   202      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   203  } IfxCcu6_InterruptSource;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   204  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   205  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   206   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   207   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   208  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   209  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   210      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   211      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   212      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   213      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   214      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   215                                                                         * delay function) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   217  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   218  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   219  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   220   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   221   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   222  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   223  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   224      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   225                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   228                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   229  } IfxCcu6_MultiChannelSwitchingSync;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   230  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   231  /** \brief Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   232   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   233  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   234  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   237      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   238      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   239  } IfxCcu6_ServiceRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   240  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   242   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   243   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   244  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   245  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   248  } IfxCcu6_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   249  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   251   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   252  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   253  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Capture compare channel of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   261  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   262  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   263      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   269   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   270  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   271  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   272      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   274      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   276      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   277      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   278      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   279                                                                          * programmed to Hall Sensor mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   280      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   281      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   282      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   283      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   286  } IfxCcu6_T12ChannelMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   287  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   288  /** \brief Counting direction of Timer12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   289   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   291  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   292  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   293      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   294      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   295  } IfxCcu6_T12CountDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   296  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   297  /** \brief Operating mode of Timer 12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   298   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   299   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   300  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   301  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   302      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   303                                               * from zero after reaching the period value. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   304      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   305                                               * and counts up after detecting a one-match. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   306  } IfxCcu6_T12CountMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   307  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   308  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   309   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   310   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   311  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   312  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   313      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   314      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   315      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   316      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   317  } IfxCcu6_T13TriggerDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   318  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   319  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   320   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   321   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   322  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   323  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   327      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   328      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   329      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   330      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   331                                                     * counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   332      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   333  } IfxCcu6_T13TriggerEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   334  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   335  /** \brief Timer number ( T12 / T13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   336   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   337  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   338  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   350      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   351      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   352      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   353      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   354      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   355      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   356  } IfxCcu6_TimerInputClock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   358  /** \brief Selection of actual input signal for the timer inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   360  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   361  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   362      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   363      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   364      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   365      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   366      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   368      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   370  } IfxCcu6_TimerInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   371  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   372  /** \brief Timer (T12 / T13) run status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   373   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   374   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   375  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   376  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   377      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   378      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   379  } IfxCcu6_TimerRunStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   380  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   381  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   382   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   383   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   384  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   385  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   386      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   387      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   388                                        * ISR.RTRPF = 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   389  } IfxCcu6_TrapMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   392   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   394  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   395  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   396      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   397                                        * of T12 (while counting up) is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   398      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   399                                        * of T13 is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   400      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   401  } IfxCcu6_TrapState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   402  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   403  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   405  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   407  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   408  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   409  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   410  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   411  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   412  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   413   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   414   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   415   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   416   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   417   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   418  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   420  /** \brief Clears all the three dead-time counter channels to zero.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   421   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   422   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   423   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   424  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   425  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   426  /** \brief Clears the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   427   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   428   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   430   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   431  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   433  /** \brief Clears the T12  One notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   434   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   436   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   437  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   439  /** \brief Clears the T12  period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   440   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   442   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   443  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   445  /** \brief Clears the T13  compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   446   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   448   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   449  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   450  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   451  /** \brief Returns the Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   452   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \return Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   454   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   455  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   456  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   457  /** \brief Returns the status of module enabled or disabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   458   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   459   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   460   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   461  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   462  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   463  /** \brief Returns the status of T12 one notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   464   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   465   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   466   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   467  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   468  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   469  /** \brief Returns the status of T12 period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   471   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   472   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   473  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   475  /** \brief Returns the status of T13 compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param pattern Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param value Value of the dead time to be induced
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   500   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   501  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   503  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   504   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param pattern Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   507   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   508  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   510  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   511   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param mode External trigger mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Hall sensor input trigger event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   526   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param frequency Input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   537   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   538  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   539  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   540  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   541   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   542   * \param pattern Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   544   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   545  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   546  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   547  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   548   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   549   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   550   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   551   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   552  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   553  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   554  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   555   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   556   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   557   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   558   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   559   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   560  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   562  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   563   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   564   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   565   * \param state FALSE: passive state when CC6xST == 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   566   * TRUE : passive state when CC6xST == 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   568   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   569  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   570  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   571  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   572   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \param mode The operating mode for the T12 channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   583   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   584   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   585  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   587  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \param mode Operating mode of Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   590   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   591   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   592  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   594  /** \brief Sets the 16-bit counter value of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \param value Counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   597   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   598   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   599  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   600  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   601  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \param value Period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   604   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   605   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   606  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   607  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   608  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   611   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   612   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   613  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   615  /** \brief Sets the 16-bit counter value of Timer13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \param value counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   618   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   619   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   620  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   622  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \param value period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   625   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   627  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   629  /** \brief Sets the Timer13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param direction T13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param mode The trigger event to start T13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   640   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   641  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   643  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   644   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param mode Trap mode selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   647   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   648  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   649  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   650  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   651   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   652   * \param state Trap state selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   653   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   654   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   655  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   657  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param t12 Timer12 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param t13 Timer13 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param t12 Timer12 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param t13 Timer13 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param currentHall Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param expectedHall Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   677   * \param output Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   682  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   683  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   684  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   686  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   687   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   688   * \param outputLine Output Line
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   689   * \param selectedTrigger Trigger selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   690   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   691   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   692  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   693  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   694  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   695   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   696   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   697   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   698   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   699   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   700  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   701  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   702  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   704   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   705   * \param state FALSE: The passive level is 0.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   706   * TRUE : The passive level is 1.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   707   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   708   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   709  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   710  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   711  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   712   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   713   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   714   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   715   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   716   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   717  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   718  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   719  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   720   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   721   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   722   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   724   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   725  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   726  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   727  /** \brief Sets the frequency and clock input of the Timer 12.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   728   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   729   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   730   * The resulting frequency is captured in the handler element : CaptureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   731   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \param countMode Counting mode of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   735   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   736   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   737   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   738  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period, IfxCcu6_T12CountMode countMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   742   * \param extInput External input signal for the Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   743   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   744   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   745  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Sets the frequency and clock input of the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   755   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   756   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   757   * The resulting frequency is captured in the handler element : captureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   759   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   760   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   761   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   762   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   763   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   764  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   766  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   768   * \param extInput External input signal for the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   769   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   770   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   771  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   773  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   774  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   775  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   776   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   777  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   778  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   779  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   780  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   781  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   782  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   783   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   784   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   785   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   786   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   787  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   788  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   789  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   790   * that has been compared to the current and expected value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   791   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   792   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   794   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   795   * FALSE : The input CCPOSx has been sampled as 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Gets the status of the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   802   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   803   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   804  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   805  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   806  /** \brief indicates if the multi-channel mode functionality is available
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   808   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   809   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   810  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   811  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   812  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   815   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   816   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   817   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   818  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   819  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   820  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   822   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   823   * \return Status (TRUE: enable / FALSE: disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   824   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   825  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   826  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   827  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   828   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   829   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   831   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   832  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   833  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   834  /** \brief Returns the current counting direction of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   835   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   836   * \return direction (up / down)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   837   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   838  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   839  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   840  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   841   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   842   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   843   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   844  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   845  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   846  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   847   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   848   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   849   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   850   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   851  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   852  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   853  /** \brief Returns the Timer (T12 / T13) run status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   854   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   855   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   856   * \return Status (stopped / running)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   857   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   858  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   859  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   860  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   861   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   862   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   863   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   864   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   865   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   866  IFX_INLINE boolean IfxCcu6_isModuleSuspended(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   868  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   869   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   870   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   871   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   872   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   873   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   874  IFX_INLINE void IfxCcu6_setSuspendMode(Ifx_CCU6 *ccu6, IfxCcu6_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   875  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   876  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   877  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   878  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   879  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   880  /** \brief Returns the module index of the selected CCU6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return CCU6 module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_EXTERN Ifx_CCU6 *IfxCcu6_getAddress(IfxCcu6_Index ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Returns the capture register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   889   * \return current value of the capture register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   890   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   891  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   892  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   893  /** \brief Returns the capture shadow register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   896   * \return current value of the capture shadow register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   897   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   898  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   899  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   900  /** \brief Returns CCU6 index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \param ccu6 Specifies the pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   902   * \return Returns index. returns -1 in case of unknown index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   903   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   904  IFX_EXTERN IfxCcu6_Index IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   905  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   906  /** \brief Returns the service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return The service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Returns the current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   922  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   924  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   925  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   926  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   927  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   928  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   929  /** \brief Clears all Interrupt flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   931   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   932   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   933  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   935  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   938   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   939   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   940  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   941  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   942  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   944   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   945   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   946   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   947  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   948  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   949  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   951   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   952   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   953  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   954  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   955  /** \brief Disables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   965   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   966  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   967  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   968  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   969   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   972   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   973   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   974  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   975  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   976  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   978   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   979   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   980   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   981  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   982  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   983  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   984   * T13 output CC63_O is equal to CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   985   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   986   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   987   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   988  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   989  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   990  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   991   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   992   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   993   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   994   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   995  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   996  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   997  /** \brief Disables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   998   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   999   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1000   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1001   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1002  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1003  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1004  /** \brief Disables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1005   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1006   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1007   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1008  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1010  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1011   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1012   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1013   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1014   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1015  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1017  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1018   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1019   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1020   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1021   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1022   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1023  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1024  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1025  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1026   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1027   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1028   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1029   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1030  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1031  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1032  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1033   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1034   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1035   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1036  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1037  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1038  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1040   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1041   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1042  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1043  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1044  /** \brief Enables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1047   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1048   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1049  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1050  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1051  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the Multi Channel Mode Availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1066   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1067  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1068  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1069  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1070   * becomes set while a T12 one match is detected while counting down
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1071   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1072   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1073   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1074  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1075  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1076  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * becomes set while a T12 period match is detected while counting up
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * becomes set while a T13 period match is detected
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1087   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1088  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1089  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1090  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1091   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1094   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1095   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1096  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1097  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1098  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1099   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1101   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1102   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1103  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1104  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1105  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1106   * T13 output CC63_O is equal to CC63ST.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1109   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1110  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1112  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1113   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1116   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1117  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1118  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1119  /** \brief Enables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1120   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1121   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1123   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1124  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1125  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1126  /** \brief Enables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1127   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1128   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1129   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1130  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1131  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1132  /** \brief selects the actual input signal for the capture compare inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1133   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1134   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1135   * \param signal selection of actual input signal for the module inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1136   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1137   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1138  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1139  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1140  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1141  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1142  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1143  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1144  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1148   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1149   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1150  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1151  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1152  /** \brief Disables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_EXTERN void IfxCcu6_disableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1162   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1163   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1164  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1165  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1166  /** \brief Enables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1173  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1174  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1177  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1178  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1179  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1180  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1181  /** \brief Initialises a CC60 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a CC60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cc60Out CC60 compare output CC0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a CC61 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1200   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1201  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1203  /** \brief Initialises a CC61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1204   * \param cc61Out CC61 compare output CC1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a CC62 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a CC62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param cc62Out CC62 compare output CC2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1222   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1223   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1224  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1225  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1226  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1227   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1228   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1229   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1230   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1231  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1232  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1233  /** \brief Initialises a CCPOS1 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1235   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1236   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1237   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1238  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1239  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1241   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1242   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1244   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1245  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1246  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1247  /** \brief Initialises a COUT60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1248   * \param cout60 CC60 compare output COUT0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1249   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1250   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1251   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1252   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1253  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1254  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1255  /** \brief Initialises a COUT61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1256   * \param cout61 CC61 compare output COUT1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1257   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1258   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1259   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1261  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1262  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1263  /** \brief Initialises a COUT62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1264   * \param cout62 CC62 compare output COUT2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1265   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1266   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1267   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1268   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1269  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1270  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1271  /** \brief Initialises a COUT63 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1272   * \param cout63 CC63 compare output COUT3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1273   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1274   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1275   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1276   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1277  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1278  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1279  /** \brief Initialises a CTRAP input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1280   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1281   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1282   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1283   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1284  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1286  /** \brief Initialises a T12HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1287   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1288   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1289   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1291  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1293  /** \brief Initialises a T13HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1294   * \param t13hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1295   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1296   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1297   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1298  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1300  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1301  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1302  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1303  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1304  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1305  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1306  /** \brief Provides functionality for both setting of CC60 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1307   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1308   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1309   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1310   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1311   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1312  IFX_INLINE void IfxCcu6_initCc60InPinWithPadLevel(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1314  /** \brief Provides functionality for both setting of CC61 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1315   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1316   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1317   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1318   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1319   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1320  IFX_INLINE void IfxCcu6_initCc61InPinWithPadLevel(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1322  /** \brief Provides functionality for both setting of CC62 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1323   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1324   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1325   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1326   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1327   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_initCc62InPinWithPadLevel(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1329  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1330  /** \brief Provides functionality for both setting of CCPOS0 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1331   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1332   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1333   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1334   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1335   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1336  IFX_INLINE void IfxCcu6_initCcpos0PinWithPadLevel(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1338  /** \brief Provides functionality for both setting of CCPOS1 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1339   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1340   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1341   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1342   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1343   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1344  IFX_INLINE void IfxCcu6_initCcpos1PinWithPadLevel(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1345  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1346  /** \brief Provides functionality for both setting of CCPOS2 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1347   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1348   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1349   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1350   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1352  IFX_INLINE void IfxCcu6_initCcpos2PinWithPadLevel(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1354  /** \brief Provides functionality for both setting of CTRAP pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1355   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1356   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1357   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1358   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1360  IFX_INLINE void IfxCcu6_initCtrapPinWithPadLevel(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1361  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1362  /** \brief Provides functionality for both setting of T12HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1363   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1364   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1365   * \param padDriver Pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1366   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1367   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1368  IFX_INLINE void IfxCcu6_initT12hrPinWithPadLevel(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1369  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1370  /** \brief Provides functionality for both setting of T13HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1371   * \param t13hrIn Timer 13 HR input T13HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1372   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1373   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1374   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1375   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1376  IFX_INLINE void IfxCcu6_initT13hrPinWithPadLevel(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1377  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1378  /** \brief Sets the sensitivity of the module to sleep signal
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1379   * \param ccu6 pointer to CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1380   * \param mode mode selection (enable/disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1381   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1382   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1383  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1384  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1385  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1386  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1387  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1388  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1389  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1390   * \param ccu6 pointer to ccu6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1391   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1392   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1393  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1394  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1395  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1396  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1397  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1398  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1399  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1400  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1401      ccu6->ISR.U = 0xFFFF;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1402  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1403  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1405  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1406  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1407      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1408      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1409      tctr4.B.T12RES = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1410      tctr4.B.T13RES = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1411      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1412  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1414  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1415  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1416  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1417      ccu6->TCTR4.B.DTRES = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1418  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1421  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1422  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1423      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1424      ccu6->ISR.U = mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1425  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1426  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1427  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1428  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1429  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1430      ccu6->ISR.B.RT12OM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1431  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1434  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1435  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1436      ccu6->ISR.B.RT12PM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1437  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1439  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1440  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1441  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1442      ccu6->ISR.B.RT13CM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1443  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1445  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1446  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1447  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1448      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1449      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1450      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1451  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1452  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1453  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1454  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1455  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1456      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1457      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1458      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1459  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1461  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1462  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1463  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1464      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1465  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1466  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1467  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1468  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1469  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1470      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1471      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1472  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1473  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1475  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1476  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1477      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1478  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1479  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1481  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1482  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1483      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1484      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1485      tctr4.B.T12STD = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1486      tctr4.B.T13STD = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1490  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1493      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1494      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1495  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1496  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1497  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1498  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1499  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1500      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1501  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1503  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1504  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1505  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1506      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1507      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1508  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1510  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1511  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1512  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1513      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1514      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1515      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1516  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1518  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1519  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1520  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1521      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1522  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1523  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1525  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1526  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1527      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1528      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1529      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1530  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1531  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1533  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1534  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1535      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1536      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1537      tctr4.B.T12CNT = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1538      tctr4.B.T13CNT = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1539      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1540  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1541  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1542  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1543  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1544  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1545      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1546      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1547      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1548  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1550  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1551  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1552  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1553      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1554  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1555  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1556  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1557  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1558  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1559      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1560  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1562  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1563  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1564  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1565      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1566      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1567  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1568  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1570  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1571  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1572      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1573  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1574  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1575  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1576  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1577  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1578      ccu6->MCFG.B.MCM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1579  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1580  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1581  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1582  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1583  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1584      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1587  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1590      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1591  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1592  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1594  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1595  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1596      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1597  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1599  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1600  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1601  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1602      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1603  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1604  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1605  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1606  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1607  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1608      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1609      tctr4.U        = 0;
	mov	d15,#0
.L474:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1610      tctr4.B.T12STR = t12;
	insert	d15,d15,#0,#6,#1
.L352:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   481         if (divFactor == (uint8)0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   482          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   483              break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   484          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   485      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   486  
	add	d8,#-1

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    45   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    46   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    47   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    48   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    49   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    50   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    51   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    52   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    53   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    54   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    55   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    56  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    57  #ifndef IFXCCU6_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    58  #define IFXCCU6_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    59  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    60  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    61  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    62  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    63  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    64  #include "_Impl/IfxCcu6_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    65  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    66  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    67  #include "Scu/Std/IfxScuWdt.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    68  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    69  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    70  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    72  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    73  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    74  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    75  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    76  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    77   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    78  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    79   * Definition in Ifx_CCU.PISEL0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    80   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    81  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    82  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    83      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    84      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    85      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    89      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    90  } IfxCcu6_CaptureCompareInput;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    91  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    92  /** \brief Selection of actual input signal for the capture compare inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    93   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    94  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    95  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   100  } IfxCcu6_CaptureCompareInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   101  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   102  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   103   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   104  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   105  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   106      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   107      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   108      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   109  } IfxCcu6_CaptureCompareState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   110  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   111  /** \brief Capture compare output pins
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   112   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   113  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   114  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   116      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   117      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   118      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   119      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   120      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   121      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   122  } IfxCcu6_ChannelOut;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   123  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   124  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   125   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   126   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   127  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   128  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   129      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   130                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   131      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   132                                                      * event. The T1x prescaler is not taken into account */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   133      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   134                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   137  } IfxCcu6_CountingInputMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   138  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   139  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   140   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   141   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   142  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   143  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   144      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   145                                           * the source signal becomes active */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   146      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   147  } IfxCcu6_DelayBypass;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   148  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   149  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   150   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   151   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   152  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   153  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   156                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   157      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   158                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   159      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   160                                                     * detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   161  } IfxCcu6_ExternalTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   162  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   163  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   164   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   165   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   166  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   167  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                             * signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   171      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   173      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   175      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   177  } IfxCcu6_HallSensorTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   178  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   179  /** \brief Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   180   * Description in Ifx_CCU.IEN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   181   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   182  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   183  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   184      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   185                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   186      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   187                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   188      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   189                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   191                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   193                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   197      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   198      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   199      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   200      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   201      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   202      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   203  } IfxCcu6_InterruptSource;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   204  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   205  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   206   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   207   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   208  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   209  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   210      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   211      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   212      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   213      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   214      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   215                                                                         * delay function) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   217  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   218  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   219  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   220   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   221   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   222  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   223  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   224      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   225                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   228                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   229  } IfxCcu6_MultiChannelSwitchingSync;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   230  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   231  /** \brief Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   232   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   233  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   234  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   237      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   238      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   239  } IfxCcu6_ServiceRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   240  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   242   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   243   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   244  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   245  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   248  } IfxCcu6_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   249  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   251   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   252  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   253  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Capture compare channel of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   261  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   262  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   263      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   269   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   270  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   271  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   272      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   274      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   276      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   277      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   278      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   279                                                                          * programmed to Hall Sensor mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   280      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   281      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   282      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   283      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   286  } IfxCcu6_T12ChannelMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   287  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   288  /** \brief Counting direction of Timer12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   289   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   291  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   292  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   293      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   294      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   295  } IfxCcu6_T12CountDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   296  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   297  /** \brief Operating mode of Timer 12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   298   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   299   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   300  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   301  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   302      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   303                                               * from zero after reaching the period value. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   304      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   305                                               * and counts up after detecting a one-match. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   306  } IfxCcu6_T12CountMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   307  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   308  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   309   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   310   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   311  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   312  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   313      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   314      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   315      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   316      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   317  } IfxCcu6_T13TriggerDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   318  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   319  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   320   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   321   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   322  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   323  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   327      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   328      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   329      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   330      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   331                                                     * counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   332      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   333  } IfxCcu6_T13TriggerEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   334  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   335  /** \brief Timer number ( T12 / T13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   336   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   337  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   338  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   350      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   351      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   352      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   353      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   354      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   355      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   356  } IfxCcu6_TimerInputClock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   358  /** \brief Selection of actual input signal for the timer inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   360  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   361  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   362      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   363      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   364      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   365      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   366      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   368      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   370  } IfxCcu6_TimerInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   371  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   372  /** \brief Timer (T12 / T13) run status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   373   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   374   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   375  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   376  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   377      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   378      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   379  } IfxCcu6_TimerRunStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   380  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   381  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   382   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   383   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   384  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   385  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   386      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   387      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   388                                        * ISR.RTRPF = 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   389  } IfxCcu6_TrapMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   392   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   394  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   395  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   396      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   397                                        * of T12 (while counting up) is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   398      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   399                                        * of T13 is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   400      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   401  } IfxCcu6_TrapState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   402  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   403  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   405  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   407  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   408  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   409  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   410  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   411  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   412  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   413   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   414   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   415   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   416   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   417   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   418  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   420  /** \brief Clears all the three dead-time counter channels to zero.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   421   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   422   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   423   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   424  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   425  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   426  /** \brief Clears the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   427   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   428   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   430   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   431  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   433  /** \brief Clears the T12  One notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   434   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   436   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   437  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   439  /** \brief Clears the T12  period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   440   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   442   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   443  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   445  /** \brief Clears the T13  compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   446   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   448   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   449  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   450  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   451  /** \brief Returns the Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   452   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \return Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   454   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   455  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   456  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   457  /** \brief Returns the status of module enabled or disabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   458   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   459   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   460   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   461  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   462  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   463  /** \brief Returns the status of T12 one notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   464   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   465   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   466   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   467  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   468  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   469  /** \brief Returns the status of T12 period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   471   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   472   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   473  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   475  /** \brief Returns the status of T13 compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param pattern Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param value Value of the dead time to be induced
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   500   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   501  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   503  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   504   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param pattern Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   507   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   508  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   510  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   511   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param mode External trigger mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Hall sensor input trigger event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   526   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param frequency Input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   537   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   538  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   539  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   540  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   541   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   542   * \param pattern Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   544   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   545  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   546  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   547  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   548   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   549   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   550   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   551   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   552  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   553  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   554  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   555   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   556   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   557   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   558   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   559   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   560  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   562  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   563   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   564   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   565   * \param state FALSE: passive state when CC6xST == 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   566   * TRUE : passive state when CC6xST == 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   568   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   569  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   570  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   571  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   572   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \param mode The operating mode for the T12 channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   583   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   584   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   585  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   587  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \param mode Operating mode of Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   590   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   591   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   592  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   594  /** \brief Sets the 16-bit counter value of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \param value Counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   597   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   598   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   599  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   600  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   601  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \param value Period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   604   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   605   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   606  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   607  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   608  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   611   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   612   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   613  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   615  /** \brief Sets the 16-bit counter value of Timer13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \param value counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   618   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   619   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   620  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   622  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \param value period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   625   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   627  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   629  /** \brief Sets the Timer13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param direction T13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param mode The trigger event to start T13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   640   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   641  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   643  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   644   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param mode Trap mode selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   647   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   648  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   649  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   650  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   651   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   652   * \param state Trap state selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   653   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   654   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   655  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   657  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param t12 Timer12 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param t13 Timer13 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param t12 Timer12 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param t13 Timer13 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param currentHall Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param expectedHall Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   677   * \param output Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   682  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   683  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   684  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   686  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   687   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   688   * \param outputLine Output Line
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   689   * \param selectedTrigger Trigger selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   690   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   691   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   692  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   693  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   694  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   695   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   696   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   697   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   698   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   699   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   700  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   701  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   702  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   704   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   705   * \param state FALSE: The passive level is 0.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   706   * TRUE : The passive level is 1.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   707   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   708   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   709  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   710  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   711  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   712   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   713   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   714   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   715   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   716   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   717  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   718  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   719  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   720   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   721   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   722   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   724   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   725  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   726  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   727  /** \brief Sets the frequency and clock input of the Timer 12.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   728   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   729   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   730   * The resulting frequency is captured in the handler element : CaptureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   731   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \param countMode Counting mode of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   735   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   736   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   737   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   738  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period, IfxCcu6_T12CountMode countMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   742   * \param extInput External input signal for the Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   743   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   744   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   745  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Sets the frequency and clock input of the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   755   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   756   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   757   * The resulting frequency is captured in the handler element : captureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   759   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   760   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   761   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   762   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   763   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   764  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   766  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   768   * \param extInput External input signal for the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   769   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   770   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   771  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   773  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   774  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   775  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   776   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   777  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   778  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   779  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   780  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   781  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   782  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   783   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   784   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   785   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   786   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   787  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   788  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   789  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   790   * that has been compared to the current and expected value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   791   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   792   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   794   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   795   * FALSE : The input CCPOSx has been sampled as 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Gets the status of the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   802   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   803   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   804  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   805  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   806  /** \brief indicates if the multi-channel mode functionality is available
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   808   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   809   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   810  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   811  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   812  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   815   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   816   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   817   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   818  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   819  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   820  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   822   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   823   * \return Status (TRUE: enable / FALSE: disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   824   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   825  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   826  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   827  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   828   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   829   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   831   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   832  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   833  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   834  /** \brief Returns the current counting direction of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   835   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   836   * \return direction (up / down)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   837   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   838  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   839  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   840  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   841   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   842   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   843   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   844  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   845  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   846  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   847   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   848   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   849   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   850   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   851  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   852  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   853  /** \brief Returns the Timer (T12 / T13) run status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   854   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   855   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   856   * \return Status (stopped / running)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   857   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   858  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   859  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   860  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   861   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   862   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   863   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   864   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   865   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   866  IFX_INLINE boolean IfxCcu6_isModuleSuspended(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   868  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   869   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   870   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   871   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   872   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   873   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   874  IFX_INLINE void IfxCcu6_setSuspendMode(Ifx_CCU6 *ccu6, IfxCcu6_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   875  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   876  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   877  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   878  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   879  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   880  /** \brief Returns the module index of the selected CCU6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return CCU6 module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_EXTERN Ifx_CCU6 *IfxCcu6_getAddress(IfxCcu6_Index ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Returns the capture register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   889   * \return current value of the capture register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   890   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   891  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   892  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   893  /** \brief Returns the capture shadow register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   896   * \return current value of the capture shadow register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   897   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   898  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   899  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   900  /** \brief Returns CCU6 index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \param ccu6 Specifies the pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   902   * \return Returns index. returns -1 in case of unknown index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   903   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   904  IFX_EXTERN IfxCcu6_Index IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   905  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   906  /** \brief Returns the service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return The service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Returns the current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   922  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   924  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   925  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   926  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   927  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   928  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   929  /** \brief Clears all Interrupt flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   931   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   932   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   933  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   935  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   938   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   939   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   940  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   941  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   942  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   944   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   945   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   946   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   947  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   948  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   949  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   951   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   952   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   953  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   954  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   955  /** \brief Disables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   965   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   966  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   967  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   968  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   969   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   972   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   973   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   974  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   975  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   976  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   978   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   979   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   980   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   981  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   982  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   983  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   984   * T13 output CC63_O is equal to CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   985   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   986   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   987   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   988  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   989  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   990  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   991   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   992   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   993   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   994   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   995  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   996  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   997  /** \brief Disables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   998   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   999   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1000   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1001   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1002  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1003  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1004  /** \brief Disables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1005   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1006   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1007   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1008  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1010  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1011   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1012   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1013   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1014   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1015  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1017  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1018   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1019   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1020   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1021   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1022   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1023  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1024  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1025  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1026   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1027   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1028   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1029   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1030  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1031  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1032  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1033   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1034   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1035   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1036  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1037  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1038  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1040   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1041   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1042  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1043  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1044  /** \brief Enables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1047   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1048   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1049  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1050  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1051  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the Multi Channel Mode Availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1066   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1067  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1068  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1069  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1070   * becomes set while a T12 one match is detected while counting down
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1071   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1072   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1073   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1074  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1075  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1076  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * becomes set while a T12 period match is detected while counting up
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * becomes set while a T13 period match is detected
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1087   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1088  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1089  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1090  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1091   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1094   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1095   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1096  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1097  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1098  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1099   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1101   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1102   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1103  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1104  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1105  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1106   * T13 output CC63_O is equal to CC63ST.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1109   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1110  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1112  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1113   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1116   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1117  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1118  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1119  /** \brief Enables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1120   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1121   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1123   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1124  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1125  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1126  /** \brief Enables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1127   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1128   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1129   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1130  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1131  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1132  /** \brief selects the actual input signal for the capture compare inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1133   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1134   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1135   * \param signal selection of actual input signal for the module inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1136   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1137   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1138  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1139  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1140  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1141  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1142  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1143  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1144  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1148   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1149   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1150  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1151  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1152  /** \brief Disables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_EXTERN void IfxCcu6_disableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1162   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1163   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1164  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1165  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1166  /** \brief Enables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1173  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1174  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1177  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1178  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1179  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1180  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1181  /** \brief Initialises a CC60 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a CC60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cc60Out CC60 compare output CC0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a CC61 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1200   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1201  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1203  /** \brief Initialises a CC61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1204   * \param cc61Out CC61 compare output CC1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a CC62 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a CC62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param cc62Out CC62 compare output CC2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1222   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1223   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1224  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1225  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1226  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1227   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1228   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1229   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1230   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1231  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1232  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1233  /** \brief Initialises a CCPOS1 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1235   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1236   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1237   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1238  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1239  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1241   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1242   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1244   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1245  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1246  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1247  /** \brief Initialises a COUT60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1248   * \param cout60 CC60 compare output COUT0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1249   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1250   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1251   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1252   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1253  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1254  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1255  /** \brief Initialises a COUT61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1256   * \param cout61 CC61 compare output COUT1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1257   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1258   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1259   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1261  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1262  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1263  /** \brief Initialises a COUT62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1264   * \param cout62 CC62 compare output COUT2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1265   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1266   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1267   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1268   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1269  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1270  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1271  /** \brief Initialises a COUT63 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1272   * \param cout63 CC63 compare output COUT3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1273   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1274   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1275   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1276   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1277  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1278  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1279  /** \brief Initialises a CTRAP input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1280   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1281   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1282   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1283   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1284  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1286  /** \brief Initialises a T12HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1287   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1288   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1289   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1291  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1293  /** \brief Initialises a T13HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1294   * \param t13hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1295   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1296   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1297   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1298  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1300  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1301  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1302  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1303  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1304  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1305  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1306  /** \brief Provides functionality for both setting of CC60 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1307   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1308   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1309   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1310   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1311   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1312  IFX_INLINE void IfxCcu6_initCc60InPinWithPadLevel(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1314  /** \brief Provides functionality for both setting of CC61 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1315   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1316   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1317   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1318   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1319   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1320  IFX_INLINE void IfxCcu6_initCc61InPinWithPadLevel(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1322  /** \brief Provides functionality for both setting of CC62 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1323   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1324   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1325   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1326   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1327   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_initCc62InPinWithPadLevel(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1329  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1330  /** \brief Provides functionality for both setting of CCPOS0 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1331   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1332   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1333   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1334   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1335   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1336  IFX_INLINE void IfxCcu6_initCcpos0PinWithPadLevel(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1338  /** \brief Provides functionality for both setting of CCPOS1 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1339   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1340   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1341   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1342   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1343   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1344  IFX_INLINE void IfxCcu6_initCcpos1PinWithPadLevel(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1345  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1346  /** \brief Provides functionality for both setting of CCPOS2 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1347   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1348   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1349   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1350   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1352  IFX_INLINE void IfxCcu6_initCcpos2PinWithPadLevel(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1354  /** \brief Provides functionality for both setting of CTRAP pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1355   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1356   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1357   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1358   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1360  IFX_INLINE void IfxCcu6_initCtrapPinWithPadLevel(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1361  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1362  /** \brief Provides functionality for both setting of T12HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1363   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1364   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1365   * \param padDriver Pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1366   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1367   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1368  IFX_INLINE void IfxCcu6_initT12hrPinWithPadLevel(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1369  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1370  /** \brief Provides functionality for both setting of T13HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1371   * \param t13hrIn Timer 13 HR input T13HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1372   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1373   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1374   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1375   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1376  IFX_INLINE void IfxCcu6_initT13hrPinWithPadLevel(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1377  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1378  /** \brief Sets the sensitivity of the module to sleep signal
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1379   * \param ccu6 pointer to CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1380   * \param mode mode selection (enable/disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1381   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1382   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1383  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1384  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1385  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1386  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1387  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1388  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1389  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1390   * \param ccu6 pointer to ccu6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1391   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1392   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1393  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1394  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1395  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1396  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1397  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1398  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1399  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1400  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1401      ccu6->ISR.U = 0xFFFF;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1402  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1403  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1405  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1406  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1407      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1408      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1409      tctr4.B.T12RES = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1410      tctr4.B.T13RES = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1411      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1412  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1414  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1415  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1416  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1417      ccu6->TCTR4.B.DTRES = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1418  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1421  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1422  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1423      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1424      ccu6->ISR.U = mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1425  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1426  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1427  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1428  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1429  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1430      ccu6->ISR.B.RT12OM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1431  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1434  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1435  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1436      ccu6->ISR.B.RT12PM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1437  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1439  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1440  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1441  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1442      ccu6->ISR.B.RT13CM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1443  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1445  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1446  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1447  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1448      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1449      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1450      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1451  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1452  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1453  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1454  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1455  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1456      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1457      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1458      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1459  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1461  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1462  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1463  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1464      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1465  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1466  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1467  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1468  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1469  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1470      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1471      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1472  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1473  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1475  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1476  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1477      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1478  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1479  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1481  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1482  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1483      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1484      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1485      tctr4.B.T12STD = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1486      tctr4.B.T13STD = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1490  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1493      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1494      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1495  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1496  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1497  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1498  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1499  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1500      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1501  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1503  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1504  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1505  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1506      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1507      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1508  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1510  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1511  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1512  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1513      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1514      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1515      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1516  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1518  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1519  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1520  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1521      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1522  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1523  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1525  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1526  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1527      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1528      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1529      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1530  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1531  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1533  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1534  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1535      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1536      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1537      tctr4.B.T12CNT = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1538      tctr4.B.T13CNT = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1539      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1540  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1541  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1542  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1543  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1544  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1545      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1546      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1547      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1548  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1550  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1551  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1552  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1553      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1554  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1555  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1556  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1557  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1558  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1559      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1560  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1562  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1563  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1564  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1565      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1566      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1567  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1568  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1570  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1571  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1572      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1573  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1574  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1575  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1576  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1577  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1578      ccu6->MCFG.B.MCM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1579  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1580  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1581  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1582  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1583  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1584      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1587  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1590      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1591  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1592  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1594  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1595  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1596      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1597  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1599  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1600  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1601  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1602      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1603  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1604  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1605  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1606  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1607  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1608      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1609      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1610      tctr4.B.T12STR = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1611      tctr4.B.T13STR = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1612      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1615  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1618      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1619      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1622  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1625      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1626  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1627  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1629  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1630  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1631      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1632      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1633  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1634  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1636  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1637  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1638      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1639      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1640      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1643  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1646      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1647  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1648  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1649  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1650  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1651  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1652      uint32 shift = (12 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1653      uint32 mask  = 1 << shift;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1654      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1657  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1660      uint32 shift = (channel + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1661      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1662      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1663  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1664  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1665  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1666  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1667  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1668      uint32 shift = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1669      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1670  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1671  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1672  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1673  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1674  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1675      return ccu6->MCFG.B.MCM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1677  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1678  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1681      return ccu6->MCMOUT.B.R != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1682  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1683  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1684  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1685  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1686  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1687      uint32 shift = ((timer * 8) + 5);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1688      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1689      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1690  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1691  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1692  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1693  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1694  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1695      uint32 mask = (1U << channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1696      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1697  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1698  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1699  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1700  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1701  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1702      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1703  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1704  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1705  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1706  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1707  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1708      return (volatile uint32 *)&ccu6->T12PR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1709  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1710  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1711  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1712  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1713  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1714      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1715  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1716  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1717  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1718  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1719  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1720      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1721      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1722  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1723  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1724  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1725  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1726  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1727      uint32 shift = ((timer * 8) + 4);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1728      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1729      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1730  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1731  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1732  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1733  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1734  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1735      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1736      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1737  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1738  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1739  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1740  IFX_INLINE void IfxCcu6_initCc60InPinWithPadLevel(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1741  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1742      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1743      IfxPort_setPinPadDriver(cc60In->pin.port, cc60In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1744      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1745  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1746  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1747  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1748  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1749  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1750      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1751      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1752  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1754  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1755  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1756  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1757      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1758      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1759  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1760  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1761  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1762  IFX_INLINE void IfxCcu6_initCc61InPinWithPadLevel(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1763  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1764      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1765      IfxPort_setPinPadDriver(cc61In->pin.port, cc61In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1766      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1767  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1768  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1769  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1770  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1771  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1772      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1773      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1774  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1775  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1776  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1777  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1778  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1779      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1780      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1781  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1782  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1783  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1784  IFX_INLINE void IfxCcu6_initCc62InPinWithPadLevel(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1785  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1786      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1787      IfxPort_setPinPadDriver(cc62In->pin.port, cc62In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1788      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1789  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1790  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1791  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1792  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1793  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1794      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1795      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1796  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1797  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1798  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1799  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1800  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1801      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1802      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1803  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1804  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1805  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1806  IFX_INLINE void IfxCcu6_initCcpos0PinWithPadLevel(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1807  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1808      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1809      IfxPort_setPinPadDriver(ccpos0->pin.port, ccpos0->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1810      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1811  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1812  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1813  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1814  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1815  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1816      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1817      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1818  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1819  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1820  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1821  IFX_INLINE void IfxCcu6_initCcpos1PinWithPadLevel(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1822  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1823      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1824      IfxPort_setPinPadDriver(ccpos1->pin.port, ccpos1->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1825      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1826  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1827  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1828  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1829  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1830  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1831      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1832      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1833  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1834  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1835  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1836  IFX_INLINE void IfxCcu6_initCcpos2PinWithPadLevel(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1837  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1838      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1839      IfxPort_setPinPadDriver(ccpos2->pin.port, ccpos2->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1840      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1841  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1842  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1843  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1844  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1845  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1846      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1847      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1848  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1849  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1850  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1851  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1852  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1853      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1854      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1855  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1856  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1857  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1858  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1859  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1860      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1861      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1862  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1863  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1864  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1865  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1866  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1867      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1868      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1869  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1870  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1871  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1872  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1873  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1874      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1875      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1876  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1877  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1878  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1879  IFX_INLINE void IfxCcu6_initCtrapPinWithPadLevel(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1880  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1881      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1882      IfxPort_setPinPadDriver(ctrap->pin.port, ctrap->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1883      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1884  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1885  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1886  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1887  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1888  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1889      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1890      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1891  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1892  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1893  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1894  IFX_INLINE void IfxCcu6_initT12hrPinWithPadLevel(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1895  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1896      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1897      IfxPort_setPinPadDriver(t12hrIn->pin.port, t12hrIn->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1898      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1899  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1900  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1901  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1902  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1903  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1904      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1905      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1906  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1907  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1908  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1909  IFX_INLINE void IfxCcu6_initT13hrPinWithPadLevel(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1910  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1911      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1912      IfxPort_setPinPadDriver(t13hrIn->pin.port, t13hrIn->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1913      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1914  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1915  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1916  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1917  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1918  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1919      return ccu6->CLC.B.DISS == 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1920  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1922  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1923  IFX_INLINE boolean IfxCcu6_isModuleSuspended(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1924  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1925      Ifx_CCU6_OCS ocs;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1926  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1927      // read the status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1928      ocs.U = ccu6->OCS.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1929  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1930      // return the status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1931      return ocs.B.SUSSTA;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1932  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1933  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1935  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1936  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1937      return ccu6->IS.B.T12OM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1938  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1939  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1940  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1941  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1942  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1943      return ccu6->IS.B.T12PM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1944  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1945  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1946  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1947  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1948  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1949      return ccu6->IS.B.T13CM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1950  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1951  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1952  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1953  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1954  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1955      uint32 shift = (uint32)input;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1956      uint32 mask  = (0x3U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1957      ccu6->PISEL0.U = (ccu6->PISEL0.U & ~mask) | ((uint32)signal << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1958  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1959  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1960  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1961  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1962  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1963      uint32 shift = ((timer * 2) + 2);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1964      uint32 mask  = (0x3U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1965      ccu6->PISEL2.U = (ccu6->PISEL2.U & ~mask) | ((uint32)mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1966  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1967  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1968  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1969  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1970  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1971      ccu6->MCMOUTS.B.CURHS = pattern;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1972  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1973  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1974  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1975  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1976  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1977      ccu6->T12DTC.B.DTM = value;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1978  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1979  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1980  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1981  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1982  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1983      ccu6->MCMOUTS.B.EXPHS = pattern;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1984  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1985  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1986  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1987  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1988  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1989      uint32 shift = ((timer * 2) + 8);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1990      uint32 mask  = (0x3U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1991      ccu6->TCTR2.U = (ccu6->TCTR2.U & ~mask) | ((uint32)mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1992  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1993  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1994  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1995  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1996  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1997      uint32 shift = 12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1998      uint32 mask  = (0x7U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1999      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2000  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2001  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2002  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2003  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2004  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2005      uint32 shift = (timer * 8);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2006      uint32 mask  = (0x7U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2007      ccu6->TCTR0.U = (ccu6->TCTR0.U & ~mask) | ((uint32)frequency << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2008  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2010  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2011  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2012  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2013      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2014      ccu6->ISS.U = ccu6->ISS.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2015  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2017  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2018  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2019  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2020      ccu6->MCMOUTS.B.MCMPS = pattern;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2021  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2022  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2023  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2024  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2025  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2026      ccu6->MCMCTR.B.SWSEL = mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2027  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2028  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2029  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2030  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2031  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2032      ccu6->MCMCTR.B.SWSYN = sync;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2033  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2034  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2035  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2036  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2037  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2038      uint32 shift = (channelOut + 8); // offset at location CC60PS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2039      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2040      ccu6->CMPSTAT.U = (ccu6->CMPSTAT.U & ~mask) | ((uint32)state << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2041  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2042  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2043  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2044  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2045  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2046      Ifx_CCU6_TCTR2 tctr2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2047      tctr2.U        = ccu6->TCTR2.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2048      tctr2.B.T12SSC = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2049      tctr2.B.T13SSC = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2050      ccu6->TCTR2.U  = tctr2.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2051  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2052  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2053  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2054  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2055  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2056      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2057      IfxScuWdt_clearCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2058      ccu6->CLC.B.EDIS = mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2059      IfxScuWdt_setCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2060  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2061  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2062  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2063  IFX_INLINE void IfxCcu6_setSuspendMode(Ifx_CCU6 *ccu6, IfxCcu6_SuspendMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2064  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2065      Ifx_CCU6_OCS ocs;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2066  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2067      // remove protection and configure the suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2068      ocs.B.SUS_P = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2069      ocs.B.SUS   = mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2070      ccu6->OCS.U = ocs.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2071  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2072  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2073  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2074  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2075  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2076      uint32 shift = (4 * channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2077      uint32 mask  = (0xFU << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2078      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2079  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2080  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2081  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2082  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2083  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2084      ccu6->TCTR0.B.CTM = mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2085  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2086  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2087  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2088  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2089  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2090      ccu6->T12.B.T12CV = value;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2091  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2092  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2093  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2094  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2095  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2096      ccu6->T12PR.B.T12PV = value;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2097  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2098  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2099  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2100  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2101  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2102      ccu6->CC63SR.B.CCS = value;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2103  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2104  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2105  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2106  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2107  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2108      ccu6->T13.B.T13CV = value;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2109  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2110  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2112  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2113  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2114      ccu6->T13PR.B.T13PV = value;
	st.h	[a15]84,d8
.L357:
	insert	d15,d15,#1,#14,#1
	st.w	[a15]120,d15
.L358:
	ld.w	d15,[a15]112
.L475:
	insert	d1,d15,#0,#8,#3
.L600:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   487    {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   488              break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   489          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   490      }
	and	d15,d0,#7
.L601:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    45   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    46   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    47   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    48   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    49   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    50   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    51   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    52   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    53   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    54   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    55   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    56  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    57  #ifndef IFXCCU6_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    58  #define IFXCCU6_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    59  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    60  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    61  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    62  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    63  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    64  #include "_Impl/IfxCcu6_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    65  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    66  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    67  #include "Scu/Std/IfxScuWdt.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    68  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    69  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    70  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    72  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    73  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    74  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    75  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    76  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    77   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    78  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    79   * Definition in Ifx_CCU.PISEL0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    80   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    81  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    82  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    83      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    84      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    85      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    89      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    90  } IfxCcu6_CaptureCompareInput;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    91  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    92  /** \brief Selection of actual input signal for the capture compare inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    93   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    94  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    95  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   100  } IfxCcu6_CaptureCompareInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   101  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   102  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   103   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   104  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   105  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   106      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   107      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   108      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   109  } IfxCcu6_CaptureCompareState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   110  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   111  /** \brief Capture compare output pins
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   112   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   113  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   114  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   116      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   117      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   118      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   119      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   120      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   121      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   122  } IfxCcu6_ChannelOut;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   123  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   124  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   125   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   126   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   127  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   128  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   129      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   130                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   131      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   132                                                      * event. The T1x prescaler is not taken into account */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   133      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   134                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   137  } IfxCcu6_CountingInputMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   138  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   139  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   140   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   141   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   142  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   143  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   144      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   145                                           * the source signal becomes active */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   146      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   147  } IfxCcu6_DelayBypass;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   148  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   149  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   150   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   151   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   152  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   153  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   156                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   157      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   158                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   159      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   160                                                     * detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   161  } IfxCcu6_ExternalTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   162  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   163  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   164   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   165   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   166  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   167  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                             * signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   171      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   173      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   175      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   177  } IfxCcu6_HallSensorTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   178  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   179  /** \brief Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   180   * Description in Ifx_CCU.IEN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   181   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   182  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   183  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   184      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   185                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   186      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   187                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   188      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   189                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   191                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   193                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   197      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   198      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   199      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   200      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   201      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   202      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   203  } IfxCcu6_InterruptSource;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   204  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   205  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   206   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   207   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   208  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   209  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   210      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   211      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   212      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   213      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   214      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   215                                                                         * delay function) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   217  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   218  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   219  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   220   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   221   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   222  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   223  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   224      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   225                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   228                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   229  } IfxCcu6_MultiChannelSwitchingSync;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   230  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   231  /** \brief Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   232   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   233  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   234  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   237      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   238      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   239  } IfxCcu6_ServiceRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   240  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   242   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   243   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   244  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   245  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   248  } IfxCcu6_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   249  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   251   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   252  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   253  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Capture compare channel of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   261  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   262  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   263      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   269   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   270  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   271  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   272      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   274      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   276      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   277      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   278      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   279                                                                          * programmed to Hall Sensor mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   280      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   281      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   282      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   283      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   286  } IfxCcu6_T12ChannelMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   287  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   288  /** \brief Counting direction of Timer12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   289   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   291  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   292  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   293      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   294      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   295  } IfxCcu6_T12CountDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   296  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   297  /** \brief Operating mode of Timer 12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   298   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   299   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   300  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   301  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   302      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   303                                               * from zero after reaching the period value. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   304      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   305                                               * and counts up after detecting a one-match. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   306  } IfxCcu6_T12CountMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   307  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   308  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   309   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   310   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   311  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   312  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   313      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   314      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   315      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   316      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   317  } IfxCcu6_T13TriggerDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   318  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   319  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   320   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   321   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   322  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   323  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   327      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   328      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   329      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   330      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   331                                                     * counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   332      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   333  } IfxCcu6_T13TriggerEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   334  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   335  /** \brief Timer number ( T12 / T13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   336   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   337  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   338  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   350      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   351      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   352      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   353      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   354      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   355      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   356  } IfxCcu6_TimerInputClock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   358  /** \brief Selection of actual input signal for the timer inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   360  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   361  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   362      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   363      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   364      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   365      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   366      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   368      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   370  } IfxCcu6_TimerInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   371  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   372  /** \brief Timer (T12 / T13) run status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   373   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   374   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   375  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   376  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   377      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   378      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   379  } IfxCcu6_TimerRunStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   380  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   381  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   382   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   383   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   384  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   385  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   386      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   387      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   388                                        * ISR.RTRPF = 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   389  } IfxCcu6_TrapMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   392   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   394  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   395  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   396      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   397                                        * of T12 (while counting up) is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   398      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   399                                        * of T13 is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   400      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   401  } IfxCcu6_TrapState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   402  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   403  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   405  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   407  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   408  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   409  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   410  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   411  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   412  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   413   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   414   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   415   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   416   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   417   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   418  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   420  /** \brief Clears all the three dead-time counter channels to zero.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   421   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   422   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   423   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   424  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   425  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   426  /** \brief Clears the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   427   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   428   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   430   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   431  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   433  /** \brief Clears the T12  One notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   434   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   436   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   437  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   439  /** \brief Clears the T12  period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   440   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   442   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   443  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   445  /** \brief Clears the T13  compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   446   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   448   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   449  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   450  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   451  /** \brief Returns the Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   452   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \return Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   454   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   455  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   456  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   457  /** \brief Returns the status of module enabled or disabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   458   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   459   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   460   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   461  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   462  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   463  /** \brief Returns the status of T12 one notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   464   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   465   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   466   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   467  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   468  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   469  /** \brief Returns the status of T12 period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   471   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   472   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   473  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   475  /** \brief Returns the status of T13 compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param pattern Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param value Value of the dead time to be induced
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   500   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   501  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   503  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   504   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param pattern Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   507   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   508  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   510  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   511   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param mode External trigger mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Hall sensor input trigger event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   526   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param frequency Input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   537   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   538  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   539  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   540  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   541   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   542   * \param pattern Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   544   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   545  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   546  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   547  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   548   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   549   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   550   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   551   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   552  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   553  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   554  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   555   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   556   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   557   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   558   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   559   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   560  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   562  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   563   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   564   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   565   * \param state FALSE: passive state when CC6xST == 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   566   * TRUE : passive state when CC6xST == 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   568   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   569  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   570  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   571  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   572   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \param mode The operating mode for the T12 channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   583   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   584   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   585  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   587  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \param mode Operating mode of Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   590   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   591   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   592  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   594  /** \brief Sets the 16-bit counter value of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \param value Counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   597   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   598   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   599  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   600  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   601  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \param value Period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   604   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   605   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   606  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   607  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   608  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   611   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   612   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   613  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   615  /** \brief Sets the 16-bit counter value of Timer13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \param value counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   618   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   619   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   620  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   622  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \param value period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   625   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   627  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   629  /** \brief Sets the Timer13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param direction T13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param mode The trigger event to start T13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   640   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   641  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   643  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   644   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param mode Trap mode selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   647   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   648  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   649  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   650  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   651   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   652   * \param state Trap state selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   653   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   654   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   655  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   657  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param t12 Timer12 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param t13 Timer13 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param t12 Timer12 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param t13 Timer13 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param currentHall Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param expectedHall Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   677   * \param output Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   682  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   683  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   684  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   686  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   687   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   688   * \param outputLine Output Line
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   689   * \param selectedTrigger Trigger selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   690   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   691   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   692  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   693  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   694  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   695   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   696   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   697   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   698   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   699   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   700  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   701  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   702  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   704   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   705   * \param state FALSE: The passive level is 0.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   706   * TRUE : The passive level is 1.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   707   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   708   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   709  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   710  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   711  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   712   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   713   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   714   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   715   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   716   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   717  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   718  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   719  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   720   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   721   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   722   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   724   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   725  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   726  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   727  /** \brief Sets the frequency and clock input of the Timer 12.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   728   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   729   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   730   * The resulting frequency is captured in the handler element : CaptureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   731   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \param countMode Counting mode of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   735   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   736   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   737   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   738  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period, IfxCcu6_T12CountMode countMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   742   * \param extInput External input signal for the Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   743   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   744   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   745  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Sets the frequency and clock input of the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   755   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   756   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   757   * The resulting frequency is captured in the handler element : captureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   759   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   760   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   761   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   762   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   763   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   764  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   766  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   768   * \param extInput External input signal for the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   769   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   770   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   771  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   773  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   774  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   775  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   776   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   777  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   778  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   779  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   780  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   781  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   782  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   783   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   784   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   785   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   786   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   787  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   788  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   789  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   790   * that has been compared to the current and expected value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   791   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   792   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   794   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   795   * FALSE : The input CCPOSx has been sampled as 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Gets the status of the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   802   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   803   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   804  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   805  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   806  /** \brief indicates if the multi-channel mode functionality is available
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   808   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   809   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   810  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   811  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   812  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   815   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   816   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   817   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   818  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   819  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   820  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   822   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   823   * \return Status (TRUE: enable / FALSE: disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   824   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   825  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   826  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   827  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   828   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   829   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   831   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   832  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   833  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   834  /** \brief Returns the current counting direction of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   835   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   836   * \return direction (up / down)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   837   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   838  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   839  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   840  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   841   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   842   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   843   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   844  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   845  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   846  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   847   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   848   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   849   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   850   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   851  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   852  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   853  /** \brief Returns the Timer (T12 / T13) run status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   854   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   855   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   856   * \return Status (stopped / running)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   857   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   858  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   859  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   860  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   861   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   862   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   863   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   864   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   865   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   866  IFX_INLINE boolean IfxCcu6_isModuleSuspended(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   868  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   869   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   870   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   871   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   872   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   873   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   874  IFX_INLINE void IfxCcu6_setSuspendMode(Ifx_CCU6 *ccu6, IfxCcu6_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   875  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   876  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   877  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   878  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   879  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   880  /** \brief Returns the module index of the selected CCU6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return CCU6 module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_EXTERN Ifx_CCU6 *IfxCcu6_getAddress(IfxCcu6_Index ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Returns the capture register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   889   * \return current value of the capture register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   890   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   891  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   892  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   893  /** \brief Returns the capture shadow register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   896   * \return current value of the capture shadow register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   897   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   898  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   899  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   900  /** \brief Returns CCU6 index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \param ccu6 Specifies the pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   902   * \return Returns index. returns -1 in case of unknown index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   903   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   904  IFX_EXTERN IfxCcu6_Index IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   905  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   906  /** \brief Returns the service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return The service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Returns the current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   922  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   924  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   925  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   926  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   927  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   928  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   929  /** \brief Clears all Interrupt flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   931   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   932   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   933  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   935  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   938   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   939   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   940  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   941  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   942  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   944   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   945   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   946   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   947  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   948  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   949  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   951   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   952   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   953  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   954  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   955  /** \brief Disables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   965   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   966  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   967  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   968  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   969   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   972   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   973   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   974  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   975  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   976  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   978   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   979   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   980   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   981  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   982  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   983  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   984   * T13 output CC63_O is equal to CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   985   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   986   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   987   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   988  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   989  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   990  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   991   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   992   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   993   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   994   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   995  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   996  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   997  /** \brief Disables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   998   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   999   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1000   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1001   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1002  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1003  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1004  /** \brief Disables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1005   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1006   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1007   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1008  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1010  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1011   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1012   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1013   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1014   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1015  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1017  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1018   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1019   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1020   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1021   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1022   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1023  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1024  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1025  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1026   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1027   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1028   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1029   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1030  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1031  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1032  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1033   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1034   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1035   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1036  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1037  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1038  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1040   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1041   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1042  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1043  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1044  /** \brief Enables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1047   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1048   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1049  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1050  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1051  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the Multi Channel Mode Availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1066   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1067  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1068  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1069  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1070   * becomes set while a T12 one match is detected while counting down
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1071   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1072   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1073   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1074  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1075  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1076  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * becomes set while a T12 period match is detected while counting up
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * becomes set while a T13 period match is detected
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1087   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1088  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1089  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1090  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1091   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1094   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1095   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1096  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1097  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1098  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1099   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1101   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1102   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1103  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1104  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1105  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1106   * T13 output CC63_O is equal to CC63ST.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1109   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1110  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1112  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1113   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1116   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1117  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1118  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1119  /** \brief Enables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1120   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1121   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1123   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1124  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1125  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1126  /** \brief Enables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1127   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1128   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1129   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1130  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1131  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1132  /** \brief selects the actual input signal for the capture compare inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1133   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1134   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1135   * \param signal selection of actual input signal for the module inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1136   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1137   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1138  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1139  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1140  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1141  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1142  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1143  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1144  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1148   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1149   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1150  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1151  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1152  /** \brief Disables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_EXTERN void IfxCcu6_disableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1162   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1163   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1164  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1165  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1166  /** \brief Enables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1173  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1174  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1177  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1178  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1179  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1180  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1181  /** \brief Initialises a CC60 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a CC60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cc60Out CC60 compare output CC0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a CC61 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1200   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1201  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1203  /** \brief Initialises a CC61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1204   * \param cc61Out CC61 compare output CC1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a CC62 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a CC62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param cc62Out CC62 compare output CC2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1222   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1223   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1224  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1225  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1226  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1227   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1228   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1229   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1230   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1231  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1232  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1233  /** \brief Initialises a CCPOS1 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1235   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1236   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1237   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1238  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1239  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1241   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1242   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1244   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1245  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1246  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1247  /** \brief Initialises a COUT60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1248   * \param cout60 CC60 compare output COUT0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1249   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1250   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1251   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1252   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1253  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1254  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1255  /** \brief Initialises a COUT61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1256   * \param cout61 CC61 compare output COUT1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1257   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1258   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1259   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1261  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1262  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1263  /** \brief Initialises a COUT62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1264   * \param cout62 CC62 compare output COUT2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1265   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1266   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1267   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1268   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1269  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1270  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1271  /** \brief Initialises a COUT63 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1272   * \param cout63 CC63 compare output COUT3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1273   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1274   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1275   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1276   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1277  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1278  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1279  /** \brief Initialises a CTRAP input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1280   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1281   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1282   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1283   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1284  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1286  /** \brief Initialises a T12HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1287   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1288   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1289   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1291  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1293  /** \brief Initialises a T13HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1294   * \param t13hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1295   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1296   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1297   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1298  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1300  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1301  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1302  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1303  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1304  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1305  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1306  /** \brief Provides functionality for both setting of CC60 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1307   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1308   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1309   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1310   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1311   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1312  IFX_INLINE void IfxCcu6_initCc60InPinWithPadLevel(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1314  /** \brief Provides functionality for both setting of CC61 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1315   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1316   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1317   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1318   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1319   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1320  IFX_INLINE void IfxCcu6_initCc61InPinWithPadLevel(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1322  /** \brief Provides functionality for both setting of CC62 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1323   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1324   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1325   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1326   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1327   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_initCc62InPinWithPadLevel(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1329  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1330  /** \brief Provides functionality for both setting of CCPOS0 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1331   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1332   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1333   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1334   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1335   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1336  IFX_INLINE void IfxCcu6_initCcpos0PinWithPadLevel(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1338  /** \brief Provides functionality for both setting of CCPOS1 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1339   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1340   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1341   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1342   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1343   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1344  IFX_INLINE void IfxCcu6_initCcpos1PinWithPadLevel(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1345  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1346  /** \brief Provides functionality for both setting of CCPOS2 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1347   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1348   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1349   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1350   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1352  IFX_INLINE void IfxCcu6_initCcpos2PinWithPadLevel(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1354  /** \brief Provides functionality for both setting of CTRAP pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1355   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1356   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1357   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1358   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1360  IFX_INLINE void IfxCcu6_initCtrapPinWithPadLevel(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1361  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1362  /** \brief Provides functionality for both setting of T12HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1363   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1364   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1365   * \param padDriver Pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1366   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1367   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1368  IFX_INLINE void IfxCcu6_initT12hrPinWithPadLevel(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1369  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1370  /** \brief Provides functionality for both setting of T13HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1371   * \param t13hrIn Timer 13 HR input T13HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1372   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1373   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1374   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1375   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1376  IFX_INLINE void IfxCcu6_initT13hrPinWithPadLevel(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1377  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1378  /** \brief Sets the sensitivity of the module to sleep signal
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1379   * \param ccu6 pointer to CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1380   * \param mode mode selection (enable/disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1381   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1382   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1383  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1384  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1385  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1386  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1387  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1388  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1389  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1390   * \param ccu6 pointer to ccu6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1391   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1392   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1393  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1394  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1395  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1396  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1397  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1398  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1399  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1400  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1401      ccu6->ISR.U = 0xFFFF;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1402  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1403  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1405  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1406  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1407      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1408      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1409      tctr4.B.T12RES = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1410      tctr4.B.T13RES = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1411      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1412  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1414  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1415  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1416  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1417      ccu6->TCTR4.B.DTRES = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1418  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1421  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1422  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1423      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1424      ccu6->ISR.U = mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1425  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1426  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1427  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1428  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1429  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1430      ccu6->ISR.B.RT12OM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1431  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1434  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1435  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1436      ccu6->ISR.B.RT12PM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1437  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1439  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1440  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1441  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1442      ccu6->ISR.B.RT13CM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1443  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1445  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1446  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1447  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1448      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1449      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1450      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1451  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1452  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1453  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1454  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1455  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1456      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1457      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1458      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1459  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1461  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1462  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1463  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1464      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1465  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1466  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1467  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1468  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1469  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1470      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1471      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1472  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1473  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1475  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1476  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1477      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1478  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1479  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1481  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1482  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1483      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1484      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1485      tctr4.B.T12STD = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1486      tctr4.B.T13STD = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1490  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1493      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1494      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1495  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1496  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1497  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1498  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1499  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1500      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1501  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1503  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1504  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1505  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1506      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1507      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1508  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1510  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1511  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1512  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1513      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1514      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1515      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1516  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1518  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1519  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1520  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1521      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1522  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1523  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1525  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1526  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1527      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1528      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1529      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1530  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1531  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1533  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1534  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1535      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1536      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1537      tctr4.B.T12CNT = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1538      tctr4.B.T13CNT = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1539      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1540  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1541  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1542  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1543  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1544  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1545      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1546      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1547      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1548  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1550  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1551  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1552  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1553      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1554  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1555  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1556  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1557  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1558  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1559      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1560  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1562  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1563  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1564  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1565      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1566      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1567  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1568  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1570  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1571  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1572      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1573  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1574  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1575  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1576  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1577  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1578      ccu6->MCFG.B.MCM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1579  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1580  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1581  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1582  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1583  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1584      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1587  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1590      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1591  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1592  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1594  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1595  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1596      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1597  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1599  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1600  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1601  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1602      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1603  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1604  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1605  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1606  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1607  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1608      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1609      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1610      tctr4.B.T12STR = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1611      tctr4.B.T13STR = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1612      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1615  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1618      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1619      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1622  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1625      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1626  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1627  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1629  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1630  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1631      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1632      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1633  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1634  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1636  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1637  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1638      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1639      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1640      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1643  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1646      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1647  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1648  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1649  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1650  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1651  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1652      uint32 shift = (12 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1653      uint32 mask  = 1 << shift;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1654      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1657  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1660      uint32 shift = (channel + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1661      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1662      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1663  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1664  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1665  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1666  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1667  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1668      uint32 shift = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1669      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1670  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1671  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1672  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1673  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1674  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1675      return ccu6->MCFG.B.MCM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1677  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1678  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1681      return ccu6->MCMOUT.B.R != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1682  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1683  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1684  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1685  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1686  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1687      uint32 shift = ((timer * 8) + 5);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1688      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1689      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1690  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1691  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1692  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1693  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1694  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1695      uint32 mask = (1U << channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1696      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1697  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1698  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1699  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1700  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1701  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1702      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1703  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1704  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1705  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1706  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1707  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1708      return (volatile uint32 *)&ccu6->T12PR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1709  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1710  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1711  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1712  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1713  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1714      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1715  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1716  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1717  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1718  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1719  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1720      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1721      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1722  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1723  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1724  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1725  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1726  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1727      uint32 shift = ((timer * 8) + 4);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1728      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1729      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1730  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1731  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1732  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1733  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1734  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1735      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1736      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1737  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1738  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1739  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1740  IFX_INLINE void IfxCcu6_initCc60InPinWithPadLevel(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1741  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1742      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1743      IfxPort_setPinPadDriver(cc60In->pin.port, cc60In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1744      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1745  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1746  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1747  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1748  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1749  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1750      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1751      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1752  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1754  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1755  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1756  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1757      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1758      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1759  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1760  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1761  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1762  IFX_INLINE void IfxCcu6_initCc61InPinWithPadLevel(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1763  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1764      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1765      IfxPort_setPinPadDriver(cc61In->pin.port, cc61In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1766      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1767  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1768  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1769  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1770  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1771  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1772      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1773      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1774  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1775  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1776  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1777  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1778  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1779      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1780      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1781  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1782  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1783  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1784  IFX_INLINE void IfxCcu6_initCc62InPinWithPadLevel(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1785  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1786      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1787      IfxPort_setPinPadDriver(cc62In->pin.port, cc62In->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1788      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1789  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1790  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1791  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1792  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1793  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1794      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1795      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1796  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1797  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1798  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1799  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1800  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1801      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1802      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1803  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1804  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1805  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1806  IFX_INLINE void IfxCcu6_initCcpos0PinWithPadLevel(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1807  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1808      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1809      IfxPort_setPinPadDriver(ccpos0->pin.port, ccpos0->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1810      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1811  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1812  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1813  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1814  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1815  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1816      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1817      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1818  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1819  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1820  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1821  IFX_INLINE void IfxCcu6_initCcpos1PinWithPadLevel(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1822  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1823      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1824      IfxPort_setPinPadDriver(ccpos1->pin.port, ccpos1->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1825      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1826  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1827  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1828  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1829  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1830  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1831      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1832      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1833  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1834  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1835  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1836  IFX_INLINE void IfxCcu6_initCcpos2PinWithPadLevel(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1837  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1838      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1839      IfxPort_setPinPadDriver(ccpos2->pin.port, ccpos2->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1840      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1841  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1842  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1843  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1844  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1845  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1846      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1847      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1848  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1849  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1850  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1851  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1852  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1853      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1854      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1855  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1856  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1857  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1858  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1859  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1860      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1861      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1862  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1863  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1864  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1865  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1866  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1867      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1868      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1869  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1870  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1871  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1872  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1873  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1874      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1875      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1876  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1877  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1878  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1879  IFX_INLINE void IfxCcu6_initCtrapPinWithPadLevel(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1880  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1881      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1882      IfxPort_setPinPadDriver(ctrap->pin.port, ctrap->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1883      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1884  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1885  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1886  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1887  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1888  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1889      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1890      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1891  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1892  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1893  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1894  IFX_INLINE void IfxCcu6_initT12hrPinWithPadLevel(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1895  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1896      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1897      IfxPort_setPinPadDriver(t12hrIn->pin.port, t12hrIn->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1898      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1899  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1900  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1901  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1902  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1903  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1904      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1905      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1906  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1907  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1908  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1909  IFX_INLINE void IfxCcu6_initT13hrPinWithPadLevel(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1910  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1911      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1912      IfxPort_setPinPadDriver(t13hrIn->pin.port, t13hrIn->pin.pinIndex, padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1913      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1914  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1915  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1916  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1917  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1918  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1919      return ccu6->CLC.B.DISS == 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1920  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1922  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1923  IFX_INLINE boolean IfxCcu6_isModuleSuspended(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1924  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1925      Ifx_CCU6_OCS ocs;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1926  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1927      // read the status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1928      ocs.U = ccu6->OCS.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1929  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1930      // return the status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1931      return ocs.B.SUSSTA;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1932  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1933  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1935  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1936  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1937      return ccu6->IS.B.T12OM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1938  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1939  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1940  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1941  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1942  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1943      return ccu6->IS.B.T12PM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1944  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1945  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1946  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1947  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1948  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1949      return ccu6->IS.B.T13CM != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1950  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1951  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1952  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1953  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1954  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1955      uint32 shift = (uint32)input;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1956      uint32 mask  = (0x3U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1957      ccu6->PISEL0.U = (ccu6->PISEL0.U & ~mask) | ((uint32)signal << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1958  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1959  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1960  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1961  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1962  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1963      uint32 shift = ((timer * 2) + 2);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1964      uint32 mask  = (0x3U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1965      ccu6->PISEL2.U = (ccu6->PISEL2.U & ~mask) | ((uint32)mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1966  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1967  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1968  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1969  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1970  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1971      ccu6->MCMOUTS.B.CURHS = pattern;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1972  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1973  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1974  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1975  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1976  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1977      ccu6->T12DTC.B.DTM = value;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1978  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1979  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1980  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1981  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1982  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1983      ccu6->MCMOUTS.B.EXPHS = pattern;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1984  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1985  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1986  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1987  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1988  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1989      uint32 shift = ((timer * 2) + 8);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1990      uint32 mask  = (0x3U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1991      ccu6->TCTR2.U = (ccu6->TCTR2.U & ~mask) | ((uint32)mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1992  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1993  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1994  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1995  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1996  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1997      uint32 shift = 12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1998      uint32 mask  = (0x7U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1999      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2000  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2001  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2002  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2003  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2004  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2005      uint32 shift = (timer * 8);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2006      uint32 mask  = (0x7U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  2007      ccu6->TCTR0.U = (ccu6->TCTR0.U & ~mask) | ((uint32)frequency << shift);
	sh	d15,d15,#8
.L602:
	or	d1,d15
	st.w	[a15]112,d1
.L366:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   491      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   492              break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   493          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   494      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   495  
	jz.t	d0:3,.L85
.L370:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    45   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    46   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    47   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    48   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    49   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    50   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    51   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    52   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    53   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    54   * \ingroup IfxLld_Ccu6_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    55   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    56  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    57  #ifndef IFXCCU6_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    58  #define IFXCCU6_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    59  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    60  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    61  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    62  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    63  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    64  #include "_Impl/IfxCcu6_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    65  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    66  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    67  #include "Scu/Std/IfxScuWdt.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    68  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    69  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    70  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    72  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    73  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    74  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    75  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    76  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    77   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    78  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    79   * Definition in Ifx_CCU.PISEL0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    80   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    81  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    82  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    83      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    84      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    85      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    89      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    90  } IfxCcu6_CaptureCompareInput;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    91  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    92  /** \brief Selection of actual input signal for the capture compare inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    93   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    94  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    95  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   100  } IfxCcu6_CaptureCompareInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   101  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   102  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   103   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   104  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   105  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   106      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   107      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   108      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   109  } IfxCcu6_CaptureCompareState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   110  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   111  /** \brief Capture compare output pins
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   112   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   113  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   114  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   116      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   117      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   118      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   119      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   120      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   121      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   122  } IfxCcu6_ChannelOut;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   123  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   124  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   125   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   126   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   127  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   128  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   129      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   130                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   131      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   132                                                      * event. The T1x prescaler is not taken into account */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   133      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   134                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                      * detected in the selected T1xHR signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   137  } IfxCcu6_CountingInputMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   138  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   139  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   140   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   141   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   142  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   143  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   144      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   145                                           * the source signal becomes active */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   146      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   147  } IfxCcu6_DelayBypass;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   148  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   149  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   150   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   151   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   152  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   153  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   156                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   157      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   158                                                     * detected. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   159      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   160                                                     * detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   161  } IfxCcu6_ExternalTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   162  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   163  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   164   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   165   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   166  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   167  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                             * signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   171      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   173      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   175      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   177  } IfxCcu6_HallSensorTriggerMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   178  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   179  /** \brief Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   180   * Description in Ifx_CCU.IEN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   181   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   182  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   183  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   184      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   185                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   186      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   187                                                                          * enable for channel CC60 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   188      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   189                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   191                                                                          * enable for channel CC61 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   193                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                          * enable for channel CC62 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   197      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   198      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   199      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   200      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   201      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   202      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   203  } IfxCcu6_InterruptSource;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   204  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   205  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   206   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   207   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   208  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   209  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   210      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   211      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   212      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   213      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   214      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   215                                                                         * delay function) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   217  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   218  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   219  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   220   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   221   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   222  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   223  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   224      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   225                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   228                                                            * shadow transfer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   229  } IfxCcu6_MultiChannelSwitchingSync;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   230  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   231  /** \brief Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   232   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   233  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   234  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   237      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   238      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   239  } IfxCcu6_ServiceRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   240  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   242   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   243   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   244  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   245  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   248  } IfxCcu6_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   249  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   251   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   252  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   253  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Capture compare channel of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   261  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   262  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   263      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   269   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   270  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   271  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   272      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   274      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   276      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   277      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   278      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   279                                                                          * programmed to Hall Sensor mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   280      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   281      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   282      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   283      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   286  } IfxCcu6_T12ChannelMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   287  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   288  /** \brief Counting direction of Timer12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   289   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   291  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   292  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   293      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   294      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   295  } IfxCcu6_T12CountDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   296  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   297  /** \brief Operating mode of Timer 12\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   298   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   299   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   300  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   301  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   302      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   303                                               * from zero after reaching the period value. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   304      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   305                                               * and counts up after detecting a one-match. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   306  } IfxCcu6_T12CountMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   307  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   308  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   309   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   310   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   311  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   312  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   313      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   314      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   315      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   316      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   317  } IfxCcu6_T13TriggerDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   318  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   319  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   320   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   321   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   322  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   323  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   327      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   328      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   329      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   330      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   331                                                     * counting up) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   332      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   333  } IfxCcu6_T13TriggerEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   334  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   335  /** \brief Timer number ( T12 / T13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   336   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   337  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   338  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   350      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   351      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   352      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   353      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   354      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   355      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   356  } IfxCcu6_TimerInputClock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   358  /** \brief Selection of actual input signal for the timer inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   360  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   361  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   362      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   363      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   364      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   365      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   366      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   368      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   370  } IfxCcu6_TimerInputSignal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   371  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   372  /** \brief Timer (T12 / T13) run status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   373   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   374   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   375  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   376  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   377      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   378      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   379  } IfxCcu6_TimerRunStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   380  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   381  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   382   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   383   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   384  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   385  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   386      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   387      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   388                                        * ISR.RTRPF = 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   389  } IfxCcu6_TrapMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   392   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   394  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   395  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   396      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   397                                        * of T12 (while counting up) is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   398      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   399                                        * of T13 is detected */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   400      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   401  } IfxCcu6_TrapState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   402  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   403  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   405  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   407  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   408  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   409  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   410  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   411  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   412  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   413   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   414   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   415   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   416   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   417   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   418  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   420  /** \brief Clears all the three dead-time counter channels to zero.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   421   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   422   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   423   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   424  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   425  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   426  /** \brief Clears the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   427   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   428   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   430   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   431  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   433  /** \brief Clears the T12  One notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   434   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   436   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   437  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   439  /** \brief Clears the T12  period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   440   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   442   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   443  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   445  /** \brief Clears the T13  compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   446   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   448   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   449  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   450  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   451  /** \brief Returns the Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   452   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \return Timer pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   454   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   455  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   456  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   457  /** \brief Returns the status of module enabled or disabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   458   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   459   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   460   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   461  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   462  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   463  /** \brief Returns the status of T12 one notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   464   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   465   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   466   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   467  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   468  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   469  /** \brief Returns the status of T12 period notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   471   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   472   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   473  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   475  /** \brief Returns the status of T13 compare notification
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param pattern Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param value Value of the dead time to be induced
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   500   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   501  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   503  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   504   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param pattern Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   507   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   508  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   510  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   511   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param mode External trigger mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Hall sensor input trigger event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   526   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param frequency Input clock for timers (T12 or T13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   537   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   538  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   539  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   540  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   541   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   542   * \param pattern Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   544   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   545  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   546  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   547  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   548   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   549   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   550   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   551   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   552  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   553  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   554  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   555   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   556   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   557   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   558   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   559   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   560  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   562  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   563   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   564   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   565   * \param state FALSE: passive state when CC6xST == 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   566   * TRUE : passive state when CC6xST == 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   568   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   569  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   570  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   571  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   572   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \param mode The operating mode for the T12 channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   583   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   584   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   585  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   586  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   587  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \param mode Operating mode of Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   590   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   591   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   592  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   593  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   594  /** \brief Sets the 16-bit counter value of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \param value Counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   597   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   598   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   599  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   600  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   601  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \param value Period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   604   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   605   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   606  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   607  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   608  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   611   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   612   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   613  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   615  /** \brief Sets the 16-bit counter value of Timer13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \param value counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   618   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   619   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   620  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   622  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \param value period value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   625   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   627  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   629  /** \brief Sets the Timer13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param direction T13 trigger event direction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param mode The trigger event to start T13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   640   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   641  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   643  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   644   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param mode Trap mode selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   647   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   648  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   649  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   650  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   651   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   652   * \param state Trap state selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   653   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   654   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   655  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   657  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param t12 Timer12 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param t13 Timer13 start choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param t12 Timer12 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param t13 Timer13 stop choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param currentHall Current hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param expectedHall Expected hall pattern
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   677   * \param output Output pattern for the multichannel mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   682  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   683  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   684  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   686  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   687   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   688   * \param outputLine Output Line
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   689   * \param selectedTrigger Trigger selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   690   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   691   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   692  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   693  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   694  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   695   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   696   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   697   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   698   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   699   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   700  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   701  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   702  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   704   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   705   * \param state FALSE: The passive level is 0.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   706   * TRUE : The passive level is 1.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   707   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   708   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   709  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   710  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   711  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   712   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   713   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   714   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   715   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   716   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   717  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   718  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   719  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   720   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   721   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   722   * \param value Compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   724   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   725  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   726  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   727  /** \brief Sets the frequency and clock input of the Timer 12.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   728   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   729   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   730   * The resulting frequency is captured in the handler element : CaptureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   731   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \param countMode Counting mode of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   735   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   736   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   737   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   738  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period, IfxCcu6_T12CountMode countMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   742   * \param extInput External input signal for the Timer 12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   743   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   744   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   745  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param state capture/compare state selection (set / clear / toggle)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Sets the frequency and clock input of the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   755   * Caution: If desired frequency cannot achieved (by successive divisions by 2) :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   756   * Then the nearest frequency value is set ( >= desired value)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   757   * The resulting frequency is captured in the handler element : captureFrequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   759   * \param frequency Requested timer frequency in Hz
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   760   * \param period period value to be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   761   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   762   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   763   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   764  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue period);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   766  /** \brief selects the actual input signal for the timer inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   768   * \param extInput External input signal for the Timer 13
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   769   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   770   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   771  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   773  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   774  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   775  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   776   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   777  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   778  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   779  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   780  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   781  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   782  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   783   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   784   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   785   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   786   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   787  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   788  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   789  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   790   * that has been compared to the current and expected value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   791   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   792   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   794   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   795   * FALSE : The input CCPOSx has been sampled as 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Gets the status of the selected interrupt flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   802   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   803   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   804  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   805  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   806  /** \brief indicates if the multi-channel mode functionality is available
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   808   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   809   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   810  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   811  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   812  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   815   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   816   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   817   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   818  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   819  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   820  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   822   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   823   * \return Status (TRUE: enable / FALSE: disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   824   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   825  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   826  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   827  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   828   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   829   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   831   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   832  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   833  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   834  /** \brief Returns the current counting direction of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   835   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   836   * \return direction (up / down)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   837   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   838  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   839  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   840  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   841   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   842   * \return Status TRUE or FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   843   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   844  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   845  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   846  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   847   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   848   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   849   * \return Status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   850   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   851  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   852  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   853  /** \brief Returns the Timer (T12 / T13) run status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   854   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   855   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   856   * \return Status (stopped / running)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   857   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   858  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   859  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   860  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   861   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   862   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   863   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   864   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   865   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   866  IFX_INLINE boolean IfxCcu6_isModuleSuspended(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   868  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   869   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   870   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   871   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   872   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   873   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   874  IFX_INLINE void IfxCcu6_setSuspendMode(Ifx_CCU6 *ccu6, IfxCcu6_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   875  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   876  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   877  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   878  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   879  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   880  /** \brief Returns the module index of the selected CCU6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param ccu6 Pointer to CCU6 module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return CCU6 module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_EXTERN Ifx_CCU6 *IfxCcu6_getAddress(IfxCcu6_Index ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Returns the capture register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   889   * \return current value of the capture register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   890   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   891  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   892  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   893  /** \brief Returns the capture shadow register value of the selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   896   * \return current value of the capture shadow register of a selected channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   897   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   898  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   899  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   900  /** \brief Returns CCU6 index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \param ccu6 Specifies the pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   902   * \return Returns index. returns -1 in case of unknown index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   903   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   904  IFX_EXTERN IfxCcu6_Index IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   905  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   906  /** \brief Returns the service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param ccu6 Specifies Ccu6 module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param serviceRequest Selection of service request outputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return The service request register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Returns the current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return current value of the timer register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   922  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   924  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   925  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   926  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   927  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   928  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   929  /** \brief Clears all Interrupt flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   931   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   932   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   933  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   935  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   938   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   939   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   940  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   941  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   942  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   944   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   945   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   946   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   947  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   948  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   949  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   951   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   952   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   953  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   954  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   955  /** \brief Disables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   965   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   966  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   967  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   968  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   969   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   972   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   973   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   974  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   975  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   976  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   978   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   979   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   980   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   981  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   982  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   983  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   984   * T13 output CC63_O is equal to CC63ST
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   985   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   986   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   987   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   988  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   989  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   990  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   991   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   992   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   993   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   994   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   995  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   996  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   997  /** \brief Disables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   998   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	   999   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1000   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1001   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1002  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1003  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1004  /** \brief Disables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1005   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1006   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1007   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1008  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1010  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1011   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1012   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1013   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1014   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1015  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1017  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1018   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1019   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1020   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1021   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1022   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1023  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1024  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1025  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1026   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1027   * \param channel Timer12 Capture compare channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1028   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1029   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1030  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1031  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1032  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1033   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1034   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1035   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1036  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1037  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1038  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1040   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1041   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1042  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1043  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1044  /** \brief Enables the selected interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \param source Interrupt source selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1047   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1048   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1049  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1050  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1051  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the Multi Channel Mode Availability
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableMultiChannelModeAvailability(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1066   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1067  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1068  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1069  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1070   * becomes set while a T12 one match is detected while counting down
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1071   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1072   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1073   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1074  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1075  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1076  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * becomes set while a T12 period match is detected while counting up
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * becomes set while a T13 period match is detected
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1087   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1088  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1089  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1090  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1091   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param t12 Timer12 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \param t13 Timer13 choice (enable / disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1094   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1095   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1096  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1097  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1098  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1099   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1101   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1102   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1103  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1104  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1105  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1106   * T13 output CC63_O is equal to CC63ST.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1109   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1110  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1112  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1113   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1116   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1117  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1118  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1119  /** \brief Enables the trap functionality for the corresponding output signals
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1120   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1121   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1123   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1124  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1125  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1126  /** \brief Enables the input (pin) function for the trap generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1127   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1128   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1129   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1130  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1131  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1132  /** \brief selects the actual input signal for the capture compare inputs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1133   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1134   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1135   * \param signal selection of actual input signal for the module inputs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1136   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1137   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1138  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1139  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1140  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1141  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1142  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1143  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1144  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1148   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1149   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1150  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1151  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1152  /** \brief Disables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_EXTERN void IfxCcu6_disableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \param channelOut Capture compare output selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1162   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1163   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1164  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1165  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1166  /** \brief Enables the selected CCU6 kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param ccu6 Pointer to the base of CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1173  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1174  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1177  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1178  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1179  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1180  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1181  /** \brief Initialises a CC60 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a CC60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cc60Out CC60 compare output CC0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a CC61 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1200   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1201  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1203  /** \brief Initialises a CC61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1204   * \param cc61Out CC61 compare output CC1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a CC62 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a CC62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param cc62Out CC62 compare output CC2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1222   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1223   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1224  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1225  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1226  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1227   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1228   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1229   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1230   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1231  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1232  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1233  /** \brief Initialises a CCPOS1 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1235   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1236   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1237   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1238  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1239  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /** \brief Initialises a CCPOS0 input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1241   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1242   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1244   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1245  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1246  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1247  /** \brief Initialises a COUT60 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1248   * \param cout60 CC60 compare output COUT0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1249   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1250   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1251   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1252   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1253  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1254  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1255  /** \brief Initialises a COUT61 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1256   * \param cout61 CC61 compare output COUT1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1257   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1258   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1259   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1261  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1262  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1263  /** \brief Initialises a COUT62 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1264   * \param cout62 CC62 compare output COUT2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1265   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1266   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1267   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1268   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1269  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1270  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1271  /** \brief Initialises a COUT63 output pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1272   * \param cout63 CC63 compare output COUT3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1273   * \param outputMode The pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1274   * \param padDriver The pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1275   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1276   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1277  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1278  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1279  /** \brief Initialises a CTRAP input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1280   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1281   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1282   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1283   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1284  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1286  /** \brief Initialises a T12HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1287   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1288   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1289   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1290   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1291  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1293  /** \brief Initialises a T13HR input pin
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1294   * \param t13hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1295   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1296   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1297   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1298  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1300  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1301  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1302  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1303  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1304  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1305  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1306  /** \brief Provides functionality for both setting of CC60 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1307   * \param cc60In CC60 capture input CC60IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1308   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1309   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1310   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1311   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1312  IFX_INLINE void IfxCcu6_initCc60InPinWithPadLevel(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1314  /** \brief Provides functionality for both setting of CC61 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1315   * \param cc61In CC61 capture input CC61IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1316   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1317   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1318   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1319   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1320  IFX_INLINE void IfxCcu6_initCc61InPinWithPadLevel(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1322  /** \brief Provides functionality for both setting of CC62 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1323   * \param cc62In CC62 capture input CC62IN
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1324   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1325   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1326   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1327   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_initCc62InPinWithPadLevel(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1329  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1330  /** \brief Provides functionality for both setting of CCPOS0 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1331   * \param ccpos0 CC60 capture input CCPOS0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1332   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1333   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1334   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1335   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1336  IFX_INLINE void IfxCcu6_initCcpos0PinWithPadLevel(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1338  /** \brief Provides functionality for both setting of CCPOS1 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1339   * \param ccpos1 CC61 capture input CCPOS1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1340   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1341   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1342   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1343   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1344  IFX_INLINE void IfxCcu6_initCcpos1PinWithPadLevel(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1345  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1346  /** \brief Provides functionality for both setting of CCPOS2 pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1347   * \param ccpos2 CC62 capture input CCPOS2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1348   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1349   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1350   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1352  IFX_INLINE void IfxCcu6_initCcpos2PinWithPadLevel(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1354  /** \brief Provides functionality for both setting of CTRAP pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1355   * \param ctrap CTRAP input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1356   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1357   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1358   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1360  IFX_INLINE void IfxCcu6_initCtrapPinWithPadLevel(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1361  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1362  /** \brief Provides functionality for both setting of T12HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1363   * \param t12hrIn Timer 12 HR input T12HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1364   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1365   * \param padDriver Pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1366   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1367   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1368  IFX_INLINE void IfxCcu6_initT12hrPinWithPadLevel(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1369  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1370  /** \brief Provides functionality for both setting of T13HR pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1371   * \param t13hrIn Timer 13 HR input T13HR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1372   * \param inputMode The pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1373   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1374   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1375   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1376  IFX_INLINE void IfxCcu6_initT13hrPinWithPadLevel(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1377  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1378  /** \brief Sets the sensitivity of the module to sleep signal
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1379   * \param ccu6 pointer to CCU6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1380   * \param mode mode selection (enable/disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1381   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1382   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1383  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1384  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1385  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1386  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1387  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1388  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1389  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1390   * \param ccu6 pointer to ccu6 registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1391   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1392   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1393  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1394  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1395  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1396  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1397  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1398  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1399  IFX_INLINE void IfxCcu6_clearAllInterruptStatusFlags(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1400  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1401      ccu6->ISR.U = 0xFFFF;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1402  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1403  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1404  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1405  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1406  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1407      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1408      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1409      tctr4.B.T12RES = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1410      tctr4.B.T13RES = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1411      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1412  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1414  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1415  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1416  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1417      ccu6->TCTR4.B.DTRES = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1418  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1421  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1422  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1423      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1424      ccu6->ISR.U = mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1425  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1426  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1427  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1428  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1429  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1430      ccu6->ISR.B.RT12OM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1431  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1434  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1435  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1436      ccu6->ISR.B.RT12PM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1437  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1438  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1439  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1440  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1441  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1442      ccu6->ISR.B.RT13CM = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1443  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1444  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1445  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1446  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1447  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1448      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1449      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1450      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1451  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1452  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1453  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1454  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1455  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1456      uint32 shift = (8 + channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1457      uint32 mask  = (1 << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1458      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1459  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1461  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1462  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1463  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1464      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1465  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1466  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1467  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1468  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1469  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1470      uint32 mask = (1U << source);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1471      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1472  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1473  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1475  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1476  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1477      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1478  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1479  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1481  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1482  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1483      Ifx_CCU6_TCTR4 tctr4;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1484      tctr4.U        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1485      tctr4.B.T12STD = t12;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1486      tctr4.B.T13STD = t13;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TCTR4.U  = tctr4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1490  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1493      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1494      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1495  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1496  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1497  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1498  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1499  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1500      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1501  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1503  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1504  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1505  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1506      uint32 mask = (1U << timer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1507      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1508  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1510  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1511  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1512  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1513      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1514      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1515      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1516  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1517  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1518  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1519  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1520  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1521      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1522  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1523  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1525  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1526  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1527      uint32 shift = ((timer * 8) + 3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1528      uint32 mask  = (1U << shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.h	  1529      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
	ld.w	d15,[a15]112
.L603:
	insert	d15,d15,#1,#11,#1
	st.w	[a15]112,d15
.L85:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   496    {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   497              break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   498          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   499      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   500  
	mov	d15,#1
.L604:
	sh	d15,d15,d0
	utof	d15,d15
.L605:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   501      if (prescaler < 16)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   502      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   503          uint16                  periodVal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   504          boolean                 additionalPrescaler;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   505          IfxCcu6_TimerInputClock clockInput;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   506  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   507          periodVal = (uint16)(period - 1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   508          IfxCcu6_setT13PeriodValue(ccu6, periodVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   509          IfxCcu6_enableShadowTransfer(ccu6, FALSE, TRUE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   510  
	div.f	d2,d9,d15
	ret
.L84:
	mov	d2,#0
	ret
.L344:
	
__IfxCcu6_setT13Frequency_function_end:
	.size	IfxCcu6_setT13Frequency,__IfxCcu6_setT13Frequency_function_end-IfxCcu6_setT13Frequency
.L178:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT13InputSignal',code,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.text.IfxCcu6.IfxCcu6_setT13InputSignal'
	.align	2
	
	.global	IfxCcu6_setT13InputSignal

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   511          clockInput = (IfxCcu6_TimerInputClock)(prescaler & 0x7U);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   512          IfxCcu6_setInputClockFrequency(ccu6, IfxCcu6_TimerId_t13, clockInput);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   513  
; Function IfxCcu6_setT13InputSignal
.L129:
IfxCcu6_setT13InputSignal:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   514          additionalPrescaler = ((prescaler & 0x8U) != 0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   515  
	ld.bu	d15,[a5]12
.L610:
	ld.bu	d0,[a4]20
.L611:
	ge.u	d15,d15,#4
.L612:
	insert	d15,d0,d15,#7,#1
	st.b	[a4]20,d15
.L613:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   516          if (additionalPrescaler)
	ld.bu	d15,[a5]12
.L614:
	ld.bu	d0,[a4]20
.L615:
	insert	d15,d0,d15,#0,#2
	st.b	[a4]20,d15
.L616:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   517          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   518              IfxCcu6_enableAdditionalPrescaler(ccu6, IfxCcu6_TimerId_t13);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   519          }
	ret
.L373:
	
__IfxCcu6_setT13InputSignal_function_end:
	.size	IfxCcu6_setT13InputSignal,__IfxCcu6_setT13InputSignal_function_end-IfxCcu6_setT13InputSignal
.L183:
	; End of function
	
	.calls	'IfxCcu6_setT12Frequency','__f_ftous'
	.calls	'IfxCcu6_setT13Frequency','__f_ftous'
	.calls	'IfxCcu6_disableModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxCcu6_disableModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxCcu6_disableModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxCcu6_enableModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxCcu6_enableModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxCcu6_enableModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxCcu6_getSrcAddress','IfxCcu6_getIndex'
	.calls	'IfxCcu6_resetModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxCcu6_resetModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxCcu6_resetModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxCcu6_setT12Frequency','IfxScuCcu_getSpbFrequency'
	.calls	'IfxCcu6_setT13Frequency','IfxScuCcu_getSpbFrequency'
	.calls	'IfxCcu6_connectTrigger','',0
	.calls	'IfxCcu6_disableModulationOutput','',0
	.calls	'IfxCcu6_disableModule','',0
	.calls	'IfxCcu6_enableModulationOutput','',0
	.calls	'IfxCcu6_enableModule','',0
	.calls	'IfxCcu6_getAddress','',0
	.calls	'IfxCcu6_getCaptureRegisterValue','',0
	.calls	'IfxCcu6_getCaptureShadowRegisterValue','',0
	.calls	'IfxCcu6_getIndex','',0
	.calls	'IfxCcu6_getSrcAddress','',0
	.calls	'IfxCcu6_readTimer','',0
	.calls	'IfxCcu6_resetModule','',0
	.calls	'IfxCcu6_routeInterruptNode','',0
	.calls	'IfxCcu6_setOutputPassiveLevel','',0
	.calls	'IfxCcu6_setT12CaptureCompareState','',0
	.calls	'IfxCcu6_setT12CompareValue','',0
	.calls	'IfxCcu6_setT12Frequency','',0
	.calls	'IfxCcu6_setT12InputSignal','',0
	.calls	'IfxCcu6_setT13CaptureCompareState','',0
	.calls	'IfxCcu6_setT13Frequency','',0
	.extern	IfxCcu6_cfg_indexMap
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxScuCcu_getSpbFrequency
	.extern	__f_ftous
	.calls	'IfxCcu6_setT13InputSignal','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L131:
	.word	98391
	.half	3
	.word	.L132
	.byte	4
.L130:
	.byte	1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L133
	.byte	2,1,1,3
	.word	175
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	178
	.byte	6,0,7
	.byte	'__fract',0,4,128,1
.L287:
	.byte	7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	223
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	235
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,172,2,17,1,1,6,0,9
	.byte	'void',0,10
	.word	321
	.byte	3
	.word	327
.L246:
	.byte	7
	.byte	'unsigned int',0,4,7
.L250:
	.byte	4
	.byte	'__ldmst_c',0,3,2,111,17,1,1
.L253:
	.byte	5
	.byte	'address',0,2,111,42
	.word	332
.L255:
	.byte	5
	.byte	'mask',0,2,111,60
	.word	337
.L257:
	.byte	5
	.byte	'value',0,2,111,75
	.word	337
.L259:
	.byte	6,0,7
	.byte	'unsigned long long int',0,8,7,3
	.word	321
	.byte	8
	.byte	'__ld64',0,3,2,135,1,19
	.word	415
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	441
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	441
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	415
	.byte	6,0,7
	.byte	'int',0,4,5
.L270:
	.byte	7
	.byte	'unsigned char',0,1,8,11
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,45,16,4,12
	.byte	'SRPN',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	534
	.byte	2,6,2,35,1,12
	.byte	'SRE',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'TOS',0,1
	.word	534
	.byte	2,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	534
	.byte	3,0,2,35,1,12
	.byte	'ECC',0,1
	.word	534
	.byte	6,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	534
	.byte	2,0,2,35,2,12
	.byte	'SRR',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'CLRR',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'SETR',0,1
	.word	534
	.byte	1,5,2,35,3,12
	.byte	'IOV',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'IOVCLR',0,1
	.word	534
	.byte	1,3,2,35,3,12
	.byte	'SWS',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'SWSCLR',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	534
	.byte	1,0,2,35,3,0,13,4,70,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	551
	.byte	4,2,35,0,0,10
	.word	841
.L393:
	.byte	3
	.word	880
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,3,250,1,17,1,1,5
	.byte	'src',0,3,250,1,60
	.word	885
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,11
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,6,241,8,16,4,12
	.byte	'ENDINIT',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'LCK',0,4
	.word	933
	.byte	1,30,2,35,0,12
	.byte	'PW',0,4
	.word	933
	.byte	14,16,2,35,0,12
	.byte	'REL',0,4
	.word	933
	.byte	16,0,2,35,0,0,13,6,247,14,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	949
	.byte	4,2,35,0,0
.L248:
	.byte	7
	.byte	'unsigned short int',0,2,7,11
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,6,250,8,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	2,6,2,35,0,12
	.byte	'IR0',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'DR',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'IR1',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'UR',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'PAR',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'TCR',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'TCTR',0,1
	.word	534
	.byte	7,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,6,255,14,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1107
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,6,137,9,16,4,12
	.byte	'AE',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'OE',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'IS0',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'DS',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'TO',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'IS1',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'US',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'PAS',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'TCS',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'TCT',0,1
	.word	534
	.byte	7,0,2,35,1,12
	.byte	'TIM',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,6,135,15,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1351
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_SCU_WDTCPU',0,6,175,15,25,12,14
	.byte	'CON0',0
	.word	1045
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	1311
	.byte	4,2,35,4,14
	.byte	'SR',0
	.word	1542
	.byte	4,2,35,8,0,10
	.word	1582
	.byte	3
	.word	1645
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,5,181,3,17,1,1,5
	.byte	'watchdog',0,5,181,3,65
	.word	1650
	.byte	5
	.byte	'password',0,5,181,3,82
	.word	1085
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,5,140,4,17,1,1,5
	.byte	'watchdog',0,5,140,4,63
	.word	1650
	.byte	5
	.byte	'password',0,5,140,4,80
	.word	1085
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,5,227,3,19
	.word	1085
	.byte	1,1,5
	.byte	'watchdog',0,5,227,3,74
	.word	1650
	.byte	6,0,15,8,156,1,9,1,16
	.byte	'IfxCpu_ResourceCpu_0',0,0,16
	.byte	'IfxCpu_ResourceCpu_1',0,1,16
	.byte	'IfxCpu_ResourceCpu_none',0,2,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,7,141,6,31
	.word	1880
	.byte	1,1,6,0,8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,7,139,5,20
	.word	534
	.byte	1,1,6,0
.L274:
	.byte	7
	.byte	'unsigned long int',0,4,7,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,7,161,6,19
	.word	2035
	.byte	1,1,5
	.byte	'address',0,7,161,6,55
	.word	1085
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,7,190,6,20
	.word	534
	.byte	1,1,5
	.byte	'address',0,7,190,6,70
	.word	1085
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,7,172,8,17,1,1,5
	.byte	'address',0,7,172,8,56
	.word	2035
	.byte	5
	.byte	'count',0,7,172,8,72
	.word	2035
	.byte	17,6,0,0,11
	.byte	'_Ifx_P_OUT_Bits',0,10,143,3,16,4,12
	.byte	'P0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'P2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'P3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'P4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'P5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'P6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'P7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'P8',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'P9',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'P10',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'P11',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'P12',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'P13',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'P14',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'P15',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,10,181,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2266
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMR_Bits',0,10,169,2,16,4,12
	.byte	'PS0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'PS4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'PS8',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'PS12',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'PCL0',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'PCL4',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	534
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	534
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'PCL8',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	534
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'PCL12',0,1
	.word	534
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	534
	.byte	1,0,2,35,3,0,13,10,133,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2582
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_ID_Bits',0,10,110,16,4,12
	.byte	'MODREV',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'MODTYPE',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'MODNUMBER',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,10,148,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3153
	.byte	4,2,35,0,0,18,4
	.word	534
	.byte	19,3,0,11
	.byte	'_Ifx_P_IOCR0_Bits',0,10,140,1,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	3,5,2,35,0,12
	.byte	'PC0',0,1
	.word	534
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	534
	.byte	3,5,2,35,1,12
	.byte	'PC1',0,1
	.word	534
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	534
	.byte	3,5,2,35,2,12
	.byte	'PC2',0,1
	.word	534
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	3,5,2,35,3,12
	.byte	'PC3',0,1
	.word	534
	.byte	5,0,2,35,3,0,13,10,164,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3281
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR4_Bits',0,10,166,1,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	3,5,2,35,0,12
	.byte	'PC4',0,1
	.word	534
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	534
	.byte	3,5,2,35,1,12
	.byte	'PC5',0,1
	.word	534
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	534
	.byte	3,5,2,35,2,12
	.byte	'PC6',0,1
	.word	534
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	3,5,2,35,3,12
	.byte	'PC7',0,1
	.word	534
	.byte	5,0,2,35,3,0,13,10,180,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3496
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR8_Bits',0,10,179,1,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	3,5,2,35,0,12
	.byte	'PC8',0,1
	.word	534
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	534
	.byte	3,5,2,35,1,12
	.byte	'PC9',0,1
	.word	534
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	534
	.byte	3,5,2,35,2,12
	.byte	'PC10',0,1
	.word	534
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	3,5,2,35,3,12
	.byte	'PC11',0,1
	.word	534
	.byte	5,0,2,35,3,0,13,10,188,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3711
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR12_Bits',0,10,153,1,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	3,5,2,35,0,12
	.byte	'PC12',0,1
	.word	534
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	534
	.byte	3,5,2,35,1,12
	.byte	'PC13',0,1
	.word	534
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	534
	.byte	3,5,2,35,2,12
	.byte	'PC14',0,1
	.word	534
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	3,5,2,35,3,12
	.byte	'PC15',0,1
	.word	534
	.byte	5,0,2,35,3,0,13,10,172,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3928
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IN_Bits',0,10,118,16,4,12
	.byte	'P0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'P2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'P3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'P4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'P5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'P6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'P7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'P8',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'P9',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'P10',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'P11',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'P12',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'P13',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'P14',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'P15',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,10,156,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4148
	.byte	4,2,35,0,0,18,24
	.word	534
	.byte	19,23,0,11
	.byte	'_Ifx_P_PDR0_Bits',0,10,205,3,16,4,12
	.byte	'PD0',0,1
	.word	534
	.byte	3,5,2,35,0,12
	.byte	'PL0',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'PD1',0,1
	.word	534
	.byte	3,1,2,35,0,12
	.byte	'PL1',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'PD2',0,1
	.word	534
	.byte	3,5,2,35,1,12
	.byte	'PL2',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'PD3',0,1
	.word	534
	.byte	3,1,2,35,1,12
	.byte	'PL3',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'PD4',0,1
	.word	534
	.byte	3,5,2,35,2,12
	.byte	'PL4',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'PD5',0,1
	.word	534
	.byte	3,1,2,35,2,12
	.byte	'PL5',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'PD6',0,1
	.word	534
	.byte	3,5,2,35,3,12
	.byte	'PL6',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'PD7',0,1
	.word	534
	.byte	3,1,2,35,3,12
	.byte	'PL7',0,1
	.word	534
	.byte	1,0,2,35,3,0,13,10,205,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4471
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_PDR1_Bits',0,10,226,3,16,4,12
	.byte	'PD8',0,1
	.word	534
	.byte	3,5,2,35,0,12
	.byte	'PL8',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'PD9',0,1
	.word	534
	.byte	3,1,2,35,0,12
	.byte	'PL9',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'PD10',0,1
	.word	534
	.byte	3,5,2,35,1,12
	.byte	'PL10',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'PD11',0,1
	.word	534
	.byte	3,1,2,35,1,12
	.byte	'PL11',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'PD12',0,1
	.word	534
	.byte	3,5,2,35,2,12
	.byte	'PL12',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'PD13',0,1
	.word	534
	.byte	3,1,2,35,2,12
	.byte	'PL13',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'PD14',0,1
	.word	534
	.byte	3,5,2,35,3,12
	.byte	'PL14',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'PD15',0,1
	.word	534
	.byte	3,1,2,35,3,12
	.byte	'PL15',0,1
	.word	534
	.byte	1,0,2,35,3,0,13,10,213,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4775
	.byte	4,2,35,0,0,18,8
	.word	534
	.byte	19,7,0,11
	.byte	'_Ifx_P_ESR_Bits',0,10,88,16,4,12
	.byte	'EN0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,10,140,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5100
	.byte	4,2,35,0,0,18,12
	.word	534
	.byte	19,11,0,11
	.byte	'_Ifx_P_PDISC_Bits',0,10,183,3,16,4,12
	.byte	'PDIS0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'PDIS1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'PDIS2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'PDIS3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'PDIS4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'PDIS5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'PDIS6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'PDIS7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'PDIS8',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'PDIS9',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'PDIS10',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'PDIS11',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'PDIS12',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'PDIS13',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'PDIS14',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'PDIS15',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,10,197,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5440
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_PCSR_Bits',0,10,165,3,16,4,12
	.byte	'SEL0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'SEL1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'SEL2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'SEL3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'SEL4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'SEL5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'SEL6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'SEL7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	534
	.byte	2,6,2,35,1,12
	.byte	'SEL10',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'SEL11',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,4
	.word	337
	.byte	19,1,2,35,0,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,13,10,189,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5806
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR0_Bits',0,10,206,2,16,4,12
	.byte	'PS0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	337
	.byte	28,0,2,35,0,0,13,10,149,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6092
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR4_Bits',0,10,227,2,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	4,4,2,35,0,12
	.byte	'PS4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	337
	.byte	24,0,2,35,0,0,13,10,165,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6239
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR8_Bits',0,10,238,2,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'PS8',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,4
	.word	337
	.byte	20,0,2,35,0,0,13,10,173,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6408
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR12_Bits',0,10,216,2,16,4,12
	.byte	'reserved_0',0,2
	.word	1085
	.byte	12,4,2,35,0,12
	.byte	'PS12',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,10,157,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6580
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR0_Bits',0,10,232,1,16,4,12
	.byte	'reserved_0',0,2
	.word	1085
	.byte	16,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'reserved_20',0,2
	.word	1085
	.byte	12,0,2,35,2,0,13,10,229,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6755
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR4_Bits',0,10,253,1,16,4,12
	.byte	'reserved_0',0,4
	.word	337
	.byte	20,12,2,35,0,12
	.byte	'PCL4',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	534
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	534
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	8,0,2,35,3,0,13,10,245,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6929
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR8_Bits',0,10,136,2,16,4,12
	.byte	'reserved_0',0,4
	.word	337
	.byte	24,8,2,35,0,12
	.byte	'PCL8',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	534
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	534
	.byte	4,0,2,35,3,0,13,10,253,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7103
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR12_Bits',0,10,243,1,16,4,12
	.byte	'reserved_0',0,4
	.word	337
	.byte	28,4,2,35,0,12
	.byte	'PCL12',0,1
	.word	534
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	534
	.byte	1,0,2,35,3,0,13,10,237,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7279
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR_Bits',0,10,249,2,16,4,12
	.byte	'PS0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'PS4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'PS8',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'PS12',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,10,141,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7435
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR_Bits',0,10,147,2,16,4,12
	.byte	'reserved_0',0,2
	.word	1085
	.byte	16,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'PCL4',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	534
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	534
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'PCL8',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	534
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'PCL12',0,1
	.word	534
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	534
	.byte	1,0,2,35,3,0,13,10,221,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7768
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_LPCR0_Bits',0,10,192,1,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	337
	.byte	30,0,2,35,0,0,13,10,196,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	8116
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_LPCR1_Bits',0,10,200,1,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	337
	.byte	30,0,2,35,0,0,11
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,10,208,1,16,4,12
	.byte	'RDIS_CTRL',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'RX_DIS',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'TERM',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'LRXTERM',0,1
	.word	534
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	337
	.byte	24,0,2,35,0,0,13,10,204,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	8240
	.byte	4,2,35,0,14
	.byte	'B_P21',0
	.word	8324
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_LPCR2_Bits',0,10,218,1,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'LVDSR',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'LVDSRL',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'reserved_10',0,1
	.word	534
	.byte	2,4,2,35,1,12
	.byte	'TDIS_CTRL',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'TX_DIS',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'TX_PD',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'TX_PWDPD',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,10,213,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	8504
	.byte	4,2,35,0,0,18,76
	.word	534
	.byte	19,75,0,11
	.byte	'_Ifx_P_ACCEN1_Bits',0,10,82,16,4,12
	.byte	'reserved_0',0,4
	.word	337
	.byte	32,0,2,35,0,0,13,10,132,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	8757
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_ACCEN0_Bits',0,10,45,16,4,12
	.byte	'EN0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	534
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	534
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	534
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	534
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	534
	.byte	1,0,2,35,3,0,13,10,252,3,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	8844
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P',0,10,229,5,25,128,2,14
	.byte	'OUT',0
	.word	2542
	.byte	4,2,35,0,14
	.byte	'OMR',0
	.word	3113
	.byte	4,2,35,4,14
	.byte	'ID',0
	.word	3232
	.byte	4,2,35,8,14
	.byte	'reserved_C',0
	.word	3272
	.byte	4,2,35,12,14
	.byte	'IOCR0',0
	.word	3456
	.byte	4,2,35,16,14
	.byte	'IOCR4',0
	.word	3671
	.byte	4,2,35,20,14
	.byte	'IOCR8',0
	.word	3888
	.byte	4,2,35,24,14
	.byte	'IOCR12',0
	.word	4108
	.byte	4,2,35,28,14
	.byte	'reserved_20',0
	.word	3272
	.byte	4,2,35,32,14
	.byte	'IN',0
	.word	4422
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	4462
	.byte	24,2,35,40,14
	.byte	'PDR0',0
	.word	4735
	.byte	4,2,35,64,14
	.byte	'PDR1',0
	.word	5051
	.byte	4,2,35,68,14
	.byte	'reserved_48',0
	.word	5091
	.byte	8,2,35,72,14
	.byte	'ESR',0
	.word	5391
	.byte	4,2,35,80,14
	.byte	'reserved_54',0
	.word	5431
	.byte	12,2,35,84,14
	.byte	'PDISC',0
	.word	5766
	.byte	4,2,35,96,14
	.byte	'PCSR',0
	.word	6052
	.byte	4,2,35,100,14
	.byte	'reserved_68',0
	.word	5091
	.byte	8,2,35,104,14
	.byte	'OMSR0',0
	.word	6199
	.byte	4,2,35,112,14
	.byte	'OMSR4',0
	.word	6368
	.byte	4,2,35,116,14
	.byte	'OMSR8',0
	.word	6540
	.byte	4,2,35,120,14
	.byte	'OMSR12',0
	.word	6715
	.byte	4,2,35,124,14
	.byte	'OMCR0',0
	.word	6889
	.byte	4,3,35,128,1,14
	.byte	'OMCR4',0
	.word	7063
	.byte	4,3,35,132,1,14
	.byte	'OMCR8',0
	.word	7239
	.byte	4,3,35,136,1,14
	.byte	'OMCR12',0
	.word	7395
	.byte	4,3,35,140,1,14
	.byte	'OMSR',0
	.word	7728
	.byte	4,3,35,144,1,14
	.byte	'OMCR',0
	.word	8076
	.byte	4,3,35,148,1,14
	.byte	'reserved_98',0
	.word	5091
	.byte	8,3,35,152,1,14
	.byte	'LPCR0',0
	.word	8200
	.byte	4,3,35,160,1,14
	.byte	'LPCR1',0
	.word	8449
	.byte	4,3,35,164,1,14
	.byte	'LPCR2',0
	.word	8708
	.byte	4,3,35,168,1,14
	.byte	'reserved_A4',0
	.word	8748
	.byte	76,3,35,172,1,14
	.byte	'ACCEN1',0
	.word	8804
	.byte	4,3,35,248,1,14
	.byte	'ACCEN0',0
	.word	9371
	.byte	4,3,35,252,1,0,10
	.word	9411
	.byte	3
	.word	10014
	.byte	15,9,83,9,1,16
	.byte	'IfxPort_InputMode_undefined',0,127,16
	.byte	'IfxPort_InputMode_noPullDevice',0,0,16
	.byte	'IfxPort_InputMode_pullDown',0,8,16
	.byte	'IfxPort_InputMode_pullUp',0,16,0,4
	.byte	'IfxPort_setPinModeInput',0,3,9,196,4,17,1,1,5
	.byte	'port',0,9,196,4,48
	.word	10019
	.byte	5
	.byte	'pinIndex',0,9,196,4,60
	.word	534
	.byte	5
	.byte	'mode',0,9,196,4,88
	.word	10024
	.byte	6,0,15,9,134,1,9,1,16
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,16
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,15,9,120,9,1,16
	.byte	'IfxPort_OutputIdx_general',0,128,1,16
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,16
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,16
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,16
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,16
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,16
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,16
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,4
	.byte	'IfxPort_setPinModeOutput',0,3,9,202,4,17,1,1,5
	.byte	'port',0,9,202,4,49
	.word	10019
	.byte	5
	.byte	'pinIndex',0,9,202,4,61
	.word	534
	.byte	5
	.byte	'mode',0,9,202,4,90
	.word	10229
	.byte	5
	.byte	'index',0,9,202,4,114
	.word	10299
	.byte	6,0,15,9,172,1,9,4,16
	.byte	'IfxPort_State_notChanged',0,0,16
	.byte	'IfxPort_State_high',0,1,16
	.byte	'IfxPort_State_low',0,128,128,4,16
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,9,208,4,17,1,1,5
	.byte	'port',0,9,208,4,44
	.word	10019
	.byte	5
	.byte	'pinIndex',0,9,208,4,56
	.word	534
	.byte	5
	.byte	'action',0,9,208,4,80
	.word	10612
	.byte	6,0,11
	.byte	'_Ifx_CCU6_CLC_Bits',0,12,144,1,16,4,12
	.byte	'DISR',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'DISS',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'EDIS',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	337
	.byte	28,0,2,35,0,0,13,12,172,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	10793
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_MCFG_Bits',0,12,241,2,16,4,12
	.byte	'T12',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'T13',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'MCM',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,4
	.word	337
	.byte	29,0,2,35,0,0,13,12,164,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	10951
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_ID_Bits',0,12,193,1,16,4,12
	.byte	'MODREV',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'MODNUMBER',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,196,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11085
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_MOSEL_Bits',0,12,171,3,16,4,12
	.byte	'TRIG0SEL',0,1
	.word	534
	.byte	3,5,2,35,0,12
	.byte	'TRIG1SEL',0,1
	.word	534
	.byte	3,2,2,35,0,12
	.byte	'TRIG2SEL',0,2
	.word	1085
	.byte	3,7,2,35,0,12
	.byte	'reserved_9',0,4
	.word	337
	.byte	23,0,2,35,0,0,13,12,204,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11212
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_PISEL0_Bits',0,12,193,3,16,4,12
	.byte	'ISCC60',0,1
	.word	534
	.byte	2,6,2,35,0,12
	.byte	'ISCC61',0,1
	.word	534
	.byte	2,4,2,35,0,12
	.byte	'ISCC62',0,1
	.word	534
	.byte	2,2,2,35,0,12
	.byte	'ISTRP',0,1
	.word	534
	.byte	2,0,2,35,0,12
	.byte	'ISPOS0',0,1
	.word	534
	.byte	2,6,2,35,1,12
	.byte	'ISPOS1',0,1
	.word	534
	.byte	2,4,2,35,1,12
	.byte	'ISPOS2',0,1
	.word	534
	.byte	2,2,2,35,1,12
	.byte	'IST12HR',0,1
	.word	534
	.byte	2,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,220,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11362
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_PISEL2_Bits',0,12,207,3,16,4,12
	.byte	'IST13HR',0,1
	.word	534
	.byte	2,6,2,35,0,12
	.byte	'ISCNT12',0,1
	.word	534
	.byte	2,4,2,35,0,12
	.byte	'ISCNT13',0,1
	.word	534
	.byte	2,2,2,35,0,12
	.byte	'T12EXT',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'T13EXT',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	337
	.byte	24,0,2,35,0,0,13,12,228,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11598
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_KSCSR_Bits',0,12,212,2,16,4,12
	.byte	'SB0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'SB1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'SB2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'SB3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	337
	.byte	28,0,2,35,0,0,13,12,148,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11782
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_T12_Bits',0,12,227,3,16,4,12
	.byte	'T12CV',0,2
	.word	1085
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,244,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11932
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_T12PR_Bits',0,12,131,4,16,4,12
	.byte	'T12PV',0,2
	.word	1085
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,140,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12038
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_T12DTC_Bits',0,12,234,3,16,4,12
	.byte	'DTM',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'DTE0',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'DTE1',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'DTE2',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'reserved_11',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'DTR0',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'DTR1',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'DTR2',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'reserved_15',0,4
	.word	337
	.byte	17,0,2,35,0,0,13,12,252,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12146
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_CC60R_Bits',0,12,88,16,4,12
	.byte	'CCV',0,2
	.word	1085
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,236,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12372
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_CC61R_Bits',0,12,102,16,4,12
	.byte	'CCV',0,2
	.word	1085
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,252,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12477
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_CC62R_Bits',0,12,116,16,4,12
	.byte	'CCV',0,2
	.word	1085
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,140,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12582
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_CC60SR_Bits',0,12,95,16,4,12
	.byte	'CCS',0,2
	.word	1085
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,244,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12687
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_CC61SR_Bits',0,12,109,16,4,12
	.byte	'CCS',0,2
	.word	1085
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,132,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12793
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_CC62SR_Bits',0,12,123,16,4,12
	.byte	'CCS',0,2
	.word	1085
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,148,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12899
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_T13_Bits',0,12,138,4,16,4,12
	.byte	'T13CV',0,2
	.word	1085
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,148,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13005
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_T13PR_Bits',0,12,145,4,16,4,12
	.byte	'T13PV',0,2
	.word	1085
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,156,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13111
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_CC63R_Bits',0,12,130,1,16,4,12
	.byte	'CCV',0,2
	.word	1085
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,156,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13219
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_CC63SR_Bits',0,12,137,1,16,4,12
	.byte	'CCS',0,2
	.word	1085
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,164,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13325
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_CMPSTAT_Bits',0,12,171,1,16,4,12
	.byte	'CC60ST',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'CC61ST',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'CC62ST',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'CCPOS60',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'CCPOS61',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'CCPOS62',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'CC63ST',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'CC60PS',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'COUT60PS',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'CC61PS',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'COUT61PS',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'CC62PS',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'COUT62PS',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'COUT63PS',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'T13IM',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,188,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13432
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_CMPMODIF_Bits',0,12,154,1,16,4,12
	.byte	'MCC60S',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'MCC61S',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'MCC62S',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	534
	.byte	3,2,2,35,0,12
	.byte	'MCC63S',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'MCC60R',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'MCC61R',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'MCC62R',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'reserved_11',0,1
	.word	534
	.byte	3,2,2,35,1,12
	.byte	'MCC63R',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'reserved_15',0,4
	.word	337
	.byte	17,0,2,35,0,0,13,12,180,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13827
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_T12MSEL_Bits',0,12,248,3,16,4,12
	.byte	'MSEL60',0,1
	.word	534
	.byte	4,4,2,35,0,12
	.byte	'MSEL61',0,1
	.word	534
	.byte	4,0,2,35,0,12
	.byte	'MSEL62',0,1
	.word	534
	.byte	4,4,2,35,1,12
	.byte	'HSYNC',0,1
	.word	534
	.byte	3,1,2,35,1,12
	.byte	'DBYP',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,132,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14132
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_TCTR0_Bits',0,12,152,4,16,4,12
	.byte	'T12CLK',0,1
	.word	534
	.byte	3,5,2,35,0,12
	.byte	'T12PRE',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'T12R',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'STE12',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'CDIR',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'CTM',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'T13CLK',0,1
	.word	534
	.byte	3,5,2,35,1,12
	.byte	'T13PRE',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'T13R',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'STE13',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'reserved_14',0,4
	.word	337
	.byte	18,0,2,35,0,0,13,12,164,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14312
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_TCTR2_Bits',0,12,168,4,16,4,12
	.byte	'T12SSC',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'T13SSC',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'T13TEC',0,1
	.word	534
	.byte	3,3,2,35,0,12
	.byte	'T13TED',0,1
	.word	534
	.byte	2,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'T12RSEL',0,1
	.word	534
	.byte	2,6,2,35,1,12
	.byte	'T13RSEL',0,1
	.word	534
	.byte	2,4,2,35,1,12
	.byte	'reserved_12',0,4
	.word	337
	.byte	20,0,2,35,0,0,13,12,172,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14572
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_TCTR4_Bits',0,12,181,4,16,4,12
	.byte	'T12RR',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'T12RS',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'T12RES',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'DTRES',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'T12CNT',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'T12STR',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'T12STD',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'T13RR',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'T13RS',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'T13RES',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'reserved_11',0,1
	.word	534
	.byte	2,3,2,35,1,12
	.byte	'T13CNT',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'T13STR',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'T13STD',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0
.L310:
	.byte	13,12,180,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14795
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_MODCTR_Bits',0,12,159,3,16,4,12
	.byte	'T12MODEN',0,1
	.word	534
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'MCMEN',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'T13MODEN',0,1
	.word	534
	.byte	6,2,2,35,1,12
	.byte	'reserved_14',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'ECT13O',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,196,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15160
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_TRPCTR_Bits',0,12,202,4,16,4,12
	.byte	'TRPM0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'TRPM1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'TRPM2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	534
	.byte	5,0,2,35,0,12
	.byte	'TRPEN',0,1
	.word	534
	.byte	6,2,2,35,1,12
	.byte	'TRPEN13',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'TRPPEN',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,188,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15372
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_PSLR_Bits',0,12,218,3,16,4,12
	.byte	'PSL',0,1
	.word	534
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'PSL63',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	337
	.byte	24,0,2,35,0,0,13,12,236,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15591
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_MCMOUTS_Bits',0,12,146,3,16,4,12
	.byte	'MCMPS',0,1
	.word	534
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'STRMCM',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'EXPHS',0,1
	.word	534
	.byte	3,5,2,35,1,12
	.byte	'CURHS',0,1
	.word	534
	.byte	3,2,2,35,1,12
	.byte	'reserved_14',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'STRHP',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,188,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15734
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_MCMOUT_Bits',0,12,135,3,16,4,12
	.byte	'MCMP',0,1
	.word	534
	.byte	6,2,2,35,0,12
	.byte	'R',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'EXPH',0,1
	.word	534
	.byte	3,5,2,35,1,12
	.byte	'CURH',0,1
	.word	534
	.byte	3,2,2,35,1,12
	.byte	'reserved_14',0,4
	.word	337
	.byte	18,0,2,35,0,0,13,12,180,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15958
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_MCMCTR_Bits',0,12,250,2,16,4,12
	.byte	'SWSEL',0,1
	.word	534
	.byte	3,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'SWSYN',0,1
	.word	534
	.byte	2,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	534
	.byte	2,0,2,35,0,12
	.byte	'STE12U',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'STE12D',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'STE13U',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	337
	.byte	21,0,2,35,0,0,13,12,172,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	16133
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_IMON_Bits',0,12,223,1,16,4,12
	.byte	'LBE',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'CCPOS0I',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'CCPOS1I',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'CCPOS2I',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'CC60INI',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'CC61INI',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'CC62INI',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'CTRAPI',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'T12HRI',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'T13HRI',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'reserved_10',0,4
	.word	337
	.byte	22,0,2,35,0,0,13,12,212,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	16357
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_LI_Bits',0,12,222,2,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'CCPOS0EN',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'CCPOS1EN',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'CCPOS2EN',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'CC60INEN',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'CC61INEN',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'CC62INEN',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'CTRAPEN',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'T12HREN',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'T13HREN',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'reserved_10',0,1
	.word	534
	.byte	3,3,2,35,1,12
	.byte	'LBEEN',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'INPLBE',0,1
	.word	534
	.byte	2,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,156,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	16630
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_IS_Bits',0,12,252,1,16,4,12
	.byte	'ICC60R',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'ICC60F',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'ICC61R',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'ICC61F',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'ICC62R',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'ICC62F',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'T12OM',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'T12PM',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'T13CM',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'T13PM',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'TRPF',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'TRPS',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'CHE',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'WHE',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'IDLE',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'STR',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,228,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	16975
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_ISS_Bits',0,12,168,2,16,4,12
	.byte	'SCC60R',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'SCC60F',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'SCC61R',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'SCC61F',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'SCC62R',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'SCC62F',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'ST12OM',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'ST12PM',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'ST13CM',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'ST13PM',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'STRPF',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'SWHC',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'SCHE',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'SWHE',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'SIDLE',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'SSTR',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,244,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17332
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_ISR_Bits',0,12,146,2,16,4,12
	.byte	'RCC60R',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'RCC60F',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'RCC61R',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'RCC61F',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'RCC62R',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'RCC62F',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'RT12OM',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'RT12PM',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'RT13CM',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'RT13PM',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'RTRPF',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'reserved_11',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'RCHE',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'RWHE',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'RIDLE',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'RSTR',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,236,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17699
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_INP_Bits',0,12,239,1,16,4,12
	.byte	'INPCC60',0,1
	.word	534
	.byte	2,6,2,35,0,12
	.byte	'INPCC61',0,1
	.word	534
	.byte	2,4,2,35,0,12
	.byte	'INPCC62',0,1
	.word	534
	.byte	2,2,2,35,0,12
	.byte	'INPCHE',0,1
	.word	534
	.byte	2,0,2,35,0,12
	.byte	'INPERR',0,1
	.word	534
	.byte	2,6,2,35,1,12
	.byte	'INPT12',0,1
	.word	534
	.byte	2,4,2,35,1,12
	.byte	'INPT13',0,1
	.word	534
	.byte	2,2,2,35,1,12
	.byte	'reserved_14',0,4
	.word	337
	.byte	18,0,2,35,0,0,13,12,220,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18073
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_IEN_Bits',0,12,201,1,16,4,12
	.byte	'ENCC60R',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'ENCC60F',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'ENCC61R',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'ENCC61F',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'ENCC62R',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'ENCC62F',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'ENT12OM',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'ENT12PM',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'ENT13CM',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'ENT13PM',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'ENTRPF',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'reserved_11',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'ENCHE',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'ENWHE',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'ENIDLE',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'ENSTR',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,13,12,204,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18291
	.byte	4,2,35,0,0,18,52
	.word	534
	.byte	19,51,0,11
	.byte	'_Ifx_CCU6_OCS_Bits',0,12,180,3,16,4,12
	.byte	'TGS',0,1
	.word	534
	.byte	2,6,2,35,0,12
	.byte	'TGB',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'TG_P',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	337
	.byte	20,8,2,35,0,12
	.byte	'SUS',0,1
	.word	534
	.byte	4,4,2,35,3,12
	.byte	'SUS_P',0,1
	.word	534
	.byte	1,3,2,35,3,12
	.byte	'SUSSTA',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	534
	.byte	2,0,2,35,3,0,13,12,212,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18689
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_KRSTCLR_Bits',0,12,205,2,16,4,12
	.byte	'CLR',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,4
	.word	337
	.byte	31,0,2,35,0,0,13,12,140,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18896
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_KRST1_Bits',0,12,198,2,16,4,12
	.byte	'RST',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,4
	.word	337
	.byte	31,0,2,35,0,0,13,12,132,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19003
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_KRST0_Bits',0,12,190,2,16,4,12
	.byte	'RST',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'RSTSTAT',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	337
	.byte	30,0,2,35,0,0,13,12,252,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19108
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_ACCEN1_Bits',0,12,82,16,4,12
	.byte	'reserved_0',0,4
	.word	337
	.byte	32,0,2,35,0,0,13,12,228,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19232
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6_ACCEN0_Bits',0,12,45,16,4,12
	.byte	'EN0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	534
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	534
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	534
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	534
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	534
	.byte	1,0,2,35,3,0,13,12,220,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19322
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_CCU6',0,12,204,7,25,128,2,14
	.byte	'CLC',0
	.word	10911
	.byte	4,2,35,0,14
	.byte	'MCFG',0
	.word	11045
	.byte	4,2,35,4,14
	.byte	'ID',0
	.word	11172
	.byte	4,2,35,8,14
	.byte	'MOSEL',0
	.word	11322
	.byte	4,2,35,12,14
	.byte	'PISEL0',0
	.word	11558
	.byte	4,2,35,16,14
	.byte	'PISEL2',0
	.word	11742
	.byte	4,2,35,20,14
	.byte	'reserved_18',0
	.word	3272
	.byte	4,2,35,24,14
	.byte	'KSCSR',0
	.word	11892
	.byte	4,2,35,28,14
	.byte	'T12',0
	.word	11998
	.byte	4,2,35,32,14
	.byte	'T12PR',0
	.word	12106
	.byte	4,2,35,36,14
	.byte	'T12DTC',0
	.word	12332
	.byte	4,2,35,40,14
	.byte	'reserved_2C',0
	.word	3272
	.byte	4,2,35,44,14
	.byte	'CC60R',0
	.word	12437
	.byte	4,2,35,48,14
	.byte	'CC61R',0
	.word	12542
	.byte	4,2,35,52,14
	.byte	'CC62R',0
	.word	12647
	.byte	4,2,35,56,14
	.byte	'reserved_3C',0
	.word	3272
	.byte	4,2,35,60,14
	.byte	'CC60SR',0
	.word	12753
	.byte	4,2,35,64,14
	.byte	'CC61SR',0
	.word	12859
	.byte	4,2,35,68,14
	.byte	'CC62SR',0
	.word	12965
	.byte	4,2,35,72,14
	.byte	'reserved_4C',0
	.word	3272
	.byte	4,2,35,76,14
	.byte	'T13',0
	.word	13071
	.byte	4,2,35,80,14
	.byte	'T13PR',0
	.word	13179
	.byte	4,2,35,84,14
	.byte	'CC63R',0
	.word	13285
	.byte	4,2,35,88,14
	.byte	'CC63SR',0
	.word	13392
	.byte	4,2,35,92,14
	.byte	'CMPSTAT',0
	.word	13787
	.byte	4,2,35,96,14
	.byte	'CMPMODIF',0
	.word	14092
	.byte	4,2,35,100,14
	.byte	'T12MSEL',0
	.word	14272
	.byte	4,2,35,104,14
	.byte	'reserved_6C',0
	.word	3272
	.byte	4,2,35,108,14
	.byte	'TCTR0',0
	.word	14532
	.byte	4,2,35,112,14
	.byte	'TCTR2',0
	.word	14755
	.byte	4,2,35,116,14
	.byte	'TCTR4',0
	.word	15120
	.byte	4,2,35,120,14
	.byte	'reserved_7C',0
	.word	3272
	.byte	4,2,35,124,14
	.byte	'MODCTR',0
	.word	15332
	.byte	4,3,35,128,1,14
	.byte	'TRPCTR',0
	.word	15551
	.byte	4,3,35,132,1,14
	.byte	'PSLR',0
	.word	15694
	.byte	4,3,35,136,1,14
	.byte	'MCMOUTS',0
	.word	15918
	.byte	4,3,35,140,1,14
	.byte	'MCMOUT',0
	.word	16093
	.byte	4,3,35,144,1,14
	.byte	'MCMCTR',0
	.word	16317
	.byte	4,3,35,148,1,14
	.byte	'IMON',0
	.word	16590
	.byte	4,3,35,152,1,14
	.byte	'LI',0
	.word	16935
	.byte	4,3,35,156,1,14
	.byte	'IS',0
	.word	17292
	.byte	4,3,35,160,1,14
	.byte	'ISS',0
	.word	17659
	.byte	4,3,35,164,1,14
	.byte	'ISR',0
	.word	18033
	.byte	4,3,35,168,1,14
	.byte	'INP',0
	.word	18251
	.byte	4,3,35,172,1,14
	.byte	'IEN',0
	.word	18640
	.byte	4,3,35,176,1,14
	.byte	'reserved_B4',0
	.word	18680
	.byte	52,3,35,180,1,14
	.byte	'OCS',0
	.word	18856
	.byte	4,3,35,232,1,14
	.byte	'KRSTCLR',0
	.word	18963
	.byte	4,3,35,236,1,14
	.byte	'KRST1',0
	.word	19068
	.byte	4,3,35,240,1,14
	.byte	'KRST0',0
	.word	19192
	.byte	4,3,35,244,1,14
	.byte	'ACCEN1',0
	.word	19282
	.byte	4,3,35,248,1,14
	.byte	'ACCEN0',0
	.word	19852
	.byte	4,3,35,252,1,0,10
	.word	19892
.L240:
	.byte	3
	.word	20748
.L412:
	.byte	8
	.byte	'IfxCcu6_isModuleEnabled',0,3,11,253,14,20
	.word	534
	.byte	1,1
.L414:
	.byte	5
	.byte	'ccu6',0,11,253,14,54
	.word	20753
.L416:
	.byte	6,0
.L401:
	.byte	15,11,209,2,9,1,16
	.byte	'IfxCcu6_TimerId_t12',0,0,16
	.byte	'IfxCcu6_TimerId_t13',0,1,0,15,11,218,2,9,1,16
	.byte	'IfxCcu6_TimerInputClock_fcc6',0,0,16
	.byte	'IfxCcu6_TimerInputClock_fcc6By2',0,1,16
	.byte	'IfxCcu6_TimerInputClock_fcc6By4',0,2,16
	.byte	'IfxCcu6_TimerInputClock_fcc6By8',0,3,16
	.byte	'IfxCcu6_TimerInputClock_fcc6By16',0,4,16
	.byte	'IfxCcu6_TimerInputClock_fcc6By32',0,5,16
	.byte	'IfxCcu6_TimerInputClock_fcc6By64',0,6,16
	.byte	'IfxCcu6_TimerInputClock_fcc6By128',0,7,0
.L312:
	.byte	4
	.byte	'IfxCcu6_setInputClockFrequency',0,3,11,211,15,17,1,1
.L314:
	.byte	5
	.byte	'ccu6',0,11,211,15,58
	.word	20753
.L316:
	.byte	5
	.byte	'timer',0,11,211,15,80
	.word	20810
.L318:
	.byte	5
	.byte	'frequency',0,11,211,15,111
	.word	20861
.L320:
	.byte	6,0
.L292:
	.byte	15,11,172,2,9,1,16
	.byte	'IfxCcu6_T12CountMode_edgeAligned',0,0,16
	.byte	'IfxCcu6_T12CountMode_centerAligned',0,1,0
.L330:
	.byte	4
	.byte	'IfxCcu6_setT12CountMode',0,3,11,162,16,17,1,1
.L332:
	.byte	5
	.byte	'ccu6',0,11,162,16,51
	.word	20753
.L334:
	.byte	5
	.byte	'mode',0,11,162,16,78
	.word	21231
.L336:
	.byte	6,0,4
	.byte	'IfxCcu6_setT12PeriodValue',0,3,11,174,16,17,1,1,5
	.byte	'ccu6',0,11,174,16,53
	.word	20753
	.byte	5
	.byte	'value',0,11,174,16,66
	.word	1085
	.byte	6,0
.L360:
	.byte	4
	.byte	'IfxCcu6_setT13PeriodValue',0,3,11,192,16,17,1,1
.L361:
	.byte	5
	.byte	'ccu6',0,11,192,16,53
	.word	20753
.L363:
	.byte	5
	.byte	'value',0,11,192,16,66
	.word	1085
.L365:
	.byte	6,0
.L323:
	.byte	4
	.byte	'IfxCcu6_enableAdditionalPrescaler',0,3,11,245,11,17,1,1
.L325:
	.byte	5
	.byte	'ccu6',0,11,245,11,61
	.word	20753
.L327:
	.byte	5
	.byte	'timer',0,11,245,11,83
	.word	20810
.L329:
	.byte	6,0
.L298:
	.byte	4
	.byte	'IfxCcu6_enableShadowTransfer',0,3,11,198,12,17,1,1
.L300:
	.byte	5
	.byte	'ccu6',0,11,198,12,56
	.word	20753
.L302:
	.byte	5
	.byte	't12',0,11,198,12,70
	.word	534
.L304:
	.byte	5
	.byte	't13',0,11,198,12,83
	.word	534
.L306:
	.byte	6,0,15,11,81,9,1,16
	.byte	'IfxCcu6_CaptureCompareInput_cC60',0,0,16
	.byte	'IfxCcu6_CaptureCompareInput_cC61',0,2,16
	.byte	'IfxCcu6_CaptureCompareInput_cC62',0,4,16
	.byte	'IfxCcu6_CaptureCompareInput_cTRAP',0,6,16
	.byte	'IfxCcu6_CaptureCompareInput_cCPOS0',0,8,16
	.byte	'IfxCcu6_CaptureCompareInput_cCPOS1',0,10,16
	.byte	'IfxCcu6_CaptureCompareInput_cCPOS2',0,12,0,15,11,94,9,1,16
	.byte	'IfxCcu6_CaptureCompareInputSignal_a',0,0,16
	.byte	'IfxCcu6_CaptureCompareInputSignal_b',0,1,16
	.byte	'IfxCcu6_CaptureCompareInputSignal_c',0,2,16
	.byte	'IfxCcu6_CaptureCompareInputSignal_d',0,3,0,4
	.byte	'IfxCcu6_setCaptureCompareInputSignal',0,3,11,161,15,17,1,1,5
	.byte	'ccu6',0,11,161,15,64
	.word	20753
	.byte	5
	.byte	'input',0,11,161,15,98
	.word	21654
	.byte	5
	.byte	'signal',0,11,161,15,139,1
	.word	21912
	.byte	6,0,20
	.word	527
	.byte	21
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,22
	.word	22163
	.byte	0,10
	.word	337
	.byte	3
	.word	337
	.byte	23
	.byte	'__cmpswapw',0
	.word	22205
	.byte	1,1,1,1,24
	.byte	'p',0
	.word	22210
	.byte	24
	.byte	'value',0
	.word	337
	.byte	24
	.byte	'compare',0
	.word	337
	.byte	0,25
	.byte	'__debug',0,1,1,1,1,26
	.word	183
	.byte	27
	.word	209
	.byte	6,0,26
	.word	244
	.byte	27
	.word	276
	.byte	6,0,26
	.word	289
	.byte	6,0,26
	.word	353
	.byte	27
	.word	370
	.byte	27
	.word	386
	.byte	27
	.word	399
	.byte	6,0,26
	.word	446
	.byte	27
	.word	465
	.byte	6,0,26
	.word	481
	.byte	27
	.word	496
	.byte	27
	.word	510
	.byte	6,0,26
	.word	890
	.byte	27
	.word	918
	.byte	6,0,26
	.word	1655
	.byte	27
	.word	1695
	.byte	27
	.word	1713
	.byte	6,0,26
	.word	1733
	.byte	27
	.word	1771
	.byte	27
	.word	1789
	.byte	6,0,28
	.byte	'IfxScuWdt_clearCpuEndinit',0,5,217,1,17,1,1,1,1,5
	.byte	'password',0,5,217,1,50
	.word	1085
	.byte	0,28
	.byte	'IfxScuWdt_setCpuEndinit',0,5,239,1,17,1,1,1,1,5
	.byte	'password',0,5,239,1,48
	.word	1085
	.byte	0,26
	.word	1809
	.byte	27
	.word	1860
	.byte	6,0,29
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,5,129,3,19
	.word	1085
	.byte	1,1,1,1,26
	.word	1959
	.byte	6,0,26
	.word	1993
	.byte	6,0,26
	.word	2056
	.byte	27
	.word	2097
	.byte	6,0,26
	.word	2116
	.byte	27
	.word	2171
	.byte	6,0,26
	.word	2190
	.byte	27
	.word	2230
	.byte	27
	.word	2247
	.byte	17,6,0,0,26
	.word	10149
	.byte	27
	.word	10181
	.byte	27
	.word	10195
	.byte	27
	.word	10213
	.byte	6,0,26
	.word	10516
	.byte	27
	.word	10549
	.byte	27
	.word	10563
	.byte	27
	.word	10581
	.byte	27
	.word	10595
	.byte	6,0,26
	.word	10715
	.byte	27
	.word	10743
	.byte	27
	.word	10757
	.byte	27
	.word	10775
	.byte	6,0,29
	.byte	'IfxScuCcu_getSpbFrequency',0,13,179,7,20
	.word	235
	.byte	1,1,1,1,26
	.word	20758
	.byte	27
	.word	20794
	.byte	6,0,26
	.word	21142
	.byte	27
	.word	21181
	.byte	27
	.word	21195
	.byte	27
	.word	21210
	.byte	6,0,26
	.word	21310
	.byte	27
	.word	21342
	.byte	27
	.word	21356
	.byte	6,0,26
	.word	21372
	.byte	27
	.word	21406
	.byte	27
	.word	21420
	.byte	6,0,26
	.word	21437
	.byte	27
	.word	21471
	.byte	27
	.word	21485
	.byte	6,0
.L242:
	.byte	15,14,90,9,1,16
	.byte	'IfxCcu6_TrigOut_0',0,0,16
	.byte	'IfxCcu6_TrigOut_1',0,3,16
	.byte	'IfxCcu6_TrigOut_2',0,6,0
.L244:
	.byte	15,14,97,9,1,16
	.byte	'IfxCcu6_TrigSel_cout63',0,0,16
	.byte	'IfxCcu6_TrigSel_cc60',0,1,16
	.byte	'IfxCcu6_TrigSel_cc61',0,1,16
	.byte	'IfxCcu6_TrigSel_cc62',0,1,16
	.byte	'IfxCcu6_TrigSel_sr1',0,2,16
	.byte	'IfxCcu6_TrigSel_sr3',0,3,0
.L262:
	.byte	15,11,182,1,9,1,16
	.byte	'IfxCcu6_InterruptSource_cc60RisingEdge',0,0,16
	.byte	'IfxCcu6_InterruptSource_cc60FallingEdge',0,1,16
	.byte	'IfxCcu6_InterruptSource_cc61RisingEdge',0,2,16
	.byte	'IfxCcu6_InterruptSource_cc61FallingEdge',0,3,16
	.byte	'IfxCcu6_InterruptSource_cc62RisingEdge',0,4,16
	.byte	'IfxCcu6_InterruptSource_cc62FallingEdge',0,5,16
	.byte	'IfxCcu6_InterruptSource_t12OneMatch',0,6,16
	.byte	'IfxCcu6_InterruptSource_t12PeriodMatch',0,7,16
	.byte	'IfxCcu6_InterruptSource_t13CompareMatch',0,8,16
	.byte	'IfxCcu6_InterruptSource_t13PeriodMatch',0,9,16
	.byte	'IfxCcu6_InterruptSource_trap',0,10,16
	.byte	'IfxCcu6_InterruptSource_correctHallEvent',0,12,16
	.byte	'IfxCcu6_InterruptSource_wrongHallEvent',0,13,0
.L264:
	.byte	15,11,233,1,9,1,16
	.byte	'IfxCcu6_ServiceRequest_0',0,0,16
	.byte	'IfxCcu6_ServiceRequest_1',0,1,16
	.byte	'IfxCcu6_ServiceRequest_2',0,2,16
	.byte	'IfxCcu6_ServiceRequest_3',0,3,0
.L268:
	.byte	15,11,113,9,1,16
	.byte	'IfxCcu6_ChannelOut_cc0',0,0,16
	.byte	'IfxCcu6_ChannelOut_cout0',0,1,16
	.byte	'IfxCcu6_ChannelOut_cc1',0,2,16
	.byte	'IfxCcu6_ChannelOut_cout1',0,3,16
	.byte	'IfxCcu6_ChannelOut_cc2',0,4,16
	.byte	'IfxCcu6_ChannelOut_cout2',0,5,16
	.byte	'IfxCcu6_ChannelOut_cout3',0,6,0
.L278:
	.byte	15,11,133,2,9,1,16
	.byte	'IfxCcu6_T12Channel_0',0,0,16
	.byte	'IfxCcu6_T12Channel_1',0,1,16
	.byte	'IfxCcu6_T12Channel_2',0,2,0
.L280:
	.byte	15,11,104,9,1,16
	.byte	'IfxCcu6_CaptureCompareState_set',0,0,16
	.byte	'IfxCcu6_CaptureCompareState_clear',0,1,16
	.byte	'IfxCcu6_CaptureCompareState_toggle',0,2,0,30,9,190,1,9,8,14
	.byte	'port',0
	.word	10019
	.byte	4,2,35,0,14
	.byte	'pinIndex',0
	.word	534
	.byte	1,2,35,4,0,15,16,130,1,9,1,16
	.byte	'Ifx_RxSel_a',0,0,16
	.byte	'Ifx_RxSel_b',0,1,16
	.byte	'Ifx_RxSel_c',0,2,16
	.byte	'Ifx_RxSel_d',0,3,16
	.byte	'Ifx_RxSel_e',0,4,16
	.byte	'Ifx_RxSel_f',0,5,16
	.byte	'Ifx_RxSel_g',0,6,16
	.byte	'Ifx_RxSel_h',0,7,0,30,15,115,15,16,14
	.byte	'module',0
	.word	20753
	.byte	4,2,35,0,14
	.byte	'pin',0
	.word	24060
	.byte	8,2,35,4,14
	.byte	'select',0
	.word	24099
	.byte	1,2,35,12,0,20
	.word	24218
.L339:
	.byte	3
	.word	24269
	.byte	30,15,123,15,16,14
	.byte	'module',0
	.word	20753
	.byte	4,2,35,0,14
	.byte	'pin',0
	.word	24060
	.byte	8,2,35,4,14
	.byte	'select',0
	.word	24099
	.byte	1,2,35,12,0,20
	.word	24279
.L375:
	.byte	3
	.word	24330
.L378:
	.byte	15,14,83,9,1,16
	.byte	'IfxCcu6_Index_none',0,127,16
	.byte	'IfxCcu6_Index_0',0,0,16
	.byte	'IfxCcu6_Index_1',0,1,0
.L397:
	.byte	7
	.byte	'long int',0,4,5,26
	.word	21502
	.byte	27
	.word	21544
	.byte	27
	.word	21558
	.byte	6,0,26
	.word	21575
	.byte	27
	.word	21612
	.byte	27
	.word	21626
	.byte	27
	.word	21639
	.byte	6,0,26
	.word	22070
	.byte	27
	.word	22115
	.byte	27
	.word	22129
	.byte	27
	.word	22144
	.byte	6,0,7
	.byte	'short int',0,2,5,31
	.byte	'__wchar_t',0,17,1,1
	.word	24476
	.byte	31
	.byte	'__size_t',0,17,1,1
	.word	337
	.byte	31
	.byte	'__ptrdiff_t',0,17,1,1
	.word	527
	.byte	32,1,3
	.word	24544
	.byte	31
	.byte	'__codeptr',0,17,1,1
	.word	24546
	.byte	31
	.byte	'boolean',0,18,101,29
	.word	534
	.byte	31
	.byte	'uint8',0,18,105,29
	.word	534
	.byte	31
	.byte	'uint16',0,18,109,29
	.word	1085
	.byte	31
	.byte	'uint32',0,18,113,29
	.word	2035
	.byte	31
	.byte	'uint64',0,18,118,29
	.word	415
	.byte	31
	.byte	'sint16',0,18,126,29
	.word	24476
	.byte	31
	.byte	'sint32',0,18,131,1,29
	.word	24403
	.byte	7
	.byte	'long long int',0,8,5,31
	.byte	'sint64',0,18,139,1,29
	.word	24675
	.byte	31
	.byte	'float32',0,18,168,1,29
	.word	235
	.byte	31
	.byte	'pvoid',0,16,57,28
	.word	441
	.byte	31
	.byte	'Ifx_TickTime',0,16,79,28
	.word	24675
	.byte	31
	.byte	'Ifx_Priority',0,16,103,16
	.word	1085
	.byte	31
	.byte	'Ifx_TimerValue',0,16,104,16
	.word	2035
	.byte	31
	.byte	'Ifx_RxSel',0,16,140,1,3
	.word	24099
	.byte	30,16,143,1,9,8,14
	.byte	'module',0
	.word	332
	.byte	4,2,35,0,14
	.byte	'index',0
	.word	24403
	.byte	4,2,35,4,0,31
	.byte	'IfxModule_IndexMap',0,16,147,1,3
	.word	24823
	.byte	31
	.byte	'Ifx_CCU6_ACCEN0_Bits',0,12,79,3
	.word	19322
	.byte	31
	.byte	'Ifx_CCU6_ACCEN1_Bits',0,12,85,3
	.word	19232
	.byte	31
	.byte	'Ifx_CCU6_CC60R_Bits',0,12,92,3
	.word	12372
	.byte	31
	.byte	'Ifx_CCU6_CC60SR_Bits',0,12,99,3
	.word	12687
	.byte	31
	.byte	'Ifx_CCU6_CC61R_Bits',0,12,106,3
	.word	12477
	.byte	31
	.byte	'Ifx_CCU6_CC61SR_Bits',0,12,113,3
	.word	12793
	.byte	31
	.byte	'Ifx_CCU6_CC62R_Bits',0,12,120,3
	.word	12582
	.byte	31
	.byte	'Ifx_CCU6_CC62SR_Bits',0,12,127,3
	.word	12899
	.byte	31
	.byte	'Ifx_CCU6_CC63R_Bits',0,12,134,1,3
	.word	13219
	.byte	31
	.byte	'Ifx_CCU6_CC63SR_Bits',0,12,141,1,3
	.word	13325
	.byte	31
	.byte	'Ifx_CCU6_CLC_Bits',0,12,151,1,3
	.word	10793
	.byte	31
	.byte	'Ifx_CCU6_CMPMODIF_Bits',0,12,168,1,3
	.word	13827
	.byte	31
	.byte	'Ifx_CCU6_CMPSTAT_Bits',0,12,190,1,3
	.word	13432
	.byte	31
	.byte	'Ifx_CCU6_ID_Bits',0,12,198,1,3
	.word	11085
	.byte	31
	.byte	'Ifx_CCU6_IEN_Bits',0,12,220,1,3
	.word	18291
	.byte	31
	.byte	'Ifx_CCU6_IMON_Bits',0,12,236,1,3
	.word	16357
	.byte	31
	.byte	'Ifx_CCU6_INP_Bits',0,12,249,1,3
	.word	18073
	.byte	31
	.byte	'Ifx_CCU6_IS_Bits',0,12,143,2,3
	.word	16975
	.byte	31
	.byte	'Ifx_CCU6_ISR_Bits',0,12,165,2,3
	.word	17699
	.byte	31
	.byte	'Ifx_CCU6_ISS_Bits',0,12,187,2,3
	.word	17332
	.byte	31
	.byte	'Ifx_CCU6_KRST0_Bits',0,12,195,2,3
	.word	19108
	.byte	31
	.byte	'Ifx_CCU6_KRST1_Bits',0,12,202,2,3
	.word	19003
	.byte	31
	.byte	'Ifx_CCU6_KRSTCLR_Bits',0,12,209,2,3
	.word	18896
	.byte	31
	.byte	'Ifx_CCU6_KSCSR_Bits',0,12,219,2,3
	.word	11782
	.byte	31
	.byte	'Ifx_CCU6_LI_Bits',0,12,238,2,3
	.word	16630
	.byte	31
	.byte	'Ifx_CCU6_MCFG_Bits',0,12,247,2,3
	.word	10951
	.byte	31
	.byte	'Ifx_CCU6_MCMCTR_Bits',0,12,132,3,3
	.word	16133
	.byte	31
	.byte	'Ifx_CCU6_MCMOUT_Bits',0,12,143,3,3
	.word	15958
	.byte	31
	.byte	'Ifx_CCU6_MCMOUTS_Bits',0,12,156,3,3
	.word	15734
	.byte	31
	.byte	'Ifx_CCU6_MODCTR_Bits',0,12,168,3,3
	.word	15160
	.byte	31
	.byte	'Ifx_CCU6_MOSEL_Bits',0,12,177,3,3
	.word	11212
	.byte	31
	.byte	'Ifx_CCU6_OCS_Bits',0,12,190,3,3
	.word	18689
	.byte	31
	.byte	'Ifx_CCU6_PISEL0_Bits',0,12,204,3,3
	.word	11362
	.byte	31
	.byte	'Ifx_CCU6_PISEL2_Bits',0,12,215,3,3
	.word	11598
	.byte	31
	.byte	'Ifx_CCU6_PSLR_Bits',0,12,224,3,3
	.word	15591
	.byte	31
	.byte	'Ifx_CCU6_T12_Bits',0,12,231,3,3
	.word	11932
	.byte	31
	.byte	'Ifx_CCU6_T12DTC_Bits',0,12,245,3,3
	.word	12146
	.byte	31
	.byte	'Ifx_CCU6_T12MSEL_Bits',0,12,128,4,3
	.word	14132
	.byte	31
	.byte	'Ifx_CCU6_T12PR_Bits',0,12,135,4,3
	.word	12038
	.byte	31
	.byte	'Ifx_CCU6_T13_Bits',0,12,142,4,3
	.word	13005
	.byte	31
	.byte	'Ifx_CCU6_T13PR_Bits',0,12,149,4,3
	.word	13111
	.byte	31
	.byte	'Ifx_CCU6_TCTR0_Bits',0,12,165,4,3
	.word	14312
	.byte	31
	.byte	'Ifx_CCU6_TCTR2_Bits',0,12,178,4,3
	.word	14572
	.byte	31
	.byte	'Ifx_CCU6_TCTR4_Bits',0,12,199,4,3
	.word	14795
	.byte	31
	.byte	'Ifx_CCU6_TRPCTR_Bits',0,12,212,4,3
	.word	15372
	.byte	31
	.byte	'Ifx_CCU6_ACCEN0',0,12,225,4,3
	.word	19852
	.byte	31
	.byte	'Ifx_CCU6_ACCEN1',0,12,233,4,3
	.word	19282
	.byte	31
	.byte	'Ifx_CCU6_CC60R',0,12,241,4,3
	.word	12437
	.byte	31
	.byte	'Ifx_CCU6_CC60SR',0,12,249,4,3
	.word	12753
	.byte	31
	.byte	'Ifx_CCU6_CC61R',0,12,129,5,3
	.word	12542
	.byte	31
	.byte	'Ifx_CCU6_CC61SR',0,12,137,5,3
	.word	12859
	.byte	31
	.byte	'Ifx_CCU6_CC62R',0,12,145,5,3
	.word	12647
	.byte	31
	.byte	'Ifx_CCU6_CC62SR',0,12,153,5,3
	.word	12965
	.byte	31
	.byte	'Ifx_CCU6_CC63R',0,12,161,5,3
	.word	13285
	.byte	31
	.byte	'Ifx_CCU6_CC63SR',0,12,169,5,3
	.word	13392
	.byte	31
	.byte	'Ifx_CCU6_CLC',0,12,177,5,3
	.word	10911
	.byte	31
	.byte	'Ifx_CCU6_CMPMODIF',0,12,185,5,3
	.word	14092
	.byte	31
	.byte	'Ifx_CCU6_CMPSTAT',0,12,193,5,3
	.word	13787
	.byte	31
	.byte	'Ifx_CCU6_ID',0,12,201,5,3
	.word	11172
	.byte	31
	.byte	'Ifx_CCU6_IEN',0,12,209,5,3
	.word	18640
	.byte	31
	.byte	'Ifx_CCU6_IMON',0,12,217,5,3
	.word	16590
	.byte	31
	.byte	'Ifx_CCU6_INP',0,12,225,5,3
	.word	18251
	.byte	31
	.byte	'Ifx_CCU6_IS',0,12,233,5,3
	.word	17292
	.byte	31
	.byte	'Ifx_CCU6_ISR',0,12,241,5,3
	.word	18033
	.byte	31
	.byte	'Ifx_CCU6_ISS',0,12,249,5,3
	.word	17659
	.byte	31
	.byte	'Ifx_CCU6_KRST0',0,12,129,6,3
	.word	19192
	.byte	31
	.byte	'Ifx_CCU6_KRST1',0,12,137,6,3
	.word	19068
	.byte	31
	.byte	'Ifx_CCU6_KRSTCLR',0,12,145,6,3
	.word	18963
	.byte	31
	.byte	'Ifx_CCU6_KSCSR',0,12,153,6,3
	.word	11892
	.byte	31
	.byte	'Ifx_CCU6_LI',0,12,161,6,3
	.word	16935
	.byte	31
	.byte	'Ifx_CCU6_MCFG',0,12,169,6,3
	.word	11045
	.byte	31
	.byte	'Ifx_CCU6_MCMCTR',0,12,177,6,3
	.word	16317
	.byte	31
	.byte	'Ifx_CCU6_MCMOUT',0,12,185,6,3
	.word	16093
	.byte	31
	.byte	'Ifx_CCU6_MCMOUTS',0,12,193,6,3
	.word	15918
	.byte	31
	.byte	'Ifx_CCU6_MODCTR',0,12,201,6,3
	.word	15332
	.byte	31
	.byte	'Ifx_CCU6_MOSEL',0,12,209,6,3
	.word	11322
	.byte	31
	.byte	'Ifx_CCU6_OCS',0,12,217,6,3
	.word	18856
	.byte	31
	.byte	'Ifx_CCU6_PISEL0',0,12,225,6,3
	.word	11558
	.byte	31
	.byte	'Ifx_CCU6_PISEL2',0,12,233,6,3
	.word	11742
	.byte	31
	.byte	'Ifx_CCU6_PSLR',0,12,241,6,3
	.word	15694
	.byte	31
	.byte	'Ifx_CCU6_T12',0,12,249,6,3
	.word	11998
	.byte	31
	.byte	'Ifx_CCU6_T12DTC',0,12,129,7,3
	.word	12332
	.byte	31
	.byte	'Ifx_CCU6_T12MSEL',0,12,137,7,3
	.word	14272
	.byte	31
	.byte	'Ifx_CCU6_T12PR',0,12,145,7,3
	.word	12106
	.byte	31
	.byte	'Ifx_CCU6_T13',0,12,153,7,3
	.word	13071
	.byte	31
	.byte	'Ifx_CCU6_T13PR',0,12,161,7,3
	.word	13179
	.byte	31
	.byte	'Ifx_CCU6_TCTR0',0,12,169,7,3
	.word	14532
	.byte	31
	.byte	'Ifx_CCU6_TCTR2',0,12,177,7,3
	.word	14755
	.byte	31
	.byte	'Ifx_CCU6_TCTR4',0,12,185,7,3
	.word	15120
	.byte	31
	.byte	'Ifx_CCU6_TRPCTR',0,12,193,7,3
	.word	15551
	.byte	10
	.word	19892
	.byte	31
	.byte	'Ifx_CCU6',0,12,130,8,3
	.word	27258
	.byte	31
	.byte	'IfxCcu6_Index',0,14,88,3
	.word	24340
	.byte	31
	.byte	'IfxCcu6_TrigOut',0,14,95,3
	.word	22824
	.byte	31
	.byte	'IfxCcu6_TrigSel',0,14,105,3
	.word	22890
	.byte	18,16
	.word	24823
	.byte	19,1,0,20
	.word	27351
	.byte	33
	.byte	'IfxCcu6_cfg_indexMap',0,14,111,41
	.word	27360
	.byte	1,1,15,19,69,9,1,16
	.byte	'IfxSrc_Tos_cpu0',0,0,16
	.byte	'IfxSrc_Tos_cpu1',0,1,16
	.byte	'IfxSrc_Tos_dma',0,3,0,31
	.byte	'IfxSrc_Tos',0,19,74,3
	.word	27396
	.byte	31
	.byte	'Ifx_SRC_SRCR_Bits',0,4,62,3
	.word	551
	.byte	31
	.byte	'Ifx_SRC_SRCR',0,4,75,3
	.word	841
	.byte	11
	.byte	'_Ifx_SRC_AGBT',0,4,86,25,4,14
	.byte	'SR',0
	.word	841
	.byte	4,2,35,0,0,10
	.word	27521
	.byte	31
	.byte	'Ifx_SRC_AGBT',0,4,89,3
	.word	27553
	.byte	11
	.byte	'_Ifx_SRC_ASCLIN',0,4,92,25,12,14
	.byte	'TX',0
	.word	841
	.byte	4,2,35,0,14
	.byte	'RX',0
	.word	841
	.byte	4,2,35,4,14
	.byte	'ERR',0
	.word	841
	.byte	4,2,35,8,0,10
	.word	27579
	.byte	31
	.byte	'Ifx_SRC_ASCLIN',0,4,97,3
	.word	27638
	.byte	11
	.byte	'_Ifx_SRC_BCUSPB',0,4,100,25,4,14
	.byte	'SBSRC',0
	.word	841
	.byte	4,2,35,0,0,10
	.word	27666
	.byte	31
	.byte	'Ifx_SRC_BCUSPB',0,4,103,3
	.word	27703
	.byte	18,64
	.word	841
	.byte	19,15,0,11
	.byte	'_Ifx_SRC_CAN',0,4,106,25,64,14
	.byte	'INT',0
	.word	27731
	.byte	64,2,35,0,0,10
	.word	27740
	.byte	31
	.byte	'Ifx_SRC_CAN',0,4,109,3
	.word	27772
	.byte	11
	.byte	'_Ifx_SRC_CCU6',0,4,112,25,16,14
	.byte	'SR0',0
	.word	841
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	841
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	841
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	841
	.byte	4,2,35,12,0,10
	.word	27797
	.byte	31
	.byte	'Ifx_SRC_CCU6',0,4,118,3
	.word	27869
	.byte	18,8
	.word	841
	.byte	19,1,0,11
	.byte	'_Ifx_SRC_CERBERUS',0,4,121,25,8,14
	.byte	'SR',0
	.word	27895
	.byte	8,2,35,0,0,10
	.word	27904
	.byte	31
	.byte	'Ifx_SRC_CERBERUS',0,4,124,3
	.word	27940
	.byte	11
	.byte	'_Ifx_SRC_CIF',0,4,127,25,16,14
	.byte	'MI',0
	.word	841
	.byte	4,2,35,0,14
	.byte	'MIEP',0
	.word	841
	.byte	4,2,35,4,14
	.byte	'ISP',0
	.word	841
	.byte	4,2,35,8,14
	.byte	'MJPEG',0
	.word	841
	.byte	4,2,35,12,0,10
	.word	27970
	.byte	31
	.byte	'Ifx_SRC_CIF',0,4,133,1,3
	.word	28043
	.byte	11
	.byte	'_Ifx_SRC_CPU',0,4,136,1,25,4,14
	.byte	'SBSRC',0
	.word	841
	.byte	4,2,35,0,0,10
	.word	28069
	.byte	31
	.byte	'Ifx_SRC_CPU',0,4,139,1,3
	.word	28104
	.byte	18,192,1
	.word	841
	.byte	19,47,0,11
	.byte	'_Ifx_SRC_DMA',0,4,142,1,25,208,1,14
	.byte	'ERR',0
	.word	841
	.byte	4,2,35,0,14
	.byte	'reserved_4',0
	.word	5431
	.byte	12,2,35,4,14
	.byte	'CH',0
	.word	28130
	.byte	192,1,2,35,16,0,10
	.word	28140
	.byte	31
	.byte	'Ifx_SRC_DMA',0,4,147,1,3
	.word	28207
	.byte	11
	.byte	'_Ifx_SRC_DSADC',0,4,150,1,25,8,14
	.byte	'SRM',0
	.word	841
	.byte	4,2,35,0,14
	.byte	'SRA',0
	.word	841
	.byte	4,2,35,4,0,10
	.word	28233
	.byte	31
	.byte	'Ifx_SRC_DSADC',0,4,154,1,3
	.word	28281
	.byte	11
	.byte	'_Ifx_SRC_EMEM',0,4,157,1,25,4,14
	.byte	'SR',0
	.word	841
	.byte	4,2,35,0,0,10
	.word	28309
	.byte	31
	.byte	'Ifx_SRC_EMEM',0,4,160,1,3
	.word	28342
	.byte	18,40
	.word	534
	.byte	19,39,0,11
	.byte	'_Ifx_SRC_ERAY',0,4,163,1,25,80,14
	.byte	'INT',0
	.word	27895
	.byte	8,2,35,0,14
	.byte	'TINT',0
	.word	27895
	.byte	8,2,35,8,14
	.byte	'NDAT',0
	.word	27895
	.byte	8,2,35,16,14
	.byte	'MBSC',0
	.word	27895
	.byte	8,2,35,24,14
	.byte	'OBUSY',0
	.word	841
	.byte	4,2,35,32,14
	.byte	'IBUSY',0
	.word	841
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	28369
	.byte	40,2,35,40,0,10
	.word	28378
	.byte	31
	.byte	'Ifx_SRC_ERAY',0,4,172,1,3
	.word	28505
	.byte	11
	.byte	'_Ifx_SRC_ETH',0,4,175,1,25,4,14
	.byte	'SR',0
	.word	841
	.byte	4,2,35,0,0,10
	.word	28532
	.byte	31
	.byte	'Ifx_SRC_ETH',0,4,178,1,3
	.word	28564
	.byte	11
	.byte	'_Ifx_SRC_FCE',0,4,181,1,25,4,14
	.byte	'SR',0
	.word	841
	.byte	4,2,35,0,0,10
	.word	28590
	.byte	31
	.byte	'Ifx_SRC_FCE',0,4,184,1,3
	.word	28622
	.byte	11
	.byte	'_Ifx_SRC_FFT',0,4,187,1,25,12,14
	.byte	'DONE',0
	.word	841
	.byte	4,2,35,0,14
	.byte	'ERR',0
	.word	841
	.byte	4,2,35,4,14
	.byte	'RFS',0
	.word	841
	.byte	4,2,35,8,0,10
	.word	28648
	.byte	31
	.byte	'Ifx_SRC_FFT',0,4,192,1,3
	.word	28708
	.byte	18,16
	.word	534
	.byte	19,15,0,11
	.byte	'_Ifx_SRC_GPSR',0,4,195,1,25,32,14
	.byte	'SR0',0
	.word	841
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	841
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	841
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	841
	.byte	4,2,35,12,14
	.byte	'reserved_10',0
	.word	28734
	.byte	16,2,35,16,0,10
	.word	28743
	.byte	31
	.byte	'Ifx_SRC_GPSR',0,4,202,1,3
	.word	28837
	.byte	11
	.byte	'_Ifx_SRC_GPT12',0,4,205,1,25,48,14
	.byte	'CIRQ',0
	.word	841
	.byte	4,2,35,0,14
	.byte	'T2',0
	.word	841
	.byte	4,2,35,4,14
	.byte	'T3',0
	.word	841
	.byte	4,2,35,8,14
	.byte	'T4',0
	.word	841
	.byte	4,2,35,12,14
	.byte	'T5',0
	.word	841
	.byte	4,2,35,16,14
	.byte	'T6',0
	.word	841
	.byte	4,2,35,20,14
	.byte	'reserved_18',0
	.word	4462
	.byte	24,2,35,24,0,10
	.word	28864
	.byte	31
	.byte	'Ifx_SRC_GPT12',0,4,214,1,3
	.word	28981
	.byte	18,12
	.word	841
	.byte	19,2,0,18,32
	.word	841
	.byte	19,7,0,18,32
	.word	29018
	.byte	19,0,0,18,88
	.word	534
	.byte	19,87,0,18,108
	.word	841
	.byte	19,26,0,18,96
	.word	534
	.byte	19,95,0,18,96
	.word	29018
	.byte	19,2,0,18,160,3
	.word	534
	.byte	19,159,3,0,18,64
	.word	29018
	.byte	19,1,0,18,192,3
	.word	534
	.byte	19,191,3,0,18,16
	.word	841
	.byte	19,3,0,18,64
	.word	29103
	.byte	19,3,0,18,192,2
	.word	534
	.byte	19,191,2,0,11
	.byte	'_Ifx_SRC_GTM',0,4,217,1,25,204,18,14
	.byte	'AEIIRQ',0
	.word	841
	.byte	4,2,35,0,14
	.byte	'ARUIRQ',0
	.word	29009
	.byte	12,2,35,4,14
	.byte	'reserved_10',0
	.word	3272
	.byte	4,2,35,16,14
	.byte	'BRCIRQ',0
	.word	841
	.byte	4,2,35,20,14
	.byte	'CMPIRQ',0
	.word	841
	.byte	4,2,35,24,14
	.byte	'SPEIRQ',0
	.word	27895
	.byte	8,2,35,28,14
	.byte	'reserved_24',0
	.word	5091
	.byte	8,2,35,36,14
	.byte	'PSM',0
	.word	29027
	.byte	32,2,35,44,14
	.byte	'reserved_4C',0
	.word	29036
	.byte	88,2,35,76,14
	.byte	'DPLL',0
	.word	29045
	.byte	108,3,35,164,1,14
	.byte	'reserved_110',0
	.word	29054
	.byte	96,3,35,144,2,14
	.byte	'ERR',0
	.word	841
	.byte	4,3,35,240,2,14
	.byte	'reserved_174',0
	.word	5431
	.byte	12,3,35,244,2,14
	.byte	'TIM',0
	.word	29063
	.byte	96,3,35,128,3,14
	.byte	'reserved_1E0',0
	.word	29072
	.byte	160,3,3,35,224,3,14
	.byte	'MCS',0
	.word	29063
	.byte	96,3,35,128,7,14
	.byte	'reserved_3E0',0
	.word	29072
	.byte	160,3,3,35,224,7,14
	.byte	'TOM',0
	.word	29083
	.byte	64,3,35,128,11,14
	.byte	'reserved_5C0',0
	.word	29092
	.byte	192,3,3,35,192,11,14
	.byte	'ATOM',0
	.word	29112
	.byte	64,3,35,128,15,14
	.byte	'reserved_7C0',0
	.word	29121
	.byte	192,2,3,35,192,15,14
	.byte	'MCSW0',0
	.word	29009
	.byte	12,3,35,128,18,14
	.byte	'reserved_90C',0
	.word	18680
	.byte	52,3,35,140,18,14
	.byte	'MCSW1',0
	.word	29009
	.byte	12,3,35,192,18,0,10
	.word	29132
	.byte	31
	.byte	'Ifx_SRC_GTM',0,4,243,1,3
	.word	29592
	.byte	11
	.byte	'_Ifx_SRC_HSCT',0,4,246,1,25,4,14
	.byte	'SR',0
	.word	841
	.byte	4,2,35,0,0,10
	.word	29618
	.byte	31
	.byte	'Ifx_SRC_HSCT',0,4,249,1,3
	.word	29651
	.byte	11
	.byte	'_Ifx_SRC_HSSL',0,4,252,1,25,16,14
	.byte	'COK',0
	.word	841
	.byte	4,2,35,0,14
	.byte	'RDI',0
	.word	841
	.byte	4,2,35,4,14
	.byte	'ERR',0
	.word	841
	.byte	4,2,35,8,14
	.byte	'TRG',0
	.word	841
	.byte	4,2,35,12,0,10
	.word	29678
	.byte	31
	.byte	'Ifx_SRC_HSSL',0,4,130,2,3
	.word	29751
	.byte	18,56
	.word	534
	.byte	19,55,0,11
	.byte	'_Ifx_SRC_I2C',0,4,133,2,25,80,14
	.byte	'BREQ',0
	.word	841
	.byte	4,2,35,0,14
	.byte	'LBREQ',0
	.word	841
	.byte	4,2,35,4,14
	.byte	'SREQ',0
	.word	841
	.byte	4,2,35,8,14
	.byte	'LSREQ',0
	.word	841
	.byte	4,2,35,12,14
	.byte	'ERR',0
	.word	841
	.byte	4,2,35,16,14
	.byte	'P',0
	.word	841
	.byte	4,2,35,20,14
	.byte	'reserved_18',0
	.word	29778
	.byte	56,2,35,24,0,10
	.word	29787
	.byte	31
	.byte	'Ifx_SRC_I2C',0,4,142,2,3
	.word	29910
	.byte	11
	.byte	'_Ifx_SRC_LMU',0,4,145,2,25,4,14
	.byte	'SR',0
	.word	841
	.byte	4,2,35,0,0,10
	.word	29936
	.byte	31
	.byte	'Ifx_SRC_LMU',0,4,148,2,3
	.word	29968
	.byte	11
	.byte	'_Ifx_SRC_MSC',0,4,151,2,25,20,14
	.byte	'SR0',0
	.word	841
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	841
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	841
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	841
	.byte	4,2,35,12,14
	.byte	'SR4',0
	.word	841
	.byte	4,2,35,16,0,10
	.word	29994
	.byte	31
	.byte	'Ifx_SRC_MSC',0,4,158,2,3
	.word	30079
	.byte	11
	.byte	'_Ifx_SRC_PMU',0,4,161,2,25,4,14
	.byte	'SR',0
	.word	841
	.byte	4,2,35,0,0,10
	.word	30105
	.byte	31
	.byte	'Ifx_SRC_PMU',0,4,164,2,3
	.word	30137
	.byte	11
	.byte	'_Ifx_SRC_PSI5',0,4,167,2,25,32,14
	.byte	'SR',0
	.word	29018
	.byte	32,2,35,0,0,10
	.word	30163
	.byte	31
	.byte	'Ifx_SRC_PSI5',0,4,170,2,3
	.word	30196
	.byte	11
	.byte	'_Ifx_SRC_PSI5S',0,4,173,2,25,32,14
	.byte	'SR',0
	.word	29018
	.byte	32,2,35,0,0,10
	.word	30223
	.byte	31
	.byte	'Ifx_SRC_PSI5S',0,4,176,2,3
	.word	30257
	.byte	11
	.byte	'_Ifx_SRC_QSPI',0,4,179,2,25,24,14
	.byte	'TX',0
	.word	841
	.byte	4,2,35,0,14
	.byte	'RX',0
	.word	841
	.byte	4,2,35,4,14
	.byte	'ERR',0
	.word	841
	.byte	4,2,35,8,14
	.byte	'PT',0
	.word	841
	.byte	4,2,35,12,14
	.byte	'HC',0
	.word	841
	.byte	4,2,35,16,14
	.byte	'U',0
	.word	841
	.byte	4,2,35,20,0,10
	.word	30285
	.byte	31
	.byte	'Ifx_SRC_QSPI',0,4,187,2,3
	.word	30378
	.byte	11
	.byte	'_Ifx_SRC_SCR',0,4,190,2,25,4,14
	.byte	'SR',0
	.word	841
	.byte	4,2,35,0,0,10
	.word	30405
	.byte	31
	.byte	'Ifx_SRC_SCR',0,4,193,2,3
	.word	30437
	.byte	11
	.byte	'_Ifx_SRC_SCU',0,4,196,2,25,20,14
	.byte	'DTS',0
	.word	841
	.byte	4,2,35,0,14
	.byte	'ERU',0
	.word	29103
	.byte	16,2,35,4,0,10
	.word	30463
	.byte	31
	.byte	'Ifx_SRC_SCU',0,4,200,2,3
	.word	30509
	.byte	18,24
	.word	841
	.byte	19,5,0,11
	.byte	'_Ifx_SRC_SENT',0,4,203,2,25,24,14
	.byte	'SR',0
	.word	30535
	.byte	24,2,35,0,0,10
	.word	30544
	.byte	31
	.byte	'Ifx_SRC_SENT',0,4,206,2,3
	.word	30577
	.byte	11
	.byte	'_Ifx_SRC_SMU',0,4,209,2,25,12,14
	.byte	'SR',0
	.word	29009
	.byte	12,2,35,0,0,10
	.word	30604
	.byte	31
	.byte	'Ifx_SRC_SMU',0,4,212,2,3
	.word	30636
	.byte	11
	.byte	'_Ifx_SRC_STM',0,4,215,2,25,8,14
	.byte	'SR0',0
	.word	841
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	841
	.byte	4,2,35,4,0,10
	.word	30662
	.byte	31
	.byte	'Ifx_SRC_STM',0,4,219,2,3
	.word	30708
	.byte	11
	.byte	'_Ifx_SRC_VADCCG',0,4,222,2,25,16,14
	.byte	'SR0',0
	.word	841
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	841
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	841
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	841
	.byte	4,2,35,12,0,10
	.word	30734
	.byte	31
	.byte	'Ifx_SRC_VADCCG',0,4,228,2,3
	.word	30809
	.byte	11
	.byte	'_Ifx_SRC_VADCG',0,4,231,2,25,16,14
	.byte	'SR0',0
	.word	841
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	841
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	841
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	841
	.byte	4,2,35,12,0,10
	.word	30838
	.byte	31
	.byte	'Ifx_SRC_VADCG',0,4,237,2,3
	.word	30912
	.byte	11
	.byte	'_Ifx_SRC_XBAR',0,4,240,2,25,4,14
	.byte	'SRC',0
	.word	841
	.byte	4,2,35,0,0,10
	.word	30940
	.byte	31
	.byte	'Ifx_SRC_XBAR',0,4,243,2,3
	.word	30974
	.byte	18,4
	.word	27521
	.byte	19,0,0,10
	.word	31001
	.byte	11
	.byte	'_Ifx_SRC_GAGBT',0,4,128,3,25,4,14
	.byte	'AGBT',0
	.word	31010
	.byte	4,2,35,0,0,10
	.word	31015
	.byte	31
	.byte	'Ifx_SRC_GAGBT',0,4,131,3,3
	.word	31051
	.byte	18,48
	.word	27579
	.byte	19,3,0,10
	.word	31079
	.byte	11
	.byte	'_Ifx_SRC_GASCLIN',0,4,134,3,25,48,14
	.byte	'ASCLIN',0
	.word	31088
	.byte	48,2,35,0,0,10
	.word	31093
	.byte	31
	.byte	'Ifx_SRC_GASCLIN',0,4,137,3,3
	.word	31133
	.byte	10
	.word	27666
	.byte	11
	.byte	'_Ifx_SRC_GBCU',0,4,140,3,25,4,14
	.byte	'SPB',0
	.word	31163
	.byte	4,2,35,0,0,10
	.word	31168
	.byte	31
	.byte	'Ifx_SRC_GBCU',0,4,143,3,3
	.word	31202
	.byte	18,64
	.word	27740
	.byte	19,0,0,10
	.word	31229
	.byte	11
	.byte	'_Ifx_SRC_GCAN',0,4,146,3,25,64,14
	.byte	'CAN',0
	.word	31238
	.byte	64,2,35,0,0,10
	.word	31243
	.byte	31
	.byte	'Ifx_SRC_GCAN',0,4,149,3,3
	.word	31277
	.byte	18,32
	.word	27797
	.byte	19,1,0,10
	.word	31304
	.byte	11
	.byte	'_Ifx_SRC_GCCU6',0,4,152,3,25,32,14
	.byte	'CCU6',0
	.word	31313
	.byte	32,2,35,0,0,10
	.word	31318
	.byte	31
	.byte	'Ifx_SRC_GCCU6',0,4,155,3,3
	.word	31354
	.byte	10
	.word	27904
	.byte	11
	.byte	'_Ifx_SRC_GCERBERUS',0,4,158,3,25,8,14
	.byte	'CERBERUS',0
	.word	31382
	.byte	8,2,35,0,0,10
	.word	31387
	.byte	31
	.byte	'Ifx_SRC_GCERBERUS',0,4,161,3,3
	.word	31431
	.byte	18,16
	.word	27970
	.byte	19,0,0,10
	.word	31463
	.byte	11
	.byte	'_Ifx_SRC_GCIF',0,4,164,3,25,16,14
	.byte	'CIF',0
	.word	31472
	.byte	16,2,35,0,0,10
	.word	31477
	.byte	31
	.byte	'Ifx_SRC_GCIF',0,4,167,3,3
	.word	31511
	.byte	18,8
	.word	28069
	.byte	19,1,0,10
	.word	31538
	.byte	11
	.byte	'_Ifx_SRC_GCPU',0,4,170,3,25,8,14
	.byte	'CPU',0
	.word	31547
	.byte	8,2,35,0,0,10
	.word	31552
	.byte	31
	.byte	'Ifx_SRC_GCPU',0,4,173,3,3
	.word	31586
	.byte	18,208,1
	.word	28140
	.byte	19,0,0,10
	.word	31613
	.byte	11
	.byte	'_Ifx_SRC_GDMA',0,4,176,3,25,208,1,14
	.byte	'DMA',0
	.word	31623
	.byte	208,1,2,35,0,0,10
	.word	31628
	.byte	31
	.byte	'Ifx_SRC_GDMA',0,4,179,3,3
	.word	31664
	.byte	10
	.word	28233
	.byte	10
	.word	28233
	.byte	10
	.word	28233
	.byte	11
	.byte	'_Ifx_SRC_GDSADC',0,4,182,3,25,32,14
	.byte	'DSADC0',0
	.word	31691
	.byte	8,2,35,0,14
	.byte	'reserved_8',0
	.word	5091
	.byte	8,2,35,8,14
	.byte	'DSADC2',0
	.word	31696
	.byte	8,2,35,16,14
	.byte	'DSADC3',0
	.word	31701
	.byte	8,2,35,24,0,10
	.word	31706
	.byte	31
	.byte	'Ifx_SRC_GDSADC',0,4,188,3,3
	.word	31797
	.byte	18,4
	.word	28309
	.byte	19,0,0,10
	.word	31826
	.byte	11
	.byte	'_Ifx_SRC_GEMEM',0,4,191,3,25,4,14
	.byte	'EMEM',0
	.word	31835
	.byte	4,2,35,0,0,10
	.word	31840
	.byte	31
	.byte	'Ifx_SRC_GEMEM',0,4,194,3,3
	.word	31876
	.byte	18,80
	.word	28378
	.byte	19,0,0,10
	.word	31904
	.byte	11
	.byte	'_Ifx_SRC_GERAY',0,4,197,3,25,80,14
	.byte	'ERAY',0
	.word	31913
	.byte	80,2,35,0,0,10
	.word	31918
	.byte	31
	.byte	'Ifx_SRC_GERAY',0,4,200,3,3
	.word	31954
	.byte	18,4
	.word	28532
	.byte	19,0,0,10
	.word	31982
	.byte	11
	.byte	'_Ifx_SRC_GETH',0,4,203,3,25,4,14
	.byte	'ETH',0
	.word	31991
	.byte	4,2,35,0,0,10
	.word	31996
	.byte	31
	.byte	'Ifx_SRC_GETH',0,4,206,3,3
	.word	32030
	.byte	18,4
	.word	28590
	.byte	19,0,0,10
	.word	32057
	.byte	11
	.byte	'_Ifx_SRC_GFCE',0,4,209,3,25,4,14
	.byte	'FCE',0
	.word	32066
	.byte	4,2,35,0,0,10
	.word	32071
	.byte	31
	.byte	'Ifx_SRC_GFCE',0,4,212,3,3
	.word	32105
	.byte	18,12
	.word	28648
	.byte	19,0,0,10
	.word	32132
	.byte	11
	.byte	'_Ifx_SRC_GFFT',0,4,215,3,25,12,14
	.byte	'FFT',0
	.word	32141
	.byte	12,2,35,0,0,10
	.word	32146
	.byte	31
	.byte	'Ifx_SRC_GFFT',0,4,218,3,3
	.word	32180
	.byte	18,64
	.word	28743
	.byte	19,1,0,10
	.word	32207
	.byte	11
	.byte	'_Ifx_SRC_GGPSR',0,4,221,3,25,64,14
	.byte	'GPSR',0
	.word	32216
	.byte	64,2,35,0,0,10
	.word	32221
	.byte	31
	.byte	'Ifx_SRC_GGPSR',0,4,224,3,3
	.word	32257
	.byte	18,48
	.word	28864
	.byte	19,0,0,10
	.word	32285
	.byte	11
	.byte	'_Ifx_SRC_GGPT12',0,4,227,3,25,48,14
	.byte	'GPT12',0
	.word	32294
	.byte	48,2,35,0,0,10
	.word	32299
	.byte	31
	.byte	'Ifx_SRC_GGPT12',0,4,230,3,3
	.word	32337
	.byte	18,204,18
	.word	29132
	.byte	19,0,0,10
	.word	32366
	.byte	11
	.byte	'_Ifx_SRC_GGTM',0,4,233,3,25,204,18,14
	.byte	'GTM',0
	.word	32376
	.byte	204,18,2,35,0,0,10
	.word	32381
	.byte	31
	.byte	'Ifx_SRC_GGTM',0,4,236,3,3
	.word	32417
	.byte	18,4
	.word	29618
	.byte	19,0,0,10
	.word	32444
	.byte	11
	.byte	'_Ifx_SRC_GHSCT',0,4,239,3,25,4,14
	.byte	'HSCT',0
	.word	32453
	.byte	4,2,35,0,0,10
	.word	32458
	.byte	31
	.byte	'Ifx_SRC_GHSCT',0,4,242,3,3
	.word	32494
	.byte	18,64
	.word	29678
	.byte	19,3,0,10
	.word	32522
	.byte	11
	.byte	'_Ifx_SRC_GHSSL',0,4,245,3,25,68,14
	.byte	'HSSL',0
	.word	32531
	.byte	64,2,35,0,14
	.byte	'EXI',0
	.word	841
	.byte	4,2,35,64,0,10
	.word	32536
	.byte	31
	.byte	'Ifx_SRC_GHSSL',0,4,249,3,3
	.word	32585
	.byte	18,80
	.word	29787
	.byte	19,0,0,10
	.word	32613
	.byte	11
	.byte	'_Ifx_SRC_GI2C',0,4,252,3,25,80,14
	.byte	'I2C',0
	.word	32622
	.byte	80,2,35,0,0,10
	.word	32627
	.byte	31
	.byte	'Ifx_SRC_GI2C',0,4,255,3,3
	.word	32661
	.byte	18,4
	.word	29936
	.byte	19,0,0,10
	.word	32688
	.byte	11
	.byte	'_Ifx_SRC_GLMU',0,4,130,4,25,4,14
	.byte	'LMU',0
	.word	32697
	.byte	4,2,35,0,0,10
	.word	32702
	.byte	31
	.byte	'Ifx_SRC_GLMU',0,4,133,4,3
	.word	32736
	.byte	18,40
	.word	29994
	.byte	19,1,0,10
	.word	32763
	.byte	11
	.byte	'_Ifx_SRC_GMSC',0,4,136,4,25,40,14
	.byte	'MSC',0
	.word	32772
	.byte	40,2,35,0,0,10
	.word	32777
	.byte	31
	.byte	'Ifx_SRC_GMSC',0,4,139,4,3
	.word	32811
	.byte	18,8
	.word	30105
	.byte	19,1,0,10
	.word	32838
	.byte	11
	.byte	'_Ifx_SRC_GPMU',0,4,142,4,25,8,14
	.byte	'PMU',0
	.word	32847
	.byte	8,2,35,0,0,10
	.word	32852
	.byte	31
	.byte	'Ifx_SRC_GPMU',0,4,145,4,3
	.word	32886
	.byte	18,32
	.word	30163
	.byte	19,0,0,10
	.word	32913
	.byte	11
	.byte	'_Ifx_SRC_GPSI5',0,4,148,4,25,32,14
	.byte	'PSI5',0
	.word	32922
	.byte	32,2,35,0,0,10
	.word	32927
	.byte	31
	.byte	'Ifx_SRC_GPSI5',0,4,151,4,3
	.word	32963
	.byte	18,32
	.word	30223
	.byte	19,0,0,10
	.word	32991
	.byte	11
	.byte	'_Ifx_SRC_GPSI5S',0,4,154,4,25,32,14
	.byte	'PSI5S',0
	.word	33000
	.byte	32,2,35,0,0,10
	.word	33005
	.byte	31
	.byte	'Ifx_SRC_GPSI5S',0,4,157,4,3
	.word	33043
	.byte	18,96
	.word	30285
	.byte	19,3,0,10
	.word	33072
	.byte	11
	.byte	'_Ifx_SRC_GQSPI',0,4,160,4,25,96,14
	.byte	'QSPI',0
	.word	33081
	.byte	96,2,35,0,0,10
	.word	33086
	.byte	31
	.byte	'Ifx_SRC_GQSPI',0,4,163,4,3
	.word	33122
	.byte	18,4
	.word	30405
	.byte	19,0,0,10
	.word	33150
	.byte	11
	.byte	'_Ifx_SRC_GSCR',0,4,166,4,25,4,14
	.byte	'SCR',0
	.word	33159
	.byte	4,2,35,0,0,10
	.word	33164
	.byte	31
	.byte	'Ifx_SRC_GSCR',0,4,169,4,3
	.word	33198
	.byte	10
	.word	30463
	.byte	11
	.byte	'_Ifx_SRC_GSCU',0,4,172,4,25,20,14
	.byte	'SCU',0
	.word	33225
	.byte	20,2,35,0,0,10
	.word	33230
	.byte	31
	.byte	'Ifx_SRC_GSCU',0,4,175,4,3
	.word	33264
	.byte	18,24
	.word	30544
	.byte	19,0,0,10
	.word	33291
	.byte	11
	.byte	'_Ifx_SRC_GSENT',0,4,178,4,25,24,14
	.byte	'SENT',0
	.word	33300
	.byte	24,2,35,0,0,10
	.word	33305
	.byte	31
	.byte	'Ifx_SRC_GSENT',0,4,181,4,3
	.word	33341
	.byte	18,12
	.word	30604
	.byte	19,0,0,10
	.word	33369
	.byte	11
	.byte	'_Ifx_SRC_GSMU',0,4,184,4,25,12,14
	.byte	'SMU',0
	.word	33378
	.byte	12,2,35,0,0,10
	.word	33383
	.byte	31
	.byte	'Ifx_SRC_GSMU',0,4,187,4,3
	.word	33417
	.byte	18,16
	.word	30662
	.byte	19,1,0,10
	.word	33444
	.byte	11
	.byte	'_Ifx_SRC_GSTM',0,4,190,4,25,16,14
	.byte	'STM',0
	.word	33453
	.byte	16,2,35,0,0,10
	.word	33458
	.byte	31
	.byte	'Ifx_SRC_GSTM',0,4,193,4,3
	.word	33492
	.byte	18,64
	.word	30838
	.byte	19,3,0,10
	.word	33519
	.byte	18,224,1
	.word	534
	.byte	19,223,1,0,18,32
	.word	30734
	.byte	19,1,0,10
	.word	33544
	.byte	11
	.byte	'_Ifx_SRC_GVADC',0,4,196,4,25,192,2,14
	.byte	'G',0
	.word	33528
	.byte	64,2,35,0,14
	.byte	'reserved_40',0
	.word	33533
	.byte	224,1,2,35,64,14
	.byte	'CG',0
	.word	33553
	.byte	32,3,35,160,2,0,10
	.word	33558
	.byte	31
	.byte	'Ifx_SRC_GVADC',0,4,201,4,3
	.word	33627
	.byte	10
	.word	30940
	.byte	11
	.byte	'_Ifx_SRC_GXBAR',0,4,204,4,25,4,14
	.byte	'XBAR',0
	.word	33655
	.byte	4,2,35,0,0,10
	.word	33660
	.byte	31
	.byte	'Ifx_SRC_GXBAR',0,4,207,4,3
	.word	33696
	.byte	15,20,236,10,9,1,16
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,16
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,31
	.byte	'IfxScu_CCUCON0_CLKSEL',0,20,240,10,3
	.word	33724
	.byte	15,20,250,10,9,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,16
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,31
	.byte	'IfxScu_WDTCON1_IR',0,20,255,10,3
	.word	33821
	.byte	11
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,6,45,16,4,12
	.byte	'EN0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	534
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	534
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	534
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	534
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_ACCEN0_Bits',0,6,79,3
	.word	33943
	.byte	11
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,6,82,16,4,12
	.byte	'reserved_0',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_SCU_ACCEN1_Bits',0,6,85,3
	.word	34500
	.byte	11
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,6,88,16,4,12
	.byte	'STM0DIS',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'STM1DIS',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'STM2DIS',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,4
	.word	337
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,6,94,3
	.word	34577
	.byte	11
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,6,97,16,4,12
	.byte	'BAUD1DIV',0,1
	.word	534
	.byte	4,4,2,35,0,12
	.byte	'BAUD2DIV',0,1
	.word	534
	.byte	4,0,2,35,0,12
	.byte	'SRIDIV',0,1
	.word	534
	.byte	4,4,2,35,1,12
	.byte	'LPDIV',0,1
	.word	534
	.byte	4,0,2,35,1,12
	.byte	'SPBDIV',0,1
	.word	534
	.byte	4,4,2,35,2,12
	.byte	'FSI2DIV',0,1
	.word	534
	.byte	2,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	534
	.byte	2,0,2,35,2,12
	.byte	'FSIDIV',0,1
	.word	534
	.byte	2,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	534
	.byte	2,4,2,35,3,12
	.byte	'CLKSEL',0,1
	.word	534
	.byte	2,2,2,35,3,12
	.byte	'UP',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON0_Bits',0,6,111,3
	.word	34713
	.byte	11
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,6,114,16,4,12
	.byte	'CANDIV',0,1
	.word	534
	.byte	4,4,2,35,0,12
	.byte	'ERAYDIV',0,1
	.word	534
	.byte	4,0,2,35,0,12
	.byte	'STMDIV',0,1
	.word	534
	.byte	4,4,2,35,1,12
	.byte	'GTMDIV',0,1
	.word	534
	.byte	4,0,2,35,1,12
	.byte	'ETHDIV',0,1
	.word	534
	.byte	4,4,2,35,2,12
	.byte	'ASCLINFDIV',0,1
	.word	534
	.byte	4,0,2,35,2,12
	.byte	'ASCLINSDIV',0,1
	.word	534
	.byte	4,4,2,35,3,12
	.byte	'INSEL',0,1
	.word	534
	.byte	2,2,2,35,3,12
	.byte	'UP',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON1_Bits',0,6,126,3
	.word	34993
	.byte	11
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,6,129,1,16,4,12
	.byte	'BBBDIV',0,1
	.word	534
	.byte	4,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	337
	.byte	26,2,2,35,0,12
	.byte	'UP',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON2_Bits',0,6,135,1,3
	.word	35231
	.byte	11
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,6,138,1,16,4,12
	.byte	'PLLDIV',0,1
	.word	534
	.byte	6,2,2,35,0,12
	.byte	'PLLSEL',0,1
	.word	534
	.byte	2,0,2,35,0,12
	.byte	'PLLERAYDIV',0,1
	.word	534
	.byte	6,2,2,35,1,12
	.byte	'PLLERAYSEL',0,1
	.word	534
	.byte	2,0,2,35,1,12
	.byte	'SRIDIV',0,1
	.word	534
	.byte	6,2,2,35,2,12
	.byte	'SRISEL',0,1
	.word	534
	.byte	2,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	5,3,2,35,3,12
	.byte	'SLCK',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'UP',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON3_Bits',0,6,150,1,3
	.word	35359
	.byte	11
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,6,153,1,16,4,12
	.byte	'SPBDIV',0,1
	.word	534
	.byte	6,2,2,35,0,12
	.byte	'SPBSEL',0,1
	.word	534
	.byte	2,0,2,35,0,12
	.byte	'GTMDIV',0,1
	.word	534
	.byte	6,2,2,35,1,12
	.byte	'GTMSEL',0,1
	.word	534
	.byte	2,0,2,35,1,12
	.byte	'STMDIV',0,1
	.word	534
	.byte	6,2,2,35,2,12
	.byte	'STMSEL',0,1
	.word	534
	.byte	2,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	5,3,2,35,3,12
	.byte	'SLCK',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'UP',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON4_Bits',0,6,165,1,3
	.word	35602
	.byte	11
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,6,168,1,16,4,12
	.byte	'MAXDIV',0,1
	.word	534
	.byte	4,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	337
	.byte	26,2,2,35,0,12
	.byte	'UP',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON5_Bits',0,6,174,1,3
	.word	35837
	.byte	11
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,6,177,1,16,4,12
	.byte	'CPU0DIV',0,1
	.word	534
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	337
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON6_Bits',0,6,181,1,3
	.word	35965
	.byte	11
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,6,184,1,16,4,12
	.byte	'CPU1DIV',0,1
	.word	534
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	337
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON7_Bits',0,6,188,1,3
	.word	36065
	.byte	11
	.byte	'_Ifx_SCU_CHIPID_Bits',0,6,191,1,16,4,12
	.byte	'CHREV',0,1
	.word	534
	.byte	6,2,2,35,0,12
	.byte	'CHTEC',0,1
	.word	534
	.byte	2,0,2,35,0,12
	.byte	'CHID',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'EEA',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'UCODE',0,1
	.word	534
	.byte	7,0,2,35,2,12
	.byte	'FSIZE',0,1
	.word	534
	.byte	4,4,2,35,3,12
	.byte	'SP',0,1
	.word	534
	.byte	2,2,2,35,3,12
	.byte	'SEC',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CHIPID_Bits',0,6,202,1,3
	.word	36165
	.byte	11
	.byte	'_Ifx_SCU_DTSCON_Bits',0,6,205,1,16,4,12
	.byte	'PWD',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'START',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	534
	.byte	2,4,2,35,0,12
	.byte	'CAL',0,4
	.word	337
	.byte	20,8,2,35,0,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	7,1,2,35,3,12
	.byte	'SLCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_DTSCON_Bits',0,6,213,1,3
	.word	36373
	.byte	11
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,6,216,1,16,4,12
	.byte	'LOWER',0,2
	.word	1085
	.byte	10,6,2,35,0,12
	.byte	'reserved_10',0,1
	.word	534
	.byte	5,1,2,35,1,12
	.byte	'LLU',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'UPPER',0,2
	.word	1085
	.byte	10,6,2,35,2,12
	.byte	'reserved_26',0,1
	.word	534
	.byte	4,2,2,35,3,12
	.byte	'SLCK',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'UOF',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_DTSLIM_Bits',0,6,225,1,3
	.word	36538
	.byte	11
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,6,228,1,16,4,12
	.byte	'RESULT',0,2
	.word	1085
	.byte	10,6,2,35,0,12
	.byte	'reserved_10',0,1
	.word	534
	.byte	4,2,2,35,1,12
	.byte	'RDY',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'BUSY',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,6,235,1,3
	.word	36721
	.byte	11
	.byte	'_Ifx_SCU_EICR_Bits',0,6,238,1,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	4,4,2,35,0,12
	.byte	'EXIS0',0,1
	.word	534
	.byte	3,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'FEN0',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'REN0',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'LDEN0',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'EIEN0',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'INP0',0,1
	.word	534
	.byte	3,1,2,35,1,12
	.byte	'reserved_15',0,4
	.word	337
	.byte	5,12,2,35,0,12
	.byte	'EXIS1',0,1
	.word	534
	.byte	3,1,2,35,2,12
	.byte	'reserved_23',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'FEN1',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'REN1',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'LDEN1',0,1
	.word	534
	.byte	1,5,2,35,3,12
	.byte	'EIEN1',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'INP1',0,1
	.word	534
	.byte	3,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EICR_Bits',0,6,129,2,3
	.word	36875
	.byte	11
	.byte	'_Ifx_SCU_EIFR_Bits',0,6,132,2,16,4,12
	.byte	'INTF0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'INTF1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'INTF2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'INTF3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'INTF4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'INTF5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'INTF6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'INTF7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	337
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SCU_EIFR_Bits',0,6,143,2,3
	.word	37239
	.byte	11
	.byte	'_Ifx_SCU_EMSR_Bits',0,6,146,2,16,4,12
	.byte	'POL',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'MODE',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'ENON',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'PSEL',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,2
	.word	1085
	.byte	12,0,2,35,0,12
	.byte	'EMSF',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'SEMSF',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	534
	.byte	6,0,2,35,2,12
	.byte	'EMSFM',0,1
	.word	534
	.byte	2,6,2,35,3,12
	.byte	'SEMSFM',0,1
	.word	534
	.byte	2,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	534
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_EMSR_Bits',0,6,159,2,3
	.word	37450
	.byte	11
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,6,162,2,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	7,1,2,35,0,12
	.byte	'EDCON',0,2
	.word	1085
	.byte	2,7,2,35,0,12
	.byte	'reserved_9',0,4
	.word	337
	.byte	23,0,2,35,0,0,31
	.byte	'Ifx_SCU_ESRCFG_Bits',0,6,167,2,3
	.word	37702
	.byte	11
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,6,170,2,16,4,12
	.byte	'ARI',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'ARC',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	337
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_ESROCFG_Bits',0,6,175,2,3
	.word	37820
	.byte	11
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,6,178,2,16,4,12
	.byte	'reserved_0',0,4
	.word	337
	.byte	28,4,2,35,0,12
	.byte	'EVR13OFF',0,1
	.word	534
	.byte	1,3,2,35,3,12
	.byte	'BPEVR13OFF',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVR13CON_Bits',0,6,185,2,3
	.word	37931
	.byte	11
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,6,188,2,16,4,12
	.byte	'reserved_0',0,4
	.word	337
	.byte	28,4,2,35,0,12
	.byte	'EVR33OFF',0,1
	.word	534
	.byte	1,3,2,35,3,12
	.byte	'BPEVR33OFF',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVR33CON_Bits',0,6,195,2,3
	.word	38094
	.byte	11
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,6,198,2,16,4,12
	.byte	'ADC13V',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'ADC33V',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'ADCSWDV',0,1
	.word	534
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	7,1,2,35,3,12
	.byte	'VAL',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,6,205,2,3
	.word	38257
	.byte	11
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,6,208,2,16,4,12
	.byte	'DVS13TRIM',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'DVS33TRIM',0,1
	.word	534
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	7,1,2,35,3,12
	.byte	'VAL',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,6,215,2,3
	.word	38415
	.byte	11
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,6,218,2,16,4,12
	.byte	'EVR13OVMOD',0,1
	.word	534
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	534
	.byte	2,4,2,35,0,12
	.byte	'EVR13UVMOD',0,1
	.word	534
	.byte	2,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	534
	.byte	2,0,2,35,0,12
	.byte	'EVR33OVMOD',0,1
	.word	534
	.byte	2,6,2,35,1,12
	.byte	'reserved_10',0,1
	.word	534
	.byte	2,4,2,35,1,12
	.byte	'EVR33UVMOD',0,1
	.word	534
	.byte	2,2,2,35,1,12
	.byte	'reserved_14',0,1
	.word	534
	.byte	2,0,2,35,1,12
	.byte	'SWDOVMOD',0,1
	.word	534
	.byte	2,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	534
	.byte	2,4,2,35,2,12
	.byte	'SWDUVMOD',0,1
	.word	534
	.byte	2,2,2,35,2,12
	.byte	'reserved_22',0,2
	.word	1085
	.byte	10,0,2,35,2,0,31
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,6,232,2,3
	.word	38580
	.byte	11
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,6,235,2,16,4,12
	.byte	'OSCTRIM',0,2
	.word	1085
	.byte	10,6,2,35,0,12
	.byte	'OSCPTAT',0,1
	.word	534
	.byte	6,0,2,35,1,12
	.byte	'OSCANASEL',0,1
	.word	534
	.byte	4,4,2,35,2,12
	.byte	'HPBGTRIM',0,2
	.word	1085
	.byte	7,5,2,35,2,12
	.byte	'HPBGCLKEN',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'OSC3V3',0,1
	.word	534
	.byte	1,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	534
	.byte	2,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,6,245,2,3
	.word	38909
	.byte	11
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,6,248,2,16,4,12
	.byte	'EVR13OVVAL',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'EVR33OVVAL',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'SWDOVVAL',0,1
	.word	534
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVROVMON_Bits',0,6,255,2,3
	.word	39130
	.byte	11
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,6,130,3,16,4,12
	.byte	'RST13TRIM',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	337
	.byte	16,8,2,35,0,12
	.byte	'RST13OFF',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'BPRST13OFF',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'RST33OFF',0,1
	.word	534
	.byte	1,5,2,35,3,12
	.byte	'BPRST33OFF',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'RSTSWDOFF',0,1
	.word	534
	.byte	1,3,2,35,3,12
	.byte	'BPRSTSWDOFF',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,6,142,3,3
	.word	39293
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,6,145,3,16,4,12
	.byte	'SD5P',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'SD5I',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'SD5D',0,1
	.word	534
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,6,152,3,3
	.word	39565
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,6,155,3,16,4,12
	.byte	'SD33P',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'SD33I',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'SD33D',0,1
	.word	534
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,6,162,3,3
	.word	39718
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,6,165,3,16,4,12
	.byte	'CT5REG0',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'CT5REG1',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'CT5REG2',0,1
	.word	534
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,6,172,3,3
	.word	39874
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,6,175,3,16,4,12
	.byte	'CT5REG3',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'CT5REG4',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	15,1,2,35,2,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,6,181,3,3
	.word	40036
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,6,184,3,16,4,12
	.byte	'CT33REG0',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'CT33REG1',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'CT33REG2',0,1
	.word	534
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,6,191,3,3
	.word	40179
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,6,194,3,16,4,12
	.byte	'CT33REG3',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'CT33REG4',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	15,1,2,35,2,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,6,200,3,3
	.word	40344
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,6,203,3,16,4,12
	.byte	'SDFREQSPRD',0,2
	.word	1085
	.byte	16,0,2,35,0,12
	.byte	'SDFREQ',0,1
	.word	534
	.byte	8,0,2,35,2,12
	.byte	'SDSTEP',0,1
	.word	534
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	534
	.byte	2,2,2,35,3,12
	.byte	'SDSAMPLE',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,6,211,3,3
	.word	40489
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,6,214,3,16,4,12
	.byte	'DRVP',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'SDMINMAXDC',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'DRVN',0,1
	.word	534
	.byte	8,0,2,35,2,12
	.byte	'SDLUT',0,1
	.word	534
	.byte	6,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,6,222,3,3
	.word	40670
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,6,225,3,16,4,12
	.byte	'SDPWMPRE',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'SDPID',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'SDVOKLVL',0,1
	.word	534
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,6,232,3,3
	.word	40844
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,6,235,3,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'SYNCDIV',0,1
	.word	534
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	337
	.byte	20,1,2,35,0,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,6,241,3,3
	.word	41004
	.byte	11
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,6,244,3,16,4,12
	.byte	'EVR13',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'OV13',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'EVR33',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'OV33',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'OVSWD',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'UV13',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'UV33',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'UVSWD',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'EXTPASS13',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'EXTPASS33',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'BGPROK',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	337
	.byte	21,0,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,6,130,4,3
	.word	41148
	.byte	11
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,6,133,4,16,4,12
	.byte	'EVR13TRIM',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'SDVOUTSEL',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	15,1,2,35,2,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,6,139,4,3
	.word	41422
	.byte	11
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,6,142,4,16,4,12
	.byte	'EVR13UVVAL',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'EVR33UVVAL',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'SWDUVVAL',0,1
	.word	534
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,6,149,4,3
	.word	41561
	.byte	11
	.byte	'_Ifx_SCU_EXTCON_Bits',0,6,152,4,16,4,12
	.byte	'EN0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'SEL0',0,1
	.word	534
	.byte	4,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	1085
	.byte	10,0,2,35,0,12
	.byte	'EN1',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'NSEL',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'SEL1',0,1
	.word	534
	.byte	4,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	534
	.byte	2,0,2,35,2,12
	.byte	'DIV1',0,1
	.word	534
	.byte	8,0,2,35,3,0,31
	.byte	'Ifx_SCU_EXTCON_Bits',0,6,163,4,3
	.word	41724
	.byte	11
	.byte	'_Ifx_SCU_FDR_Bits',0,6,166,4,16,4,12
	.byte	'STEP',0,2
	.word	1085
	.byte	10,6,2,35,0,12
	.byte	'reserved_10',0,1
	.word	534
	.byte	4,2,2,35,1,12
	.byte	'DM',0,1
	.word	534
	.byte	2,0,2,35,1,12
	.byte	'RESULT',0,2
	.word	1085
	.byte	10,6,2,35,2,12
	.byte	'reserved_26',0,1
	.word	534
	.byte	5,1,2,35,3,12
	.byte	'DISCLK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_FDR_Bits',0,6,174,4,3
	.word	41942
	.byte	11
	.byte	'_Ifx_SCU_FMR_Bits',0,6,177,4,16,4,12
	.byte	'FS0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'FS1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'FS2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'FS3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'FS4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'FS5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'FS6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'FS7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'FC0',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'FC1',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'FC2',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'FC3',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'FC4',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'FC5',0,1
	.word	534
	.byte	1,2,2,35,2,12
	.byte	'FC6',0,1
	.word	534
	.byte	1,1,2,35,2,12
	.byte	'FC7',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	8,0,2,35,3,0,31
	.byte	'Ifx_SCU_FMR_Bits',0,6,197,4,3
	.word	42105
	.byte	11
	.byte	'_Ifx_SCU_ID_Bits',0,6,200,4,16,4,12
	.byte	'MODREV',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'MODTYPE',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'MODNUMBER',0,2
	.word	1085
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_ID_Bits',0,6,205,4,3
	.word	42441
	.byte	11
	.byte	'_Ifx_SCU_IGCR_Bits',0,6,208,4,16,4,12
	.byte	'IPEN00',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'IPEN01',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'IPEN02',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'IPEN03',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'IPEN04',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'IPEN05',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'IPEN06',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'IPEN07',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	534
	.byte	5,3,2,35,1,12
	.byte	'GEEN0',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'IGP0',0,1
	.word	534
	.byte	2,0,2,35,1,12
	.byte	'IPEN10',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'IPEN11',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'IPEN12',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'IPEN13',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'IPEN14',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'IPEN15',0,1
	.word	534
	.byte	1,2,2,35,2,12
	.byte	'IPEN16',0,1
	.word	534
	.byte	1,1,2,35,2,12
	.byte	'IPEN17',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	5,3,2,35,3,12
	.byte	'GEEN1',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'IGP1',0,1
	.word	534
	.byte	2,0,2,35,3,0,31
	.byte	'Ifx_SCU_IGCR_Bits',0,6,232,4,3
	.word	42548
	.byte	11
	.byte	'_Ifx_SCU_IN_Bits',0,6,235,4,16,4,12
	.byte	'P0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	337
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_IN_Bits',0,6,240,4,3
	.word	43000
	.byte	11
	.byte	'_Ifx_SCU_IOCR_Bits',0,6,243,4,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	4,4,2,35,0,12
	.byte	'PC0',0,1
	.word	534
	.byte	4,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	534
	.byte	4,4,2,35,1,12
	.byte	'PC1',0,1
	.word	534
	.byte	4,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_IOCR_Bits',0,6,250,4,3
	.word	43099
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,6,253,4,16,4,12
	.byte	'LBISTREQ',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'LBISTREQP',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'PATTERNS',0,2
	.word	1085
	.byte	14,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,6,131,5,3
	.word	43249
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,6,134,5,16,4,12
	.byte	'SEED',0,4
	.word	337
	.byte	23,9,2,35,0,12
	.byte	'reserved_23',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'SPLITSH',0,1
	.word	534
	.byte	3,5,2,35,3,12
	.byte	'BODY',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'LBISTFREQU',0,1
	.word	534
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,6,141,5,3
	.word	43398
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,6,144,5,16,4,12
	.byte	'SIGNATURE',0,4
	.word	337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	7,1,2,35,3,12
	.byte	'LBISTDONE',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,6,149,5,3
	.word	43559
	.byte	11
	.byte	'_Ifx_SCU_LCLCON_Bits',0,6,152,5,16,4,12
	.byte	'reserved_0',0,2
	.word	1085
	.byte	16,0,2,35,0,12
	.byte	'LS',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,2
	.word	1085
	.byte	14,1,2,35,2,12
	.byte	'LSEN',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_LCLCON_Bits',0,6,158,5,3
	.word	43689
	.byte	11
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,6,161,5,16,4,12
	.byte	'LCLT0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'LCLT1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	337
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_LCLTEST_Bits',0,6,166,5,3
	.word	43821
	.byte	11
	.byte	'_Ifx_SCU_MANID_Bits',0,6,169,5,16,4,12
	.byte	'DEPT',0,1
	.word	534
	.byte	5,3,2,35,0,12
	.byte	'MANUF',0,2
	.word	1085
	.byte	11,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_MANID_Bits',0,6,174,5,3
	.word	43936
	.byte	11
	.byte	'_Ifx_SCU_OMR_Bits',0,6,177,5,16,4,12
	.byte	'PS0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,2
	.word	1085
	.byte	14,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,2
	.word	1085
	.byte	14,0,2,35,2,0,31
	.byte	'Ifx_SCU_OMR_Bits',0,6,185,5,3
	.word	44047
	.byte	11
	.byte	'_Ifx_SCU_OSCCON_Bits',0,6,188,5,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'PLLLV',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'OSCRES',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'GAINSEL',0,1
	.word	534
	.byte	2,3,2,35,0,12
	.byte	'MODE',0,1
	.word	534
	.byte	2,1,2,35,0,12
	.byte	'SHBY',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'PLLHV',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'X1D',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'X1DEN',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	534
	.byte	4,0,2,35,1,12
	.byte	'OSCVAL',0,1
	.word	534
	.byte	5,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	534
	.byte	2,1,2,35,2,12
	.byte	'APREN',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'CAP0EN',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'CAP1EN',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'CAP2EN',0,1
	.word	534
	.byte	1,5,2,35,3,12
	.byte	'CAP3EN',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	534
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_OSCCON_Bits',0,6,209,5,3
	.word	44205
	.byte	11
	.byte	'_Ifx_SCU_OUT_Bits',0,6,212,5,16,4,12
	.byte	'P0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	337
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_OUT_Bits',0,6,217,5,3
	.word	44617
	.byte	11
	.byte	'_Ifx_SCU_OVCCON_Bits',0,6,220,5,16,4,12
	.byte	'CSEL0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'CSEL1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'CSEL2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,2
	.word	1085
	.byte	13,0,2,35,0,12
	.byte	'OVSTRT',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'OVSTP',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'DCINVAL',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	534
	.byte	5,0,2,35,2,12
	.byte	'OVCONF',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'POVCONF',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	534
	.byte	6,0,2,35,3,0,31
	.byte	'Ifx_SCU_OVCCON_Bits',0,6,233,5,3
	.word	44718
	.byte	11
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,6,236,5,16,4,12
	.byte	'OVEN0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'OVEN1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'OVEN2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,4
	.word	337
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,6,242,5,3
	.word	44985
	.byte	11
	.byte	'_Ifx_SCU_PDISC_Bits',0,6,245,5,16,4,12
	.byte	'PDIS0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'PDIS1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	337
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_PDISC_Bits',0,6,250,5,3
	.word	45121
	.byte	11
	.byte	'_Ifx_SCU_PDR_Bits',0,6,253,5,16,4,12
	.byte	'PD0',0,1
	.word	534
	.byte	3,5,2,35,0,12
	.byte	'PL0',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'PD1',0,1
	.word	534
	.byte	3,1,2,35,0,12
	.byte	'PL1',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	337
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SCU_PDR_Bits',0,6,132,6,3
	.word	45232
	.byte	11
	.byte	'_Ifx_SCU_PDRR_Bits',0,6,135,6,16,4,12
	.byte	'PDR0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'PDR1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'PDR2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'PDR3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'PDR4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'PDR5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'PDR6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'PDR7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	337
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SCU_PDRR_Bits',0,6,146,6,3
	.word	45365
	.byte	11
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,6,149,6,16,4,12
	.byte	'VCOBYP',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'VCOPWD',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'MODEN',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'SETFINDIS',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'CLRFINDIS',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'OSCDISCDIS',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,2
	.word	1085
	.byte	2,7,2,35,0,12
	.byte	'NDIV',0,1
	.word	534
	.byte	7,0,2,35,1,12
	.byte	'PLLPWD',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'RESLD',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	534
	.byte	5,0,2,35,2,12
	.byte	'PDIV',0,1
	.word	534
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	534
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_PLLCON0_Bits',0,6,166,6,3
	.word	45568
	.byte	11
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,6,169,6,16,4,12
	.byte	'K2DIV',0,1
	.word	534
	.byte	7,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'K3DIV',0,1
	.word	534
	.byte	7,1,2,35,1,12
	.byte	'reserved_15',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'K1DIV',0,1
	.word	534
	.byte	7,1,2,35,2,12
	.byte	'reserved_23',0,2
	.word	1085
	.byte	9,0,2,35,2,0,31
	.byte	'Ifx_SCU_PLLCON1_Bits',0,6,177,6,3
	.word	45924
	.byte	11
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,6,180,6,16,4,12
	.byte	'MODCFG',0,2
	.word	1085
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_PLLCON2_Bits',0,6,184,6,3
	.word	46102
	.byte	11
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,6,187,6,16,4,12
	.byte	'VCOBYP',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'VCOPWD',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	534
	.byte	2,4,2,35,0,12
	.byte	'SETFINDIS',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'CLRFINDIS',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'OSCDISCDIS',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,2
	.word	1085
	.byte	2,7,2,35,0,12
	.byte	'NDIV',0,1
	.word	534
	.byte	5,2,2,35,1,12
	.byte	'reserved_14',0,1
	.word	534
	.byte	2,0,2,35,1,12
	.byte	'PLLPWD',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'RESLD',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	534
	.byte	5,0,2,35,2,12
	.byte	'PDIV',0,1
	.word	534
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	534
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,6,204,6,3
	.word	46202
	.byte	11
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,6,207,6,16,4,12
	.byte	'K2DIV',0,1
	.word	534
	.byte	7,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'K3DIV',0,1
	.word	534
	.byte	4,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	534
	.byte	4,0,2,35,1,12
	.byte	'K1DIV',0,1
	.word	534
	.byte	7,1,2,35,2,12
	.byte	'reserved_23',0,2
	.word	1085
	.byte	9,0,2,35,2,0,31
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,6,215,6,3
	.word	46572
	.byte	11
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,6,218,6,16,4,12
	.byte	'VCOBYST',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'PWDSTAT',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'VCOLOCK',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'FINDIS',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'K1RDY',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'K2RDY',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	337
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,6,227,6,3
	.word	46758
	.byte	11
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,6,230,6,16,4,12
	.byte	'VCOBYST',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'VCOLOCK',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'FINDIS',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'K1RDY',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'K2RDY',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'MODRUN',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	337
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,6,241,6,3
	.word	46956
	.byte	11
	.byte	'_Ifx_SCU_PMCSR_Bits',0,6,244,6,16,4,12
	.byte	'REQSLP',0,1
	.word	534
	.byte	2,6,2,35,0,12
	.byte	'SMUSLP',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	534
	.byte	5,0,2,35,0,12
	.byte	'PMST',0,1
	.word	534
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	337
	.byte	21,0,2,35,0,0,31
	.byte	'Ifx_SCU_PMCSR_Bits',0,6,251,6,3
	.word	47189
	.byte	11
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,6,254,6,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'ESR1WKEN',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'PINAWKEN',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'PINBWKEN',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'ESR0DFEN',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'ESR0EDCON',0,1
	.word	534
	.byte	2,1,2,35,0,12
	.byte	'ESR1DFEN',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'ESR1EDCON',0,1
	.word	534
	.byte	2,6,2,35,1,12
	.byte	'PINADFEN',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'PINAEDCON',0,1
	.word	534
	.byte	2,3,2,35,1,12
	.byte	'PINBDFEN',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'PINBEDCON',0,1
	.word	534
	.byte	2,0,2,35,1,12
	.byte	'SCREN',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'STBYRAMSEL',0,1
	.word	534
	.byte	2,5,2,35,2,12
	.byte	'SCRCLKSEL',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'SCRWKEN',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'TRISTEN',0,1
	.word	534
	.byte	1,2,2,35,2,12
	.byte	'TRISTREQ',0,1
	.word	534
	.byte	1,1,2,35,2,12
	.byte	'PORSTDF',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'DCDCSYNC',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	534
	.byte	3,3,2,35,3,12
	.byte	'ESR0TRIST',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,6,153,7,3
	.word	47341
	.byte	11
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,6,156,7,16,4,12
	.byte	'SCRSTEN',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'SCRSTREQ',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	534
	.byte	6,0,2,35,0,12
	.byte	'CPUIDLSEL',0,1
	.word	534
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'IRADIS',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	534
	.byte	3,0,2,35,1,12
	.byte	'SCRCFG',0,1
	.word	534
	.byte	8,0,2,35,2,12
	.byte	'CPUSEL',0,1
	.word	534
	.byte	3,5,2,35,3,12
	.byte	'STBYEVEN',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'STBYEV',0,1
	.word	534
	.byte	3,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,6,170,7,3
	.word	47908
	.byte	11
	.byte	'_Ifx_SCU_PMSWCR2_Bits',0,6,173,7,16,4,12
	.byte	'SCRINT',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'BUSY',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'SCRECC',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'SCRWDT',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'SCRRST',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	534
	.byte	4,0,2,35,1,12
	.byte	'TCINT',0,1
	.word	534
	.byte	8,0,2,35,2,12
	.byte	'TCINTREQ',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'SMURST',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'RST',0,1
	.word	534
	.byte	1,5,2,35,3,12
	.byte	'reserved_27',0,1
	.word	534
	.byte	4,1,2,35,3,12
	.byte	'LCK',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_PMSWCR2_Bits',0,6,187,7,3
	.word	48202
	.byte	11
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,6,190,7,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	2,6,2,35,0,12
	.byte	'ESR1WKP',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'ESR1OVRUN',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'PINAWKP',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'PINAOVRUN',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'PINBWKP',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'PINBOVRUN',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'PORSTDF',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'HWCFGEVR',0,1
	.word	534
	.byte	3,3,2,35,1,12
	.byte	'STBYRAM',0,1
	.word	534
	.byte	2,1,2,35,1,12
	.byte	'TRIST',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'SCRST',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'SCRWKP',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'SCR',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'SCRWKEN',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'ESR1WKEN',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'PINAWKEN',0,1
	.word	534
	.byte	1,2,2,35,2,12
	.byte	'PINBWKEN',0,1
	.word	534
	.byte	1,1,2,35,2,12
	.byte	'reserved_23',0,2
	.word	1085
	.byte	4,5,2,35,2,12
	.byte	'ESR0TRIST',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	534
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,6,214,7,3
	.word	48480
	.byte	11
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,6,217,7,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	2,6,2,35,0,12
	.byte	'ESR1WKPCLR',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'ESR1OVRUNCLR',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'PINAWKPCLR',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'PINAOVRUNCLR',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'PINBWKPCLR',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'PINBOVRUNCLR',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'SCRSTCLR',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'SCRWKPCLR',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,2
	.word	1085
	.byte	14,0,2,35,2,0,31
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,6,230,7,3
	.word	48976
	.byte	11
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,6,233,7,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'CLRC',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,2
	.word	1085
	.byte	10,4,2,35,0,12
	.byte	'CSS0',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'CSS1',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'CSS2',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'reserved_15',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'USRINFO',0,2
	.word	1085
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_RSTCON2_Bits',0,6,243,7,3
	.word	49289
	.byte	11
	.byte	'_Ifx_SCU_RSTCON_Bits',0,6,246,7,16,4,12
	.byte	'ESR0',0,1
	.word	534
	.byte	2,6,2,35,0,12
	.byte	'ESR1',0,1
	.word	534
	.byte	2,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	534
	.byte	2,2,2,35,0,12
	.byte	'SMU',0,1
	.word	534
	.byte	2,0,2,35,0,12
	.byte	'SW',0,1
	.word	534
	.byte	2,6,2,35,1,12
	.byte	'STM0',0,1
	.word	534
	.byte	2,4,2,35,1,12
	.byte	'STM1',0,1
	.word	534
	.byte	2,2,2,35,1,12
	.byte	'STM2',0,1
	.word	534
	.byte	2,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_RSTCON_Bits',0,6,129,8,3
	.word	49498
	.byte	11
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,6,132,8,16,4,12
	.byte	'ESR0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'ESR1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'SMU',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'SW',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'STM0',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'STM1',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'STM2',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'PORST',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'CB0',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'CB1',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'CB3',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	534
	.byte	2,1,2,35,2,12
	.byte	'EVR13',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'EVR33',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'SWD',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	534
	.byte	2,4,2,35,3,12
	.byte	'STBYR',0,1
	.word	534
	.byte	1,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	534
	.byte	3,0,2,35,3,0,31
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,6,155,8,3
	.word	49709
	.byte	11
	.byte	'_Ifx_SCU_SAFECON_Bits',0,6,158,8,16,4,12
	.byte	'HBT',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,4
	.word	337
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_SCU_SAFECON_Bits',0,6,162,8,3
	.word	50141
	.byte	11
	.byte	'_Ifx_SCU_STSTAT_Bits',0,6,165,8,16,4,12
	.byte	'HWCFG',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'FTM',0,1
	.word	534
	.byte	7,1,2,35,1,12
	.byte	'MODE',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'FCBAE',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'LUDIS',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'TRSTL',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'SPDEN',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	534
	.byte	3,0,2,35,2,12
	.byte	'RAMINT',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'reserved_25',0,1
	.word	534
	.byte	7,0,2,35,3,0,31
	.byte	'Ifx_SCU_STSTAT_Bits',0,6,178,8,3
	.word	50237
	.byte	11
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,6,181,8,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'SWRSTREQ',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	337
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,6,186,8,3
	.word	50497
	.byte	11
	.byte	'_Ifx_SCU_SYSCON_Bits',0,6,189,8,16,4,12
	.byte	'CCTRIG0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'RAMINTM',0,1
	.word	534
	.byte	2,4,2,35,0,12
	.byte	'SETLUDIS',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	534
	.byte	3,0,2,35,0,12
	.byte	'DATM',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,4
	.word	337
	.byte	23,0,2,35,0,0,31
	.byte	'Ifx_SCU_SYSCON_Bits',0,6,198,8,3
	.word	50622
	.byte	11
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,6,201,8,16,4,12
	.byte	'ESR0T',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	337
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,6,208,8,3
	.word	50819
	.byte	11
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,6,211,8,16,4,12
	.byte	'ESR0T',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	337
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,6,218,8,3
	.word	50972
	.byte	11
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,6,221,8,16,4,12
	.byte	'ESR0T',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	337
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPSET_Bits',0,6,228,8,3
	.word	51125
	.byte	11
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,6,231,8,16,4,12
	.byte	'ESR0T',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	337
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,6,238,8,3
	.word	51278
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,6,247,8,3
	.word	949
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,6,134,9,3
	.word	1107
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,6,150,9,3
	.word	1351
	.byte	11
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,6,153,9,16,4,12
	.byte	'ENDINIT',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'LCK',0,4
	.word	933
	.byte	1,30,2,35,0,12
	.byte	'PW',0,4
	.word	933
	.byte	14,16,2,35,0,12
	.byte	'REL',0,4
	.word	933
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,6,159,9,3
	.word	51533
	.byte	11
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,6,162,9,16,4,12
	.byte	'CLRIRF',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'IR0',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'DR',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'IR1',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'UR',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'PAR',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'TCR',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'TCTR',0,1
	.word	534
	.byte	7,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,6,175,9,3
	.word	51659
	.byte	11
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,6,178,9,16,4,12
	.byte	'AE',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'OE',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'IS0',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'DS',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'TO',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'IS1',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'US',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'PAS',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'TCS',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'TCT',0,1
	.word	534
	.byte	7,0,2,35,1,12
	.byte	'TIM',0,2
	.word	1085
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,6,191,9,3
	.word	51911
	.byte	13,6,199,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	33943
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ACCEN0',0,6,204,9,3
	.word	52130
	.byte	13,6,207,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34500
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ACCEN1',0,6,212,9,3
	.word	52194
	.byte	13,6,215,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34577
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ARSTDIS',0,6,220,9,3
	.word	52258
	.byte	13,6,223,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34713
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON0',0,6,228,9,3
	.word	52323
	.byte	13,6,231,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34993
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON1',0,6,236,9,3
	.word	52388
	.byte	13,6,239,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35231
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON2',0,6,244,9,3
	.word	52453
	.byte	13,6,247,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35359
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON3',0,6,252,9,3
	.word	52518
	.byte	13,6,255,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35602
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON4',0,6,132,10,3
	.word	52583
	.byte	13,6,135,10,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35837
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON5',0,6,140,10,3
	.word	52648
	.byte	13,6,143,10,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35965
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON6',0,6,148,10,3
	.word	52713
	.byte	13,6,151,10,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36065
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON7',0,6,156,10,3
	.word	52778
	.byte	13,6,159,10,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36165
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CHIPID',0,6,164,10,3
	.word	52843
	.byte	13,6,167,10,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36373
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_DTSCON',0,6,172,10,3
	.word	52907
	.byte	13,6,175,10,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36538
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_DTSLIM',0,6,180,10,3
	.word	52971
	.byte	13,6,183,10,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36721
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_DTSSTAT',0,6,188,10,3
	.word	53035
	.byte	13,6,191,10,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36875
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EICR',0,6,196,10,3
	.word	53100
	.byte	13,6,199,10,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37239
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EIFR',0,6,204,10,3
	.word	53162
	.byte	13,6,207,10,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37450
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EMSR',0,6,212,10,3
	.word	53224
	.byte	13,6,215,10,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37702
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ESRCFG',0,6,220,10,3
	.word	53286
	.byte	13,6,223,10,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37820
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ESROCFG',0,6,228,10,3
	.word	53350
	.byte	13,6,231,10,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37931
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVR13CON',0,6,236,10,3
	.word	53415
	.byte	13,6,239,10,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38094
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVR33CON',0,6,244,10,3
	.word	53481
	.byte	13,6,247,10,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38257
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRADCSTAT',0,6,252,10,3
	.word	53547
	.byte	13,6,255,10,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38415
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRDVSTAT',0,6,132,11,3
	.word	53615
	.byte	13,6,135,11,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38580
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRMONCTRL',0,6,140,11,3
	.word	53682
	.byte	13,6,143,11,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38909
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVROSCCTRL',0,6,148,11,3
	.word	53750
	.byte	13,6,151,11,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39130
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVROVMON',0,6,156,11,3
	.word	53818
	.byte	13,6,159,11,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39293
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRRSTCON',0,6,164,11,3
	.word	53884
	.byte	13,6,167,11,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39565
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,6,172,11,3
	.word	53951
	.byte	13,6,175,11,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39718
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,6,180,11,3
	.word	54020
	.byte	13,6,183,11,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39874
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,6,188,11,3
	.word	54089
	.byte	13,6,191,11,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40036
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,6,196,11,3
	.word	54158
	.byte	13,6,199,11,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40179
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,6,204,11,3
	.word	54227
	.byte	13,6,207,11,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40344
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,6,212,11,3
	.word	54296
	.byte	13,6,215,11,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40489
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCTRL1',0,6,220,11,3
	.word	54365
	.byte	13,6,223,11,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40670
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCTRL2',0,6,228,11,3
	.word	54433
	.byte	13,6,231,11,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40844
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCTRL3',0,6,236,11,3
	.word	54501
	.byte	13,6,239,11,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41004
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCTRL4',0,6,244,11,3
	.word	54569
	.byte	13,6,247,11,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41148
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSTAT',0,6,252,11,3
	.word	54637
	.byte	13,6,255,11,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41422
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRTRIM',0,6,132,12,3
	.word	54702
	.byte	13,6,135,12,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41561
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRUVMON',0,6,140,12,3
	.word	54767
	.byte	13,6,143,12,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41724
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EXTCON',0,6,148,12,3
	.word	54833
	.byte	13,6,151,12,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41942
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_FDR',0,6,156,12,3
	.word	54897
	.byte	13,6,159,12,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	42105
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_FMR',0,6,164,12,3
	.word	54958
	.byte	13,6,167,12,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	42441
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ID',0,6,172,12,3
	.word	55019
	.byte	13,6,175,12,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	42548
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_IGCR',0,6,180,12,3
	.word	55079
	.byte	13,6,183,12,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	43000
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_IN',0,6,188,12,3
	.word	55141
	.byte	13,6,191,12,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	43099
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_IOCR',0,6,196,12,3
	.word	55201
	.byte	13,6,199,12,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	43249
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LBISTCTRL0',0,6,204,12,3
	.word	55263
	.byte	13,6,207,12,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	43398
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LBISTCTRL1',0,6,212,12,3
	.word	55331
	.byte	13,6,215,12,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	43559
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LBISTCTRL2',0,6,220,12,3
	.word	55399
	.byte	13,6,223,12,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	43689
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LCLCON',0,6,228,12,3
	.word	55467
	.byte	13,6,231,12,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	43821
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LCLTEST',0,6,236,12,3
	.word	55531
	.byte	13,6,239,12,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	43936
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_MANID',0,6,244,12,3
	.word	55596
	.byte	13,6,247,12,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44047
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OMR',0,6,252,12,3
	.word	55659
	.byte	13,6,255,12,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44205
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OSCCON',0,6,132,13,3
	.word	55720
	.byte	13,6,135,13,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44617
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OUT',0,6,140,13,3
	.word	55784
	.byte	13,6,143,13,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44718
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OVCCON',0,6,148,13,3
	.word	55845
	.byte	13,6,151,13,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44985
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OVCENABLE',0,6,156,13,3
	.word	55909
	.byte	13,6,159,13,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	45121
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PDISC',0,6,164,13,3
	.word	55976
	.byte	13,6,167,13,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	45232
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PDR',0,6,172,13,3
	.word	56039
	.byte	13,6,175,13,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	45365
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PDRR',0,6,180,13,3
	.word	56100
	.byte	13,6,183,13,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	45568
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLCON0',0,6,188,13,3
	.word	56162
	.byte	13,6,191,13,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	45924
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLCON1',0,6,196,13,3
	.word	56227
	.byte	13,6,199,13,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	46102
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLCON2',0,6,204,13,3
	.word	56292
	.byte	13,6,207,13,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	46202
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLERAYCON0',0,6,212,13,3
	.word	56357
	.byte	13,6,215,13,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	46572
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLERAYCON1',0,6,220,13,3
	.word	56426
	.byte	13,6,223,13,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	46758
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLERAYSTAT',0,6,228,13,3
	.word	56495
	.byte	13,6,231,13,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	46956
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLSTAT',0,6,236,13,3
	.word	56564
	.byte	13,6,239,13,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	47189
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMCSR',0,6,244,13,3
	.word	56629
	.byte	13,6,247,13,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	47341
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMSWCR0',0,6,252,13,3
	.word	56692
	.byte	13,6,255,13,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	47908
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMSWCR1',0,6,132,14,3
	.word	56757
	.byte	13,6,135,14,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	48202
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMSWCR2',0,6,140,14,3
	.word	56822
	.byte	13,6,143,14,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	48480
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMSWSTAT',0,6,148,14,3
	.word	56887
	.byte	13,6,151,14,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	48976
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMSWSTATCLR',0,6,156,14,3
	.word	56953
	.byte	13,6,159,14,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	49498
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_RSTCON',0,6,164,14,3
	.word	57022
	.byte	13,6,167,14,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	49289
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_RSTCON2',0,6,172,14,3
	.word	57086
	.byte	13,6,175,14,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	49709
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_RSTSTAT',0,6,180,14,3
	.word	57151
	.byte	13,6,183,14,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50141
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SAFECON',0,6,188,14,3
	.word	57216
	.byte	13,6,191,14,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50237
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_STSTAT',0,6,196,14,3
	.word	57281
	.byte	13,6,199,14,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50497
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SWRSTCON',0,6,204,14,3
	.word	57345
	.byte	13,6,207,14,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50622
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SYSCON',0,6,212,14,3
	.word	57411
	.byte	13,6,215,14,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50819
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPCLR',0,6,220,14,3
	.word	57475
	.byte	13,6,223,14,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50972
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPDIS',0,6,228,14,3
	.word	57540
	.byte	13,6,231,14,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51125
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPSET',0,6,236,14,3
	.word	57605
	.byte	13,6,239,14,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51278
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPSTAT',0,6,244,14,3
	.word	57670
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_CON0',0,6,252,14,3
	.word	1045
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_CON1',0,6,132,15,3
	.word	1311
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_SR',0,6,140,15,3
	.word	1542
	.byte	13,6,143,15,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51533
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_WDTS_CON0',0,6,148,15,3
	.word	57821
	.byte	13,6,151,15,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51659
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_WDTS_CON1',0,6,156,15,3
	.word	57888
	.byte	13,6,159,15,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51911
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_WDTS_SR',0,6,164,15,3
	.word	57955
	.byte	10
	.word	1582
	.byte	31
	.byte	'Ifx_SCU_WDTCPU',0,6,180,15,3
	.word	58020
	.byte	11
	.byte	'_Ifx_SCU_WDTS',0,6,183,15,25,12,14
	.byte	'CON0',0
	.word	57821
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	57888
	.byte	4,2,35,4,14
	.byte	'SR',0
	.word	57955
	.byte	4,2,35,8,0,10
	.word	58049
	.byte	31
	.byte	'Ifx_SCU_WDTS',0,6,188,15,3
	.word	58110
	.byte	18,8
	.word	53286
	.byte	19,1,0,18,20
	.word	534
	.byte	19,19,0,18,8
	.word	56629
	.byte	19,1,0,10
	.word	58049
	.byte	18,24
	.word	1582
	.byte	19,1,0,10
	.word	58169
	.byte	18,28
	.word	534
	.byte	19,27,0,18,16
	.word	53100
	.byte	19,3,0,18,16
	.word	55079
	.byte	19,3,0,18,180,3
	.word	534
	.byte	19,179,3,0,11
	.byte	'_Ifx_SCU',0,6,201,15,25,128,8,14
	.byte	'reserved_0',0
	.word	5091
	.byte	8,2,35,0,14
	.byte	'ID',0
	.word	55019
	.byte	4,2,35,8,14
	.byte	'reserved_C',0
	.word	3272
	.byte	4,2,35,12,14
	.byte	'OSCCON',0
	.word	55720
	.byte	4,2,35,16,14
	.byte	'PLLSTAT',0
	.word	56564
	.byte	4,2,35,20,14
	.byte	'PLLCON0',0
	.word	56162
	.byte	4,2,35,24,14
	.byte	'PLLCON1',0
	.word	56227
	.byte	4,2,35,28,14
	.byte	'PLLCON2',0
	.word	56292
	.byte	4,2,35,32,14
	.byte	'PLLERAYSTAT',0
	.word	56495
	.byte	4,2,35,36,14
	.byte	'PLLERAYCON0',0
	.word	56357
	.byte	4,2,35,40,14
	.byte	'PLLERAYCON1',0
	.word	56426
	.byte	4,2,35,44,14
	.byte	'CCUCON0',0
	.word	52323
	.byte	4,2,35,48,14
	.byte	'CCUCON1',0
	.word	52388
	.byte	4,2,35,52,14
	.byte	'FDR',0
	.word	54897
	.byte	4,2,35,56,14
	.byte	'EXTCON',0
	.word	54833
	.byte	4,2,35,60,14
	.byte	'CCUCON2',0
	.word	52453
	.byte	4,2,35,64,14
	.byte	'CCUCON3',0
	.word	52518
	.byte	4,2,35,68,14
	.byte	'CCUCON4',0
	.word	52583
	.byte	4,2,35,72,14
	.byte	'CCUCON5',0
	.word	52648
	.byte	4,2,35,76,14
	.byte	'RSTSTAT',0
	.word	57151
	.byte	4,2,35,80,14
	.byte	'reserved_54',0
	.word	3272
	.byte	4,2,35,84,14
	.byte	'RSTCON',0
	.word	57022
	.byte	4,2,35,88,14
	.byte	'ARSTDIS',0
	.word	52258
	.byte	4,2,35,92,14
	.byte	'SWRSTCON',0
	.word	57345
	.byte	4,2,35,96,14
	.byte	'RSTCON2',0
	.word	57086
	.byte	4,2,35,100,14
	.byte	'reserved_68',0
	.word	3272
	.byte	4,2,35,104,14
	.byte	'EVRRSTCON',0
	.word	53884
	.byte	4,2,35,108,14
	.byte	'ESRCFG',0
	.word	58137
	.byte	8,2,35,112,14
	.byte	'ESROCFG',0
	.word	53350
	.byte	4,2,35,120,14
	.byte	'SYSCON',0
	.word	57411
	.byte	4,2,35,124,14
	.byte	'CCUCON6',0
	.word	52713
	.byte	4,3,35,128,1,14
	.byte	'CCUCON7',0
	.word	52778
	.byte	4,3,35,132,1,14
	.byte	'reserved_88',0
	.word	58146
	.byte	20,3,35,136,1,14
	.byte	'PDR',0
	.word	56039
	.byte	4,3,35,156,1,14
	.byte	'IOCR',0
	.word	55201
	.byte	4,3,35,160,1,14
	.byte	'OUT',0
	.word	55784
	.byte	4,3,35,164,1,14
	.byte	'OMR',0
	.word	55659
	.byte	4,3,35,168,1,14
	.byte	'IN',0
	.word	55141
	.byte	4,3,35,172,1,14
	.byte	'EVRSTAT',0
	.word	54637
	.byte	4,3,35,176,1,14
	.byte	'EVRDVSTAT',0
	.word	53615
	.byte	4,3,35,180,1,14
	.byte	'EVR13CON',0
	.word	53415
	.byte	4,3,35,184,1,14
	.byte	'EVR33CON',0
	.word	53481
	.byte	4,3,35,188,1,14
	.byte	'STSTAT',0
	.word	57281
	.byte	4,3,35,192,1,14
	.byte	'reserved_C4',0
	.word	3272
	.byte	4,3,35,196,1,14
	.byte	'PMSWCR0',0
	.word	56692
	.byte	4,3,35,200,1,14
	.byte	'PMSWSTAT',0
	.word	56887
	.byte	4,3,35,204,1,14
	.byte	'PMSWSTATCLR',0
	.word	56953
	.byte	4,3,35,208,1,14
	.byte	'PMCSR',0
	.word	58155
	.byte	8,3,35,212,1,14
	.byte	'reserved_DC',0
	.word	3272
	.byte	4,3,35,220,1,14
	.byte	'DTSSTAT',0
	.word	53035
	.byte	4,3,35,224,1,14
	.byte	'DTSCON',0
	.word	52907
	.byte	4,3,35,228,1,14
	.byte	'PMSWCR1',0
	.word	56757
	.byte	4,3,35,232,1,14
	.byte	'PMSWCR2',0
	.word	56822
	.byte	4,3,35,236,1,14
	.byte	'WDTS',0
	.word	58164
	.byte	12,3,35,240,1,14
	.byte	'EMSR',0
	.word	53224
	.byte	4,3,35,252,1,14
	.byte	'WDTCPU',0
	.word	58178
	.byte	24,3,35,128,2,14
	.byte	'reserved_118',0
	.word	5431
	.byte	12,3,35,152,2,14
	.byte	'TRAPSTAT',0
	.word	57670
	.byte	4,3,35,164,2,14
	.byte	'TRAPSET',0
	.word	57605
	.byte	4,3,35,168,2,14
	.byte	'TRAPCLR',0
	.word	57475
	.byte	4,3,35,172,2,14
	.byte	'TRAPDIS',0
	.word	57540
	.byte	4,3,35,176,2,14
	.byte	'reserved_134',0
	.word	3272
	.byte	4,3,35,180,2,14
	.byte	'LCLCON1',0
	.word	55467
	.byte	4,3,35,184,2,14
	.byte	'LCLTEST',0
	.word	55531
	.byte	4,3,35,188,2,14
	.byte	'CHIPID',0
	.word	52843
	.byte	4,3,35,192,2,14
	.byte	'MANID',0
	.word	55596
	.byte	4,3,35,196,2,14
	.byte	'reserved_148',0
	.word	5091
	.byte	8,3,35,200,2,14
	.byte	'SAFECON',0
	.word	57216
	.byte	4,3,35,208,2,14
	.byte	'reserved_154',0
	.word	28734
	.byte	16,3,35,212,2,14
	.byte	'LBISTCTRL0',0
	.word	55263
	.byte	4,3,35,228,2,14
	.byte	'LBISTCTRL1',0
	.word	55331
	.byte	4,3,35,232,2,14
	.byte	'LBISTCTRL2',0
	.word	55399
	.byte	4,3,35,236,2,14
	.byte	'reserved_170',0
	.word	58183
	.byte	28,3,35,240,2,14
	.byte	'PDISC',0
	.word	55976
	.byte	4,3,35,140,3,14
	.byte	'reserved_190',0
	.word	5091
	.byte	8,3,35,144,3,14
	.byte	'EVRTRIM',0
	.word	54702
	.byte	4,3,35,152,3,14
	.byte	'EVRADCSTAT',0
	.word	53547
	.byte	4,3,35,156,3,14
	.byte	'EVRUVMON',0
	.word	54767
	.byte	4,3,35,160,3,14
	.byte	'EVROVMON',0
	.word	53818
	.byte	4,3,35,164,3,14
	.byte	'EVRMONCTRL',0
	.word	53682
	.byte	4,3,35,168,3,14
	.byte	'reserved_1AC',0
	.word	3272
	.byte	4,3,35,172,3,14
	.byte	'EVRSDCTRL1',0
	.word	54365
	.byte	4,3,35,176,3,14
	.byte	'EVRSDCTRL2',0
	.word	54433
	.byte	4,3,35,180,3,14
	.byte	'EVRSDCTRL3',0
	.word	54501
	.byte	4,3,35,184,3,14
	.byte	'EVRSDCTRL4',0
	.word	54569
	.byte	4,3,35,188,3,14
	.byte	'EVRSDCOEFF1',0
	.word	53951
	.byte	4,3,35,192,3,14
	.byte	'EVRSDCOEFF2',0
	.word	54020
	.byte	4,3,35,196,3,14
	.byte	'EVRSDCOEFF3',0
	.word	54089
	.byte	4,3,35,200,3,14
	.byte	'EVRSDCOEFF4',0
	.word	54158
	.byte	4,3,35,204,3,14
	.byte	'EVRSDCOEFF5',0
	.word	54227
	.byte	4,3,35,208,3,14
	.byte	'EVRSDCOEFF6',0
	.word	54296
	.byte	4,3,35,212,3,14
	.byte	'EVROSCCTRL',0
	.word	53750
	.byte	4,3,35,216,3,14
	.byte	'reserved_1DC',0
	.word	3272
	.byte	4,3,35,220,3,14
	.byte	'OVCENABLE',0
	.word	55909
	.byte	4,3,35,224,3,14
	.byte	'OVCCON',0
	.word	55845
	.byte	4,3,35,228,3,14
	.byte	'reserved_1E8',0
	.word	28369
	.byte	40,3,35,232,3,14
	.byte	'EICR',0
	.word	58192
	.byte	16,3,35,144,4,14
	.byte	'EIFR',0
	.word	53162
	.byte	4,3,35,160,4,14
	.byte	'FMR',0
	.word	54958
	.byte	4,3,35,164,4,14
	.byte	'PDRR',0
	.word	56100
	.byte	4,3,35,168,4,14
	.byte	'IGCR',0
	.word	58201
	.byte	16,3,35,172,4,14
	.byte	'reserved_23C',0
	.word	3272
	.byte	4,3,35,188,4,14
	.byte	'DTSLIM',0
	.word	52971
	.byte	4,3,35,192,4,14
	.byte	'reserved_244',0
	.word	58210
	.byte	180,3,3,35,196,4,14
	.byte	'ACCEN1',0
	.word	52194
	.byte	4,3,35,248,7,14
	.byte	'ACCEN0',0
	.word	52130
	.byte	4,3,35,252,7,0,10
	.word	58221
	.byte	31
	.byte	'Ifx_SCU',0,6,181,16,3
	.word	60211
	.byte	11
	.byte	'_Ifx_CPU_A_Bits',0,21,45,16,4,12
	.byte	'ADDR',0,4
	.word	933
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_A_Bits',0,21,48,3
	.word	60233
	.byte	11
	.byte	'_Ifx_CPU_BIV_Bits',0,21,51,16,4,12
	.byte	'VSS',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'BIV',0,4
	.word	933
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_BIV_Bits',0,21,55,3
	.word	60294
	.byte	11
	.byte	'_Ifx_CPU_BTV_Bits',0,21,58,16,4,12
	.byte	'reserved_0',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'BTV',0,4
	.word	933
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_BTV_Bits',0,21,62,3
	.word	60373
	.byte	11
	.byte	'_Ifx_CPU_CCNT_Bits',0,21,65,16,4,12
	.byte	'CountValue',0,4
	.word	933
	.byte	31,1,2,35,0,12
	.byte	'SOvf',0,4
	.word	933
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_CCNT_Bits',0,21,69,3
	.word	60459
	.byte	11
	.byte	'_Ifx_CPU_CCTRL_Bits',0,21,72,16,4,12
	.byte	'CM',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'CE',0,4
	.word	933
	.byte	1,30,2,35,0,12
	.byte	'M1',0,4
	.word	933
	.byte	3,27,2,35,0,12
	.byte	'M2',0,4
	.word	933
	.byte	3,24,2,35,0,12
	.byte	'M3',0,4
	.word	933
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	933
	.byte	21,0,2,35,0,0,31
	.byte	'Ifx_CPU_CCTRL_Bits',0,21,80,3
	.word	60548
	.byte	11
	.byte	'_Ifx_CPU_COMPAT_Bits',0,21,83,16,4,12
	.byte	'reserved_0',0,4
	.word	933
	.byte	3,29,2,35,0,12
	.byte	'RM',0,4
	.word	933
	.byte	1,28,2,35,0,12
	.byte	'SP',0,4
	.word	933
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	933
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_COMPAT_Bits',0,21,89,3
	.word	60694
	.byte	11
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,21,92,16,4,12
	.byte	'CORE_ID',0,4
	.word	933
	.byte	3,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	933
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_CORE_ID_Bits',0,21,96,3
	.word	60821
	.byte	11
	.byte	'_Ifx_CPU_CPR_L_Bits',0,21,99,16,4,12
	.byte	'reserved_0',0,4
	.word	933
	.byte	3,29,2,35,0,12
	.byte	'LOWBND',0,4
	.word	933
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_CPR_L_Bits',0,21,103,3
	.word	60919
	.byte	11
	.byte	'_Ifx_CPU_CPR_U_Bits',0,21,106,16,4,12
	.byte	'reserved_0',0,4
	.word	933
	.byte	3,29,2,35,0,12
	.byte	'UPPBND',0,4
	.word	933
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_CPR_U_Bits',0,21,110,3
	.word	61012
	.byte	11
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,21,113,16,4,12
	.byte	'MODREV',0,4
	.word	933
	.byte	8,24,2,35,0,12
	.byte	'MOD_32B',0,4
	.word	933
	.byte	8,16,2,35,0,12
	.byte	'MOD',0,4
	.word	933
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_CPU_ID_Bits',0,21,118,3
	.word	61105
	.byte	11
	.byte	'_Ifx_CPU_CPXE_Bits',0,21,121,16,4,12
	.byte	'XE',0,4
	.word	933
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	933
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_CPXE_Bits',0,21,125,3
	.word	61212
	.byte	11
	.byte	'_Ifx_CPU_CREVT_Bits',0,21,128,1,16,4,12
	.byte	'EVTA',0,4
	.word	933
	.byte	3,29,2,35,0,12
	.byte	'BBM',0,4
	.word	933
	.byte	1,28,2,35,0,12
	.byte	'BOD',0,4
	.word	933
	.byte	1,27,2,35,0,12
	.byte	'SUSP',0,4
	.word	933
	.byte	1,26,2,35,0,12
	.byte	'CNT',0,4
	.word	933
	.byte	2,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	933
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_CREVT_Bits',0,21,136,1,3
	.word	61299
	.byte	11
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,21,139,1,16,4,12
	.byte	'CID',0,4
	.word	933
	.byte	3,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	933
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_CUS_ID_Bits',0,21,143,1,3
	.word	61453
	.byte	11
	.byte	'_Ifx_CPU_D_Bits',0,21,146,1,16,4,12
	.byte	'DATA',0,4
	.word	933
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_D_Bits',0,21,149,1,3
	.word	61547
	.byte	11
	.byte	'_Ifx_CPU_DATR_Bits',0,21,152,1,16,4,12
	.byte	'reserved_0',0,4
	.word	933
	.byte	3,29,2,35,0,12
	.byte	'SBE',0,4
	.word	933
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	933
	.byte	5,23,2,35,0,12
	.byte	'CWE',0,4
	.word	933
	.byte	1,22,2,35,0,12
	.byte	'CFE',0,4
	.word	933
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	933
	.byte	3,18,2,35,0,12
	.byte	'SOE',0,4
	.word	933
	.byte	1,17,2,35,0,12
	.byte	'SME',0,4
	.word	933
	.byte	1,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	933
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_DATR_Bits',0,21,163,1,3
	.word	61610
	.byte	11
	.byte	'_Ifx_CPU_DBGSR_Bits',0,21,166,1,16,4,12
	.byte	'DE',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'HALT',0,4
	.word	933
	.byte	2,29,2,35,0,12
	.byte	'SIH',0,4
	.word	933
	.byte	1,28,2,35,0,12
	.byte	'SUSP',0,4
	.word	933
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	933
	.byte	1,26,2,35,0,12
	.byte	'PREVSUSP',0,4
	.word	933
	.byte	1,25,2,35,0,12
	.byte	'PEVT',0,4
	.word	933
	.byte	1,24,2,35,0,12
	.byte	'EVTSRC',0,4
	.word	933
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	933
	.byte	19,0,2,35,0,0,31
	.byte	'Ifx_CPU_DBGSR_Bits',0,21,177,1,3
	.word	61828
	.byte	11
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,21,180,1,16,4,12
	.byte	'DTA',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	933
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_DBGTCR_Bits',0,21,184,1,3
	.word	62043
	.byte	11
	.byte	'_Ifx_CPU_DCON0_Bits',0,21,187,1,16,4,12
	.byte	'reserved_0',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'DCBYP',0,4
	.word	933
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	933
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_CPU_DCON0_Bits',0,21,192,1,3
	.word	62137
	.byte	11
	.byte	'_Ifx_CPU_DCON2_Bits',0,21,195,1,16,4,12
	.byte	'DCACHE_SZE',0,4
	.word	933
	.byte	16,16,2,35,0,12
	.byte	'DSCRATCH_SZE',0,4
	.word	933
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_DCON2_Bits',0,21,199,1,3
	.word	62253
	.byte	11
	.byte	'_Ifx_CPU_DCX_Bits',0,21,202,1,16,4,12
	.byte	'reserved_0',0,4
	.word	933
	.byte	6,26,2,35,0,12
	.byte	'DCXValue',0,4
	.word	933
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_CPU_DCX_Bits',0,21,206,1,3
	.word	62354
	.byte	11
	.byte	'_Ifx_CPU_DEADD_Bits',0,21,209,1,16,4,12
	.byte	'ERROR_ADDRESS',0,4
	.word	933
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_DEADD_Bits',0,21,212,1,3
	.word	62447
	.byte	11
	.byte	'_Ifx_CPU_DIEAR_Bits',0,21,215,1,16,4,12
	.byte	'TA',0,4
	.word	933
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_DIEAR_Bits',0,21,218,1,3
	.word	62527
	.byte	11
	.byte	'_Ifx_CPU_DIETR_Bits',0,21,221,1,16,4,12
	.byte	'IED',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'IE_T',0,4
	.word	933
	.byte	1,30,2,35,0,12
	.byte	'IE_C',0,4
	.word	933
	.byte	1,29,2,35,0,12
	.byte	'IE_S',0,4
	.word	933
	.byte	1,28,2,35,0,12
	.byte	'IE_BI',0,4
	.word	933
	.byte	1,27,2,35,0,12
	.byte	'E_INFO',0,4
	.word	933
	.byte	6,21,2,35,0,12
	.byte	'IE_DUAL',0,4
	.word	933
	.byte	1,20,2,35,0,12
	.byte	'IE_SP',0,4
	.word	933
	.byte	1,19,2,35,0,12
	.byte	'IE_BS',0,4
	.word	933
	.byte	1,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	933
	.byte	18,0,2,35,0,0,31
	.byte	'Ifx_CPU_DIETR_Bits',0,21,233,1,3
	.word	62596
	.byte	11
	.byte	'_Ifx_CPU_DMS_Bits',0,21,236,1,16,4,12
	.byte	'reserved_0',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'DMSValue',0,4
	.word	933
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_DMS_Bits',0,21,240,1,3
	.word	62825
	.byte	11
	.byte	'_Ifx_CPU_DPR_L_Bits',0,21,243,1,16,4,12
	.byte	'reserved_0',0,4
	.word	933
	.byte	3,29,2,35,0,12
	.byte	'LOWBND',0,4
	.word	933
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_DPR_L_Bits',0,21,247,1,3
	.word	62918
	.byte	11
	.byte	'_Ifx_CPU_DPR_U_Bits',0,21,250,1,16,4,12
	.byte	'reserved_0',0,4
	.word	933
	.byte	3,29,2,35,0,12
	.byte	'UPPBND',0,4
	.word	933
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_DPR_U_Bits',0,21,254,1,3
	.word	63013
	.byte	11
	.byte	'_Ifx_CPU_DPRE_Bits',0,21,129,2,16,4,12
	.byte	'RE',0,4
	.word	933
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	933
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_DPRE_Bits',0,21,133,2,3
	.word	63108
	.byte	11
	.byte	'_Ifx_CPU_DPWE_Bits',0,21,136,2,16,4,12
	.byte	'WE',0,4
	.word	933
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	933
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_DPWE_Bits',0,21,140,2,3
	.word	63198
	.byte	11
	.byte	'_Ifx_CPU_DSTR_Bits',0,21,143,2,16,4,12
	.byte	'SRE',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'GAE',0,4
	.word	933
	.byte	1,30,2,35,0,12
	.byte	'LBE',0,4
	.word	933
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	933
	.byte	3,26,2,35,0,12
	.byte	'CRE',0,4
	.word	933
	.byte	1,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	933
	.byte	7,18,2,35,0,12
	.byte	'DTME',0,4
	.word	933
	.byte	1,17,2,35,0,12
	.byte	'LOE',0,4
	.word	933
	.byte	1,16,2,35,0,12
	.byte	'SDE',0,4
	.word	933
	.byte	1,15,2,35,0,12
	.byte	'SCE',0,4
	.word	933
	.byte	1,14,2,35,0,12
	.byte	'CAC',0,4
	.word	933
	.byte	1,13,2,35,0,12
	.byte	'MPE',0,4
	.word	933
	.byte	1,12,2,35,0,12
	.byte	'CLE',0,4
	.word	933
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	933
	.byte	3,8,2,35,0,12
	.byte	'ALN',0,4
	.word	933
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	933
	.byte	7,0,2,35,0,0,31
	.byte	'Ifx_CPU_DSTR_Bits',0,21,161,2,3
	.word	63288
	.byte	11
	.byte	'_Ifx_CPU_EXEVT_Bits',0,21,164,2,16,4,12
	.byte	'EVTA',0,4
	.word	933
	.byte	3,29,2,35,0,12
	.byte	'BBM',0,4
	.word	933
	.byte	1,28,2,35,0,12
	.byte	'BOD',0,4
	.word	933
	.byte	1,27,2,35,0,12
	.byte	'SUSP',0,4
	.word	933
	.byte	1,26,2,35,0,12
	.byte	'CNT',0,4
	.word	933
	.byte	2,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	933
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_EXEVT_Bits',0,21,172,2,3
	.word	63612
	.byte	11
	.byte	'_Ifx_CPU_FCX_Bits',0,21,175,2,16,4,12
	.byte	'FCXO',0,4
	.word	933
	.byte	16,16,2,35,0,12
	.byte	'FCXS',0,4
	.word	933
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	933
	.byte	12,0,2,35,0,0,31
	.byte	'Ifx_CPU_FCX_Bits',0,21,180,2,3
	.word	63766
	.byte	11
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,21,183,2,16,4,12
	.byte	'TST',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'TCL',0,4
	.word	933
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	933
	.byte	6,24,2,35,0,12
	.byte	'RM',0,4
	.word	933
	.byte	2,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	933
	.byte	8,14,2,35,0,12
	.byte	'FXE',0,4
	.word	933
	.byte	1,13,2,35,0,12
	.byte	'FUE',0,4
	.word	933
	.byte	1,12,2,35,0,12
	.byte	'FZE',0,4
	.word	933
	.byte	1,11,2,35,0,12
	.byte	'FVE',0,4
	.word	933
	.byte	1,10,2,35,0,12
	.byte	'FIE',0,4
	.word	933
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	933
	.byte	3,6,2,35,0,12
	.byte	'FX',0,4
	.word	933
	.byte	1,5,2,35,0,12
	.byte	'FU',0,4
	.word	933
	.byte	1,4,2,35,0,12
	.byte	'FZ',0,4
	.word	933
	.byte	1,3,2,35,0,12
	.byte	'FV',0,4
	.word	933
	.byte	1,2,2,35,0,12
	.byte	'FI',0,4
	.word	933
	.byte	1,1,2,35,0,12
	.byte	'reserved_31',0,4
	.word	933
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,21,202,2,3
	.word	63872
	.byte	11
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,21,205,2,16,4,12
	.byte	'OPC',0,4
	.word	933
	.byte	8,24,2,35,0,12
	.byte	'FMT',0,4
	.word	933
	.byte	1,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	933
	.byte	7,16,2,35,0,12
	.byte	'DREG',0,4
	.word	933
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	933
	.byte	12,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,21,212,2,3
	.word	64221
	.byte	11
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,21,215,2,16,4,12
	.byte	'PC',0,4
	.word	933
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,21,218,2,3
	.word	64381
	.byte	11
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,21,221,2,16,4,12
	.byte	'SRC1',0,4
	.word	933
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,21,224,2,3
	.word	64462
	.byte	11
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,21,227,2,16,4,12
	.byte	'SRC2',0,4
	.word	933
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,21,230,2,3
	.word	64549
	.byte	11
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,21,233,2,16,4,12
	.byte	'SRC3',0,4
	.word	933
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,21,236,2,3
	.word	64636
	.byte	11
	.byte	'_Ifx_CPU_ICNT_Bits',0,21,239,2,16,4,12
	.byte	'CountValue',0,4
	.word	933
	.byte	31,1,2,35,0,12
	.byte	'SOvf',0,4
	.word	933
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_ICNT_Bits',0,21,243,2,3
	.word	64723
	.byte	11
	.byte	'_Ifx_CPU_ICR_Bits',0,21,246,2,16,4,12
	.byte	'CCPN',0,4
	.word	933
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	933
	.byte	5,17,2,35,0,12
	.byte	'IE',0,4
	.word	933
	.byte	1,16,2,35,0,12
	.byte	'PIPN',0,4
	.word	933
	.byte	10,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	933
	.byte	6,0,2,35,0,0,31
	.byte	'Ifx_CPU_ICR_Bits',0,21,253,2,3
	.word	64814
	.byte	11
	.byte	'_Ifx_CPU_ISP_Bits',0,21,128,3,16,4,12
	.byte	'ISP',0,4
	.word	933
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_ISP_Bits',0,21,131,3,3
	.word	64957
	.byte	11
	.byte	'_Ifx_CPU_LCX_Bits',0,21,134,3,16,4,12
	.byte	'LCXO',0,4
	.word	933
	.byte	16,16,2,35,0,12
	.byte	'LCXS',0,4
	.word	933
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	933
	.byte	12,0,2,35,0,0,31
	.byte	'Ifx_CPU_LCX_Bits',0,21,139,3,3
	.word	65023
	.byte	11
	.byte	'_Ifx_CPU_M1CNT_Bits',0,21,142,3,16,4,12
	.byte	'CountValue',0,4
	.word	933
	.byte	31,1,2,35,0,12
	.byte	'SOvf',0,4
	.word	933
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_M1CNT_Bits',0,21,146,3,3
	.word	65129
	.byte	11
	.byte	'_Ifx_CPU_M2CNT_Bits',0,21,149,3,16,4,12
	.byte	'CountValue',0,4
	.word	933
	.byte	31,1,2,35,0,12
	.byte	'SOvf',0,4
	.word	933
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_M2CNT_Bits',0,21,153,3,3
	.word	65222
	.byte	11
	.byte	'_Ifx_CPU_M3CNT_Bits',0,21,156,3,16,4,12
	.byte	'CountValue',0,4
	.word	933
	.byte	31,1,2,35,0,12
	.byte	'SOvf',0,4
	.word	933
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_M3CNT_Bits',0,21,160,3,3
	.word	65315
	.byte	11
	.byte	'_Ifx_CPU_PC_Bits',0,21,163,3,16,4,12
	.byte	'reserved_0',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'PC',0,4
	.word	933
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_PC_Bits',0,21,167,3,3
	.word	65408
	.byte	11
	.byte	'_Ifx_CPU_PCON0_Bits',0,21,170,3,16,4,12
	.byte	'reserved_0',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'PCBYP',0,4
	.word	933
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	933
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_CPU_PCON0_Bits',0,21,175,3,3
	.word	65493
	.byte	11
	.byte	'_Ifx_CPU_PCON1_Bits',0,21,178,3,16,4,12
	.byte	'PCINV',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'PBINV',0,4
	.word	933
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	933
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_CPU_PCON1_Bits',0,21,183,3,3
	.word	65609
	.byte	11
	.byte	'_Ifx_CPU_PCON2_Bits',0,21,186,3,16,4,12
	.byte	'PCACHE_SZE',0,4
	.word	933
	.byte	16,16,2,35,0,12
	.byte	'PSCRATCH_SZE',0,4
	.word	933
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_PCON2_Bits',0,21,190,3,3
	.word	65720
	.byte	11
	.byte	'_Ifx_CPU_PCXI_Bits',0,21,193,3,16,4,12
	.byte	'PCXO',0,4
	.word	933
	.byte	16,16,2,35,0,12
	.byte	'PCXS',0,4
	.word	933
	.byte	4,12,2,35,0,12
	.byte	'UL',0,4
	.word	933
	.byte	1,11,2,35,0,12
	.byte	'PIE',0,4
	.word	933
	.byte	1,10,2,35,0,12
	.byte	'PCPN',0,4
	.word	933
	.byte	10,0,2,35,0,0,31
	.byte	'Ifx_CPU_PCXI_Bits',0,21,200,3,3
	.word	65821
	.byte	11
	.byte	'_Ifx_CPU_PIEAR_Bits',0,21,203,3,16,4,12
	.byte	'TA',0,4
	.word	933
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_PIEAR_Bits',0,21,206,3,3
	.word	65951
	.byte	11
	.byte	'_Ifx_CPU_PIETR_Bits',0,21,209,3,16,4,12
	.byte	'IED',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'IE_T',0,4
	.word	933
	.byte	1,30,2,35,0,12
	.byte	'IE_C',0,4
	.word	933
	.byte	1,29,2,35,0,12
	.byte	'IE_S',0,4
	.word	933
	.byte	1,28,2,35,0,12
	.byte	'IE_BI',0,4
	.word	933
	.byte	1,27,2,35,0,12
	.byte	'E_INFO',0,4
	.word	933
	.byte	6,21,2,35,0,12
	.byte	'IE_DUAL',0,4
	.word	933
	.byte	1,20,2,35,0,12
	.byte	'IE_SP',0,4
	.word	933
	.byte	1,19,2,35,0,12
	.byte	'IE_BS',0,4
	.word	933
	.byte	1,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	933
	.byte	18,0,2,35,0,0,31
	.byte	'Ifx_CPU_PIETR_Bits',0,21,221,3,3
	.word	66020
	.byte	11
	.byte	'_Ifx_CPU_PMA0_Bits',0,21,224,3,16,4,12
	.byte	'reserved_0',0,4
	.word	933
	.byte	13,19,2,35,0,12
	.byte	'DAC',0,4
	.word	933
	.byte	3,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	933
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_PMA0_Bits',0,21,229,3,3
	.word	66249
	.byte	11
	.byte	'_Ifx_CPU_PMA1_Bits',0,21,232,3,16,4,12
	.byte	'reserved_0',0,4
	.word	933
	.byte	14,18,2,35,0,12
	.byte	'CAC',0,4
	.word	933
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	933
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_PMA1_Bits',0,21,237,3,3
	.word	66362
	.byte	11
	.byte	'_Ifx_CPU_PMA2_Bits',0,21,240,3,16,4,12
	.byte	'PSI',0,4
	.word	933
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	933
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_PMA2_Bits',0,21,244,3,3
	.word	66475
	.byte	11
	.byte	'_Ifx_CPU_PSTR_Bits',0,21,247,3,16,4,12
	.byte	'FRE',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	933
	.byte	1,30,2,35,0,12
	.byte	'FBE',0,4
	.word	933
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	933
	.byte	9,20,2,35,0,12
	.byte	'FPE',0,4
	.word	933
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	933
	.byte	1,18,2,35,0,12
	.byte	'FME',0,4
	.word	933
	.byte	1,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	933
	.byte	17,0,2,35,0,0,31
	.byte	'Ifx_CPU_PSTR_Bits',0,21,129,4,3
	.word	66566
	.byte	11
	.byte	'_Ifx_CPU_PSW_Bits',0,21,132,4,16,4,12
	.byte	'CDC',0,4
	.word	933
	.byte	7,25,2,35,0,12
	.byte	'CDE',0,4
	.word	933
	.byte	1,24,2,35,0,12
	.byte	'GW',0,4
	.word	933
	.byte	1,23,2,35,0,12
	.byte	'IS',0,4
	.word	933
	.byte	1,22,2,35,0,12
	.byte	'IO',0,4
	.word	933
	.byte	2,20,2,35,0,12
	.byte	'PRS',0,4
	.word	933
	.byte	2,18,2,35,0,12
	.byte	'S',0,4
	.word	933
	.byte	1,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	933
	.byte	12,5,2,35,0,12
	.byte	'SAV',0,4
	.word	933
	.byte	1,4,2,35,0,12
	.byte	'AV',0,4
	.word	933
	.byte	1,3,2,35,0,12
	.byte	'SV',0,4
	.word	933
	.byte	1,2,2,35,0,12
	.byte	'V',0,4
	.word	933
	.byte	1,1,2,35,0,12
	.byte	'C',0,4
	.word	933
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_PSW_Bits',0,21,147,4,3
	.word	66769
	.byte	11
	.byte	'_Ifx_CPU_SEGEN_Bits',0,21,150,4,16,4,12
	.byte	'ADFLIP',0,4
	.word	933
	.byte	8,24,2,35,0,12
	.byte	'ADTYPE',0,4
	.word	933
	.byte	2,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	933
	.byte	21,1,2,35,0,12
	.byte	'AE',0,4
	.word	933
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_SEGEN_Bits',0,21,156,4,3
	.word	67012
	.byte	11
	.byte	'_Ifx_CPU_SMACON_Bits',0,21,159,4,16,4,12
	.byte	'PC',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	933
	.byte	1,30,2,35,0,12
	.byte	'PT',0,4
	.word	933
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	933
	.byte	5,24,2,35,0,12
	.byte	'DC',0,4
	.word	933
	.byte	1,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	933
	.byte	1,22,2,35,0,12
	.byte	'DT',0,4
	.word	933
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	933
	.byte	13,8,2,35,0,12
	.byte	'IODT',0,4
	.word	933
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	933
	.byte	7,0,2,35,0,0,31
	.byte	'Ifx_CPU_SMACON_Bits',0,21,171,4,3
	.word	67140
	.byte	11
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,21,174,4,16,4,12
	.byte	'EN',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,21,177,4,3
	.word	67381
	.byte	11
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,21,180,4,16,4,12
	.byte	'reserved_0',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,21,183,4,3
	.word	67464
	.byte	11
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,21,186,4,16,4,12
	.byte	'EN',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,21,189,4,3
	.word	67555
	.byte	11
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,21,192,4,16,4,12
	.byte	'reserved_0',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,21,195,4,3
	.word	67646
	.byte	11
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,21,198,4,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	5,3,2,35,0,12
	.byte	'ADDR',0,4
	.word	337
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,21,202,4,3
	.word	67745
	.byte	11
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,21,205,4,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	5,3,2,35,0,12
	.byte	'ADDR',0,4
	.word	337
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,21,209,4,3
	.word	67852
	.byte	11
	.byte	'_Ifx_CPU_SWEVT_Bits',0,21,212,4,16,4,12
	.byte	'EVTA',0,4
	.word	933
	.byte	3,29,2,35,0,12
	.byte	'BBM',0,4
	.word	933
	.byte	1,28,2,35,0,12
	.byte	'BOD',0,4
	.word	933
	.byte	1,27,2,35,0,12
	.byte	'SUSP',0,4
	.word	933
	.byte	1,26,2,35,0,12
	.byte	'CNT',0,4
	.word	933
	.byte	2,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	933
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_SWEVT_Bits',0,21,220,4,3
	.word	67959
	.byte	11
	.byte	'_Ifx_CPU_SYSCON_Bits',0,21,223,4,16,4,12
	.byte	'FCDSF',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'PROTEN',0,4
	.word	933
	.byte	1,30,2,35,0,12
	.byte	'TPROTEN',0,4
	.word	933
	.byte	1,29,2,35,0,12
	.byte	'IS',0,4
	.word	933
	.byte	1,28,2,35,0,12
	.byte	'IT',0,4
	.word	933
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	933
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_SYSCON_Bits',0,21,231,4,3
	.word	68113
	.byte	11
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,21,234,4,16,4,12
	.byte	'ASI',0,4
	.word	933
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	933
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,21,238,4,3
	.word	68274
	.byte	11
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,21,241,4,16,4,12
	.byte	'TEXP0',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'TEXP1',0,4
	.word	933
	.byte	1,30,2,35,0,12
	.byte	'TEXP2',0,4
	.word	933
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	933
	.byte	13,16,2,35,0,12
	.byte	'TTRAP',0,4
	.word	933
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	933
	.byte	15,0,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_CON_Bits',0,21,249,4,3
	.word	68372
	.byte	11
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,21,252,4,16,4,12
	.byte	'Timer',0,4
	.word	933
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,21,255,4,3
	.word	68544
	.byte	11
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,21,130,5,16,4,12
	.byte	'ADDR',0,4
	.word	933
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_TR_ADR_Bits',0,21,133,5,3
	.word	68624
	.byte	11
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,21,136,5,16,4,12
	.byte	'EVTA',0,4
	.word	933
	.byte	3,29,2,35,0,12
	.byte	'BBM',0,4
	.word	933
	.byte	1,28,2,35,0,12
	.byte	'BOD',0,4
	.word	933
	.byte	1,27,2,35,0,12
	.byte	'SUSP',0,4
	.word	933
	.byte	1,26,2,35,0,12
	.byte	'CNT',0,4
	.word	933
	.byte	2,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	933
	.byte	4,20,2,35,0,12
	.byte	'TYP',0,4
	.word	933
	.byte	1,19,2,35,0,12
	.byte	'RNG',0,4
	.word	933
	.byte	1,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	933
	.byte	1,17,2,35,0,12
	.byte	'ASI_EN',0,4
	.word	933
	.byte	1,16,2,35,0,12
	.byte	'ASI',0,4
	.word	933
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	933
	.byte	6,5,2,35,0,12
	.byte	'AST',0,4
	.word	933
	.byte	1,4,2,35,0,12
	.byte	'ALD',0,4
	.word	933
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	933
	.byte	3,0,2,35,0,0,31
	.byte	'Ifx_CPU_TR_EVT_Bits',0,21,153,5,3
	.word	68697
	.byte	11
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,21,156,5,16,4,12
	.byte	'T0',0,4
	.word	933
	.byte	1,31,2,35,0,12
	.byte	'T1',0,4
	.word	933
	.byte	1,30,2,35,0,12
	.byte	'T2',0,4
	.word	933
	.byte	1,29,2,35,0,12
	.byte	'T3',0,4
	.word	933
	.byte	1,28,2,35,0,12
	.byte	'T4',0,4
	.word	933
	.byte	1,27,2,35,0,12
	.byte	'T5',0,4
	.word	933
	.byte	1,26,2,35,0,12
	.byte	'T6',0,4
	.word	933
	.byte	1,25,2,35,0,12
	.byte	'T7',0,4
	.word	933
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	933
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,21,167,5,3
	.word	69015
	.byte	13,21,175,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60233
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_A',0,21,180,5,3
	.word	69210
	.byte	13,21,183,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60294
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_BIV',0,21,188,5,3
	.word	69269
	.byte	13,21,191,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60373
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_BTV',0,21,196,5,3
	.word	69330
	.byte	13,21,199,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60459
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CCNT',0,21,204,5,3
	.word	69391
	.byte	13,21,207,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60548
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CCTRL',0,21,212,5,3
	.word	69453
	.byte	13,21,215,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60694
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_COMPAT',0,21,220,5,3
	.word	69516
	.byte	13,21,223,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60821
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CORE_ID',0,21,228,5,3
	.word	69580
	.byte	13,21,231,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60919
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CPR_L',0,21,236,5,3
	.word	69645
	.byte	13,21,239,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61012
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CPR_U',0,21,244,5,3
	.word	69708
	.byte	13,21,247,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61105
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CPU_ID',0,21,252,5,3
	.word	69771
	.byte	13,21,255,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61212
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CPXE',0,21,132,6,3
	.word	69835
	.byte	13,21,135,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61299
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CREVT',0,21,140,6,3
	.word	69897
	.byte	13,21,143,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61453
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CUS_ID',0,21,148,6,3
	.word	69960
	.byte	13,21,151,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61547
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_D',0,21,156,6,3
	.word	70024
	.byte	13,21,159,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61610
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DATR',0,21,164,6,3
	.word	70083
	.byte	13,21,167,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61828
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DBGSR',0,21,172,6,3
	.word	70145
	.byte	13,21,175,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62043
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DBGTCR',0,21,180,6,3
	.word	70208
	.byte	13,21,183,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62137
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DCON0',0,21,188,6,3
	.word	70272
	.byte	13,21,191,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62253
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DCON2',0,21,196,6,3
	.word	70335
	.byte	13,21,199,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62354
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DCX',0,21,204,6,3
	.word	70398
	.byte	13,21,207,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62447
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DEADD',0,21,212,6,3
	.word	70459
	.byte	13,21,215,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62527
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DIEAR',0,21,220,6,3
	.word	70522
	.byte	13,21,223,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62596
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DIETR',0,21,228,6,3
	.word	70585
	.byte	13,21,231,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62825
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DMS',0,21,236,6,3
	.word	70648
	.byte	13,21,239,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62918
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DPR_L',0,21,244,6,3
	.word	70709
	.byte	13,21,247,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63013
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DPR_U',0,21,252,6,3
	.word	70772
	.byte	13,21,255,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63108
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DPRE',0,21,132,7,3
	.word	70835
	.byte	13,21,135,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63198
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DPWE',0,21,140,7,3
	.word	70897
	.byte	13,21,143,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63288
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DSTR',0,21,148,7,3
	.word	70959
	.byte	13,21,151,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63612
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_EXEVT',0,21,156,7,3
	.word	71021
	.byte	13,21,159,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63766
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FCX',0,21,164,7,3
	.word	71084
	.byte	13,21,167,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63872
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,21,172,7,3
	.word	71145
	.byte	13,21,175,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64221
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,21,180,7,3
	.word	71215
	.byte	13,21,183,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64381
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,21,188,7,3
	.word	71285
	.byte	13,21,191,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64462
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,21,196,7,3
	.word	71354
	.byte	13,21,199,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64549
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,21,204,7,3
	.word	71425
	.byte	13,21,207,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64636
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,21,212,7,3
	.word	71496
	.byte	13,21,215,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64723
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_ICNT',0,21,220,7,3
	.word	71567
	.byte	13,21,223,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64814
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_ICR',0,21,228,7,3
	.word	71629
	.byte	13,21,231,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64957
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_ISP',0,21,236,7,3
	.word	71690
	.byte	13,21,239,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65023
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_LCX',0,21,244,7,3
	.word	71751
	.byte	13,21,247,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65129
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_M1CNT',0,21,252,7,3
	.word	71812
	.byte	13,21,255,7,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65222
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_M2CNT',0,21,132,8,3
	.word	71875
	.byte	13,21,135,8,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65315
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_M3CNT',0,21,140,8,3
	.word	71938
	.byte	13,21,143,8,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65408
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PC',0,21,148,8,3
	.word	72001
	.byte	13,21,151,8,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65493
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PCON0',0,21,156,8,3
	.word	72061
	.byte	13,21,159,8,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65609
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PCON1',0,21,164,8,3
	.word	72124
	.byte	13,21,167,8,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65720
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PCON2',0,21,172,8,3
	.word	72187
	.byte	13,21,175,8,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65821
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PCXI',0,21,180,8,3
	.word	72250
	.byte	13,21,183,8,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65951
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PIEAR',0,21,188,8,3
	.word	72312
	.byte	13,21,191,8,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66020
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PIETR',0,21,196,8,3
	.word	72375
	.byte	13,21,199,8,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66249
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PMA0',0,21,204,8,3
	.word	72438
	.byte	13,21,207,8,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66362
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PMA1',0,21,212,8,3
	.word	72500
	.byte	13,21,215,8,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66475
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PMA2',0,21,220,8,3
	.word	72562
	.byte	13,21,223,8,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66566
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PSTR',0,21,228,8,3
	.word	72624
	.byte	13,21,231,8,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66769
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PSW',0,21,236,8,3
	.word	72686
	.byte	13,21,239,8,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67012
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SEGEN',0,21,244,8,3
	.word	72747
	.byte	13,21,247,8,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67140
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SMACON',0,21,252,8,3
	.word	72810
	.byte	13,21,255,8,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67381
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_ACCENA',0,21,132,9,3
	.word	72874
	.byte	13,21,135,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67464
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_ACCENB',0,21,140,9,3
	.word	72944
	.byte	13,21,143,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67555
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,21,148,9,3
	.word	73014
	.byte	13,21,151,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67646
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,21,156,9,3
	.word	73088
	.byte	13,21,159,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67745
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,21,164,9,3
	.word	73162
	.byte	13,21,167,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67852
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,21,172,9,3
	.word	73232
	.byte	13,21,175,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67959
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SWEVT',0,21,180,9,3
	.word	73302
	.byte	13,21,183,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68113
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SYSCON',0,21,188,9,3
	.word	73365
	.byte	13,21,191,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68274
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TASK_ASI',0,21,196,9,3
	.word	73429
	.byte	13,21,199,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68372
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_CON',0,21,204,9,3
	.word	73495
	.byte	13,21,207,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68544
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_TIMER',0,21,212,9,3
	.word	73560
	.byte	13,21,215,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68624
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TR_ADR',0,21,220,9,3
	.word	73627
	.byte	13,21,223,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68697
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TR_EVT',0,21,228,9,3
	.word	73691
	.byte	13,21,231,9,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	69015
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TRIG_ACC',0,21,236,9,3
	.word	73755
	.byte	11
	.byte	'_Ifx_CPU_CPR',0,21,247,9,25,8,14
	.byte	'L',0
	.word	69645
	.byte	4,2,35,0,14
	.byte	'U',0
	.word	69708
	.byte	4,2,35,4,0,10
	.word	73821
	.byte	31
	.byte	'Ifx_CPU_CPR',0,21,251,9,3
	.word	73863
	.byte	11
	.byte	'_Ifx_CPU_DPR',0,21,254,9,25,8,14
	.byte	'L',0
	.word	70709
	.byte	4,2,35,0,14
	.byte	'U',0
	.word	70772
	.byte	4,2,35,4,0,10
	.word	73889
	.byte	31
	.byte	'Ifx_CPU_DPR',0,21,130,10,3
	.word	73931
	.byte	11
	.byte	'_Ifx_CPU_SPROT_RGN',0,21,133,10,25,16,14
	.byte	'LA',0
	.word	73162
	.byte	4,2,35,0,14
	.byte	'UA',0
	.word	73232
	.byte	4,2,35,4,14
	.byte	'ACCENA',0
	.word	73014
	.byte	4,2,35,8,14
	.byte	'ACCENB',0
	.word	73088
	.byte	4,2,35,12,0,10
	.word	73957
	.byte	31
	.byte	'Ifx_CPU_SPROT_RGN',0,21,139,10,3
	.word	74039
	.byte	18,12
	.word	73560
	.byte	19,2,0,11
	.byte	'_Ifx_CPU_TPS',0,21,142,10,25,16,14
	.byte	'CON',0
	.word	73495
	.byte	4,2,35,0,14
	.byte	'TIMER',0
	.word	74071
	.byte	12,2,35,4,0,10
	.word	74080
	.byte	31
	.byte	'Ifx_CPU_TPS',0,21,146,10,3
	.word	74128
	.byte	11
	.byte	'_Ifx_CPU_TR',0,21,149,10,25,8,14
	.byte	'EVT',0
	.word	73691
	.byte	4,2,35,0,14
	.byte	'ADR',0
	.word	73627
	.byte	4,2,35,4,0,10
	.word	74154
	.byte	31
	.byte	'Ifx_CPU_TR',0,21,153,10,3
	.word	74199
	.byte	18,176,32
	.word	534
	.byte	19,175,32,0,18,208,223,1
	.word	534
	.byte	19,207,223,1,0,18,248,1
	.word	534
	.byte	19,247,1,0,18,244,29
	.word	534
	.byte	19,243,29,0,18,188,3
	.word	534
	.byte	19,187,3,0,18,232,3
	.word	534
	.byte	19,231,3,0,18,252,23
	.word	534
	.byte	19,251,23,0,18,228,63
	.word	534
	.byte	19,227,63,0,18,128,1
	.word	73889
	.byte	19,15,0,10
	.word	74314
	.byte	18,128,31
	.word	534
	.byte	19,255,30,0,18,64
	.word	73821
	.byte	19,7,0,10
	.word	74340
	.byte	18,192,31
	.word	534
	.byte	19,191,31,0,18,16
	.word	69835
	.byte	19,3,0,18,16
	.word	70835
	.byte	19,3,0,18,16
	.word	70897
	.byte	19,3,0,18,208,7
	.word	534
	.byte	19,207,7,0,10
	.word	74080
	.byte	18,240,23
	.word	534
	.byte	19,239,23,0,18,64
	.word	74154
	.byte	19,7,0,10
	.word	74419
	.byte	18,192,23
	.word	534
	.byte	19,191,23,0,18,232,1
	.word	534
	.byte	19,231,1,0,18,180,1
	.word	534
	.byte	19,179,1,0,18,172,1
	.word	534
	.byte	19,171,1,0,18,64
	.word	70024
	.byte	19,15,0,18,64
	.word	534
	.byte	19,63,0,18,64
	.word	69210
	.byte	19,15,0,11
	.byte	'_Ifx_CPU',0,21,166,10,25,128,128,4,14
	.byte	'reserved_0',0
	.word	74224
	.byte	176,32,2,35,0,14
	.byte	'SEGEN',0
	.word	72747
	.byte	4,3,35,176,32,14
	.byte	'reserved_1034',0
	.word	74235
	.byte	208,223,1,3,35,180,32,14
	.byte	'TASK_ASI',0
	.word	73429
	.byte	4,4,35,132,128,2,14
	.byte	'reserved_8008',0
	.word	74248
	.byte	248,1,4,35,136,128,2,14
	.byte	'PMA0',0
	.word	72438
	.byte	4,4,35,128,130,2,14
	.byte	'PMA1',0
	.word	72500
	.byte	4,4,35,132,130,2,14
	.byte	'PMA2',0
	.word	72562
	.byte	4,4,35,136,130,2,14
	.byte	'reserved_810C',0
	.word	74259
	.byte	244,29,4,35,140,130,2,14
	.byte	'DCON2',0
	.word	70335
	.byte	4,4,35,128,160,2,14
	.byte	'reserved_9004',0
	.word	5091
	.byte	8,4,35,132,160,2,14
	.byte	'SMACON',0
	.word	72810
	.byte	4,4,35,140,160,2,14
	.byte	'DSTR',0
	.word	70959
	.byte	4,4,35,144,160,2,14
	.byte	'reserved_9014',0
	.word	3272
	.byte	4,4,35,148,160,2,14
	.byte	'DATR',0
	.word	70083
	.byte	4,4,35,152,160,2,14
	.byte	'DEADD',0
	.word	70459
	.byte	4,4,35,156,160,2,14
	.byte	'DIEAR',0
	.word	70522
	.byte	4,4,35,160,160,2,14
	.byte	'DIETR',0
	.word	70585
	.byte	4,4,35,164,160,2,14
	.byte	'reserved_9028',0
	.word	4462
	.byte	24,4,35,168,160,2,14
	.byte	'DCON0',0
	.word	70272
	.byte	4,4,35,192,160,2,14
	.byte	'reserved_9044',0
	.word	74270
	.byte	188,3,4,35,196,160,2,14
	.byte	'PSTR',0
	.word	72624
	.byte	4,4,35,128,164,2,14
	.byte	'PCON1',0
	.word	72124
	.byte	4,4,35,132,164,2,14
	.byte	'PCON2',0
	.word	72187
	.byte	4,4,35,136,164,2,14
	.byte	'PCON0',0
	.word	72061
	.byte	4,4,35,140,164,2,14
	.byte	'PIEAR',0
	.word	72312
	.byte	4,4,35,144,164,2,14
	.byte	'PIETR',0
	.word	72375
	.byte	4,4,35,148,164,2,14
	.byte	'reserved_9218',0
	.word	74281
	.byte	232,3,4,35,152,164,2,14
	.byte	'COMPAT',0
	.word	69516
	.byte	4,4,35,128,168,2,14
	.byte	'reserved_9404',0
	.word	74292
	.byte	252,23,4,35,132,168,2,14
	.byte	'FPU_TRAP_CON',0
	.word	71145
	.byte	4,4,35,128,192,2,14
	.byte	'FPU_TRAP_PC',0
	.word	71285
	.byte	4,4,35,132,192,2,14
	.byte	'FPU_TRAP_OPC',0
	.word	71215
	.byte	4,4,35,136,192,2,14
	.byte	'reserved_A00C',0
	.word	3272
	.byte	4,4,35,140,192,2,14
	.byte	'FPU_TRAP_SRC1',0
	.word	71354
	.byte	4,4,35,144,192,2,14
	.byte	'FPU_TRAP_SRC2',0
	.word	71425
	.byte	4,4,35,148,192,2,14
	.byte	'FPU_TRAP_SRC3',0
	.word	71496
	.byte	4,4,35,152,192,2,14
	.byte	'reserved_A01C',0
	.word	74303
	.byte	228,63,4,35,156,192,2,14
	.byte	'DPR',0
	.word	74324
	.byte	128,1,4,35,128,128,3,14
	.byte	'reserved_C080',0
	.word	74329
	.byte	128,31,4,35,128,129,3,14
	.byte	'CPR',0
	.word	74349
	.byte	64,4,35,128,160,3,14
	.byte	'reserved_D040',0
	.word	74354
	.byte	192,31,4,35,192,160,3,14
	.byte	'CPXE',0
	.word	74365
	.byte	16,4,35,128,192,3,14
	.byte	'DPRE',0
	.word	74374
	.byte	16,4,35,144,192,3,14
	.byte	'DPWE',0
	.word	74383
	.byte	16,4,35,160,192,3,14
	.byte	'reserved_E030',0
	.word	74392
	.byte	208,7,4,35,176,192,3,14
	.byte	'TPS',0
	.word	74403
	.byte	16,4,35,128,200,3,14
	.byte	'reserved_E410',0
	.word	74408
	.byte	240,23,4,35,144,200,3,14
	.byte	'TR',0
	.word	74428
	.byte	64,4,35,128,224,3,14
	.byte	'reserved_F040',0
	.word	74433
	.byte	192,23,4,35,192,224,3,14
	.byte	'CCTRL',0
	.word	69453
	.byte	4,4,35,128,248,3,14
	.byte	'CCNT',0
	.word	69391
	.byte	4,4,35,132,248,3,14
	.byte	'ICNT',0
	.word	71567
	.byte	4,4,35,136,248,3,14
	.byte	'M1CNT',0
	.word	71812
	.byte	4,4,35,140,248,3,14
	.byte	'M2CNT',0
	.word	71875
	.byte	4,4,35,144,248,3,14
	.byte	'M3CNT',0
	.word	71938
	.byte	4,4,35,148,248,3,14
	.byte	'reserved_FC18',0
	.word	74444
	.byte	232,1,4,35,152,248,3,14
	.byte	'DBGSR',0
	.word	70145
	.byte	4,4,35,128,250,3,14
	.byte	'reserved_FD04',0
	.word	3272
	.byte	4,4,35,132,250,3,14
	.byte	'EXEVT',0
	.word	71021
	.byte	4,4,35,136,250,3,14
	.byte	'CREVT',0
	.word	69897
	.byte	4,4,35,140,250,3,14
	.byte	'SWEVT',0
	.word	73302
	.byte	4,4,35,144,250,3,14
	.byte	'reserved_FD14',0
	.word	58183
	.byte	28,4,35,148,250,3,14
	.byte	'TRIG_ACC',0
	.word	73755
	.byte	4,4,35,176,250,3,14
	.byte	'reserved_FD34',0
	.word	5431
	.byte	12,4,35,180,250,3,14
	.byte	'DMS',0
	.word	70648
	.byte	4,4,35,192,250,3,14
	.byte	'DCX',0
	.word	70398
	.byte	4,4,35,196,250,3,14
	.byte	'DBGTCR',0
	.word	70208
	.byte	4,4,35,200,250,3,14
	.byte	'reserved_FD4C',0
	.word	74455
	.byte	180,1,4,35,204,250,3,14
	.byte	'PCXI',0
	.word	72250
	.byte	4,4,35,128,252,3,14
	.byte	'PSW',0
	.word	72686
	.byte	4,4,35,132,252,3,14
	.byte	'PC',0
	.word	72001
	.byte	4,4,35,136,252,3,14
	.byte	'reserved_FE0C',0
	.word	5091
	.byte	8,4,35,140,252,3,14
	.byte	'SYSCON',0
	.word	73365
	.byte	4,4,35,148,252,3,14
	.byte	'CPU_ID',0
	.word	69771
	.byte	4,4,35,152,252,3,14
	.byte	'CORE_ID',0
	.word	69580
	.byte	4,4,35,156,252,3,14
	.byte	'BIV',0
	.word	69269
	.byte	4,4,35,160,252,3,14
	.byte	'BTV',0
	.word	69330
	.byte	4,4,35,164,252,3,14
	.byte	'ISP',0
	.word	71690
	.byte	4,4,35,168,252,3,14
	.byte	'ICR',0
	.word	71629
	.byte	4,4,35,172,252,3,14
	.byte	'reserved_FE30',0
	.word	5091
	.byte	8,4,35,176,252,3,14
	.byte	'FCX',0
	.word	71084
	.byte	4,4,35,184,252,3,14
	.byte	'LCX',0
	.word	71751
	.byte	4,4,35,188,252,3,14
	.byte	'reserved_FE40',0
	.word	28734
	.byte	16,4,35,192,252,3,14
	.byte	'CUS_ID',0
	.word	69960
	.byte	4,4,35,208,252,3,14
	.byte	'reserved_FE54',0
	.word	74466
	.byte	172,1,4,35,212,252,3,14
	.byte	'D',0
	.word	74477
	.byte	64,4,35,128,254,3,14
	.byte	'reserved_FF40',0
	.word	74486
	.byte	64,4,35,192,254,3,14
	.byte	'A',0
	.word	74495
	.byte	64,4,35,128,255,3,14
	.byte	'reserved_FFC0',0
	.word	74486
	.byte	64,4,35,192,255,3,0,10
	.word	74504
	.byte	31
	.byte	'Ifx_CPU',0,21,130,11,3
	.word	76295
	.byte	15,8,127,9,1,16
	.byte	'IfxCpu_Id_0',0,0,16
	.byte	'IfxCpu_Id_1',0,1,16
	.byte	'IfxCpu_Id_none',0,2,0,31
	.byte	'IfxCpu_Id',0,8,132,1,3
	.word	76317
	.byte	31
	.byte	'IfxCpu_ResourceCpu',0,8,161,1,3
	.word	1880
	.byte	11
	.byte	'_Ifx_STM_ACCEN0_Bits',0,22,45,16,4,12
	.byte	'EN0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	534
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	534
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	534
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	534
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_STM_ACCEN0_Bits',0,22,79,3
	.word	76415
	.byte	11
	.byte	'_Ifx_STM_ACCEN1_Bits',0,22,82,16,4,12
	.byte	'reserved_0',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_ACCEN1_Bits',0,22,85,3
	.word	76972
	.byte	11
	.byte	'_Ifx_STM_CAP_Bits',0,22,88,16,4,12
	.byte	'STMCAP63_32',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_CAP_Bits',0,22,91,3
	.word	77049
	.byte	11
	.byte	'_Ifx_STM_CAPSV_Bits',0,22,94,16,4,12
	.byte	'STMCAP63_32',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_CAPSV_Bits',0,22,97,3
	.word	77121
	.byte	11
	.byte	'_Ifx_STM_CLC_Bits',0,22,100,16,4,12
	.byte	'DISR',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'DISS',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'EDIS',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	337
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_STM_CLC_Bits',0,22,107,3
	.word	77197
	.byte	11
	.byte	'_Ifx_STM_CMCON_Bits',0,22,110,16,4,12
	.byte	'MSIZE0',0,1
	.word	534
	.byte	5,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	534
	.byte	3,0,2,35,0,12
	.byte	'MSTART0',0,1
	.word	534
	.byte	5,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	534
	.byte	3,0,2,35,1,12
	.byte	'MSIZE1',0,1
	.word	534
	.byte	5,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	534
	.byte	3,0,2,35,2,12
	.byte	'MSTART1',0,1
	.word	534
	.byte	5,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	534
	.byte	3,0,2,35,3,0,31
	.byte	'Ifx_STM_CMCON_Bits',0,22,120,3
	.word	77338
	.byte	11
	.byte	'_Ifx_STM_CMP_Bits',0,22,123,16,4,12
	.byte	'CMPVAL',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_CMP_Bits',0,22,126,3
	.word	77556
	.byte	11
	.byte	'_Ifx_STM_ICR_Bits',0,22,129,1,16,4,12
	.byte	'CMP0EN',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'CMP0IR',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'CMP0OS',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'CMP1EN',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'CMP1IR',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'CMP1OS',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,4
	.word	337
	.byte	25,0,2,35,0,0,31
	.byte	'Ifx_STM_ICR_Bits',0,22,139,1,3
	.word	77623
	.byte	11
	.byte	'_Ifx_STM_ID_Bits',0,22,142,1,16,4,12
	.byte	'MODREV',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'MODTYPE',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'MODNUMBER',0,2
	.word	1085
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_STM_ID_Bits',0,22,147,1,3
	.word	77826
	.byte	11
	.byte	'_Ifx_STM_ISCR_Bits',0,22,150,1,16,4,12
	.byte	'CMP0IRR',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'CMP0IRS',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'CMP1IRR',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'CMP1IRS',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	337
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_STM_ISCR_Bits',0,22,157,1,3
	.word	77933
	.byte	11
	.byte	'_Ifx_STM_KRST0_Bits',0,22,160,1,16,4,12
	.byte	'RST',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'RSTSTAT',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	337
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_STM_KRST0_Bits',0,22,165,1,3
	.word	78084
	.byte	11
	.byte	'_Ifx_STM_KRST1_Bits',0,22,168,1,16,4,12
	.byte	'RST',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,4
	.word	337
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_STM_KRST1_Bits',0,22,172,1,3
	.word	78195
	.byte	11
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,22,175,1,16,4,12
	.byte	'CLR',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,4
	.word	337
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_STM_KRSTCLR_Bits',0,22,179,1,3
	.word	78287
	.byte	11
	.byte	'_Ifx_STM_OCS_Bits',0,22,182,1,16,4,12
	.byte	'reserved_0',0,4
	.word	337
	.byte	24,8,2,35,0,12
	.byte	'SUS',0,1
	.word	534
	.byte	4,4,2,35,3,12
	.byte	'SUS_P',0,1
	.word	534
	.byte	1,3,2,35,3,12
	.byte	'SUSSTA',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	534
	.byte	2,0,2,35,3,0,31
	.byte	'Ifx_STM_OCS_Bits',0,22,189,1,3
	.word	78383
	.byte	11
	.byte	'_Ifx_STM_TIM0_Bits',0,22,192,1,16,4,12
	.byte	'STM31_0',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM0_Bits',0,22,195,1,3
	.word	78529
	.byte	11
	.byte	'_Ifx_STM_TIM0SV_Bits',0,22,198,1,16,4,12
	.byte	'STM31_0',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM0SV_Bits',0,22,201,1,3
	.word	78601
	.byte	11
	.byte	'_Ifx_STM_TIM1_Bits',0,22,204,1,16,4,12
	.byte	'STM35_4',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM1_Bits',0,22,207,1,3
	.word	78677
	.byte	11
	.byte	'_Ifx_STM_TIM2_Bits',0,22,210,1,16,4,12
	.byte	'STM39_8',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM2_Bits',0,22,213,1,3
	.word	78749
	.byte	11
	.byte	'_Ifx_STM_TIM3_Bits',0,22,216,1,16,4,12
	.byte	'STM43_12',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM3_Bits',0,22,219,1,3
	.word	78821
	.byte	11
	.byte	'_Ifx_STM_TIM4_Bits',0,22,222,1,16,4,12
	.byte	'STM47_16',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM4_Bits',0,22,225,1,3
	.word	78894
	.byte	11
	.byte	'_Ifx_STM_TIM5_Bits',0,22,228,1,16,4,12
	.byte	'STM51_20',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM5_Bits',0,22,231,1,3
	.word	78967
	.byte	11
	.byte	'_Ifx_STM_TIM6_Bits',0,22,234,1,16,4,12
	.byte	'STM63_32',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM6_Bits',0,22,237,1,3
	.word	79040
	.byte	13,22,245,1,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76415
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_ACCEN0',0,22,250,1,3
	.word	79113
	.byte	13,22,253,1,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76972
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_ACCEN1',0,22,130,2,3
	.word	79177
	.byte	13,22,133,2,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77049
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_CAP',0,22,138,2,3
	.word	79241
	.byte	13,22,141,2,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77121
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_CAPSV',0,22,146,2,3
	.word	79302
	.byte	13,22,149,2,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77197
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_CLC',0,22,154,2,3
	.word	79365
	.byte	13,22,157,2,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77338
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_CMCON',0,22,162,2,3
	.word	79426
	.byte	13,22,165,2,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77556
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_CMP',0,22,170,2,3
	.word	79489
	.byte	13,22,173,2,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77623
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_ICR',0,22,178,2,3
	.word	79550
	.byte	13,22,181,2,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77826
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_ID',0,22,186,2,3
	.word	79611
	.byte	13,22,189,2,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77933
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_ISCR',0,22,194,2,3
	.word	79671
	.byte	13,22,197,2,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78084
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_KRST0',0,22,202,2,3
	.word	79733
	.byte	13,22,205,2,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78195
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_KRST1',0,22,210,2,3
	.word	79796
	.byte	13,22,213,2,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78287
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_KRSTCLR',0,22,218,2,3
	.word	79859
	.byte	13,22,221,2,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78383
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_OCS',0,22,226,2,3
	.word	79924
	.byte	13,22,229,2,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78529
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM0',0,22,234,2,3
	.word	79985
	.byte	13,22,237,2,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78601
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM0SV',0,22,242,2,3
	.word	80047
	.byte	13,22,245,2,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78677
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM1',0,22,250,2,3
	.word	80111
	.byte	13,22,253,2,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78749
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM2',0,22,130,3,3
	.word	80173
	.byte	13,22,133,3,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78821
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM3',0,22,138,3,3
	.word	80235
	.byte	13,22,141,3,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78894
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM4',0,22,146,3,3
	.word	80297
	.byte	13,22,149,3,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78967
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM5',0,22,154,3,3
	.word	80359
	.byte	13,22,157,3,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79040
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM6',0,22,162,3,3
	.word	80421
	.byte	15,7,144,1,9,1,16
	.byte	'IfxCpu_CounterMode_normal',0,0,16
	.byte	'IfxCpu_CounterMode_task',0,1,0,31
	.byte	'IfxCpu_CounterMode',0,7,148,1,3
	.word	80483
	.byte	30,7,160,1,9,6,14
	.byte	'counter',0
	.word	2035
	.byte	4,2,35,0,14
	.byte	'overlfow',0
	.word	534
	.byte	1,2,35,4,0,31
	.byte	'IfxCpu_Counter',0,7,164,1,3
	.word	80572
	.byte	30,7,172,1,9,32,14
	.byte	'instruction',0
	.word	80572
	.byte	6,2,35,0,14
	.byte	'clock',0
	.word	80572
	.byte	6,2,35,6,14
	.byte	'counter1',0
	.word	80572
	.byte	6,2,35,12,14
	.byte	'counter2',0
	.word	80572
	.byte	6,2,35,18,14
	.byte	'counter3',0
	.word	80572
	.byte	6,2,35,24,0,31
	.byte	'IfxCpu_Perf',0,7,179,1,3
	.word	80638
	.byte	11
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,23,45,16,4,12
	.byte	'EN0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	534
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	534
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	534
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	534
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,23,79,3
	.word	80756
	.byte	11
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,23,82,16,4,12
	.byte	'reserved_0',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,23,85,3
	.word	81317
	.byte	11
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,23,88,16,4,12
	.byte	'SEL',0,1
	.word	534
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	534
	.byte	2,0,2,35,0,12
	.byte	'CLR',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'DIS',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'reserved_10',0,4
	.word	337
	.byte	22,0,2,35,0,0,31
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,23,95,3
	.word	81398
	.byte	11
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,23,98,16,4,12
	.byte	'VLD0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'VLD1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'VLD2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'VLD3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'VLD4',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'VLD5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'VLD6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'VLD7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'VLD8',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'VLD9',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'reserved_10',0,4
	.word	337
	.byte	22,0,2,35,0,0,31
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,23,111,3
	.word	81551
	.byte	11
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,23,114,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	5,3,2,35,0,12
	.byte	'ADDR',0,4
	.word	337
	.byte	19,8,2,35,0,12
	.byte	'ERR',0,1
	.word	534
	.byte	6,2,2,35,3,12
	.byte	'VLD',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'CLR',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,23,121,3
	.word	81799
	.byte	11
	.byte	'_Ifx_FLASH_COMM0_Bits',0,23,124,16,4,12
	.byte	'STATUS',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	337
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_FLASH_COMM0_Bits',0,23,128,1,3
	.word	81945
	.byte	11
	.byte	'_Ifx_FLASH_COMM1_Bits',0,23,131,1,16,4,12
	.byte	'STATUS',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'DATA',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_COMM1_Bits',0,23,136,1,3
	.word	82043
	.byte	11
	.byte	'_Ifx_FLASH_COMM2_Bits',0,23,139,1,16,4,12
	.byte	'STATUS',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'DATA',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_COMM2_Bits',0,23,144,1,3
	.word	82159
	.byte	11
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,23,147,1,16,4,12
	.byte	'RCODE',0,4
	.word	337
	.byte	22,10,2,35,0,12
	.byte	'reserved_22',0,2
	.word	1085
	.byte	8,2,2,35,2,12
	.byte	'EDCERRINJ',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'ECCORDIS',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_ECCRD_Bits',0,23,153,1,3
	.word	82275
	.byte	11
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,23,156,1,16,4,12
	.byte	'RCODE',0,4
	.word	337
	.byte	22,10,2,35,0,12
	.byte	'reserved_22',0,2
	.word	1085
	.byte	8,2,2,35,2,12
	.byte	'EDCERRINJ',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'ECCORDIS',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_ECCRP_Bits',0,23,162,1,3
	.word	82415
	.byte	11
	.byte	'_Ifx_FLASH_ECCW_Bits',0,23,165,1,16,4,12
	.byte	'WCODE',0,4
	.word	337
	.byte	22,10,2,35,0,12
	.byte	'reserved_22',0,2
	.word	1085
	.byte	8,2,2,35,2,12
	.byte	'DECENCDIS',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'PECENCDIS',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_ECCW_Bits',0,23,171,1,3
	.word	82555
	.byte	11
	.byte	'_Ifx_FLASH_FCON_Bits',0,23,174,1,16,4,12
	.byte	'WSPFLASH',0,1
	.word	534
	.byte	4,4,2,35,0,12
	.byte	'WSECPF',0,1
	.word	534
	.byte	2,2,2,35,0,12
	.byte	'WSDFLASH',0,2
	.word	1085
	.byte	6,4,2,35,0,12
	.byte	'WSECDF',0,1
	.word	534
	.byte	3,1,2,35,1,12
	.byte	'IDLE',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'ESLDIS',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'SLEEP',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'NSAFECC',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'STALL',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'RES21',0,1
	.word	534
	.byte	2,2,2,35,2,12
	.byte	'RES23',0,1
	.word	534
	.byte	2,0,2,35,2,12
	.byte	'VOPERM',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'SQERM',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'PROERM',0,1
	.word	534
	.byte	1,5,2,35,3,12
	.byte	'reserved_27',0,1
	.word	534
	.byte	3,2,2,35,3,12
	.byte	'PR5V',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'EOBM',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_FCON_Bits',0,23,193,1,3
	.word	82694
	.byte	11
	.byte	'_Ifx_FLASH_FPRO_Bits',0,23,196,1,16,4,12
	.byte	'PROINP',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'PRODISP',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'PROIND',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'PRODISD',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'PROINHSMCOTP',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'RES5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'PROINOTP',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'RES7',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'PROINDBG',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'PRODISDBG',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'PROINHSM',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'reserved_11',0,1
	.word	534
	.byte	5,0,2,35,1,12
	.byte	'DCFP',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'DDFP',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'DDFPX',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'DDFD',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	534
	.byte	1,2,2,35,2,12
	.byte	'ENPE',0,1
	.word	534
	.byte	2,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	534
	.byte	8,0,2,35,3,0,31
	.byte	'Ifx_FLASH_FPRO_Bits',0,23,218,1,3
	.word	83056
	.byte	11
	.byte	'_Ifx_FLASH_FSR_Bits',0,23,221,1,16,4,12
	.byte	'FABUSY',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'D0BUSY',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'RES1',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'P0BUSY',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'P1BUSY',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'RES5',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'RES6',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'PROG',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'ERASE',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'PFPAGE',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'DFPAGE',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'OPER',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'SQER',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'PROER',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'PFSBER',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'PFDBER',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'PFMBER',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'RES17',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'DFSBER',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'DFDBER',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'DFTBER',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'DFMBER',0,1
	.word	534
	.byte	1,2,2,35,2,12
	.byte	'SRIADDERR',0,1
	.word	534
	.byte	1,1,2,35,2,12
	.byte	'reserved_23',0,2
	.word	1085
	.byte	2,7,2,35,2,12
	.byte	'PVER',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'EVER',0,1
	.word	534
	.byte	1,5,2,35,3,12
	.byte	'SPND',0,1
	.word	534
	.byte	1,4,2,35,3,12
	.byte	'SLM',0,1
	.word	534
	.byte	1,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	534
	.byte	1,2,2,35,3,12
	.byte	'ORIER',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_FSR_Bits',0,23,254,1,3
	.word	83497
	.byte	11
	.byte	'_Ifx_FLASH_ID_Bits',0,23,129,2,16,4,12
	.byte	'MODREV',0,1
	.word	534
	.byte	8,0,2,35,0,12
	.byte	'MODTYPE',0,1
	.word	534
	.byte	8,0,2,35,1,12
	.byte	'MODNUMBER',0,2
	.word	1085
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_ID_Bits',0,23,134,2,3
	.word	84103
	.byte	11
	.byte	'_Ifx_FLASH_MARD_Bits',0,23,137,2,16,4,12
	.byte	'HMARGIN',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'SELD0',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'SPND',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'SPNDERR',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,2
	.word	1085
	.byte	10,1,2,35,0,12
	.byte	'TRAPDIS',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_MARD_Bits',0,23,147,2,3
	.word	84214
	.byte	11
	.byte	'_Ifx_FLASH_MARP_Bits',0,23,150,2,16,4,12
	.byte	'SELP0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'SELP1',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'RES2',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'RES3',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,2
	.word	1085
	.byte	11,1,2,35,0,12
	.byte	'TRAPDIS',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_MARP_Bits',0,23,159,2,3
	.word	84428
	.byte	11
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,23,162,2,16,4,12
	.byte	'L',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'NSAFECC',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'RAMIN',0,1
	.word	534
	.byte	2,4,2,35,0,12
	.byte	'RAMINSEL',0,1
	.word	534
	.byte	4,0,2,35,0,12
	.byte	'OSCCFG',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'MODE',0,1
	.word	534
	.byte	2,5,2,35,1,12
	.byte	'APREN',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'CAP0EN',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'CAP1EN',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'CAP2EN',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'CAP3EN',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'ESR0CNT',0,2
	.word	1085
	.byte	12,4,2,35,2,12
	.byte	'RES29',0,1
	.word	534
	.byte	2,2,2,35,3,12
	.byte	'RES30',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'RPRO',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_PROCOND_Bits',0,23,179,2,3
	.word	84615
	.byte	11
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,23,182,2,16,4,12
	.byte	'OCDSDIS',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'DBGIFLCK',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'EDM',0,1
	.word	534
	.byte	2,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	337
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,23,188,2,3
	.word	84939
	.byte	11
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,23,191,2,16,4,12
	.byte	'HSMDBGDIS',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'DBGIFLCK',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'TSTIFLCK',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'HSMTSTDIS',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'RES15',0,2
	.word	1085
	.byte	12,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1085
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,23,199,2,3
	.word	85082
	.byte	11
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,23,202,2,16,4,12
	.byte	'HSMBOOTEN',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'SSWWAIT',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'HSMDX',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'HSM6X',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'HSM16X',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'HSM17X',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'S6ROM',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'HSMENPINS',0,2
	.word	1085
	.byte	2,7,2,35,0,12
	.byte	'HSMENRES',0,1
	.word	534
	.byte	2,5,2,35,1,12
	.byte	'DESTDBG',0,1
	.word	534
	.byte	2,3,2,35,1,12
	.byte	'BLKFLAN',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'reserved_14',0,1
	.word	534
	.byte	2,0,2,35,1,12
	.byte	'S16ROM',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'S17ROM',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,2
	.word	1085
	.byte	14,0,2,35,2,0,31
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,23,219,2,3
	.word	85271
	.byte	11
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,23,222,2,16,4,12
	.byte	'S0ROM',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'S1ROM',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'S2ROM',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'S3ROM',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'S4ROM',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'S5ROM',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'S6ROM',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'S7ROM',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'S8ROM',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'S9ROM',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'S10ROM',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'S11ROM',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'S12ROM',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'S13ROM',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'S14ROM',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'S15ROM',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'S16ROM',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'S17ROM',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'S18ROM',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'S19ROM',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'S20ROM',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'S21ROM',0,1
	.word	534
	.byte	1,2,2,35,2,12
	.byte	'S22ROM',0,1
	.word	534
	.byte	1,1,2,35,2,12
	.byte	'S23ROM',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'S24ROM',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'S25ROM',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'S26ROM',0,1
	.word	534
	.byte	1,5,2,35,3,12
	.byte	'reserved_27',0,1
	.word	534
	.byte	2,3,2,35,3,12
	.byte	'BML',0,1
	.word	534
	.byte	2,1,2,35,3,12
	.byte	'TP',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,23,254,2,3
	.word	85634
	.byte	11
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,23,129,3,16,4,12
	.byte	'S0L',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'S1L',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'S2L',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'S3L',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'S4L',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'S5L',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'S6L',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'S7L',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'S8L',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'S9L',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'S10L',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'S11L',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'S12L',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'S13L',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'S14L',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'S15L',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'S16L',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'S17L',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'S18L',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'S19L',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'S20L',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'S21L',0,1
	.word	534
	.byte	1,2,2,35,2,12
	.byte	'S22L',0,1
	.word	534
	.byte	1,1,2,35,2,12
	.byte	'S23L',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'S24L',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'S25L',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'S26L',0,1
	.word	534
	.byte	1,5,2,35,3,12
	.byte	'reserved_27',0,1
	.word	534
	.byte	4,1,2,35,3,12
	.byte	'RPRO',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_PROCONP_Bits',0,23,160,3,3
	.word	86229
	.byte	11
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,23,163,3,16,4,12
	.byte	'S0WOP',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'S1WOP',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'S2WOP',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'S3WOP',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'S4WOP',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'S5WOP',0,1
	.word	534
	.byte	1,2,2,35,0,12
	.byte	'S6WOP',0,1
	.word	534
	.byte	1,1,2,35,0,12
	.byte	'S7WOP',0,1
	.word	534
	.byte	1,0,2,35,0,12
	.byte	'S8WOP',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'S9WOP',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'S10WOP',0,1
	.word	534
	.byte	1,5,2,35,1,12
	.byte	'S11WOP',0,1
	.word	534
	.byte	1,4,2,35,1,12
	.byte	'S12WOP',0,1
	.word	534
	.byte	1,3,2,35,1,12
	.byte	'S13WOP',0,1
	.word	534
	.byte	1,2,2,35,1,12
	.byte	'S14WOP',0,1
	.word	534
	.byte	1,1,2,35,1,12
	.byte	'S15WOP',0,1
	.word	534
	.byte	1,0,2,35,1,12
	.byte	'S16WOP',0,1
	.word	534
	.byte	1,7,2,35,2,12
	.byte	'S17WOP',0,1
	.word	534
	.byte	1,6,2,35,2,12
	.byte	'S18WOP',0,1
	.word	534
	.byte	1,5,2,35,2,12
	.byte	'S19WOP',0,1
	.word	534
	.byte	1,4,2,35,2,12
	.byte	'S20WOP',0,1
	.word	534
	.byte	1,3,2,35,2,12
	.byte	'S21WOP',0,1
	.word	534
	.byte	1,2,2,35,2,12
	.byte	'S22WOP',0,1
	.word	534
	.byte	1,1,2,35,2,12
	.byte	'S23WOP',0,1
	.word	534
	.byte	1,0,2,35,2,12
	.byte	'S24WOP',0,1
	.word	534
	.byte	1,7,2,35,3,12
	.byte	'S25WOP',0,1
	.word	534
	.byte	1,6,2,35,3,12
	.byte	'S26WOP',0,1
	.word	534
	.byte	1,5,2,35,3,12
	.byte	'reserved_27',0,1
	.word	534
	.byte	4,1,2,35,3,12
	.byte	'DATM',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,23,194,3,3
	.word	86753
	.byte	11
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,23,197,3,16,4,12
	.byte	'TAG',0,1
	.word	534
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	337
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,23,201,3,3
	.word	87335
	.byte	11
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,23,204,3,16,4,12
	.byte	'TAG',0,1
	.word	534
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	337
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,23,208,3,3
	.word	87437
	.byte	11
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,23,211,3,16,4,12
	.byte	'TAG',0,1
	.word	534
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	337
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,23,215,3,3
	.word	87539
	.byte	11
	.byte	'_Ifx_FLASH_RRAD_Bits',0,23,218,3,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	3,5,2,35,0,12
	.byte	'ADD',0,4
	.word	337
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_FLASH_RRAD_Bits',0,23,222,3,3
	.word	87641
	.byte	11
	.byte	'_Ifx_FLASH_RRCT_Bits',0,23,225,3,16,4,12
	.byte	'STRT',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'STP',0,1
	.word	534
	.byte	1,6,2,35,0,12
	.byte	'BUSY',0,1
	.word	534
	.byte	1,5,2,35,0,12
	.byte	'DONE',0,1
	.word	534
	.byte	1,4,2,35,0,12
	.byte	'ERR',0,1
	.word	534
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	534
	.byte	3,0,2,35,0,12
	.byte	'EOBM',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,1
	.word	534
	.byte	7,0,2,35,1,12
	.byte	'CNT',0,2
	.word	1085
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_RRCT_Bits',0,23,236,3,3
	.word	87735
	.byte	11
	.byte	'_Ifx_FLASH_RRD0_Bits',0,23,239,3,16,4,12
	.byte	'DATA',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_FLASH_RRD0_Bits',0,23,242,3,3
	.word	87945
	.byte	11
	.byte	'_Ifx_FLASH_RRD1_Bits',0,23,245,3,16,4,12
	.byte	'DATA',0,4
	.word	337
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_FLASH_RRD1_Bits',0,23,248,3,3
	.word	88018
	.byte	11
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,23,251,3,16,4,12
	.byte	'SEL',0,1
	.word	534
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	534
	.byte	2,0,2,35,0,12
	.byte	'CLR',0,1
	.word	534
	.byte	1,7,2,35,1,12
	.byte	'DIS',0,1
	.word	534
	.byte	1,6,2,35,1,12
	.byte	'reserved_10',0,4
	.word	337
	.byte	22,0,2,35,0,0,31
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,23,130,4,3
	.word	88091
	.byte	11
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,23,133,4,16,4,12
	.byte	'VLD0',0,1
	.word	534
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,4
	.word	337
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,23,137,4,3
	.word	88246
	.byte	11
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,23,140,4,16,4,12
	.byte	'reserved_0',0,1
	.word	534
	.byte	5,3,2,35,0,12
	.byte	'ADDR',0,4
	.word	337
	.byte	19,8,2,35,0,12
	.byte	'ERR',0,1
	.word	534
	.byte	6,2,2,35,3,12
	.byte	'VLD',0,1
	.word	534
	.byte	1,1,2,35,3,12
	.byte	'CLR',0,1
	.word	534
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,23,147,4,3
	.word	88351
	.byte	13,23,155,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80756
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_ACCEN0',0,23,160,4,3
	.word	88499
	.byte	13,23,163,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81317
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_ACCEN1',0,23,168,4,3
	.word	88565
	.byte	13,23,171,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81398
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_CBAB_CFG',0,23,176,4,3
	.word	88631
	.byte	13,23,179,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81551
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_CBAB_STAT',0,23,184,4,3
	.word	88699
	.byte	13,23,187,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81799
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_CBAB_TOP',0,23,192,4,3
	.word	88768
	.byte	13,23,195,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81945
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_COMM0',0,23,200,4,3
	.word	88836
	.byte	13,23,203,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82043
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_COMM1',0,23,208,4,3
	.word	88901
	.byte	13,23,211,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82159
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_COMM2',0,23,216,4,3
	.word	88966
	.byte	13,23,219,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82275
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_ECCRD',0,23,224,4,3
	.word	89031
	.byte	13,23,227,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82415
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_ECCRP',0,23,232,4,3
	.word	89096
	.byte	13,23,235,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82555
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_ECCW',0,23,240,4,3
	.word	89161
	.byte	13,23,243,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82694
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_FCON',0,23,248,4,3
	.word	89225
	.byte	13,23,251,4,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83056
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_FPRO',0,23,128,5,3
	.word	89289
	.byte	13,23,131,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83497
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_FSR',0,23,136,5,3
	.word	89353
	.byte	13,23,139,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84103
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_ID',0,23,144,5,3
	.word	89416
	.byte	13,23,147,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84214
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_MARD',0,23,152,5,3
	.word	89478
	.byte	13,23,155,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84428
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_MARP',0,23,160,5,3
	.word	89542
	.byte	13,23,163,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84615
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCOND',0,23,168,5,3
	.word	89606
	.byte	13,23,171,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84939
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONDBG',0,23,176,5,3
	.word	89673
	.byte	13,23,179,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85082
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONHSM',0,23,184,5,3
	.word	89742
	.byte	13,23,187,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85271
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,23,192,5,3
	.word	89811
	.byte	13,23,195,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85634
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONOTP',0,23,200,5,3
	.word	89884
	.byte	13,23,203,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	86229
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONP',0,23,208,5,3
	.word	89953
	.byte	13,23,211,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	86753
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONWOP',0,23,216,5,3
	.word	90020
	.byte	13,23,219,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87335
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RDB_CFG0',0,23,224,5,3
	.word	90089
	.byte	13,23,227,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87437
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RDB_CFG1',0,23,232,5,3
	.word	90157
	.byte	13,23,235,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87539
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RDB_CFG2',0,23,240,5,3
	.word	90225
	.byte	13,23,243,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87641
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RRAD',0,23,248,5,3
	.word	90293
	.byte	13,23,251,5,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87735
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RRCT',0,23,128,6,3
	.word	90357
	.byte	13,23,131,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87945
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RRD0',0,23,136,6,3
	.word	90421
	.byte	13,23,139,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88018
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RRD1',0,23,144,6,3
	.word	90485
	.byte	13,23,147,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88091
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_UBAB_CFG',0,23,152,6,3
	.word	90549
	.byte	13,23,155,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88246
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_UBAB_STAT',0,23,160,6,3
	.word	90617
	.byte	13,23,163,6,9,4,14
	.byte	'U',0
	.word	337
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	527
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88351
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_UBAB_TOP',0,23,168,6,3
	.word	90686
	.byte	11
	.byte	'_Ifx_FLASH_CBAB',0,23,179,6,25,12,14
	.byte	'CFG',0
	.word	88631
	.byte	4,2,35,0,14
	.byte	'STAT',0
	.word	88699
	.byte	4,2,35,4,14
	.byte	'TOP',0
	.word	88768
	.byte	4,2,35,8,0,10
	.word	90754
	.byte	31
	.byte	'Ifx_FLASH_CBAB',0,23,184,6,3
	.word	90817
	.byte	11
	.byte	'_Ifx_FLASH_RDB',0,23,187,6,25,12,14
	.byte	'CFG0',0
	.word	90089
	.byte	4,2,35,0,14
	.byte	'CFG1',0
	.word	90157
	.byte	4,2,35,4,14
	.byte	'CFG2',0
	.word	90225
	.byte	4,2,35,8,0,10
	.word	90846
	.byte	31
	.byte	'Ifx_FLASH_RDB',0,23,192,6,3
	.word	90910
	.byte	11
	.byte	'_Ifx_FLASH_UBAB',0,23,195,6,25,12,14
	.byte	'CFG',0
	.word	90549
	.byte	4,2,35,0,14
	.byte	'STAT',0
	.word	90617
	.byte	4,2,35,4,14
	.byte	'TOP',0
	.word	90686
	.byte	4,2,35,8,0,10
	.word	90938
	.byte	31
	.byte	'Ifx_FLASH_UBAB',0,23,200,6,3
	.word	91001
	.byte	31
	.byte	'Ifx_P_ACCEN0_Bits',0,10,79,3
	.word	8844
	.byte	31
	.byte	'Ifx_P_ACCEN1_Bits',0,10,85,3
	.word	8757
	.byte	31
	.byte	'Ifx_P_ESR_Bits',0,10,107,3
	.word	5100
	.byte	31
	.byte	'Ifx_P_ID_Bits',0,10,115,3
	.word	3153
	.byte	31
	.byte	'Ifx_P_IN_Bits',0,10,137,1,3
	.word	4148
	.byte	31
	.byte	'Ifx_P_IOCR0_Bits',0,10,150,1,3
	.word	3281
	.byte	31
	.byte	'Ifx_P_IOCR12_Bits',0,10,163,1,3
	.word	3928
	.byte	31
	.byte	'Ifx_P_IOCR4_Bits',0,10,176,1,3
	.word	3496
	.byte	31
	.byte	'Ifx_P_IOCR8_Bits',0,10,189,1,3
	.word	3711
	.byte	31
	.byte	'Ifx_P_LPCR0_Bits',0,10,197,1,3
	.word	8116
	.byte	31
	.byte	'Ifx_P_LPCR1_Bits',0,10,205,1,3
	.word	8240
	.byte	31
	.byte	'Ifx_P_LPCR1_P21_Bits',0,10,215,1,3
	.word	8324
	.byte	31
	.byte	'Ifx_P_LPCR2_Bits',0,10,229,1,3
	.word	8504
	.byte	31
	.byte	'Ifx_P_OMCR0_Bits',0,10,240,1,3
	.word	6755
	.byte	31
	.byte	'Ifx_P_OMCR12_Bits',0,10,250,1,3
	.word	7279
	.byte	31
	.byte	'Ifx_P_OMCR4_Bits',0,10,133,2,3
	.word	6929
	.byte	31
	.byte	'Ifx_P_OMCR8_Bits',0,10,144,2,3
	.word	7103
	.byte	31
	.byte	'Ifx_P_OMCR_Bits',0,10,166,2,3
	.word	7768
	.byte	31
	.byte	'Ifx_P_OMR_Bits',0,10,203,2,3
	.word	2582
	.byte	31
	.byte	'Ifx_P_OMSR0_Bits',0,10,213,2,3
	.word	6092
	.byte	31
	.byte	'Ifx_P_OMSR12_Bits',0,10,224,2,3
	.word	6580
	.byte	31
	.byte	'Ifx_P_OMSR4_Bits',0,10,235,2,3
	.word	6239
	.byte	31
	.byte	'Ifx_P_OMSR8_Bits',0,10,246,2,3
	.word	6408
	.byte	31
	.byte	'Ifx_P_OMSR_Bits',0,10,140,3,3
	.word	7435
	.byte	31
	.byte	'Ifx_P_OUT_Bits',0,10,162,3,3
	.word	2266
	.byte	31
	.byte	'Ifx_P_PCSR_Bits',0,10,180,3,3
	.word	5806
	.byte	31
	.byte	'Ifx_P_PDISC_Bits',0,10,202,3,3
	.word	5440
	.byte	31
	.byte	'Ifx_P_PDR0_Bits',0,10,223,3,3
	.word	4471
	.byte	31
	.byte	'Ifx_P_PDR1_Bits',0,10,244,3,3
	.word	4775
	.byte	31
	.byte	'Ifx_P_ACCEN0',0,10,129,4,3
	.word	9371
	.byte	31
	.byte	'Ifx_P_ACCEN1',0,10,137,4,3
	.word	8804
	.byte	31
	.byte	'Ifx_P_ESR',0,10,145,4,3
	.word	5391
	.byte	31
	.byte	'Ifx_P_ID',0,10,153,4,3
	.word	3232
	.byte	31
	.byte	'Ifx_P_IN',0,10,161,4,3
	.word	4422
	.byte	31
	.byte	'Ifx_P_IOCR0',0,10,169,4,3
	.word	3456
	.byte	31
	.byte	'Ifx_P_IOCR12',0,10,177,4,3
	.word	4108
	.byte	31
	.byte	'Ifx_P_IOCR4',0,10,185,4,3
	.word	3671
	.byte	31
	.byte	'Ifx_P_IOCR8',0,10,193,4,3
	.word	3888
	.byte	31
	.byte	'Ifx_P_LPCR0',0,10,201,4,3
	.word	8200
	.byte	31
	.byte	'Ifx_P_LPCR1',0,10,210,4,3
	.word	8449
	.byte	31
	.byte	'Ifx_P_LPCR2',0,10,218,4,3
	.word	8708
	.byte	31
	.byte	'Ifx_P_OMCR',0,10,226,4,3
	.word	8076
	.byte	31
	.byte	'Ifx_P_OMCR0',0,10,234,4,3
	.word	6889
	.byte	31
	.byte	'Ifx_P_OMCR12',0,10,242,4,3
	.word	7395
	.byte	31
	.byte	'Ifx_P_OMCR4',0,10,250,4,3
	.word	7063
	.byte	31
	.byte	'Ifx_P_OMCR8',0,10,130,5,3
	.word	7239
	.byte	31
	.byte	'Ifx_P_OMR',0,10,138,5,3
	.word	3113
	.byte	31
	.byte	'Ifx_P_OMSR',0,10,146,5,3
	.word	7728
	.byte	31
	.byte	'Ifx_P_OMSR0',0,10,154,5,3
	.word	6199
	.byte	31
	.byte	'Ifx_P_OMSR12',0,10,162,5,3
	.word	6715
	.byte	31
	.byte	'Ifx_P_OMSR4',0,10,170,5,3
	.word	6368
	.byte	31
	.byte	'Ifx_P_OMSR8',0,10,178,5,3
	.word	6540
	.byte	31
	.byte	'Ifx_P_OUT',0,10,186,5,3
	.word	2542
	.byte	31
	.byte	'Ifx_P_PCSR',0,10,194,5,3
	.word	6052
	.byte	31
	.byte	'Ifx_P_PDISC',0,10,202,5,3
	.word	5766
	.byte	31
	.byte	'Ifx_P_PDR0',0,10,210,5,3
	.word	4735
	.byte	31
	.byte	'Ifx_P_PDR1',0,10,218,5,3
	.word	5051
	.byte	10
	.word	9411
	.byte	31
	.byte	'Ifx_P',0,10,139,6,3
	.word	92348
	.byte	31
	.byte	'IfxPort_InputMode',0,9,89,3
	.word	10024
	.byte	31
	.byte	'IfxPort_OutputIdx',0,9,130,1,3
	.word	10299
	.byte	31
	.byte	'IfxPort_OutputMode',0,9,138,1,3
	.word	10229
	.byte	15,9,144,1,9,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,16
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,16
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,16
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,16
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,16
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,16
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,16
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,16
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,31
	.byte	'IfxPort_PadDriver',0,9,158,1,3
	.word	92449
	.byte	31
	.byte	'IfxPort_State',0,9,178,1,3
	.word	10612
	.byte	31
	.byte	'IfxPort_Pin',0,9,194,1,3
	.word	24060
	.byte	31
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,13,148,1,16
	.word	178
	.byte	30,13,212,5,9,8,14
	.byte	'value',0
	.word	2035
	.byte	4,2,35,0,14
	.byte	'mask',0
	.word	2035
	.byte	4,2,35,4,0,31
	.byte	'IfxScuCcu_CcuconRegConfig',0,13,216,5,3
	.word	92975
	.byte	30,13,221,5,9,8,14
	.byte	'pDivider',0
	.word	534
	.byte	1,2,35,0,14
	.byte	'nDivider',0
	.word	534
	.byte	1,2,35,1,14
	.byte	'k2Initial',0
	.word	534
	.byte	1,2,35,2,14
	.byte	'waitTime',0
	.word	235
	.byte	4,2,35,4,0,31
	.byte	'IfxScuCcu_InitialStepConfig',0,13,227,5,3
	.word	93046
	.byte	30,13,231,5,9,12,14
	.byte	'k2Step',0
	.word	534
	.byte	1,2,35,0,14
	.byte	'waitTime',0
	.word	235
	.byte	4,2,35,2,14
	.byte	'hookFunction',0
	.word	92935
	.byte	4,2,35,8,0,31
	.byte	'IfxScuCcu_PllStepsConfig',0,13,236,5,3
	.word	93163
	.byte	3
	.word	175
	.byte	30,13,244,5,9,48,14
	.byte	'ccucon0',0
	.word	92975
	.byte	8,2,35,0,14
	.byte	'ccucon1',0
	.word	92975
	.byte	8,2,35,8,14
	.byte	'ccucon2',0
	.word	92975
	.byte	8,2,35,16,14
	.byte	'ccucon5',0
	.word	92975
	.byte	8,2,35,24,14
	.byte	'ccucon6',0
	.word	92975
	.byte	8,2,35,32,14
	.byte	'ccucon7',0
	.word	92975
	.byte	8,2,35,40,0,31
	.byte	'IfxScuCcu_ClockDistributionConfig',0,13,252,5,3
	.word	93265
	.byte	30,13,128,6,9,8,14
	.byte	'value',0
	.word	2035
	.byte	4,2,35,0,14
	.byte	'mask',0
	.word	2035
	.byte	4,2,35,4,0,31
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,13,132,6,3
	.word	93417
	.byte	3
	.word	93163
	.byte	30,13,137,6,9,16,14
	.byte	'numOfPllDividerSteps',0
	.word	534
	.byte	1,2,35,0,14
	.byte	'pllDividerStep',0
	.word	93493
	.byte	4,2,35,4,14
	.byte	'pllInitialStep',0
	.word	93046
	.byte	8,2,35,8,0,31
	.byte	'IfxScuCcu_SysPllConfig',0,13,142,6,3
	.word	93498
	.byte	30,15,59,15,16,14
	.byte	'module',0
	.word	20753
	.byte	4,2,35,0,14
	.byte	'pin',0
	.word	24060
	.byte	8,2,35,4,14
	.byte	'select',0
	.word	24099
	.byte	1,2,35,12,0,20
	.word	93615
	.byte	31
	.byte	'IfxCcu6_Cc60in_In',0,15,64,3
	.word	93666
	.byte	30,15,67,15,16,14
	.byte	'module',0
	.word	20753
	.byte	4,2,35,0,14
	.byte	'pin',0
	.word	24060
	.byte	8,2,35,4,14
	.byte	'select',0
	.word	24099
	.byte	1,2,35,12,0,20
	.word	93697
	.byte	31
	.byte	'IfxCcu6_Cc61in_In',0,15,72,3
	.word	93748
	.byte	30,15,75,15,16,14
	.byte	'module',0
	.word	20753
	.byte	4,2,35,0,14
	.byte	'pin',0
	.word	24060
	.byte	8,2,35,4,14
	.byte	'select',0
	.word	24099
	.byte	1,2,35,12,0,20
	.word	93779
	.byte	31
	.byte	'IfxCcu6_Cc62in_In',0,15,80,3
	.word	93830
	.byte	30,15,83,15,16,14
	.byte	'module',0
	.word	20753
	.byte	4,2,35,0,14
	.byte	'pin',0
	.word	24060
	.byte	8,2,35,4,14
	.byte	'select',0
	.word	24099
	.byte	1,2,35,12,0,20
	.word	93861
	.byte	31
	.byte	'IfxCcu6_Ccpos0_In',0,15,88,3
	.word	93912
	.byte	30,15,91,15,16,14
	.byte	'module',0
	.word	20753
	.byte	4,2,35,0,14
	.byte	'pin',0
	.word	24060
	.byte	8,2,35,4,14
	.byte	'select',0
	.word	24099
	.byte	1,2,35,12,0,20
	.word	93943
	.byte	31
	.byte	'IfxCcu6_Ccpos1_In',0,15,96,3
	.word	93994
	.byte	30,15,99,15,16,14
	.byte	'module',0
	.word	20753
	.byte	4,2,35,0,14
	.byte	'pin',0
	.word	24060
	.byte	8,2,35,4,14
	.byte	'select',0
	.word	24099
	.byte	1,2,35,12,0,20
	.word	94025
	.byte	31
	.byte	'IfxCcu6_Ccpos2_In',0,15,104,3
	.word	94076
	.byte	30,15,107,15,16,14
	.byte	'module',0
	.word	20753
	.byte	4,2,35,0,14
	.byte	'pin',0
	.word	24060
	.byte	8,2,35,4,14
	.byte	'select',0
	.word	24099
	.byte	1,2,35,12,0,20
	.word	94107
	.byte	31
	.byte	'IfxCcu6_Ctrap_In',0,15,112,3
	.word	94158
	.byte	20
	.word	24218
	.byte	31
	.byte	'IfxCcu6_T12hr_In',0,15,120,3
	.word	94188
	.byte	20
	.word	24279
	.byte	31
	.byte	'IfxCcu6_T13hr_In',0,15,128,1,3
	.word	94218
	.byte	30,15,131,1,15,16,14
	.byte	'module',0
	.word	20753
	.byte	4,2,35,0,14
	.byte	'pin',0
	.word	24060
	.byte	8,2,35,4,14
	.byte	'select',0
	.word	10299
	.byte	1,2,35,12,0,20
	.word	94249
	.byte	31
	.byte	'IfxCcu6_Cc60_Out',0,15,136,1,3
	.word	94301
	.byte	30,15,139,1,15,16,14
	.byte	'module',0
	.word	20753
	.byte	4,2,35,0,14
	.byte	'pin',0
	.word	24060
	.byte	8,2,35,4,14
	.byte	'select',0
	.word	10299
	.byte	1,2,35,12,0,20
	.word	94332
	.byte	31
	.byte	'IfxCcu6_Cc61_Out',0,15,144,1,3
	.word	94384
	.byte	30,15,147,1,15,16,14
	.byte	'module',0
	.word	20753
	.byte	4,2,35,0,14
	.byte	'pin',0
	.word	24060
	.byte	8,2,35,4,14
	.byte	'select',0
	.word	10299
	.byte	1,2,35,12,0,20
	.word	94415
	.byte	31
	.byte	'IfxCcu6_Cc62_Out',0,15,152,1,3
	.word	94467
	.byte	30,15,155,1,15,16,14
	.byte	'module',0
	.word	20753
	.byte	4,2,35,0,14
	.byte	'pin',0
	.word	24060
	.byte	8,2,35,4,14
	.byte	'select',0
	.word	10299
	.byte	1,2,35,12,0,20
	.word	94498
	.byte	31
	.byte	'IfxCcu6_Cout60_Out',0,15,160,1,3
	.word	94550
	.byte	30,15,163,1,15,16,14
	.byte	'module',0
	.word	20753
	.byte	4,2,35,0,14
	.byte	'pin',0
	.word	24060
	.byte	8,2,35,4,14
	.byte	'select',0
	.word	10299
	.byte	1,2,35,12,0,20
	.word	94583
	.byte	31
	.byte	'IfxCcu6_Cout61_Out',0,15,168,1,3
	.word	94635
	.byte	30,15,171,1,15,16,14
	.byte	'module',0
	.word	20753
	.byte	4,2,35,0,14
	.byte	'pin',0
	.word	24060
	.byte	8,2,35,4,14
	.byte	'select',0
	.word	10299
	.byte	1,2,35,12,0,20
	.word	94668
	.byte	31
	.byte	'IfxCcu6_Cout62_Out',0,15,176,1,3
	.word	94720
	.byte	30,15,179,1,15,16,14
	.byte	'module',0
	.word	20753
	.byte	4,2,35,0,14
	.byte	'pin',0
	.word	24060
	.byte	8,2,35,4,14
	.byte	'select',0
	.word	10299
	.byte	1,2,35,12,0,20
	.word	94753
	.byte	31
	.byte	'IfxCcu6_Cout63_Out',0,15,184,1,3
	.word	94805
	.byte	31
	.byte	'IfxCcu6_CaptureCompareInput',0,11,90,3
	.word	21654
	.byte	31
	.byte	'IfxCcu6_CaptureCompareInputSignal',0,11,100,3
	.word	21912
	.byte	31
	.byte	'IfxCcu6_CaptureCompareState',0,11,109,3
	.word	23947
	.byte	31
	.byte	'IfxCcu6_ChannelOut',0,11,122,3
	.word	23682
	.byte	15,11,127,9,1,16
	.byte	'IfxCcu6_CountingInputMode_internal',0,0,16
	.byte	'IfxCcu6_CountingInputMode_manual',0,1,16
	.byte	'IfxCcu6_CountingInputMode_externalRising',0,2,16
	.byte	'IfxCcu6_CountingInputMode_externalFalling',0,3,0,31
	.byte	'IfxCcu6_CountingInputMode',0,11,137,1,3
	.word	94979
	.byte	15,11,152,1,9,1,16
	.byte	'IfxCcu6_ExternalTriggerMode_disable',0,0,16
	.byte	'IfxCcu6_ExternalTriggerMode_risingEdge',0,1,16
	.byte	'IfxCcu6_ExternalTriggerMode_fallingEdge',0,2,16
	.byte	'IfxCcu6_ExternalTriggerMode_anyEdge',0,3,0,31
	.byte	'IfxCcu6_ExternalTriggerMode',0,11,161,1,3
	.word	95179
	.byte	15,11,166,1,9,1,16
	.byte	'IfxCcu6_HallSensorTriggerMode_permanentCheck',0,0,16
	.byte	'IfxCcu6_HallSensorTriggerMode_cM63',0,1,16
	.byte	'IfxCcu6_HallSensorTriggerMode_t13PM',0,2,16
	.byte	'IfxCcu6_HallSensorTriggerMode_off',0,3,16
	.byte	'IfxCcu6_HallSensorTriggerMode_t12PMCountingUp',0,4,16
	.byte	'IfxCcu6_HallSensorTriggerMode_t12OMCountingDown',0,5,16
	.byte	'IfxCcu6_HallSensorTriggerMode_cM61CountingUp',0,6,16
	.byte	'IfxCcu6_HallSensorTriggerMode_cM61CountingDown',0,7,0,31
	.byte	'IfxCcu6_HallSensorTriggerMode',0,11,177,1,3
	.word	95382
	.byte	31
	.byte	'IfxCcu6_InterruptSource',0,11,203,1,3
	.word	23034
	.byte	15,11,208,1,9,1,16
	.byte	'IfxCcu6_MultiChannelSwitchingSelect_noEvent',0,0,16
	.byte	'IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent',0,1,16
	.byte	'IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch',0,2,16
	.byte	'IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch',0,3,16
	.byte	'IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch',0,4,16
	.byte	'IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch',0,5,0,31
	.byte	'IfxCcu6_MultiChannelSwitchingSelect',0,11,217,1,3
	.word	95813
	.byte	15,11,222,1,9,1,16
	.byte	'IfxCcu6_MultiChannelSwitchingSync_direct',0,0,16
	.byte	'IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch',0,1,16
	.byte	'IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch',0,2,0,31
	.byte	'IfxCcu6_MultiChannelSwitchingSync',0,11,229,1,3
	.word	96184
	.byte	31
	.byte	'IfxCcu6_ServiceRequest',0,11,239,1,3
	.word	23567
	.byte	15,11,244,1,9,1,16
	.byte	'IfxCcu6_SleepMode_enable',0,0,16
	.byte	'IfxCcu6_SleepMode_disable',0,1,0,31
	.byte	'IfxCcu6_SleepMode',0,11,248,1,3
	.word	96407
	.byte	15,11,252,1,9,1,16
	.byte	'IfxCcu6_SuspendMode_none',0,0,16
	.byte	'IfxCcu6_SuspendMode_hard',0,1,16
	.byte	'IfxCcu6_SuspendMode_soft',0,2,0,31
	.byte	'IfxCcu6_SuspendMode',0,11,129,2,3
	.word	96496
	.byte	31
	.byte	'IfxCcu6_T12Channel',0,11,138,2,3
	.word	23871
	.byte	15,11,142,2,9,1,16
	.byte	'IfxCcu6_T12ChannelMode_off',0,0,16
	.byte	'IfxCcu6_T12ChannelMode_compareMode',0,1,16
	.byte	'IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling',0,4,16
	.byte	'IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising',0,5,16
	.byte	'IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling',0,6,16
	.byte	'IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny',0,7,16
	.byte	'IfxCcu6_T12ChannelMode_hallSensor',0,8,16
	.byte	'IfxCcu6_T12ChannelMode_hysteresisLikecompare',0,9,16
	.byte	'IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling',0,10,16
	.byte	'IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising',0,11,16
	.byte	'IfxCcu6_T12ChannelMode_multiInputCaptureBothRising',0,12,16
	.byte	'IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling',0,13,16
	.byte	'IfxCcu6_T12ChannelMode_multiInputCaptureAny',0,14,0,31
	.byte	'IfxCcu6_T12ChannelMode',0,11,158,2,3
	.word	96641
	.byte	15,11,163,2,9,1,16
	.byte	'IfxCcu6_T12CountDirection_up',0,0,16
	.byte	'IfxCcu6_T12CountDirection_down',0,1,0,31
	.byte	'IfxCcu6_T12CountDirection',0,11,167,2,3
	.word	97320
	.byte	31
	.byte	'IfxCcu6_T12CountMode',0,11,178,2,3
	.word	21231
	.byte	15,11,183,2,9,1,16
	.byte	'IfxCcu6_T13TriggerDirection_noAction',0,0,16
	.byte	'IfxCcu6_T13TriggerDirection_onT12CountingUp',0,1,16
	.byte	'IfxCcu6_T13TriggerDirection_onT12CountingDown',0,2,16
	.byte	'IfxCcu6_T13TriggerDirection_anyT12',0,3,0,31
	.byte	'IfxCcu6_T13TriggerDirection',0,11,189,2,3
	.word	97456
	.byte	15,11,194,2,9,1,16
	.byte	'IfxCcu6_T13TriggerEvent_noAction',0,0,16
	.byte	'IfxCcu6_T13TriggerEvent_onCC60RCompare',0,1,16
	.byte	'IfxCcu6_T13TriggerEvent_onCC61RCompare',0,2,16
	.byte	'IfxCcu6_T13TriggerEvent_onCC62RCompare',0,3,16
	.byte	'IfxCcu6_T13TriggerEvent_onAnyT12Compare',0,4,16
	.byte	'IfxCcu6_T13TriggerEvent_onT12Period',0,5,16
	.byte	'IfxCcu6_T13TriggerEvent_onT12Zero',0,6,16
	.byte	'IfxCcu6_T13TriggerEvent_onCCPOSxEdge',0,7,0,31
	.byte	'IfxCcu6_T13TriggerEvent',0,11,205,2,3
	.word	97670
	.byte	31
	.byte	'IfxCcu6_TimerId',0,11,213,2,3
	.word	20810
	.byte	31
	.byte	'IfxCcu6_TimerInputClock',0,11,228,2,3
	.word	20861
	.byte	15,11,247,2,9,1,16
	.byte	'IfxCcu6_TimerRunStatus_stopped',0,0,16
	.byte	'IfxCcu6_TimerRunStatus_running',0,1,0,31
	.byte	'IfxCcu6_TimerRunStatus',0,11,251,2,3
	.word	98081
	.byte	15,11,128,3,9,1,16
	.byte	'IfxCcu6_TrapMode_automatic',0,0,16
	.byte	'IfxCcu6_TrapMode_manual',0,1,0,31
	.byte	'IfxCcu6_TrapMode',0,11,133,3,3
	.word	98186
	.byte	15,11,138,3,9,1,16
	.byte	'IfxCcu6_TrapState_t12Sync',0,0,16
	.byte	'IfxCcu6_TrapState_t13Sync',0,1,16
	.byte	'IfxCcu6_TrapState_immediate',0,3,0,31
	.byte	'IfxCcu6_TrapState',0,11,145,3,3
	.word	98274
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L132:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,53,0,73,19,0,0,11,19
	.byte	1,3,8,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,13,23,1,58,15,59,15,57
	.byte	15,11,15,0,0,14,13,0,3,8,73,19,11,15,56,9,0,0,15,4,1,58,15,59,15,57,15,11,15,0,0,16,40,0,3,8,28,13,0,0
	.byte	17,11,1,0,0,18,1,1,11,15,73,19,0,0,19,33,0,47,15,0,0,20,38,0,73,19,0,0,21,46,1,3,8,54,15,39,12,63,12,60
	.byte	12,0,0,22,5,0,73,19,0,0,23,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,24,5,0,3,8,73,19,0,0,25,46,0,3,8
	.byte	54,15,39,12,63,12,60,12,0,0,26,46,1,49,19,0,0,27,5,0,49,19,0,0,28,46,1,3,8,58,15,59,15,57,15,54,15,39
	.byte	12,63,12,60,12,0,0,29,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,30,19,1,58,15,59,15
	.byte	57,15,11,15,0,0,31,22,0,3,8,58,15,59,15,57,15,73,19,0,0,32,21,0,54,15,0,0,33,52,0,3,8,58,15,59,15,57,15
	.byte	73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L133:
	.word	.L477-.L476
.L476:
	.half	3
	.word	.L479-.L478
.L478:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap',0
	.byte	0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxSrc.h',0,2,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxScuWdt.h',0,4,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,5,0,0
	.byte	'IfxPort.h',0,6,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.h',0,0,0,0
	.byte	'IfxCcu6_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,4,0,0
	.byte	'IfxCcu6_cfg.h',0,5,0,0
	.byte	'IfxCcu6_PinMap.h',0,7,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'IfxSrc_cfg.h',0,5,0,0
	.byte	'IfxScu_cfg.h',0,5,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxFlash_regdef.h',0,3,0,0,0
.L479:
.L477:
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_connectTrigger')
	.sect	'.debug_info'
.L134:
	.word	392
	.half	3
	.word	.L135
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L137,.L136
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_connectTrigger',0,1,56,6,1,1,1
	.word	.L89,.L239,.L88
	.byte	4
	.byte	'ccu6',0,1,56,39
	.word	.L240,.L241
	.byte	4
	.byte	'outputLine',0,1,56,61
	.word	.L242,.L243
	.byte	4
	.byte	'selectedTrigger',0,1,56,89
	.word	.L244,.L245
	.byte	5
	.word	.L89,.L239
	.byte	6
	.byte	'mosel',0,1,58,14
	.word	.L246,.L247
	.byte	6
	.byte	'shift',0,1,59,14
	.word	.L248,.L249
	.byte	7
	.word	.L250,.L251,.L252
	.byte	8
	.word	.L253,.L254
	.byte	8
	.word	.L255,.L256
	.byte	8
	.word	.L257,.L258
	.byte	9
	.word	.L259,.L251,.L252
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_connectTrigger')
	.sect	'.debug_abbrev'
.L135:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_connectTrigger')
	.sect	'.debug_line'
.L136:
	.word	.L481-.L480
.L480:
	.half	3
	.word	.L483-.L482
.L482:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0,0
.L483:
	.byte	5,24,7,0,5,2
	.word	.L89
	.byte	3,195,0,1,5,33,3,118,1,5,29,9
	.half	.L484-.L89
	.byte	3,10,1,5,32,3,127,1,4,2,5,66,9
	.half	.L251-.L484
	.byte	3,46,1,4,1,5,18,3,77,1,4,2,5,66,9
	.half	.L485-.L251
	.byte	3,51,1,5,64,9
	.half	.L486-.L485
	.byte	1,4,1,5,14,3,77,1,5,26,9
	.half	.L431-.L486
	.byte	3,126,1,5,21,9
	.half	.L430-.L431
	.byte	3,4,1,5,46,9
	.half	.L487-.L430
	.byte	3,4,1,4,2,5,83,9
	.half	.L488-.L487
	.byte	3,45,1,5,75,9
	.half	.L432-.L488
	.byte	1,4,1,5,19,3,84,1,5,1,9
	.half	.L252-.L432
	.byte	3,1,1,7,9
	.half	.L138-.L252
	.byte	0,1,1
.L481:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_connectTrigger')
	.sect	'.debug_ranges'
.L137:
	.word	-1,.L89,0,.L138-.L89,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.debug_info'
.L139:
	.word	304
	.half	3
	.word	.L140
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L142,.L141
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_routeInterruptNode',0,1,158,2,6,1,1,1
	.word	.L113,.L260,.L112
	.byte	4
	.byte	'ccu6',0,1,158,2,43
	.word	.L240,.L261
	.byte	4
	.byte	'source',0,1,158,2,73
	.word	.L262,.L263
	.byte	4
	.byte	'serviceRequest',0,1,158,2,104
	.word	.L264,.L265
	.byte	5
	.word	.L113,.L260
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.debug_abbrev'
.L140:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.debug_line'
.L141:
	.word	.L490-.L489
.L489:
	.half	3
	.word	.L492-.L491
.L491:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L492:
	.byte	5,9,7,0,5,2
	.word	.L113
	.byte	3,159,2,1,5,71,7,9
	.half	.L493-.L113
	.byte	1,5,20,7,9
	.half	.L40-.L493
	.byte	3,2,1,5,29,9
	.half	.L494-.L40
	.byte	1,5,45,1,5,14,9
	.half	.L41-.L494
	.byte	3,2,1,5,76,7,9
	.half	.L495-.L41
	.byte	1,5,20,7,9
	.half	.L43-.L495
	.byte	3,2,1,5,29,9
	.half	.L496-.L43
	.byte	1,5,45,1,5,14,9
	.half	.L44-.L496
	.byte	3,2,1,5,76,7,9
	.half	.L497-.L44
	.byte	1,5,20,7,9
	.half	.L46-.L497
	.byte	3,2,1,5,29,9
	.half	.L498-.L46
	.byte	1,5,45,1,5,25,9
	.half	.L47-.L498
	.byte	3,2,1,5,10,9
	.half	.L499-.L47
	.byte	1,5,20,7,9
	.half	.L500-.L499
	.byte	3,2,1,5,28,9
	.half	.L501-.L500
	.byte	1,5,1,9
	.half	.L502-.L501
	.byte	3,18,1,5,25,7,9
	.half	.L49-.L502
	.byte	3,112,1,5,14,9
	.half	.L503-.L49
	.byte	1,5,69,7,9
	.half	.L504-.L503
	.byte	1,5,66,9
	.half	.L505-.L504
	.byte	1,5,20,7,9
	.half	.L51-.L505
	.byte	3,2,1,5,28,9
	.half	.L506-.L51
	.byte	1,5,44,1,5,14,9
	.half	.L52-.L506
	.byte	3,2,1,5,73,7,9
	.half	.L507-.L52
	.byte	1,5,20,7,9
	.half	.L54-.L507
	.byte	3,2,1,5,28,9
	.half	.L508-.L54
	.byte	1,5,44,1,5,25,9
	.half	.L55-.L508
	.byte	3,2,1,5,14,9
	.half	.L509-.L55
	.byte	1,5,80,7,9
	.half	.L510-.L509
	.byte	1,5,77,9
	.half	.L511-.L510
	.byte	1,5,20,7,9
	.half	.L57-.L511
	.byte	3,2,1,5,28,9
	.half	.L512-.L57
	.byte	1,5,1,9
	.half	.L513-.L512
	.byte	3,6,1,5,16,7,9
	.half	.L58-.L513
	.byte	3,126,1,5,1,9
	.half	.L514-.L58
	.byte	3,2,1,7,9
	.half	.L143-.L514
	.byte	0,1,1
.L490:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.debug_ranges'
.L142:
	.word	-1,.L113,0,.L143-.L113,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.debug_info'
.L144:
	.word	332
	.half	3
	.word	.L145
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L147,.L146
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_setOutputPassiveLevel',0,1,195,2,6,1,1,1
	.word	.L115,.L266,.L114
	.byte	4
	.byte	'ccu6',0,1,195,2,46
	.word	.L240,.L267
	.byte	4
	.byte	'channelOut',0,1,195,2,71
	.word	.L268,.L269
	.byte	4
	.byte	'state',0,1,195,2,91
	.word	.L270,.L271
	.byte	5
	.word	.L115,.L266
	.byte	5
	.word	.L272,.L273
	.byte	6
	.byte	'shift',0,1,199,2,16
	.word	.L274,.L275
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.debug_abbrev'
.L145:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.debug_line'
.L146:
	.word	.L516-.L515
.L515:
	.half	3
	.word	.L518-.L517
.L517:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L518:
	.byte	5,5,7,0,5,2
	.word	.L115
	.byte	3,196,2,1,5,25,7,9
	.half	.L272-.L115
	.byte	3,3,1,5,35,3,1,1,5,27,9
	.half	.L519-.L272
	.byte	3,127,1,5,40,9
	.half	.L520-.L519
	.byte	3,1,1,5,38,9
	.half	.L521-.L520
	.byte	1,5,64,9
	.half	.L522-.L521
	.byte	1,5,47,9
	.half	.L456-.L522
	.byte	1,5,22,1,5,1,9
	.half	.L273-.L456
	.byte	3,6,1,5,21,7,9
	.half	.L60-.L273
	.byte	3,126,1,5,28,9
	.half	.L523-.L60
	.byte	1,5,1,9
	.half	.L524-.L523
	.byte	3,2,1,7,9
	.half	.L148-.L524
	.byte	0,1,1
.L516:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.debug_ranges'
.L147:
	.word	-1,.L115,0,.L148-.L115,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.debug_info'
.L149:
	.word	322
	.half	3
	.word	.L150
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L152,.L151
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_setT12CaptureCompareState',0,1,210,2,6,1,1,1
	.word	.L117,.L276,.L116
	.byte	4
	.byte	'ccu6',0,1,210,2,50
	.word	.L240,.L277
	.byte	4
	.byte	'channel',0,1,210,2,75
	.word	.L278,.L279
	.byte	4
	.byte	'state',0,1,210,2,112
	.word	.L280,.L281
	.byte	5
	.word	.L117,.L276
	.byte	6
	.byte	'mask',0,1,212,2,12
	.word	.L274,.L282
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.debug_abbrev'
.L150:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.debug_line'
.L151:
	.word	.L526-.L525
.L525:
	.half	3
	.word	.L528-.L527
.L527:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L528:
	.byte	5,6,7,0,5,2
	.word	.L117
	.byte	3,209,2,1,5,20,9
	.half	.L457-.L117
	.byte	3,2,1,5,28,9
	.half	.L529-.L457
	.byte	1,5,5,9
	.half	.L459-.L529
	.byte	3,3,1,5,48,7,9
	.half	.L530-.L459
	.byte	3,3,1,5,43,1,5,48,9
	.half	.L531-.L530
	.byte	1,5,46,9
	.half	.L532-.L531
	.byte	1,5,58,9
	.half	.L533-.L532
	.byte	1,5,63,9
	.half	.L534-.L533
	.byte	1,5,55,9
	.half	.L535-.L534
	.byte	1,5,26,1,5,5,9
	.half	.L62-.L535
	.byte	3,3,1,5,48,7,9
	.half	.L536-.L62
	.byte	3,3,1,5,43,1,5,48,9
	.half	.L537-.L536
	.byte	1,5,46,9
	.half	.L538-.L537
	.byte	1,5,58,9
	.half	.L539-.L538
	.byte	1,5,63,9
	.half	.L540-.L539
	.byte	1,5,55,9
	.half	.L541-.L540
	.byte	1,5,26,1,5,5,9
	.half	.L63-.L541
	.byte	3,3,1,5,48,7,9
	.half	.L542-.L63
	.byte	3,3,1,5,43,1,5,48,9
	.half	.L458-.L542
	.byte	1,5,46,9
	.half	.L460-.L458
	.byte	1,5,58,9
	.half	.L543-.L460
	.byte	1,5,63,9
	.half	.L544-.L543
	.byte	1,5,55,9
	.half	.L545-.L544
	.byte	1,5,26,1,5,1,9
	.half	.L64-.L545
	.byte	3,2,1,7,9
	.half	.L153-.L64
	.byte	0,1,1
.L526:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.debug_ranges'
.L152:
	.word	-1,.L117,0,.L153-.L117,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.debug_info'
.L154:
	.word	296
	.half	3
	.word	.L155
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L157,.L156
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_setT12CompareValue',0,1,235,2,6,1,1,1
	.word	.L119,.L283,.L118
	.byte	4
	.byte	'ccu6',0,1,235,2,43
	.word	.L240,.L284
	.byte	4
	.byte	'channel',0,1,235,2,68
	.word	.L278,.L285
	.byte	4
	.byte	'value',0,1,235,2,84
	.word	.L248,.L286
	.byte	5
	.word	.L119,.L283
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.debug_abbrev'
.L155:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.debug_line'
.L156:
	.word	.L547-.L546
.L546:
	.half	3
	.word	.L549-.L548
.L548:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L549:
	.byte	5,10,7,0,5,2
	.word	.L119
	.byte	3,238,2,1,7,9
	.half	.L550-.L119
	.byte	3,3,1,7,9
	.half	.L551-.L550
	.byte	3,3,1,5,1,7,9
	.half	.L552-.L551
	.byte	3,4,1,5,28,7,9
	.half	.L65-.L552
	.byte	3,119,1,5,1,9
	.half	.L553-.L65
	.byte	3,9,1,5,28,7,9
	.half	.L66-.L553
	.byte	3,122,1,5,1,9
	.half	.L554-.L66
	.byte	3,6,1,5,28,7,9
	.half	.L67-.L554
	.byte	3,125,1,5,1,9
	.half	.L555-.L67
	.byte	3,3,1,7,9
	.half	.L158-.L555
	.byte	0,1,1
.L547:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.debug_ranges'
.L157:
	.word	-1,.L119,0,.L158-.L119,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT12Frequency')
	.sect	'.debug_info'
.L159:
	.word	693
	.half	3
	.word	.L160
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L162,.L161
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_setT12Frequency',0,1,252,2,9
	.word	.L287
	.byte	1,1,1
	.word	.L121,.L288,.L120
	.byte	4
	.byte	'ccu6',0,1,252,2,43
	.word	.L240,.L289
	.byte	4
	.byte	'frequency',0,1,252,2,57
	.word	.L287,.L290
	.byte	4
	.byte	'period',0,1,252,2,83
	.word	.L274,.L291
	.byte	4
	.byte	'countMode',0,1,252,2,112
	.word	.L292,.L293
	.byte	5
	.word	.L121,.L288
	.byte	6
	.byte	'prescaler',0,1,254,2,13
	.word	.L248,.L294
	.byte	6
	.byte	'freqCC6',0,1,255,2,13
	.word	.L287,.L295
	.byte	6
	.byte	'divFactor',0,1,128,3,13
	.word	.L248,.L296
	.byte	5
	.word	.L297,.L73
	.byte	7
	.word	.L298,.L74,.L299
	.byte	8
	.word	.L300,.L301
	.byte	8
	.word	.L302,.L303
	.byte	8
	.word	.L304,.L305
	.byte	9
	.word	.L306,.L307
	.byte	6
	.byte	'tctr4',0,2,200,12,20
	.word	.L310,.L311
	.byte	0,0,7
	.word	.L312,.L313,.L308
	.byte	8
	.word	.L314,.L315
	.byte	8
	.word	.L316,.L317
	.byte	8
	.word	.L318,.L319
	.byte	10
	.word	.L320,.L321
	.byte	0,7
	.word	.L298,.L308,.L309
	.byte	8
	.word	.L300,.L301
	.byte	8
	.word	.L302,.L303
	.byte	8
	.word	.L304,.L305
	.byte	0,7
	.word	.L312,.L309,.L322
	.byte	8
	.word	.L314,.L315
	.byte	8
	.word	.L316,.L317
	.byte	8
	.word	.L318,.L319
	.byte	0,7
	.word	.L323,.L324,.L76
	.byte	8
	.word	.L325,.L326
	.byte	8
	.word	.L327,.L328
	.byte	11
	.word	.L329,.L324,.L76
	.byte	0,7
	.word	.L330,.L76,.L331
	.byte	8
	.word	.L332,.L333
	.byte	8
	.word	.L334,.L335
	.byte	11
	.word	.L336,.L76,.L331
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT12Frequency')
	.sect	'.debug_abbrev'
.L160:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,85
	.byte	6,0,0,10,11,0,49,16,85,6,0,0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT12Frequency')
	.sect	'.debug_line'
.L161:
	.word	.L557-.L556
.L556:
	.half	3
	.word	.L559-.L558
.L558:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.h',0,0,0,0,0
.L559:
	.byte	5,9,7,0,5,2
	.word	.L121
	.byte	3,251,2,1,5,50,9
	.half	.L462-.L121
	.byte	3,3,1,5,23,9
	.half	.L461-.L462
	.byte	1,5,33,9
	.half	.L464-.L461
	.byte	3,1,1,5,23,9
	.half	.L463-.L464
	.byte	1,5,20,9
	.half	.L465-.L463
	.byte	3,2,1,5,39,1,5,21,9
	.half	.L71-.L465
	.byte	3,2,1,5,9,9
	.half	.L560-.L71
	.byte	3,2,1,5,50,7,9
	.half	.L561-.L560
	.byte	3,124,1,5,39,1,5,21,7,9
	.half	.L72-.L561
	.byte	3,10,1,5,5,9
	.half	.L466-.L72
	.byte	1,5,30,7,9
	.half	.L297-.L466
	.byte	3,6,1,5,82,7,9
	.half	.L562-.L297
	.byte	1,4,2,5,20,9
	.half	.L74-.L562
	.byte	3,183,9,1,9
	.half	.L467-.L74
	.byte	3,1,1,4,1,5,109,9
	.half	.L299-.L467
	.byte	3,200,118,1,4,2,5,25,3,158,13,1,4,1,5,58,9
	.half	.L313-.L299
	.byte	3,230,114,1,4,2,5,20,9
	.half	.L308-.L313
	.byte	3,181,9,1,3,1,1,5,33,9
	.half	.L309-.L308
	.byte	3,139,3,1,5,36,9
	.half	.L468-.L309
	.byte	1,5,45,9
	.half	.L563-.L468
	.byte	1,5,19,1,4,1,5,9,9
	.half	.L322-.L563
	.byte	3,196,115,1,4,2,5,32,7,9
	.half	.L324-.L322
	.byte	3,222,8,1,5,35,9
	.half	.L564-.L324
	.byte	1,5,19,1,5,18,9
	.half	.L76-.L564
	.byte	3,171,4,1,5,23,9
	.half	.L565-.L76
	.byte	1,4,1,5,32,9
	.half	.L331-.L565
	.byte	3,254,114,1,5,37,9
	.half	.L566-.L331
	.byte	1,5,29,9
	.half	.L567-.L566
	.byte	1,5,1,3,8,1,5,19,7,9
	.half	.L73-.L567
	.byte	3,124,1,5,1,3,4,1,7,9
	.half	.L163-.L73
	.byte	0,1,1
.L557:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT12Frequency')
	.sect	'.debug_ranges'
.L162:
	.word	-1,.L121,0,.L163-.L121,0,0
.L307:
	.word	-1,.L121,.L74-.L121,.L299-.L121,.L308-.L121,.L309-.L121,0,0
.L321:
	.word	-1,.L121,.L313-.L121,.L308-.L121,.L309-.L121,.L322-.L121,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.debug_info'
.L164:
	.word	277
	.half	3
	.word	.L165
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L167,.L166
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_setT12InputSignal',0,1,173,3,6,1,1,1
	.word	.L123,.L337,.L122
	.byte	4
	.byte	'ccu6',0,1,173,3,42
	.word	.L240,.L338
	.byte	4
	.byte	'extInput',0,1,173,3,66
	.word	.L339,.L340
	.byte	5
	.word	.L123,.L337
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.debug_abbrev'
.L165:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.debug_line'
.L166:
	.word	.L569-.L568
.L568:
	.half	3
	.word	.L571-.L570
.L570:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L571:
	.byte	5,38,7,0,5,2
	.word	.L123
	.byte	3,174,3,1,5,19,9
	.half	.L572-.L123
	.byte	1,5,47,9
	.half	.L573-.L572
	.byte	1,5,28,9
	.half	.L574-.L573
	.byte	1,5,38,9
	.half	.L575-.L574
	.byte	3,1,1,5,19,9
	.half	.L576-.L575
	.byte	1,5,28,9
	.half	.L577-.L576
	.byte	1,5,1,9
	.half	.L578-.L577
	.byte	3,3,1,7,9
	.half	.L168-.L578
	.byte	0,1,1
.L569:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.debug_ranges'
.L167:
	.word	-1,.L123,0,.L168-.L123,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.debug_info'
.L169:
	.word	282
	.half	3
	.word	.L170
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L172,.L171
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_setT13CaptureCompareState',0,1,182,3,6,1,1,1
	.word	.L125,.L341,.L124
	.byte	4
	.byte	'ccu6',0,1,182,3,50
	.word	.L240,.L342
	.byte	4
	.byte	'state',0,1,182,3,84
	.word	.L280,.L343
	.byte	5
	.word	.L125,.L341
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.debug_abbrev'
.L170:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.debug_line'
.L171:
	.word	.L580-.L579
.L579:
	.half	3
	.word	.L582-.L581
.L581:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L582:
	.byte	5,5,7,0,5,2
	.word	.L125
	.byte	3,187,3,1,5,43,7,9
	.half	.L583-.L125
	.byte	3,3,1,5,48,9
	.half	.L584-.L583
	.byte	1,5,46,9
	.half	.L585-.L584
	.byte	1,5,55,9
	.half	.L586-.L585
	.byte	1,5,26,1,5,5,9
	.half	.L79-.L586
	.byte	3,3,1,5,43,7,9
	.half	.L587-.L79
	.byte	3,3,1,5,48,9
	.half	.L588-.L587
	.byte	1,5,46,9
	.half	.L589-.L588
	.byte	1,5,55,9
	.half	.L590-.L589
	.byte	1,5,26,1,5,5,9
	.half	.L80-.L590
	.byte	3,3,1,5,43,7,9
	.half	.L591-.L80
	.byte	3,3,1,5,63,9
	.half	.L592-.L591
	.byte	1,5,55,9
	.half	.L593-.L592
	.byte	1,5,26,1,5,1,9
	.half	.L81-.L593
	.byte	3,2,1,7,9
	.half	.L173-.L81
	.byte	0,1,1
.L580:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.debug_ranges'
.L172:
	.word	-1,.L125,0,.L173-.L125,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT13Frequency')
	.sect	'.debug_info'
.L174:
	.word	633
	.half	3
	.word	.L175
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L177,.L176
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_setT13Frequency',0,1,208,3,9
	.word	.L287
	.byte	1,1,1
	.word	.L127,.L344,.L126
	.byte	4
	.byte	'ccu6',0,1,208,3,43
	.word	.L240,.L345
	.byte	4
	.byte	'frequency',0,1,208,3,57
	.word	.L287,.L346
	.byte	4
	.byte	'period',0,1,208,3,83
	.word	.L274,.L347
	.byte	5
	.word	.L127,.L344
	.byte	6
	.byte	'prescaler',0,1,210,3,13
	.word	.L248,.L348
	.byte	6
	.byte	'freqCC6',0,1,211,3,13
	.word	.L287,.L349
	.byte	6
	.byte	'divFactor',0,1,212,3,13
	.word	.L248,.L350
	.byte	5
	.word	.L351,.L84
	.byte	7
	.word	.L298,.L351,.L352
	.byte	8
	.word	.L300,.L353
	.byte	8
	.word	.L302,.L354
	.byte	8
	.word	.L304,.L355
	.byte	9
	.word	.L306,.L356
	.byte	6
	.byte	'tctr4',0,2,200,12,20
	.word	.L310,.L359
	.byte	0,0,7
	.word	.L360,.L352,.L357
	.byte	8
	.word	.L361,.L362
	.byte	8
	.word	.L363,.L364
	.byte	10
	.word	.L365,.L352,.L357
	.byte	0,7
	.word	.L298,.L357,.L358
	.byte	8
	.word	.L300,.L353
	.byte	8
	.word	.L302,.L354
	.byte	8
	.word	.L304,.L355
	.byte	0,7
	.word	.L312,.L358,.L366
	.byte	8
	.word	.L314,.L367
	.byte	8
	.word	.L316,.L368
	.byte	8
	.word	.L318,.L369
	.byte	10
	.word	.L320,.L358,.L366
	.byte	0,7
	.word	.L323,.L370,.L85
	.byte	8
	.word	.L325,.L371
	.byte	8
	.word	.L327,.L372
	.byte	10
	.word	.L329,.L370,.L85
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT13Frequency')
	.sect	'.debug_abbrev'
.L175:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,85
	.byte	6,0,0,10,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT13Frequency')
	.sect	'.debug_line'
.L176:
	.word	.L595-.L594
.L594:
	.half	3
	.word	.L597-.L596
.L596:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.h',0,0,0,0,0
.L597:
	.byte	5,9,7,0,5,2
	.word	.L127
	.byte	3,207,3,1,5,50,9
	.half	.L470-.L127
	.byte	3,3,1,5,23,9
	.half	.L469-.L470
	.byte	1,5,33,9
	.half	.L473-.L469
	.byte	3,1,1,5,20,9
	.half	.L472-.L473
	.byte	3,2,1,5,39,1,5,21,9
	.half	.L82-.L472
	.byte	3,2,1,5,9,9
	.half	.L598-.L82
	.byte	3,2,1,5,50,7,9
	.half	.L599-.L598
	.byte	3,124,1,5,39,1,5,21,7,9
	.half	.L83-.L599
	.byte	3,10,1,5,5,9
	.half	.L471-.L83
	.byte	1,4,2,5,20,7,9
	.half	.L351-.L471
	.byte	3,233,8,1,9
	.half	.L474-.L351
	.byte	3,1,1,4,1,5,37,9
	.half	.L352-.L474
	.byte	3,156,119,1,4,2,5,25,3,220,12,1,5,20,9
	.half	.L357-.L352
	.byte	3,137,124,1,3,1,1,5,33,9
	.half	.L358-.L357
	.byte	3,139,3,1,5,36,9
	.half	.L475-.L358
	.byte	1,4,1,5,58,9
	.half	.L600-.L475
	.byte	3,147,116,1,4,2,5,66,9
	.half	.L601-.L600
	.byte	3,237,11,1,5,45,9
	.half	.L602-.L601
	.byte	1,5,19,1,4,1,5,9,9
	.half	.L366-.L602
	.byte	3,152,116,1,4,2,5,32,7,9
	.half	.L370-.L366
	.byte	3,138,8,1,5,35,9
	.half	.L603-.L370
	.byte	1,5,19,1,4,1,5,32,9
	.half	.L85-.L603
	.byte	3,251,119,1,5,37,9
	.half	.L604-.L85
	.byte	1,5,29,9
	.half	.L605-.L604
	.byte	1,5,1,3,10,1,5,19,7,9
	.half	.L84-.L605
	.byte	3,124,1,5,1,3,4,1,7,9
	.half	.L178-.L84
	.byte	0,1,1
.L595:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT13Frequency')
	.sect	'.debug_ranges'
.L177:
	.word	-1,.L127,0,.L178-.L127,0,0
.L356:
	.word	-1,.L127,.L351-.L127,.L352-.L127,.L357-.L127,.L358-.L127,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.debug_info'
.L179:
	.word	277
	.half	3
	.word	.L180
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L182,.L181
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_setT13InputSignal',0,1,129,4,6,1,1,1
	.word	.L129,.L373,.L128
	.byte	4
	.byte	'ccu6',0,1,129,4,42
	.word	.L240,.L374
	.byte	4
	.byte	'extInput',0,1,129,4,66
	.word	.L375,.L376
	.byte	5
	.word	.L129,.L373
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.debug_abbrev'
.L180:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.debug_line'
.L181:
	.word	.L607-.L606
.L606:
	.half	3
	.word	.L609-.L608
.L608:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L609:
	.byte	5,38,7,0,5,2
	.word	.L129
	.byte	3,130,4,1,5,19,9
	.half	.L610-.L129
	.byte	1,5,47,9
	.half	.L611-.L610
	.byte	1,5,28,9
	.half	.L612-.L611
	.byte	1,5,38,9
	.half	.L613-.L612
	.byte	3,1,1,5,19,9
	.half	.L614-.L613
	.byte	1,5,28,9
	.half	.L615-.L614
	.byte	1,5,1,9
	.half	.L616-.L615
	.byte	3,3,1,7,9
	.half	.L183-.L616
	.byte	0,1,1
.L607:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.debug_ranges'
.L182:
	.word	-1,.L129,0,.L183-.L129,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_getAddress')
	.sect	'.debug_info'
.L184:
	.word	273
	.half	3
	.word	.L185
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L187,.L186
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_getAddress',0,1,161,1,11
	.word	.L240
	.byte	1,1,1
	.word	.L99,.L377,.L98
	.byte	4
	.byte	'ccu6',0,1,161,1,44
	.word	.L378,.L379
	.byte	5
	.word	.L99,.L377
	.byte	6
	.byte	'module',0,1,163,1,15
	.word	.L240,.L380
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_getAddress')
	.sect	'.debug_abbrev'
.L185:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_getAddress')
	.sect	'.debug_line'
.L186:
	.word	.L618-.L617
.L617:
	.half	3
	.word	.L620-.L619
.L619:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L620:
	.byte	5,5,7,0,5,2
	.word	.L99
	.byte	3,164,1,1,5,30,7,9
	.half	.L621-.L99
	.byte	3,2,1,5,50,9
	.half	.L622-.L621
	.byte	1,5,56,9
	.half	.L623-.L622
	.byte	1,5,1,9
	.half	.L441-.L623
	.byte	3,8,1,5,16,7,9
	.half	.L14-.L441
	.byte	3,124,1,5,1,9
	.half	.L442-.L14
	.byte	3,4,1,7,9
	.half	.L188-.L442
	.byte	0,1,1
.L618:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_getAddress')
	.sect	'.debug_ranges'
.L187:
	.word	-1,.L99,0,.L188-.L99,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.debug_info'
.L189:
	.word	306
	.half	3
	.word	.L190
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L192,.L191
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_getCaptureRegisterValue',0,1,178,1,8
	.word	.L274
	.byte	1,1,1
	.word	.L101,.L381,.L100
	.byte	4
	.byte	'ccu6',0,1,178,1,50
	.word	.L240,.L382
	.byte	4
	.byte	'channel',0,1,178,1,75
	.word	.L278,.L383
	.byte	5
	.word	.L101,.L381
	.byte	6
	.byte	'value',0,1,180,1,12
	.word	.L274,.L384
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.debug_abbrev'
.L190:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.debug_line'
.L191:
	.word	.L625-.L624
.L624:
	.half	3
	.word	.L627-.L626
.L626:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L627:
	.byte	5,18,7,0,5,2
	.word	.L101
	.byte	3,179,1,1,5,10,9
	.half	.L443-.L101
	.byte	3,4,1,7,9
	.half	.L628-.L443
	.byte	3,3,1,7,9
	.half	.L629-.L628
	.byte	3,3,1,5,1,7,9
	.half	.L630-.L629
	.byte	3,6,1,5,28,7,9
	.half	.L17-.L630
	.byte	3,117,1,5,1,9
	.half	.L631-.L17
	.byte	3,11,1,5,28,7,9
	.half	.L18-.L631
	.byte	3,120,1,5,1,9
	.half	.L632-.L18
	.byte	3,8,1,5,28,7,9
	.half	.L19-.L632
	.byte	3,123,1,5,1,9
	.half	.L633-.L19
	.byte	3,5,1,7,9
	.half	.L193-.L633
	.byte	0,1,1
.L625:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.debug_ranges'
.L192:
	.word	-1,.L101,0,.L193-.L101,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.debug_info'
.L194:
	.word	312
	.half	3
	.word	.L195
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L197,.L196
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_getCaptureShadowRegisterValue',0,1,199,1,8
	.word	.L274
	.byte	1,1,1
	.word	.L103,.L385,.L102
	.byte	4
	.byte	'ccu6',0,1,199,1,56
	.word	.L240,.L386
	.byte	4
	.byte	'channel',0,1,199,1,81
	.word	.L278,.L387
	.byte	5
	.word	.L103,.L385
	.byte	6
	.byte	'value',0,1,201,1,12
	.word	.L274,.L388
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.debug_abbrev'
.L195:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.debug_line'
.L196:
	.word	.L635-.L634
.L634:
	.half	3
	.word	.L637-.L636
.L636:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L637:
	.byte	5,18,7,0,5,2
	.word	.L103
	.byte	3,200,1,1,5,10,9
	.half	.L444-.L103
	.byte	3,4,1,7,9
	.half	.L638-.L444
	.byte	3,3,1,7,9
	.half	.L639-.L638
	.byte	3,3,1,5,1,7,9
	.half	.L640-.L639
	.byte	3,6,1,5,29,7,9
	.half	.L24-.L640
	.byte	3,117,1,5,1,9
	.half	.L641-.L24
	.byte	3,11,1,5,29,7,9
	.half	.L25-.L641
	.byte	3,120,1,5,1,9
	.half	.L642-.L25
	.byte	3,8,1,5,29,7,9
	.half	.L26-.L642
	.byte	3,123,1,5,1,9
	.half	.L643-.L26
	.byte	3,5,1,7,9
	.half	.L198-.L643
	.byte	0,1,1
.L635:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.debug_ranges'
.L197:
	.word	-1,.L103,0,.L198-.L103,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_getIndex')
	.sect	'.debug_info'
.L199:
	.word	290
	.half	3
	.word	.L200
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L202,.L201
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_getIndex',0,1,220,1,15
	.word	.L378
	.byte	1,1,1
	.word	.L105,.L389,.L104
	.byte	4
	.byte	'ccu6',0,1,220,1,42
	.word	.L240,.L390
	.byte	5
	.word	.L105,.L389
	.byte	6
	.byte	'index',0,1,222,1,19
	.word	.L274,.L391
	.byte	6
	.byte	'result',0,1,223,1,19
	.word	.L378,.L392
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_getIndex')
	.sect	'.debug_abbrev'
.L200:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_getIndex')
	.sect	'.debug_line'
.L201:
	.word	.L645-.L644
.L644:
	.half	3
	.word	.L647-.L646
.L646:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L647:
	.byte	5,12,7,0,5,2
	.word	.L105
	.byte	3,224,1,1,5,13,3,4,1,5,48,9
	.half	.L648-.L105
	.byte	3,126,1,5,40,9
	.half	.L31-.L648
	.byte	3,2,1,5,9,9
	.half	.L649-.L31
	.byte	1,5,64,7,9
	.half	.L650-.L649
	.byte	3,2,1,5,22,9
	.half	.L651-.L650
	.byte	1,5,1,3,6,1,5,55,7,9
	.half	.L32-.L651
	.byte	3,118,1,5,48,1,5,1,7,9
	.half	.L652-.L32
	.byte	3,10,1,7,9
	.half	.L203-.L652
	.byte	0,1,1
.L645:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_getIndex')
	.sect	'.debug_ranges'
.L202:
	.word	-1,.L105,0,.L203-.L105,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_getSrcAddress')
	.sect	'.debug_info'
.L204:
	.word	307
	.half	3
	.word	.L205
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L207,.L206
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_getSrcAddress',0,1,240,1,24
	.word	.L393
	.byte	1,1,1
	.word	.L107,.L394,.L106
	.byte	4
	.byte	'ccu6',0,1,240,1,56
	.word	.L240,.L395
	.byte	4
	.byte	'serviceRequest',0,1,240,1,85
	.word	.L264,.L396
	.byte	5
	.word	.L107,.L394
	.byte	6
	.byte	'moduleIdx',0,1,242,1,28
	.word	.L397,.L398
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_getSrcAddress')
	.sect	'.debug_abbrev'
.L205:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_getSrcAddress')
	.sect	'.debug_line'
.L206:
	.word	.L654-.L653
.L653:
	.half	3
	.word	.L656-.L655
.L655:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L656:
	.byte	5,24,7,0,5,2
	.word	.L107
	.byte	3,239,1,1,5,57,3,2,1,5,35,9
	.half	.L446-.L107
	.byte	3,3,1,5,29,1,5,34,9
	.half	.L657-.L446
	.byte	1,5,18,9
	.half	.L658-.L657
	.byte	3,1,1,5,1,9
	.half	.L659-.L658
	.byte	3,1,1,7,9
	.half	.L208-.L659
	.byte	0,1,1
.L654:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_getSrcAddress')
	.sect	'.debug_ranges'
.L207:
	.word	-1,.L107,0,.L208-.L107,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_readTimer')
	.sect	'.debug_info'
.L209:
	.word	291
	.half	3
	.word	.L210
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L212,.L211
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_readTimer',0,1,250,1,8
	.word	.L274
	.byte	1,1,1
	.word	.L109,.L399,.L108
	.byte	4
	.byte	'ccu6',0,1,250,1,36
	.word	.L240,.L400
	.byte	4
	.byte	'timer',0,1,250,1,58
	.word	.L401,.L402
	.byte	5
	.word	.L109,.L399
	.byte	6
	.byte	'result',0,1,252,1,12
	.word	.L274,.L403
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_readTimer')
	.sect	'.debug_abbrev'
.L210:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_readTimer')
	.sect	'.debug_line'
.L211:
	.word	.L661-.L660
.L660:
	.half	3
	.word	.L663-.L662
.L662:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L663:
	.byte	5,5,7,0,5,2
	.word	.L109
	.byte	3,253,1,1,5,27,7,9
	.half	.L664-.L109
	.byte	3,2,1,5,1,9
	.half	.L448-.L664
	.byte	3,8,1,5,27,7,9
	.half	.L36-.L448
	.byte	3,124,1,5,1,9
	.half	.L449-.L36
	.byte	3,4,1,7,9
	.half	.L213-.L449
	.byte	0,1,1
.L661:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_readTimer')
	.sect	'.debug_ranges'
.L212:
	.word	-1,.L109,0,.L213-.L109,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.debug_info'
.L214:
	.word	319
	.half	3
	.word	.L215
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L217,.L216
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_disableModulationOutput',0,1,73,6,1,1,1
	.word	.L91,.L404,.L90
	.byte	4
	.byte	'ccu6',0,1,73,48
	.word	.L240,.L405
	.byte	4
	.byte	'timer',0,1,73,70
	.word	.L401,.L406
	.byte	4
	.byte	'channelOut',0,1,73,96
	.word	.L268,.L407
	.byte	5
	.word	.L91,.L404
	.byte	6
	.byte	'shift',0,1,75,12
	.word	.L274,.L408
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.debug_abbrev'
.L215:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.debug_line'
.L216:
	.word	.L666-.L665
.L665:
	.half	3
	.word	.L668-.L667
.L667:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L668:
	.byte	5,5,7,0,5,2
	.word	.L91
	.byte	3,204,0,1,5,9,7,9
	.half	.L669-.L91
	.byte	3,2,1,7,9
	.half	.L670-.L669
	.byte	3,6,1,9
	.half	.L2-.L670
	.byte	3,5,1,5,41,7,9
	.half	.L671-.L2
	.byte	3,2,1,5,31,9
	.half	.L4-.L671
	.byte	3,1,1,5,42,3,1,1,5,33,9
	.half	.L672-.L4
	.byte	3,127,1,5,47,9
	.half	.L673-.L672
	.byte	3,1,1,5,45,9
	.half	.L674-.L673
	.byte	1,5,28,1,5,1,9
	.half	.L3-.L674
	.byte	3,7,1,5,27,7,9
	.half	.L5-.L3
	.byte	3,125,1,5,35,9
	.half	.L675-.L5
	.byte	1,5,1,9
	.half	.L676-.L675
	.byte	3,3,1,7,9
	.half	.L218-.L676
	.byte	0,1,1
.L666:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.debug_ranges'
.L217:
	.word	-1,.L91,0,.L218-.L91,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_disableModule')
	.sect	'.debug_info'
.L219:
	.word	305
	.half	3
	.word	.L220
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L222,.L221
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_disableModule',0,1,104,6,1,1,1
	.word	.L93,.L409,.L92
	.byte	4
	.byte	'ccu6',0,1,104,38
	.word	.L240,.L410
	.byte	5
	.word	.L93,.L409
	.byte	6
	.byte	'passwd',0,1,106,12
	.word	.L248,.L411
	.byte	7
	.word	.L412,.L7,.L413
	.byte	8
	.word	.L414,.L415
	.byte	9
	.word	.L416,.L7,.L413
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_disableModule')
	.sect	'.debug_abbrev'
.L220:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_disableModule')
	.sect	'.debug_line'
.L221:
	.word	.L678-.L677
.L677:
	.half	3
	.word	.L680-.L679
.L679:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.h',0,0,0,0,0
.L680:
	.byte	5,6,7,0,5,2
	.word	.L93
	.byte	3,231,0,1,5,53,9
	.half	.L434-.L93
	.byte	3,2,1,5,19,9
	.half	.L433-.L434
	.byte	1,5,31,9
	.half	.L436-.L433
	.byte	3,1,1,5,19,9
	.half	.L435-.L436
	.byte	3,1,1,5,17,1,5,29,9
	.half	.L681-.L435
	.byte	3,1,1,4,2,5,23,9
	.half	.L7-.L681
	.byte	3,146,14,1,4,1,5,49,9
	.half	.L413-.L7
	.byte	3,241,113,1,5,1,7,9
	.half	.L682-.L413
	.byte	3,2,1,7,9
	.half	.L223-.L682
	.byte	0,1,1
.L678:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_disableModule')
	.sect	'.debug_ranges'
.L222:
	.word	-1,.L93,0,.L223-.L93,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.debug_info'
.L224:
	.word	318
	.half	3
	.word	.L225
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L227,.L226
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_enableModulationOutput',0,1,117,6,1,1,1
	.word	.L95,.L417,.L94
	.byte	4
	.byte	'ccu6',0,1,117,47
	.word	.L240,.L418
	.byte	4
	.byte	'timer',0,1,117,69
	.word	.L401,.L419
	.byte	4
	.byte	'channelOut',0,1,117,95
	.word	.L268,.L420
	.byte	5
	.word	.L95,.L417
	.byte	6
	.byte	'shift',0,1,119,12
	.word	.L274,.L421
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.debug_abbrev'
.L225:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.debug_line'
.L226:
	.word	.L684-.L683
.L683:
	.half	3
	.word	.L686-.L685
.L685:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L686:
	.byte	5,5,7,0,5,2
	.word	.L95
	.byte	3,248,0,1,5,9,7,9
	.half	.L687-.L95
	.byte	3,2,1,7,9
	.half	.L688-.L687
	.byte	3,6,1,9
	.half	.L8-.L688
	.byte	3,5,1,5,41,7,9
	.half	.L689-.L8
	.byte	3,2,1,5,31,9
	.half	.L10-.L689
	.byte	3,1,1,5,42,3,1,1,5,33,9
	.half	.L690-.L10
	.byte	3,127,1,5,45,9
	.half	.L691-.L690
	.byte	3,1,1,5,28,1,5,1,9
	.half	.L9-.L691
	.byte	3,7,1,5,27,7,9
	.half	.L11-.L9
	.byte	3,125,1,5,35,9
	.half	.L692-.L11
	.byte	1,5,1,9
	.half	.L693-.L692
	.byte	3,3,1,7,9
	.half	.L228-.L693
	.byte	0,1,1
.L684:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.debug_ranges'
.L227:
	.word	-1,.L95,0,.L228-.L95,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_enableModule')
	.sect	'.debug_info'
.L229:
	.word	307
	.half	3
	.word	.L230
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L232,.L231
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_enableModule',0,1,148,1,6,1,1,1
	.word	.L97,.L422,.L96
	.byte	4
	.byte	'ccu6',0,1,148,1,37
	.word	.L240,.L423
	.byte	5
	.word	.L97,.L422
	.byte	6
	.byte	'passwd',0,1,150,1,12
	.word	.L248,.L424
	.byte	7
	.word	.L412,.L13,.L425
	.byte	8
	.word	.L414,.L426
	.byte	9
	.word	.L416,.L13,.L425
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_enableModule')
	.sect	'.debug_abbrev'
.L230:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_enableModule')
	.sect	'.debug_line'
.L231:
	.word	.L695-.L694
.L694:
	.half	3
	.word	.L697-.L696
.L696:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.h',0,0,0,0,0
.L697:
	.byte	5,6,7,0,5,2
	.word	.L97
	.byte	3,147,1,1,5,53,9
	.half	.L438-.L97
	.byte	3,2,1,5,19,9
	.half	.L437-.L438
	.byte	1,5,31,9
	.half	.L440-.L437
	.byte	3,1,1,5,16,9
	.half	.L439-.L440
	.byte	3,1,1,5,22,9
	.half	.L698-.L439
	.byte	1,5,29,9
	.half	.L699-.L698
	.byte	3,1,1,4,2,5,23,9
	.half	.L13-.L699
	.byte	3,230,13,1,4,1,5,50,9
	.half	.L425-.L13
	.byte	3,157,114,1,5,1,7,9
	.half	.L700-.L425
	.byte	3,2,1,7,9
	.half	.L233-.L700
	.byte	0,1,1
.L695:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_enableModule')
	.sect	'.debug_ranges'
.L232:
	.word	-1,.L97,0,.L233-.L97,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_resetModule')
	.sect	'.debug_info'
.L234:
	.word	270
	.half	3
	.word	.L235
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L237,.L236
	.byte	2
	.word	.L130
	.byte	3
	.byte	'IfxCcu6_resetModule',0,1,139,2,6,1,1,1
	.word	.L111,.L427,.L110
	.byte	4
	.byte	'ccu6',0,1,139,2,36
	.word	.L240,.L428
	.byte	5
	.word	.L111,.L427
	.byte	6
	.byte	'passwd',0,1,141,2,12
	.word	.L248,.L429
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_resetModule')
	.sect	'.debug_abbrev'
.L235:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_resetModule')
	.sect	'.debug_line'
.L236:
	.word	.L702-.L701
.L701:
	.half	3
	.word	.L704-.L703
.L703:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L704:
	.byte	5,6,7,0,5,2
	.word	.L111
	.byte	3,138,2,1,5,53,9
	.half	.L451-.L111
	.byte	3,2,1,5,19,9
	.half	.L450-.L451
	.byte	1,5,31,9
	.half	.L453-.L450
	.byte	3,2,1,5,18,9
	.half	.L452-.L453
	.byte	3,1,1,5,29,9
	.half	.L705-.L452
	.byte	3,2,1,5,23,9
	.half	.L454-.L705
	.byte	3,126,1,5,18,9
	.half	.L706-.L454
	.byte	3,1,1,5,23,9
	.half	.L707-.L706
	.byte	1,5,29,9
	.half	.L708-.L707
	.byte	3,1,1,5,30,9
	.half	.L39-.L708
	.byte	3,2,1,5,38,9
	.half	.L709-.L39
	.byte	1,5,31,7,9
	.half	.L710-.L709
	.byte	3,4,1,5,29,9
	.half	.L711-.L710
	.byte	3,2,1,5,20,3,127,1,5,25,9
	.half	.L455-.L711
	.byte	1,5,29,9
	.half	.L712-.L455
	.byte	3,1,1,5,1,7,9
	.half	.L238-.L712
	.byte	3,1,0,1,1
.L702:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_resetModule')
	.sect	'.debug_ranges'
.L237:
	.word	-1,.L111,0,.L238-.L111,0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_connectTrigger')
	.sect	'.debug_loc'
.L88:
	.word	-1,.L89,0,.L239-.L89
	.half	2
	.byte	138,0
	.word	0,0
.L254:
	.word	0,0
.L241:
	.word	-1,.L89,0,.L239-.L89
	.half	1
	.byte	100
	.word	0,0
.L256:
	.word	0,0
.L247:
	.word	-1,.L89,.L251-.L89,.L431-.L89
	.half	1
	.byte	95
	.word	.L432-.L89,.L239-.L89
	.half	1
	.byte	95
	.word	0,0
.L243:
	.word	-1,.L89,0,.L239-.L89
	.half	1
	.byte	84
	.word	0,0
.L245:
	.word	-1,.L89,0,.L430-.L89
	.half	1
	.byte	85
	.word	0,0
.L249:
	.word	0,0
.L258:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.debug_loc'
.L90:
	.word	-1,.L91,0,.L404-.L91
	.half	2
	.byte	138,0
	.word	0,0
.L405:
	.word	-1,.L91,0,.L404-.L91
	.half	1
	.byte	100
	.word	0,0
.L407:
	.word	-1,.L91,0,.L404-.L91
	.half	1
	.byte	85
	.word	0,0
.L408:
	.word	-1,.L91,0,.L404-.L91
	.half	1
	.byte	85
	.word	0,0
.L406:
	.word	-1,.L91,0,.L404-.L91
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_disableModule')
	.sect	'.debug_loc'
.L92:
	.word	-1,.L93,0,.L409-.L93
	.half	2
	.byte	138,0
	.word	0,0
.L410:
	.word	-1,.L93,0,.L433-.L93
	.half	1
	.byte	100
	.word	.L434-.L93,.L409-.L93
	.half	1
	.byte	111
	.word	0,0
.L415:
	.word	0,0
.L411:
	.word	-1,.L93,.L433-.L93,.L435-.L93
	.half	1
	.byte	82
	.word	.L436-.L93,.L7-.L93
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.debug_loc'
.L94:
	.word	-1,.L95,0,.L417-.L95
	.half	2
	.byte	138,0
	.word	0,0
.L418:
	.word	-1,.L95,0,.L417-.L95
	.half	1
	.byte	100
	.word	0,0
.L420:
	.word	-1,.L95,0,.L417-.L95
	.half	1
	.byte	85
	.word	0,0
.L421:
	.word	-1,.L95,0,.L417-.L95
	.half	1
	.byte	85
	.word	0,0
.L419:
	.word	-1,.L95,0,.L417-.L95
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_enableModule')
	.sect	'.debug_loc'
.L96:
	.word	-1,.L97,0,.L422-.L97
	.half	2
	.byte	138,0
	.word	0,0
.L423:
	.word	-1,.L97,0,.L437-.L97
	.half	1
	.byte	100
	.word	.L438-.L97,.L422-.L97
	.half	1
	.byte	111
	.word	0,0
.L426:
	.word	0,0
.L424:
	.word	-1,.L97,.L437-.L97,.L439-.L97
	.half	1
	.byte	82
	.word	.L440-.L97,.L13-.L97
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_getAddress')
	.sect	'.debug_loc'
.L98:
	.word	-1,.L99,0,.L377-.L99
	.half	2
	.byte	138,0
	.word	0,0
.L379:
	.word	-1,.L99,0,.L377-.L99
	.half	1
	.byte	84
	.word	0,0
.L380:
	.word	-1,.L99,.L441-.L99,.L14-.L99
	.half	1
	.byte	98
	.word	.L442-.L99,.L377-.L99
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.debug_loc'
.L100:
	.word	-1,.L101,0,.L381-.L101
	.half	2
	.byte	138,0
	.word	0,0
.L382:
	.word	-1,.L101,0,.L381-.L101
	.half	1
	.byte	100
	.word	0,0
.L383:
	.word	-1,.L101,0,.L381-.L101
	.half	1
	.byte	84
	.word	0,0
.L384:
	.word	-1,.L101,.L443-.L101,.L381-.L101
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.debug_loc'
.L102:
	.word	-1,.L103,0,.L385-.L103
	.half	2
	.byte	138,0
	.word	0,0
.L386:
	.word	-1,.L103,0,.L385-.L103
	.half	1
	.byte	100
	.word	0,0
.L387:
	.word	-1,.L103,0,.L385-.L103
	.half	1
	.byte	84
	.word	0,0
.L388:
	.word	-1,.L103,.L444-.L103,.L385-.L103
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_getIndex')
	.sect	'.debug_loc'
.L104:
	.word	-1,.L105,0,.L389-.L105
	.half	2
	.byte	138,0
	.word	0,0
.L390:
	.word	-1,.L105,0,.L389-.L105
	.half	1
	.byte	100
	.word	0,0
.L391:
	.word	0,0
.L392:
	.word	-1,.L105,.L445-.L105,.L389-.L105
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_getSrcAddress')
	.sect	'.debug_loc'
.L106:
	.word	-1,.L107,0,.L394-.L107
	.half	2
	.byte	138,0
	.word	0,0
.L395:
	.word	-1,.L107,0,.L446-.L107
	.half	1
	.byte	100
	.word	0,0
.L398:
	.word	-1,.L107,.L446-.L107,.L447-.L107
	.half	1
	.byte	82
	.word	0,0
.L396:
	.word	-1,.L107,0,.L446-.L107
	.half	1
	.byte	84
	.word	.L446-.L107,.L394-.L107
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_readTimer')
	.sect	'.debug_loc'
.L108:
	.word	-1,.L109,0,.L399-.L109
	.half	2
	.byte	138,0
	.word	0,0
.L400:
	.word	-1,.L109,0,.L399-.L109
	.half	1
	.byte	100
	.word	0,0
.L403:
	.word	-1,.L109,.L448-.L109,.L36-.L109
	.half	1
	.byte	82
	.word	.L449-.L109,.L399-.L109
	.half	1
	.byte	82
	.word	0,0
.L402:
	.word	-1,.L109,0,.L399-.L109
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_resetModule')
	.sect	'.debug_loc'
.L110:
	.word	-1,.L111,0,.L427-.L111
	.half	2
	.byte	138,0
	.word	0,0
.L428:
	.word	-1,.L111,0,.L450-.L111
	.half	1
	.byte	100
	.word	.L451-.L111,.L427-.L111
	.half	1
	.byte	111
	.word	0,0
.L429:
	.word	-1,.L111,.L450-.L111,.L452-.L111
	.half	1
	.byte	82
	.word	.L453-.L111,.L427-.L111
	.half	1
	.byte	88
	.word	.L454-.L111,.L39-.L111
	.half	1
	.byte	84
	.word	.L455-.L111,.L427-.L111
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.debug_loc'
.L112:
	.word	-1,.L113,0,.L260-.L113
	.half	2
	.byte	138,0
	.word	0,0
.L261:
	.word	-1,.L113,0,.L260-.L113
	.half	1
	.byte	100
	.word	0,0
.L265:
	.word	-1,.L113,0,.L260-.L113
	.half	1
	.byte	85
	.word	0,0
.L263:
	.word	-1,.L113,0,.L260-.L113
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.debug_loc'
.L114:
	.word	-1,.L115,0,.L266-.L115
	.half	2
	.byte	138,0
	.word	0,0
.L267:
	.word	-1,.L115,0,.L266-.L115
	.half	1
	.byte	100
	.word	0,0
.L269:
	.word	-1,.L115,0,.L266-.L115
	.half	1
	.byte	84
	.word	0,0
.L275:
	.word	0,0
.L271:
	.word	-1,.L115,0,.L456-.L115
	.half	1
	.byte	85
	.word	.L60-.L115,.L266-.L115
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.debug_loc'
.L116:
	.word	-1,.L117,0,.L276-.L117
	.half	2
	.byte	138,0
	.word	0,0
.L277:
	.word	-1,.L117,0,.L276-.L117
	.half	1
	.byte	100
	.word	0,0
.L279:
	.word	-1,.L117,0,.L276-.L117
	.half	1
	.byte	84
	.word	0,0
.L282:
	.word	-1,.L117,.L459-.L117,.L460-.L117
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L281:
	.word	-1,.L117,0,.L276-.L117
	.half	1
	.byte	85
	.word	.L457-.L117,.L458-.L117
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.debug_loc'
.L118:
	.word	-1,.L119,0,.L283-.L119
	.half	2
	.byte	138,0
	.word	0,0
.L284:
	.word	-1,.L119,0,.L283-.L119
	.half	1
	.byte	100
	.word	0,0
.L285:
	.word	-1,.L119,0,.L283-.L119
	.half	1
	.byte	84
	.word	0,0
.L286:
	.word	-1,.L119,0,.L283-.L119
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT12Frequency')
	.sect	'.debug_loc'
.L120:
	.word	-1,.L121,0,.L288-.L121
	.half	2
	.byte	138,0
	.word	0,0
.L289:
	.word	-1,.L121,0,.L461-.L121
	.half	1
	.byte	100
	.word	.L462-.L121,.L288-.L121
	.half	1
	.byte	111
	.word	0,0
.L326:
	.word	0,0
.L301:
	.word	0,0
.L315:
	.word	0,0
.L333:
	.word	0,0
.L293:
	.word	-1,.L121,0,.L461-.L121
	.half	1
	.byte	86
	.word	.L462-.L121,.L288-.L121
	.half	1
	.byte	90
	.word	0,0
.L296:
	.word	-1,.L121,.L463-.L121,.L465-.L121
	.half	1
	.byte	82
	.word	.L465-.L121,.L466-.L121
	.half	1
	.byte	95
	.word	0,0
.L295:
	.word	-1,.L121,.L461-.L121,.L463-.L121
	.half	1
	.byte	82
	.word	.L464-.L121,.L288-.L121
	.half	1
	.byte	91
	.word	0,0
.L290:
	.word	-1,.L121,0,.L461-.L121
	.half	1
	.byte	84
	.word	.L464-.L121,.L463-.L121
	.half	1
	.byte	89
	.word	0,0
.L319:
	.word	0,0
.L335:
	.word	0,0
.L291:
	.word	-1,.L121,0,.L461-.L121
	.half	1
	.byte	85
	.word	.L299-.L121,.L313-.L121
	.half	1
	.byte	88
	.word	0,0
.L294:
	.word	-1,.L121,.L71-.L121,.L288-.L121
	.half	1
	.byte	81
	.word	0,0
.L303:
	.word	0,0
.L305:
	.word	0,0
.L311:
	.word	-1,.L121,.L467-.L121,.L468-.L121
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L328:
	.word	0,0
.L317:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.debug_loc'
.L122:
	.word	-1,.L123,0,.L337-.L123
	.half	2
	.byte	138,0
	.word	0,0
.L338:
	.word	-1,.L123,0,.L337-.L123
	.half	1
	.byte	100
	.word	0,0
.L340:
	.word	-1,.L123,0,.L337-.L123
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.debug_loc'
.L124:
	.word	-1,.L125,0,.L341-.L125
	.half	2
	.byte	138,0
	.word	0,0
.L342:
	.word	-1,.L125,0,.L341-.L125
	.half	1
	.byte	100
	.word	0,0
.L343:
	.word	-1,.L125,0,.L341-.L125
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT13Frequency')
	.sect	'.debug_loc'
.L126:
	.word	-1,.L127,0,.L344-.L127
	.half	2
	.byte	138,0
	.word	0,0
.L345:
	.word	-1,.L127,0,.L469-.L127
	.half	1
	.byte	100
	.word	.L470-.L127,.L344-.L127
	.half	1
	.byte	111
	.word	0,0
.L371:
	.word	0,0
.L353:
	.word	0,0
.L367:
	.word	0,0
.L362:
	.word	0,0
.L350:
	.word	-1,.L127,.L82-.L127,.L344-.L127
	.half	1
	.byte	82
	.word	0,0
.L349:
	.word	-1,.L127,.L469-.L127,.L472-.L127
	.half	1
	.byte	82
	.word	.L473-.L127,.L344-.L127
	.half	1
	.byte	89
	.word	0,0
.L346:
	.word	-1,.L127,0,.L469-.L127
	.half	1
	.byte	84
	.word	.L470-.L127,.L471-.L127
	.half	1
	.byte	95
	.word	0,0
.L369:
	.word	0,0
.L347:
	.word	-1,.L127,0,.L469-.L127
	.half	1
	.byte	85
	.word	.L469-.L127,.L357-.L127
	.half	1
	.byte	88
	.word	.L84-.L127,.L344-.L127
	.half	1
	.byte	88
	.word	0,0
.L348:
	.word	-1,.L127,.L82-.L127,.L344-.L127
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L354:
	.word	0,0
.L355:
	.word	0,0
.L359:
	.word	-1,.L127,.L474-.L127,.L475-.L127
	.half	1
	.byte	95
	.word	0,0
.L372:
	.word	0,0
.L368:
	.word	0,0
.L364:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.debug_loc'
.L128:
	.word	-1,.L129,0,.L373-.L129
	.half	2
	.byte	138,0
	.word	0,0
.L374:
	.word	-1,.L129,0,.L373-.L129
	.half	1
	.byte	100
	.word	0,0
.L376:
	.word	-1,.L129,0,.L373-.L129
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L713:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_connectTrigger')
	.sect	'.debug_frame'
	.word	24
	.word	.L713,.L89,.L239-.L89
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.debug_frame'
	.word	24
	.word	.L713,.L91,.L404-.L91
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_disableModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L713,.L93,.L409-.L93
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.debug_frame'
	.word	24
	.word	.L713,.L95,.L417-.L95
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_enableModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L713,.L97,.L422-.L97
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_getAddress')
	.sect	'.debug_frame'
	.word	24
	.word	.L713,.L99,.L377-.L99
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.debug_frame'
	.word	24
	.word	.L713,.L101,.L381-.L101
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.debug_frame'
	.word	24
	.word	.L713,.L103,.L385-.L103
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_getIndex')
	.sect	'.debug_frame'
	.word	20
	.word	.L713,.L105,.L389-.L105
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_getSrcAddress')
	.sect	'.debug_frame'
	.word	12
	.word	.L713,.L107,.L394-.L107
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_readTimer')
	.sect	'.debug_frame'
	.word	24
	.word	.L713,.L109,.L399-.L109
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_resetModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L713,.L111,.L427-.L111
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.debug_frame'
	.word	24
	.word	.L713,.L113,.L260-.L113
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.debug_frame'
	.word	24
	.word	.L713,.L115,.L266-.L115
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.debug_frame'
	.word	24
	.word	.L713,.L117,.L276-.L117
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.debug_frame'
	.word	24
	.word	.L713,.L119,.L283-.L119
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT12Frequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L713,.L121,.L288-.L121
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.debug_frame'
	.word	20
	.word	.L713,.L123,.L337-.L123
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.debug_frame'
	.word	24
	.word	.L713,.L125,.L341-.L125
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT13Frequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L713,.L127,.L344-.L127
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.debug_frame'
	.word	20
	.word	.L713,.L129,.L373-.L129
	.byte	8,18,8,19,8,22,8,23

; ..\src\BaseSw\iLLD\TC26B\Tricore\Ccu6\Std\IfxCcu6.c	   520  
	; Module end
