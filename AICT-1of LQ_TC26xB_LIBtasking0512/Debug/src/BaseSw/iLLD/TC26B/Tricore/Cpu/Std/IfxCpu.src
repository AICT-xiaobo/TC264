	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99293038"
	.compiler_invocation	"ctc --dep-file=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\.IfxCpu.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc26x -D__CPU_TC26X__ --core=tc1.6.x --iso=99 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\User -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Driver -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -g2 --make-target=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.src ..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c"
	.compiler_name		"ctc"
	;source	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c'

	
$TC16X
	
	.sdecl	'.text.IfxCpu.IfxCpu_acquireMutex',code,cluster('IfxCpu_acquireMutex')
	.sect	'.text.IfxCpu.IfxCpu_acquireMutex'
	.align	2
	
	.global	IfxCpu_acquireMutex

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	     2   * \file IfxCpu.c
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	     3   * \brief CPU  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	     4   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	     5   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	     7   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	     9   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    10   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    16  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    19  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    25   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    26  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    32   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    33  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    41  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    42   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    44   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    45  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    46  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    47  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    48  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    49  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    50  #include "IfxCpu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    51  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    52  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    53  /*-------------------------Function Implementations---------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    54  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    55  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    56  boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock)
; Function IfxCpu_acquireMutex
.L53:
IfxCpu_acquireMutex:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    57  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    58      boolean         retVal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    59      volatile uint32 spinLockVal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    60  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    61      retVal      = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    62  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    63      spinLockVal = 1UL;
	mov	d15,#1
	sub.a	a10,#8
.L265:
	st.w	[a10],d15
.L368:
	mov	d2,#0
.L266:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    64      spinLockVal =
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    65          (uint32)__cmpAndSwap(((unsigned int *)lock), spinLockVal, 0);
	ld.w	d0,[a10]
	mov	d1,d2
	cmpswap.w	[a4]0,e0
.L369:
	st.w	[a10],d0
.L370:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    66  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    67      /* Check if the SpinLock WAS set before the attempt to acquire spinlock */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    68      if (spinLockVal == 0)
	ld.w	d15,[a10]
.L371:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    69      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    70          retVal = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    71      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    72  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    73      return retVal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    74  }
	cmovn	d2,d15,#1
	ret
.L204:
	
__IfxCpu_acquireMutex_function_end:
	.size	IfxCpu_acquireMutex,__IfxCpu_acquireMutex_function_end-IfxCpu_acquireMutex
.L111:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_getCoreMode',code,cluster('IfxCpu_getCoreMode')
	.sect	'.text.IfxCpu.IfxCpu_getCoreMode'
	.align	2
	
	.global	IfxCpu_getCoreMode

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    75  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    76  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    77  IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu)
; Function IfxCpu_getCoreMode
.L55:
IfxCpu_getCoreMode:	.type	func
	mov.aa	a15,a4
.L268:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    78  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    79      IfxCpu_CoreMode    cpuMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    80      Ifx_CPU_DBGSR      dbgsr;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    81      IfxCpu_ResourceCpu index = IfxCpu_getIndex(cpu);
	call	IfxCpu_getIndex
.L267:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    82  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    83      cpuMode = IfxCpu_CoreMode_unknown;
	mov	d0,#5
.L157:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   778  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   779  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   780  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   781  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   782  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   783      Ifx_CPU_CORE_ID reg;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   784      reg.U = __mfcr(CPU_CORE_ID);
	mfcr	d15,#65052
.L270:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   785      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
	and	d15,#7
.L158:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    84   as the host for this call */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    85      if (IfxCpu_getCoreIndex() != index)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    86      {                           /*status request is for other cpu than the host */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    87          dbgsr = cpu->DBGSR;
	jeq	d15,d2,.L4
.L322:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    88      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    89      else
	movh.a	a3,#1
	add.a	a3,a15
	ld.w	d15,[a3]-768
.L271:
	j	.L5
.L4:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    90      {                           /*status request is for same cpu as the host */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    91          dbgsr.U = __mfcr(CPU_DBGSR);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    92      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    93  
	mfcr	d15,#64768
.L5:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    94      /*Check if the requested CPU is in DBG HALT mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    95      if (dbgsr.B.HALT == (uint32)IfxCpu_DBGST_HALT_halt)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    96      {                           /*CPU is in DBG HALT mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    97          cpuMode = IfxCpu_CoreMode_halt;
	extr.u	d15,d15,#1,#2
.L272:
	jne	d15,#1,.L6
.L323:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    98      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	    99      else
	mov	d0,#0
	j	.L7
.L6:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   100      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   101          if (dbgsr.B.HALT == (uint32)IfxCpu_DBGST_HALT_run)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   102          {                       /*CPU is in DBG RUNNING mode now check PMCSR status */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   103              volatile Ifx_SCU_PMCSR *pmcsr_val;
	jne	d15,#0,.L8
.L162:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   104  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   105              pmcsr_val = &MODULE_SCU.PMCSR[index];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   106  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   107              if (pmcsr_val->B.PMST == (uint32)IfxCpu_PMCSR_PMST_normalMode)
	movh.a	a15,#61443
.L269:
	lea	a15,[a15]@los(0xf00360d4)
.L324:
	addsc.a	a15,a15,d2,#2
.L273:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   108              {                   /*Cpu is in normal run mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   109                  cpuMode = IfxCpu_CoreMode_run;
	ld.bu	d15,[a15]1
	and	d15,#7
.L325:
	jne	d15,#1,.L9
.L326:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   110              }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   111              else
	mov	d0,#1
	j	.L10
.L9:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   112              {                   /*Cpu is not in run mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   113                  if (pmcsr_val->B.PMST == (uint32)IfxCpu_PMCSR_PMST_idleMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   114                  {               /*Cpu is in idle mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   115                      cpuMode = IfxCpu_CoreMode_idle;
	ld.bu	d15,[a15]1
	and	d15,#7
.L327:
	jne	d15,#3,.L11
.L328:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   116                  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   117              }
	mov	d0,#2
.L8:
.L11:
.L10:
.L7:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   118          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   119          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   120          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   121              cpuMode = IfxCpu_CoreMode_unknown;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   122          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   123      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   124  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   125      return cpuMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   126  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   127  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   128  
	mov	d2,d0
	ret
.L148:
	
__IfxCpu_getCoreMode_function_end:
	.size	IfxCpu_getCoreMode,__IfxCpu_getCoreMode_function_end-IfxCpu_getCoreMode
.L86:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_getIndex',code,cluster('IfxCpu_getIndex')
	.sect	'.text.IfxCpu.IfxCpu_getIndex'
	.align	2
	
	.global	IfxCpu_getIndex

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   129  IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   130  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   131      IfxCpu_ResourceCpu result;
; Function IfxCpu_getIndex
.L57:
IfxCpu_getIndex:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   132      uint32             index;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   133      result = IfxCpu_ResourceCpu_none;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   134  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   135      for (index = 0; index < IFXCPU_NUM_MODULES; index++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   136      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   137          if (IfxCpu_cfg_indexMap[index].module == cpu)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   138          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   139              result = (IfxCpu_ResourceCpu)IfxCpu_cfg_indexMap[index].index;
	mov	d2,#2
	movh.a	a15,#@his(IfxCpu_cfg_indexMap)
.L274:
	lea	a15,[a15]@los(IfxCpu_cfg_indexMap)
.L333:
	mov.a	a2,#1
.L14:
	ld.a	a5,[a15]
.L334:
	jne.a	a5,a4,.L15
.L335:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   140              break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   141          }
	ld.w	d15,[a15]4
.L336:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   142      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   143  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   144      return result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   145  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   146  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   147  
	extr.u	d2,d15,#0,#8
	ret
.L15:
	lea	a15,[a15]8
	loop	a2,.L14
.L337:
	ret
.L165:
	
__IfxCpu_getIndex_function_end:
	.size	IfxCpu_getIndex,__IfxCpu_getIndex_function_end-IfxCpu_getIndex
.L91:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_getRandomValue',code,cluster('IfxCpu_getRandomValue')
	.sect	'.text.IfxCpu.IfxCpu_getRandomValue'
	.align	2
	
	.global	IfxCpu_getRandomValue

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   148  uint32 IfxCpu_getRandomValue(uint32 *seed)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   149  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   150      /*************************************************************************
; Function IfxCpu_getRandomValue
.L59:
IfxCpu_getRandomValue:	.type	func

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     2   * \file IfxCpu_IntrinsicsTasking.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     3   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     4   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     5   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     6   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     7   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     9   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    10   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    13   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    15   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    16  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    19  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    20   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    21   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    22   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    23   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    24   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    25   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    26  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    27   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    28   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    29   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    30   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    31   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    32   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    33  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    40   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    41  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    42   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    43   * \defgroup IfxLld_Cpu_Intrinsics_Tasking Intrinsics for TASKING compiler
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    44   * \ingroup IfxLld_Cpu_Intrinsics
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    45   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    46   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    47  #ifndef IFXCPU_INTRINSICSTASKING_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    48  #define IFXCPU_INTRINSICSTASKING_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    49  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    50  #include "Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    51  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    52  /* *INDENT-OFF* */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    53  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    54  #ifndef __cplusplus
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    55  /** Function call without return
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    56   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    57  #define Ifx__non_return_call(fun)	__asm("\tji %0"::"a"(fun))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    58  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    59  /** Jump and link
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    60   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    61  IFX_INLINE void Ifx__jump_and_link(void (*fun)(void))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    62  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    63  	__asm("jli %0"::"a"(fun));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    64  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    66  IFX_INLINE void Ifx__moveToDataParam0(unsigned int var)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    67  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    68  	__asm("mov d4, %0"::"d"(var));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    69  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    70  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    71  IFX_INLINE void Ifx__moveToAddrParam0(const void *var)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    72  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    73  	__asm("mov.aa a4, %0"::"a"(var));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    74  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    75  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    76  IFX_INLINE unsigned int Ifx__getDataParamRet(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    77  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    78  	unsigned int var;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    79  	__asm(" mov\t %0, d2":"=d"(var));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    80  	return var;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    81  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    82  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    83  IFX_INLINE void Ifx__moveToDataParamRet(unsigned int var)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    84  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    85  	__asm("mov d2, %0"::"d"(var));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    86  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    87  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    88  IFX_INLINE void Ifx__jumpToFunction(const void *fun)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    90  	Ifx__non_return_call(fun);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    91  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    92  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    93  IFX_INLINE void Ifx__jumpToFunctionWithLink(const void *fun)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    94  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    95  	Ifx__jump_and_link((void (*)(void))fun);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    96  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    98  IFX_INLINE void Ifx__jumpBackToLink(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    99  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   100  	__asm("ji a11");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   101  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   102  #endif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   103  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_any_type Cross type arithmetic operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   104   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   105   * Macro compatible with float, fix point, signed integer and unsigned integer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   106   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   107   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   108   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   109   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   110  #define Ifx__minX(X,Y)                     ( ((X) < (Y)) ? (X) : (Y) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   111  #define Ifx__maxX(X,Y)                     ( ((X) > (Y)) ? (X) : (Y) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   112  #define Ifx__saturateX(X,Min,Max)          ( Ifx__minX(Ifx__maxX(X, Min), Max) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   113  #define Ifx__checkrangeX(X,Min,Max)        (((X) >= (Min)) && ((X) <= (Max)))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   114  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   116  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_singed_integer Signed integer operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   117   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   118   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   120  #define Ifx__saturate(X,Min,Max)           ( __min(__max(X, Min), Max) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   121  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   122  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   123  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_unsinged_integer Unsigned integer operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   124   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   125   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   126   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   127  #define Ifx__saturateu(X,Min,Max)           ( __minu(__maxu(X, Min), Max) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   128  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   130  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_float Floating point operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   131   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   132   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   134  #define Ifx__checkrange(X,Min,Max)         (((X) >= (Min)) && ((X) <= (Max)))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   136  #define Ifx__sqrf(X)                       ((X) * (X))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   137  #define Ifx__sqrtf(X)                      sqrtf(X)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   138  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   139  #define Ifx__roundf(X)                     ((((X) - (int)(X)) > 0.5) ? (1 + (int)(X)) : ((int)(X)))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   140  #define Ifx__absf(X)                       ( ((X) < 0.0) ? -(X) : (X) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   141  #define Ifx__minf(X,Y)                     ( ((X) < (Y)) ? (X) : (Y) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   142  #define Ifx__maxf(X,Y)                     ( ((X) > (Y)) ? (X) : (Y) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   143  #define Ifx__saturatef(X,Min,Max)          ( Ifx__minf(_Ifx_maxf(X, Min), Max) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   144  #define Ifx__checkrangef(X,Min,Max)        (((X) >= (Min)) && ((X) <= (Max)))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   145  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   146  #define Ifx__abs_stdreal(X)                ( ((X) > 0.0) ? (X) : -(X) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   147  #define Ifx__min_stdreal(X,Y)              ( ((X) < (Y)) ? (X) : (Y) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   148  #define Ifx__max_stdreal(X,Y)              ( ((X) > (Y)) ? (X) : (Y) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   149  #define Ifx__saturate_stdreal(X,Min,Max)   ( Ifx__min_stdreal(Ifx__max_stdreal(X, Min), Max) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   150  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   151  #define Ifx__neqf(X,Y)                     ( ((X) > (Y)) ||  ((X) < (Y)) )     /**< X != Y */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   152  #define Ifx__leqf(X,Y)                     ( !((X) > (Y)) )     /**< X <= Y */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   153  #define Ifx__geqf(X,Y)                     ( !((X) < (Y)) )     /**< X >= Y */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   154  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   155  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_fractional Fractional Arithmetic Support
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   156   The next table provides an overview of intrinsic functions to convert fractional values. Note that the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   157   TASKING VX-toolset C compiler for TriCore fully supports the fractional type so normally you should not
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   158   need these intrinsic functions (except for __mulfractlong). For compatibility reasons the TASKING C
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   159   compiler does support these functions.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   160   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   161   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   162   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   163  #define Ifx__fract_to_float(value)  ((float)(value))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   164  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   165  #define Ifx__mulfractlong __mulfractlong
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   166  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   167  #define Ifx__mulfractfract(fractvalue1,fractvalue2)  ((fractvalue1)*(fractvalue2))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   168  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   169  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   170  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   171  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_insert Insert / Extract Bit-fields and Bits
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   172   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   173   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   174   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   175  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   176  #define Ifx__extru(a, p, w)            __extru(a,p,w)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   177  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   178  #define Ifx__extr(a, p, w)             __extr(a,p,w)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   180  #define Ifx__imaskldmst(a, v, b, p)    __imaskldmst((int*)a, v, b, p)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   181  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   182  #define Ifx__insert(a,b,p,w)           __insert(a,b,p,w)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   183  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   184  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   185  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   186  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_interrupt_handling Interrupt Handling
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   187   The next table provides an overview of the intrinsic functions to read or set interrupt handling.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   188   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   189   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   190   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   191  #define Ifx__disable_and_save __disable_and_save
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   192  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   193  #define Ifx__restore __restore
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   194  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   195  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   196  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   197  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_miscellaneous Miscellaneous Intrinsic Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   198   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   199   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   200   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   201  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   202  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   203  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   204  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_packed Packed Data Type Support
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   205   The next table provides an overview of the intrinsic functions for initialization of packed data type.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   206   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   207   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   208   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   209  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   210  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   211  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   212  #ifndef __cplusplus
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   213  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_register Register Handling
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   214   The next table provides an overview of the intrinsic functions that you can use to access control registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   215   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   216   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   218  #define Ifx__mtcr_no_isync(reg, val)   \ 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   219      __asm("mtcr %0,%1"::"i"(reg),"d"(val));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   220  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   221  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   222  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   223  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_saturation Saturation Arithmetic Support
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   224   These intrinsics support saturation arithmetic
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   225   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   226   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   227   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   228  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   229  #define Ifx__adds(a,b)                 ((__sat int)(a)+(__sat int)(b))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   230  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   231  #define Ifx__addsu(a,b)                ((__sat unsigned int)(a)+(__sat unsigned int)(b))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   232  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   233  #define Ifx__subs(a,b)                 ((__sat int)(a)-(__sat int)(b))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   234  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   235  #define Ifx__subsu(a,b)                ((__sat unsigned int )(a)-(__sat unsigned int )(b))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   236  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   237  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   238  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   239  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_single_assembly Insert Single Assembly Instruction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   240   The next table provides an overview of the intrinsic functions that you can use to insert a single assembly
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   241   instruction.You can also use inline assembly but these intrinsics provide a shorthand for frequently used
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   242   assembly instructions.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   243   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   244   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   245   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   246  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   247  IFX_INLINE void Ifx__nops(void* cnt)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   248  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   249      __asm("nop16 \n\t"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   250            "loop %0,*-2"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   251            ::"a"(((char*)cnt) - 1));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   252  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   253  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   254  #define Ifx__NOP(n)   __asm(".DUP " #n "\n\tnop16\n\t.ENDM\n")
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   255  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   256  /** Insert a memory barrier
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   257   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   258  #define Ifx__mem_barrier __asm("":::"memory");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   259  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   260  #if CPU_NO_LDMST
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   261  IFX_INLINE void Ifx__ldmstC(volatile void *addr, uint32 mask, uint32 data)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   262  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   263      *(volatile uint32 *)addr = (*(volatile uint32 *)addr & ~mask) | (mask & data);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   264  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   265  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   266  #define Ifx__ldmst(a,b,c) Ifx__ldmstC(a,b,c)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   267  #else
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   268  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   269  IFX_INLINE void Ifx__ldmstAsm(volatile void *addr, uint32 mask, uint32 data)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   270  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   271      __asm("\tmov d3, %1 \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   272            "\tmov d2, %2 \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   273            "\tldmst [%0],e2"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   274            ::"a"(addr), "d"(mask), "d"(data):"d2", "d3");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   275  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   276  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   277  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   278  /** Convert float to fract
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   279   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   280  IFX_INLINE fract Ifx__float_to_fract(float a)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   281  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   282      fract res;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   283      __asm("ftoq31  %0,%1,%2":"=d"(res):"d"(a), "d"(0):"memory");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   284      return res;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   285  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   286  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   287  #define Ifx__fract_to_sfract __round16
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   288  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   289  /** Convert float to sfract
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   290   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   291  IFX_INLINE sfract Ifx__float_to_sfract(float a)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   292  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   293      fract tmp = Ifx__float_to_fract(a);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   294      return Ifx__fract_to_sfract(tmp);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   297  #define Ifx__ldmst(addr, mask, data) Ifx__ldmstAsm(addr, mask, data)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   298  #endif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   299  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   300  IFX_INLINE void Ifx__stopPerfCounters(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   301  { //__mtcr (CPU_CCTRL, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   302      __asm(
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   303              "    mov d0,#0\n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   304              "    mtcr #0xFC00,d0\n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   305              "    isync\n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   306              :::"d0");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   307  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   308  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   309  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   310  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   311  /* FIXME use inline instead of #define */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   312  /* FIXME is it really required to have #define __setareg(areg,val) ___setareg(areg,val) or can __setareg() implemented directly */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   313  #define Ifx___setareg(areg,val) \ 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   314      { __asm (" movh.a\t "#areg",#@his("#val")\n lea\t "#areg",["#areg"]@los("#val")"); }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   315  #define Ifx__setareg(areg,val) Ifx___setareg(areg,val)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   316  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   317  /** \brief This function is a implementation of a binary semaphore using compare and swap instruction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   318   * \param address address of resource.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   319   * \param value This variable is updated with status of address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   320   * \param condition if the value of address matches with the value of condition, then swap of value & address occurs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   321   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   322   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   323  #define  Ifx__cmpAndSwap(address,value,condition) \ 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   324       __cmpswapw((address), ((unsigned long)value), (condition) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   325  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   326  /** \brief Convert a fixpoint value to float32
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   327   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   328   * This function converts a value from a fixpoint format to a float32 format.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   329   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   330   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   331   * \param value value to be converted.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   332   * \param shift position of the fix point. Range = [-256, 255] => (Qx.y format where x = shift+1).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   333   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   334   * \return Returns the converted value in the float32 format.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   335   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   337  IFX_INLINE float32 Ifx__fixpoint_to_float32(fract value, sint32 shift)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   339      float32 result;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   340  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   341      __asm(
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   342          "   q31tof\t%0, %1, %2  \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   343          : "=d" (result)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   344          : "d" (value), "d" (shift));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   345      return result;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   346  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   347  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   348  IFX_INLINE void* Ifx__getA11(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   349  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   350      unsigned int *res;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   351      __asm("mov.aa %0, a11": "=a" (res) : :"a11");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   352      return res;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   353  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   354  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   355  IFX_INLINE void Ifx__setStackPointer(void *stackAddr)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   357      __asm("mov.aa a10, %0": : "a" (stackAddr) :"a10");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   360  IFX_INLINE uint32 IfxCpu_calculateCrc32(uint32 *startaddress, uint8 length) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   361  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   362      uint32 returnvalue;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   363      __asm("MOV d0, #0x0"); /* set seed value to 0 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   364      for (;length > 0; length--) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   365      { 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   366          /*calculate the CRC over all data */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   367          __asm("MOV d1,%0" : : "d" (*startaddress)); 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   368          __asm("CRC32 d0,d0,d1"); 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   369          startaddress++; 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   370      } 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   371      __asm("MOV %0,d0" : "=d" (returnvalue)); /* return result of CRC*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   372      return returnvalue;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   373  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   374  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   375  IFX_INLINE uint32 IfxCpu_getRandomVal(uint32 a, uint32 x, uint32 m)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   376  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   377  	uint32 result;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   378      __asm("      mul.u     e14,%1,%2      ; d15 = Eh; d14 = El    \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   379          "        mov       d12,d14        ;   e12 = El            \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   380          "        mov       d13,#0         ;                       \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   381          "        madd.u    e14,e12,d15,#5 ; e14 = El + 5 * d15    \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   382          " 1:     jge.u     d14,%3,2n      ;                       \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   383          "        jz        d15,3n         ;                       \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   384          " 2:     subx      d14,d14,%3     ;  e12=e12-m            \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   385          "        subc      d15,d15,d13    ; d13=d13-0             \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   386          "        loopu     1p             ;                       \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   387          " 3:     mov       %0,d14         ;                       \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   388          : "=d"(result) : "d"(a), "d"(x), "d"(m) : "e14","e12");
	mov	d1,#24769

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   151  LCG
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   152       * with a =  279470273 and
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   153       *       m = 4294967291
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   154       * a maximum period of 2^32-5 is given
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   155       * values for a:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   156       * 0x5EB0A82F = 1588635695
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   157       * 0x48E7211F = 1223106847
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   158       * 0x10a860c1 =  279470273
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   159       ***************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   160      uint32 x = *seed;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   161  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   162      /* a seed of 0 is not allowed, and therefore will be changed to a valid value */
	ld.w	d0,[a4]
.L275:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     2   * \file IfxCpu_IntrinsicsTasking.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     3   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     4   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     5   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     6   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     7   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     9   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    10   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    13   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    15   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    16  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    19  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    20   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    21   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    22   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    23   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    24   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    25   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    26  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    27   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    28   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    29   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    30   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    31   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    32   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    33  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    40   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    41  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    42   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    43   * \defgroup IfxLld_Cpu_Intrinsics_Tasking Intrinsics for TASKING compiler
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    44   * \ingroup IfxLld_Cpu_Intrinsics
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    45   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    46   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    47  #ifndef IFXCPU_INTRINSICSTASKING_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    48  #define IFXCPU_INTRINSICSTASKING_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    49  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    50  #include "Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    51  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    52  /* *INDENT-OFF* */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    53  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    54  #ifndef __cplusplus
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    55  /** Function call without return
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    56   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    57  #define Ifx__non_return_call(fun)	__asm("\tji %0"::"a"(fun))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    58  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    59  /** Jump and link
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    60   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    61  IFX_INLINE void Ifx__jump_and_link(void (*fun)(void))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    62  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    63  	__asm("jli %0"::"a"(fun));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    64  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    66  IFX_INLINE void Ifx__moveToDataParam0(unsigned int var)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    67  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    68  	__asm("mov d4, %0"::"d"(var));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    69  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    70  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    71  IFX_INLINE void Ifx__moveToAddrParam0(const void *var)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    72  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    73  	__asm("mov.aa a4, %0"::"a"(var));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    74  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    75  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    76  IFX_INLINE unsigned int Ifx__getDataParamRet(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    77  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    78  	unsigned int var;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    79  	__asm(" mov\t %0, d2":"=d"(var));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    80  	return var;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    81  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    82  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    83  IFX_INLINE void Ifx__moveToDataParamRet(unsigned int var)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    84  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    85  	__asm("mov d2, %0"::"d"(var));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    86  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    87  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    88  IFX_INLINE void Ifx__jumpToFunction(const void *fun)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    90  	Ifx__non_return_call(fun);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    91  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    92  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    93  IFX_INLINE void Ifx__jumpToFunctionWithLink(const void *fun)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    94  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    95  	Ifx__jump_and_link((void (*)(void))fun);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    96  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    98  IFX_INLINE void Ifx__jumpBackToLink(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    99  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   100  	__asm("ji a11");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   101  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   102  #endif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   103  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_any_type Cross type arithmetic operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   104   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   105   * Macro compatible with float, fix point, signed integer and unsigned integer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   106   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   107   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   108   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   109   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   110  #define Ifx__minX(X,Y)                     ( ((X) < (Y)) ? (X) : (Y) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   111  #define Ifx__maxX(X,Y)                     ( ((X) > (Y)) ? (X) : (Y) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   112  #define Ifx__saturateX(X,Min,Max)          ( Ifx__minX(Ifx__maxX(X, Min), Max) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   113  #define Ifx__checkrangeX(X,Min,Max)        (((X) >= (Min)) && ((X) <= (Max)))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   114  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   116  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_singed_integer Signed integer operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   117   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   118   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   120  #define Ifx__saturate(X,Min,Max)           ( __min(__max(X, Min), Max) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   121  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   122  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   123  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_unsinged_integer Unsigned integer operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   124   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   125   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   126   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   127  #define Ifx__saturateu(X,Min,Max)           ( __minu(__maxu(X, Min), Max) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   128  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   130  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_float Floating point operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   131   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   132   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   134  #define Ifx__checkrange(X,Min,Max)         (((X) >= (Min)) && ((X) <= (Max)))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   136  #define Ifx__sqrf(X)                       ((X) * (X))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   137  #define Ifx__sqrtf(X)                      sqrtf(X)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   138  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   139  #define Ifx__roundf(X)                     ((((X) - (int)(X)) > 0.5) ? (1 + (int)(X)) : ((int)(X)))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   140  #define Ifx__absf(X)                       ( ((X) < 0.0) ? -(X) : (X) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   141  #define Ifx__minf(X,Y)                     ( ((X) < (Y)) ? (X) : (Y) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   142  #define Ifx__maxf(X,Y)                     ( ((X) > (Y)) ? (X) : (Y) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   143  #define Ifx__saturatef(X,Min,Max)          ( Ifx__minf(_Ifx_maxf(X, Min), Max) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   144  #define Ifx__checkrangef(X,Min,Max)        (((X) >= (Min)) && ((X) <= (Max)))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   145  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   146  #define Ifx__abs_stdreal(X)                ( ((X) > 0.0) ? (X) : -(X) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   147  #define Ifx__min_stdreal(X,Y)              ( ((X) < (Y)) ? (X) : (Y) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   148  #define Ifx__max_stdreal(X,Y)              ( ((X) > (Y)) ? (X) : (Y) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   149  #define Ifx__saturate_stdreal(X,Min,Max)   ( Ifx__min_stdreal(Ifx__max_stdreal(X, Min), Max) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   150  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   151  #define Ifx__neqf(X,Y)                     ( ((X) > (Y)) ||  ((X) < (Y)) )     /**< X != Y */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   152  #define Ifx__leqf(X,Y)                     ( !((X) > (Y)) )     /**< X <= Y */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   153  #define Ifx__geqf(X,Y)                     ( !((X) < (Y)) )     /**< X >= Y */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   154  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   155  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_fractional Fractional Arithmetic Support
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   156   The next table provides an overview of intrinsic functions to convert fractional values. Note that the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   157   TASKING VX-toolset C compiler for TriCore fully supports the fractional type so normally you should not
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   158   need these intrinsic functions (except for __mulfractlong). For compatibility reasons the TASKING C
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   159   compiler does support these functions.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   160   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   161   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   162   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   163  #define Ifx__fract_to_float(value)  ((float)(value))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   164  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   165  #define Ifx__mulfractlong __mulfractlong
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   166  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   167  #define Ifx__mulfractfract(fractvalue1,fractvalue2)  ((fractvalue1)*(fractvalue2))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   168  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   169  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   170  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   171  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_insert Insert / Extract Bit-fields and Bits
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   172   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   173   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   174   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   175  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   176  #define Ifx__extru(a, p, w)            __extru(a,p,w)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   177  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   178  #define Ifx__extr(a, p, w)             __extr(a,p,w)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   180  #define Ifx__imaskldmst(a, v, b, p)    __imaskldmst((int*)a, v, b, p)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   181  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   182  #define Ifx__insert(a,b,p,w)           __insert(a,b,p,w)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   183  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   184  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   185  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   186  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_interrupt_handling Interrupt Handling
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   187   The next table provides an overview of the intrinsic functions to read or set interrupt handling.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   188   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   189   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   190   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   191  #define Ifx__disable_and_save __disable_and_save
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   192  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   193  #define Ifx__restore __restore
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   194  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   195  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   196  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   197  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_miscellaneous Miscellaneous Intrinsic Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   198   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   199   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   200   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   201  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   202  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   203  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   204  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_packed Packed Data Type Support
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   205   The next table provides an overview of the intrinsic functions for initialization of packed data type.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   206   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   207   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   208   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   209  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   210  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   211  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   212  #ifndef __cplusplus
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   213  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_register Register Handling
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   214   The next table provides an overview of the intrinsic functions that you can use to access control registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   215   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   216   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   218  #define Ifx__mtcr_no_isync(reg, val)   \ 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   219      __asm("mtcr %0,%1"::"i"(reg),"d"(val));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   220  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   221  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   222  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   223  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_saturation Saturation Arithmetic Support
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   224   These intrinsics support saturation arithmetic
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   225   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   226   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   227   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   228  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   229  #define Ifx__adds(a,b)                 ((__sat int)(a)+(__sat int)(b))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   230  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   231  #define Ifx__addsu(a,b)                ((__sat unsigned int)(a)+(__sat unsigned int)(b))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   232  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   233  #define Ifx__subs(a,b)                 ((__sat int)(a)-(__sat int)(b))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   234  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   235  #define Ifx__subsu(a,b)                ((__sat unsigned int )(a)-(__sat unsigned int )(b))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   236  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   237  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   238  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   239  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_single_assembly Insert Single Assembly Instruction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   240   The next table provides an overview of the intrinsic functions that you can use to insert a single assembly
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   241   instruction.You can also use inline assembly but these intrinsics provide a shorthand for frequently used
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   242   assembly instructions.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   243   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   244   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   245   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   246  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   247  IFX_INLINE void Ifx__nops(void* cnt)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   248  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   249      __asm("nop16 \n\t"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   250            "loop %0,*-2"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   251            ::"a"(((char*)cnt) - 1));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   252  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   253  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   254  #define Ifx__NOP(n)   __asm(".DUP " #n "\n\tnop16\n\t.ENDM\n")
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   255  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   256  /** Insert a memory barrier
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   257   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   258  #define Ifx__mem_barrier __asm("":::"memory");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   259  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   260  #if CPU_NO_LDMST
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   261  IFX_INLINE void Ifx__ldmstC(volatile void *addr, uint32 mask, uint32 data)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   262  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   263      *(volatile uint32 *)addr = (*(volatile uint32 *)addr & ~mask) | (mask & data);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   264  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   265  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   266  #define Ifx__ldmst(a,b,c) Ifx__ldmstC(a,b,c)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   267  #else
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   268  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   269  IFX_INLINE void Ifx__ldmstAsm(volatile void *addr, uint32 mask, uint32 data)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   270  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   271      __asm("\tmov d3, %1 \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   272            "\tmov d2, %2 \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   273            "\tldmst [%0],e2"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   274            ::"a"(addr), "d"(mask), "d"(data):"d2", "d3");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   275  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   276  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   277  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   278  /** Convert float to fract
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   279   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   280  IFX_INLINE fract Ifx__float_to_fract(float a)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   281  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   282      fract res;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   283      __asm("ftoq31  %0,%1,%2":"=d"(res):"d"(a), "d"(0):"memory");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   284      return res;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   285  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   286  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   287  #define Ifx__fract_to_sfract __round16
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   288  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   289  /** Convert float to sfract
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   290   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   291  IFX_INLINE sfract Ifx__float_to_sfract(float a)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   292  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   293      fract tmp = Ifx__float_to_fract(a);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   294      return Ifx__fract_to_sfract(tmp);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   297  #define Ifx__ldmst(addr, mask, data) Ifx__ldmstAsm(addr, mask, data)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   298  #endif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   299  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   300  IFX_INLINE void Ifx__stopPerfCounters(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   301  { //__mtcr (CPU_CCTRL, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   302      __asm(
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   303              "    mov d0,#0\n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   304              "    mtcr #0xFC00,d0\n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   305              "    isync\n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   306              :::"d0");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   307  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   308  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   309  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   310  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   311  /* FIXME use inline instead of #define */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   312  /* FIXME is it really required to have #define __setareg(areg,val) ___setareg(areg,val) or can __setareg() implemented directly */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   313  #define Ifx___setareg(areg,val) \ 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   314      { __asm (" movh.a\t "#areg",#@his("#val")\n lea\t "#areg",["#areg"]@los("#val")"); }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   315  #define Ifx__setareg(areg,val) Ifx___setareg(areg,val)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   316  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   317  /** \brief This function is a implementation of a binary semaphore using compare and swap instruction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   318   * \param address address of resource.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   319   * \param value This variable is updated with status of address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   320   * \param condition if the value of address matches with the value of condition, then swap of value & address occurs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   321   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   322   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   323  #define  Ifx__cmpAndSwap(address,value,condition) \ 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   324       __cmpswapw((address), ((unsigned long)value), (condition) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   325  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   326  /** \brief Convert a fixpoint value to float32
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   327   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   328   * This function converts a value from a fixpoint format to a float32 format.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   329   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   330   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   331   * \param value value to be converted.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   332   * \param shift position of the fix point. Range = [-256, 255] => (Qx.y format where x = shift+1).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   333   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   334   * \return Returns the converted value in the float32 format.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   335   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   337  IFX_INLINE float32 Ifx__fixpoint_to_float32(fract value, sint32 shift)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   339      float32 result;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   340  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   341      __asm(
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   342          "   q31tof\t%0, %1, %2  \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   343          : "=d" (result)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   344          : "d" (value), "d" (shift));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   345      return result;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   346  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   347  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   348  IFX_INLINE void* Ifx__getA11(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   349  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   350      unsigned int *res;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   351      __asm("mov.aa %0, a11": "=a" (res) : :"a11");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   352      return res;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   353  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   354  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   355  IFX_INLINE void Ifx__setStackPointer(void *stackAddr)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   357      __asm("mov.aa a10, %0": : "a" (stackAddr) :"a10");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   360  IFX_INLINE uint32 IfxCpu_calculateCrc32(uint32 *startaddress, uint8 length) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   361  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   362      uint32 returnvalue;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   363      __asm("MOV d0, #0x0"); /* set seed value to 0 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   364      for (;length > 0; length--) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   365      { 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   366          /*calculate the CRC over all data */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   367          __asm("MOV d1,%0" : : "d" (*startaddress)); 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   368          __asm("CRC32 d0,d0,d1"); 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   369          startaddress++; 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   370      } 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   371      __asm("MOV %0,d0" : "=d" (returnvalue)); /* return result of CRC*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   372      return returnvalue;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   373  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   374  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   375  IFX_INLINE uint32 IfxCpu_getRandomVal(uint32 a, uint32 x, uint32 m)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   376  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   377  	uint32 result;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   378      __asm("      mul.u     e14,%1,%2      ; d15 = Eh; d14 = El    \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   379          "        mov       d12,d14        ;   e12 = El            \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   380          "        mov       d13,#0         ;                       \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   381          "        madd.u    e14,e12,d15,#5 ; e14 = El + 5 * d15    \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   382          " 1:     jge.u     d14,%3,2n      ;                       \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   383          "        jz        d15,3n         ;                       \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   384          " 2:     subx      d14,d14,%3     ;  e12=e12-m            \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   385          "        subc      d15,d15,d13    ; d13=d13-0             \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   386          "        loopu     1p             ;                       \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   387          " 3:     mov       %0,d14         ;                       \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   388          : "=d"(result) : "d"(a), "d"(x), "d"(m) : "e14","e12");
	addih	d1,d1,#4264
.L226:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   163   0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   164      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   165          x = 42;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   166      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   167  
	sel	d0,d0,d0,#42
.L227:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     2   * \file IfxCpu_IntrinsicsTasking.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     3   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     4   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     5   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     6   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     7   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     9   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    10   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    13   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    15   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    16  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    19  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    20   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    21   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    22   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    23   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    24   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    25   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    26  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    27   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    28   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    29   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    30   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    31   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    32   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    33  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    40   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    41  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    42   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    43   * \defgroup IfxLld_Cpu_Intrinsics_Tasking Intrinsics for TASKING compiler
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    44   * \ingroup IfxLld_Cpu_Intrinsics
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    45   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    46   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    47  #ifndef IFXCPU_INTRINSICSTASKING_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    48  #define IFXCPU_INTRINSICSTASKING_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    49  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    50  #include "Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    51  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    52  /* *INDENT-OFF* */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    53  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    54  #ifndef __cplusplus
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    55  /** Function call without return
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    56   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    57  #define Ifx__non_return_call(fun)	__asm("\tji %0"::"a"(fun))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    58  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    59  /** Jump and link
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    60   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    61  IFX_INLINE void Ifx__jump_and_link(void (*fun)(void))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    62  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    63  	__asm("jli %0"::"a"(fun));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    64  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    66  IFX_INLINE void Ifx__moveToDataParam0(unsigned int var)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    67  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    68  	__asm("mov d4, %0"::"d"(var));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    69  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    70  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    71  IFX_INLINE void Ifx__moveToAddrParam0(const void *var)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    72  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    73  	__asm("mov.aa a4, %0"::"a"(var));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    74  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    75  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    76  IFX_INLINE unsigned int Ifx__getDataParamRet(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    77  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    78  	unsigned int var;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    79  	__asm(" mov\t %0, d2":"=d"(var));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    80  	return var;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    81  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    82  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    83  IFX_INLINE void Ifx__moveToDataParamRet(unsigned int var)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    84  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    85  	__asm("mov d2, %0"::"d"(var));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    86  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    87  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    88  IFX_INLINE void Ifx__jumpToFunction(const void *fun)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    90  	Ifx__non_return_call(fun);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    91  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    92  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    93  IFX_INLINE void Ifx__jumpToFunctionWithLink(const void *fun)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    94  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    95  	Ifx__jump_and_link((void (*)(void))fun);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    96  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    98  IFX_INLINE void Ifx__jumpBackToLink(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    99  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   100  	__asm("ji a11");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   101  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   102  #endif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   103  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_any_type Cross type arithmetic operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   104   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   105   * Macro compatible with float, fix point, signed integer and unsigned integer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   106   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   107   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   108   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   109   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   110  #define Ifx__minX(X,Y)                     ( ((X) < (Y)) ? (X) : (Y) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   111  #define Ifx__maxX(X,Y)                     ( ((X) > (Y)) ? (X) : (Y) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   112  #define Ifx__saturateX(X,Min,Max)          ( Ifx__minX(Ifx__maxX(X, Min), Max) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   113  #define Ifx__checkrangeX(X,Min,Max)        (((X) >= (Min)) && ((X) <= (Max)))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   114  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   116  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_singed_integer Signed integer operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   117   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   118   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   120  #define Ifx__saturate(X,Min,Max)           ( __min(__max(X, Min), Max) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   121  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   122  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   123  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_unsinged_integer Unsigned integer operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   124   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   125   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   126   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   127  #define Ifx__saturateu(X,Min,Max)           ( __minu(__maxu(X, Min), Max) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   128  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   130  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_float Floating point operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   131   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   132   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   134  #define Ifx__checkrange(X,Min,Max)         (((X) >= (Min)) && ((X) <= (Max)))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   136  #define Ifx__sqrf(X)                       ((X) * (X))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   137  #define Ifx__sqrtf(X)                      sqrtf(X)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   138  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   139  #define Ifx__roundf(X)                     ((((X) - (int)(X)) > 0.5) ? (1 + (int)(X)) : ((int)(X)))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   140  #define Ifx__absf(X)                       ( ((X) < 0.0) ? -(X) : (X) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   141  #define Ifx__minf(X,Y)                     ( ((X) < (Y)) ? (X) : (Y) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   142  #define Ifx__maxf(X,Y)                     ( ((X) > (Y)) ? (X) : (Y) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   143  #define Ifx__saturatef(X,Min,Max)          ( Ifx__minf(_Ifx_maxf(X, Min), Max) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   144  #define Ifx__checkrangef(X,Min,Max)        (((X) >= (Min)) && ((X) <= (Max)))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   145  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   146  #define Ifx__abs_stdreal(X)                ( ((X) > 0.0) ? (X) : -(X) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   147  #define Ifx__min_stdreal(X,Y)              ( ((X) < (Y)) ? (X) : (Y) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   148  #define Ifx__max_stdreal(X,Y)              ( ((X) > (Y)) ? (X) : (Y) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   149  #define Ifx__saturate_stdreal(X,Min,Max)   ( Ifx__min_stdreal(Ifx__max_stdreal(X, Min), Max) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   150  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   151  #define Ifx__neqf(X,Y)                     ( ((X) > (Y)) ||  ((X) < (Y)) )     /**< X != Y */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   152  #define Ifx__leqf(X,Y)                     ( !((X) > (Y)) )     /**< X <= Y */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   153  #define Ifx__geqf(X,Y)                     ( !((X) < (Y)) )     /**< X >= Y */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   154  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   155  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_fractional Fractional Arithmetic Support
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   156   The next table provides an overview of intrinsic functions to convert fractional values. Note that the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   157   TASKING VX-toolset C compiler for TriCore fully supports the fractional type so normally you should not
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   158   need these intrinsic functions (except for __mulfractlong). For compatibility reasons the TASKING C
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   159   compiler does support these functions.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   160   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   161   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   162   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   163  #define Ifx__fract_to_float(value)  ((float)(value))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   164  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   165  #define Ifx__mulfractlong __mulfractlong
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   166  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   167  #define Ifx__mulfractfract(fractvalue1,fractvalue2)  ((fractvalue1)*(fractvalue2))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   168  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   169  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   170  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   171  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_insert Insert / Extract Bit-fields and Bits
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   172   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   173   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   174   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   175  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   176  #define Ifx__extru(a, p, w)            __extru(a,p,w)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   177  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   178  #define Ifx__extr(a, p, w)             __extr(a,p,w)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   180  #define Ifx__imaskldmst(a, v, b, p)    __imaskldmst((int*)a, v, b, p)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   181  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   182  #define Ifx__insert(a,b,p,w)           __insert(a,b,p,w)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   183  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   184  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   185  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   186  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_interrupt_handling Interrupt Handling
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   187   The next table provides an overview of the intrinsic functions to read or set interrupt handling.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   188   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   189   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   190   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   191  #define Ifx__disable_and_save __disable_and_save
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   192  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   193  #define Ifx__restore __restore
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   194  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   195  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   196  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   197  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_miscellaneous Miscellaneous Intrinsic Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   198   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   199   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   200   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   201  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   202  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   203  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   204  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_packed Packed Data Type Support
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   205   The next table provides an overview of the intrinsic functions for initialization of packed data type.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   206   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   207   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   208   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   209  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   210  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   211  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   212  #ifndef __cplusplus
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   213  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_register Register Handling
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   214   The next table provides an overview of the intrinsic functions that you can use to access control registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   215   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   216   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   218  #define Ifx__mtcr_no_isync(reg, val)   \ 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   219      __asm("mtcr %0,%1"::"i"(reg),"d"(val));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   220  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   221  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   222  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   223  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_saturation Saturation Arithmetic Support
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   224   These intrinsics support saturation arithmetic
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   225   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   226   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   227   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   228  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   229  #define Ifx__adds(a,b)                 ((__sat int)(a)+(__sat int)(b))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   230  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   231  #define Ifx__addsu(a,b)                ((__sat unsigned int)(a)+(__sat unsigned int)(b))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   232  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   233  #define Ifx__subs(a,b)                 ((__sat int)(a)-(__sat int)(b))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   234  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   235  #define Ifx__subsu(a,b)                ((__sat unsigned int )(a)-(__sat unsigned int )(b))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   236  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   237  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   238  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   239  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_single_assembly Insert Single Assembly Instruction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   240   The next table provides an overview of the intrinsic functions that you can use to insert a single assembly
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   241   instruction.You can also use inline assembly but these intrinsics provide a shorthand for frequently used
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   242   assembly instructions.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   243   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   244   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   245   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   246  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   247  IFX_INLINE void Ifx__nops(void* cnt)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   248  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   249      __asm("nop16 \n\t"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   250            "loop %0,*-2"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   251            ::"a"(((char*)cnt) - 1));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   252  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   253  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   254  #define Ifx__NOP(n)   __asm(".DUP " #n "\n\tnop16\n\t.ENDM\n")
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   255  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   256  /** Insert a memory barrier
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   257   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   258  #define Ifx__mem_barrier __asm("":::"memory");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   259  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   260  #if CPU_NO_LDMST
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   261  IFX_INLINE void Ifx__ldmstC(volatile void *addr, uint32 mask, uint32 data)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   262  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   263      *(volatile uint32 *)addr = (*(volatile uint32 *)addr & ~mask) | (mask & data);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   264  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   265  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   266  #define Ifx__ldmst(a,b,c) Ifx__ldmstC(a,b,c)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   267  #else
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   268  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   269  IFX_INLINE void Ifx__ldmstAsm(volatile void *addr, uint32 mask, uint32 data)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   270  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   271      __asm("\tmov d3, %1 \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   272            "\tmov d2, %2 \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   273            "\tldmst [%0],e2"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   274            ::"a"(addr), "d"(mask), "d"(data):"d2", "d3");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   275  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   276  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   277  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   278  /** Convert float to fract
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   279   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   280  IFX_INLINE fract Ifx__float_to_fract(float a)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   281  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   282      fract res;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   283      __asm("ftoq31  %0,%1,%2":"=d"(res):"d"(a), "d"(0):"memory");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   284      return res;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   285  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   286  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   287  #define Ifx__fract_to_sfract __round16
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   288  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   289  /** Convert float to sfract
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   290   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   291  IFX_INLINE sfract Ifx__float_to_sfract(float a)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   292  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   293      fract tmp = Ifx__float_to_fract(a);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   294      return Ifx__fract_to_sfract(tmp);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   297  #define Ifx__ldmst(addr, mask, data) Ifx__ldmstAsm(addr, mask, data)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   298  #endif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   299  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   300  IFX_INLINE void Ifx__stopPerfCounters(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   301  { //__mtcr (CPU_CCTRL, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   302      __asm(
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   303              "    mov d0,#0\n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   304              "    mtcr #0xFC00,d0\n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   305              "    isync\n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   306              :::"d0");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   307  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   308  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   309  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   310  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   311  /* FIXME use inline instead of #define */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   312  /* FIXME is it really required to have #define __setareg(areg,val) ___setareg(areg,val) or can __setareg() implemented directly */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   313  #define Ifx___setareg(areg,val) \ 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   314      { __asm (" movh.a\t "#areg",#@his("#val")\n lea\t "#areg",["#areg"]@los("#val")"); }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   315  #define Ifx__setareg(areg,val) Ifx___setareg(areg,val)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   316  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   317  /** \brief This function is a implementation of a binary semaphore using compare and swap instruction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   318   * \param address address of resource.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   319   * \param value This variable is updated with status of address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   320   * \param condition if the value of address matches with the value of condition, then swap of value & address occurs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   321   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   322   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   323  #define  Ifx__cmpAndSwap(address,value,condition) \ 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   324       __cmpswapw((address), ((unsigned long)value), (condition) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   325  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   326  /** \brief Convert a fixpoint value to float32
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   327   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   328   * This function converts a value from a fixpoint format to a float32 format.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   329   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   330   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   331   * \param value value to be converted.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   332   * \param shift position of the fix point. Range = [-256, 255] => (Qx.y format where x = shift+1).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   333   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   334   * \return Returns the converted value in the float32 format.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   335   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   337  IFX_INLINE float32 Ifx__fixpoint_to_float32(fract value, sint32 shift)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   339      float32 result;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   340  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   341      __asm(
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   342          "   q31tof\t%0, %1, %2  \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   343          : "=d" (result)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   344          : "d" (value), "d" (shift));
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   345      return result;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   346  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   347  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   348  IFX_INLINE void* Ifx__getA11(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   349  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   350      unsigned int *res;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   351      __asm("mov.aa %0, a11": "=a" (res) : :"a11");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   352      return res;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   353  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   354  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   355  IFX_INLINE void Ifx__setStackPointer(void *stackAddr)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   357      __asm("mov.aa a10, %0": : "a" (stackAddr) :"a10");
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   360  IFX_INLINE uint32 IfxCpu_calculateCrc32(uint32 *startaddress, uint8 length) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   361  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   362      uint32 returnvalue;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   363      __asm("MOV d0, #0x0"); /* set seed value to 0 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   364      for (;length > 0; length--) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   365      { 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   366          /*calculate the CRC over all data */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   367          __asm("MOV d1,%0" : : "d" (*startaddress)); 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   368          __asm("CRC32 d0,d0,d1"); 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   369          startaddress++; 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   370      } 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   371      __asm("MOV %0,d0" : "=d" (returnvalue)); /* return result of CRC*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   372      return returnvalue;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   373  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   374  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   375  IFX_INLINE uint32 IfxCpu_getRandomVal(uint32 a, uint32 x, uint32 m)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   376  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   377  	uint32 result;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   378      __asm("      mul.u     e14,%1,%2      ; d15 = Eh; d14 = El    \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   379          "        mov       d12,d14        ;   e12 = El            \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   380          "        mov       d13,#0         ;                       \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   381          "        madd.u    e14,e12,d15,#5 ; e14 = El + 5 * d15    \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   382          " 1:     jge.u     d14,%3,2n      ;                       \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   383          "        jz        d15,3n         ;                       \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   384          " 2:     subx      d14,d14,%3     ;  e12=e12-m            \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   385          "        subc      d15,d15,d13    ; d13=d13-0             \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   386          "        loopu     1p             ;                       \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   387          " 3:     mov       %0,d14         ;                       \n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   388          : "=d"(result) : "d"(a), "d"(x), "d"(m) : "e14","e12");
	mov	d2,#-5
.L395:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   378      __asm("      mul.u     e14,%1,%2      ; d15 = Eh; d14 = El    \n"      (inlined)
	
	      mul.u     e14,d1,d0      ; d15 = Eh; d14 = El    
        mov       d12,d14        ;   e12 = El            
        mov       d13,#0         ;                       
        madd.u    e14,e12,d15,#5 ; e14 = El + 5 * d15    
 1:     jge.u     d14,d2,2n      ;                       
        jz        d15,3n         ;                       
 2:     subx      d14,d14,d2     ;  e12=e12-m            
        subc      d15,d15,d13    ; d13=d13-0             
        loopu     1p             ;                       
 3:     mov       d2,d14         ;                       

.L276:
	
.L396:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   168  int32 a = 0x10a860c1;  // 279470273
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   169      uint32 m = 0xfffffffb;  // 4294967291
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   170      uint32 result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   171  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   172      //__asm(a,m,x,tmp1,tmp2              );
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   173      //EhEl = a * x;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   174      //result = e14 %  m;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   175      // %0 result
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   176      // %1 a
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   177      // %2 x
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   178      // %3 m
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   179      result = IfxCpu_getRandomVal(a, x, m);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   180  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   181      *seed  = result; // to simplify seed passing
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   182  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   183      return result;
	st.w	[a4],d2
.L237:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   184  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   185  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   186  
	ret
.L221:
	
__IfxCpu_getRandomValue_function_end:
	.size	IfxCpu_getRandomValue,__IfxCpu_getRandomValue_function_end-IfxCpu_getRandomValue
.L131:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_getRandomValueWithinRange',code,cluster('IfxCpu_getRandomValueWithinRange')
	.sect	'.text.IfxCpu.IfxCpu_getRandomValueWithinRange'
	.align	2
	
	.global	IfxCpu_getRandomValueWithinRange

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   187  uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   188  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   189      uint32 new_value = IfxCpu_getRandomValue(seed);
; Function IfxCpu_getRandomValueWithinRange
.L61:
IfxCpu_getRandomValueWithinRange:	.type	func
	mov	d8,d4
.L278:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   190  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   191      /* swap min/max if required */
	mov	d15,d5
	call	IfxCpu_getRandomValue
.L277:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   192      if (min > max)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   193      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   194          unsigned swap = max;
	jge.u	d15,d8,.L20
.L244:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   195          max = min;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   196          min = swap;
	mov	d0,d15
.L280:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   197      }
	mov	d15,d8
.L401:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   198  
	mov	d8,d0
.L20:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   199      /* special case */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   200      if ((min == 0) && (max == 0xffffffff))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   201      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   202          return new_value;
	jne	d8,#0,.L21
.L402:
	jeq	d15,#-1,.L23
.L21:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   203      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   204  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   205      /* return value within range */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   206      return (new_value % (max - min + 1)) + min;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   207  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   208  
	sub	d15,d8
.L279:
	add	d15,#1
.L403:
	div.u	e0,d2,d15
.L404:
	add	d2,d1,d8

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   209  
.L23:
	ret
.L239:
	
__IfxCpu_getRandomValueWithinRange_function_end:
	.size	IfxCpu_getRandomValueWithinRange,__IfxCpu_getRandomValueWithinRange_function_end-IfxCpu_getRandomValueWithinRange
.L136:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_releaseMutex',code,cluster('IfxCpu_releaseMutex')
	.sect	'.text.IfxCpu.IfxCpu_releaseMutex'
	.align	2
	
	.global	IfxCpu_releaseMutex

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   210  void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   211  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   212      /*Reset the SpinLock*/
; Function IfxCpu_releaseMutex
.L63:
IfxCpu_releaseMutex:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   213      *lock = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   214  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   215  
	mov	d15,#0
	st.w	[a4],d15
.L376:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   216  
	ret
.L210:
	
__IfxCpu_releaseMutex_function_end:
	.size	IfxCpu_releaseMutex,__IfxCpu_releaseMutex_function_end-IfxCpu_releaseMutex
.L116:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_resetSpinLock',code,cluster('IfxCpu_resetSpinLock')
	.sect	'.text.IfxCpu.IfxCpu_resetSpinLock'
	.align	2
	
	.global	IfxCpu_resetSpinLock

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   217  void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   218  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   219      /*Reset the SpinLock*/
; Function IfxCpu_resetSpinLock
.L65:
IfxCpu_resetSpinLock:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   220      *lock = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   221  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   222  
	mov	d15,#0
	st.w	[a4],d15
.L381:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   223  
	ret
.L212:
	
__IfxCpu_resetSpinLock_function_end:
	.size	IfxCpu_resetSpinLock,__IfxCpu_resetSpinLock_function_end-IfxCpu_resetSpinLock
.L121:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_setCoreMode',code,cluster('IfxCpu_setCoreMode')
	.sect	'.text.IfxCpu.IfxCpu_setCoreMode'
	.align	2
	
	.global	IfxCpu_setCoreMode

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   224  boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   225  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   226      uint8              reqslp;
; Function IfxCpu_setCoreMode
.L67:
IfxCpu_setCoreMode:	.type	func
	mov.aa	a15,a4
.L282:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   227      boolean            retValue;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   228      IfxCpu_ResourceCpu index = IfxCpu_getIndex(cpu);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   229  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   230      /*Modes such as HALT, SLEEP and STBY are not handled at CPU level */
	mov	d15,d4
	call	IfxCpu_getIndex
.L281:
	mov	d8,d2
.L286:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   231      retValue = ((mode == IfxCpu_CoreMode_halt) || (mode == IfxCpu_CoreMode_sleep)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   232                  || (mode == IfxCpu_CoreMode_stby)) ? FALSE : TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   233  
	jeq	d15,#0,.L25
.L342:
	jeq	d15,#3,.L26
.L343:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   234      reqslp = (mode == IfxCpu_CoreMode_idle) ? IfxScu_PMCSR_REQSLP_Idle : IfxScu_PMCSR_REQSLP_Run;
	jne	d15,#4,.L27
.L26:
.L25:
	mov	d9,#0
	j	.L28
.L27:
	mov	d9,#1
.L28:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   235  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   236      if (retValue == TRUE)
	eq	d11,d15,#2
.L288:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   237      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   238          /*Check if the same core is requesting to change the core run mode */
	jeq	d9,#0,.L29
.L177:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   778  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   779  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   780  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   781  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   782  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   783      Ifx_CPU_CORE_ID reg;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   784      reg.U = __mfcr(CPU_CORE_ID);
	mfcr	d15,#65052
.L285:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   785      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
	and	d15,#7

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   239       /*Request is for the other core */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   240              /*To access PMCSR of other CPUs handle the safety EndInit protection */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   241              uint16 safetyWdtPw = IfxScuWdt_getSafetyWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   242              IfxScuWdt_clearSafetyEndinit(safetyWdtPw);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   243              MODULE_SCU.PMCSR[(uint32)IfxCpu_getIndex(cpu)].B.REQSLP = reqslp;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   244              IfxScuWdt_setSafetyEndinit(safetyWdtPw);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   245  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   246              cpu->DBGSR.B.HALT = 2; /*reset the HALT bit, if it is already done it is no harm in writing again */
	movh.a	a12,#61443
.L178:
	lea	a12,[a12]@los(0xf00360d4)
.L181:
	jeq	d15,d8,.L30
.L182:
	call	IfxScuWdt_getSafetyWatchdogPassword
.L284:
	mov	d8,d2
.L287:
	mov	d4,d8
	call	IfxScuWdt_clearSafetyEndinit
.L289:
	mov.aa	a4,a15
.L290:
	call	IfxCpu_getIndex
.L291:
	addsc.a	a2,a12,d2,#2
.L344:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   247          }
	mov	d4,d8
.L292:
	ld.bu	d0,[a2]
	insert	d0,d0,d11,#0,#2
	st.b	[a2],d0
.L345:
	call	IfxScuWdt_setSafetyEndinit
.L293:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   248          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   249          {                          /*Request is for self, this request normally only for halt, otherwise the core is already running anyway! */
	movh.a	a3,#1
	add.a	a3,a15
.L346:
	ld.w	d15,[a3]-768
.L347:
	insert	d15,d15,#2,#1,#2
	st.w	[a3]-768,d15
.L183:
	j	.L31
.L30:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   250              /*To access PMCSR of self handle the cpu EndInit protection */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   251              uint16 cpuWdtPw = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   252              IfxScuWdt_clearCpuEndinit(cpuWdtPw);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   253              MODULE_SCU.PMCSR[(uint32)index].B.REQSLP = reqslp;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   254              IfxScuWdt_setCpuEndinit(cpuWdtPw);
	call	IfxScuWdt_getCpuWatchdogPassword
.L294:
	mov	d10,d2
.L296:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   255          }
	mov	d4,d10
	call	IfxScuWdt_clearCpuEndinit
.L295:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   256      }
	addsc.a	a15,a12,d8,#2
.L283:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   257  
	mov	d4,d10
.L297:
	ld.bu	d15,[a15]
.L348:
	insert	d15,d15,d11,#0,#2
	st.b	[a15],d15
.L349:
	call	IfxScuWdt_setCpuEndinit
.L31:
.L29:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   258      return retValue;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   259  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   260  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   261  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   262  boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter)
	mov	d2,d9
	ret
.L171:
	
__IfxCpu_setCoreMode_function_end:
	.size	IfxCpu_setCoreMode,__IfxCpu_setCoreMode_function_end-IfxCpu_setCoreMode
.L96:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_setProgramCounter',code,cluster('IfxCpu_setProgramCounter')
	.sect	'.text.IfxCpu.IfxCpu_setProgramCounter'
	.align	2
	
	.global	IfxCpu_setProgramCounter

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   263  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   264      boolean retVal = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   265  
; Function IfxCpu_setProgramCounter
.L69:
IfxCpu_setProgramCounter:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   266      if (cpu == IfxCpu_getAddress(IfxCpu_getCoreIndex()))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   267      {
	mov	d2,#1
.L191:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   778  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   779  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   780  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   781  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   782  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   783      Ifx_CPU_CORE_ID reg;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   784      reg.U = __mfcr(CPU_CORE_ID);
	mfcr	d15,#65052
.L299:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   785      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
	and	d15,#7
.L192:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)      (inlined)
	jge.u	d15,#2,.L33
.L354:
	movh.a	a15,#@his(IfxCpu_cfg_indexMap)
	lea	a15,[a15]@los(IfxCpu_cfg_indexMap)
.L355:
	addsc.a	a15,a15,d15,#3
.L356:
	ld.a	a15,[a15]
.L300:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;      (inlined)
	j	.L34

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)      (inlined)
.L33:
	mov.a	a15,#0

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else      (inlined)
.L34:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   268  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   269      boolean retVal = TRUE;
	jne.a	a4,a15,.L35
.L195:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   270  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   271      if (cpu == IfxCpu_getAddress(IfxCpu_getCoreIndex()))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   272      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   273          retVal = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   274      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   275      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   276      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   277          cpu->PC.B.PC = programCounter >> 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   278      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   279  
	mov	d2,#0
	ret
.L35:
	movh.a	a3,#1
	add.a	a3,a4
.L357:
	sh	d4,#-1
	ld.w	d15,[+a3]-504
.L298:
	movh.a	a3,#1
	insert	d15,d15,d4,#1,#31
	add.a	a3,a4
	st.w	[+a3]-504,d15
.L358:
	ret
.L187:
	
__IfxCpu_setProgramCounter_function_end:
	.size	IfxCpu_setProgramCounter,__IfxCpu_setProgramCounter_function_end-IfxCpu_setProgramCounter
.L101:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_setSpinLock',code,cluster('IfxCpu_setSpinLock')
	.sect	'.text.IfxCpu.IfxCpu_setSpinLock'
	.align	2
	
	.global	IfxCpu_setSpinLock

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   280      return retVal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   281  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   282  
; Function IfxCpu_setSpinLock
.L71:
IfxCpu_setSpinLock:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   283  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   284  boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   285  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   286      boolean         retVal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   287      volatile uint32 spinLockVal;
	mov	d2,#0
	sub.a	a10,#8
.L301:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   288  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   289      retVal = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   290  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   291      do
	mov	d0,#1

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   292      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   293          spinLockVal = 1UL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   294          spinLockVal =
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   295              (uint32)__cmpAndSwap(((unsigned int *)lock), spinLockVal, 0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   296  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   297          /* Check if the SpinLock WAS set before the attempt to acquire spinlock */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   298          if (spinLockVal == 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   299          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   300              retVal = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   301          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   302          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   303          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   304              timeoutCount--;
.L38:
	st.w	[a10],d0
.L386:
	mov	d7,#0
	ld.w	d6,[a10]
	cmpswap.w	[a4]0,e6
.L387:
	st.w	[a10],d6
.L388:
	ld.w	d15,[a10]
.L389:
	jne	d15,#0,.L39
.L390:
	mov	d2,d0
	j	.L40
.L39:
	add	d4,#-1
.L40:
	jne	d2,#0,.L41
.L302:
	jne	d4,#0,.L38
.L41:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   305          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   306      } while ((retVal == FALSE) && (timeoutCount > 0));
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   307  
	ret
.L215:
	
__IfxCpu_setSpinLock_function_end:
	.size	IfxCpu_setSpinLock,__IfxCpu_setSpinLock_function_end-IfxCpu_setSpinLock
.L126:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_startCore',code,cluster('IfxCpu_startCore')
	.sect	'.text.IfxCpu.IfxCpu_startCore'
	.align	2
	
	.global	IfxCpu_startCore

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   308      return retVal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   309  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   310  
; Function IfxCpu_startCore
.L73:
IfxCpu_startCore:	.type	func
	mov.aa	a15,a4
.L304:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   311  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   312  boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   313  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   314      boolean retVal = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   315  
	call	IfxCpu_setProgramCounter
.L303:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   316      /* Set the PC for Core 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   317      retVal &= IfxCpu_setProgramCounter(cpu, programCounter);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   318      /* Get the mode for Core 1 and set it to RUNNING */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   319  
	mov	d15,d2
	mov.aa	a4,a15
.L306:
	call	IfxCpu_getCoreMode
.L305:
	jne	d2,#0,.L43
.L363:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   320      /* Core not running already */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   321      if (IfxCpu_getCoreMode(cpu) == IfxCpu_CoreMode_halt)
	mov	d4,#1
	mov.aa	a4,a15
.L307:
	call	IfxCpu_setCoreMode
.L308:
	and	d15,d2
.L43:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   322      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   323          retVal &= IfxCpu_setCoreMode(cpu, IfxCpu_CoreMode_run);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   324      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   325  
	mov	d2,d15
	ret
.L200:
	
__IfxCpu_startCore_function_end:
	.size	IfxCpu_startCore,__IfxCpu_startCore_function_end-IfxCpu_startCore
.L106:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_waitEvent',code,cluster('IfxCpu_waitEvent')
	.sect	'.text.IfxCpu.IfxCpu_waitEvent'
	.align	2
	
	.global	IfxCpu_waitEvent

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   326      return retVal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   327  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   328  
; Function IfxCpu_waitEvent
.L75:
IfxCpu_waitEvent:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   329  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   330  boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec)
	mov.d	d0,a4
.L309:
	insert	d15,d0,#0,#0,#28
	movh	d1,#53248
.L409:
	mov	d8,d4
.L311:
	jne	d15,d1,.L45
.L410:
	insert	d15,d0,#0,#20,#12
	insert	d15,d15,#7,#28,#3
	mfcr	d0,#65052
.L310:
	sha	d0,d0,#28
	sub	d15,d0
	j	.L46
.L45:
	mov.d	d15,a4
.L46:
	mov.a	a15,d15
.L312:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   331  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   332      volatile uint32 *sync          = (volatile uint32 *)IFXCPU_GLB_ADDR_DSPR(__mfcr(CPU_CORE_ID), event);
	mov	d9,#0

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     2   * \file IfxScuCcu.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     3   * \brief SCU  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     4   * \ingroup IfxLld_Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    45   * \defgroup IfxLld_Scu SCU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    46   * \addtogroup IfxLld_Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    47   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    48   * \defgroup IfxLld_ScuCcu How to use the Scu Clock driver?
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    49   * \addtogroup IfxLld_ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    50   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    51   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    52   * The Scu Clock control unit driver provides a default configuration for pll and Clock initialisation and set of peripheral clock configuration functions.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    53   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    54   * In the following sections it will be described, how to integrate the driver into the application framework.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    55   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    56   * \section IfxLld_ScuCcu_Std_Preparation Preparation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    57   * \subsection IfxLld_ScuCcu_Std_Include Include Files
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    58   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    59   * Include following header file into your C code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    60   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    61   * #include <Scu/Std/IfxScuCcu.h>
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    62   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    63   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    64   * \subsection IfxLld_ScuCcu_Std_Variables Variables
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    65   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    66   * Declare the Clock Configuration variables in your C code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    67   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    68   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    69   * // used globally
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    70   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    71   * // configuration for the PLL  steps
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    72   * static IfxScuCcu_PllStepsConfig IfxScuCcu_testPllConfigSteps[] = {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    73   *     IFXSCU_CFG_PLL_STEPS
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    74   * };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    75   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    76   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    77   * // Default configuration for the Clock Configuration
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    78   * IfxScuCcu_Config                      IfxScuCcu_testClockConfig = {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    79   *     {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    80   *        sizeof(IfxScuCcu_testPllConfigSteps) / sizeof(IfxScuCcu_PllStepsConfig),
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    81   *        (IfxScuCcu_PllStepsConfig *)IfxScuCcu_testPllConfigSteps,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    82   *        IFXSCU_CFG_PLL_INITIAL_STEP,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    83   *     },
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    84   *     IFXSCU_CFG_CLK_DISTRIBUTION,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    85   *     IFXSCU_CFG_FLASH_WAITSTATE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    86   *     IFX_CFG_SCU_XTAL_FREQUENCY
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    87   * };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    88   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    89   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    90   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    91   * \subsection IfxLld_ScuCcu_Std_Init Module Initialisation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    92   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    93   * The module initialisation can be done in the same function. Here an example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    94   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    95   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    96   *        // standard PLL & clock initialisation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    97   *         IfxScuCcu_init(&IfxScuCcu_testClockConfig);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    99   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   100   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   101   *    The PLL and clocks are now initialised based on the IFXSCU_CFG_XTAL_FREQ and  IFXSCU_CFG_PLL_FREQ values configured in Ifx_Cfg.h.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   102   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   103   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   104   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   105   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   106   * \defgroup IfxLld_Scu_Std_Ccu Ccu Basic Functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   107   * \ingroup IfxLld_Scu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   108   * \defgroup IfxLld_Scu_Std_Ccu_Ccu Clock Control Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   109   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   110   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Operative Clock Control Operative Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   111   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   112   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Configuration Clock Control Configuration Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   113   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   114   * \defgroup IfxLld_Scu_Std_Ccu_Enum Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   115   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   116   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   117  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   118  #ifndef IFXSCUCCU_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   119  #define IFXSCUCCU_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   120  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   121  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   122  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   123  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   124  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   125  #include "_Impl/IfxScu_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   126  #include "Scu/Std/IfxScuWdt.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   127  #include "Cpu/Std/IfxCpu.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   128  #include "IfxStm_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   129  #include "IfxScu_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   130  #include "IfxFlash_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   131  #include "_PinMap/IfxScu_PinMap.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   132  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   133  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   134  /*-----------------------------------Macros-----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   135  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   136  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   137  /** \brief Oscillator stability check timeout count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   138   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   139  #define IFXSCUCCU_OSC_STABLECHK_TIME (640)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   140  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   141  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   142  /*------------------------------Type Definitions------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   143  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   144  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   145  /** \brief Function pointer type for the hooks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   146   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   147   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   148  typedef void (*IfxScuCcu_PllStepsFunctionHook)(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   149  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   150  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   151  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   152  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   153  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   154  /** \addtogroup IfxLld_Scu_Std_Ccu_Enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   155   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   156  /** \brief MODULE_SCU.PLLCON1.B.K1DIV, specifies the K1-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   157   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   158  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   159  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   160      IfxScuCcu_K1divider_1 = 0,      /**< \brief K1-Divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   161      IfxScuCcu_K1divider_2,          /**< \brief K1-Divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   162      IfxScuCcu_K1divider_3,          /**< \brief K1-Divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   163      IfxScuCcu_K1divider_4,          /**< \brief K1-Divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   164      IfxScuCcu_K1divider_5,          /**< \brief K1-Divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   165      IfxScuCcu_K1divider_6,          /**< \brief K1-Divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   166      IfxScuCcu_K1divider_7,          /**< \brief K1-Divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   167      IfxScuCcu_K1divider_8,          /**< \brief K1-Divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   168      IfxScuCcu_K1divider_9,          /**< \brief K1-Divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   169      IfxScuCcu_K1divider_10,         /**< \brief K1-Divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   170      IfxScuCcu_K1divider_11,         /**< \brief K1-Divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   171      IfxScuCcu_K1divider_12,         /**< \brief K1-Divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   172      IfxScuCcu_K1divider_13,         /**< \brief K1-Divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   173      IfxScuCcu_K1divider_14,         /**< \brief K1-Divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   174      IfxScuCcu_K1divider_15,         /**< \brief K1-Divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   175      IfxScuCcu_K1divider_16,         /**< \brief K1-Divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   176      IfxScuCcu_K1divider_17,         /**< \brief K1-Divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   177      IfxScuCcu_K1divider_18,         /**< \brief K1-Divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   178      IfxScuCcu_K1divider_19,         /**< \brief K1-Divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   179      IfxScuCcu_K1divider_20,         /**< \brief K1-Divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   180      IfxScuCcu_K1divider_21,         /**< \brief K1-Divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   181      IfxScuCcu_K1divider_22,         /**< \brief K1-Divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   182      IfxScuCcu_K1divider_23,         /**< \brief K1-Divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   183      IfxScuCcu_K1divider_24,         /**< \brief K1-Divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   184      IfxScuCcu_K1divider_25,         /**< \brief K1-Divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   185      IfxScuCcu_K1divider_26,         /**< \brief K1-Divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   186      IfxScuCcu_K1divider_27,         /**< \brief K1-Divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   187      IfxScuCcu_K1divider_28,         /**< \brief K1-Divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   188      IfxScuCcu_K1divider_29,         /**< \brief K1-Divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   189      IfxScuCcu_K1divider_30,         /**< \brief K1-Divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   190      IfxScuCcu_K1divider_31,         /**< \brief K1-Divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   191      IfxScuCcu_K1divider_32,         /**< \brief K1-Divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   192      IfxScuCcu_K1divider_33,         /**< \brief K1-Divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   193      IfxScuCcu_K1divider_34,         /**< \brief K1-Divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   194      IfxScuCcu_K1divider_35,         /**< \brief K1-Divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   195      IfxScuCcu_K1divider_36,         /**< \brief K1-Divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   196      IfxScuCcu_K1divider_37,         /**< \brief K1-Divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   197      IfxScuCcu_K1divider_38,         /**< \brief K1-Divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   198      IfxScuCcu_K1divider_39,         /**< \brief K1-Divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   199      IfxScuCcu_K1divider_40,         /**< \brief K1-Divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   200      IfxScuCcu_K1divider_41,         /**< \brief K1-Divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   201      IfxScuCcu_K1divider_42,         /**< \brief K1-Divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   202      IfxScuCcu_K1divider_43,         /**< \brief K1-Divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   203      IfxScuCcu_K1divider_44,         /**< \brief K1-Divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   204      IfxScuCcu_K1divider_45,         /**< \brief K1-Divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   205      IfxScuCcu_K1divider_46,         /**< \brief K1-Divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   206      IfxScuCcu_K1divider_47,         /**< \brief K1-Divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   207      IfxScuCcu_K1divider_48,         /**< \brief K1-Divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   208      IfxScuCcu_K1divider_49,         /**< \brief K1-Divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   209      IfxScuCcu_K1divider_50,         /**< \brief K1-Divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   210      IfxScuCcu_K1divider_51,         /**< \brief K1-Divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   211      IfxScuCcu_K1divider_52,         /**< \brief K1-Divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   212      IfxScuCcu_K1divider_53,         /**< \brief K1-Divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   213      IfxScuCcu_K1divider_54,         /**< \brief K1-Divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   214      IfxScuCcu_K1divider_55,         /**< \brief K1-Divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   215      IfxScuCcu_K1divider_56,         /**< \brief K1-Divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   216      IfxScuCcu_K1divider_57,         /**< \brief K1-Divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   217      IfxScuCcu_K1divider_58,         /**< \brief K1-Divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   218      IfxScuCcu_K1divider_59,         /**< \brief K1-Divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   219      IfxScuCcu_K1divider_60,         /**< \brief K1-Divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   220      IfxScuCcu_K1divider_61,         /**< \brief K1-Divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   221      IfxScuCcu_K1divider_62,         /**< \brief K1-Divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   222      IfxScuCcu_K1divider_63,         /**< \brief K1-Divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   223      IfxScuCcu_K1divider_64,         /**< \brief K1-Divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   224      IfxScuCcu_K1divider_65,         /**< \brief K1-Divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   225      IfxScuCcu_K1divider_66,         /**< \brief K1-Divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   226      IfxScuCcu_K1divider_67,         /**< \brief K1-Divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   227      IfxScuCcu_K1divider_68,         /**< \brief K1-Divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   228      IfxScuCcu_K1divider_69,         /**< \brief K1-Divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   229      IfxScuCcu_K1divider_70,         /**< \brief K1-Divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   230      IfxScuCcu_K1divider_71,         /**< \brief K1-Divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   231      IfxScuCcu_K1divider_72,         /**< \brief K1-Divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   232      IfxScuCcu_K1divider_73,         /**< \brief K1-Divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   233      IfxScuCcu_K1divider_74,         /**< \brief K1-Divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   234      IfxScuCcu_K1divider_75,         /**< \brief K1-Divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   235      IfxScuCcu_K1divider_76,         /**< \brief K1-Divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   236      IfxScuCcu_K1divider_77,         /**< \brief K1-Divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   237      IfxScuCcu_K1divider_78,         /**< \brief K1-Divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   238      IfxScuCcu_K1divider_79,         /**< \brief K1-Divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   239      IfxScuCcu_K1divider_80,         /**< \brief K1-Divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   240      IfxScuCcu_K1divider_81,         /**< \brief K1-Divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   241      IfxScuCcu_K1divider_82,         /**< \brief K1-Divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   242      IfxScuCcu_K1divider_83,         /**< \brief K1-Divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   243      IfxScuCcu_K1divider_84,         /**< \brief K1-Divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   244      IfxScuCcu_K1divider_85,         /**< \brief K1-Divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   245      IfxScuCcu_K1divider_86,         /**< \brief K1-Divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   246      IfxScuCcu_K1divider_87,         /**< \brief K1-Divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   247      IfxScuCcu_K1divider_88,         /**< \brief K1-Divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   248      IfxScuCcu_K1divider_89,         /**< \brief K1-Divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   249      IfxScuCcu_K1divider_90,         /**< \brief K1-Divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   250      IfxScuCcu_K1divider_91,         /**< \brief K1-Divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   251      IfxScuCcu_K1divider_92,         /**< \brief K1-Divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   252      IfxScuCcu_K1divider_93,         /**< \brief K1-Divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   253      IfxScuCcu_K1divider_94,         /**< \brief K1-Divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   254      IfxScuCcu_K1divider_95,         /**< \brief K1-Divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   255      IfxScuCcu_K1divider_96,         /**< \brief K1-Divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   256      IfxScuCcu_K1divider_97,         /**< \brief K1-Divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   257      IfxScuCcu_K1divider_98,         /**< \brief K1-Divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   258      IfxScuCcu_K1divider_99,         /**< \brief K1-Divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   259      IfxScuCcu_K1divider_100,        /**< \brief K1-Divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   260      IfxScuCcu_K1divider_101,        /**< \brief K1-Divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   261      IfxScuCcu_K1divider_102,        /**< \brief K1-Divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   262      IfxScuCcu_K1divider_103,        /**< \brief K1-Divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   263      IfxScuCcu_K1divider_104,        /**< \brief K1-Divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   264      IfxScuCcu_K1divider_105,        /**< \brief K1-Divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   265      IfxScuCcu_K1divider_106,        /**< \brief K1-Divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   266      IfxScuCcu_K1divider_107,        /**< \brief K1-Divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   267      IfxScuCcu_K1divider_108,        /**< \brief K1-Divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   268      IfxScuCcu_K1divider_109,        /**< \brief K1-Divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   269      IfxScuCcu_K1divider_110,        /**< \brief K1-Divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   270      IfxScuCcu_K1divider_111,        /**< \brief K1-Divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   271      IfxScuCcu_K1divider_112,        /**< \brief K1-Divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   272      IfxScuCcu_K1divider_113,        /**< \brief K1-Divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   273      IfxScuCcu_K1divider_114,        /**< \brief K1-Divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   274      IfxScuCcu_K1divider_115,        /**< \brief K1-Divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   275      IfxScuCcu_K1divider_116,        /**< \brief K1-Divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   276      IfxScuCcu_K1divider_117,        /**< \brief K1-Divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   277      IfxScuCcu_K1divider_118,        /**< \brief K1-Divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   278      IfxScuCcu_K1divider_119,        /**< \brief K1-Divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   279      IfxScuCcu_K1divider_120,        /**< \brief K1-Divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   280      IfxScuCcu_K1divider_121,        /**< \brief K1-Divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   281      IfxScuCcu_K1divider_122,        /**< \brief K1-Divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   282      IfxScuCcu_K1divider_123,        /**< \brief K1-Divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   283      IfxScuCcu_K1divider_124,        /**< \brief K1-Divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   284      IfxScuCcu_K1divider_125,        /**< \brief K1-Divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   285      IfxScuCcu_K1divider_126,        /**< \brief K1-Divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   286      IfxScuCcu_K1divider_127,        /**< \brief K1-Divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   287      IfxScuCcu_K1divider_128         /**< \brief K1-Divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   288  } IfxScuCcu_K1divider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   289  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   290  /** \brief MODULE_SCU.PLLCON1.B.K2DIV, specifies the K2-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   292  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   294      IfxScuCcu_K2divider_1 = 0,      /**< \brief K2-Divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   295      IfxScuCcu_K2divider_2,          /**< \brief K2-Divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   296      IfxScuCcu_K2divider_3,          /**< \brief K2-Divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   297      IfxScuCcu_K2divider_4,          /**< \brief K2-Divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   298      IfxScuCcu_K2divider_5,          /**< \brief K2-Divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   299      IfxScuCcu_K2divider_6,          /**< \brief K2-Divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   300      IfxScuCcu_K2divider_7,          /**< \brief K2-Divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   301      IfxScuCcu_K2divider_8,          /**< \brief K2-Divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   302      IfxScuCcu_K2divider_9,          /**< \brief K2-Divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   303      IfxScuCcu_K2divider_10,         /**< \brief K2-Divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   304      IfxScuCcu_K2divider_11,         /**< \brief K2-Divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   305      IfxScuCcu_K2divider_12,         /**< \brief K2-Divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   306      IfxScuCcu_K2divider_13,         /**< \brief K2-Divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   307      IfxScuCcu_K2divider_14,         /**< \brief K2-Divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   308      IfxScuCcu_K2divider_15,         /**< \brief K2-Divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   309      IfxScuCcu_K2divider_16,         /**< \brief K2-Divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   310      IfxScuCcu_K2divider_17,         /**< \brief K2-Divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   311      IfxScuCcu_K2divider_18,         /**< \brief K2-Divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   312      IfxScuCcu_K2divider_19,         /**< \brief K2-Divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   313      IfxScuCcu_K2divider_20,         /**< \brief K2-Divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   314      IfxScuCcu_K2divider_21,         /**< \brief K2-Divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   315      IfxScuCcu_K2divider_22,         /**< \brief K2-Divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   316      IfxScuCcu_K2divider_23,         /**< \brief K2-Divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   317      IfxScuCcu_K2divider_24,         /**< \brief K2-Divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   318      IfxScuCcu_K2divider_25,         /**< \brief K2-Divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   319      IfxScuCcu_K2divider_26,         /**< \brief K2-Divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   320      IfxScuCcu_K2divider_27,         /**< \brief K2-Divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   321      IfxScuCcu_K2divider_28,         /**< \brief K2-Divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   322      IfxScuCcu_K2divider_29,         /**< \brief K2-Divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   323      IfxScuCcu_K2divider_30,         /**< \brief K2-Divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   324      IfxScuCcu_K2divider_31,         /**< \brief K2-Divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   325      IfxScuCcu_K2divider_32,         /**< \brief K2-Divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   326      IfxScuCcu_K2divider_33,         /**< \brief K2-Divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   327      IfxScuCcu_K2divider_34,         /**< \brief K2-Divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   328      IfxScuCcu_K2divider_35,         /**< \brief K2-Divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   329      IfxScuCcu_K2divider_36,         /**< \brief K2-Divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   330      IfxScuCcu_K2divider_37,         /**< \brief K2-Divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   331      IfxScuCcu_K2divider_38,         /**< \brief K2-Divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   332      IfxScuCcu_K2divider_39,         /**< \brief K2-Divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   333      IfxScuCcu_K2divider_40,         /**< \brief K2-Divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   334      IfxScuCcu_K2divider_41,         /**< \brief K2-Divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   335      IfxScuCcu_K2divider_42,         /**< \brief K2-Divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   336      IfxScuCcu_K2divider_43,         /**< \brief K2-Divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   337      IfxScuCcu_K2divider_44,         /**< \brief K2-Divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   338      IfxScuCcu_K2divider_45,         /**< \brief K2-Divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   339      IfxScuCcu_K2divider_46,         /**< \brief K2-Divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   340      IfxScuCcu_K2divider_47,         /**< \brief K2-Divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   341      IfxScuCcu_K2divider_48,         /**< \brief K2-Divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   342      IfxScuCcu_K2divider_49,         /**< \brief K2-Divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   343      IfxScuCcu_K2divider_50,         /**< \brief K2-Divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   344      IfxScuCcu_K2divider_51,         /**< \brief K2-Divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   345      IfxScuCcu_K2divider_52,         /**< \brief K2-Divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   346      IfxScuCcu_K2divider_53,         /**< \brief K2-Divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   347      IfxScuCcu_K2divider_54,         /**< \brief K2-Divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   348      IfxScuCcu_K2divider_55,         /**< \brief K2-Divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   349      IfxScuCcu_K2divider_56,         /**< \brief K2-Divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   350      IfxScuCcu_K2divider_57,         /**< \brief K2-Divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   351      IfxScuCcu_K2divider_58,         /**< \brief K2-Divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   352      IfxScuCcu_K2divider_59,         /**< \brief K2-Divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   353      IfxScuCcu_K2divider_60,         /**< \brief K2-Divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   354      IfxScuCcu_K2divider_61,         /**< \brief K2-Divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   355      IfxScuCcu_K2divider_62,         /**< \brief K2-Divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   356      IfxScuCcu_K2divider_63,         /**< \brief K2-Divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   357      IfxScuCcu_K2divider_64,         /**< \brief K2-Divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   358      IfxScuCcu_K2divider_65,         /**< \brief K2-Divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   359      IfxScuCcu_K2divider_66,         /**< \brief K2-Divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   360      IfxScuCcu_K2divider_67,         /**< \brief K2-Divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   361      IfxScuCcu_K2divider_68,         /**< \brief K2-Divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   362      IfxScuCcu_K2divider_69,         /**< \brief K2-Divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   363      IfxScuCcu_K2divider_70,         /**< \brief K2-Divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   364      IfxScuCcu_K2divider_71,         /**< \brief K2-Divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   365      IfxScuCcu_K2divider_72,         /**< \brief K2-Divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   366      IfxScuCcu_K2divider_73,         /**< \brief K2-Divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   367      IfxScuCcu_K2divider_74,         /**< \brief K2-Divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   368      IfxScuCcu_K2divider_75,         /**< \brief K2-Divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   369      IfxScuCcu_K2divider_76,         /**< \brief K2-Divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   370      IfxScuCcu_K2divider_77,         /**< \brief K2-Divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   371      IfxScuCcu_K2divider_78,         /**< \brief K2-Divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   372      IfxScuCcu_K2divider_79,         /**< \brief K2-Divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   373      IfxScuCcu_K2divider_80,         /**< \brief K2-Divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   374      IfxScuCcu_K2divider_81,         /**< \brief K2-Divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   375      IfxScuCcu_K2divider_82,         /**< \brief K2-Divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   376      IfxScuCcu_K2divider_83,         /**< \brief K2-Divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   377      IfxScuCcu_K2divider_84,         /**< \brief K2-Divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   378      IfxScuCcu_K2divider_85,         /**< \brief K2-Divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   379      IfxScuCcu_K2divider_86,         /**< \brief K2-Divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   380      IfxScuCcu_K2divider_87,         /**< \brief K2-Divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   381      IfxScuCcu_K2divider_88,         /**< \brief K2-Divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   382      IfxScuCcu_K2divider_89,         /**< \brief K2-Divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   383      IfxScuCcu_K2divider_90,         /**< \brief K2-Divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   384      IfxScuCcu_K2divider_91,         /**< \brief K2-Divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   385      IfxScuCcu_K2divider_92,         /**< \brief K2-Divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   386      IfxScuCcu_K2divider_93,         /**< \brief K2-Divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   387      IfxScuCcu_K2divider_94,         /**< \brief K2-Divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   388      IfxScuCcu_K2divider_95,         /**< \brief K2-Divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   389      IfxScuCcu_K2divider_96,         /**< \brief K2-Divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   390      IfxScuCcu_K2divider_97,         /**< \brief K2-Divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   391      IfxScuCcu_K2divider_98,         /**< \brief K2-Divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   392      IfxScuCcu_K2divider_99,         /**< \brief K2-Divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   393      IfxScuCcu_K2divider_100,        /**< \brief K2-Divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   394      IfxScuCcu_K2divider_101,        /**< \brief K2-Divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   395      IfxScuCcu_K2divider_102,        /**< \brief K2-Divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   396      IfxScuCcu_K2divider_103,        /**< \brief K2-Divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   397      IfxScuCcu_K2divider_104,        /**< \brief K2-Divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   398      IfxScuCcu_K2divider_105,        /**< \brief K2-Divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   399      IfxScuCcu_K2divider_106,        /**< \brief K2-Divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   400      IfxScuCcu_K2divider_107,        /**< \brief K2-Divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   401      IfxScuCcu_K2divider_108,        /**< \brief K2-Divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   402      IfxScuCcu_K2divider_109,        /**< \brief K2-Divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   403      IfxScuCcu_K2divider_110,        /**< \brief K2-Divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   404      IfxScuCcu_K2divider_111,        /**< \brief K2-Divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   405      IfxScuCcu_K2divider_112,        /**< \brief K2-Divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   406      IfxScuCcu_K2divider_113,        /**< \brief K2-Divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   407      IfxScuCcu_K2divider_114,        /**< \brief K2-Divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   408      IfxScuCcu_K2divider_115,        /**< \brief K2-Divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   409      IfxScuCcu_K2divider_116,        /**< \brief K2-Divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   410      IfxScuCcu_K2divider_117,        /**< \brief K2-Divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   411      IfxScuCcu_K2divider_118,        /**< \brief K2-Divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   412      IfxScuCcu_K2divider_119,        /**< \brief K2-Divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   413      IfxScuCcu_K2divider_120,        /**< \brief K2-Divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   414      IfxScuCcu_K2divider_121,        /**< \brief K2-Divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   415      IfxScuCcu_K2divider_122,        /**< \brief K2-Divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   416      IfxScuCcu_K2divider_123,        /**< \brief K2-Divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   417      IfxScuCcu_K2divider_124,        /**< \brief K2-Divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   418      IfxScuCcu_K2divider_125,        /**< \brief K2-Divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   419      IfxScuCcu_K2divider_126,        /**< \brief K2-Divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   420      IfxScuCcu_K2divider_127,        /**< \brief K2-Divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   421      IfxScuCcu_K2divider_128         /**< \brief K2-Divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   422  } IfxScuCcu_K2divider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   424  /** \brief MODULE_SCU.PLLCON1.B.K3DIV, specifies the K3-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   425   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   426  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   427  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   428      IfxScuCcu_K3divider_1 = 0,      /**< \brief K3-Divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   429      IfxScuCcu_K3divider_2,          /**< \brief K3-Divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   430      IfxScuCcu_K3divider_3,          /**< \brief K3-Divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   431      IfxScuCcu_K3divider_4,          /**< \brief K3-Divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   432      IfxScuCcu_K3divider_5,          /**< \brief K3-Divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   433      IfxScuCcu_K3divider_6,          /**< \brief K3-Divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   434      IfxScuCcu_K3divider_7,          /**< \brief K3-Divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   435      IfxScuCcu_K3divider_8,          /**< \brief K3-Divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   436      IfxScuCcu_K3divider_9,          /**< \brief K3-Divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   437      IfxScuCcu_K3divider_10,         /**< \brief K3-Divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   438      IfxScuCcu_K3divider_11,         /**< \brief K3-Divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   439      IfxScuCcu_K3divider_12,         /**< \brief K3-Divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   440      IfxScuCcu_K3divider_13,         /**< \brief K3-Divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   441      IfxScuCcu_K3divider_14,         /**< \brief K3-Divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   442      IfxScuCcu_K3divider_15,         /**< \brief K3-Divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   443      IfxScuCcu_K3divider_16,         /**< \brief K3-Divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   444      IfxScuCcu_K3divider_17,         /**< \brief K3-Divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   445      IfxScuCcu_K3divider_18,         /**< \brief K3-Divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   446      IfxScuCcu_K3divider_19,         /**< \brief K3-Divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   447      IfxScuCcu_K3divider_20,         /**< \brief K3-Divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   448      IfxScuCcu_K3divider_21,         /**< \brief K3-Divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   449      IfxScuCcu_K3divider_22,         /**< \brief K3-Divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   450      IfxScuCcu_K3divider_23,         /**< \brief K3-Divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   451      IfxScuCcu_K3divider_24,         /**< \brief K3-Divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   452      IfxScuCcu_K3divider_25,         /**< \brief K3-Divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   453      IfxScuCcu_K3divider_26,         /**< \brief K3-Divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   454      IfxScuCcu_K3divider_27,         /**< \brief K3-Divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   455      IfxScuCcu_K3divider_28,         /**< \brief K3-Divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   456      IfxScuCcu_K3divider_29,         /**< \brief K3-Divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   457      IfxScuCcu_K3divider_30,         /**< \brief K3-Divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   458      IfxScuCcu_K3divider_31,         /**< \brief K3-Divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   459      IfxScuCcu_K3divider_32,         /**< \brief K3-Divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   460      IfxScuCcu_K3divider_33,         /**< \brief K3-Divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   461      IfxScuCcu_K3divider_34,         /**< \brief K3-Divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   462      IfxScuCcu_K3divider_35,         /**< \brief K3-Divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   463      IfxScuCcu_K3divider_36,         /**< \brief K3-Divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   464      IfxScuCcu_K3divider_37,         /**< \brief K3-Divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   465      IfxScuCcu_K3divider_38,         /**< \brief K3-Divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   466      IfxScuCcu_K3divider_39,         /**< \brief K3-Divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   467      IfxScuCcu_K3divider_40,         /**< \brief K3-Divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   468      IfxScuCcu_K3divider_41,         /**< \brief K3-Divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   469      IfxScuCcu_K3divider_42,         /**< \brief K3-Divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   470      IfxScuCcu_K3divider_43,         /**< \brief K3-Divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   471      IfxScuCcu_K3divider_44,         /**< \brief K3-Divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   472      IfxScuCcu_K3divider_45,         /**< \brief K3-Divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   473      IfxScuCcu_K3divider_46,         /**< \brief K3-Divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   474      IfxScuCcu_K3divider_47,         /**< \brief K3-Divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   475      IfxScuCcu_K3divider_48,         /**< \brief K3-Divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   476      IfxScuCcu_K3divider_49,         /**< \brief K3-Divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   477      IfxScuCcu_K3divider_50,         /**< \brief K3-Divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   478      IfxScuCcu_K3divider_51,         /**< \brief K3-Divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   479      IfxScuCcu_K3divider_52,         /**< \brief K3-Divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   480      IfxScuCcu_K3divider_53,         /**< \brief K3-Divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   481      IfxScuCcu_K3divider_54,         /**< \brief K3-Divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   482      IfxScuCcu_K3divider_55,         /**< \brief K3-Divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   483      IfxScuCcu_K3divider_56,         /**< \brief K3-Divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   484      IfxScuCcu_K3divider_57,         /**< \brief K3-Divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   485      IfxScuCcu_K3divider_58,         /**< \brief K3-Divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   486      IfxScuCcu_K3divider_59,         /**< \brief K3-Divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   487      IfxScuCcu_K3divider_60,         /**< \brief K3-Divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   488      IfxScuCcu_K3divider_61,         /**< \brief K3-Divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   489      IfxScuCcu_K3divider_62,         /**< \brief K3-Divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   490      IfxScuCcu_K3divider_63,         /**< \brief K3-Divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   491      IfxScuCcu_K3divider_64,         /**< \brief K3-Divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   492      IfxScuCcu_K3divider_65,         /**< \brief K3-Divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   493      IfxScuCcu_K3divider_66,         /**< \brief K3-Divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   494      IfxScuCcu_K3divider_67,         /**< \brief K3-Divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   495      IfxScuCcu_K3divider_68,         /**< \brief K3-Divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   496      IfxScuCcu_K3divider_69,         /**< \brief K3-Divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   497      IfxScuCcu_K3divider_70,         /**< \brief K3-Divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   498      IfxScuCcu_K3divider_71,         /**< \brief K3-Divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   499      IfxScuCcu_K3divider_72,         /**< \brief K3-Divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   500      IfxScuCcu_K3divider_73,         /**< \brief K3-Divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   501      IfxScuCcu_K3divider_74,         /**< \brief K3-Divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   502      IfxScuCcu_K3divider_75,         /**< \brief K3-Divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   503      IfxScuCcu_K3divider_76,         /**< \brief K3-Divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   504      IfxScuCcu_K3divider_77,         /**< \brief K3-Divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   505      IfxScuCcu_K3divider_78,         /**< \brief K3-Divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   506      IfxScuCcu_K3divider_79,         /**< \brief K3-Divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   507      IfxScuCcu_K3divider_80,         /**< \brief K3-Divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   508      IfxScuCcu_K3divider_81,         /**< \brief K3-Divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   509      IfxScuCcu_K3divider_82,         /**< \brief K3-Divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   510      IfxScuCcu_K3divider_83,         /**< \brief K3-Divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   511      IfxScuCcu_K3divider_84,         /**< \brief K3-Divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   512      IfxScuCcu_K3divider_85,         /**< \brief K3-Divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   513      IfxScuCcu_K3divider_86,         /**< \brief K3-Divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   514      IfxScuCcu_K3divider_87,         /**< \brief K3-Divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   515      IfxScuCcu_K3divider_88,         /**< \brief K3-Divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   516      IfxScuCcu_K3divider_89,         /**< \brief K3-Divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   517      IfxScuCcu_K3divider_90,         /**< \brief K3-Divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   518      IfxScuCcu_K3divider_91,         /**< \brief K3-Divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   519      IfxScuCcu_K3divider_92,         /**< \brief K3-Divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   520      IfxScuCcu_K3divider_93,         /**< \brief K3-Divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   521      IfxScuCcu_K3divider_94,         /**< \brief K3-Divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   522      IfxScuCcu_K3divider_95,         /**< \brief K3-Divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   523      IfxScuCcu_K3divider_96,         /**< \brief K3-Divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   524      IfxScuCcu_K3divider_97,         /**< \brief K3-Divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   525      IfxScuCcu_K3divider_98,         /**< \brief K3-Divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   526      IfxScuCcu_K3divider_99,         /**< \brief K3-Divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   527      IfxScuCcu_K3divider_100,        /**< \brief K3-Divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   528      IfxScuCcu_K3divider_101,        /**< \brief K3-Divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   529      IfxScuCcu_K3divider_102,        /**< \brief K3-Divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   530      IfxScuCcu_K3divider_103,        /**< \brief K3-Divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   531      IfxScuCcu_K3divider_104,        /**< \brief K3-Divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   532      IfxScuCcu_K3divider_105,        /**< \brief K3-Divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   533      IfxScuCcu_K3divider_106,        /**< \brief K3-Divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   534      IfxScuCcu_K3divider_107,        /**< \brief K3-Divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   535      IfxScuCcu_K3divider_108,        /**< \brief K3-Divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   536      IfxScuCcu_K3divider_109,        /**< \brief K3-Divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   537      IfxScuCcu_K3divider_110,        /**< \brief K3-Divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   538      IfxScuCcu_K3divider_111,        /**< \brief K3-Divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   539      IfxScuCcu_K3divider_112,        /**< \brief K3-Divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   540      IfxScuCcu_K3divider_113,        /**< \brief K3-Divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   541      IfxScuCcu_K3divider_114,        /**< \brief K3-Divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   542      IfxScuCcu_K3divider_115,        /**< \brief K3-Divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   543      IfxScuCcu_K3divider_116,        /**< \brief K3-Divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   544      IfxScuCcu_K3divider_117,        /**< \brief K3-Divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   545      IfxScuCcu_K3divider_118,        /**< \brief K3-Divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   546      IfxScuCcu_K3divider_119,        /**< \brief K3-Divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   547      IfxScuCcu_K3divider_120,        /**< \brief K3-Divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   548      IfxScuCcu_K3divider_121,        /**< \brief K3-Divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   549      IfxScuCcu_K3divider_122,        /**< \brief K3-Divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   550      IfxScuCcu_K3divider_123,        /**< \brief K3-Divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   551      IfxScuCcu_K3divider_124,        /**< \brief K3-Divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   552      IfxScuCcu_K3divider_125,        /**< \brief K3-Divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   553      IfxScuCcu_K3divider_126,        /**< \brief K3-Divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   554      IfxScuCcu_K3divider_127,        /**< \brief K3-Divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   555      IfxScuCcu_K3divider_128         /**< \brief K3-Divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   556  } IfxScuCcu_K3divider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   557  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   558  /** \brief MODULE_SCU.PLLCON0.B.NDIV, specifies the N-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   559   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   560  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   561  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   562      IfxScuCcu_Ndivider_1 = 0,      /**< \brief  N-divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   563      IfxScuCcu_Ndivider_2,          /**< \brief  N-divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   564      IfxScuCcu_Ndivider_3,          /**< \brief  N-divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   565      IfxScuCcu_Ndivider_4,          /**< \brief  N-divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   566      IfxScuCcu_Ndivider_5,          /**< \brief  N-divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   567      IfxScuCcu_Ndivider_6,          /**< \brief  N-divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   568      IfxScuCcu_Ndivider_7,          /**< \brief  N-divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   569      IfxScuCcu_Ndivider_8,          /**< \brief  N-divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   570      IfxScuCcu_Ndivider_9,          /**< \brief  N-divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   571      IfxScuCcu_Ndivider_10,         /**< \brief  N-divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   572      IfxScuCcu_Ndivider_11,         /**< \brief  N-divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   573      IfxScuCcu_Ndivider_12,         /**< \brief  N-divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   574      IfxScuCcu_Ndivider_13,         /**< \brief  N-divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   575      IfxScuCcu_Ndivider_14,         /**< \brief  N-divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   576      IfxScuCcu_Ndivider_15,         /**< \brief  N-divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   577      IfxScuCcu_Ndivider_16,         /**< \brief  N-divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   578      IfxScuCcu_Ndivider_17,         /**< \brief  N-divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   579      IfxScuCcu_Ndivider_18,         /**< \brief  N-divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   580      IfxScuCcu_Ndivider_19,         /**< \brief  N-divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   581      IfxScuCcu_Ndivider_20,         /**< \brief  N-divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   582      IfxScuCcu_Ndivider_21,         /**< \brief  N-divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   583      IfxScuCcu_Ndivider_22,         /**< \brief  N-divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   584      IfxScuCcu_Ndivider_23,         /**< \brief  N-divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   585      IfxScuCcu_Ndivider_24,         /**< \brief  N-divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   586      IfxScuCcu_Ndivider_25,         /**< \brief  N-divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   587      IfxScuCcu_Ndivider_26,         /**< \brief  N-divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   588      IfxScuCcu_Ndivider_27,         /**< \brief  N-divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   589      IfxScuCcu_Ndivider_28,         /**< \brief  N-divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   590      IfxScuCcu_Ndivider_29,         /**< \brief  N-divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   591      IfxScuCcu_Ndivider_30,         /**< \brief  N-divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   592      IfxScuCcu_Ndivider_31,         /**< \brief  N-divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   593      IfxScuCcu_Ndivider_32,         /**< \brief  N-divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   594      IfxScuCcu_Ndivider_33,         /**< \brief  N-divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   595      IfxScuCcu_Ndivider_34,         /**< \brief  N-divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   596      IfxScuCcu_Ndivider_35,         /**< \brief  N-divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   597      IfxScuCcu_Ndivider_36,         /**< \brief  N-divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   598      IfxScuCcu_Ndivider_37,         /**< \brief  N-divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   599      IfxScuCcu_Ndivider_38,         /**< \brief  N-divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   600      IfxScuCcu_Ndivider_39,         /**< \brief  N-divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   601      IfxScuCcu_Ndivider_40,         /**< \brief  N-divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   602      IfxScuCcu_Ndivider_41,         /**< \brief  N-divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   603      IfxScuCcu_Ndivider_42,         /**< \brief  N-divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   604      IfxScuCcu_Ndivider_43,         /**< \brief  N-divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   605      IfxScuCcu_Ndivider_44,         /**< \brief  N-divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   606      IfxScuCcu_Ndivider_45,         /**< \brief  N-divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   607      IfxScuCcu_Ndivider_46,         /**< \brief  N-divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   608      IfxScuCcu_Ndivider_47,         /**< \brief  N-divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   609      IfxScuCcu_Ndivider_48,         /**< \brief  N-divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   610      IfxScuCcu_Ndivider_49,         /**< \brief  N-divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   611      IfxScuCcu_Ndivider_50,         /**< \brief  N-divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   612      IfxScuCcu_Ndivider_51,         /**< \brief  N-divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   613      IfxScuCcu_Ndivider_52,         /**< \brief  N-divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   614      IfxScuCcu_Ndivider_53,         /**< \brief  N-divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   615      IfxScuCcu_Ndivider_54,         /**< \brief  N-divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   616      IfxScuCcu_Ndivider_55,         /**< \brief  N-divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   617      IfxScuCcu_Ndivider_56,         /**< \brief  N-divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   618      IfxScuCcu_Ndivider_57,         /**< \brief  N-divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   619      IfxScuCcu_Ndivider_58,         /**< \brief  N-divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   620      IfxScuCcu_Ndivider_59,         /**< \brief  N-divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   621      IfxScuCcu_Ndivider_60,         /**< \brief  N-divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   622      IfxScuCcu_Ndivider_61,         /**< \brief  N-divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   623      IfxScuCcu_Ndivider_62,         /**< \brief  N-divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   624      IfxScuCcu_Ndivider_63,         /**< \brief  N-divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   625      IfxScuCcu_Ndivider_64,         /**< \brief  N-divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   626      IfxScuCcu_Ndivider_65,         /**< \brief  N-divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   627      IfxScuCcu_Ndivider_66,         /**< \brief  N-divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   628      IfxScuCcu_Ndivider_67,         /**< \brief  N-divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   629      IfxScuCcu_Ndivider_68,         /**< \brief  N-divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   630      IfxScuCcu_Ndivider_69,         /**< \brief  N-divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   631      IfxScuCcu_Ndivider_70,         /**< \brief  N-divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   632      IfxScuCcu_Ndivider_71,         /**< \brief  N-divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   633      IfxScuCcu_Ndivider_72,         /**< \brief  N-divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   634      IfxScuCcu_Ndivider_73,         /**< \brief  N-divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   635      IfxScuCcu_Ndivider_74,         /**< \brief  N-divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   636      IfxScuCcu_Ndivider_75,         /**< \brief  N-divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   637      IfxScuCcu_Ndivider_76,         /**< \brief  N-divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   638      IfxScuCcu_Ndivider_77,         /**< \brief  N-divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   639      IfxScuCcu_Ndivider_78,         /**< \brief  N-divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   640      IfxScuCcu_Ndivider_79,         /**< \brief  N-divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   641      IfxScuCcu_Ndivider_80,         /**< \brief  N-divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   642      IfxScuCcu_Ndivider_81,         /**< \brief  N-divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   643      IfxScuCcu_Ndivider_82,         /**< \brief  N-divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   644      IfxScuCcu_Ndivider_83,         /**< \brief  N-divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   645      IfxScuCcu_Ndivider_84,         /**< \brief  N-divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   646      IfxScuCcu_Ndivider_85,         /**< \brief  N-divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   647      IfxScuCcu_Ndivider_86,         /**< \brief  N-divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   648      IfxScuCcu_Ndivider_87,         /**< \brief  N-divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   649      IfxScuCcu_Ndivider_88,         /**< \brief  N-divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   650      IfxScuCcu_Ndivider_89,         /**< \brief  N-divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   651      IfxScuCcu_Ndivider_90,         /**< \brief  N-divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   652      IfxScuCcu_Ndivider_91,         /**< \brief  N-divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   653      IfxScuCcu_Ndivider_92,         /**< \brief  N-divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   654      IfxScuCcu_Ndivider_93,         /**< \brief  N-divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   655      IfxScuCcu_Ndivider_94,         /**< \brief  N-divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   656      IfxScuCcu_Ndivider_95,         /**< \brief  N-divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   657      IfxScuCcu_Ndivider_96,         /**< \brief  N-divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   658      IfxScuCcu_Ndivider_97,         /**< \brief  N-divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   659      IfxScuCcu_Ndivider_98,         /**< \brief  N-divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   660      IfxScuCcu_Ndivider_99,         /**< \brief  N-divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   661      IfxScuCcu_Ndivider_100,        /**< \brief  N-divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   662      IfxScuCcu_Ndivider_101,        /**< \brief  N-divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   663      IfxScuCcu_Ndivider_102,        /**< \brief  N-divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   664      IfxScuCcu_Ndivider_103,        /**< \brief  N-divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   665      IfxScuCcu_Ndivider_104,        /**< \brief  N-divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   666      IfxScuCcu_Ndivider_105,        /**< \brief  N-divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   667      IfxScuCcu_Ndivider_106,        /**< \brief  N-divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   668      IfxScuCcu_Ndivider_107,        /**< \brief  N-divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   669      IfxScuCcu_Ndivider_108,        /**< \brief  N-divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   670      IfxScuCcu_Ndivider_109,        /**< \brief  N-divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   671      IfxScuCcu_Ndivider_110,        /**< \brief  N-divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   672      IfxScuCcu_Ndivider_111,        /**< \brief  N-divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   673      IfxScuCcu_Ndivider_112,        /**< \brief  N-divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   674      IfxScuCcu_Ndivider_113,        /**< \brief  N-divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   675      IfxScuCcu_Ndivider_114,        /**< \brief  N-divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   676      IfxScuCcu_Ndivider_115,        /**< \brief  N-divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   677      IfxScuCcu_Ndivider_116,        /**< \brief  N-divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   678      IfxScuCcu_Ndivider_117,        /**< \brief  N-divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   679      IfxScuCcu_Ndivider_118,        /**< \brief  N-divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   680      IfxScuCcu_Ndivider_119,        /**< \brief  N-divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   681      IfxScuCcu_Ndivider_120,        /**< \brief  N-divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   682      IfxScuCcu_Ndivider_121,        /**< \brief  N-divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   683      IfxScuCcu_Ndivider_122,        /**< \brief  N-divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   684      IfxScuCcu_Ndivider_123,        /**< \brief  N-divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   685      IfxScuCcu_Ndivider_124,        /**< \brief  N-divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   686      IfxScuCcu_Ndivider_125,        /**< \brief  N-divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   687      IfxScuCcu_Ndivider_126,        /**< \brief  N-divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   688      IfxScuCcu_Ndivider_127,        /**< \brief  N-divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   689      IfxScuCcu_Ndivider_128         /**< \brief  N-divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   690  } IfxScuCcu_Ndivider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   691  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   692  /** \brief MODULE_SCU.PLLCON0.B.PDIV, specifies the P-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   693   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   694  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   695  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   696      IfxScuCcu_Pdivider_1 = 0,      /**< \brief  P-divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   697      IfxScuCcu_Pdivider_2,          /**< \brief  P-divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   698      IfxScuCcu_Pdivider_3,          /**< \brief  P-divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   699      IfxScuCcu_Pdivider_4,          /**< \brief  P-divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   700      IfxScuCcu_Pdivider_5,          /**< \brief  P-divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   701      IfxScuCcu_Pdivider_6,          /**< \brief  P-divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   702      IfxScuCcu_Pdivider_7,          /**< \brief  P-divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   703      IfxScuCcu_Pdivider_8,          /**< \brief  P-divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   704      IfxScuCcu_Pdivider_9,          /**< \brief  P-divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   705      IfxScuCcu_Pdivider_10,         /**< \brief  P-divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   706      IfxScuCcu_Pdivider_11,         /**< \brief  P-divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   707      IfxScuCcu_Pdivider_12,         /**< \brief  P-divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   708      IfxScuCcu_Pdivider_13,         /**< \brief  P-divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   709      IfxScuCcu_Pdivider_14,         /**< \brief  P-divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   710      IfxScuCcu_Pdivider_15,         /**< \brief  P-divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   711      IfxScuCcu_Pdivider_16          /**< \brief  P-divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   712  } IfxScuCcu_Pdivider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   713  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   714  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   715  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   716  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   717  /*-----------------------------Data Structures--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   718  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   719  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   720  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   721   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   722  /** \brief Configuration structure type for CCUCON registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   723   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   724  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   725  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   726      uint32 value;       /**< \brief CCUCON Register value to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   727      uint32 mask;        /**< \brief CCUCON Mask to select the bit fields to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   728  } IfxScuCcu_CcuconRegConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   729  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   730  /** \brief Configuration structure type for the Pll initial step.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   731   * This structure must be used to configure the P, N and K2 dividers for initial step.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   732   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   733  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   734  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   735      uint8   pDivider;        /**< \brief P divider value for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   736      uint8   nDivider;        /**< \brief N divider value for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   737      uint8   k2Initial;       /**< \brief K2 divider value for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   738      float32 waitTime;        /**< \brief Wait time for for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   739  } IfxScuCcu_InitialStepConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   740  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   741  /** \brief Configuration structure type for the Pll Steps for current jump control.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   742   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   743  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   744  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   745      uint8                          k2Step;             /**< \brief K2 divider value for this step. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   746      float32                        waitTime;           /**< \brief Wait time for for this step. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   747      IfxScuCcu_PllStepsFunctionHook hookFunction;       /**< \brief Hook function called at the end of this step. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   748  } IfxScuCcu_PllStepsConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   749  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   750  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   751  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   752  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   753   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   754  /** \brief Configuration structure type for all the CCUCON registers to configure clock distribution.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   755   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   756  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   757  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   758      IfxScuCcu_CcuconRegConfig ccucon0;       /**< \brief CCUCON0 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   759      IfxScuCcu_CcuconRegConfig ccucon1;       /**< \brief CCUCON1 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   760      IfxScuCcu_CcuconRegConfig ccucon2;       /**< \brief CCUCON2 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   761      IfxScuCcu_CcuconRegConfig ccucon5;       /**< \brief CCUCON5 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   762      IfxScuCcu_CcuconRegConfig ccucon6;       /**< \brief CCUCON6 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   763      IfxScuCcu_CcuconRegConfig ccucon7;       /**< \brief CCUCON7 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   764  } IfxScuCcu_ClockDistributionConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   765  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   766  /** \brief Configuration structure type for the Flash waitstate configuration.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   767   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   768  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   769  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   770      uint32 value;       /**< \brief FLASH.FCON Register value to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   771      uint32 mask;        /**< \brief FLASH.FCON Mask to select the bit fields to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   772  } IfxScuCcu_FlashWaitstateConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   773  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   774  /** \brief Configuration structure type for the System Pll step.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   775   * This structure must be used to configure the P, N and K1 dividers .
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   776   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   777  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   778  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   779      uint8                       numOfPllDividerSteps;       /**< \brief Number of PLL divider steps during clock throttling. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   780      IfxScuCcu_PllStepsConfig   *pllDividerStep;             /**< \brief Pointer to the array of Pll divider step configuration. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   781      IfxScuCcu_InitialStepConfig pllInitialStep;             /**< \brief Configuration of first step which is same as internal osc frequency. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   782  } IfxScuCcu_SysPllConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   783  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   784  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   785  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   786  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   787   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   788  /** \brief Configuration structure SCU module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   789   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   790  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   791  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   792      IfxScuCcu_SysPllConfig            sysPll;                         /**< \brief System PLL configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   793      IfxScuCcu_ClockDistributionConfig clockDistribution;              /**< \brief Configuration of of bus clocks and other module clock distribution. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   794      IfxScuCcu_FlashWaitstateConfig    flashFconWaitStateConfig;       /**< \brief Configuration of flash waitstate */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   795      uint32                            xtalFrequency;                  /**< \brief Xtal Frequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   796  } IfxScuCcu_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   797  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   798  /** \brief Configuration structure for E-ray PLL
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   799   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   800  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   801  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   802      IfxScuCcu_InitialStepConfig pllInitialStep;       /**< \brief Configuration of first step which is same as internal osc frequency. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   803  } IfxScuCcu_ErayPllConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   804  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   805  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   806  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   807  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Operative
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   808   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   809  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   810  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   811  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   812  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   813  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   814  /** \brief API to get EVR Oscillator frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   815   * This API returns the constant which is specific to the ScuCcu of the controller.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   816   * \return EVR Oscillator frequency (fBACK or fEVR) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   817   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   818  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   819  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   820  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   821   * This API returns the  PLL2ERAY frequency based on the K3 divider value in PLLERAYCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   822   * \return PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   823   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   824  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   825  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   826  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   827   * This API returns the  PLL2 frequency based on the K3 divider value in PLLCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   828   * \return PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   829   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   830  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   831  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   832  /** \brief Returns the clock source selection
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   833   * \return Clock source selection
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   834   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   835  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   836  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   837  /** \brief API to get STM divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   838   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   839   * \return STM frequency (fSTM) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   840   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   841  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   842  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   843  /** \brief API to get CAN divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   844   * This API returns the fCAN frequency based on the divider value in CCUCON register and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   845   * \return STM frequency (fSTM) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   846   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   847  IFX_INLINE float32 IfxScuCcu_getCanFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   848  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   849  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   850  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   851  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   852  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   853  /** \brief API to get BAUD1 divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   854   * This API returns the based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   855   * \return Baud1 frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   856   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   857  IFX_EXTERN float32 IfxScuCcu_getBaud1Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   858  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   859  /** \brief API to get BAUD2 divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   860   * This API returns the Baud2 frequency based on the divider value in CCUCON register and the fMAX.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   861   * \return Baud2 frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   862   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   863  IFX_EXTERN float32 IfxScuCcu_getBaud2Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   864  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   865  /** \brief API to get BBB divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   866   * This API returns the BBBDivider frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   867   * \return BBB frequency (fBBB) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   868   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   869  IFX_EXTERN float32 IfxScuCcu_getBbbFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   870  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   871  /** \brief This API returns the Cpu frequency based on the divider value in CCUCON register and fSource frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   872   * \param cpu CPU number for which effective fCPU is sought
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   873   * \return Cpu[x] frequency in Hz, where x is cpu number passed as parameter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   874   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   875  IFX_EXTERN float32 IfxScuCcu_getCpuFrequency(const IfxCpu_ResourceCpu cpu);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   876  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   877  /** \brief API to get FSI2 divider frequency in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   878   * This API returns the fFSI2 frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   879   * \return FSI2 frequency (fFSI2) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   880   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   881  IFX_EXTERN float32 IfxScuCcu_getFsi2Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   882  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   883  /** \brief API to get FSI divider frequency in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   884   * This API returns the fFSI based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   885   * \return FSI frequency (fFSI) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   886   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   887  IFX_EXTERN float32 IfxScuCcu_getFsiFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   888  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   889  /** \brief API to get FMAX divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   890   * This API returns the fMax frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   891   * \return Max frequency (fMAX) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   892   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   893  IFX_EXTERN float32 IfxScuCcu_getMaxFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   894  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   895  /** \brief get source frequency fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   896   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   897   * \return Module frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   898   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   899  IFX_EXTERN float32 IfxScuCcu_getModuleFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   900  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   901  /** \brief API to get Oscillator 0 frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   902   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   903   * \return Osc0 frequency (fOSC0) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   904   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   905  IFX_EXTERN float32 IfxScuCcu_getOsc0Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   906  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   907  /** \brief API to get Oscillator 0 frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   908   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   909   * \return Osc frequency (fOSC) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   910   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   911  IFX_EXTERN float32 IfxScuCcu_getOscFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   912  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   913  /** \brief API to get actual PLL (Eray) frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   914   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   915   * \return frequency of Pll Eray (fPLLERAY) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   916   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   917  IFX_EXTERN float32 IfxScuCcu_getPllErayFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   918  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   919  /** \brief API to get actual ERAY PLL Voltage Controlled Oscillator frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   920   * This API returns the based on the divider values in PLLERAYCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   921   * \return Pll (Eray) VCO frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   922   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   923  IFX_EXTERN float32 IfxScuCcu_getPllErayVcoFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   924  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   925  /** \brief API to get actual PLL output frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   926   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   927   * \return Pll (fPLL) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   928   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   929  IFX_EXTERN float32 IfxScuCcu_getPllFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   930  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   931  /** \brief API to get actual PLL Voltage Controlled Oscillator frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   932   * This API returns the based on the divider values in PLLCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   933   * \return Pll VCO frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   934   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   935  IFX_EXTERN float32 IfxScuCcu_getPllVcoFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   936  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   937  /** \brief get source frequency fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   938   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   939   * \return Effective fSOURCE in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   940   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   941  IFX_EXTERN float32 IfxScuCcu_getSourceFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   942  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   943  /** \brief API to get SPB divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   944   * This API returns the based on fSOURCE and also on Low power divider mode and/or SPBDIV divider value in CCUCON registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   945   * \return SPB frequency (fSPB) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   946   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   947  IFX_EXTERN float32 IfxScuCcu_getSpbFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   948  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   949  /** \brief API to get SRI divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   950   * This API returns the Sri frequency based on the divider values in CCUCON registers and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   951   * \return Sri frequency (fSRI) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   952   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   953  IFX_EXTERN float32 IfxScuCcu_getSriFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   954  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   955  /** \brief API to set CPU frequency (with CPU divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   956   * This API configure CPU divider values in CCUCON registers. The actual frequency is always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   957   * \param cpu CPU number for which fCPU to be configured
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   958   * \param cpuFreq Desired CPU frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   959   * \return Actual CPU[x] frequency in Hz, where x is the cpu number passed as parameter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   960   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   961  IFX_EXTERN float32 IfxScuCcu_setCpuFrequency(IfxCpu_ResourceCpu cpu, float32 cpuFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   962  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   963  /** \brief API to configure PLL2ERAY (K3 Divider for ADC clock) for desired frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   964   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   965   * \param pll2ErayFreq PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   966   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   967   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   968  IFX_EXTERN float32 IfxScuCcu_setPll2ErayFrequency(float32 pll2ErayFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   969  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   970  /** \brief API to configure PLL2 (K3 Divider for ADC clock) for desired frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   971   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   972   * \param pll2Freq PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   973   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   974   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   975  IFX_EXTERN float32 IfxScuCcu_setPll2Frequency(float32 pll2Freq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   976  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   977  /** \brief API to set SPB frequency (with SPB divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   978   * This API configure SPB divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   979   * \param spbFreq Desired SPB frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   980   * \return Actual SPB frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   981   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   982  IFX_EXTERN float32 IfxScuCcu_setSpbFrequency(float32 spbFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   983  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   984  /** \brief API to set SRI frequency (with SRI divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   985   * This API configure Sri divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   986   * \param sriFreq Sri frequency (fSRI) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   987   * \return Actual Sri frequency (fSRI) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   988   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   989  IFX_EXTERN float32 IfxScuCcu_setSriFrequency(float32 sriFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   990  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   991  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   992  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   993  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   994   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   995  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   996  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   997  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   998  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   999  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1000  /** \brief The api calculates the system PLL divider values P, N, K based on given xtal frequency and PLL frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1001   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1002   * \param fPll Desired PLL frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1003   * \return 0- Success, 1 - Failure
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1004   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1005  IFX_EXTERN boolean IfxScuCcu_calculateSysPllDividers(IfxScuCcu_Config *cfg, uint32 fPll);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1006  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1007  /** \brief API to initialize the SCU Clock Control Unit.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1008   * This API initialize the PLL with ramp steps, BUS dividers for the configuration provided by the configuration structure.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1009   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1010   * \return Error status of the ScuCcu initialization process.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1011   * \retval TRUE: If an error occurred during initialization.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1012   * \retval FALSE: If initialization was successful.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1013   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1014  IFX_EXTERN boolean IfxScuCcu_init(const IfxScuCcu_Config *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1015  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1016  /** \brief Initializes the clock configuration with default values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1017   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1018   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1019   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1020  IFX_EXTERN void IfxScuCcu_initConfig(IfxScuCcu_Config *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1021  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1022  /** \brief API to initialize the SCU Eray Pll
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1023   * This API initialize the Eray PLL for the configuration provided by the configuration structure.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1024   * \param cfg Pointer to the configuration structure of the Eray Pll
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1025   * \return Error status of the ScuCcu Eray Pll initialization process.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1026   * \retval TRUE: If an error occurred during initialization.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1027   * \retval FALSE: If initialization was successful.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1028   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1029  IFX_EXTERN boolean IfxScuCcu_initErayPll(const IfxScuCcu_ErayPllConfig *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1030  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1031  /** \brief Initializes the clock configuration with default values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1032   * \param cfg Pointer to the configuration structure of the ScuCcuEray Pll
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1033   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1034   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1035  IFX_EXTERN void IfxScuCcu_initErayPllConfig(IfxScuCcu_ErayPllConfig *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1036  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1037  /** \brief API to switch to Backup clock from the current PLL frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1038   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1039   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1040   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1041  IFX_EXTERN void IfxScuCcu_switchToBackupClock(const IfxScuCcu_Config *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1042  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1043  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1044  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1045  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1046  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1047  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1048  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1049  /** \brief API to get GTMdivider frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1050   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1051   * return GTM frequency (fGTM) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1052   * \return Gtm Frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1053   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1054  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1055  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1056  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1057  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1058  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1059  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1060  /** \brief API to set GTM frequency (with GTM divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1061   * This API configure GTM divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1062   * \param gtmFreq Desired GTM frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1063   * \return Actual GTM frequency in HZ
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1064   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1065  IFX_EXTERN float32 IfxScuCcu_setGtmFrequency(float32 gtmFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1066  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1067  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1068  /*-------------------Global Exported Variables/Constants----------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1069  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1070  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1071  /** \brief Configuration structure for SCU CCU driver.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1072   * The values of this structure are defined as # defined macros in the implementation of Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1073   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1074  IFX_EXTERN IFX_CONST IfxScuCcu_Config IfxScuCcu_defaultClockConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1075  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1076  /** \brief Configuration structure for SCU CCU driver.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1077   * The values of this structure are defined as # defined macros in the implementation of Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1078   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1079  IFX_EXTERN IFX_CONST IfxScuCcu_ErayPllConfig IfxScuCcu_defaultErayPllConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1080  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1081  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1082  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1083  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1084  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1085  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1086  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1087      return IFXSCU_EVR_OSC_FREQUENCY;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1088  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1089  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1090  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1091  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1092  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1093      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.GTMDIV;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1094  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1095  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1096  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1097  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1098  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1099      float32 pll2ErayFrequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1100  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1101      pll2ErayFrequency = IfxScuCcu_getPllErayVcoFrequency() / (SCU_PLLERAYCON1.B.K3DIV + 1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1102  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1103      return pll2ErayFrequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1104  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1105  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1106  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1107  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1108  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1109      float32 pll2Frequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1110      pll2Frequency = IfxScuCcu_getPllVcoFrequency() / (SCU_PLLCON1.B.K3DIV + 1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1111  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1112      return pll2Frequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1113  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1114  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1116  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1117  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1118      return (IfxScu_CCUCON0_CLKSEL)SCU_CCUCON0.B.CLKSEL;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1119  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1120  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1122  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1123  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1124      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.STMDIV;
	call	IfxScuCcu_getSourceFrequency
.L257:
	movh.a	a2,#61443
	ld.bu	d15,[a2]@los(0xf0036035)
.L258:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   333  PR(__mfcr(CPU_CORE_ID), event);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   334  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   335      boolean          errorcnt      = 0U;
	movh	d0,#17530
	lea	a2,0xf0000010
.L261:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     2   * \file IfxScuCcu.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     3   * \brief SCU  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     4   * \ingroup IfxLld_Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    45   * \defgroup IfxLld_Scu SCU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    46   * \addtogroup IfxLld_Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    47   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    48   * \defgroup IfxLld_ScuCcu How to use the Scu Clock driver?
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    49   * \addtogroup IfxLld_ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    50   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    51   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    52   * The Scu Clock control unit driver provides a default configuration for pll and Clock initialisation and set of peripheral clock configuration functions.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    53   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    54   * In the following sections it will be described, how to integrate the driver into the application framework.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    55   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    56   * \section IfxLld_ScuCcu_Std_Preparation Preparation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    57   * \subsection IfxLld_ScuCcu_Std_Include Include Files
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    58   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    59   * Include following header file into your C code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    60   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    61   * #include <Scu/Std/IfxScuCcu.h>
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    62   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    63   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    64   * \subsection IfxLld_ScuCcu_Std_Variables Variables
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    65   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    66   * Declare the Clock Configuration variables in your C code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    67   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    68   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    69   * // used globally
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    70   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    71   * // configuration for the PLL  steps
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    72   * static IfxScuCcu_PllStepsConfig IfxScuCcu_testPllConfigSteps[] = {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    73   *     IFXSCU_CFG_PLL_STEPS
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    74   * };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    75   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    76   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    77   * // Default configuration for the Clock Configuration
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    78   * IfxScuCcu_Config                      IfxScuCcu_testClockConfig = {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    79   *     {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    80   *        sizeof(IfxScuCcu_testPllConfigSteps) / sizeof(IfxScuCcu_PllStepsConfig),
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    81   *        (IfxScuCcu_PllStepsConfig *)IfxScuCcu_testPllConfigSteps,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    82   *        IFXSCU_CFG_PLL_INITIAL_STEP,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    83   *     },
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    84   *     IFXSCU_CFG_CLK_DISTRIBUTION,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    85   *     IFXSCU_CFG_FLASH_WAITSTATE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    86   *     IFX_CFG_SCU_XTAL_FREQUENCY
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    87   * };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    88   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    89   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    90   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    91   * \subsection IfxLld_ScuCcu_Std_Init Module Initialisation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    92   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    93   * The module initialisation can be done in the same function. Here an example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    94   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    95   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    96   *        // standard PLL & clock initialisation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    97   *         IfxScuCcu_init(&IfxScuCcu_testClockConfig);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    99   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   100   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   101   *    The PLL and clocks are now initialised based on the IFXSCU_CFG_XTAL_FREQ and  IFXSCU_CFG_PLL_FREQ values configured in Ifx_Cfg.h.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   102   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   103   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   104   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   105   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   106   * \defgroup IfxLld_Scu_Std_Ccu Ccu Basic Functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   107   * \ingroup IfxLld_Scu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   108   * \defgroup IfxLld_Scu_Std_Ccu_Ccu Clock Control Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   109   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   110   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Operative Clock Control Operative Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   111   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   112   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Configuration Clock Control Configuration Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   113   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   114   * \defgroup IfxLld_Scu_Std_Ccu_Enum Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   115   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   116   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   117  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   118  #ifndef IFXSCUCCU_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   119  #define IFXSCUCCU_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   120  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   121  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   122  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   123  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   124  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   125  #include "_Impl/IfxScu_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   126  #include "Scu/Std/IfxScuWdt.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   127  #include "Cpu/Std/IfxCpu.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   128  #include "IfxStm_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   129  #include "IfxScu_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   130  #include "IfxFlash_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   131  #include "_PinMap/IfxScu_PinMap.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   132  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   133  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   134  /*-----------------------------------Macros-----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   135  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   136  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   137  /** \brief Oscillator stability check timeout count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   138   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   139  #define IFXSCUCCU_OSC_STABLECHK_TIME (640)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   140  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   141  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   142  /*------------------------------Type Definitions------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   143  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   144  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   145  /** \brief Function pointer type for the hooks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   146   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   147   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   148  typedef void (*IfxScuCcu_PllStepsFunctionHook)(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   149  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   150  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   151  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   152  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   153  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   154  /** \addtogroup IfxLld_Scu_Std_Ccu_Enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   155   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   156  /** \brief MODULE_SCU.PLLCON1.B.K1DIV, specifies the K1-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   157   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   158  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   159  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   160      IfxScuCcu_K1divider_1 = 0,      /**< \brief K1-Divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   161      IfxScuCcu_K1divider_2,          /**< \brief K1-Divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   162      IfxScuCcu_K1divider_3,          /**< \brief K1-Divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   163      IfxScuCcu_K1divider_4,          /**< \brief K1-Divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   164      IfxScuCcu_K1divider_5,          /**< \brief K1-Divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   165      IfxScuCcu_K1divider_6,          /**< \brief K1-Divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   166      IfxScuCcu_K1divider_7,          /**< \brief K1-Divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   167      IfxScuCcu_K1divider_8,          /**< \brief K1-Divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   168      IfxScuCcu_K1divider_9,          /**< \brief K1-Divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   169      IfxScuCcu_K1divider_10,         /**< \brief K1-Divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   170      IfxScuCcu_K1divider_11,         /**< \brief K1-Divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   171      IfxScuCcu_K1divider_12,         /**< \brief K1-Divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   172      IfxScuCcu_K1divider_13,         /**< \brief K1-Divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   173      IfxScuCcu_K1divider_14,         /**< \brief K1-Divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   174      IfxScuCcu_K1divider_15,         /**< \brief K1-Divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   175      IfxScuCcu_K1divider_16,         /**< \brief K1-Divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   176      IfxScuCcu_K1divider_17,         /**< \brief K1-Divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   177      IfxScuCcu_K1divider_18,         /**< \brief K1-Divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   178      IfxScuCcu_K1divider_19,         /**< \brief K1-Divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   179      IfxScuCcu_K1divider_20,         /**< \brief K1-Divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   180      IfxScuCcu_K1divider_21,         /**< \brief K1-Divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   181      IfxScuCcu_K1divider_22,         /**< \brief K1-Divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   182      IfxScuCcu_K1divider_23,         /**< \brief K1-Divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   183      IfxScuCcu_K1divider_24,         /**< \brief K1-Divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   184      IfxScuCcu_K1divider_25,         /**< \brief K1-Divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   185      IfxScuCcu_K1divider_26,         /**< \brief K1-Divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   186      IfxScuCcu_K1divider_27,         /**< \brief K1-Divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   187      IfxScuCcu_K1divider_28,         /**< \brief K1-Divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   188      IfxScuCcu_K1divider_29,         /**< \brief K1-Divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   189      IfxScuCcu_K1divider_30,         /**< \brief K1-Divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   190      IfxScuCcu_K1divider_31,         /**< \brief K1-Divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   191      IfxScuCcu_K1divider_32,         /**< \brief K1-Divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   192      IfxScuCcu_K1divider_33,         /**< \brief K1-Divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   193      IfxScuCcu_K1divider_34,         /**< \brief K1-Divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   194      IfxScuCcu_K1divider_35,         /**< \brief K1-Divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   195      IfxScuCcu_K1divider_36,         /**< \brief K1-Divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   196      IfxScuCcu_K1divider_37,         /**< \brief K1-Divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   197      IfxScuCcu_K1divider_38,         /**< \brief K1-Divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   198      IfxScuCcu_K1divider_39,         /**< \brief K1-Divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   199      IfxScuCcu_K1divider_40,         /**< \brief K1-Divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   200      IfxScuCcu_K1divider_41,         /**< \brief K1-Divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   201      IfxScuCcu_K1divider_42,         /**< \brief K1-Divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   202      IfxScuCcu_K1divider_43,         /**< \brief K1-Divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   203      IfxScuCcu_K1divider_44,         /**< \brief K1-Divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   204      IfxScuCcu_K1divider_45,         /**< \brief K1-Divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   205      IfxScuCcu_K1divider_46,         /**< \brief K1-Divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   206      IfxScuCcu_K1divider_47,         /**< \brief K1-Divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   207      IfxScuCcu_K1divider_48,         /**< \brief K1-Divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   208      IfxScuCcu_K1divider_49,         /**< \brief K1-Divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   209      IfxScuCcu_K1divider_50,         /**< \brief K1-Divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   210      IfxScuCcu_K1divider_51,         /**< \brief K1-Divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   211      IfxScuCcu_K1divider_52,         /**< \brief K1-Divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   212      IfxScuCcu_K1divider_53,         /**< \brief K1-Divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   213      IfxScuCcu_K1divider_54,         /**< \brief K1-Divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   214      IfxScuCcu_K1divider_55,         /**< \brief K1-Divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   215      IfxScuCcu_K1divider_56,         /**< \brief K1-Divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   216      IfxScuCcu_K1divider_57,         /**< \brief K1-Divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   217      IfxScuCcu_K1divider_58,         /**< \brief K1-Divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   218      IfxScuCcu_K1divider_59,         /**< \brief K1-Divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   219      IfxScuCcu_K1divider_60,         /**< \brief K1-Divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   220      IfxScuCcu_K1divider_61,         /**< \brief K1-Divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   221      IfxScuCcu_K1divider_62,         /**< \brief K1-Divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   222      IfxScuCcu_K1divider_63,         /**< \brief K1-Divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   223      IfxScuCcu_K1divider_64,         /**< \brief K1-Divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   224      IfxScuCcu_K1divider_65,         /**< \brief K1-Divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   225      IfxScuCcu_K1divider_66,         /**< \brief K1-Divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   226      IfxScuCcu_K1divider_67,         /**< \brief K1-Divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   227      IfxScuCcu_K1divider_68,         /**< \brief K1-Divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   228      IfxScuCcu_K1divider_69,         /**< \brief K1-Divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   229      IfxScuCcu_K1divider_70,         /**< \brief K1-Divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   230      IfxScuCcu_K1divider_71,         /**< \brief K1-Divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   231      IfxScuCcu_K1divider_72,         /**< \brief K1-Divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   232      IfxScuCcu_K1divider_73,         /**< \brief K1-Divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   233      IfxScuCcu_K1divider_74,         /**< \brief K1-Divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   234      IfxScuCcu_K1divider_75,         /**< \brief K1-Divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   235      IfxScuCcu_K1divider_76,         /**< \brief K1-Divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   236      IfxScuCcu_K1divider_77,         /**< \brief K1-Divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   237      IfxScuCcu_K1divider_78,         /**< \brief K1-Divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   238      IfxScuCcu_K1divider_79,         /**< \brief K1-Divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   239      IfxScuCcu_K1divider_80,         /**< \brief K1-Divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   240      IfxScuCcu_K1divider_81,         /**< \brief K1-Divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   241      IfxScuCcu_K1divider_82,         /**< \brief K1-Divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   242      IfxScuCcu_K1divider_83,         /**< \brief K1-Divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   243      IfxScuCcu_K1divider_84,         /**< \brief K1-Divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   244      IfxScuCcu_K1divider_85,         /**< \brief K1-Divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   245      IfxScuCcu_K1divider_86,         /**< \brief K1-Divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   246      IfxScuCcu_K1divider_87,         /**< \brief K1-Divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   247      IfxScuCcu_K1divider_88,         /**< \brief K1-Divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   248      IfxScuCcu_K1divider_89,         /**< \brief K1-Divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   249      IfxScuCcu_K1divider_90,         /**< \brief K1-Divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   250      IfxScuCcu_K1divider_91,         /**< \brief K1-Divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   251      IfxScuCcu_K1divider_92,         /**< \brief K1-Divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   252      IfxScuCcu_K1divider_93,         /**< \brief K1-Divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   253      IfxScuCcu_K1divider_94,         /**< \brief K1-Divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   254      IfxScuCcu_K1divider_95,         /**< \brief K1-Divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   255      IfxScuCcu_K1divider_96,         /**< \brief K1-Divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   256      IfxScuCcu_K1divider_97,         /**< \brief K1-Divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   257      IfxScuCcu_K1divider_98,         /**< \brief K1-Divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   258      IfxScuCcu_K1divider_99,         /**< \brief K1-Divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   259      IfxScuCcu_K1divider_100,        /**< \brief K1-Divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   260      IfxScuCcu_K1divider_101,        /**< \brief K1-Divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   261      IfxScuCcu_K1divider_102,        /**< \brief K1-Divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   262      IfxScuCcu_K1divider_103,        /**< \brief K1-Divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   263      IfxScuCcu_K1divider_104,        /**< \brief K1-Divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   264      IfxScuCcu_K1divider_105,        /**< \brief K1-Divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   265      IfxScuCcu_K1divider_106,        /**< \brief K1-Divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   266      IfxScuCcu_K1divider_107,        /**< \brief K1-Divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   267      IfxScuCcu_K1divider_108,        /**< \brief K1-Divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   268      IfxScuCcu_K1divider_109,        /**< \brief K1-Divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   269      IfxScuCcu_K1divider_110,        /**< \brief K1-Divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   270      IfxScuCcu_K1divider_111,        /**< \brief K1-Divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   271      IfxScuCcu_K1divider_112,        /**< \brief K1-Divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   272      IfxScuCcu_K1divider_113,        /**< \brief K1-Divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   273      IfxScuCcu_K1divider_114,        /**< \brief K1-Divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   274      IfxScuCcu_K1divider_115,        /**< \brief K1-Divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   275      IfxScuCcu_K1divider_116,        /**< \brief K1-Divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   276      IfxScuCcu_K1divider_117,        /**< \brief K1-Divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   277      IfxScuCcu_K1divider_118,        /**< \brief K1-Divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   278      IfxScuCcu_K1divider_119,        /**< \brief K1-Divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   279      IfxScuCcu_K1divider_120,        /**< \brief K1-Divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   280      IfxScuCcu_K1divider_121,        /**< \brief K1-Divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   281      IfxScuCcu_K1divider_122,        /**< \brief K1-Divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   282      IfxScuCcu_K1divider_123,        /**< \brief K1-Divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   283      IfxScuCcu_K1divider_124,        /**< \brief K1-Divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   284      IfxScuCcu_K1divider_125,        /**< \brief K1-Divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   285      IfxScuCcu_K1divider_126,        /**< \brief K1-Divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   286      IfxScuCcu_K1divider_127,        /**< \brief K1-Divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   287      IfxScuCcu_K1divider_128         /**< \brief K1-Divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   288  } IfxScuCcu_K1divider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   289  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   290  /** \brief MODULE_SCU.PLLCON1.B.K2DIV, specifies the K2-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   292  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   294      IfxScuCcu_K2divider_1 = 0,      /**< \brief K2-Divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   295      IfxScuCcu_K2divider_2,          /**< \brief K2-Divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   296      IfxScuCcu_K2divider_3,          /**< \brief K2-Divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   297      IfxScuCcu_K2divider_4,          /**< \brief K2-Divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   298      IfxScuCcu_K2divider_5,          /**< \brief K2-Divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   299      IfxScuCcu_K2divider_6,          /**< \brief K2-Divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   300      IfxScuCcu_K2divider_7,          /**< \brief K2-Divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   301      IfxScuCcu_K2divider_8,          /**< \brief K2-Divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   302      IfxScuCcu_K2divider_9,          /**< \brief K2-Divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   303      IfxScuCcu_K2divider_10,         /**< \brief K2-Divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   304      IfxScuCcu_K2divider_11,         /**< \brief K2-Divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   305      IfxScuCcu_K2divider_12,         /**< \brief K2-Divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   306      IfxScuCcu_K2divider_13,         /**< \brief K2-Divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   307      IfxScuCcu_K2divider_14,         /**< \brief K2-Divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   308      IfxScuCcu_K2divider_15,         /**< \brief K2-Divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   309      IfxScuCcu_K2divider_16,         /**< \brief K2-Divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   310      IfxScuCcu_K2divider_17,         /**< \brief K2-Divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   311      IfxScuCcu_K2divider_18,         /**< \brief K2-Divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   312      IfxScuCcu_K2divider_19,         /**< \brief K2-Divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   313      IfxScuCcu_K2divider_20,         /**< \brief K2-Divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   314      IfxScuCcu_K2divider_21,         /**< \brief K2-Divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   315      IfxScuCcu_K2divider_22,         /**< \brief K2-Divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   316      IfxScuCcu_K2divider_23,         /**< \brief K2-Divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   317      IfxScuCcu_K2divider_24,         /**< \brief K2-Divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   318      IfxScuCcu_K2divider_25,         /**< \brief K2-Divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   319      IfxScuCcu_K2divider_26,         /**< \brief K2-Divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   320      IfxScuCcu_K2divider_27,         /**< \brief K2-Divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   321      IfxScuCcu_K2divider_28,         /**< \brief K2-Divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   322      IfxScuCcu_K2divider_29,         /**< \brief K2-Divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   323      IfxScuCcu_K2divider_30,         /**< \brief K2-Divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   324      IfxScuCcu_K2divider_31,         /**< \brief K2-Divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   325      IfxScuCcu_K2divider_32,         /**< \brief K2-Divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   326      IfxScuCcu_K2divider_33,         /**< \brief K2-Divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   327      IfxScuCcu_K2divider_34,         /**< \brief K2-Divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   328      IfxScuCcu_K2divider_35,         /**< \brief K2-Divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   329      IfxScuCcu_K2divider_36,         /**< \brief K2-Divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   330      IfxScuCcu_K2divider_37,         /**< \brief K2-Divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   331      IfxScuCcu_K2divider_38,         /**< \brief K2-Divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   332      IfxScuCcu_K2divider_39,         /**< \brief K2-Divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   333      IfxScuCcu_K2divider_40,         /**< \brief K2-Divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   334      IfxScuCcu_K2divider_41,         /**< \brief K2-Divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   335      IfxScuCcu_K2divider_42,         /**< \brief K2-Divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   336      IfxScuCcu_K2divider_43,         /**< \brief K2-Divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   337      IfxScuCcu_K2divider_44,         /**< \brief K2-Divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   338      IfxScuCcu_K2divider_45,         /**< \brief K2-Divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   339      IfxScuCcu_K2divider_46,         /**< \brief K2-Divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   340      IfxScuCcu_K2divider_47,         /**< \brief K2-Divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   341      IfxScuCcu_K2divider_48,         /**< \brief K2-Divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   342      IfxScuCcu_K2divider_49,         /**< \brief K2-Divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   343      IfxScuCcu_K2divider_50,         /**< \brief K2-Divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   344      IfxScuCcu_K2divider_51,         /**< \brief K2-Divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   345      IfxScuCcu_K2divider_52,         /**< \brief K2-Divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   346      IfxScuCcu_K2divider_53,         /**< \brief K2-Divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   347      IfxScuCcu_K2divider_54,         /**< \brief K2-Divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   348      IfxScuCcu_K2divider_55,         /**< \brief K2-Divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   349      IfxScuCcu_K2divider_56,         /**< \brief K2-Divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   350      IfxScuCcu_K2divider_57,         /**< \brief K2-Divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   351      IfxScuCcu_K2divider_58,         /**< \brief K2-Divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   352      IfxScuCcu_K2divider_59,         /**< \brief K2-Divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   353      IfxScuCcu_K2divider_60,         /**< \brief K2-Divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   354      IfxScuCcu_K2divider_61,         /**< \brief K2-Divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   355      IfxScuCcu_K2divider_62,         /**< \brief K2-Divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   356      IfxScuCcu_K2divider_63,         /**< \brief K2-Divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   357      IfxScuCcu_K2divider_64,         /**< \brief K2-Divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   358      IfxScuCcu_K2divider_65,         /**< \brief K2-Divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   359      IfxScuCcu_K2divider_66,         /**< \brief K2-Divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   360      IfxScuCcu_K2divider_67,         /**< \brief K2-Divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   361      IfxScuCcu_K2divider_68,         /**< \brief K2-Divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   362      IfxScuCcu_K2divider_69,         /**< \brief K2-Divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   363      IfxScuCcu_K2divider_70,         /**< \brief K2-Divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   364      IfxScuCcu_K2divider_71,         /**< \brief K2-Divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   365      IfxScuCcu_K2divider_72,         /**< \brief K2-Divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   366      IfxScuCcu_K2divider_73,         /**< \brief K2-Divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   367      IfxScuCcu_K2divider_74,         /**< \brief K2-Divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   368      IfxScuCcu_K2divider_75,         /**< \brief K2-Divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   369      IfxScuCcu_K2divider_76,         /**< \brief K2-Divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   370      IfxScuCcu_K2divider_77,         /**< \brief K2-Divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   371      IfxScuCcu_K2divider_78,         /**< \brief K2-Divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   372      IfxScuCcu_K2divider_79,         /**< \brief K2-Divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   373      IfxScuCcu_K2divider_80,         /**< \brief K2-Divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   374      IfxScuCcu_K2divider_81,         /**< \brief K2-Divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   375      IfxScuCcu_K2divider_82,         /**< \brief K2-Divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   376      IfxScuCcu_K2divider_83,         /**< \brief K2-Divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   377      IfxScuCcu_K2divider_84,         /**< \brief K2-Divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   378      IfxScuCcu_K2divider_85,         /**< \brief K2-Divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   379      IfxScuCcu_K2divider_86,         /**< \brief K2-Divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   380      IfxScuCcu_K2divider_87,         /**< \brief K2-Divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   381      IfxScuCcu_K2divider_88,         /**< \brief K2-Divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   382      IfxScuCcu_K2divider_89,         /**< \brief K2-Divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   383      IfxScuCcu_K2divider_90,         /**< \brief K2-Divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   384      IfxScuCcu_K2divider_91,         /**< \brief K2-Divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   385      IfxScuCcu_K2divider_92,         /**< \brief K2-Divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   386      IfxScuCcu_K2divider_93,         /**< \brief K2-Divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   387      IfxScuCcu_K2divider_94,         /**< \brief K2-Divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   388      IfxScuCcu_K2divider_95,         /**< \brief K2-Divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   389      IfxScuCcu_K2divider_96,         /**< \brief K2-Divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   390      IfxScuCcu_K2divider_97,         /**< \brief K2-Divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   391      IfxScuCcu_K2divider_98,         /**< \brief K2-Divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   392      IfxScuCcu_K2divider_99,         /**< \brief K2-Divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   393      IfxScuCcu_K2divider_100,        /**< \brief K2-Divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   394      IfxScuCcu_K2divider_101,        /**< \brief K2-Divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   395      IfxScuCcu_K2divider_102,        /**< \brief K2-Divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   396      IfxScuCcu_K2divider_103,        /**< \brief K2-Divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   397      IfxScuCcu_K2divider_104,        /**< \brief K2-Divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   398      IfxScuCcu_K2divider_105,        /**< \brief K2-Divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   399      IfxScuCcu_K2divider_106,        /**< \brief K2-Divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   400      IfxScuCcu_K2divider_107,        /**< \brief K2-Divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   401      IfxScuCcu_K2divider_108,        /**< \brief K2-Divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   402      IfxScuCcu_K2divider_109,        /**< \brief K2-Divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   403      IfxScuCcu_K2divider_110,        /**< \brief K2-Divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   404      IfxScuCcu_K2divider_111,        /**< \brief K2-Divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   405      IfxScuCcu_K2divider_112,        /**< \brief K2-Divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   406      IfxScuCcu_K2divider_113,        /**< \brief K2-Divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   407      IfxScuCcu_K2divider_114,        /**< \brief K2-Divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   408      IfxScuCcu_K2divider_115,        /**< \brief K2-Divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   409      IfxScuCcu_K2divider_116,        /**< \brief K2-Divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   410      IfxScuCcu_K2divider_117,        /**< \brief K2-Divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   411      IfxScuCcu_K2divider_118,        /**< \brief K2-Divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   412      IfxScuCcu_K2divider_119,        /**< \brief K2-Divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   413      IfxScuCcu_K2divider_120,        /**< \brief K2-Divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   414      IfxScuCcu_K2divider_121,        /**< \brief K2-Divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   415      IfxScuCcu_K2divider_122,        /**< \brief K2-Divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   416      IfxScuCcu_K2divider_123,        /**< \brief K2-Divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   417      IfxScuCcu_K2divider_124,        /**< \brief K2-Divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   418      IfxScuCcu_K2divider_125,        /**< \brief K2-Divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   419      IfxScuCcu_K2divider_126,        /**< \brief K2-Divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   420      IfxScuCcu_K2divider_127,        /**< \brief K2-Divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   421      IfxScuCcu_K2divider_128         /**< \brief K2-Divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   422  } IfxScuCcu_K2divider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   424  /** \brief MODULE_SCU.PLLCON1.B.K3DIV, specifies the K3-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   425   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   426  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   427  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   428      IfxScuCcu_K3divider_1 = 0,      /**< \brief K3-Divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   429      IfxScuCcu_K3divider_2,          /**< \brief K3-Divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   430      IfxScuCcu_K3divider_3,          /**< \brief K3-Divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   431      IfxScuCcu_K3divider_4,          /**< \brief K3-Divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   432      IfxScuCcu_K3divider_5,          /**< \brief K3-Divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   433      IfxScuCcu_K3divider_6,          /**< \brief K3-Divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   434      IfxScuCcu_K3divider_7,          /**< \brief K3-Divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   435      IfxScuCcu_K3divider_8,          /**< \brief K3-Divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   436      IfxScuCcu_K3divider_9,          /**< \brief K3-Divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   437      IfxScuCcu_K3divider_10,         /**< \brief K3-Divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   438      IfxScuCcu_K3divider_11,         /**< \brief K3-Divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   439      IfxScuCcu_K3divider_12,         /**< \brief K3-Divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   440      IfxScuCcu_K3divider_13,         /**< \brief K3-Divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   441      IfxScuCcu_K3divider_14,         /**< \brief K3-Divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   442      IfxScuCcu_K3divider_15,         /**< \brief K3-Divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   443      IfxScuCcu_K3divider_16,         /**< \brief K3-Divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   444      IfxScuCcu_K3divider_17,         /**< \brief K3-Divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   445      IfxScuCcu_K3divider_18,         /**< \brief K3-Divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   446      IfxScuCcu_K3divider_19,         /**< \brief K3-Divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   447      IfxScuCcu_K3divider_20,         /**< \brief K3-Divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   448      IfxScuCcu_K3divider_21,         /**< \brief K3-Divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   449      IfxScuCcu_K3divider_22,         /**< \brief K3-Divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   450      IfxScuCcu_K3divider_23,         /**< \brief K3-Divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   451      IfxScuCcu_K3divider_24,         /**< \brief K3-Divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   452      IfxScuCcu_K3divider_25,         /**< \brief K3-Divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   453      IfxScuCcu_K3divider_26,         /**< \brief K3-Divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   454      IfxScuCcu_K3divider_27,         /**< \brief K3-Divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   455      IfxScuCcu_K3divider_28,         /**< \brief K3-Divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   456      IfxScuCcu_K3divider_29,         /**< \brief K3-Divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   457      IfxScuCcu_K3divider_30,         /**< \brief K3-Divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   458      IfxScuCcu_K3divider_31,         /**< \brief K3-Divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   459      IfxScuCcu_K3divider_32,         /**< \brief K3-Divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   460      IfxScuCcu_K3divider_33,         /**< \brief K3-Divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   461      IfxScuCcu_K3divider_34,         /**< \brief K3-Divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   462      IfxScuCcu_K3divider_35,         /**< \brief K3-Divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   463      IfxScuCcu_K3divider_36,         /**< \brief K3-Divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   464      IfxScuCcu_K3divider_37,         /**< \brief K3-Divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   465      IfxScuCcu_K3divider_38,         /**< \brief K3-Divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   466      IfxScuCcu_K3divider_39,         /**< \brief K3-Divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   467      IfxScuCcu_K3divider_40,         /**< \brief K3-Divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   468      IfxScuCcu_K3divider_41,         /**< \brief K3-Divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   469      IfxScuCcu_K3divider_42,         /**< \brief K3-Divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   470      IfxScuCcu_K3divider_43,         /**< \brief K3-Divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   471      IfxScuCcu_K3divider_44,         /**< \brief K3-Divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   472      IfxScuCcu_K3divider_45,         /**< \brief K3-Divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   473      IfxScuCcu_K3divider_46,         /**< \brief K3-Divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   474      IfxScuCcu_K3divider_47,         /**< \brief K3-Divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   475      IfxScuCcu_K3divider_48,         /**< \brief K3-Divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   476      IfxScuCcu_K3divider_49,         /**< \brief K3-Divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   477      IfxScuCcu_K3divider_50,         /**< \brief K3-Divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   478      IfxScuCcu_K3divider_51,         /**< \brief K3-Divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   479      IfxScuCcu_K3divider_52,         /**< \brief K3-Divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   480      IfxScuCcu_K3divider_53,         /**< \brief K3-Divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   481      IfxScuCcu_K3divider_54,         /**< \brief K3-Divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   482      IfxScuCcu_K3divider_55,         /**< \brief K3-Divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   483      IfxScuCcu_K3divider_56,         /**< \brief K3-Divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   484      IfxScuCcu_K3divider_57,         /**< \brief K3-Divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   485      IfxScuCcu_K3divider_58,         /**< \brief K3-Divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   486      IfxScuCcu_K3divider_59,         /**< \brief K3-Divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   487      IfxScuCcu_K3divider_60,         /**< \brief K3-Divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   488      IfxScuCcu_K3divider_61,         /**< \brief K3-Divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   489      IfxScuCcu_K3divider_62,         /**< \brief K3-Divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   490      IfxScuCcu_K3divider_63,         /**< \brief K3-Divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   491      IfxScuCcu_K3divider_64,         /**< \brief K3-Divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   492      IfxScuCcu_K3divider_65,         /**< \brief K3-Divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   493      IfxScuCcu_K3divider_66,         /**< \brief K3-Divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   494      IfxScuCcu_K3divider_67,         /**< \brief K3-Divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   495      IfxScuCcu_K3divider_68,         /**< \brief K3-Divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   496      IfxScuCcu_K3divider_69,         /**< \brief K3-Divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   497      IfxScuCcu_K3divider_70,         /**< \brief K3-Divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   498      IfxScuCcu_K3divider_71,         /**< \brief K3-Divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   499      IfxScuCcu_K3divider_72,         /**< \brief K3-Divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   500      IfxScuCcu_K3divider_73,         /**< \brief K3-Divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   501      IfxScuCcu_K3divider_74,         /**< \brief K3-Divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   502      IfxScuCcu_K3divider_75,         /**< \brief K3-Divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   503      IfxScuCcu_K3divider_76,         /**< \brief K3-Divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   504      IfxScuCcu_K3divider_77,         /**< \brief K3-Divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   505      IfxScuCcu_K3divider_78,         /**< \brief K3-Divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   506      IfxScuCcu_K3divider_79,         /**< \brief K3-Divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   507      IfxScuCcu_K3divider_80,         /**< \brief K3-Divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   508      IfxScuCcu_K3divider_81,         /**< \brief K3-Divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   509      IfxScuCcu_K3divider_82,         /**< \brief K3-Divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   510      IfxScuCcu_K3divider_83,         /**< \brief K3-Divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   511      IfxScuCcu_K3divider_84,         /**< \brief K3-Divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   512      IfxScuCcu_K3divider_85,         /**< \brief K3-Divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   513      IfxScuCcu_K3divider_86,         /**< \brief K3-Divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   514      IfxScuCcu_K3divider_87,         /**< \brief K3-Divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   515      IfxScuCcu_K3divider_88,         /**< \brief K3-Divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   516      IfxScuCcu_K3divider_89,         /**< \brief K3-Divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   517      IfxScuCcu_K3divider_90,         /**< \brief K3-Divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   518      IfxScuCcu_K3divider_91,         /**< \brief K3-Divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   519      IfxScuCcu_K3divider_92,         /**< \brief K3-Divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   520      IfxScuCcu_K3divider_93,         /**< \brief K3-Divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   521      IfxScuCcu_K3divider_94,         /**< \brief K3-Divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   522      IfxScuCcu_K3divider_95,         /**< \brief K3-Divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   523      IfxScuCcu_K3divider_96,         /**< \brief K3-Divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   524      IfxScuCcu_K3divider_97,         /**< \brief K3-Divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   525      IfxScuCcu_K3divider_98,         /**< \brief K3-Divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   526      IfxScuCcu_K3divider_99,         /**< \brief K3-Divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   527      IfxScuCcu_K3divider_100,        /**< \brief K3-Divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   528      IfxScuCcu_K3divider_101,        /**< \brief K3-Divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   529      IfxScuCcu_K3divider_102,        /**< \brief K3-Divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   530      IfxScuCcu_K3divider_103,        /**< \brief K3-Divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   531      IfxScuCcu_K3divider_104,        /**< \brief K3-Divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   532      IfxScuCcu_K3divider_105,        /**< \brief K3-Divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   533      IfxScuCcu_K3divider_106,        /**< \brief K3-Divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   534      IfxScuCcu_K3divider_107,        /**< \brief K3-Divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   535      IfxScuCcu_K3divider_108,        /**< \brief K3-Divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   536      IfxScuCcu_K3divider_109,        /**< \brief K3-Divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   537      IfxScuCcu_K3divider_110,        /**< \brief K3-Divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   538      IfxScuCcu_K3divider_111,        /**< \brief K3-Divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   539      IfxScuCcu_K3divider_112,        /**< \brief K3-Divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   540      IfxScuCcu_K3divider_113,        /**< \brief K3-Divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   541      IfxScuCcu_K3divider_114,        /**< \brief K3-Divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   542      IfxScuCcu_K3divider_115,        /**< \brief K3-Divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   543      IfxScuCcu_K3divider_116,        /**< \brief K3-Divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   544      IfxScuCcu_K3divider_117,        /**< \brief K3-Divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   545      IfxScuCcu_K3divider_118,        /**< \brief K3-Divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   546      IfxScuCcu_K3divider_119,        /**< \brief K3-Divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   547      IfxScuCcu_K3divider_120,        /**< \brief K3-Divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   548      IfxScuCcu_K3divider_121,        /**< \brief K3-Divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   549      IfxScuCcu_K3divider_122,        /**< \brief K3-Divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   550      IfxScuCcu_K3divider_123,        /**< \brief K3-Divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   551      IfxScuCcu_K3divider_124,        /**< \brief K3-Divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   552      IfxScuCcu_K3divider_125,        /**< \brief K3-Divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   553      IfxScuCcu_K3divider_126,        /**< \brief K3-Divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   554      IfxScuCcu_K3divider_127,        /**< \brief K3-Divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   555      IfxScuCcu_K3divider_128         /**< \brief K3-Divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   556  } IfxScuCcu_K3divider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   557  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   558  /** \brief MODULE_SCU.PLLCON0.B.NDIV, specifies the N-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   559   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   560  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   561  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   562      IfxScuCcu_Ndivider_1 = 0,      /**< \brief  N-divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   563      IfxScuCcu_Ndivider_2,          /**< \brief  N-divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   564      IfxScuCcu_Ndivider_3,          /**< \brief  N-divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   565      IfxScuCcu_Ndivider_4,          /**< \brief  N-divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   566      IfxScuCcu_Ndivider_5,          /**< \brief  N-divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   567      IfxScuCcu_Ndivider_6,          /**< \brief  N-divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   568      IfxScuCcu_Ndivider_7,          /**< \brief  N-divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   569      IfxScuCcu_Ndivider_8,          /**< \brief  N-divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   570      IfxScuCcu_Ndivider_9,          /**< \brief  N-divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   571      IfxScuCcu_Ndivider_10,         /**< \brief  N-divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   572      IfxScuCcu_Ndivider_11,         /**< \brief  N-divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   573      IfxScuCcu_Ndivider_12,         /**< \brief  N-divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   574      IfxScuCcu_Ndivider_13,         /**< \brief  N-divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   575      IfxScuCcu_Ndivider_14,         /**< \brief  N-divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   576      IfxScuCcu_Ndivider_15,         /**< \brief  N-divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   577      IfxScuCcu_Ndivider_16,         /**< \brief  N-divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   578      IfxScuCcu_Ndivider_17,         /**< \brief  N-divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   579      IfxScuCcu_Ndivider_18,         /**< \brief  N-divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   580      IfxScuCcu_Ndivider_19,         /**< \brief  N-divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   581      IfxScuCcu_Ndivider_20,         /**< \brief  N-divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   582      IfxScuCcu_Ndivider_21,         /**< \brief  N-divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   583      IfxScuCcu_Ndivider_22,         /**< \brief  N-divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   584      IfxScuCcu_Ndivider_23,         /**< \brief  N-divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   585      IfxScuCcu_Ndivider_24,         /**< \brief  N-divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   586      IfxScuCcu_Ndivider_25,         /**< \brief  N-divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   587      IfxScuCcu_Ndivider_26,         /**< \brief  N-divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   588      IfxScuCcu_Ndivider_27,         /**< \brief  N-divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   589      IfxScuCcu_Ndivider_28,         /**< \brief  N-divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   590      IfxScuCcu_Ndivider_29,         /**< \brief  N-divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   591      IfxScuCcu_Ndivider_30,         /**< \brief  N-divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   592      IfxScuCcu_Ndivider_31,         /**< \brief  N-divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   593      IfxScuCcu_Ndivider_32,         /**< \brief  N-divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   594      IfxScuCcu_Ndivider_33,         /**< \brief  N-divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   595      IfxScuCcu_Ndivider_34,         /**< \brief  N-divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   596      IfxScuCcu_Ndivider_35,         /**< \brief  N-divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   597      IfxScuCcu_Ndivider_36,         /**< \brief  N-divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   598      IfxScuCcu_Ndivider_37,         /**< \brief  N-divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   599      IfxScuCcu_Ndivider_38,         /**< \brief  N-divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   600      IfxScuCcu_Ndivider_39,         /**< \brief  N-divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   601      IfxScuCcu_Ndivider_40,         /**< \brief  N-divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   602      IfxScuCcu_Ndivider_41,         /**< \brief  N-divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   603      IfxScuCcu_Ndivider_42,         /**< \brief  N-divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   604      IfxScuCcu_Ndivider_43,         /**< \brief  N-divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   605      IfxScuCcu_Ndivider_44,         /**< \brief  N-divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   606      IfxScuCcu_Ndivider_45,         /**< \brief  N-divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   607      IfxScuCcu_Ndivider_46,         /**< \brief  N-divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   608      IfxScuCcu_Ndivider_47,         /**< \brief  N-divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   609      IfxScuCcu_Ndivider_48,         /**< \brief  N-divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   610      IfxScuCcu_Ndivider_49,         /**< \brief  N-divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   611      IfxScuCcu_Ndivider_50,         /**< \brief  N-divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   612      IfxScuCcu_Ndivider_51,         /**< \brief  N-divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   613      IfxScuCcu_Ndivider_52,         /**< \brief  N-divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   614      IfxScuCcu_Ndivider_53,         /**< \brief  N-divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   615      IfxScuCcu_Ndivider_54,         /**< \brief  N-divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   616      IfxScuCcu_Ndivider_55,         /**< \brief  N-divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   617      IfxScuCcu_Ndivider_56,         /**< \brief  N-divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   618      IfxScuCcu_Ndivider_57,         /**< \brief  N-divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   619      IfxScuCcu_Ndivider_58,         /**< \brief  N-divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   620      IfxScuCcu_Ndivider_59,         /**< \brief  N-divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   621      IfxScuCcu_Ndivider_60,         /**< \brief  N-divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   622      IfxScuCcu_Ndivider_61,         /**< \brief  N-divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   623      IfxScuCcu_Ndivider_62,         /**< \brief  N-divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   624      IfxScuCcu_Ndivider_63,         /**< \brief  N-divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   625      IfxScuCcu_Ndivider_64,         /**< \brief  N-divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   626      IfxScuCcu_Ndivider_65,         /**< \brief  N-divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   627      IfxScuCcu_Ndivider_66,         /**< \brief  N-divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   628      IfxScuCcu_Ndivider_67,         /**< \brief  N-divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   629      IfxScuCcu_Ndivider_68,         /**< \brief  N-divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   630      IfxScuCcu_Ndivider_69,         /**< \brief  N-divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   631      IfxScuCcu_Ndivider_70,         /**< \brief  N-divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   632      IfxScuCcu_Ndivider_71,         /**< \brief  N-divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   633      IfxScuCcu_Ndivider_72,         /**< \brief  N-divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   634      IfxScuCcu_Ndivider_73,         /**< \brief  N-divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   635      IfxScuCcu_Ndivider_74,         /**< \brief  N-divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   636      IfxScuCcu_Ndivider_75,         /**< \brief  N-divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   637      IfxScuCcu_Ndivider_76,         /**< \brief  N-divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   638      IfxScuCcu_Ndivider_77,         /**< \brief  N-divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   639      IfxScuCcu_Ndivider_78,         /**< \brief  N-divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   640      IfxScuCcu_Ndivider_79,         /**< \brief  N-divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   641      IfxScuCcu_Ndivider_80,         /**< \brief  N-divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   642      IfxScuCcu_Ndivider_81,         /**< \brief  N-divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   643      IfxScuCcu_Ndivider_82,         /**< \brief  N-divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   644      IfxScuCcu_Ndivider_83,         /**< \brief  N-divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   645      IfxScuCcu_Ndivider_84,         /**< \brief  N-divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   646      IfxScuCcu_Ndivider_85,         /**< \brief  N-divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   647      IfxScuCcu_Ndivider_86,         /**< \brief  N-divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   648      IfxScuCcu_Ndivider_87,         /**< \brief  N-divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   649      IfxScuCcu_Ndivider_88,         /**< \brief  N-divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   650      IfxScuCcu_Ndivider_89,         /**< \brief  N-divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   651      IfxScuCcu_Ndivider_90,         /**< \brief  N-divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   652      IfxScuCcu_Ndivider_91,         /**< \brief  N-divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   653      IfxScuCcu_Ndivider_92,         /**< \brief  N-divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   654      IfxScuCcu_Ndivider_93,         /**< \brief  N-divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   655      IfxScuCcu_Ndivider_94,         /**< \brief  N-divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   656      IfxScuCcu_Ndivider_95,         /**< \brief  N-divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   657      IfxScuCcu_Ndivider_96,         /**< \brief  N-divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   658      IfxScuCcu_Ndivider_97,         /**< \brief  N-divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   659      IfxScuCcu_Ndivider_98,         /**< \brief  N-divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   660      IfxScuCcu_Ndivider_99,         /**< \brief  N-divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   661      IfxScuCcu_Ndivider_100,        /**< \brief  N-divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   662      IfxScuCcu_Ndivider_101,        /**< \brief  N-divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   663      IfxScuCcu_Ndivider_102,        /**< \brief  N-divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   664      IfxScuCcu_Ndivider_103,        /**< \brief  N-divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   665      IfxScuCcu_Ndivider_104,        /**< \brief  N-divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   666      IfxScuCcu_Ndivider_105,        /**< \brief  N-divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   667      IfxScuCcu_Ndivider_106,        /**< \brief  N-divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   668      IfxScuCcu_Ndivider_107,        /**< \brief  N-divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   669      IfxScuCcu_Ndivider_108,        /**< \brief  N-divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   670      IfxScuCcu_Ndivider_109,        /**< \brief  N-divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   671      IfxScuCcu_Ndivider_110,        /**< \brief  N-divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   672      IfxScuCcu_Ndivider_111,        /**< \brief  N-divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   673      IfxScuCcu_Ndivider_112,        /**< \brief  N-divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   674      IfxScuCcu_Ndivider_113,        /**< \brief  N-divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   675      IfxScuCcu_Ndivider_114,        /**< \brief  N-divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   676      IfxScuCcu_Ndivider_115,        /**< \brief  N-divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   677      IfxScuCcu_Ndivider_116,        /**< \brief  N-divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   678      IfxScuCcu_Ndivider_117,        /**< \brief  N-divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   679      IfxScuCcu_Ndivider_118,        /**< \brief  N-divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   680      IfxScuCcu_Ndivider_119,        /**< \brief  N-divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   681      IfxScuCcu_Ndivider_120,        /**< \brief  N-divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   682      IfxScuCcu_Ndivider_121,        /**< \brief  N-divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   683      IfxScuCcu_Ndivider_122,        /**< \brief  N-divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   684      IfxScuCcu_Ndivider_123,        /**< \brief  N-divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   685      IfxScuCcu_Ndivider_124,        /**< \brief  N-divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   686      IfxScuCcu_Ndivider_125,        /**< \brief  N-divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   687      IfxScuCcu_Ndivider_126,        /**< \brief  N-divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   688      IfxScuCcu_Ndivider_127,        /**< \brief  N-divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   689      IfxScuCcu_Ndivider_128         /**< \brief  N-divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   690  } IfxScuCcu_Ndivider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   691  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   692  /** \brief MODULE_SCU.PLLCON0.B.PDIV, specifies the P-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   693   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   694  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   695  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   696      IfxScuCcu_Pdivider_1 = 0,      /**< \brief  P-divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   697      IfxScuCcu_Pdivider_2,          /**< \brief  P-divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   698      IfxScuCcu_Pdivider_3,          /**< \brief  P-divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   699      IfxScuCcu_Pdivider_4,          /**< \brief  P-divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   700      IfxScuCcu_Pdivider_5,          /**< \brief  P-divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   701      IfxScuCcu_Pdivider_6,          /**< \brief  P-divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   702      IfxScuCcu_Pdivider_7,          /**< \brief  P-divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   703      IfxScuCcu_Pdivider_8,          /**< \brief  P-divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   704      IfxScuCcu_Pdivider_9,          /**< \brief  P-divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   705      IfxScuCcu_Pdivider_10,         /**< \brief  P-divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   706      IfxScuCcu_Pdivider_11,         /**< \brief  P-divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   707      IfxScuCcu_Pdivider_12,         /**< \brief  P-divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   708      IfxScuCcu_Pdivider_13,         /**< \brief  P-divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   709      IfxScuCcu_Pdivider_14,         /**< \brief  P-divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   710      IfxScuCcu_Pdivider_15,         /**< \brief  P-divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   711      IfxScuCcu_Pdivider_16          /**< \brief  P-divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   712  } IfxScuCcu_Pdivider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   713  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   714  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   715  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   716  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   717  /*-----------------------------Data Structures--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   718  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   719  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   720  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   721   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   722  /** \brief Configuration structure type for CCUCON registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   723   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   724  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   725  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   726      uint32 value;       /**< \brief CCUCON Register value to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   727      uint32 mask;        /**< \brief CCUCON Mask to select the bit fields to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   728  } IfxScuCcu_CcuconRegConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   729  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   730  /** \brief Configuration structure type for the Pll initial step.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   731   * This structure must be used to configure the P, N and K2 dividers for initial step.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   732   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   733  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   734  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   735      uint8   pDivider;        /**< \brief P divider value for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   736      uint8   nDivider;        /**< \brief N divider value for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   737      uint8   k2Initial;       /**< \brief K2 divider value for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   738      float32 waitTime;        /**< \brief Wait time for for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   739  } IfxScuCcu_InitialStepConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   740  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   741  /** \brief Configuration structure type for the Pll Steps for current jump control.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   742   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   743  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   744  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   745      uint8                          k2Step;             /**< \brief K2 divider value for this step. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   746      float32                        waitTime;           /**< \brief Wait time for for this step. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   747      IfxScuCcu_PllStepsFunctionHook hookFunction;       /**< \brief Hook function called at the end of this step. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   748  } IfxScuCcu_PllStepsConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   749  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   750  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   751  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   752  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   753   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   754  /** \brief Configuration structure type for all the CCUCON registers to configure clock distribution.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   755   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   756  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   757  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   758      IfxScuCcu_CcuconRegConfig ccucon0;       /**< \brief CCUCON0 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   759      IfxScuCcu_CcuconRegConfig ccucon1;       /**< \brief CCUCON1 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   760      IfxScuCcu_CcuconRegConfig ccucon2;       /**< \brief CCUCON2 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   761      IfxScuCcu_CcuconRegConfig ccucon5;       /**< \brief CCUCON5 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   762      IfxScuCcu_CcuconRegConfig ccucon6;       /**< \brief CCUCON6 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   763      IfxScuCcu_CcuconRegConfig ccucon7;       /**< \brief CCUCON7 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   764  } IfxScuCcu_ClockDistributionConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   765  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   766  /** \brief Configuration structure type for the Flash waitstate configuration.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   767   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   768  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   769  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   770      uint32 value;       /**< \brief FLASH.FCON Register value to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   771      uint32 mask;        /**< \brief FLASH.FCON Mask to select the bit fields to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   772  } IfxScuCcu_FlashWaitstateConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   773  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   774  /** \brief Configuration structure type for the System Pll step.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   775   * This structure must be used to configure the P, N and K1 dividers .
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   776   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   777  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   778  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   779      uint8                       numOfPllDividerSteps;       /**< \brief Number of PLL divider steps during clock throttling. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   780      IfxScuCcu_PllStepsConfig   *pllDividerStep;             /**< \brief Pointer to the array of Pll divider step configuration. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   781      IfxScuCcu_InitialStepConfig pllInitialStep;             /**< \brief Configuration of first step which is same as internal osc frequency. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   782  } IfxScuCcu_SysPllConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   783  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   784  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   785  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   786  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   787   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   788  /** \brief Configuration structure SCU module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   789   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   790  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   791  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   792      IfxScuCcu_SysPllConfig            sysPll;                         /**< \brief System PLL configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   793      IfxScuCcu_ClockDistributionConfig clockDistribution;              /**< \brief Configuration of of bus clocks and other module clock distribution. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   794      IfxScuCcu_FlashWaitstateConfig    flashFconWaitStateConfig;       /**< \brief Configuration of flash waitstate */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   795      uint32                            xtalFrequency;                  /**< \brief Xtal Frequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   796  } IfxScuCcu_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   797  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   798  /** \brief Configuration structure for E-ray PLL
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   799   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   800  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   801  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   802      IfxScuCcu_InitialStepConfig pllInitialStep;       /**< \brief Configuration of first step which is same as internal osc frequency. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   803  } IfxScuCcu_ErayPllConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   804  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   805  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   806  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   807  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Operative
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   808   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   809  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   810  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   811  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   812  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   813  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   814  /** \brief API to get EVR Oscillator frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   815   * This API returns the constant which is specific to the ScuCcu of the controller.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   816   * \return EVR Oscillator frequency (fBACK or fEVR) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   817   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   818  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   819  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   820  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   821   * This API returns the  PLL2ERAY frequency based on the K3 divider value in PLLERAYCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   822   * \return PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   823   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   824  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   825  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   826  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   827   * This API returns the  PLL2 frequency based on the K3 divider value in PLLCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   828   * \return PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   829   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   830  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   831  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   832  /** \brief Returns the clock source selection
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   833   * \return Clock source selection
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   834   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   835  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   836  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   837  /** \brief API to get STM divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   838   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   839   * \return STM frequency (fSTM) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   840   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   841  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   842  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   843  /** \brief API to get CAN divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   844   * This API returns the fCAN frequency based on the divider value in CCUCON register and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   845   * \return STM frequency (fSTM) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   846   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   847  IFX_INLINE float32 IfxScuCcu_getCanFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   848  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   849  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   850  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   851  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   852  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   853  /** \brief API to get BAUD1 divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   854   * This API returns the based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   855   * \return Baud1 frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   856   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   857  IFX_EXTERN float32 IfxScuCcu_getBaud1Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   858  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   859  /** \brief API to get BAUD2 divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   860   * This API returns the Baud2 frequency based on the divider value in CCUCON register and the fMAX.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   861   * \return Baud2 frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   862   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   863  IFX_EXTERN float32 IfxScuCcu_getBaud2Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   864  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   865  /** \brief API to get BBB divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   866   * This API returns the BBBDivider frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   867   * \return BBB frequency (fBBB) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   868   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   869  IFX_EXTERN float32 IfxScuCcu_getBbbFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   870  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   871  /** \brief This API returns the Cpu frequency based on the divider value in CCUCON register and fSource frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   872   * \param cpu CPU number for which effective fCPU is sought
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   873   * \return Cpu[x] frequency in Hz, where x is cpu number passed as parameter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   874   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   875  IFX_EXTERN float32 IfxScuCcu_getCpuFrequency(const IfxCpu_ResourceCpu cpu);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   876  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   877  /** \brief API to get FSI2 divider frequency in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   878   * This API returns the fFSI2 frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   879   * \return FSI2 frequency (fFSI2) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   880   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   881  IFX_EXTERN float32 IfxScuCcu_getFsi2Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   882  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   883  /** \brief API to get FSI divider frequency in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   884   * This API returns the fFSI based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   885   * \return FSI frequency (fFSI) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   886   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   887  IFX_EXTERN float32 IfxScuCcu_getFsiFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   888  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   889  /** \brief API to get FMAX divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   890   * This API returns the fMax frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   891   * \return Max frequency (fMAX) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   892   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   893  IFX_EXTERN float32 IfxScuCcu_getMaxFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   894  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   895  /** \brief get source frequency fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   896   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   897   * \return Module frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   898   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   899  IFX_EXTERN float32 IfxScuCcu_getModuleFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   900  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   901  /** \brief API to get Oscillator 0 frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   902   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   903   * \return Osc0 frequency (fOSC0) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   904   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   905  IFX_EXTERN float32 IfxScuCcu_getOsc0Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   906  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   907  /** \brief API to get Oscillator 0 frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   908   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   909   * \return Osc frequency (fOSC) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   910   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   911  IFX_EXTERN float32 IfxScuCcu_getOscFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   912  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   913  /** \brief API to get actual PLL (Eray) frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   914   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   915   * \return frequency of Pll Eray (fPLLERAY) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   916   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   917  IFX_EXTERN float32 IfxScuCcu_getPllErayFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   918  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   919  /** \brief API to get actual ERAY PLL Voltage Controlled Oscillator frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   920   * This API returns the based on the divider values in PLLERAYCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   921   * \return Pll (Eray) VCO frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   922   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   923  IFX_EXTERN float32 IfxScuCcu_getPllErayVcoFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   924  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   925  /** \brief API to get actual PLL output frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   926   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   927   * \return Pll (fPLL) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   928   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   929  IFX_EXTERN float32 IfxScuCcu_getPllFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   930  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   931  /** \brief API to get actual PLL Voltage Controlled Oscillator frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   932   * This API returns the based on the divider values in PLLCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   933   * \return Pll VCO frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   934   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   935  IFX_EXTERN float32 IfxScuCcu_getPllVcoFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   936  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   937  /** \brief get source frequency fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   938   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   939   * \return Effective fSOURCE in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   940   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   941  IFX_EXTERN float32 IfxScuCcu_getSourceFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   942  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   943  /** \brief API to get SPB divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   944   * This API returns the based on fSOURCE and also on Low power divider mode and/or SPBDIV divider value in CCUCON registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   945   * \return SPB frequency (fSPB) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   946   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   947  IFX_EXTERN float32 IfxScuCcu_getSpbFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   948  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   949  /** \brief API to get SRI divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   950   * This API returns the Sri frequency based on the divider values in CCUCON registers and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   951   * \return Sri frequency (fSRI) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   952   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   953  IFX_EXTERN float32 IfxScuCcu_getSriFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   954  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   955  /** \brief API to set CPU frequency (with CPU divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   956   * This API configure CPU divider values in CCUCON registers. The actual frequency is always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   957   * \param cpu CPU number for which fCPU to be configured
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   958   * \param cpuFreq Desired CPU frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   959   * \return Actual CPU[x] frequency in Hz, where x is the cpu number passed as parameter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   960   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   961  IFX_EXTERN float32 IfxScuCcu_setCpuFrequency(IfxCpu_ResourceCpu cpu, float32 cpuFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   962  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   963  /** \brief API to configure PLL2ERAY (K3 Divider for ADC clock) for desired frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   964   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   965   * \param pll2ErayFreq PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   966   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   967   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   968  IFX_EXTERN float32 IfxScuCcu_setPll2ErayFrequency(float32 pll2ErayFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   969  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   970  /** \brief API to configure PLL2 (K3 Divider for ADC clock) for desired frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   971   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   972   * \param pll2Freq PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   973   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   974   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   975  IFX_EXTERN float32 IfxScuCcu_setPll2Frequency(float32 pll2Freq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   976  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   977  /** \brief API to set SPB frequency (with SPB divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   978   * This API configure SPB divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   979   * \param spbFreq Desired SPB frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   980   * \return Actual SPB frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   981   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   982  IFX_EXTERN float32 IfxScuCcu_setSpbFrequency(float32 spbFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   983  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   984  /** \brief API to set SRI frequency (with SRI divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   985   * This API configure Sri divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   986   * \param sriFreq Sri frequency (fSRI) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   987   * \return Actual Sri frequency (fSRI) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   988   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   989  IFX_EXTERN float32 IfxScuCcu_setSriFrequency(float32 sriFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   990  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   991  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   992  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   993  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   994   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   995  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   996  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   997  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   998  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   999  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1000  /** \brief The api calculates the system PLL divider values P, N, K based on given xtal frequency and PLL frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1001   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1002   * \param fPll Desired PLL frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1003   * \return 0- Success, 1 - Failure
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1004   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1005  IFX_EXTERN boolean IfxScuCcu_calculateSysPllDividers(IfxScuCcu_Config *cfg, uint32 fPll);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1006  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1007  /** \brief API to initialize the SCU Clock Control Unit.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1008   * This API initialize the PLL with ramp steps, BUS dividers for the configuration provided by the configuration structure.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1009   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1010   * \return Error status of the ScuCcu initialization process.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1011   * \retval TRUE: If an error occurred during initialization.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1012   * \retval FALSE: If initialization was successful.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1013   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1014  IFX_EXTERN boolean IfxScuCcu_init(const IfxScuCcu_Config *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1015  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1016  /** \brief Initializes the clock configuration with default values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1017   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1018   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1019   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1020  IFX_EXTERN void IfxScuCcu_initConfig(IfxScuCcu_Config *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1021  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1022  /** \brief API to initialize the SCU Eray Pll
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1023   * This API initialize the Eray PLL for the configuration provided by the configuration structure.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1024   * \param cfg Pointer to the configuration structure of the Eray Pll
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1025   * \return Error status of the ScuCcu Eray Pll initialization process.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1026   * \retval TRUE: If an error occurred during initialization.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1027   * \retval FALSE: If initialization was successful.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1028   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1029  IFX_EXTERN boolean IfxScuCcu_initErayPll(const IfxScuCcu_ErayPllConfig *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1030  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1031  /** \brief Initializes the clock configuration with default values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1032   * \param cfg Pointer to the configuration structure of the ScuCcuEray Pll
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1033   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1034   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1035  IFX_EXTERN void IfxScuCcu_initErayPllConfig(IfxScuCcu_ErayPllConfig *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1036  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1037  /** \brief API to switch to Backup clock from the current PLL frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1038   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1039   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1040   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1041  IFX_EXTERN void IfxScuCcu_switchToBackupClock(const IfxScuCcu_Config *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1042  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1043  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1044  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1045  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1046  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1047  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1048  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1049  /** \brief API to get GTMdivider frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1050   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1051   * return GTM frequency (fGTM) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1052   * \return Gtm Frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1053   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1054  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1055  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1056  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1057  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1058  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1059  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1060  /** \brief API to set GTM frequency (with GTM divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1061   * This API configure GTM divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1062   * \param gtmFreq Desired GTM frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1063   * \return Actual GTM frequency in HZ
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1064   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1065  IFX_EXTERN float32 IfxScuCcu_setGtmFrequency(float32 gtmFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1066  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1067  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1068  /*-------------------Global Exported Variables/Constants----------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1069  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1070  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1071  /** \brief Configuration structure for SCU CCU driver.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1072   * The values of this structure are defined as # defined macros in the implementation of Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1073   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1074  IFX_EXTERN IFX_CONST IfxScuCcu_Config IfxScuCcu_defaultClockConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1075  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1076  /** \brief Configuration structure for SCU CCU driver.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1077   * The values of this structure are defined as # defined macros in the implementation of Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1078   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1079  IFX_EXTERN IFX_CONST IfxScuCcu_ErayPllConfig IfxScuCcu_defaultErayPllConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1080  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1081  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1082  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1083  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1084  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1085  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1086  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1087      return IFXSCU_EVR_OSC_FREQUENCY;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1088  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1089  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1090  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1091  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1092  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1093      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.GTMDIV;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1094  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1095  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1096  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1097  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1098  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1099      float32 pll2ErayFrequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1100  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1101      pll2ErayFrequency = IfxScuCcu_getPllErayVcoFrequency() / (SCU_PLLERAYCON1.B.K3DIV + 1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1102  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1103      return pll2ErayFrequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1104  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1105  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1106  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1107  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1108  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1109      float32 pll2Frequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1110      pll2Frequency = IfxScuCcu_getPllVcoFrequency() / (SCU_PLLCON1.B.K3DIV + 1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1111  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1112      return pll2Frequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1113  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1114  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1116  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1117  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1118      return (IfxScu_CCUCON0_CLKSEL)SCU_CCUCON0.B.CLKSEL;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1119  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1120  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1122  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1123  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1124      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.STMDIV;
	and	d15,#15
	ld.w	d1,[a2]
.L313:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     2   * \file IfxScuCcu.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     3   * \brief SCU  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     4   * \ingroup IfxLld_Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    45   * \defgroup IfxLld_Scu SCU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    46   * \addtogroup IfxLld_Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    47   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    48   * \defgroup IfxLld_ScuCcu How to use the Scu Clock driver?
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    49   * \addtogroup IfxLld_ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    50   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    51   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    52   * The Scu Clock control unit driver provides a default configuration for pll and Clock initialisation and set of peripheral clock configuration functions.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    53   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    54   * In the following sections it will be described, how to integrate the driver into the application framework.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    55   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    56   * \section IfxLld_ScuCcu_Std_Preparation Preparation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    57   * \subsection IfxLld_ScuCcu_Std_Include Include Files
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    58   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    59   * Include following header file into your C code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    60   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    61   * #include <Scu/Std/IfxScuCcu.h>
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    62   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    63   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    64   * \subsection IfxLld_ScuCcu_Std_Variables Variables
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    65   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    66   * Declare the Clock Configuration variables in your C code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    67   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    68   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    69   * // used globally
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    70   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    71   * // configuration for the PLL  steps
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    72   * static IfxScuCcu_PllStepsConfig IfxScuCcu_testPllConfigSteps[] = {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    73   *     IFXSCU_CFG_PLL_STEPS
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    74   * };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    75   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    76   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    77   * // Default configuration for the Clock Configuration
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    78   * IfxScuCcu_Config                      IfxScuCcu_testClockConfig = {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    79   *     {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    80   *        sizeof(IfxScuCcu_testPllConfigSteps) / sizeof(IfxScuCcu_PllStepsConfig),
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    81   *        (IfxScuCcu_PllStepsConfig *)IfxScuCcu_testPllConfigSteps,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    82   *        IFXSCU_CFG_PLL_INITIAL_STEP,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    83   *     },
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    84   *     IFXSCU_CFG_CLK_DISTRIBUTION,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    85   *     IFXSCU_CFG_FLASH_WAITSTATE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    86   *     IFX_CFG_SCU_XTAL_FREQUENCY
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    87   * };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    88   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    89   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    90   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    91   * \subsection IfxLld_ScuCcu_Std_Init Module Initialisation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    92   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    93   * The module initialisation can be done in the same function. Here an example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    94   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    95   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    96   *        // standard PLL & clock initialisation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    97   *         IfxScuCcu_init(&IfxScuCcu_testClockConfig);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    99   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   100   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   101   *    The PLL and clocks are now initialised based on the IFXSCU_CFG_XTAL_FREQ and  IFXSCU_CFG_PLL_FREQ values configured in Ifx_Cfg.h.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   102   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   103   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   104   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   105   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   106   * \defgroup IfxLld_Scu_Std_Ccu Ccu Basic Functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   107   * \ingroup IfxLld_Scu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   108   * \defgroup IfxLld_Scu_Std_Ccu_Ccu Clock Control Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   109   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   110   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Operative Clock Control Operative Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   111   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   112   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Configuration Clock Control Configuration Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   113   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   114   * \defgroup IfxLld_Scu_Std_Ccu_Enum Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   115   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   116   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   117  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   118  #ifndef IFXSCUCCU_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   119  #define IFXSCUCCU_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   120  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   121  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   122  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   123  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   124  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   125  #include "_Impl/IfxScu_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   126  #include "Scu/Std/IfxScuWdt.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   127  #include "Cpu/Std/IfxCpu.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   128  #include "IfxStm_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   129  #include "IfxScu_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   130  #include "IfxFlash_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   131  #include "_PinMap/IfxScu_PinMap.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   132  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   133  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   134  /*-----------------------------------Macros-----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   135  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   136  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   137  /** \brief Oscillator stability check timeout count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   138   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   139  #define IFXSCUCCU_OSC_STABLECHK_TIME (640)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   140  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   141  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   142  /*------------------------------Type Definitions------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   143  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   144  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   145  /** \brief Function pointer type for the hooks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   146   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   147   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   148  typedef void (*IfxScuCcu_PllStepsFunctionHook)(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   149  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   150  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   151  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   152  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   153  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   154  /** \addtogroup IfxLld_Scu_Std_Ccu_Enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   155   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   156  /** \brief MODULE_SCU.PLLCON1.B.K1DIV, specifies the K1-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   157   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   158  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   159  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   160      IfxScuCcu_K1divider_1 = 0,      /**< \brief K1-Divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   161      IfxScuCcu_K1divider_2,          /**< \brief K1-Divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   162      IfxScuCcu_K1divider_3,          /**< \brief K1-Divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   163      IfxScuCcu_K1divider_4,          /**< \brief K1-Divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   164      IfxScuCcu_K1divider_5,          /**< \brief K1-Divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   165      IfxScuCcu_K1divider_6,          /**< \brief K1-Divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   166      IfxScuCcu_K1divider_7,          /**< \brief K1-Divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   167      IfxScuCcu_K1divider_8,          /**< \brief K1-Divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   168      IfxScuCcu_K1divider_9,          /**< \brief K1-Divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   169      IfxScuCcu_K1divider_10,         /**< \brief K1-Divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   170      IfxScuCcu_K1divider_11,         /**< \brief K1-Divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   171      IfxScuCcu_K1divider_12,         /**< \brief K1-Divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   172      IfxScuCcu_K1divider_13,         /**< \brief K1-Divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   173      IfxScuCcu_K1divider_14,         /**< \brief K1-Divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   174      IfxScuCcu_K1divider_15,         /**< \brief K1-Divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   175      IfxScuCcu_K1divider_16,         /**< \brief K1-Divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   176      IfxScuCcu_K1divider_17,         /**< \brief K1-Divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   177      IfxScuCcu_K1divider_18,         /**< \brief K1-Divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   178      IfxScuCcu_K1divider_19,         /**< \brief K1-Divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   179      IfxScuCcu_K1divider_20,         /**< \brief K1-Divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   180      IfxScuCcu_K1divider_21,         /**< \brief K1-Divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   181      IfxScuCcu_K1divider_22,         /**< \brief K1-Divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   182      IfxScuCcu_K1divider_23,         /**< \brief K1-Divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   183      IfxScuCcu_K1divider_24,         /**< \brief K1-Divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   184      IfxScuCcu_K1divider_25,         /**< \brief K1-Divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   185      IfxScuCcu_K1divider_26,         /**< \brief K1-Divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   186      IfxScuCcu_K1divider_27,         /**< \brief K1-Divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   187      IfxScuCcu_K1divider_28,         /**< \brief K1-Divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   188      IfxScuCcu_K1divider_29,         /**< \brief K1-Divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   189      IfxScuCcu_K1divider_30,         /**< \brief K1-Divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   190      IfxScuCcu_K1divider_31,         /**< \brief K1-Divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   191      IfxScuCcu_K1divider_32,         /**< \brief K1-Divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   192      IfxScuCcu_K1divider_33,         /**< \brief K1-Divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   193      IfxScuCcu_K1divider_34,         /**< \brief K1-Divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   194      IfxScuCcu_K1divider_35,         /**< \brief K1-Divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   195      IfxScuCcu_K1divider_36,         /**< \brief K1-Divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   196      IfxScuCcu_K1divider_37,         /**< \brief K1-Divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   197      IfxScuCcu_K1divider_38,         /**< \brief K1-Divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   198      IfxScuCcu_K1divider_39,         /**< \brief K1-Divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   199      IfxScuCcu_K1divider_40,         /**< \brief K1-Divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   200      IfxScuCcu_K1divider_41,         /**< \brief K1-Divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   201      IfxScuCcu_K1divider_42,         /**< \brief K1-Divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   202      IfxScuCcu_K1divider_43,         /**< \brief K1-Divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   203      IfxScuCcu_K1divider_44,         /**< \brief K1-Divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   204      IfxScuCcu_K1divider_45,         /**< \brief K1-Divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   205      IfxScuCcu_K1divider_46,         /**< \brief K1-Divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   206      IfxScuCcu_K1divider_47,         /**< \brief K1-Divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   207      IfxScuCcu_K1divider_48,         /**< \brief K1-Divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   208      IfxScuCcu_K1divider_49,         /**< \brief K1-Divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   209      IfxScuCcu_K1divider_50,         /**< \brief K1-Divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   210      IfxScuCcu_K1divider_51,         /**< \brief K1-Divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   211      IfxScuCcu_K1divider_52,         /**< \brief K1-Divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   212      IfxScuCcu_K1divider_53,         /**< \brief K1-Divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   213      IfxScuCcu_K1divider_54,         /**< \brief K1-Divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   214      IfxScuCcu_K1divider_55,         /**< \brief K1-Divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   215      IfxScuCcu_K1divider_56,         /**< \brief K1-Divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   216      IfxScuCcu_K1divider_57,         /**< \brief K1-Divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   217      IfxScuCcu_K1divider_58,         /**< \brief K1-Divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   218      IfxScuCcu_K1divider_59,         /**< \brief K1-Divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   219      IfxScuCcu_K1divider_60,         /**< \brief K1-Divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   220      IfxScuCcu_K1divider_61,         /**< \brief K1-Divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   221      IfxScuCcu_K1divider_62,         /**< \brief K1-Divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   222      IfxScuCcu_K1divider_63,         /**< \brief K1-Divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   223      IfxScuCcu_K1divider_64,         /**< \brief K1-Divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   224      IfxScuCcu_K1divider_65,         /**< \brief K1-Divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   225      IfxScuCcu_K1divider_66,         /**< \brief K1-Divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   226      IfxScuCcu_K1divider_67,         /**< \brief K1-Divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   227      IfxScuCcu_K1divider_68,         /**< \brief K1-Divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   228      IfxScuCcu_K1divider_69,         /**< \brief K1-Divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   229      IfxScuCcu_K1divider_70,         /**< \brief K1-Divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   230      IfxScuCcu_K1divider_71,         /**< \brief K1-Divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   231      IfxScuCcu_K1divider_72,         /**< \brief K1-Divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   232      IfxScuCcu_K1divider_73,         /**< \brief K1-Divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   233      IfxScuCcu_K1divider_74,         /**< \brief K1-Divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   234      IfxScuCcu_K1divider_75,         /**< \brief K1-Divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   235      IfxScuCcu_K1divider_76,         /**< \brief K1-Divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   236      IfxScuCcu_K1divider_77,         /**< \brief K1-Divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   237      IfxScuCcu_K1divider_78,         /**< \brief K1-Divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   238      IfxScuCcu_K1divider_79,         /**< \brief K1-Divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   239      IfxScuCcu_K1divider_80,         /**< \brief K1-Divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   240      IfxScuCcu_K1divider_81,         /**< \brief K1-Divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   241      IfxScuCcu_K1divider_82,         /**< \brief K1-Divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   242      IfxScuCcu_K1divider_83,         /**< \brief K1-Divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   243      IfxScuCcu_K1divider_84,         /**< \brief K1-Divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   244      IfxScuCcu_K1divider_85,         /**< \brief K1-Divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   245      IfxScuCcu_K1divider_86,         /**< \brief K1-Divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   246      IfxScuCcu_K1divider_87,         /**< \brief K1-Divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   247      IfxScuCcu_K1divider_88,         /**< \brief K1-Divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   248      IfxScuCcu_K1divider_89,         /**< \brief K1-Divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   249      IfxScuCcu_K1divider_90,         /**< \brief K1-Divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   250      IfxScuCcu_K1divider_91,         /**< \brief K1-Divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   251      IfxScuCcu_K1divider_92,         /**< \brief K1-Divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   252      IfxScuCcu_K1divider_93,         /**< \brief K1-Divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   253      IfxScuCcu_K1divider_94,         /**< \brief K1-Divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   254      IfxScuCcu_K1divider_95,         /**< \brief K1-Divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   255      IfxScuCcu_K1divider_96,         /**< \brief K1-Divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   256      IfxScuCcu_K1divider_97,         /**< \brief K1-Divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   257      IfxScuCcu_K1divider_98,         /**< \brief K1-Divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   258      IfxScuCcu_K1divider_99,         /**< \brief K1-Divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   259      IfxScuCcu_K1divider_100,        /**< \brief K1-Divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   260      IfxScuCcu_K1divider_101,        /**< \brief K1-Divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   261      IfxScuCcu_K1divider_102,        /**< \brief K1-Divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   262      IfxScuCcu_K1divider_103,        /**< \brief K1-Divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   263      IfxScuCcu_K1divider_104,        /**< \brief K1-Divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   264      IfxScuCcu_K1divider_105,        /**< \brief K1-Divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   265      IfxScuCcu_K1divider_106,        /**< \brief K1-Divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   266      IfxScuCcu_K1divider_107,        /**< \brief K1-Divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   267      IfxScuCcu_K1divider_108,        /**< \brief K1-Divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   268      IfxScuCcu_K1divider_109,        /**< \brief K1-Divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   269      IfxScuCcu_K1divider_110,        /**< \brief K1-Divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   270      IfxScuCcu_K1divider_111,        /**< \brief K1-Divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   271      IfxScuCcu_K1divider_112,        /**< \brief K1-Divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   272      IfxScuCcu_K1divider_113,        /**< \brief K1-Divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   273      IfxScuCcu_K1divider_114,        /**< \brief K1-Divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   274      IfxScuCcu_K1divider_115,        /**< \brief K1-Divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   275      IfxScuCcu_K1divider_116,        /**< \brief K1-Divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   276      IfxScuCcu_K1divider_117,        /**< \brief K1-Divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   277      IfxScuCcu_K1divider_118,        /**< \brief K1-Divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   278      IfxScuCcu_K1divider_119,        /**< \brief K1-Divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   279      IfxScuCcu_K1divider_120,        /**< \brief K1-Divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   280      IfxScuCcu_K1divider_121,        /**< \brief K1-Divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   281      IfxScuCcu_K1divider_122,        /**< \brief K1-Divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   282      IfxScuCcu_K1divider_123,        /**< \brief K1-Divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   283      IfxScuCcu_K1divider_124,        /**< \brief K1-Divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   284      IfxScuCcu_K1divider_125,        /**< \brief K1-Divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   285      IfxScuCcu_K1divider_126,        /**< \brief K1-Divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   286      IfxScuCcu_K1divider_127,        /**< \brief K1-Divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   287      IfxScuCcu_K1divider_128         /**< \brief K1-Divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   288  } IfxScuCcu_K1divider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   289  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   290  /** \brief MODULE_SCU.PLLCON1.B.K2DIV, specifies the K2-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   292  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   294      IfxScuCcu_K2divider_1 = 0,      /**< \brief K2-Divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   295      IfxScuCcu_K2divider_2,          /**< \brief K2-Divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   296      IfxScuCcu_K2divider_3,          /**< \brief K2-Divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   297      IfxScuCcu_K2divider_4,          /**< \brief K2-Divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   298      IfxScuCcu_K2divider_5,          /**< \brief K2-Divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   299      IfxScuCcu_K2divider_6,          /**< \brief K2-Divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   300      IfxScuCcu_K2divider_7,          /**< \brief K2-Divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   301      IfxScuCcu_K2divider_8,          /**< \brief K2-Divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   302      IfxScuCcu_K2divider_9,          /**< \brief K2-Divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   303      IfxScuCcu_K2divider_10,         /**< \brief K2-Divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   304      IfxScuCcu_K2divider_11,         /**< \brief K2-Divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   305      IfxScuCcu_K2divider_12,         /**< \brief K2-Divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   306      IfxScuCcu_K2divider_13,         /**< \brief K2-Divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   307      IfxScuCcu_K2divider_14,         /**< \brief K2-Divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   308      IfxScuCcu_K2divider_15,         /**< \brief K2-Divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   309      IfxScuCcu_K2divider_16,         /**< \brief K2-Divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   310      IfxScuCcu_K2divider_17,         /**< \brief K2-Divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   311      IfxScuCcu_K2divider_18,         /**< \brief K2-Divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   312      IfxScuCcu_K2divider_19,         /**< \brief K2-Divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   313      IfxScuCcu_K2divider_20,         /**< \brief K2-Divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   314      IfxScuCcu_K2divider_21,         /**< \brief K2-Divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   315      IfxScuCcu_K2divider_22,         /**< \brief K2-Divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   316      IfxScuCcu_K2divider_23,         /**< \brief K2-Divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   317      IfxScuCcu_K2divider_24,         /**< \brief K2-Divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   318      IfxScuCcu_K2divider_25,         /**< \brief K2-Divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   319      IfxScuCcu_K2divider_26,         /**< \brief K2-Divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   320      IfxScuCcu_K2divider_27,         /**< \brief K2-Divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   321      IfxScuCcu_K2divider_28,         /**< \brief K2-Divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   322      IfxScuCcu_K2divider_29,         /**< \brief K2-Divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   323      IfxScuCcu_K2divider_30,         /**< \brief K2-Divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   324      IfxScuCcu_K2divider_31,         /**< \brief K2-Divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   325      IfxScuCcu_K2divider_32,         /**< \brief K2-Divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   326      IfxScuCcu_K2divider_33,         /**< \brief K2-Divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   327      IfxScuCcu_K2divider_34,         /**< \brief K2-Divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   328      IfxScuCcu_K2divider_35,         /**< \brief K2-Divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   329      IfxScuCcu_K2divider_36,         /**< \brief K2-Divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   330      IfxScuCcu_K2divider_37,         /**< \brief K2-Divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   331      IfxScuCcu_K2divider_38,         /**< \brief K2-Divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   332      IfxScuCcu_K2divider_39,         /**< \brief K2-Divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   333      IfxScuCcu_K2divider_40,         /**< \brief K2-Divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   334      IfxScuCcu_K2divider_41,         /**< \brief K2-Divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   335      IfxScuCcu_K2divider_42,         /**< \brief K2-Divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   336      IfxScuCcu_K2divider_43,         /**< \brief K2-Divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   337      IfxScuCcu_K2divider_44,         /**< \brief K2-Divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   338      IfxScuCcu_K2divider_45,         /**< \brief K2-Divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   339      IfxScuCcu_K2divider_46,         /**< \brief K2-Divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   340      IfxScuCcu_K2divider_47,         /**< \brief K2-Divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   341      IfxScuCcu_K2divider_48,         /**< \brief K2-Divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   342      IfxScuCcu_K2divider_49,         /**< \brief K2-Divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   343      IfxScuCcu_K2divider_50,         /**< \brief K2-Divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   344      IfxScuCcu_K2divider_51,         /**< \brief K2-Divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   345      IfxScuCcu_K2divider_52,         /**< \brief K2-Divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   346      IfxScuCcu_K2divider_53,         /**< \brief K2-Divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   347      IfxScuCcu_K2divider_54,         /**< \brief K2-Divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   348      IfxScuCcu_K2divider_55,         /**< \brief K2-Divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   349      IfxScuCcu_K2divider_56,         /**< \brief K2-Divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   350      IfxScuCcu_K2divider_57,         /**< \brief K2-Divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   351      IfxScuCcu_K2divider_58,         /**< \brief K2-Divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   352      IfxScuCcu_K2divider_59,         /**< \brief K2-Divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   353      IfxScuCcu_K2divider_60,         /**< \brief K2-Divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   354      IfxScuCcu_K2divider_61,         /**< \brief K2-Divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   355      IfxScuCcu_K2divider_62,         /**< \brief K2-Divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   356      IfxScuCcu_K2divider_63,         /**< \brief K2-Divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   357      IfxScuCcu_K2divider_64,         /**< \brief K2-Divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   358      IfxScuCcu_K2divider_65,         /**< \brief K2-Divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   359      IfxScuCcu_K2divider_66,         /**< \brief K2-Divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   360      IfxScuCcu_K2divider_67,         /**< \brief K2-Divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   361      IfxScuCcu_K2divider_68,         /**< \brief K2-Divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   362      IfxScuCcu_K2divider_69,         /**< \brief K2-Divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   363      IfxScuCcu_K2divider_70,         /**< \brief K2-Divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   364      IfxScuCcu_K2divider_71,         /**< \brief K2-Divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   365      IfxScuCcu_K2divider_72,         /**< \brief K2-Divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   366      IfxScuCcu_K2divider_73,         /**< \brief K2-Divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   367      IfxScuCcu_K2divider_74,         /**< \brief K2-Divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   368      IfxScuCcu_K2divider_75,         /**< \brief K2-Divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   369      IfxScuCcu_K2divider_76,         /**< \brief K2-Divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   370      IfxScuCcu_K2divider_77,         /**< \brief K2-Divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   371      IfxScuCcu_K2divider_78,         /**< \brief K2-Divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   372      IfxScuCcu_K2divider_79,         /**< \brief K2-Divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   373      IfxScuCcu_K2divider_80,         /**< \brief K2-Divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   374      IfxScuCcu_K2divider_81,         /**< \brief K2-Divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   375      IfxScuCcu_K2divider_82,         /**< \brief K2-Divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   376      IfxScuCcu_K2divider_83,         /**< \brief K2-Divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   377      IfxScuCcu_K2divider_84,         /**< \brief K2-Divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   378      IfxScuCcu_K2divider_85,         /**< \brief K2-Divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   379      IfxScuCcu_K2divider_86,         /**< \brief K2-Divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   380      IfxScuCcu_K2divider_87,         /**< \brief K2-Divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   381      IfxScuCcu_K2divider_88,         /**< \brief K2-Divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   382      IfxScuCcu_K2divider_89,         /**< \brief K2-Divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   383      IfxScuCcu_K2divider_90,         /**< \brief K2-Divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   384      IfxScuCcu_K2divider_91,         /**< \brief K2-Divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   385      IfxScuCcu_K2divider_92,         /**< \brief K2-Divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   386      IfxScuCcu_K2divider_93,         /**< \brief K2-Divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   387      IfxScuCcu_K2divider_94,         /**< \brief K2-Divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   388      IfxScuCcu_K2divider_95,         /**< \brief K2-Divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   389      IfxScuCcu_K2divider_96,         /**< \brief K2-Divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   390      IfxScuCcu_K2divider_97,         /**< \brief K2-Divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   391      IfxScuCcu_K2divider_98,         /**< \brief K2-Divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   392      IfxScuCcu_K2divider_99,         /**< \brief K2-Divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   393      IfxScuCcu_K2divider_100,        /**< \brief K2-Divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   394      IfxScuCcu_K2divider_101,        /**< \brief K2-Divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   395      IfxScuCcu_K2divider_102,        /**< \brief K2-Divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   396      IfxScuCcu_K2divider_103,        /**< \brief K2-Divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   397      IfxScuCcu_K2divider_104,        /**< \brief K2-Divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   398      IfxScuCcu_K2divider_105,        /**< \brief K2-Divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   399      IfxScuCcu_K2divider_106,        /**< \brief K2-Divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   400      IfxScuCcu_K2divider_107,        /**< \brief K2-Divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   401      IfxScuCcu_K2divider_108,        /**< \brief K2-Divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   402      IfxScuCcu_K2divider_109,        /**< \brief K2-Divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   403      IfxScuCcu_K2divider_110,        /**< \brief K2-Divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   404      IfxScuCcu_K2divider_111,        /**< \brief K2-Divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   405      IfxScuCcu_K2divider_112,        /**< \brief K2-Divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   406      IfxScuCcu_K2divider_113,        /**< \brief K2-Divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   407      IfxScuCcu_K2divider_114,        /**< \brief K2-Divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   408      IfxScuCcu_K2divider_115,        /**< \brief K2-Divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   409      IfxScuCcu_K2divider_116,        /**< \brief K2-Divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   410      IfxScuCcu_K2divider_117,        /**< \brief K2-Divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   411      IfxScuCcu_K2divider_118,        /**< \brief K2-Divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   412      IfxScuCcu_K2divider_119,        /**< \brief K2-Divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   413      IfxScuCcu_K2divider_120,        /**< \brief K2-Divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   414      IfxScuCcu_K2divider_121,        /**< \brief K2-Divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   415      IfxScuCcu_K2divider_122,        /**< \brief K2-Divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   416      IfxScuCcu_K2divider_123,        /**< \brief K2-Divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   417      IfxScuCcu_K2divider_124,        /**< \brief K2-Divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   418      IfxScuCcu_K2divider_125,        /**< \brief K2-Divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   419      IfxScuCcu_K2divider_126,        /**< \brief K2-Divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   420      IfxScuCcu_K2divider_127,        /**< \brief K2-Divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   421      IfxScuCcu_K2divider_128         /**< \brief K2-Divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   422  } IfxScuCcu_K2divider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   424  /** \brief MODULE_SCU.PLLCON1.B.K3DIV, specifies the K3-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   425   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   426  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   427  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   428      IfxScuCcu_K3divider_1 = 0,      /**< \brief K3-Divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   429      IfxScuCcu_K3divider_2,          /**< \brief K3-Divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   430      IfxScuCcu_K3divider_3,          /**< \brief K3-Divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   431      IfxScuCcu_K3divider_4,          /**< \brief K3-Divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   432      IfxScuCcu_K3divider_5,          /**< \brief K3-Divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   433      IfxScuCcu_K3divider_6,          /**< \brief K3-Divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   434      IfxScuCcu_K3divider_7,          /**< \brief K3-Divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   435      IfxScuCcu_K3divider_8,          /**< \brief K3-Divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   436      IfxScuCcu_K3divider_9,          /**< \brief K3-Divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   437      IfxScuCcu_K3divider_10,         /**< \brief K3-Divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   438      IfxScuCcu_K3divider_11,         /**< \brief K3-Divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   439      IfxScuCcu_K3divider_12,         /**< \brief K3-Divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   440      IfxScuCcu_K3divider_13,         /**< \brief K3-Divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   441      IfxScuCcu_K3divider_14,         /**< \brief K3-Divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   442      IfxScuCcu_K3divider_15,         /**< \brief K3-Divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   443      IfxScuCcu_K3divider_16,         /**< \brief K3-Divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   444      IfxScuCcu_K3divider_17,         /**< \brief K3-Divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   445      IfxScuCcu_K3divider_18,         /**< \brief K3-Divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   446      IfxScuCcu_K3divider_19,         /**< \brief K3-Divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   447      IfxScuCcu_K3divider_20,         /**< \brief K3-Divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   448      IfxScuCcu_K3divider_21,         /**< \brief K3-Divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   449      IfxScuCcu_K3divider_22,         /**< \brief K3-Divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   450      IfxScuCcu_K3divider_23,         /**< \brief K3-Divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   451      IfxScuCcu_K3divider_24,         /**< \brief K3-Divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   452      IfxScuCcu_K3divider_25,         /**< \brief K3-Divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   453      IfxScuCcu_K3divider_26,         /**< \brief K3-Divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   454      IfxScuCcu_K3divider_27,         /**< \brief K3-Divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   455      IfxScuCcu_K3divider_28,         /**< \brief K3-Divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   456      IfxScuCcu_K3divider_29,         /**< \brief K3-Divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   457      IfxScuCcu_K3divider_30,         /**< \brief K3-Divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   458      IfxScuCcu_K3divider_31,         /**< \brief K3-Divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   459      IfxScuCcu_K3divider_32,         /**< \brief K3-Divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   460      IfxScuCcu_K3divider_33,         /**< \brief K3-Divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   461      IfxScuCcu_K3divider_34,         /**< \brief K3-Divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   462      IfxScuCcu_K3divider_35,         /**< \brief K3-Divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   463      IfxScuCcu_K3divider_36,         /**< \brief K3-Divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   464      IfxScuCcu_K3divider_37,         /**< \brief K3-Divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   465      IfxScuCcu_K3divider_38,         /**< \brief K3-Divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   466      IfxScuCcu_K3divider_39,         /**< \brief K3-Divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   467      IfxScuCcu_K3divider_40,         /**< \brief K3-Divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   468      IfxScuCcu_K3divider_41,         /**< \brief K3-Divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   469      IfxScuCcu_K3divider_42,         /**< \brief K3-Divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   470      IfxScuCcu_K3divider_43,         /**< \brief K3-Divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   471      IfxScuCcu_K3divider_44,         /**< \brief K3-Divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   472      IfxScuCcu_K3divider_45,         /**< \brief K3-Divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   473      IfxScuCcu_K3divider_46,         /**< \brief K3-Divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   474      IfxScuCcu_K3divider_47,         /**< \brief K3-Divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   475      IfxScuCcu_K3divider_48,         /**< \brief K3-Divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   476      IfxScuCcu_K3divider_49,         /**< \brief K3-Divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   477      IfxScuCcu_K3divider_50,         /**< \brief K3-Divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   478      IfxScuCcu_K3divider_51,         /**< \brief K3-Divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   479      IfxScuCcu_K3divider_52,         /**< \brief K3-Divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   480      IfxScuCcu_K3divider_53,         /**< \brief K3-Divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   481      IfxScuCcu_K3divider_54,         /**< \brief K3-Divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   482      IfxScuCcu_K3divider_55,         /**< \brief K3-Divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   483      IfxScuCcu_K3divider_56,         /**< \brief K3-Divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   484      IfxScuCcu_K3divider_57,         /**< \brief K3-Divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   485      IfxScuCcu_K3divider_58,         /**< \brief K3-Divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   486      IfxScuCcu_K3divider_59,         /**< \brief K3-Divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   487      IfxScuCcu_K3divider_60,         /**< \brief K3-Divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   488      IfxScuCcu_K3divider_61,         /**< \brief K3-Divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   489      IfxScuCcu_K3divider_62,         /**< \brief K3-Divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   490      IfxScuCcu_K3divider_63,         /**< \brief K3-Divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   491      IfxScuCcu_K3divider_64,         /**< \brief K3-Divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   492      IfxScuCcu_K3divider_65,         /**< \brief K3-Divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   493      IfxScuCcu_K3divider_66,         /**< \brief K3-Divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   494      IfxScuCcu_K3divider_67,         /**< \brief K3-Divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   495      IfxScuCcu_K3divider_68,         /**< \brief K3-Divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   496      IfxScuCcu_K3divider_69,         /**< \brief K3-Divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   497      IfxScuCcu_K3divider_70,         /**< \brief K3-Divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   498      IfxScuCcu_K3divider_71,         /**< \brief K3-Divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   499      IfxScuCcu_K3divider_72,         /**< \brief K3-Divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   500      IfxScuCcu_K3divider_73,         /**< \brief K3-Divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   501      IfxScuCcu_K3divider_74,         /**< \brief K3-Divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   502      IfxScuCcu_K3divider_75,         /**< \brief K3-Divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   503      IfxScuCcu_K3divider_76,         /**< \brief K3-Divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   504      IfxScuCcu_K3divider_77,         /**< \brief K3-Divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   505      IfxScuCcu_K3divider_78,         /**< \brief K3-Divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   506      IfxScuCcu_K3divider_79,         /**< \brief K3-Divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   507      IfxScuCcu_K3divider_80,         /**< \brief K3-Divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   508      IfxScuCcu_K3divider_81,         /**< \brief K3-Divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   509      IfxScuCcu_K3divider_82,         /**< \brief K3-Divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   510      IfxScuCcu_K3divider_83,         /**< \brief K3-Divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   511      IfxScuCcu_K3divider_84,         /**< \brief K3-Divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   512      IfxScuCcu_K3divider_85,         /**< \brief K3-Divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   513      IfxScuCcu_K3divider_86,         /**< \brief K3-Divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   514      IfxScuCcu_K3divider_87,         /**< \brief K3-Divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   515      IfxScuCcu_K3divider_88,         /**< \brief K3-Divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   516      IfxScuCcu_K3divider_89,         /**< \brief K3-Divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   517      IfxScuCcu_K3divider_90,         /**< \brief K3-Divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   518      IfxScuCcu_K3divider_91,         /**< \brief K3-Divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   519      IfxScuCcu_K3divider_92,         /**< \brief K3-Divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   520      IfxScuCcu_K3divider_93,         /**< \brief K3-Divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   521      IfxScuCcu_K3divider_94,         /**< \brief K3-Divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   522      IfxScuCcu_K3divider_95,         /**< \brief K3-Divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   523      IfxScuCcu_K3divider_96,         /**< \brief K3-Divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   524      IfxScuCcu_K3divider_97,         /**< \brief K3-Divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   525      IfxScuCcu_K3divider_98,         /**< \brief K3-Divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   526      IfxScuCcu_K3divider_99,         /**< \brief K3-Divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   527      IfxScuCcu_K3divider_100,        /**< \brief K3-Divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   528      IfxScuCcu_K3divider_101,        /**< \brief K3-Divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   529      IfxScuCcu_K3divider_102,        /**< \brief K3-Divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   530      IfxScuCcu_K3divider_103,        /**< \brief K3-Divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   531      IfxScuCcu_K3divider_104,        /**< \brief K3-Divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   532      IfxScuCcu_K3divider_105,        /**< \brief K3-Divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   533      IfxScuCcu_K3divider_106,        /**< \brief K3-Divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   534      IfxScuCcu_K3divider_107,        /**< \brief K3-Divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   535      IfxScuCcu_K3divider_108,        /**< \brief K3-Divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   536      IfxScuCcu_K3divider_109,        /**< \brief K3-Divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   537      IfxScuCcu_K3divider_110,        /**< \brief K3-Divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   538      IfxScuCcu_K3divider_111,        /**< \brief K3-Divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   539      IfxScuCcu_K3divider_112,        /**< \brief K3-Divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   540      IfxScuCcu_K3divider_113,        /**< \brief K3-Divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   541      IfxScuCcu_K3divider_114,        /**< \brief K3-Divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   542      IfxScuCcu_K3divider_115,        /**< \brief K3-Divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   543      IfxScuCcu_K3divider_116,        /**< \brief K3-Divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   544      IfxScuCcu_K3divider_117,        /**< \brief K3-Divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   545      IfxScuCcu_K3divider_118,        /**< \brief K3-Divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   546      IfxScuCcu_K3divider_119,        /**< \brief K3-Divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   547      IfxScuCcu_K3divider_120,        /**< \brief K3-Divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   548      IfxScuCcu_K3divider_121,        /**< \brief K3-Divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   549      IfxScuCcu_K3divider_122,        /**< \brief K3-Divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   550      IfxScuCcu_K3divider_123,        /**< \brief K3-Divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   551      IfxScuCcu_K3divider_124,        /**< \brief K3-Divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   552      IfxScuCcu_K3divider_125,        /**< \brief K3-Divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   553      IfxScuCcu_K3divider_126,        /**< \brief K3-Divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   554      IfxScuCcu_K3divider_127,        /**< \brief K3-Divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   555      IfxScuCcu_K3divider_128         /**< \brief K3-Divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   556  } IfxScuCcu_K3divider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   557  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   558  /** \brief MODULE_SCU.PLLCON0.B.NDIV, specifies the N-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   559   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   560  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   561  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   562      IfxScuCcu_Ndivider_1 = 0,      /**< \brief  N-divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   563      IfxScuCcu_Ndivider_2,          /**< \brief  N-divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   564      IfxScuCcu_Ndivider_3,          /**< \brief  N-divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   565      IfxScuCcu_Ndivider_4,          /**< \brief  N-divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   566      IfxScuCcu_Ndivider_5,          /**< \brief  N-divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   567      IfxScuCcu_Ndivider_6,          /**< \brief  N-divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   568      IfxScuCcu_Ndivider_7,          /**< \brief  N-divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   569      IfxScuCcu_Ndivider_8,          /**< \brief  N-divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   570      IfxScuCcu_Ndivider_9,          /**< \brief  N-divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   571      IfxScuCcu_Ndivider_10,         /**< \brief  N-divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   572      IfxScuCcu_Ndivider_11,         /**< \brief  N-divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   573      IfxScuCcu_Ndivider_12,         /**< \brief  N-divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   574      IfxScuCcu_Ndivider_13,         /**< \brief  N-divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   575      IfxScuCcu_Ndivider_14,         /**< \brief  N-divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   576      IfxScuCcu_Ndivider_15,         /**< \brief  N-divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   577      IfxScuCcu_Ndivider_16,         /**< \brief  N-divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   578      IfxScuCcu_Ndivider_17,         /**< \brief  N-divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   579      IfxScuCcu_Ndivider_18,         /**< \brief  N-divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   580      IfxScuCcu_Ndivider_19,         /**< \brief  N-divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   581      IfxScuCcu_Ndivider_20,         /**< \brief  N-divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   582      IfxScuCcu_Ndivider_21,         /**< \brief  N-divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   583      IfxScuCcu_Ndivider_22,         /**< \brief  N-divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   584      IfxScuCcu_Ndivider_23,         /**< \brief  N-divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   585      IfxScuCcu_Ndivider_24,         /**< \brief  N-divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   586      IfxScuCcu_Ndivider_25,         /**< \brief  N-divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   587      IfxScuCcu_Ndivider_26,         /**< \brief  N-divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   588      IfxScuCcu_Ndivider_27,         /**< \brief  N-divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   589      IfxScuCcu_Ndivider_28,         /**< \brief  N-divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   590      IfxScuCcu_Ndivider_29,         /**< \brief  N-divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   591      IfxScuCcu_Ndivider_30,         /**< \brief  N-divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   592      IfxScuCcu_Ndivider_31,         /**< \brief  N-divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   593      IfxScuCcu_Ndivider_32,         /**< \brief  N-divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   594      IfxScuCcu_Ndivider_33,         /**< \brief  N-divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   595      IfxScuCcu_Ndivider_34,         /**< \brief  N-divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   596      IfxScuCcu_Ndivider_35,         /**< \brief  N-divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   597      IfxScuCcu_Ndivider_36,         /**< \brief  N-divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   598      IfxScuCcu_Ndivider_37,         /**< \brief  N-divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   599      IfxScuCcu_Ndivider_38,         /**< \brief  N-divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   600      IfxScuCcu_Ndivider_39,         /**< \brief  N-divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   601      IfxScuCcu_Ndivider_40,         /**< \brief  N-divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   602      IfxScuCcu_Ndivider_41,         /**< \brief  N-divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   603      IfxScuCcu_Ndivider_42,         /**< \brief  N-divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   604      IfxScuCcu_Ndivider_43,         /**< \brief  N-divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   605      IfxScuCcu_Ndivider_44,         /**< \brief  N-divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   606      IfxScuCcu_Ndivider_45,         /**< \brief  N-divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   607      IfxScuCcu_Ndivider_46,         /**< \brief  N-divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   608      IfxScuCcu_Ndivider_47,         /**< \brief  N-divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   609      IfxScuCcu_Ndivider_48,         /**< \brief  N-divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   610      IfxScuCcu_Ndivider_49,         /**< \brief  N-divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   611      IfxScuCcu_Ndivider_50,         /**< \brief  N-divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   612      IfxScuCcu_Ndivider_51,         /**< \brief  N-divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   613      IfxScuCcu_Ndivider_52,         /**< \brief  N-divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   614      IfxScuCcu_Ndivider_53,         /**< \brief  N-divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   615      IfxScuCcu_Ndivider_54,         /**< \brief  N-divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   616      IfxScuCcu_Ndivider_55,         /**< \brief  N-divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   617      IfxScuCcu_Ndivider_56,         /**< \brief  N-divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   618      IfxScuCcu_Ndivider_57,         /**< \brief  N-divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   619      IfxScuCcu_Ndivider_58,         /**< \brief  N-divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   620      IfxScuCcu_Ndivider_59,         /**< \brief  N-divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   621      IfxScuCcu_Ndivider_60,         /**< \brief  N-divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   622      IfxScuCcu_Ndivider_61,         /**< \brief  N-divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   623      IfxScuCcu_Ndivider_62,         /**< \brief  N-divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   624      IfxScuCcu_Ndivider_63,         /**< \brief  N-divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   625      IfxScuCcu_Ndivider_64,         /**< \brief  N-divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   626      IfxScuCcu_Ndivider_65,         /**< \brief  N-divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   627      IfxScuCcu_Ndivider_66,         /**< \brief  N-divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   628      IfxScuCcu_Ndivider_67,         /**< \brief  N-divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   629      IfxScuCcu_Ndivider_68,         /**< \brief  N-divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   630      IfxScuCcu_Ndivider_69,         /**< \brief  N-divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   631      IfxScuCcu_Ndivider_70,         /**< \brief  N-divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   632      IfxScuCcu_Ndivider_71,         /**< \brief  N-divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   633      IfxScuCcu_Ndivider_72,         /**< \brief  N-divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   634      IfxScuCcu_Ndivider_73,         /**< \brief  N-divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   635      IfxScuCcu_Ndivider_74,         /**< \brief  N-divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   636      IfxScuCcu_Ndivider_75,         /**< \brief  N-divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   637      IfxScuCcu_Ndivider_76,         /**< \brief  N-divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   638      IfxScuCcu_Ndivider_77,         /**< \brief  N-divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   639      IfxScuCcu_Ndivider_78,         /**< \brief  N-divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   640      IfxScuCcu_Ndivider_79,         /**< \brief  N-divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   641      IfxScuCcu_Ndivider_80,         /**< \brief  N-divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   642      IfxScuCcu_Ndivider_81,         /**< \brief  N-divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   643      IfxScuCcu_Ndivider_82,         /**< \brief  N-divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   644      IfxScuCcu_Ndivider_83,         /**< \brief  N-divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   645      IfxScuCcu_Ndivider_84,         /**< \brief  N-divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   646      IfxScuCcu_Ndivider_85,         /**< \brief  N-divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   647      IfxScuCcu_Ndivider_86,         /**< \brief  N-divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   648      IfxScuCcu_Ndivider_87,         /**< \brief  N-divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   649      IfxScuCcu_Ndivider_88,         /**< \brief  N-divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   650      IfxScuCcu_Ndivider_89,         /**< \brief  N-divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   651      IfxScuCcu_Ndivider_90,         /**< \brief  N-divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   652      IfxScuCcu_Ndivider_91,         /**< \brief  N-divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   653      IfxScuCcu_Ndivider_92,         /**< \brief  N-divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   654      IfxScuCcu_Ndivider_93,         /**< \brief  N-divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   655      IfxScuCcu_Ndivider_94,         /**< \brief  N-divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   656      IfxScuCcu_Ndivider_95,         /**< \brief  N-divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   657      IfxScuCcu_Ndivider_96,         /**< \brief  N-divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   658      IfxScuCcu_Ndivider_97,         /**< \brief  N-divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   659      IfxScuCcu_Ndivider_98,         /**< \brief  N-divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   660      IfxScuCcu_Ndivider_99,         /**< \brief  N-divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   661      IfxScuCcu_Ndivider_100,        /**< \brief  N-divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   662      IfxScuCcu_Ndivider_101,        /**< \brief  N-divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   663      IfxScuCcu_Ndivider_102,        /**< \brief  N-divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   664      IfxScuCcu_Ndivider_103,        /**< \brief  N-divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   665      IfxScuCcu_Ndivider_104,        /**< \brief  N-divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   666      IfxScuCcu_Ndivider_105,        /**< \brief  N-divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   667      IfxScuCcu_Ndivider_106,        /**< \brief  N-divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   668      IfxScuCcu_Ndivider_107,        /**< \brief  N-divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   669      IfxScuCcu_Ndivider_108,        /**< \brief  N-divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   670      IfxScuCcu_Ndivider_109,        /**< \brief  N-divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   671      IfxScuCcu_Ndivider_110,        /**< \brief  N-divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   672      IfxScuCcu_Ndivider_111,        /**< \brief  N-divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   673      IfxScuCcu_Ndivider_112,        /**< \brief  N-divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   674      IfxScuCcu_Ndivider_113,        /**< \brief  N-divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   675      IfxScuCcu_Ndivider_114,        /**< \brief  N-divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   676      IfxScuCcu_Ndivider_115,        /**< \brief  N-divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   677      IfxScuCcu_Ndivider_116,        /**< \brief  N-divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   678      IfxScuCcu_Ndivider_117,        /**< \brief  N-divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   679      IfxScuCcu_Ndivider_118,        /**< \brief  N-divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   680      IfxScuCcu_Ndivider_119,        /**< \brief  N-divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   681      IfxScuCcu_Ndivider_120,        /**< \brief  N-divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   682      IfxScuCcu_Ndivider_121,        /**< \brief  N-divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   683      IfxScuCcu_Ndivider_122,        /**< \brief  N-divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   684      IfxScuCcu_Ndivider_123,        /**< \brief  N-divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   685      IfxScuCcu_Ndivider_124,        /**< \brief  N-divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   686      IfxScuCcu_Ndivider_125,        /**< \brief  N-divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   687      IfxScuCcu_Ndivider_126,        /**< \brief  N-divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   688      IfxScuCcu_Ndivider_127,        /**< \brief  N-divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   689      IfxScuCcu_Ndivider_128         /**< \brief  N-divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   690  } IfxScuCcu_Ndivider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   691  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   692  /** \brief MODULE_SCU.PLLCON0.B.PDIV, specifies the P-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   693   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   694  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   695  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   696      IfxScuCcu_Pdivider_1 = 0,      /**< \brief  P-divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   697      IfxScuCcu_Pdivider_2,          /**< \brief  P-divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   698      IfxScuCcu_Pdivider_3,          /**< \brief  P-divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   699      IfxScuCcu_Pdivider_4,          /**< \brief  P-divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   700      IfxScuCcu_Pdivider_5,          /**< \brief  P-divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   701      IfxScuCcu_Pdivider_6,          /**< \brief  P-divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   702      IfxScuCcu_Pdivider_7,          /**< \brief  P-divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   703      IfxScuCcu_Pdivider_8,          /**< \brief  P-divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   704      IfxScuCcu_Pdivider_9,          /**< \brief  P-divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   705      IfxScuCcu_Pdivider_10,         /**< \brief  P-divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   706      IfxScuCcu_Pdivider_11,         /**< \brief  P-divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   707      IfxScuCcu_Pdivider_12,         /**< \brief  P-divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   708      IfxScuCcu_Pdivider_13,         /**< \brief  P-divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   709      IfxScuCcu_Pdivider_14,         /**< \brief  P-divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   710      IfxScuCcu_Pdivider_15,         /**< \brief  P-divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   711      IfxScuCcu_Pdivider_16          /**< \brief  P-divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   712  } IfxScuCcu_Pdivider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   713  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   714  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   715  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   716  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   717  /*-----------------------------Data Structures--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   718  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   719  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   720  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   721   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   722  /** \brief Configuration structure type for CCUCON registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   723   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   724  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   725  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   726      uint32 value;       /**< \brief CCUCON Register value to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   727      uint32 mask;        /**< \brief CCUCON Mask to select the bit fields to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   728  } IfxScuCcu_CcuconRegConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   729  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   730  /** \brief Configuration structure type for the Pll initial step.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   731   * This structure must be used to configure the P, N and K2 dividers for initial step.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   732   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   733  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   734  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   735      uint8   pDivider;        /**< \brief P divider value for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   736      uint8   nDivider;        /**< \brief N divider value for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   737      uint8   k2Initial;       /**< \brief K2 divider value for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   738      float32 waitTime;        /**< \brief Wait time for for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   739  } IfxScuCcu_InitialStepConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   740  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   741  /** \brief Configuration structure type for the Pll Steps for current jump control.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   742   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   743  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   744  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   745      uint8                          k2Step;             /**< \brief K2 divider value for this step. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   746      float32                        waitTime;           /**< \brief Wait time for for this step. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   747      IfxScuCcu_PllStepsFunctionHook hookFunction;       /**< \brief Hook function called at the end of this step. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   748  } IfxScuCcu_PllStepsConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   749  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   750  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   751  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   752  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   753   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   754  /** \brief Configuration structure type for all the CCUCON registers to configure clock distribution.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   755   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   756  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   757  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   758      IfxScuCcu_CcuconRegConfig ccucon0;       /**< \brief CCUCON0 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   759      IfxScuCcu_CcuconRegConfig ccucon1;       /**< \brief CCUCON1 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   760      IfxScuCcu_CcuconRegConfig ccucon2;       /**< \brief CCUCON2 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   761      IfxScuCcu_CcuconRegConfig ccucon5;       /**< \brief CCUCON5 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   762      IfxScuCcu_CcuconRegConfig ccucon6;       /**< \brief CCUCON6 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   763      IfxScuCcu_CcuconRegConfig ccucon7;       /**< \brief CCUCON7 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   764  } IfxScuCcu_ClockDistributionConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   765  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   766  /** \brief Configuration structure type for the Flash waitstate configuration.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   767   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   768  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   769  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   770      uint32 value;       /**< \brief FLASH.FCON Register value to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   771      uint32 mask;        /**< \brief FLASH.FCON Mask to select the bit fields to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   772  } IfxScuCcu_FlashWaitstateConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   773  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   774  /** \brief Configuration structure type for the System Pll step.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   775   * This structure must be used to configure the P, N and K1 dividers .
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   776   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   777  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   778  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   779      uint8                       numOfPllDividerSteps;       /**< \brief Number of PLL divider steps during clock throttling. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   780      IfxScuCcu_PllStepsConfig   *pllDividerStep;             /**< \brief Pointer to the array of Pll divider step configuration. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   781      IfxScuCcu_InitialStepConfig pllInitialStep;             /**< \brief Configuration of first step which is same as internal osc frequency. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   782  } IfxScuCcu_SysPllConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   783  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   784  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   785  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   786  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   787   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   788  /** \brief Configuration structure SCU module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   789   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   790  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   791  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   792      IfxScuCcu_SysPllConfig            sysPll;                         /**< \brief System PLL configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   793      IfxScuCcu_ClockDistributionConfig clockDistribution;              /**< \brief Configuration of of bus clocks and other module clock distribution. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   794      IfxScuCcu_FlashWaitstateConfig    flashFconWaitStateConfig;       /**< \brief Configuration of flash waitstate */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   795      uint32                            xtalFrequency;                  /**< \brief Xtal Frequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   796  } IfxScuCcu_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   797  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   798  /** \brief Configuration structure for E-ray PLL
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   799   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   800  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   801  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   802      IfxScuCcu_InitialStepConfig pllInitialStep;       /**< \brief Configuration of first step which is same as internal osc frequency. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   803  } IfxScuCcu_ErayPllConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   804  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   805  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   806  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   807  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Operative
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   808   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   809  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   810  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   811  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   812  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   813  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   814  /** \brief API to get EVR Oscillator frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   815   * This API returns the constant which is specific to the ScuCcu of the controller.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   816   * \return EVR Oscillator frequency (fBACK or fEVR) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   817   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   818  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   819  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   820  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   821   * This API returns the  PLL2ERAY frequency based on the K3 divider value in PLLERAYCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   822   * \return PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   823   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   824  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   825  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   826  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   827   * This API returns the  PLL2 frequency based on the K3 divider value in PLLCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   828   * \return PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   829   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   830  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   831  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   832  /** \brief Returns the clock source selection
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   833   * \return Clock source selection
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   834   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   835  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   836  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   837  /** \brief API to get STM divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   838   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   839   * \return STM frequency (fSTM) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   840   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   841  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   842  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   843  /** \brief API to get CAN divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   844   * This API returns the fCAN frequency based on the divider value in CCUCON register and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   845   * \return STM frequency (fSTM) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   846   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   847  IFX_INLINE float32 IfxScuCcu_getCanFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   848  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   849  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   850  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   851  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   852  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   853  /** \brief API to get BAUD1 divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   854   * This API returns the based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   855   * \return Baud1 frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   856   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   857  IFX_EXTERN float32 IfxScuCcu_getBaud1Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   858  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   859  /** \brief API to get BAUD2 divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   860   * This API returns the Baud2 frequency based on the divider value in CCUCON register and the fMAX.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   861   * \return Baud2 frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   862   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   863  IFX_EXTERN float32 IfxScuCcu_getBaud2Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   864  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   865  /** \brief API to get BBB divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   866   * This API returns the BBBDivider frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   867   * \return BBB frequency (fBBB) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   868   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   869  IFX_EXTERN float32 IfxScuCcu_getBbbFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   870  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   871  /** \brief This API returns the Cpu frequency based on the divider value in CCUCON register and fSource frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   872   * \param cpu CPU number for which effective fCPU is sought
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   873   * \return Cpu[x] frequency in Hz, where x is cpu number passed as parameter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   874   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   875  IFX_EXTERN float32 IfxScuCcu_getCpuFrequency(const IfxCpu_ResourceCpu cpu);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   876  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   877  /** \brief API to get FSI2 divider frequency in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   878   * This API returns the fFSI2 frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   879   * \return FSI2 frequency (fFSI2) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   880   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   881  IFX_EXTERN float32 IfxScuCcu_getFsi2Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   882  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   883  /** \brief API to get FSI divider frequency in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   884   * This API returns the fFSI based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   885   * \return FSI frequency (fFSI) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   886   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   887  IFX_EXTERN float32 IfxScuCcu_getFsiFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   888  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   889  /** \brief API to get FMAX divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   890   * This API returns the fMax frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   891   * \return Max frequency (fMAX) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   892   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   893  IFX_EXTERN float32 IfxScuCcu_getMaxFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   894  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   895  /** \brief get source frequency fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   896   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   897   * \return Module frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   898   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   899  IFX_EXTERN float32 IfxScuCcu_getModuleFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   900  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   901  /** \brief API to get Oscillator 0 frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   902   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   903   * \return Osc0 frequency (fOSC0) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   904   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   905  IFX_EXTERN float32 IfxScuCcu_getOsc0Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   906  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   907  /** \brief API to get Oscillator 0 frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   908   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   909   * \return Osc frequency (fOSC) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   910   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   911  IFX_EXTERN float32 IfxScuCcu_getOscFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   912  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   913  /** \brief API to get actual PLL (Eray) frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   914   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   915   * \return frequency of Pll Eray (fPLLERAY) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   916   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   917  IFX_EXTERN float32 IfxScuCcu_getPllErayFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   918  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   919  /** \brief API to get actual ERAY PLL Voltage Controlled Oscillator frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   920   * This API returns the based on the divider values in PLLERAYCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   921   * \return Pll (Eray) VCO frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   922   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   923  IFX_EXTERN float32 IfxScuCcu_getPllErayVcoFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   924  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   925  /** \brief API to get actual PLL output frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   926   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   927   * \return Pll (fPLL) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   928   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   929  IFX_EXTERN float32 IfxScuCcu_getPllFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   930  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   931  /** \brief API to get actual PLL Voltage Controlled Oscillator frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   932   * This API returns the based on the divider values in PLLCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   933   * \return Pll VCO frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   934   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   935  IFX_EXTERN float32 IfxScuCcu_getPllVcoFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   936  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   937  /** \brief get source frequency fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   938   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   939   * \return Effective fSOURCE in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   940   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   941  IFX_EXTERN float32 IfxScuCcu_getSourceFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   942  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   943  /** \brief API to get SPB divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   944   * This API returns the based on fSOURCE and also on Low power divider mode and/or SPBDIV divider value in CCUCON registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   945   * \return SPB frequency (fSPB) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   946   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   947  IFX_EXTERN float32 IfxScuCcu_getSpbFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   948  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   949  /** \brief API to get SRI divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   950   * This API returns the Sri frequency based on the divider values in CCUCON registers and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   951   * \return Sri frequency (fSRI) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   952   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   953  IFX_EXTERN float32 IfxScuCcu_getSriFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   954  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   955  /** \brief API to set CPU frequency (with CPU divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   956   * This API configure CPU divider values in CCUCON registers. The actual frequency is always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   957   * \param cpu CPU number for which fCPU to be configured
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   958   * \param cpuFreq Desired CPU frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   959   * \return Actual CPU[x] frequency in Hz, where x is the cpu number passed as parameter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   960   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   961  IFX_EXTERN float32 IfxScuCcu_setCpuFrequency(IfxCpu_ResourceCpu cpu, float32 cpuFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   962  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   963  /** \brief API to configure PLL2ERAY (K3 Divider for ADC clock) for desired frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   964   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   965   * \param pll2ErayFreq PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   966   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   967   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   968  IFX_EXTERN float32 IfxScuCcu_setPll2ErayFrequency(float32 pll2ErayFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   969  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   970  /** \brief API to configure PLL2 (K3 Divider for ADC clock) for desired frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   971   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   972   * \param pll2Freq PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   973   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   974   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   975  IFX_EXTERN float32 IfxScuCcu_setPll2Frequency(float32 pll2Freq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   976  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   977  /** \brief API to set SPB frequency (with SPB divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   978   * This API configure SPB divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   979   * \param spbFreq Desired SPB frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   980   * \return Actual SPB frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   981   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   982  IFX_EXTERN float32 IfxScuCcu_setSpbFrequency(float32 spbFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   983  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   984  /** \brief API to set SRI frequency (with SRI divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   985   * This API configure Sri divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   986   * \param sriFreq Sri frequency (fSRI) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   987   * \return Actual Sri frequency (fSRI) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   988   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   989  IFX_EXTERN float32 IfxScuCcu_setSriFrequency(float32 sriFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   990  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   991  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   992  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   993  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   994   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   995  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   996  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   997  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   998  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   999  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1000  /** \brief The api calculates the system PLL divider values P, N, K based on given xtal frequency and PLL frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1001   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1002   * \param fPll Desired PLL frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1003   * \return 0- Success, 1 - Failure
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1004   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1005  IFX_EXTERN boolean IfxScuCcu_calculateSysPllDividers(IfxScuCcu_Config *cfg, uint32 fPll);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1006  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1007  /** \brief API to initialize the SCU Clock Control Unit.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1008   * This API initialize the PLL with ramp steps, BUS dividers for the configuration provided by the configuration structure.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1009   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1010   * \return Error status of the ScuCcu initialization process.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1011   * \retval TRUE: If an error occurred during initialization.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1012   * \retval FALSE: If initialization was successful.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1013   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1014  IFX_EXTERN boolean IfxScuCcu_init(const IfxScuCcu_Config *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1015  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1016  /** \brief Initializes the clock configuration with default values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1017   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1018   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1019   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1020  IFX_EXTERN void IfxScuCcu_initConfig(IfxScuCcu_Config *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1021  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1022  /** \brief API to initialize the SCU Eray Pll
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1023   * This API initialize the Eray PLL for the configuration provided by the configuration structure.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1024   * \param cfg Pointer to the configuration structure of the Eray Pll
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1025   * \return Error status of the ScuCcu Eray Pll initialization process.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1026   * \retval TRUE: If an error occurred during initialization.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1027   * \retval FALSE: If initialization was successful.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1028   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1029  IFX_EXTERN boolean IfxScuCcu_initErayPll(const IfxScuCcu_ErayPllConfig *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1030  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1031  /** \brief Initializes the clock configuration with default values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1032   * \param cfg Pointer to the configuration structure of the ScuCcuEray Pll
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1033   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1034   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1035  IFX_EXTERN void IfxScuCcu_initErayPllConfig(IfxScuCcu_ErayPllConfig *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1036  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1037  /** \brief API to switch to Backup clock from the current PLL frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1038   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1039   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1040   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1041  IFX_EXTERN void IfxScuCcu_switchToBackupClock(const IfxScuCcu_Config *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1042  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1043  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1044  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1045  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1046  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1047  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1048  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1049  /** \brief API to get GTMdivider frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1050   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1051   * return GTM frequency (fGTM) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1052   * \return Gtm Frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1053   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1054  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1055  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1056  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1057  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1058  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1059  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1060  /** \brief API to set GTM frequency (with GTM divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1061   * This API configure GTM divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1062   * \param gtmFreq Desired GTM frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1063   * \return Actual GTM frequency in HZ
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1064   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1065  IFX_EXTERN float32 IfxScuCcu_setGtmFrequency(float32 gtmFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1066  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1067  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1068  /*-------------------Global Exported Variables/Constants----------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1069  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1070  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1071  /** \brief Configuration structure for SCU CCU driver.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1072   * The values of this structure are defined as # defined macros in the implementation of Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1073   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1074  IFX_EXTERN IFX_CONST IfxScuCcu_Config IfxScuCcu_defaultClockConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1075  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1076  /** \brief Configuration structure for SCU CCU driver.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1077   * The values of this structure are defined as # defined macros in the implementation of Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1078   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1079  IFX_EXTERN IFX_CONST IfxScuCcu_ErayPllConfig IfxScuCcu_defaultErayPllConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1080  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1081  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1082  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1083  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1084  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1085  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1086  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1087      return IFXSCU_EVR_OSC_FREQUENCY;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1088  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1089  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1090  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1091  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1092  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1093      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.GTMDIV;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1094  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1095  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1096  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1097  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1098  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1099      float32 pll2ErayFrequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1100  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1101      pll2ErayFrequency = IfxScuCcu_getPllErayVcoFrequency() / (SCU_PLLERAYCON1.B.K3DIV + 1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1102  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1103      return pll2ErayFrequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1104  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1105  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1106  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1107  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1108  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1109      float32 pll2Frequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1110      pll2Frequency = IfxScuCcu_getPllVcoFrequency() / (SCU_PLLCON1.B.K3DIV + 1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1111  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1112      return pll2Frequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1113  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1114  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1116  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1117  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1118      return (IfxScu_CCUCON0_CLKSEL)SCU_CCUCON0.B.CLKSEL;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1119  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1120  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1122  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1123  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1124      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.STMDIV;
	itof	d15,d15
.L411:
	div.f	d15,d2,d15
.L262:
	div.f	d15,d15,d0
.L412:
	utof	d0,d8
.L413:
	mul.f	d15,d15,d0
.L414:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   336            errorcnt      = 0U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   337      /* Divide with 1000, gives the count value equivalent to milliseconds */
	ftouz	d0,d15
	j	.L47
.L48:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   338      uint32           stmCount      = (uint32)((IfxScuCcu_getStmFrequency() / 1000) * timeoutMilliSec);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   339      uint32           stmCountBegin = STM0_TIM0.U;
	nop
.L415:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   340  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   341      while ((*sync & IFXCPU_CFG_ALLCORE_DONE) != IFXCPU_CFG_ALLCORE_DONE)
	ld.w	d15,[a2]
.L416:
	sub	d15,d1
.L417:
	jlt.u	d15,d0,.L49
.L418:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   342      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   343          __nop();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   344  
	mov	d9,#1
	j	.L50
.L49:
.L47:
	ld.w	d15,[a15]
.L419:
	and	d15,#3
.L420:
	jne	d15,#3,.L48

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   345          if ((uint32)(STM0_TIM0.U - stmCountBegin) >= stmCount)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   346          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   347              errorcnt = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   348              break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   349          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   350  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   351          /* There is no need to check overflow of the STM timer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   352           * When counter after overflow subtracted with counter before overflow,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   353           * the subtraction result will be as expected, as long as both are unsigned 32 bits
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   354           * eg: stmCountBegin= 0xFFFFFFFE (before overflow)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   355           *     stmCountNow = 0x00000002 (before overflow)
.L50:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   356           *     diff= stmCountNow - stmCountBegin = 4 as expected.*/
	mov	d2,d9
	ret
.L247:
	
__IfxCpu_waitEvent_function_end:
	.size	IfxCpu_waitEvent,__IfxCpu_waitEvent_function_end-IfxCpu_waitEvent
.L141:
	; End of function
	
	.sdecl	'.text.IfxCpu.IfxCpu_emitEvent',code,cluster('IfxCpu_emitEvent')
	.sect	'.text.IfxCpu.IfxCpu_emitEvent'
	.align	2
	
	.global	IfxCpu_emitEvent

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   357      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   358  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   359      return errorcnt;
; Function IfxCpu_emitEvent
.L77:
IfxCpu_emitEvent:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   360  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   361  
	mfcr	d15,#65052
	imask	e0,#1,d15,#1
	ldmst	[a4]0,e0
.L425:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   362  
	ret
.L263:
	
__IfxCpu_emitEvent_function_end:
	.size	IfxCpu_emitEvent,__IfxCpu_emitEvent_function_end-IfxCpu_emitEvent
.L146:
	; End of function
	
	.calls	'IfxCpu_getCoreMode','IfxCpu_getIndex'
	.calls	'IfxCpu_getRandomValueWithinRange','IfxCpu_getRandomValue'
	.calls	'IfxCpu_setCoreMode','IfxCpu_getIndex'
	.calls	'IfxCpu_setCoreMode','IfxScuWdt_getSafetyWatchdogPassword'
	.calls	'IfxCpu_setCoreMode','IfxScuWdt_clearSafetyEndinit'
	.calls	'IfxCpu_setCoreMode','IfxScuWdt_setSafetyEndinit'
	.calls	'IfxCpu_setCoreMode','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxCpu_setCoreMode','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxCpu_setCoreMode','IfxScuWdt_setCpuEndinit'
	.calls	'IfxCpu_startCore','IfxCpu_setProgramCounter'
	.calls	'IfxCpu_startCore','IfxCpu_getCoreMode'
	.calls	'IfxCpu_startCore','IfxCpu_setCoreMode'
	.calls	'IfxCpu_waitEvent','IfxScuCcu_getSourceFrequency'
	.calls	'IfxCpu_acquireMutex','',8
	.calls	'IfxCpu_getCoreMode','',0
	.calls	'IfxCpu_getIndex','',0
	.calls	'IfxCpu_getRandomValue','',0
	.calls	'IfxCpu_getRandomValueWithinRange','',0
	.calls	'IfxCpu_releaseMutex','',0
	.calls	'IfxCpu_resetSpinLock','',0
	.calls	'IfxCpu_setCoreMode','',0
	.calls	'IfxCpu_setProgramCounter','',0
	.calls	'IfxCpu_setSpinLock','',8
	.calls	'IfxCpu_startCore','',0
	.calls	'IfxCpu_waitEvent','',0
	.extern	IfxCpu_cfg_indexMap
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_clearSafetyEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_setSafetyEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxScuWdt_getSafetyWatchdogPassword
	.extern	IfxScuCcu_getSourceFrequency
	.calls	'IfxCpu_emitEvent','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L79:
	.word	78457
	.half	3
	.word	.L80
	.byte	4
.L78:
	.byte	1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L81
	.byte	2,1,1,3
	.word	173
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	176
	.byte	6,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	221
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	233
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,172,2,17,1,1,6,0
.L168:
	.byte	7
	.byte	'unsigned long int',0,4,7
.L228:
	.byte	8
	.byte	'IfxCpu_getRandomVal',0,3,1,247,2,19
	.word	319
	.byte	1,1
.L229:
	.byte	5
	.byte	'a',0,1,247,2,46
	.word	319
.L231:
	.byte	5
	.byte	'x',0,1,247,2,56
	.word	319
.L233:
	.byte	5
	.byte	'm',0,1,247,2,66
	.word	319
.L235:
	.byte	6,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	433
	.byte	8
	.byte	'__ld64',0,3,2,135,1,19
	.word	407
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	439
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	439
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	407
	.byte	6,0
.L245:
	.byte	7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,241,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	548
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	548
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	548
	.byte	16,0,2,35,0,0,12,4,247,14,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	564
	.byte	4,2,35,0,0
.L170:
	.byte	7
	.byte	'unsigned char',0,1,8
.L184:
	.byte	7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,250,8,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	2,6,2,35,0,11
	.byte	'IR0',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	700
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,12,4,255,14,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	739
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,137,9,16,4,11
	.byte	'AE',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	700
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	717
	.byte	16,0,2,35,2,0,12,4,135,15,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	983
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,4,175,15,25,12,13
	.byte	'CON0',0
	.word	660
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	943
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1174
	.byte	4,2,35,8,0,14
	.word	1214
	.byte	3
	.word	1277
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,181,3,17,1,1,5
	.byte	'watchdog',0,3,181,3,65
	.word	1282
	.byte	5
	.byte	'password',0,3,181,3,82
	.word	717
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,140,4,17,1,1,5
	.byte	'watchdog',0,3,140,4,63
	.word	1282
	.byte	5
	.byte	'password',0,3,140,4,80
	.word	717
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,227,3,19
	.word	717
	.byte	1,1,5
	.byte	'watchdog',0,3,227,3,74
	.word	1282
	.byte	6,0,10
	.byte	'_Ifx_P_OUT_Bits',0,6,143,3,16,4,11
	.byte	'P0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,12,6,181,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1512
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,6,169,2,16,4,11
	.byte	'PS0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	700
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	700
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	700
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	700
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	700
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	700
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	700
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	700
	.byte	1,0,2,35,3,0,12,6,133,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1828
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,6,110,16,4,11
	.byte	'MODREV',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	717
	.byte	16,0,2,35,2,0,12,6,148,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2399
	.byte	4,2,35,0,0,15,4
	.word	700
	.byte	16,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,6,140,1,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	700
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	700
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	700
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	700
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	700
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	700
	.byte	5,0,2,35,3,0,12,6,164,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2527
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,6,166,1,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	700
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	700
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	700
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	700
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	700
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	700
	.byte	5,0,2,35,3,0,12,6,180,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2742
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,6,179,1,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	700
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	700
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	700
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	700
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	700
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	700
	.byte	5,0,2,35,3,0,12,6,188,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2957
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,6,153,1,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	700
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	700
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	700
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	700
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	700
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	700
	.byte	5,0,2,35,3,0,12,6,172,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3174
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,6,118,16,4,11
	.byte	'P0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,12,6,156,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3394
	.byte	4,2,35,0,0,15,24
	.word	700
	.byte	16,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,6,205,3,16,4,11
	.byte	'PD0',0,1
	.word	700
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	700
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'PD2',0,1
	.word	700
	.byte	3,5,2,35,1,11
	.byte	'PL2',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'PD3',0,1
	.word	700
	.byte	3,1,2,35,1,11
	.byte	'PL3',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'PD4',0,1
	.word	700
	.byte	3,5,2,35,2,11
	.byte	'PL4',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'PD5',0,1
	.word	700
	.byte	3,1,2,35,2,11
	.byte	'PL5',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'PD6',0,1
	.word	700
	.byte	3,5,2,35,3,11
	.byte	'PL6',0,1
	.word	700
	.byte	1,4,2,35,3,11
	.byte	'PD7',0,1
	.word	700
	.byte	3,1,2,35,3,11
	.byte	'PL7',0,1
	.word	700
	.byte	1,0,2,35,3,0,12,6,205,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3717
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,6,226,3,16,4,11
	.byte	'PD8',0,1
	.word	700
	.byte	3,5,2,35,0,11
	.byte	'PL8',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'PD9',0,1
	.word	700
	.byte	3,1,2,35,0,11
	.byte	'PL9',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'PD10',0,1
	.word	700
	.byte	3,5,2,35,1,11
	.byte	'PL10',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'PD11',0,1
	.word	700
	.byte	3,1,2,35,1,11
	.byte	'PL11',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'PD12',0,1
	.word	700
	.byte	3,5,2,35,2,11
	.byte	'PL12',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'PD13',0,1
	.word	700
	.byte	3,1,2,35,2,11
	.byte	'PL13',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'PD14',0,1
	.word	700
	.byte	3,5,2,35,3,11
	.byte	'PL14',0,1
	.word	700
	.byte	1,4,2,35,3,11
	.byte	'PD15',0,1
	.word	700
	.byte	3,1,2,35,3,11
	.byte	'PL15',0,1
	.word	700
	.byte	1,0,2,35,3,0,12,6,213,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4021
	.byte	4,2,35,0,0,15,8
	.word	700
	.byte	16,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,6,88,16,4,11
	.byte	'EN0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,12,6,140,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4346
	.byte	4,2,35,0,0,15,12
	.word	700
	.byte	16,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,6,183,3,16,4,11
	.byte	'PDIS0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,12,6,197,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4686
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,6,165,3,16,4,11
	.byte	'SEL0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	700
	.byte	2,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	525
	.byte	19,1,2,35,0,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,12,6,189,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5052
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,6,206,2,16,4,11
	.byte	'PS0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	525
	.byte	28,0,2,35,0,0,12,6,149,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5338
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,6,227,2,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	525
	.byte	24,0,2,35,0,0,12,6,165,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5485
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,6,238,2,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	525
	.byte	20,0,2,35,0,0,12,6,173,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5654
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,6,216,2,16,4,11
	.byte	'reserved_0',0,2
	.word	717
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,12,6,157,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5826
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,6,232,1,16,4,11
	.byte	'reserved_0',0,2
	.word	717
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	717
	.byte	12,0,2,35,2,0,12,6,229,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6001
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,6,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	525
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	700
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	700
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	700
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	8,0,2,35,3,0,12,6,245,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6175
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,6,136,2,16,4,11
	.byte	'reserved_0',0,4
	.word	525
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	700
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	700
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	700
	.byte	4,0,2,35,3,0,12,6,253,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6349
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,6,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	525
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	700
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	700
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	700
	.byte	1,0,2,35,3,0,12,6,237,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6525
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,6,249,2,16,4,11
	.byte	'PS0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,12,6,141,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6681
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,6,147,2,16,4,11
	.byte	'reserved_0',0,2
	.word	717
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	700
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	700
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	700
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	700
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	700
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	700
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	700
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	700
	.byte	1,0,2,35,3,0,12,6,221,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7014
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR0_Bits',0,6,192,1,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	525
	.byte	30,0,2,35,0,0,12,6,196,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7362
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_Bits',0,6,200,1,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	525
	.byte	30,0,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,6,208,1,16,4,11
	.byte	'RDIS_CTRL',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'RX_DIS',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	700
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	525
	.byte	24,0,2,35,0,0,12,6,204,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7486
	.byte	4,2,35,0,13
	.byte	'B_P21',0
	.word	7570
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR2_Bits',0,6,218,1,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'LVDSR',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'LVDSRL',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	700
	.byte	2,4,2,35,1,11
	.byte	'TDIS_CTRL',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'TX_DIS',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,12,6,213,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7750
	.byte	4,2,35,0,0,15,76
	.word	700
	.byte	16,75,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,6,82,16,4,11
	.byte	'reserved_0',0,4
	.word	525
	.byte	32,0,2,35,0,0,12,6,132,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8003
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,6,45,16,4,11
	.byte	'EN0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	700
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	700
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	700
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	700
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	700
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	700
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	700
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	700
	.byte	1,0,2,35,3,0,12,6,252,3,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8090
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,6,229,5,25,128,2,13
	.byte	'OUT',0
	.word	1788
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	2359
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	2478
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2518
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	2702
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	2917
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3134
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	3354
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	2518
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	3668
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	3708
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	3981
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4297
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	4337
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	4637
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	4677
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5012
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5298
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	4337
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	5445
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	5614
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	5786
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	5961
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6135
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6309
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	6485
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	6641
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	6974
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	7322
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	4337
	.byte	8,3,35,152,1,13
	.byte	'LPCR0',0
	.word	7446
	.byte	4,3,35,160,1,13
	.byte	'LPCR1',0
	.word	7695
	.byte	4,3,35,164,1,13
	.byte	'LPCR2',0
	.word	7954
	.byte	4,3,35,168,1,13
	.byte	'reserved_A4',0
	.word	7994
	.byte	76,3,35,172,1,13
	.byte	'ACCEN1',0
	.word	8050
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	8617
	.byte	4,3,35,252,1,0,14
	.word	8657
	.byte	3
	.word	9260
	.byte	17,5,172,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,5,208,4,17,1,1,5
	.byte	'port',0,5,208,4,44
	.word	9265
	.byte	5
	.byte	'pinIndex',0,5,208,4,56
	.word	700
	.byte	5
	.byte	'action',0,5,208,4,80
	.word	9270
	.byte	6,0
.L256:
	.byte	8
	.byte	'IfxScuCcu_getStmFrequency',0,3,7,226,8,20
	.word	233
	.byte	1,1
.L259:
	.byte	6,0,15,176,32
	.word	700
	.byte	16,175,32,0,10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,9,150,4,16,4,11
	.byte	'ADFLIP',0,4
	.word	548
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	548
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	548
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	548
	.byte	1,0,2,35,0,0,12,9,239,8,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9502
	.byte	4,2,35,0,0,15,208,223,1
	.word	700
	.byte	16,207,223,1,0,10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,9,234,4,16,4,11
	.byte	'ASI',0,4
	.word	548
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	548
	.byte	27,0,2,35,0,0,12,9,191,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9655
	.byte	4,2,35,0,0,15,248,1
	.word	700
	.byte	16,247,1,0,10
	.byte	'_Ifx_CPU_PMA0_Bits',0,9,224,3,16,4,11
	.byte	'reserved_0',0,4
	.word	548
	.byte	13,19,2,35,0,11
	.byte	'DAC',0,4
	.word	548
	.byte	3,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	548
	.byte	16,0,2,35,0,0,12,9,199,8,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9773
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PMA1_Bits',0,9,232,3,16,4,11
	.byte	'reserved_0',0,4
	.word	548
	.byte	14,18,2,35,0,11
	.byte	'CAC',0,4
	.word	548
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	548
	.byte	16,0,2,35,0,0,12,9,207,8,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9899
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PMA2_Bits',0,9,240,3,16,4,11
	.byte	'PSI',0,4
	.word	548
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	548
	.byte	16,0,2,35,0,0,12,9,215,8,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10025
	.byte	4,2,35,0,0,15,244,29
	.word	700
	.byte	16,243,29,0,10
	.byte	'_Ifx_CPU_DCON2_Bits',0,9,195,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	548
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	548
	.byte	16,0,2,35,0,0,12,9,191,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10140
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_SMACON_Bits',0,9,159,4,16,4,11
	.byte	'PC',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	548
	.byte	1,30,2,35,0,11
	.byte	'PT',0,4
	.word	548
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	548
	.byte	5,24,2,35,0,11
	.byte	'DC',0,4
	.word	548
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	548
	.byte	1,22,2,35,0,11
	.byte	'DT',0,4
	.word	548
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	548
	.byte	13,8,2,35,0,11
	.byte	'IODT',0,4
	.word	548
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	548
	.byte	7,0,2,35,0,0,12,9,247,8,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10253
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DSTR_Bits',0,9,143,2,16,4,11
	.byte	'SRE',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	548
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	548
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	548
	.byte	3,26,2,35,0,11
	.byte	'CRE',0,4
	.word	548
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	548
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	548
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	548
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	548
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	548
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	548
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	548
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	548
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	548
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	548
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	548
	.byte	7,0,2,35,0,0,12,9,143,7,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10505
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DATR_Bits',0,9,152,1,16,4,11
	.byte	'reserved_0',0,4
	.word	548
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	548
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	548
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	548
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	548
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	548
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	548
	.byte	1,17,2,35,0,11
	.byte	'SME',0,4
	.word	548
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	548
	.byte	16,0,2,35,0,0,12,9,159,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10842
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DEADD_Bits',0,9,209,1,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	548
	.byte	32,0,2,35,0,0,12,9,207,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11073
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,9,215,1,16,4,11
	.byte	'TA',0,4
	.word	548
	.byte	32,0,2,35,0,0,12,9,215,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11165
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DIETR_Bits',0,9,221,1,16,4,11
	.byte	'IED',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	548
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	548
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	548
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	548
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	548
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	548
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	548
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	548
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	548
	.byte	18,0,2,35,0,0,12,9,223,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11246
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DCON0_Bits',0,9,187,1,16,4,11
	.byte	'reserved_0',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	548
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	548
	.byte	30,0,2,35,0,0,12,9,183,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11487
	.byte	4,2,35,0,0,15,188,3
	.word	700
	.byte	16,187,3,0,10
	.byte	'_Ifx_CPU_PSTR_Bits',0,9,247,3,16,4,11
	.byte	'FRE',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	548
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	548
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	548
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	548
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	548
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	548
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	548
	.byte	17,0,2,35,0,0,12,9,223,8,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11626
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PCON1_Bits',0,9,178,3,16,4,11
	.byte	'PCINV',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	548
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	548
	.byte	30,0,2,35,0,0,12,9,159,8,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11842
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PCON2_Bits',0,9,186,3,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	548
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	548
	.byte	16,0,2,35,0,0,12,9,167,8,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11965
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PCON0_Bits',0,9,170,3,16,4,11
	.byte	'reserved_0',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	548
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	548
	.byte	30,0,2,35,0,0,12,9,151,8,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12078
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,9,203,3,16,4,11
	.byte	'TA',0,4
	.word	548
	.byte	32,0,2,35,0,0,12,9,183,8,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12206
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PIETR_Bits',0,9,209,3,16,4,11
	.byte	'IED',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	548
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	548
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	548
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	548
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	548
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	548
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	548
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	548
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	548
	.byte	18,0,2,35,0,0,12,9,191,8,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12287
	.byte	4,2,35,0,0,15,232,3
	.word	700
	.byte	16,231,3,0,10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,9,83,16,4,11
	.byte	'reserved_0',0,4
	.word	548
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	548
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	548
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	548
	.byte	27,0,2,35,0,0,12,9,215,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12539
	.byte	4,2,35,0,0,15,252,23
	.word	700
	.byte	16,251,23,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,9,183,2,16,4,11
	.byte	'TST',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	548
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	548
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	548
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	548
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	548
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	548
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	548
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	548
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	548
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	548
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	548
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	548
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	548
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	548
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	548
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	548
	.byte	1,0,2,35,0,0,12,9,167,7,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12689
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,9,215,2,16,4,11
	.byte	'PC',0,4
	.word	548
	.byte	32,0,2,35,0,0,12,9,183,7,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13043
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,9,205,2,16,4,11
	.byte	'OPC',0,4
	.word	548
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	548
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	548
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	548
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	548
	.byte	12,0,2,35,0,0,12,9,175,7,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13130
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,9,221,2,16,4,11
	.byte	'SRC1',0,4
	.word	548
	.byte	32,0,2,35,0,0,12,9,191,7,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13295
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,9,227,2,16,4,11
	.byte	'SRC2',0,4
	.word	548
	.byte	32,0,2,35,0,0,12,9,199,7,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13386
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,9,233,2,16,4,11
	.byte	'SRC3',0,4
	.word	548
	.byte	32,0,2,35,0,0,12,9,207,7,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13477
	.byte	4,2,35,0,0,15,228,63
	.word	700
	.byte	16,227,63,0,10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,9,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	548
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	548
	.byte	29,0,2,35,0,0,12,9,239,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13579
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,9,250,1,16,4,11
	.byte	'reserved_0',0,4
	.word	548
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	548
	.byte	29,0,2,35,0,0,12,9,247,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13686
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DPR',0,9,254,9,25,8,13
	.byte	'L',0
	.word	13646
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	13753
	.byte	4,2,35,4,0,15,128,1
	.word	13793
	.byte	16,15,0,14
	.word	13835
	.byte	15,128,31
	.word	700
	.byte	16,255,30,0,10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,9,99,16,4,11
	.byte	'reserved_0',0,4
	.word	548
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	548
	.byte	29,0,2,35,0,0,12,9,231,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13861
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,9,106,16,4,11
	.byte	'reserved_0',0,4
	.word	548
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	548
	.byte	29,0,2,35,0,0,12,9,239,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13967
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CPR',0,9,247,9,25,8,13
	.byte	'L',0
	.word	13927
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	14033
	.byte	4,2,35,4,0,15,64
	.word	14073
	.byte	16,7,0,14
	.word	14115
	.byte	15,192,31
	.word	700
	.byte	16,191,31,0,10
	.byte	'_Ifx_CPU_CPXE_Bits',0,9,121,16,4,11
	.byte	'XE',0,4
	.word	548
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	548
	.byte	24,0,2,35,0,0,12,9,255,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14140
	.byte	4,2,35,0,0,15,16
	.word	14201
	.byte	16,3,0,10
	.byte	'_Ifx_CPU_DPRE_Bits',0,9,129,2,16,4,11
	.byte	'RE',0,4
	.word	548
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	548
	.byte	16,0,2,35,0,0,12,9,255,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14250
	.byte	4,2,35,0,0,15,16
	.word	14313
	.byte	16,3,0,10
	.byte	'_Ifx_CPU_DPWE_Bits',0,9,136,2,16,4,11
	.byte	'WE',0,4
	.word	548
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	548
	.byte	16,0,2,35,0,0,12,9,135,7,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14362
	.byte	4,2,35,0,0,15,16
	.word	14425
	.byte	16,3,0,15,208,7
	.word	700
	.byte	16,207,7,0,10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,9,241,4,16,4,11
	.byte	'TEXP0',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	548
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	548
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	548
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	548
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	548
	.byte	15,0,2,35,0,0,12,9,199,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14485
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,9,252,4,16,4,11
	.byte	'Timer',0,4
	.word	548
	.byte	32,0,2,35,0,0,12,9,207,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14667
	.byte	4,2,35,0,0,15,12
	.word	14715
	.byte	16,2,0,10
	.byte	'_Ifx_CPU_TPS',0,9,142,10,25,16,13
	.byte	'CON',0
	.word	14627
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	14755
	.byte	12,2,35,4,0,14
	.word	14764
	.byte	15,240,23
	.word	700
	.byte	16,239,23,0,10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,9,136,5,16,4,11
	.byte	'EVTA',0,4
	.word	548
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	548
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	548
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	548
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	548
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	548
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	548
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	548
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	548
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	548
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	548
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	548
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	548
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	548
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	548
	.byte	3,0,2,35,0,0,12,9,223,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14828
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,9,130,5,16,4,11
	.byte	'ADDR',0,4
	.word	548
	.byte	32,0,2,35,0,0,12,9,215,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15157
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_TR',0,9,149,10,25,8,13
	.byte	'EVT',0
	.word	15117
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	15201
	.byte	4,2,35,4,0,15,64
	.word	15241
	.byte	16,7,0,14
	.word	15286
	.byte	15,192,23
	.word	700
	.byte	16,191,23,0,10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,9,72,16,4,11
	.byte	'CM',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	548
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	548
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	548
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	548
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	548
	.byte	21,0,2,35,0,0,12,9,207,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15311
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CCNT_Bits',0,9,65,16,4,11
	.byte	'CountValue',0,4
	.word	548
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	548
	.byte	1,0,2,35,0,0,12,9,199,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15470
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_ICNT_Bits',0,9,239,2,16,4,11
	.byte	'CountValue',0,4
	.word	548
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	548
	.byte	1,0,2,35,0,0,12,9,215,7,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15573
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,9,142,3,16,4,11
	.byte	'CountValue',0,4
	.word	548
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	548
	.byte	1,0,2,35,0,0,12,9,247,7,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15677
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,9,149,3,16,4,11
	.byte	'CountValue',0,4
	.word	548
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	548
	.byte	1,0,2,35,0,0,12,9,255,7,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15782
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,9,156,3,16,4,11
	.byte	'CountValue',0,4
	.word	548
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	548
	.byte	1,0,2,35,0,0,12,9,135,8,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15887
	.byte	4,2,35,0,0,15,232,1
	.word	700
	.byte	16,231,1,0,10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,9,166,1,16,4,11
	.byte	'DE',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	548
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	548
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	548
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	548
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	548
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	548
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	548
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	548
	.byte	19,0,2,35,0,0
.L152:
	.byte	12,9,167,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16003
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,9,164,2,16,4,11
	.byte	'EVTA',0,4
	.word	548
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	548
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	548
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	548
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	548
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	548
	.byte	24,0,2,35,0,0,12,9,151,7,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16230
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CREVT_Bits',0,9,128,1,16,4,11
	.byte	'EVTA',0,4
	.word	548
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	548
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	548
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	548
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	548
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	548
	.byte	24,0,2,35,0,0,12,9,135,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16396
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,9,212,4,16,4,11
	.byte	'EVTA',0,4
	.word	548
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	548
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	548
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	548
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	548
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	548
	.byte	24,0,2,35,0,0,12,9,175,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16562
	.byte	4,2,35,0,0,15,28
	.word	700
	.byte	16,27,0,10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,9,156,5,16,4,11
	.byte	'T0',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	548
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	548
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	548
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	548
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	548
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	548
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	548
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	548
	.byte	24,0,2,35,0,0,12,9,231,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16737
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DMS_Bits',0,9,236,1,16,4,11
	.byte	'reserved_0',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'DMSValue',0,4
	.word	548
	.byte	31,0,2,35,0,0,12,9,231,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16941
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DCX_Bits',0,9,202,1,16,4,11
	.byte	'reserved_0',0,4
	.word	548
	.byte	6,26,2,35,0,11
	.byte	'DCXValue',0,4
	.word	548
	.byte	26,0,2,35,0,0,12,9,199,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17048
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,9,180,1,16,4,11
	.byte	'DTA',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	548
	.byte	31,0,2,35,0,0,12,9,175,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17155
	.byte	4,2,35,0,0,15,180,1
	.word	700
	.byte	16,179,1,0,10
	.byte	'_Ifx_CPU_PCXI_Bits',0,9,193,3,16,4,11
	.byte	'PCXO',0,4
	.word	548
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	548
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	548
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	548
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	548
	.byte	10,0,2,35,0,0,12,9,175,8,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17271
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PSW_Bits',0,9,132,4,16,4,11
	.byte	'CDC',0,4
	.word	548
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	548
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	548
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	548
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	548
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	548
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	548
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	548
	.byte	12,5,2,35,0,11
	.byte	'SAV',0,4
	.word	548
	.byte	1,4,2,35,0,11
	.byte	'AV',0,4
	.word	548
	.byte	1,3,2,35,0,11
	.byte	'SV',0,4
	.word	548
	.byte	1,2,2,35,0,11
	.byte	'V',0,4
	.word	548
	.byte	1,1,2,35,0,11
	.byte	'C',0,4
	.word	548
	.byte	1,0,2,35,0,0,12,9,231,8,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17414
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_PC_Bits',0,9,163,3,16,4,11
	.byte	'reserved_0',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	548
	.byte	31,0,2,35,0,0,12,9,143,8,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17671
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,9,223,4,16,4,11
	.byte	'FCDSF',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	548
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	548
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	548
	.byte	1,28,2,35,0,11
	.byte	'IT',0,4
	.word	548
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	548
	.byte	27,0,2,35,0,0,12,9,183,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17771
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,9,113,16,4,11
	.byte	'MODREV',0,4
	.word	548
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	548
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	548
	.byte	16,0,2,35,0,0,12,9,247,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17943
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,9,92,16,4,11
	.byte	'CORE_ID',0,4
	.word	548
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	548
	.byte	29,0,2,35,0,0
.L160:
	.byte	12,9,223,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18062
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_BIV_Bits',0,9,51,16,4,11
	.byte	'VSS',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	548
	.byte	31,0,2,35,0,0,12,9,183,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18171
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_BTV_Bits',0,9,58,16,4,11
	.byte	'reserved_0',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	548
	.byte	31,0,2,35,0,0,12,9,191,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18265
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_ISP_Bits',0,9,128,3,16,4,11
	.byte	'ISP',0,4
	.word	548
	.byte	32,0,2,35,0,0,12,9,231,7,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18366
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_ICR_Bits',0,9,246,2,16,4,11
	.byte	'CCPN',0,4
	.word	548
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	548
	.byte	5,17,2,35,0,11
	.byte	'IE',0,4
	.word	548
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	548
	.byte	10,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	548
	.byte	6,0,2,35,0,0,12,9,223,7,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18446
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_FCX_Bits',0,9,175,2,16,4,11
	.byte	'FCXO',0,4
	.word	548
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	548
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	548
	.byte	12,0,2,35,0,0,12,9,159,7,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18603
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CPU_LCX_Bits',0,9,134,3,16,4,11
	.byte	'LCXO',0,4
	.word	548
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	548
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	548
	.byte	12,0,2,35,0,0,12,9,239,7,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18723
	.byte	4,2,35,0,0,15,16
	.word	700
	.byte	16,15,0,10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,9,139,1,16,4,11
	.byte	'CID',0,4
	.word	548
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	548
	.byte	29,0,2,35,0,0,12,9,143,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18852
	.byte	4,2,35,0,0,15,172,1
	.word	700
	.byte	16,171,1,0,10
	.byte	'_Ifx_CPU_D_Bits',0,9,146,1,16,4,11
	.byte	'DATA',0,4
	.word	548
	.byte	32,0,2,35,0,0,12,9,151,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18968
	.byte	4,2,35,0,0,15,64
	.word	19007
	.byte	16,15,0,15,64
	.word	700
	.byte	16,63,0,10
	.byte	'_Ifx_CPU_A_Bits',0,9,45,16,4,11
	.byte	'ADDR',0,4
	.word	548
	.byte	32,0,2,35,0,0,12,9,175,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19065
	.byte	4,2,35,0,0,15,64
	.word	19103
	.byte	16,15,0,10
	.byte	'_Ifx_CPU',0,9,166,10,25,128,128,4,13
	.byte	'reserved_0',0
	.word	9491
	.byte	176,32,2,35,0,13
	.byte	'SEGEN',0
	.word	9602
	.byte	4,3,35,176,32,13
	.byte	'reserved_1034',0
	.word	9642
	.byte	208,223,1,3,35,180,32,13
	.byte	'TASK_ASI',0
	.word	9722
	.byte	4,4,35,132,128,2,13
	.byte	'reserved_8008',0
	.word	9762
	.byte	248,1,4,35,136,128,2,13
	.byte	'PMA0',0
	.word	9859
	.byte	4,4,35,128,130,2,13
	.byte	'PMA1',0
	.word	9985
	.byte	4,4,35,132,130,2,13
	.byte	'PMA2',0
	.word	10089
	.byte	4,4,35,136,130,2,13
	.byte	'reserved_810C',0
	.word	10129
	.byte	244,29,4,35,140,130,2,13
	.byte	'DCON2',0
	.word	10213
	.byte	4,4,35,128,160,2,13
	.byte	'reserved_9004',0
	.word	4337
	.byte	8,4,35,132,160,2,13
	.byte	'SMACON',0
	.word	10465
	.byte	4,4,35,140,160,2,13
	.byte	'DSTR',0
	.word	10802
	.byte	4,4,35,144,160,2,13
	.byte	'reserved_9014',0
	.word	2518
	.byte	4,4,35,148,160,2,13
	.byte	'DATR',0
	.word	11033
	.byte	4,4,35,152,160,2,13
	.byte	'DEADD',0
	.word	11125
	.byte	4,4,35,156,160,2,13
	.byte	'DIEAR',0
	.word	11206
	.byte	4,4,35,160,160,2,13
	.byte	'DIETR',0
	.word	11447
	.byte	4,4,35,164,160,2,13
	.byte	'reserved_9028',0
	.word	3708
	.byte	24,4,35,168,160,2,13
	.byte	'DCON0',0
	.word	11575
	.byte	4,4,35,192,160,2,13
	.byte	'reserved_9044',0
	.word	11615
	.byte	188,3,4,35,196,160,2,13
	.byte	'PSTR',0
	.word	11802
	.byte	4,4,35,128,164,2,13
	.byte	'PCON1',0
	.word	11925
	.byte	4,4,35,132,164,2,13
	.byte	'PCON2',0
	.word	12038
	.byte	4,4,35,136,164,2,13
	.byte	'PCON0',0
	.word	12166
	.byte	4,4,35,140,164,2,13
	.byte	'PIEAR',0
	.word	12247
	.byte	4,4,35,144,164,2,13
	.byte	'PIETR',0
	.word	12488
	.byte	4,4,35,148,164,2,13
	.byte	'reserved_9218',0
	.word	12528
	.byte	232,3,4,35,152,164,2,13
	.byte	'COMPAT',0
	.word	12638
	.byte	4,4,35,128,168,2,13
	.byte	'reserved_9404',0
	.word	12678
	.byte	252,23,4,35,132,168,2,13
	.byte	'FPU_TRAP_CON',0
	.word	13003
	.byte	4,4,35,128,192,2,13
	.byte	'FPU_TRAP_PC',0
	.word	13090
	.byte	4,4,35,132,192,2,13
	.byte	'FPU_TRAP_OPC',0
	.word	13255
	.byte	4,4,35,136,192,2,13
	.byte	'reserved_A00C',0
	.word	2518
	.byte	4,4,35,140,192,2,13
	.byte	'FPU_TRAP_SRC1',0
	.word	13346
	.byte	4,4,35,144,192,2,13
	.byte	'FPU_TRAP_SRC2',0
	.word	13437
	.byte	4,4,35,148,192,2,13
	.byte	'FPU_TRAP_SRC3',0
	.word	13528
	.byte	4,4,35,152,192,2,13
	.byte	'reserved_A01C',0
	.word	13568
	.byte	228,63,4,35,156,192,2,13
	.byte	'DPR',0
	.word	13845
	.byte	128,1,4,35,128,128,3,13
	.byte	'reserved_C080',0
	.word	13850
	.byte	128,31,4,35,128,129,3,13
	.byte	'CPR',0
	.word	14124
	.byte	64,4,35,128,160,3,13
	.byte	'reserved_D040',0
	.word	14129
	.byte	192,31,4,35,192,160,3,13
	.byte	'CPXE',0
	.word	14241
	.byte	16,4,35,128,192,3,13
	.byte	'DPRE',0
	.word	14353
	.byte	16,4,35,144,192,3,13
	.byte	'DPWE',0
	.word	14465
	.byte	16,4,35,160,192,3,13
	.byte	'reserved_E030',0
	.word	14474
	.byte	208,7,4,35,176,192,3,13
	.byte	'TPS',0
	.word	14812
	.byte	16,4,35,128,200,3,13
	.byte	'reserved_E410',0
	.word	14817
	.byte	240,23,4,35,144,200,3,13
	.byte	'TR',0
	.word	15295
	.byte	64,4,35,128,224,3,13
	.byte	'reserved_F040',0
	.word	15300
	.byte	192,23,4,35,192,224,3,13
	.byte	'CCTRL',0
	.word	15430
	.byte	4,4,35,128,248,3,13
	.byte	'CCNT',0
	.word	15533
	.byte	4,4,35,132,248,3,13
	.byte	'ICNT',0
	.word	15637
	.byte	4,4,35,136,248,3,13
	.byte	'M1CNT',0
	.word	15742
	.byte	4,4,35,140,248,3,13
	.byte	'M2CNT',0
	.word	15847
	.byte	4,4,35,144,248,3,13
	.byte	'M3CNT',0
	.word	15952
	.byte	4,4,35,148,248,3,13
	.byte	'reserved_FC18',0
	.word	15992
	.byte	232,1,4,35,152,248,3,13
	.byte	'DBGSR',0
	.word	16190
	.byte	4,4,35,128,250,3,13
	.byte	'reserved_FD04',0
	.word	2518
	.byte	4,4,35,132,250,3,13
	.byte	'EXEVT',0
	.word	16356
	.byte	4,4,35,136,250,3,13
	.byte	'CREVT',0
	.word	16522
	.byte	4,4,35,140,250,3,13
	.byte	'SWEVT',0
	.word	16688
	.byte	4,4,35,144,250,3,13
	.byte	'reserved_FD14',0
	.word	16728
	.byte	28,4,35,148,250,3,13
	.byte	'TRIG_ACC',0
	.word	16901
	.byte	4,4,35,176,250,3,13
	.byte	'reserved_FD34',0
	.word	4677
	.byte	12,4,35,180,250,3,13
	.byte	'DMS',0
	.word	17008
	.byte	4,4,35,192,250,3,13
	.byte	'DCX',0
	.word	17115
	.byte	4,4,35,196,250,3,13
	.byte	'DBGTCR',0
	.word	17220
	.byte	4,4,35,200,250,3,13
	.byte	'reserved_FD4C',0
	.word	17260
	.byte	180,1,4,35,204,250,3,13
	.byte	'PCXI',0
	.word	17374
	.byte	4,4,35,128,252,3,13
	.byte	'PSW',0
	.word	17631
	.byte	4,4,35,132,252,3,13
	.byte	'PC',0
	.word	17731
	.byte	4,4,35,136,252,3,13
	.byte	'reserved_FE0C',0
	.word	4337
	.byte	8,4,35,140,252,3,13
	.byte	'SYSCON',0
	.word	17903
	.byte	4,4,35,148,252,3,13
	.byte	'CPU_ID',0
	.word	18022
	.byte	4,4,35,152,252,3,13
	.byte	'CORE_ID',0
	.word	18131
	.byte	4,4,35,156,252,3,13
	.byte	'BIV',0
	.word	18225
	.byte	4,4,35,160,252,3,13
	.byte	'BTV',0
	.word	18326
	.byte	4,4,35,164,252,3,13
	.byte	'ISP',0
	.word	18406
	.byte	4,4,35,168,252,3,13
	.byte	'ICR',0
	.word	18563
	.byte	4,4,35,172,252,3,13
	.byte	'reserved_FE30',0
	.word	4337
	.byte	8,4,35,176,252,3,13
	.byte	'FCX',0
	.word	18683
	.byte	4,4,35,184,252,3,13
	.byte	'LCX',0
	.word	18803
	.byte	4,4,35,188,252,3,13
	.byte	'reserved_FE40',0
	.word	18843
	.byte	16,4,35,192,252,3,13
	.byte	'CUS_ID',0
	.word	18917
	.byte	4,4,35,208,252,3,13
	.byte	'reserved_FE54',0
	.word	18957
	.byte	172,1,4,35,212,252,3,13
	.byte	'D',0
	.word	19047
	.byte	64,4,35,128,254,3,13
	.byte	'reserved_FF40',0
	.word	19056
	.byte	64,4,35,192,254,3,13
	.byte	'A',0
	.word	19143
	.byte	64,4,35,128,255,3,13
	.byte	'reserved_FFC0',0
	.word	19056
	.byte	64,4,35,192,255,3,0,14
	.word	19152
.L149:
	.byte	3
	.word	20943
.L154:
	.byte	17,10,156,1,9,1,18
	.byte	'IfxCpu_ResourceCpu_0',0,0,18
	.byte	'IfxCpu_ResourceCpu_1',0,1,18
	.byte	'IfxCpu_ResourceCpu_none',0,2,0
.L194:
	.byte	8
	.byte	'IfxCpu_getAddress',0,3,8,232,5,21
	.word	20948
	.byte	1,1
.L196:
	.byte	5
	.byte	'cpu',0,8,232,5,58
	.word	20953
.L198:
	.byte	6,0
.L156:
	.byte	8
	.byte	'IfxCpu_getCoreIndex',0,3,8,141,6,31
	.word	20953
	.byte	1,1
.L159:
	.byte	6,0,8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,8,139,5,20
	.word	700
	.byte	1,1,6,0,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,8,161,6,19
	.word	319
	.byte	1,1,5
	.byte	'address',0,8,161,6,55
	.word	717
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,8,190,6,20
	.word	700
	.byte	1,1,5
	.byte	'address',0,8,190,6,70
	.word	717
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,8,172,8,17,1,1,5
	.byte	'address',0,8,172,8,56
	.word	319
	.byte	5
	.byte	'count',0,8,172,8,72
	.word	319
	.byte	19,6,0,0,20
	.word	541
	.byte	21
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,22
	.word	21363
	.byte	0,14
	.word	525
	.byte	3
	.word	525
	.byte	23
	.byte	'__cmpswapw',0
	.word	21405
	.byte	1,1,1,1,24
	.byte	'p',0
	.word	21410
	.byte	24
	.byte	'value',0
	.word	525
	.byte	24
	.byte	'compare',0
	.word	525
	.byte	0,3
	.word	541
	.byte	21
	.byte	'__imaskldmst',0,1,1,1,1,22
	.word	21467
	.byte	22
	.word	541
	.byte	22
	.word	541
	.byte	22
	.word	541
	.byte	0,14
	.word	541
	.byte	23
	.byte	'__mfcr',0
	.word	21511
	.byte	1,1,1,1,22
	.word	541
	.byte	0,25
	.byte	'__nop',0,1,1,1,1,26
	.word	181
	.byte	27
	.word	207
	.byte	6,0,26
	.word	242
	.byte	27
	.word	274
	.byte	6,0,26
	.word	287
	.byte	6,0,26
	.word	340
	.byte	27
	.word	372
	.byte	27
	.word	383
	.byte	27
	.word	394
	.byte	6,0,26
	.word	444
	.byte	27
	.word	463
	.byte	6,0,26
	.word	479
	.byte	27
	.word	494
	.byte	27
	.word	508
	.byte	6,0,26
	.word	1287
	.byte	27
	.word	1327
	.byte	27
	.word	1345
	.byte	6,0,26
	.word	1365
	.byte	27
	.word	1403
	.byte	27
	.word	1421
	.byte	6,0,28
	.byte	'IfxScuWdt_clearCpuEndinit',0,3,217,1,17,1,1,1,1,5
	.byte	'password',0,3,217,1,50
	.word	717
	.byte	0,28
	.byte	'IfxScuWdt_clearSafetyEndinit',0,3,229,1,17,1,1,1,1,5
	.byte	'password',0,3,229,1,53
	.word	717
	.byte	0,28
	.byte	'IfxScuWdt_setCpuEndinit',0,3,239,1,17,1,1,1,1,5
	.byte	'password',0,3,239,1,48
	.word	717
	.byte	0,28
	.byte	'IfxScuWdt_setSafetyEndinit',0,3,249,1,17,1,1,1,1,5
	.byte	'password',0,3,249,1,51
	.word	717
	.byte	0,26
	.word	1441
	.byte	27
	.word	1492
	.byte	6,0,29
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,3,129,3,19
	.word	717
	.byte	1,1,1,1,29
	.byte	'IfxScuWdt_getSafetyWatchdogPassword',0,3,143,3,19
	.word	717
	.byte	1,1,1,1,26
	.word	9373
	.byte	27
	.word	9401
	.byte	27
	.word	9415
	.byte	27
	.word	9433
	.byte	6,0,26
	.word	9451
	.byte	6,0,29
	.byte	'IfxScuCcu_getSourceFrequency',0,7,173,7,20
	.word	233
	.byte	1,1,1,1,26
	.word	21032
	.byte	27
	.word	21062
	.byte	6,0,26
	.word	21077
	.byte	6,0
.L147:
	.byte	17,8,132,1,9,1,18
	.byte	'IfxCpu_CoreMode_halt',0,0,18
	.byte	'IfxCpu_CoreMode_run',0,1,18
	.byte	'IfxCpu_CoreMode_idle',0,2,18
	.byte	'IfxCpu_CoreMode_sleep',0,3,18
	.byte	'IfxCpu_CoreMode_stby',0,4,18
	.byte	'IfxCpu_CoreMode_unknown',0,5,0,10
	.byte	'_Ifx_SCU_PMCSR_Bits',0,4,244,6,16,4,11
	.byte	'REQSLP',0,1
	.word	700
	.byte	2,6,2,35,0,11
	.byte	'SMUSLP',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	700
	.byte	5,0,2,35,0,11
	.byte	'PMST',0,1
	.word	700
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	525
	.byte	21,0,2,35,0,0,12,4,239,13,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22228
	.byte	4,2,35,0,0,14
	.word	22352
.L163:
	.byte	3
	.word	22392
	.byte	26
	.word	21111
	.byte	6,0,26
	.word	21153
	.byte	27
	.word	21194
	.byte	6,0,26
	.word	21213
	.byte	27
	.word	21268
	.byte	6,0,26
	.word	21287
	.byte	27
	.word	21327
	.byte	27
	.word	21344
	.byte	19,6,0,0
.L205:
	.byte	3
	.word	525
.L208:
	.byte	14
	.word	319
.L213:
	.byte	3
	.word	525
.L219:
	.byte	14
	.word	319
.L222:
	.byte	3
	.word	319
.L248:
	.byte	3
	.word	525
	.byte	14
	.word	319
.L251:
	.byte	3
	.word	22482
	.byte	7
	.byte	'short int',0,2,5,30
	.byte	'__wchar_t',0,11,1,1
	.word	22492
	.byte	30
	.byte	'__size_t',0,11,1,1
	.word	525
	.byte	30
	.byte	'__ptrdiff_t',0,11,1,1
	.word	541
	.byte	31,1,3
	.word	22560
	.byte	30
	.byte	'__codeptr',0,11,1,1
	.word	22562
	.byte	30
	.byte	'boolean',0,12,101,29
	.word	700
	.byte	30
	.byte	'uint8',0,12,105,29
	.word	700
	.byte	30
	.byte	'uint16',0,12,109,29
	.word	717
	.byte	30
	.byte	'uint32',0,12,113,29
	.word	319
	.byte	30
	.byte	'uint64',0,12,118,29
	.word	407
	.byte	30
	.byte	'sint16',0,12,126,29
	.word	22492
	.byte	7
	.byte	'long int',0,4,5,30
	.byte	'sint32',0,12,131,1,29
	.word	22675
	.byte	7
	.byte	'long long int',0,8,5,30
	.byte	'sint64',0,12,139,1,29
	.word	22703
	.byte	30
	.byte	'float32',0,12,168,1,29
	.word	233
	.byte	30
	.byte	'pvoid',0,13,57,28
	.word	439
	.byte	30
	.byte	'Ifx_TickTime',0,13,79,28
	.word	22703
	.byte	17,13,130,1,9,1,18
	.byte	'Ifx_RxSel_a',0,0,18
	.byte	'Ifx_RxSel_b',0,1,18
	.byte	'Ifx_RxSel_c',0,2,18
	.byte	'Ifx_RxSel_d',0,3,18
	.byte	'Ifx_RxSel_e',0,4,18
	.byte	'Ifx_RxSel_f',0,5,18
	.byte	'Ifx_RxSel_g',0,6,18
	.byte	'Ifx_RxSel_h',0,7,0,30
	.byte	'Ifx_RxSel',0,13,140,1,3
	.word	22788
	.byte	14
	.word	433
	.byte	3
	.word	22926
	.byte	32,13,143,1,9,8,13
	.byte	'module',0
	.word	22931
	.byte	4,2,35,0,13
	.byte	'index',0
	.word	22675
	.byte	4,2,35,4,0,30
	.byte	'IfxModule_IndexMap',0,13,147,1,3
	.word	22936
	.byte	30
	.byte	'Ifx_CPU_A_Bits',0,9,48,3
	.word	19065
	.byte	30
	.byte	'Ifx_CPU_BIV_Bits',0,9,55,3
	.word	18171
	.byte	30
	.byte	'Ifx_CPU_BTV_Bits',0,9,62,3
	.word	18265
	.byte	30
	.byte	'Ifx_CPU_CCNT_Bits',0,9,69,3
	.word	15470
	.byte	30
	.byte	'Ifx_CPU_CCTRL_Bits',0,9,80,3
	.word	15311
	.byte	30
	.byte	'Ifx_CPU_COMPAT_Bits',0,9,89,3
	.word	12539
	.byte	30
	.byte	'Ifx_CPU_CORE_ID_Bits',0,9,96,3
	.word	18062
	.byte	30
	.byte	'Ifx_CPU_CPR_L_Bits',0,9,103,3
	.word	13861
	.byte	30
	.byte	'Ifx_CPU_CPR_U_Bits',0,9,110,3
	.word	13967
	.byte	30
	.byte	'Ifx_CPU_CPU_ID_Bits',0,9,118,3
	.word	17943
	.byte	30
	.byte	'Ifx_CPU_CPXE_Bits',0,9,125,3
	.word	14140
	.byte	30
	.byte	'Ifx_CPU_CREVT_Bits',0,9,136,1,3
	.word	16396
	.byte	30
	.byte	'Ifx_CPU_CUS_ID_Bits',0,9,143,1,3
	.word	18852
	.byte	30
	.byte	'Ifx_CPU_D_Bits',0,9,149,1,3
	.word	18968
	.byte	30
	.byte	'Ifx_CPU_DATR_Bits',0,9,163,1,3
	.word	10842
	.byte	30
	.byte	'Ifx_CPU_DBGSR_Bits',0,9,177,1,3
	.word	16003
	.byte	30
	.byte	'Ifx_CPU_DBGTCR_Bits',0,9,184,1,3
	.word	17155
	.byte	30
	.byte	'Ifx_CPU_DCON0_Bits',0,9,192,1,3
	.word	11487
	.byte	30
	.byte	'Ifx_CPU_DCON2_Bits',0,9,199,1,3
	.word	10140
	.byte	30
	.byte	'Ifx_CPU_DCX_Bits',0,9,206,1,3
	.word	17048
	.byte	30
	.byte	'Ifx_CPU_DEADD_Bits',0,9,212,1,3
	.word	11073
	.byte	30
	.byte	'Ifx_CPU_DIEAR_Bits',0,9,218,1,3
	.word	11165
	.byte	30
	.byte	'Ifx_CPU_DIETR_Bits',0,9,233,1,3
	.word	11246
	.byte	30
	.byte	'Ifx_CPU_DMS_Bits',0,9,240,1,3
	.word	16941
	.byte	30
	.byte	'Ifx_CPU_DPR_L_Bits',0,9,247,1,3
	.word	13579
	.byte	30
	.byte	'Ifx_CPU_DPR_U_Bits',0,9,254,1,3
	.word	13686
	.byte	30
	.byte	'Ifx_CPU_DPRE_Bits',0,9,133,2,3
	.word	14250
	.byte	30
	.byte	'Ifx_CPU_DPWE_Bits',0,9,140,2,3
	.word	14362
	.byte	30
	.byte	'Ifx_CPU_DSTR_Bits',0,9,161,2,3
	.word	10505
	.byte	30
	.byte	'Ifx_CPU_EXEVT_Bits',0,9,172,2,3
	.word	16230
	.byte	30
	.byte	'Ifx_CPU_FCX_Bits',0,9,180,2,3
	.word	18603
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,9,202,2,3
	.word	12689
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,9,212,2,3
	.word	13130
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,9,218,2,3
	.word	13043
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,9,224,2,3
	.word	13295
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,9,230,2,3
	.word	13386
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,9,236,2,3
	.word	13477
	.byte	30
	.byte	'Ifx_CPU_ICNT_Bits',0,9,243,2,3
	.word	15573
	.byte	30
	.byte	'Ifx_CPU_ICR_Bits',0,9,253,2,3
	.word	18446
	.byte	30
	.byte	'Ifx_CPU_ISP_Bits',0,9,131,3,3
	.word	18366
	.byte	30
	.byte	'Ifx_CPU_LCX_Bits',0,9,139,3,3
	.word	18723
	.byte	30
	.byte	'Ifx_CPU_M1CNT_Bits',0,9,146,3,3
	.word	15677
	.byte	30
	.byte	'Ifx_CPU_M2CNT_Bits',0,9,153,3,3
	.word	15782
	.byte	30
	.byte	'Ifx_CPU_M3CNT_Bits',0,9,160,3,3
	.word	15887
	.byte	30
	.byte	'Ifx_CPU_PC_Bits',0,9,167,3,3
	.word	17671
	.byte	30
	.byte	'Ifx_CPU_PCON0_Bits',0,9,175,3,3
	.word	12078
	.byte	30
	.byte	'Ifx_CPU_PCON1_Bits',0,9,183,3,3
	.word	11842
	.byte	30
	.byte	'Ifx_CPU_PCON2_Bits',0,9,190,3,3
	.word	11965
	.byte	30
	.byte	'Ifx_CPU_PCXI_Bits',0,9,200,3,3
	.word	17271
	.byte	30
	.byte	'Ifx_CPU_PIEAR_Bits',0,9,206,3,3
	.word	12206
	.byte	30
	.byte	'Ifx_CPU_PIETR_Bits',0,9,221,3,3
	.word	12287
	.byte	30
	.byte	'Ifx_CPU_PMA0_Bits',0,9,229,3,3
	.word	9773
	.byte	30
	.byte	'Ifx_CPU_PMA1_Bits',0,9,237,3,3
	.word	9899
	.byte	30
	.byte	'Ifx_CPU_PMA2_Bits',0,9,244,3,3
	.word	10025
	.byte	30
	.byte	'Ifx_CPU_PSTR_Bits',0,9,129,4,3
	.word	11626
	.byte	30
	.byte	'Ifx_CPU_PSW_Bits',0,9,147,4,3
	.word	17414
	.byte	30
	.byte	'Ifx_CPU_SEGEN_Bits',0,9,156,4,3
	.word	9502
	.byte	30
	.byte	'Ifx_CPU_SMACON_Bits',0,9,171,4,3
	.word	10253
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,9,174,4,16,4,11
	.byte	'EN',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,9,177,4,3
	.word	24625
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,9,180,4,16,4,11
	.byte	'reserved_0',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,9,183,4,3
	.word	24708
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,9,186,4,16,4,11
	.byte	'EN',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,9,189,4,3
	.word	24799
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,9,192,4,16,4,11
	.byte	'reserved_0',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,9,195,4,3
	.word	24890
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,9,198,4,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	525
	.byte	27,0,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,9,202,4,3
	.word	24989
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,9,205,4,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	525
	.byte	27,0,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,9,209,4,3
	.word	25096
	.byte	30
	.byte	'Ifx_CPU_SWEVT_Bits',0,9,220,4,3
	.word	16562
	.byte	30
	.byte	'Ifx_CPU_SYSCON_Bits',0,9,231,4,3
	.word	17771
	.byte	30
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,9,238,4,3
	.word	9655
	.byte	30
	.byte	'Ifx_CPU_TPS_CON_Bits',0,9,249,4,3
	.word	14485
	.byte	30
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,9,255,4,3
	.word	14667
	.byte	30
	.byte	'Ifx_CPU_TR_ADR_Bits',0,9,133,5,3
	.word	15157
	.byte	30
	.byte	'Ifx_CPU_TR_EVT_Bits',0,9,153,5,3
	.word	14828
	.byte	30
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,9,167,5,3
	.word	16737
	.byte	30
	.byte	'Ifx_CPU_A',0,9,180,5,3
	.word	19103
	.byte	30
	.byte	'Ifx_CPU_BIV',0,9,188,5,3
	.word	18225
	.byte	30
	.byte	'Ifx_CPU_BTV',0,9,196,5,3
	.word	18326
	.byte	30
	.byte	'Ifx_CPU_CCNT',0,9,204,5,3
	.word	15533
	.byte	30
	.byte	'Ifx_CPU_CCTRL',0,9,212,5,3
	.word	15430
	.byte	30
	.byte	'Ifx_CPU_COMPAT',0,9,220,5,3
	.word	12638
	.byte	30
	.byte	'Ifx_CPU_CORE_ID',0,9,228,5,3
	.word	18131
	.byte	30
	.byte	'Ifx_CPU_CPR_L',0,9,236,5,3
	.word	13927
	.byte	30
	.byte	'Ifx_CPU_CPR_U',0,9,244,5,3
	.word	14033
	.byte	30
	.byte	'Ifx_CPU_CPU_ID',0,9,252,5,3
	.word	18022
	.byte	30
	.byte	'Ifx_CPU_CPXE',0,9,132,6,3
	.word	14201
	.byte	30
	.byte	'Ifx_CPU_CREVT',0,9,140,6,3
	.word	16522
	.byte	30
	.byte	'Ifx_CPU_CUS_ID',0,9,148,6,3
	.word	18917
	.byte	30
	.byte	'Ifx_CPU_D',0,9,156,6,3
	.word	19007
	.byte	30
	.byte	'Ifx_CPU_DATR',0,9,164,6,3
	.word	11033
	.byte	30
	.byte	'Ifx_CPU_DBGSR',0,9,172,6,3
	.word	16190
	.byte	30
	.byte	'Ifx_CPU_DBGTCR',0,9,180,6,3
	.word	17220
	.byte	30
	.byte	'Ifx_CPU_DCON0',0,9,188,6,3
	.word	11575
	.byte	30
	.byte	'Ifx_CPU_DCON2',0,9,196,6,3
	.word	10213
	.byte	30
	.byte	'Ifx_CPU_DCX',0,9,204,6,3
	.word	17115
	.byte	30
	.byte	'Ifx_CPU_DEADD',0,9,212,6,3
	.word	11125
	.byte	30
	.byte	'Ifx_CPU_DIEAR',0,9,220,6,3
	.word	11206
	.byte	30
	.byte	'Ifx_CPU_DIETR',0,9,228,6,3
	.word	11447
	.byte	30
	.byte	'Ifx_CPU_DMS',0,9,236,6,3
	.word	17008
	.byte	30
	.byte	'Ifx_CPU_DPR_L',0,9,244,6,3
	.word	13646
	.byte	30
	.byte	'Ifx_CPU_DPR_U',0,9,252,6,3
	.word	13753
	.byte	30
	.byte	'Ifx_CPU_DPRE',0,9,132,7,3
	.word	14313
	.byte	30
	.byte	'Ifx_CPU_DPWE',0,9,140,7,3
	.word	14425
	.byte	30
	.byte	'Ifx_CPU_DSTR',0,9,148,7,3
	.word	10802
	.byte	30
	.byte	'Ifx_CPU_EXEVT',0,9,156,7,3
	.word	16356
	.byte	30
	.byte	'Ifx_CPU_FCX',0,9,164,7,3
	.word	18683
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,9,172,7,3
	.word	13003
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,9,180,7,3
	.word	13255
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,9,188,7,3
	.word	13090
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,9,196,7,3
	.word	13346
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,9,204,7,3
	.word	13437
	.byte	30
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,9,212,7,3
	.word	13528
	.byte	30
	.byte	'Ifx_CPU_ICNT',0,9,220,7,3
	.word	15637
	.byte	30
	.byte	'Ifx_CPU_ICR',0,9,228,7,3
	.word	18563
	.byte	30
	.byte	'Ifx_CPU_ISP',0,9,236,7,3
	.word	18406
	.byte	30
	.byte	'Ifx_CPU_LCX',0,9,244,7,3
	.word	18803
	.byte	30
	.byte	'Ifx_CPU_M1CNT',0,9,252,7,3
	.word	15742
	.byte	30
	.byte	'Ifx_CPU_M2CNT',0,9,132,8,3
	.word	15847
	.byte	30
	.byte	'Ifx_CPU_M3CNT',0,9,140,8,3
	.word	15952
	.byte	30
	.byte	'Ifx_CPU_PC',0,9,148,8,3
	.word	17731
	.byte	30
	.byte	'Ifx_CPU_PCON0',0,9,156,8,3
	.word	12166
	.byte	30
	.byte	'Ifx_CPU_PCON1',0,9,164,8,3
	.word	11925
	.byte	30
	.byte	'Ifx_CPU_PCON2',0,9,172,8,3
	.word	12038
	.byte	30
	.byte	'Ifx_CPU_PCXI',0,9,180,8,3
	.word	17374
	.byte	30
	.byte	'Ifx_CPU_PIEAR',0,9,188,8,3
	.word	12247
	.byte	30
	.byte	'Ifx_CPU_PIETR',0,9,196,8,3
	.word	12488
	.byte	30
	.byte	'Ifx_CPU_PMA0',0,9,204,8,3
	.word	9859
	.byte	30
	.byte	'Ifx_CPU_PMA1',0,9,212,8,3
	.word	9985
	.byte	30
	.byte	'Ifx_CPU_PMA2',0,9,220,8,3
	.word	10089
	.byte	30
	.byte	'Ifx_CPU_PSTR',0,9,228,8,3
	.word	11802
	.byte	30
	.byte	'Ifx_CPU_PSW',0,9,236,8,3
	.word	17631
	.byte	30
	.byte	'Ifx_CPU_SEGEN',0,9,244,8,3
	.word	9602
	.byte	30
	.byte	'Ifx_CPU_SMACON',0,9,252,8,3
	.word	10465
	.byte	12,9,255,8,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24625
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_ACCENA',0,9,132,9,3
	.word	26786
	.byte	12,9,135,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24708
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_ACCENB',0,9,140,9,3
	.word	26856
	.byte	12,9,143,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24799
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,9,148,9,3
	.word	26926
	.byte	12,9,151,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24890
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,9,156,9,3
	.word	27000
	.byte	12,9,159,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24989
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,9,164,9,3
	.word	27074
	.byte	12,9,167,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25096
	.byte	4,2,35,0,0,30
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,9,172,9,3
	.word	27144
	.byte	30
	.byte	'Ifx_CPU_SWEVT',0,9,180,9,3
	.word	16688
	.byte	30
	.byte	'Ifx_CPU_SYSCON',0,9,188,9,3
	.word	17903
	.byte	30
	.byte	'Ifx_CPU_TASK_ASI',0,9,196,9,3
	.word	9722
	.byte	30
	.byte	'Ifx_CPU_TPS_CON',0,9,204,9,3
	.word	14627
	.byte	30
	.byte	'Ifx_CPU_TPS_TIMER',0,9,212,9,3
	.word	14715
	.byte	30
	.byte	'Ifx_CPU_TR_ADR',0,9,220,9,3
	.word	15201
	.byte	30
	.byte	'Ifx_CPU_TR_EVT',0,9,228,9,3
	.word	15117
	.byte	30
	.byte	'Ifx_CPU_TRIG_ACC',0,9,236,9,3
	.word	16901
	.byte	14
	.word	14073
	.byte	30
	.byte	'Ifx_CPU_CPR',0,9,251,9,3
	.word	27413
	.byte	14
	.word	13793
	.byte	30
	.byte	'Ifx_CPU_DPR',0,9,130,10,3
	.word	27439
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN',0,9,133,10,25,16,13
	.byte	'LA',0
	.word	27074
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	27144
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	26926
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	27000
	.byte	4,2,35,12,0,14
	.word	27465
	.byte	30
	.byte	'Ifx_CPU_SPROT_RGN',0,9,139,10,3
	.word	27547
	.byte	14
	.word	14764
	.byte	30
	.byte	'Ifx_CPU_TPS',0,9,146,10,3
	.word	27579
	.byte	14
	.word	15241
	.byte	30
	.byte	'Ifx_CPU_TR',0,9,153,10,3
	.word	27605
	.byte	14
	.word	19152
	.byte	30
	.byte	'Ifx_CPU',0,9,130,11,3
	.word	27630
	.byte	17,10,127,9,1,18
	.byte	'IfxCpu_Id_0',0,0,18
	.byte	'IfxCpu_Id_1',0,1,18
	.byte	'IfxCpu_Id_none',0,2,0,30
	.byte	'IfxCpu_Id',0,10,132,1,3
	.word	27652
	.byte	30
	.byte	'IfxCpu_ResourceCpu',0,10,161,1,3
	.word	20953
	.byte	15,16
	.word	22936
	.byte	16,1,0,20
	.word	27750
	.byte	33
	.byte	'IfxCpu_cfg_indexMap',0,10,167,1,41
	.word	27759
	.byte	1,1,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,14,45,16,4,11
	.byte	'SRPN',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	700
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	700
	.byte	2,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	700
	.byte	3,0,2,35,1,11
	.byte	'ECC',0,1
	.word	700
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	700
	.byte	2,0,2,35,2,11
	.byte	'SRR',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	700
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	700
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	700
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	700
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SRC_SRCR_Bits',0,14,62,3
	.word	27795
	.byte	12,14,70,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27795
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SRC_SRCR',0,14,75,3
	.word	28111
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,14,86,25,4,13
	.byte	'SR',0
	.word	28111
	.byte	4,2,35,0,0,14
	.word	28171
	.byte	30
	.byte	'Ifx_SRC_AGBT',0,14,89,3
	.word	28203
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,14,92,25,12,13
	.byte	'TX',0
	.word	28111
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	28111
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	28111
	.byte	4,2,35,8,0,14
	.word	28229
	.byte	30
	.byte	'Ifx_SRC_ASCLIN',0,14,97,3
	.word	28288
	.byte	10
	.byte	'_Ifx_SRC_BCUSPB',0,14,100,25,4,13
	.byte	'SBSRC',0
	.word	28111
	.byte	4,2,35,0,0,14
	.word	28316
	.byte	30
	.byte	'Ifx_SRC_BCUSPB',0,14,103,3
	.word	28353
	.byte	15,64
	.word	28111
	.byte	16,15,0,10
	.byte	'_Ifx_SRC_CAN',0,14,106,25,64,13
	.byte	'INT',0
	.word	28381
	.byte	64,2,35,0,0,14
	.word	28390
	.byte	30
	.byte	'Ifx_SRC_CAN',0,14,109,3
	.word	28422
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,14,112,25,16,13
	.byte	'SR0',0
	.word	28111
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	28111
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	28111
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	28111
	.byte	4,2,35,12,0,14
	.word	28447
	.byte	30
	.byte	'Ifx_SRC_CCU6',0,14,118,3
	.word	28519
	.byte	15,8
	.word	28111
	.byte	16,1,0,10
	.byte	'_Ifx_SRC_CERBERUS',0,14,121,25,8,13
	.byte	'SR',0
	.word	28545
	.byte	8,2,35,0,0,14
	.word	28554
	.byte	30
	.byte	'Ifx_SRC_CERBERUS',0,14,124,3
	.word	28590
	.byte	10
	.byte	'_Ifx_SRC_CIF',0,14,127,25,16,13
	.byte	'MI',0
	.word	28111
	.byte	4,2,35,0,13
	.byte	'MIEP',0
	.word	28111
	.byte	4,2,35,4,13
	.byte	'ISP',0
	.word	28111
	.byte	4,2,35,8,13
	.byte	'MJPEG',0
	.word	28111
	.byte	4,2,35,12,0,14
	.word	28620
	.byte	30
	.byte	'Ifx_SRC_CIF',0,14,133,1,3
	.word	28693
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,14,136,1,25,4,13
	.byte	'SBSRC',0
	.word	28111
	.byte	4,2,35,0,0,14
	.word	28719
	.byte	30
	.byte	'Ifx_SRC_CPU',0,14,139,1,3
	.word	28754
	.byte	15,192,1
	.word	28111
	.byte	16,47,0,10
	.byte	'_Ifx_SRC_DMA',0,14,142,1,25,208,1,13
	.byte	'ERR',0
	.word	28111
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	4677
	.byte	12,2,35,4,13
	.byte	'CH',0
	.word	28780
	.byte	192,1,2,35,16,0,14
	.word	28790
	.byte	30
	.byte	'Ifx_SRC_DMA',0,14,147,1,3
	.word	28857
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,14,150,1,25,8,13
	.byte	'SRM',0
	.word	28111
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	28111
	.byte	4,2,35,4,0,14
	.word	28883
	.byte	30
	.byte	'Ifx_SRC_DSADC',0,14,154,1,3
	.word	28931
	.byte	10
	.byte	'_Ifx_SRC_EMEM',0,14,157,1,25,4,13
	.byte	'SR',0
	.word	28111
	.byte	4,2,35,0,0,14
	.word	28959
	.byte	30
	.byte	'Ifx_SRC_EMEM',0,14,160,1,3
	.word	28992
	.byte	15,40
	.word	700
	.byte	16,39,0,10
	.byte	'_Ifx_SRC_ERAY',0,14,163,1,25,80,13
	.byte	'INT',0
	.word	28545
	.byte	8,2,35,0,13
	.byte	'TINT',0
	.word	28545
	.byte	8,2,35,8,13
	.byte	'NDAT',0
	.word	28545
	.byte	8,2,35,16,13
	.byte	'MBSC',0
	.word	28545
	.byte	8,2,35,24,13
	.byte	'OBUSY',0
	.word	28111
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	28111
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	29019
	.byte	40,2,35,40,0,14
	.word	29028
	.byte	30
	.byte	'Ifx_SRC_ERAY',0,14,172,1,3
	.word	29155
	.byte	10
	.byte	'_Ifx_SRC_ETH',0,14,175,1,25,4,13
	.byte	'SR',0
	.word	28111
	.byte	4,2,35,0,0,14
	.word	29182
	.byte	30
	.byte	'Ifx_SRC_ETH',0,14,178,1,3
	.word	29214
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,14,181,1,25,4,13
	.byte	'SR',0
	.word	28111
	.byte	4,2,35,0,0,14
	.word	29240
	.byte	30
	.byte	'Ifx_SRC_FCE',0,14,184,1,3
	.word	29272
	.byte	10
	.byte	'_Ifx_SRC_FFT',0,14,187,1,25,12,13
	.byte	'DONE',0
	.word	28111
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	28111
	.byte	4,2,35,4,13
	.byte	'RFS',0
	.word	28111
	.byte	4,2,35,8,0,14
	.word	29298
	.byte	30
	.byte	'Ifx_SRC_FFT',0,14,192,1,3
	.word	29358
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,14,195,1,25,32,13
	.byte	'SR0',0
	.word	28111
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	28111
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	28111
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	28111
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	18843
	.byte	16,2,35,16,0,14
	.word	29384
	.byte	30
	.byte	'Ifx_SRC_GPSR',0,14,202,1,3
	.word	29478
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,14,205,1,25,48,13
	.byte	'CIRQ',0
	.word	28111
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	28111
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	28111
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	28111
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	28111
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	28111
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	3708
	.byte	24,2,35,24,0,14
	.word	29505
	.byte	30
	.byte	'Ifx_SRC_GPT12',0,14,214,1,3
	.word	29622
	.byte	15,12
	.word	28111
	.byte	16,2,0,15,32
	.word	28111
	.byte	16,7,0,15,32
	.word	29659
	.byte	16,0,0,15,88
	.word	700
	.byte	16,87,0,15,108
	.word	28111
	.byte	16,26,0,15,96
	.word	700
	.byte	16,95,0,15,96
	.word	29659
	.byte	16,2,0,15,160,3
	.word	700
	.byte	16,159,3,0,15,64
	.word	29659
	.byte	16,1,0,15,192,3
	.word	700
	.byte	16,191,3,0,15,16
	.word	28111
	.byte	16,3,0,15,64
	.word	29744
	.byte	16,3,0,15,192,2
	.word	700
	.byte	16,191,2,0,15,52
	.word	700
	.byte	16,51,0,10
	.byte	'_Ifx_SRC_GTM',0,14,217,1,25,204,18,13
	.byte	'AEIIRQ',0
	.word	28111
	.byte	4,2,35,0,13
	.byte	'ARUIRQ',0
	.word	29650
	.byte	12,2,35,4,13
	.byte	'reserved_10',0
	.word	2518
	.byte	4,2,35,16,13
	.byte	'BRCIRQ',0
	.word	28111
	.byte	4,2,35,20,13
	.byte	'CMPIRQ',0
	.word	28111
	.byte	4,2,35,24,13
	.byte	'SPEIRQ',0
	.word	28545
	.byte	8,2,35,28,13
	.byte	'reserved_24',0
	.word	4337
	.byte	8,2,35,36,13
	.byte	'PSM',0
	.word	29668
	.byte	32,2,35,44,13
	.byte	'reserved_4C',0
	.word	29677
	.byte	88,2,35,76,13
	.byte	'DPLL',0
	.word	29686
	.byte	108,3,35,164,1,13
	.byte	'reserved_110',0
	.word	29695
	.byte	96,3,35,144,2,13
	.byte	'ERR',0
	.word	28111
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	4677
	.byte	12,3,35,244,2,13
	.byte	'TIM',0
	.word	29704
	.byte	96,3,35,128,3,13
	.byte	'reserved_1E0',0
	.word	29713
	.byte	160,3,3,35,224,3,13
	.byte	'MCS',0
	.word	29704
	.byte	96,3,35,128,7,13
	.byte	'reserved_3E0',0
	.word	29713
	.byte	160,3,3,35,224,7,13
	.byte	'TOM',0
	.word	29724
	.byte	64,3,35,128,11,13
	.byte	'reserved_5C0',0
	.word	29733
	.byte	192,3,3,35,192,11,13
	.byte	'ATOM',0
	.word	29753
	.byte	64,3,35,128,15,13
	.byte	'reserved_7C0',0
	.word	29762
	.byte	192,2,3,35,192,15,13
	.byte	'MCSW0',0
	.word	29650
	.byte	12,3,35,128,18,13
	.byte	'reserved_90C',0
	.word	29773
	.byte	52,3,35,140,18,13
	.byte	'MCSW1',0
	.word	29650
	.byte	12,3,35,192,18,0,14
	.word	29782
	.byte	30
	.byte	'Ifx_SRC_GTM',0,14,243,1,3
	.word	30242
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,14,246,1,25,4,13
	.byte	'SR',0
	.word	28111
	.byte	4,2,35,0,0,14
	.word	30268
	.byte	30
	.byte	'Ifx_SRC_HSCT',0,14,249,1,3
	.word	30301
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,14,252,1,25,16,13
	.byte	'COK',0
	.word	28111
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	28111
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	28111
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	28111
	.byte	4,2,35,12,0,14
	.word	30328
	.byte	30
	.byte	'Ifx_SRC_HSSL',0,14,130,2,3
	.word	30401
	.byte	15,56
	.word	700
	.byte	16,55,0,10
	.byte	'_Ifx_SRC_I2C',0,14,133,2,25,80,13
	.byte	'BREQ',0
	.word	28111
	.byte	4,2,35,0,13
	.byte	'LBREQ',0
	.word	28111
	.byte	4,2,35,4,13
	.byte	'SREQ',0
	.word	28111
	.byte	4,2,35,8,13
	.byte	'LSREQ',0
	.word	28111
	.byte	4,2,35,12,13
	.byte	'ERR',0
	.word	28111
	.byte	4,2,35,16,13
	.byte	'P',0
	.word	28111
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	30428
	.byte	56,2,35,24,0,14
	.word	30437
	.byte	30
	.byte	'Ifx_SRC_I2C',0,14,142,2,3
	.word	30560
	.byte	10
	.byte	'_Ifx_SRC_LMU',0,14,145,2,25,4,13
	.byte	'SR',0
	.word	28111
	.byte	4,2,35,0,0,14
	.word	30586
	.byte	30
	.byte	'Ifx_SRC_LMU',0,14,148,2,3
	.word	30618
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,14,151,2,25,20,13
	.byte	'SR0',0
	.word	28111
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	28111
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	28111
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	28111
	.byte	4,2,35,12,13
	.byte	'SR4',0
	.word	28111
	.byte	4,2,35,16,0,14
	.word	30644
	.byte	30
	.byte	'Ifx_SRC_MSC',0,14,158,2,3
	.word	30729
	.byte	10
	.byte	'_Ifx_SRC_PMU',0,14,161,2,25,4,13
	.byte	'SR',0
	.word	28111
	.byte	4,2,35,0,0,14
	.word	30755
	.byte	30
	.byte	'Ifx_SRC_PMU',0,14,164,2,3
	.word	30787
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,14,167,2,25,32,13
	.byte	'SR',0
	.word	29659
	.byte	32,2,35,0,0,14
	.word	30813
	.byte	30
	.byte	'Ifx_SRC_PSI5',0,14,170,2,3
	.word	30846
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,14,173,2,25,32,13
	.byte	'SR',0
	.word	29659
	.byte	32,2,35,0,0,14
	.word	30873
	.byte	30
	.byte	'Ifx_SRC_PSI5S',0,14,176,2,3
	.word	30907
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,14,179,2,25,24,13
	.byte	'TX',0
	.word	28111
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	28111
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	28111
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	28111
	.byte	4,2,35,12,13
	.byte	'HC',0
	.word	28111
	.byte	4,2,35,16,13
	.byte	'U',0
	.word	28111
	.byte	4,2,35,20,0,14
	.word	30935
	.byte	30
	.byte	'Ifx_SRC_QSPI',0,14,187,2,3
	.word	31028
	.byte	10
	.byte	'_Ifx_SRC_SCR',0,14,190,2,25,4,13
	.byte	'SR',0
	.word	28111
	.byte	4,2,35,0,0,14
	.word	31055
	.byte	30
	.byte	'Ifx_SRC_SCR',0,14,193,2,3
	.word	31087
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,14,196,2,25,20,13
	.byte	'DTS',0
	.word	28111
	.byte	4,2,35,0,13
	.byte	'ERU',0
	.word	29744
	.byte	16,2,35,4,0,14
	.word	31113
	.byte	30
	.byte	'Ifx_SRC_SCU',0,14,200,2,3
	.word	31159
	.byte	15,24
	.word	28111
	.byte	16,5,0,10
	.byte	'_Ifx_SRC_SENT',0,14,203,2,25,24,13
	.byte	'SR',0
	.word	31185
	.byte	24,2,35,0,0,14
	.word	31194
	.byte	30
	.byte	'Ifx_SRC_SENT',0,14,206,2,3
	.word	31227
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,14,209,2,25,12,13
	.byte	'SR',0
	.word	29650
	.byte	12,2,35,0,0,14
	.word	31254
	.byte	30
	.byte	'Ifx_SRC_SMU',0,14,212,2,3
	.word	31286
	.byte	10
	.byte	'_Ifx_SRC_STM',0,14,215,2,25,8,13
	.byte	'SR0',0
	.word	28111
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	28111
	.byte	4,2,35,4,0,14
	.word	31312
	.byte	30
	.byte	'Ifx_SRC_STM',0,14,219,2,3
	.word	31358
	.byte	10
	.byte	'_Ifx_SRC_VADCCG',0,14,222,2,25,16,13
	.byte	'SR0',0
	.word	28111
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	28111
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	28111
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	28111
	.byte	4,2,35,12,0,14
	.word	31384
	.byte	30
	.byte	'Ifx_SRC_VADCCG',0,14,228,2,3
	.word	31459
	.byte	10
	.byte	'_Ifx_SRC_VADCG',0,14,231,2,25,16,13
	.byte	'SR0',0
	.word	28111
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	28111
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	28111
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	28111
	.byte	4,2,35,12,0,14
	.word	31488
	.byte	30
	.byte	'Ifx_SRC_VADCG',0,14,237,2,3
	.word	31562
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,14,240,2,25,4,13
	.byte	'SRC',0
	.word	28111
	.byte	4,2,35,0,0,14
	.word	31590
	.byte	30
	.byte	'Ifx_SRC_XBAR',0,14,243,2,3
	.word	31624
	.byte	15,4
	.word	28171
	.byte	16,0,0,14
	.word	31651
	.byte	10
	.byte	'_Ifx_SRC_GAGBT',0,14,128,3,25,4,13
	.byte	'AGBT',0
	.word	31660
	.byte	4,2,35,0,0,14
	.word	31665
	.byte	30
	.byte	'Ifx_SRC_GAGBT',0,14,131,3,3
	.word	31701
	.byte	15,48
	.word	28229
	.byte	16,3,0,14
	.word	31729
	.byte	10
	.byte	'_Ifx_SRC_GASCLIN',0,14,134,3,25,48,13
	.byte	'ASCLIN',0
	.word	31738
	.byte	48,2,35,0,0,14
	.word	31743
	.byte	30
	.byte	'Ifx_SRC_GASCLIN',0,14,137,3,3
	.word	31783
	.byte	14
	.word	28316
	.byte	10
	.byte	'_Ifx_SRC_GBCU',0,14,140,3,25,4,13
	.byte	'SPB',0
	.word	31813
	.byte	4,2,35,0,0,14
	.word	31818
	.byte	30
	.byte	'Ifx_SRC_GBCU',0,14,143,3,3
	.word	31852
	.byte	15,64
	.word	28390
	.byte	16,0,0,14
	.word	31879
	.byte	10
	.byte	'_Ifx_SRC_GCAN',0,14,146,3,25,64,13
	.byte	'CAN',0
	.word	31888
	.byte	64,2,35,0,0,14
	.word	31893
	.byte	30
	.byte	'Ifx_SRC_GCAN',0,14,149,3,3
	.word	31927
	.byte	15,32
	.word	28447
	.byte	16,1,0,14
	.word	31954
	.byte	10
	.byte	'_Ifx_SRC_GCCU6',0,14,152,3,25,32,13
	.byte	'CCU6',0
	.word	31963
	.byte	32,2,35,0,0,14
	.word	31968
	.byte	30
	.byte	'Ifx_SRC_GCCU6',0,14,155,3,3
	.word	32004
	.byte	14
	.word	28554
	.byte	10
	.byte	'_Ifx_SRC_GCERBERUS',0,14,158,3,25,8,13
	.byte	'CERBERUS',0
	.word	32032
	.byte	8,2,35,0,0,14
	.word	32037
	.byte	30
	.byte	'Ifx_SRC_GCERBERUS',0,14,161,3,3
	.word	32081
	.byte	15,16
	.word	28620
	.byte	16,0,0,14
	.word	32113
	.byte	10
	.byte	'_Ifx_SRC_GCIF',0,14,164,3,25,16,13
	.byte	'CIF',0
	.word	32122
	.byte	16,2,35,0,0,14
	.word	32127
	.byte	30
	.byte	'Ifx_SRC_GCIF',0,14,167,3,3
	.word	32161
	.byte	15,8
	.word	28719
	.byte	16,1,0,14
	.word	32188
	.byte	10
	.byte	'_Ifx_SRC_GCPU',0,14,170,3,25,8,13
	.byte	'CPU',0
	.word	32197
	.byte	8,2,35,0,0,14
	.word	32202
	.byte	30
	.byte	'Ifx_SRC_GCPU',0,14,173,3,3
	.word	32236
	.byte	15,208,1
	.word	28790
	.byte	16,0,0,14
	.word	32263
	.byte	10
	.byte	'_Ifx_SRC_GDMA',0,14,176,3,25,208,1,13
	.byte	'DMA',0
	.word	32273
	.byte	208,1,2,35,0,0,14
	.word	32278
	.byte	30
	.byte	'Ifx_SRC_GDMA',0,14,179,3,3
	.word	32314
	.byte	14
	.word	28883
	.byte	14
	.word	28883
	.byte	14
	.word	28883
	.byte	10
	.byte	'_Ifx_SRC_GDSADC',0,14,182,3,25,32,13
	.byte	'DSADC0',0
	.word	32341
	.byte	8,2,35,0,13
	.byte	'reserved_8',0
	.word	4337
	.byte	8,2,35,8,13
	.byte	'DSADC2',0
	.word	32346
	.byte	8,2,35,16,13
	.byte	'DSADC3',0
	.word	32351
	.byte	8,2,35,24,0,14
	.word	32356
	.byte	30
	.byte	'Ifx_SRC_GDSADC',0,14,188,3,3
	.word	32447
	.byte	15,4
	.word	28959
	.byte	16,0,0,14
	.word	32476
	.byte	10
	.byte	'_Ifx_SRC_GEMEM',0,14,191,3,25,4,13
	.byte	'EMEM',0
	.word	32485
	.byte	4,2,35,0,0,14
	.word	32490
	.byte	30
	.byte	'Ifx_SRC_GEMEM',0,14,194,3,3
	.word	32526
	.byte	15,80
	.word	29028
	.byte	16,0,0,14
	.word	32554
	.byte	10
	.byte	'_Ifx_SRC_GERAY',0,14,197,3,25,80,13
	.byte	'ERAY',0
	.word	32563
	.byte	80,2,35,0,0,14
	.word	32568
	.byte	30
	.byte	'Ifx_SRC_GERAY',0,14,200,3,3
	.word	32604
	.byte	15,4
	.word	29182
	.byte	16,0,0,14
	.word	32632
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,14,203,3,25,4,13
	.byte	'ETH',0
	.word	32641
	.byte	4,2,35,0,0,14
	.word	32646
	.byte	30
	.byte	'Ifx_SRC_GETH',0,14,206,3,3
	.word	32680
	.byte	15,4
	.word	29240
	.byte	16,0,0,14
	.word	32707
	.byte	10
	.byte	'_Ifx_SRC_GFCE',0,14,209,3,25,4,13
	.byte	'FCE',0
	.word	32716
	.byte	4,2,35,0,0,14
	.word	32721
	.byte	30
	.byte	'Ifx_SRC_GFCE',0,14,212,3,3
	.word	32755
	.byte	15,12
	.word	29298
	.byte	16,0,0,14
	.word	32782
	.byte	10
	.byte	'_Ifx_SRC_GFFT',0,14,215,3,25,12,13
	.byte	'FFT',0
	.word	32791
	.byte	12,2,35,0,0,14
	.word	32796
	.byte	30
	.byte	'Ifx_SRC_GFFT',0,14,218,3,3
	.word	32830
	.byte	15,64
	.word	29384
	.byte	16,1,0,14
	.word	32857
	.byte	10
	.byte	'_Ifx_SRC_GGPSR',0,14,221,3,25,64,13
	.byte	'GPSR',0
	.word	32866
	.byte	64,2,35,0,0,14
	.word	32871
	.byte	30
	.byte	'Ifx_SRC_GGPSR',0,14,224,3,3
	.word	32907
	.byte	15,48
	.word	29505
	.byte	16,0,0,14
	.word	32935
	.byte	10
	.byte	'_Ifx_SRC_GGPT12',0,14,227,3,25,48,13
	.byte	'GPT12',0
	.word	32944
	.byte	48,2,35,0,0,14
	.word	32949
	.byte	30
	.byte	'Ifx_SRC_GGPT12',0,14,230,3,3
	.word	32987
	.byte	15,204,18
	.word	29782
	.byte	16,0,0,14
	.word	33016
	.byte	10
	.byte	'_Ifx_SRC_GGTM',0,14,233,3,25,204,18,13
	.byte	'GTM',0
	.word	33026
	.byte	204,18,2,35,0,0,14
	.word	33031
	.byte	30
	.byte	'Ifx_SRC_GGTM',0,14,236,3,3
	.word	33067
	.byte	15,4
	.word	30268
	.byte	16,0,0,14
	.word	33094
	.byte	10
	.byte	'_Ifx_SRC_GHSCT',0,14,239,3,25,4,13
	.byte	'HSCT',0
	.word	33103
	.byte	4,2,35,0,0,14
	.word	33108
	.byte	30
	.byte	'Ifx_SRC_GHSCT',0,14,242,3,3
	.word	33144
	.byte	15,64
	.word	30328
	.byte	16,3,0,14
	.word	33172
	.byte	10
	.byte	'_Ifx_SRC_GHSSL',0,14,245,3,25,68,13
	.byte	'HSSL',0
	.word	33181
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	28111
	.byte	4,2,35,64,0,14
	.word	33186
	.byte	30
	.byte	'Ifx_SRC_GHSSL',0,14,249,3,3
	.word	33235
	.byte	15,80
	.word	30437
	.byte	16,0,0,14
	.word	33263
	.byte	10
	.byte	'_Ifx_SRC_GI2C',0,14,252,3,25,80,13
	.byte	'I2C',0
	.word	33272
	.byte	80,2,35,0,0,14
	.word	33277
	.byte	30
	.byte	'Ifx_SRC_GI2C',0,14,255,3,3
	.word	33311
	.byte	15,4
	.word	30586
	.byte	16,0,0,14
	.word	33338
	.byte	10
	.byte	'_Ifx_SRC_GLMU',0,14,130,4,25,4,13
	.byte	'LMU',0
	.word	33347
	.byte	4,2,35,0,0,14
	.word	33352
	.byte	30
	.byte	'Ifx_SRC_GLMU',0,14,133,4,3
	.word	33386
	.byte	15,40
	.word	30644
	.byte	16,1,0,14
	.word	33413
	.byte	10
	.byte	'_Ifx_SRC_GMSC',0,14,136,4,25,40,13
	.byte	'MSC',0
	.word	33422
	.byte	40,2,35,0,0,14
	.word	33427
	.byte	30
	.byte	'Ifx_SRC_GMSC',0,14,139,4,3
	.word	33461
	.byte	15,8
	.word	30755
	.byte	16,1,0,14
	.word	33488
	.byte	10
	.byte	'_Ifx_SRC_GPMU',0,14,142,4,25,8,13
	.byte	'PMU',0
	.word	33497
	.byte	8,2,35,0,0,14
	.word	33502
	.byte	30
	.byte	'Ifx_SRC_GPMU',0,14,145,4,3
	.word	33536
	.byte	15,32
	.word	30813
	.byte	16,0,0,14
	.word	33563
	.byte	10
	.byte	'_Ifx_SRC_GPSI5',0,14,148,4,25,32,13
	.byte	'PSI5',0
	.word	33572
	.byte	32,2,35,0,0,14
	.word	33577
	.byte	30
	.byte	'Ifx_SRC_GPSI5',0,14,151,4,3
	.word	33613
	.byte	15,32
	.word	30873
	.byte	16,0,0,14
	.word	33641
	.byte	10
	.byte	'_Ifx_SRC_GPSI5S',0,14,154,4,25,32,13
	.byte	'PSI5S',0
	.word	33650
	.byte	32,2,35,0,0,14
	.word	33655
	.byte	30
	.byte	'Ifx_SRC_GPSI5S',0,14,157,4,3
	.word	33693
	.byte	15,96
	.word	30935
	.byte	16,3,0,14
	.word	33722
	.byte	10
	.byte	'_Ifx_SRC_GQSPI',0,14,160,4,25,96,13
	.byte	'QSPI',0
	.word	33731
	.byte	96,2,35,0,0,14
	.word	33736
	.byte	30
	.byte	'Ifx_SRC_GQSPI',0,14,163,4,3
	.word	33772
	.byte	15,4
	.word	31055
	.byte	16,0,0,14
	.word	33800
	.byte	10
	.byte	'_Ifx_SRC_GSCR',0,14,166,4,25,4,13
	.byte	'SCR',0
	.word	33809
	.byte	4,2,35,0,0,14
	.word	33814
	.byte	30
	.byte	'Ifx_SRC_GSCR',0,14,169,4,3
	.word	33848
	.byte	14
	.word	31113
	.byte	10
	.byte	'_Ifx_SRC_GSCU',0,14,172,4,25,20,13
	.byte	'SCU',0
	.word	33875
	.byte	20,2,35,0,0,14
	.word	33880
	.byte	30
	.byte	'Ifx_SRC_GSCU',0,14,175,4,3
	.word	33914
	.byte	15,24
	.word	31194
	.byte	16,0,0,14
	.word	33941
	.byte	10
	.byte	'_Ifx_SRC_GSENT',0,14,178,4,25,24,13
	.byte	'SENT',0
	.word	33950
	.byte	24,2,35,0,0,14
	.word	33955
	.byte	30
	.byte	'Ifx_SRC_GSENT',0,14,181,4,3
	.word	33991
	.byte	15,12
	.word	31254
	.byte	16,0,0,14
	.word	34019
	.byte	10
	.byte	'_Ifx_SRC_GSMU',0,14,184,4,25,12,13
	.byte	'SMU',0
	.word	34028
	.byte	12,2,35,0,0,14
	.word	34033
	.byte	30
	.byte	'Ifx_SRC_GSMU',0,14,187,4,3
	.word	34067
	.byte	15,16
	.word	31312
	.byte	16,1,0,14
	.word	34094
	.byte	10
	.byte	'_Ifx_SRC_GSTM',0,14,190,4,25,16,13
	.byte	'STM',0
	.word	34103
	.byte	16,2,35,0,0,14
	.word	34108
	.byte	30
	.byte	'Ifx_SRC_GSTM',0,14,193,4,3
	.word	34142
	.byte	15,64
	.word	31488
	.byte	16,3,0,14
	.word	34169
	.byte	15,224,1
	.word	700
	.byte	16,223,1,0,15,32
	.word	31384
	.byte	16,1,0,14
	.word	34194
	.byte	10
	.byte	'_Ifx_SRC_GVADC',0,14,196,4,25,192,2,13
	.byte	'G',0
	.word	34178
	.byte	64,2,35,0,13
	.byte	'reserved_40',0
	.word	34183
	.byte	224,1,2,35,64,13
	.byte	'CG',0
	.word	34203
	.byte	32,3,35,160,2,0,14
	.word	34208
	.byte	30
	.byte	'Ifx_SRC_GVADC',0,14,201,4,3
	.word	34277
	.byte	14
	.word	31590
	.byte	10
	.byte	'_Ifx_SRC_GXBAR',0,14,204,4,25,4,13
	.byte	'XBAR',0
	.word	34305
	.byte	4,2,35,0,0,14
	.word	34310
	.byte	30
	.byte	'Ifx_SRC_GXBAR',0,14,207,4,3
	.word	34346
	.byte	10
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,4,45,16,4,11
	.byte	'EN0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	700
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	700
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	700
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	700
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	700
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	700
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	700
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_ACCEN0_Bits',0,4,79,3
	.word	34374
	.byte	10
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,4,82,16,4,11
	.byte	'reserved_0',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_SCU_ACCEN1_Bits',0,4,85,3
	.word	34931
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,88,16,4,11
	.byte	'STM0DIS',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	525
	.byte	29,0,2,35,0,0,30
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,94,3
	.word	35008
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,97,16,4,11
	.byte	'BAUD1DIV',0,1
	.word	700
	.byte	4,4,2,35,0,11
	.byte	'BAUD2DIV',0,1
	.word	700
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	700
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	700
	.byte	4,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	700
	.byte	4,4,2,35,2,11
	.byte	'FSI2DIV',0,1
	.word	700
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	700
	.byte	2,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	700
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	700
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	700
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,111,3
	.word	35144
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,114,16,4,11
	.byte	'CANDIV',0,1
	.word	700
	.byte	4,4,2,35,0,11
	.byte	'ERAYDIV',0,1
	.word	700
	.byte	4,0,2,35,0,11
	.byte	'STMDIV',0,1
	.word	700
	.byte	4,4,2,35,1,11
	.byte	'GTMDIV',0,1
	.word	700
	.byte	4,0,2,35,1,11
	.byte	'ETHDIV',0,1
	.word	700
	.byte	4,4,2,35,2,11
	.byte	'ASCLINFDIV',0,1
	.word	700
	.byte	4,0,2,35,2,11
	.byte	'ASCLINSDIV',0,1
	.word	700
	.byte	4,4,2,35,3,11
	.byte	'INSEL',0,1
	.word	700
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,126,3
	.word	35424
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,129,1,16,4,11
	.byte	'BBBDIV',0,1
	.word	700
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	525
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,135,1,3
	.word	35662
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,138,1,16,4,11
	.byte	'PLLDIV',0,1
	.word	700
	.byte	6,2,2,35,0,11
	.byte	'PLLSEL',0,1
	.word	700
	.byte	2,0,2,35,0,11
	.byte	'PLLERAYDIV',0,1
	.word	700
	.byte	6,2,2,35,1,11
	.byte	'PLLERAYSEL',0,1
	.word	700
	.byte	2,0,2,35,1,11
	.byte	'SRIDIV',0,1
	.word	700
	.byte	6,2,2,35,2,11
	.byte	'SRISEL',0,1
	.word	700
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	700
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,150,1,3
	.word	35790
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,153,1,16,4,11
	.byte	'SPBDIV',0,1
	.word	700
	.byte	6,2,2,35,0,11
	.byte	'SPBSEL',0,1
	.word	700
	.byte	2,0,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	700
	.byte	6,2,2,35,1,11
	.byte	'GTMSEL',0,1
	.word	700
	.byte	2,0,2,35,1,11
	.byte	'STMDIV',0,1
	.word	700
	.byte	6,2,2,35,2,11
	.byte	'STMSEL',0,1
	.word	700
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	700
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,165,1,3
	.word	36033
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,168,1,16,4,11
	.byte	'MAXDIV',0,1
	.word	700
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	525
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,174,1,3
	.word	36268
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,177,1,16,4,11
	.byte	'CPU0DIV',0,1
	.word	700
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	525
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,181,1,3
	.word	36396
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,4,184,1,16,4,11
	.byte	'CPU1DIV',0,1
	.word	700
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	525
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON7_Bits',0,4,188,1,3
	.word	36496
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,191,1,16,4,11
	.byte	'CHREV',0,1
	.word	700
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	700
	.byte	2,0,2,35,0,11
	.byte	'CHID',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'EEA',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	700
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	700
	.byte	4,4,2,35,3,11
	.byte	'SP',0,1
	.word	700
	.byte	2,2,2,35,3,11
	.byte	'SEC',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,202,1,3
	.word	36596
	.byte	10
	.byte	'_Ifx_SCU_DTSCON_Bits',0,4,205,1,16,4,11
	.byte	'PWD',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'START',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	700
	.byte	2,4,2,35,0,11
	.byte	'CAL',0,4
	.word	525
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	7,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_DTSCON_Bits',0,4,213,1,3
	.word	36804
	.byte	10
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,4,216,1,16,4,11
	.byte	'LOWER',0,2
	.word	717
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	700
	.byte	5,1,2,35,1,11
	.byte	'LLU',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	717
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	700
	.byte	4,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_DTSLIM_Bits',0,4,225,1,3
	.word	36969
	.byte	10
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,4,228,1,16,4,11
	.byte	'RESULT',0,2
	.word	717
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	700
	.byte	4,2,2,35,1,11
	.byte	'RDY',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'BUSY',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,4,235,1,3
	.word	37152
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,4,238,1,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	700
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	700
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	525
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	700
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	700
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	700
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	700
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EICR_Bits',0,4,129,2,3
	.word	37306
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,132,2,16,4,11
	.byte	'INTF0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	525
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SCU_EIFR_Bits',0,4,143,2,3
	.word	37670
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,146,2,16,4,11
	.byte	'POL',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	717
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	700
	.byte	6,0,2,35,2,11
	.byte	'EMSFM',0,1
	.word	700
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	700
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	700
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_EMSR_Bits',0,4,159,2,3
	.word	37881
	.byte	10
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,4,162,2,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	717
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	525
	.byte	23,0,2,35,0,0,30
	.byte	'Ifx_SCU_ESRCFG_Bits',0,4,167,2,3
	.word	38133
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,170,2,16,4,11
	.byte	'ARI',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	525
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,175,2,3
	.word	38251
	.byte	10
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,4,178,2,16,4,11
	.byte	'reserved_0',0,4
	.word	525
	.byte	28,4,2,35,0,11
	.byte	'EVR13OFF',0,1
	.word	700
	.byte	1,3,2,35,3,11
	.byte	'BPEVR13OFF',0,1
	.word	700
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVR13CON_Bits',0,4,185,2,3
	.word	38362
	.byte	10
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,4,188,2,16,4,11
	.byte	'reserved_0',0,4
	.word	525
	.byte	28,4,2,35,0,11
	.byte	'EVR33OFF',0,1
	.word	700
	.byte	1,3,2,35,3,11
	.byte	'BPEVR33OFF',0,1
	.word	700
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVR33CON_Bits',0,4,195,2,3
	.word	38525
	.byte	10
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,4,198,2,16,4,11
	.byte	'ADC13V',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	700
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,4,205,2,3
	.word	38688
	.byte	10
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,4,208,2,16,4,11
	.byte	'DVS13TRIM',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'DVS33TRIM',0,1
	.word	700
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,4,215,2,3
	.word	38846
	.byte	10
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,4,218,2,16,4,11
	.byte	'EVR13OVMOD',0,1
	.word	700
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	700
	.byte	2,4,2,35,0,11
	.byte	'EVR13UVMOD',0,1
	.word	700
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	700
	.byte	2,0,2,35,0,11
	.byte	'EVR33OVMOD',0,1
	.word	700
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	700
	.byte	2,4,2,35,1,11
	.byte	'EVR33UVMOD',0,1
	.word	700
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	700
	.byte	2,0,2,35,1,11
	.byte	'SWDOVMOD',0,1
	.word	700
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	700
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	700
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	717
	.byte	10,0,2,35,2,0,30
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,4,232,2,3
	.word	39011
	.byte	10
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,4,235,2,16,4,11
	.byte	'OSCTRIM',0,2
	.word	717
	.byte	10,6,2,35,0,11
	.byte	'OSCPTAT',0,1
	.word	700
	.byte	6,0,2,35,1,11
	.byte	'OSCANASEL',0,1
	.word	700
	.byte	4,4,2,35,2,11
	.byte	'HPBGTRIM',0,2
	.word	717
	.byte	7,5,2,35,2,11
	.byte	'HPBGCLKEN',0,1
	.word	700
	.byte	1,4,2,35,3,11
	.byte	'OSC3V3',0,1
	.word	700
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	700
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,4,245,2,3
	.word	39340
	.byte	10
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,4,248,2,16,4,11
	.byte	'EVR13OVVAL',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	700
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVROVMON_Bits',0,4,255,2,3
	.word	39561
	.byte	10
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,4,130,3,16,4,11
	.byte	'RST13TRIM',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	525
	.byte	16,8,2,35,0,11
	.byte	'RST13OFF',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'BPRST13OFF',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	700
	.byte	1,5,2,35,3,11
	.byte	'BPRST33OFF',0,1
	.word	700
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	700
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	700
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,4,142,3,3
	.word	39724
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,4,145,3,16,4,11
	.byte	'SD5P',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'SD5I',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'SD5D',0,1
	.word	700
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,4,152,3,3
	.word	39996
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,4,155,3,16,4,11
	.byte	'SD33P',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'SD33I',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'SD33D',0,1
	.word	700
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,4,162,3,3
	.word	40149
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,4,165,3,16,4,11
	.byte	'CT5REG0',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'CT5REG1',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'CT5REG2',0,1
	.word	700
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,4,172,3,3
	.word	40305
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,4,175,3,16,4,11
	.byte	'CT5REG3',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'CT5REG4',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,4,181,3,3
	.word	40467
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,4,184,3,16,4,11
	.byte	'CT33REG0',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'CT33REG1',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'CT33REG2',0,1
	.word	700
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,4,191,3,3
	.word	40610
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,4,194,3,16,4,11
	.byte	'CT33REG3',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'CT33REG4',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,4,200,3,3
	.word	40775
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,4,203,3,16,4,11
	.byte	'SDFREQSPRD',0,2
	.word	717
	.byte	16,0,2,35,0,11
	.byte	'SDFREQ',0,1
	.word	700
	.byte	8,0,2,35,2,11
	.byte	'SDSTEP',0,1
	.word	700
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	700
	.byte	2,2,2,35,3,11
	.byte	'SDSAMPLE',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,4,211,3,3
	.word	40920
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,4,214,3,16,4,11
	.byte	'DRVP',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'SDMINMAXDC',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'DRVN',0,1
	.word	700
	.byte	8,0,2,35,2,11
	.byte	'SDLUT',0,1
	.word	700
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,4,222,3,3
	.word	41101
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,4,225,3,16,4,11
	.byte	'SDPWMPRE',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'SDPID',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'SDVOKLVL',0,1
	.word	700
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,4,232,3,3
	.word	41275
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,4,235,3,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'SYNCDIV',0,1
	.word	700
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	525
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,4,241,3,3
	.word	41435
	.byte	10
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,4,244,3,16,4,11
	.byte	'EVR13',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'OV13',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'EVR33',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'OV33',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'UV13',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'UV33',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'EXTPASS13',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'EXTPASS33',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'BGPROK',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	525
	.byte	21,0,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,4,130,4,3
	.word	41579
	.byte	10
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,4,133,4,16,4,11
	.byte	'EVR13TRIM',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,4,139,4,3
	.word	41853
	.byte	10
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,4,142,4,16,4,11
	.byte	'EVR13UVVAL',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	700
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,4,149,4,3
	.word	41992
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,152,4,16,4,11
	.byte	'EN0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	700
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	717
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	700
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	700
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	700
	.byte	8,0,2,35,3,0,30
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,163,4,3
	.word	42155
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,4,166,4,16,4,11
	.byte	'STEP',0,2
	.word	717
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	700
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	700
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	717
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	700
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_FDR_Bits',0,4,174,4,3
	.word	42373
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,4,177,4,16,4,11
	.byte	'FS0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	700
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	700
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	700
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	8,0,2,35,3,0,30
	.byte	'Ifx_SCU_FMR_Bits',0,4,197,4,3
	.word	42536
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,4,200,4,16,4,11
	.byte	'MODREV',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	717
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_ID_Bits',0,4,205,4,3
	.word	42872
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,208,4,16,4,11
	.byte	'IPEN00',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	700
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	700
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	700
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	700
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	700
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	700
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	700
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_SCU_IGCR_Bits',0,4,232,4,3
	.word	42979
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,4,235,4,16,4,11
	.byte	'P0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	525
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_IN_Bits',0,4,240,4,3
	.word	43431
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,243,4,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	700
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	700
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	700
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_IOCR_Bits',0,4,250,4,3
	.word	43530
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,253,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'LBISTREQP',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,2
	.word	717
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,131,5,3
	.word	43680
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,134,5,16,4,11
	.byte	'SEED',0,4
	.word	525
	.byte	23,9,2,35,0,11
	.byte	'reserved_23',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	700
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	700
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	700
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,141,5,3
	.word	43829
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,144,5,16,4,11
	.byte	'SIGNATURE',0,4
	.word	525
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	7,1,2,35,3,11
	.byte	'LBISTDONE',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,149,5,3
	.word	43990
	.byte	10
	.byte	'_Ifx_SCU_LCLCON_Bits',0,4,152,5,16,4,11
	.byte	'reserved_0',0,2
	.word	717
	.byte	16,0,2,35,0,11
	.byte	'LS',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	717
	.byte	14,1,2,35,2,11
	.byte	'LSEN',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_LCLCON_Bits',0,4,158,5,3
	.word	44120
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,161,5,16,4,11
	.byte	'LCLT0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	525
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,166,5,3
	.word	44252
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,4,169,5,16,4,11
	.byte	'DEPT',0,1
	.word	700
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	717
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_MANID_Bits',0,4,174,5,3
	.word	44367
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,4,177,5,16,4,11
	.byte	'PS0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	717
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	717
	.byte	14,0,2,35,2,0,30
	.byte	'Ifx_SCU_OMR_Bits',0,4,185,5,3
	.word	44478
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,188,5,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	700
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	700
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'X1D',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'X1DEN',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	700
	.byte	4,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	700
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	700
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	700
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	700
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	700
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,209,5,3
	.word	44636
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,4,212,5,16,4,11
	.byte	'P0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	525
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_OUT_Bits',0,4,217,5,3
	.word	45048
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,220,5,16,4,11
	.byte	'CSEL0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	717
	.byte	13,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	700
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	700
	.byte	6,0,2,35,3,0,30
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,233,5,3
	.word	45149
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,236,5,16,4,11
	.byte	'OVEN0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	525
	.byte	29,0,2,35,0,0,30
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,242,5,3
	.word	45416
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,245,5,16,4,11
	.byte	'PDIS0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	525
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_PDISC_Bits',0,4,250,5,3
	.word	45552
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,4,253,5,16,4,11
	.byte	'PD0',0,1
	.word	700
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	700
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	525
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SCU_PDR_Bits',0,4,132,6,3
	.word	45663
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,135,6,16,4,11
	.byte	'PDR0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	525
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SCU_PDRR_Bits',0,4,146,6,3
	.word	45796
	.byte	10
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,4,149,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	717
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	700
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	700
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	700
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	700
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_PLLCON0_Bits',0,4,166,6,3
	.word	45999
	.byte	10
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,4,169,6,16,4,11
	.byte	'K2DIV',0,1
	.word	700
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	700
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	700
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	717
	.byte	9,0,2,35,2,0,30
	.byte	'Ifx_SCU_PLLCON1_Bits',0,4,177,6,3
	.word	46355
	.byte	10
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,4,180,6,16,4,11
	.byte	'MODCFG',0,2
	.word	717
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_PLLCON2_Bits',0,4,184,6,3
	.word	46533
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,4,187,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	700
	.byte	2,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	717
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	700
	.byte	5,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	700
	.byte	2,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	700
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	700
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	700
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,4,204,6,3
	.word	46633
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,4,207,6,16,4,11
	.byte	'K2DIV',0,1
	.word	700
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	700
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	700
	.byte	4,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	700
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	717
	.byte	9,0,2,35,2,0,30
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,4,215,6,3
	.word	47003
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,4,218,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	525
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,4,227,6,3
	.word	47189
	.byte	10
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,4,230,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	525
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,4,241,6,3
	.word	47387
	.byte	30
	.byte	'Ifx_SCU_PMCSR_Bits',0,4,251,6,3
	.word	22228
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,4,254,6,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKEN',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'PINAWKEN',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'PINBWKEN',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	700
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	700
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	700
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	700
	.byte	2,0,2,35,1,11
	.byte	'SCREN',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'STBYRAMSEL',0,1
	.word	700
	.byte	2,5,2,35,2,11
	.byte	'SCRCLKSEL',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	700
	.byte	1,3,2,35,2,11
	.byte	'TRISTEN',0,1
	.word	700
	.byte	1,2,2,35,2,11
	.byte	'TRISTREQ',0,1
	.word	700
	.byte	1,1,2,35,2,11
	.byte	'PORSTDF',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'DCDCSYNC',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	700
	.byte	3,3,2,35,3,11
	.byte	'ESR0TRIST',0,1
	.word	700
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,4,153,7,3
	.word	47648
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,156,7,16,4,11
	.byte	'SCRSTEN',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'SCRSTREQ',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	700
	.byte	6,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	700
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	700
	.byte	3,0,2,35,1,11
	.byte	'SCRCFG',0,1
	.word	700
	.byte	8,0,2,35,2,11
	.byte	'CPUSEL',0,1
	.word	700
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	700
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	700
	.byte	3,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,170,7,3
	.word	48215
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR2_Bits',0,4,173,7,16,4,11
	.byte	'SCRINT',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'BUSY',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'SCRECC',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'SCRWDT',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'SCRRST',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	700
	.byte	4,0,2,35,1,11
	.byte	'TCINT',0,1
	.word	700
	.byte	8,0,2,35,2,11
	.byte	'TCINTREQ',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'SMURST',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'RST',0,1
	.word	700
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	700
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_SCU_PMSWCR2_Bits',0,4,187,7,3
	.word	48509
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,4,190,7,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUN',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUN',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUN',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'HWCFGEVR',0,1
	.word	700
	.byte	3,3,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	700
	.byte	2,1,2,35,1,11
	.byte	'TRIST',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'SCRST',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'SCRWKP',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'SCR',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'ESR1WKEN',0,1
	.word	700
	.byte	1,3,2,35,2,11
	.byte	'PINAWKEN',0,1
	.word	700
	.byte	1,2,2,35,2,11
	.byte	'PINBWKEN',0,1
	.word	700
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	717
	.byte	4,5,2,35,2,11
	.byte	'ESR0TRIST',0,1
	.word	700
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	700
	.byte	4,0,2,35,3,0,30
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,4,214,7,3
	.word	48787
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,4,217,7,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUNCLR',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUNCLR',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'SCRSTCLR',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'SCRWKPCLR',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	717
	.byte	14,0,2,35,2,0,30
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,4,230,7,3
	.word	49283
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,233,7,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	717
	.byte	10,4,2,35,0,11
	.byte	'CSS0',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'CSS1',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'CSS2',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	717
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,243,7,3
	.word	49596
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,246,7,16,4,11
	.byte	'ESR0',0,1
	.word	700
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	700
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	700
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	700
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	700
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	700
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	700
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	700
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,129,8,3
	.word	49805
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,132,8,16,4,11
	.byte	'ESR0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'PORST',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	700
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	700
	.byte	2,1,2,35,2,11
	.byte	'EVR13',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	700
	.byte	2,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	700
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	700
	.byte	3,0,2,35,3,0,30
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,155,8,3
	.word	50016
	.byte	10
	.byte	'_Ifx_SCU_SAFECON_Bits',0,4,158,8,16,4,11
	.byte	'HBT',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	525
	.byte	31,0,2,35,0,0,30
	.byte	'Ifx_SCU_SAFECON_Bits',0,4,162,8,3
	.word	50448
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,165,8,16,4,11
	.byte	'HWCFG',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	700
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	700
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	700
	.byte	3,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	700
	.byte	7,0,2,35,3,0,30
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,178,8,3
	.word	50544
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,181,8,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	525
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,186,8,3
	.word	50804
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,189,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	700
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	700
	.byte	3,0,2,35,0,11
	.byte	'DATM',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	525
	.byte	23,0,2,35,0,0,30
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,198,8,3
	.word	50929
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,201,8,16,4,11
	.byte	'ESR0T',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	525
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,208,8,3
	.word	51126
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,4,211,8,16,4,11
	.byte	'ESR0T',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	525
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,4,218,8,3
	.word	51279
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,221,8,16,4,11
	.byte	'ESR0T',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	525
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,228,8,3
	.word	51432
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,231,8,16,4,11
	.byte	'ESR0T',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	525
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,238,8,3
	.word	51585
	.byte	30
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,247,8,3
	.word	564
	.byte	30
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,134,9,3
	.word	739
	.byte	30
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,150,9,3
	.word	983
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,153,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	548
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	548
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	548
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	548
	.byte	16,0,2,35,0,0,30
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,159,9,3
	.word	51840
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,162,9,16,4,11
	.byte	'CLRIRF',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	700
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,175,9,3
	.word	51966
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,178,9,16,4,11
	.byte	'AE',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	700
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	717
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,191,9,3
	.word	52218
	.byte	12,4,199,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34374
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ACCEN0',0,4,204,9,3
	.word	52437
	.byte	12,4,207,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34931
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ACCEN1',0,4,212,9,3
	.word	52501
	.byte	12,4,215,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35008
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ARSTDIS',0,4,220,9,3
	.word	52565
	.byte	12,4,223,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35144
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON0',0,4,228,9,3
	.word	52630
	.byte	12,4,231,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35424
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON1',0,4,236,9,3
	.word	52695
	.byte	12,4,239,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35662
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON2',0,4,244,9,3
	.word	52760
	.byte	12,4,247,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35790
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON3',0,4,252,9,3
	.word	52825
	.byte	12,4,255,9,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36033
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON4',0,4,132,10,3
	.word	52890
	.byte	12,4,135,10,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36268
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON5',0,4,140,10,3
	.word	52955
	.byte	12,4,143,10,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36396
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON6',0,4,148,10,3
	.word	53020
	.byte	12,4,151,10,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36496
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CCUCON7',0,4,156,10,3
	.word	53085
	.byte	12,4,159,10,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36596
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_CHIPID',0,4,164,10,3
	.word	53150
	.byte	12,4,167,10,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36804
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_DTSCON',0,4,172,10,3
	.word	53214
	.byte	12,4,175,10,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36969
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_DTSLIM',0,4,180,10,3
	.word	53278
	.byte	12,4,183,10,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37152
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_DTSSTAT',0,4,188,10,3
	.word	53342
	.byte	12,4,191,10,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37306
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EICR',0,4,196,10,3
	.word	53407
	.byte	12,4,199,10,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37670
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EIFR',0,4,204,10,3
	.word	53469
	.byte	12,4,207,10,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37881
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EMSR',0,4,212,10,3
	.word	53531
	.byte	12,4,215,10,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38133
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ESRCFG',0,4,220,10,3
	.word	53593
	.byte	12,4,223,10,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38251
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ESROCFG',0,4,228,10,3
	.word	53657
	.byte	12,4,231,10,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38362
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVR13CON',0,4,236,10,3
	.word	53722
	.byte	12,4,239,10,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38525
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVR33CON',0,4,244,10,3
	.word	53788
	.byte	12,4,247,10,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38688
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRADCSTAT',0,4,252,10,3
	.word	53854
	.byte	12,4,255,10,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38846
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRDVSTAT',0,4,132,11,3
	.word	53922
	.byte	12,4,135,11,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39011
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRMONCTRL',0,4,140,11,3
	.word	53989
	.byte	12,4,143,11,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39340
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVROSCCTRL',0,4,148,11,3
	.word	54057
	.byte	12,4,151,11,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39561
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVROVMON',0,4,156,11,3
	.word	54125
	.byte	12,4,159,11,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39724
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRRSTCON',0,4,164,11,3
	.word	54191
	.byte	12,4,167,11,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39996
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,4,172,11,3
	.word	54258
	.byte	12,4,175,11,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40149
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,4,180,11,3
	.word	54327
	.byte	12,4,183,11,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40305
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,4,188,11,3
	.word	54396
	.byte	12,4,191,11,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40467
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,4,196,11,3
	.word	54465
	.byte	12,4,199,11,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40610
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,4,204,11,3
	.word	54534
	.byte	12,4,207,11,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40775
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,4,212,11,3
	.word	54603
	.byte	12,4,215,11,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40920
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCTRL1',0,4,220,11,3
	.word	54672
	.byte	12,4,223,11,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41101
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCTRL2',0,4,228,11,3
	.word	54740
	.byte	12,4,231,11,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41275
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCTRL3',0,4,236,11,3
	.word	54808
	.byte	12,4,239,11,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41435
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSDCTRL4',0,4,244,11,3
	.word	54876
	.byte	12,4,247,11,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41579
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRSTAT',0,4,252,11,3
	.word	54944
	.byte	12,4,255,11,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41853
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRTRIM',0,4,132,12,3
	.word	55009
	.byte	12,4,135,12,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41992
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EVRUVMON',0,4,140,12,3
	.word	55074
	.byte	12,4,143,12,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42155
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_EXTCON',0,4,148,12,3
	.word	55140
	.byte	12,4,151,12,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42373
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_FDR',0,4,156,12,3
	.word	55204
	.byte	12,4,159,12,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42536
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_FMR',0,4,164,12,3
	.word	55265
	.byte	12,4,167,12,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42872
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_ID',0,4,172,12,3
	.word	55326
	.byte	12,4,175,12,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42979
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_IGCR',0,4,180,12,3
	.word	55386
	.byte	12,4,183,12,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43431
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_IN',0,4,188,12,3
	.word	55448
	.byte	12,4,191,12,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43530
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_IOCR',0,4,196,12,3
	.word	55508
	.byte	12,4,199,12,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43680
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,204,12,3
	.word	55570
	.byte	12,4,207,12,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43829
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,212,12,3
	.word	55638
	.byte	12,4,215,12,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43990
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,220,12,3
	.word	55706
	.byte	12,4,223,12,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44120
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LCLCON',0,4,228,12,3
	.word	55774
	.byte	12,4,231,12,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44252
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_LCLTEST',0,4,236,12,3
	.word	55838
	.byte	12,4,239,12,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44367
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_MANID',0,4,244,12,3
	.word	55903
	.byte	12,4,247,12,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44478
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OMR',0,4,252,12,3
	.word	55966
	.byte	12,4,255,12,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44636
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OSCCON',0,4,132,13,3
	.word	56027
	.byte	12,4,135,13,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45048
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OUT',0,4,140,13,3
	.word	56091
	.byte	12,4,143,13,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45149
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OVCCON',0,4,148,13,3
	.word	56152
	.byte	12,4,151,13,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45416
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_OVCENABLE',0,4,156,13,3
	.word	56216
	.byte	12,4,159,13,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45552
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PDISC',0,4,164,13,3
	.word	56283
	.byte	12,4,167,13,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45663
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PDR',0,4,172,13,3
	.word	56346
	.byte	12,4,175,13,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45796
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PDRR',0,4,180,13,3
	.word	56407
	.byte	12,4,183,13,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45999
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PLLCON0',0,4,188,13,3
	.word	56469
	.byte	12,4,191,13,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46355
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PLLCON1',0,4,196,13,3
	.word	56534
	.byte	12,4,199,13,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46533
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PLLCON2',0,4,204,13,3
	.word	56599
	.byte	12,4,207,13,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46633
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PLLERAYCON0',0,4,212,13,3
	.word	56664
	.byte	12,4,215,13,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47003
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PLLERAYCON1',0,4,220,13,3
	.word	56733
	.byte	12,4,223,13,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47189
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PLLERAYSTAT',0,4,228,13,3
	.word	56802
	.byte	12,4,231,13,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47387
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PLLSTAT',0,4,236,13,3
	.word	56871
	.byte	30
	.byte	'Ifx_SCU_PMCSR',0,4,244,13,3
	.word	22352
	.byte	12,4,247,13,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47648
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMSWCR0',0,4,252,13,3
	.word	56959
	.byte	12,4,255,13,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48215
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMSWCR1',0,4,132,14,3
	.word	57024
	.byte	12,4,135,14,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48509
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMSWCR2',0,4,140,14,3
	.word	57089
	.byte	12,4,143,14,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48787
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMSWSTAT',0,4,148,14,3
	.word	57154
	.byte	12,4,151,14,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49283
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_PMSWSTATCLR',0,4,156,14,3
	.word	57220
	.byte	12,4,159,14,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49805
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_RSTCON',0,4,164,14,3
	.word	57289
	.byte	12,4,167,14,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49596
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_RSTCON2',0,4,172,14,3
	.word	57353
	.byte	12,4,175,14,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50016
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_RSTSTAT',0,4,180,14,3
	.word	57418
	.byte	12,4,183,14,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50448
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SAFECON',0,4,188,14,3
	.word	57483
	.byte	12,4,191,14,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50544
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_STSTAT',0,4,196,14,3
	.word	57548
	.byte	12,4,199,14,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50804
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SWRSTCON',0,4,204,14,3
	.word	57612
	.byte	12,4,207,14,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50929
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_SYSCON',0,4,212,14,3
	.word	57678
	.byte	12,4,215,14,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51126
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPCLR',0,4,220,14,3
	.word	57742
	.byte	12,4,223,14,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51279
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPDIS',0,4,228,14,3
	.word	57807
	.byte	12,4,231,14,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51432
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPSET',0,4,236,14,3
	.word	57872
	.byte	12,4,239,14,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51585
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_TRAPSTAT',0,4,244,14,3
	.word	57937
	.byte	30
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,252,14,3
	.word	660
	.byte	30
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,132,15,3
	.word	943
	.byte	30
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,140,15,3
	.word	1174
	.byte	12,4,143,15,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51840
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_WDTS_CON0',0,4,148,15,3
	.word	58088
	.byte	12,4,151,15,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51966
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_WDTS_CON1',0,4,156,15,3
	.word	58155
	.byte	12,4,159,15,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52218
	.byte	4,2,35,0,0,30
	.byte	'Ifx_SCU_WDTS_SR',0,4,164,15,3
	.word	58222
	.byte	14
	.word	1214
	.byte	30
	.byte	'Ifx_SCU_WDTCPU',0,4,180,15,3
	.word	58287
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,4,183,15,25,12,13
	.byte	'CON0',0
	.word	58088
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	58155
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	58222
	.byte	4,2,35,8,0,14
	.word	58316
	.byte	30
	.byte	'Ifx_SCU_WDTS',0,4,188,15,3
	.word	58377
	.byte	15,8
	.word	53593
	.byte	16,1,0,15,20
	.word	700
	.byte	16,19,0,15,8
	.word	22352
	.byte	16,1,0,14
	.word	58316
	.byte	15,24
	.word	1214
	.byte	16,1,0,14
	.word	58436
	.byte	15,16
	.word	53407
	.byte	16,3,0,15,16
	.word	55386
	.byte	16,3,0,15,180,3
	.word	700
	.byte	16,179,3,0,10
	.byte	'_Ifx_SCU',0,4,201,15,25,128,8,13
	.byte	'reserved_0',0
	.word	4337
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	55326
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2518
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	56027
	.byte	4,2,35,16,13
	.byte	'PLLSTAT',0
	.word	56871
	.byte	4,2,35,20,13
	.byte	'PLLCON0',0
	.word	56469
	.byte	4,2,35,24,13
	.byte	'PLLCON1',0
	.word	56534
	.byte	4,2,35,28,13
	.byte	'PLLCON2',0
	.word	56599
	.byte	4,2,35,32,13
	.byte	'PLLERAYSTAT',0
	.word	56802
	.byte	4,2,35,36,13
	.byte	'PLLERAYCON0',0
	.word	56664
	.byte	4,2,35,40,13
	.byte	'PLLERAYCON1',0
	.word	56733
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	52630
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	52695
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	55204
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	55140
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	52760
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	52825
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	52890
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	52955
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	57418
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	2518
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	57289
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	52565
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	57612
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	57353
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	2518
	.byte	4,2,35,104,13
	.byte	'EVRRSTCON',0
	.word	54191
	.byte	4,2,35,108,13
	.byte	'ESRCFG',0
	.word	58404
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	53657
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	57678
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	53020
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	53085
	.byte	4,3,35,132,1,13
	.byte	'reserved_88',0
	.word	58413
	.byte	20,3,35,136,1,13
	.byte	'PDR',0
	.word	56346
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	55508
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	56091
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	55966
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	55448
	.byte	4,3,35,172,1,13
	.byte	'EVRSTAT',0
	.word	54944
	.byte	4,3,35,176,1,13
	.byte	'EVRDVSTAT',0
	.word	53922
	.byte	4,3,35,180,1,13
	.byte	'EVR13CON',0
	.word	53722
	.byte	4,3,35,184,1,13
	.byte	'EVR33CON',0
	.word	53788
	.byte	4,3,35,188,1,13
	.byte	'STSTAT',0
	.word	57548
	.byte	4,3,35,192,1,13
	.byte	'reserved_C4',0
	.word	2518
	.byte	4,3,35,196,1,13
	.byte	'PMSWCR0',0
	.word	56959
	.byte	4,3,35,200,1,13
	.byte	'PMSWSTAT',0
	.word	57154
	.byte	4,3,35,204,1,13
	.byte	'PMSWSTATCLR',0
	.word	57220
	.byte	4,3,35,208,1,13
	.byte	'PMCSR',0
	.word	58422
	.byte	8,3,35,212,1,13
	.byte	'reserved_DC',0
	.word	2518
	.byte	4,3,35,220,1,13
	.byte	'DTSSTAT',0
	.word	53342
	.byte	4,3,35,224,1,13
	.byte	'DTSCON',0
	.word	53214
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	57024
	.byte	4,3,35,232,1,13
	.byte	'PMSWCR2',0
	.word	57089
	.byte	4,3,35,236,1,13
	.byte	'WDTS',0
	.word	58431
	.byte	12,3,35,240,1,13
	.byte	'EMSR',0
	.word	53531
	.byte	4,3,35,252,1,13
	.byte	'WDTCPU',0
	.word	58445
	.byte	24,3,35,128,2,13
	.byte	'reserved_118',0
	.word	4677
	.byte	12,3,35,152,2,13
	.byte	'TRAPSTAT',0
	.word	57937
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	57872
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	57742
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS',0
	.word	57807
	.byte	4,3,35,176,2,13
	.byte	'reserved_134',0
	.word	2518
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	55774
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	55838
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	53150
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	55903
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	4337
	.byte	8,3,35,200,2,13
	.byte	'SAFECON',0
	.word	57483
	.byte	4,3,35,208,2,13
	.byte	'reserved_154',0
	.word	18843
	.byte	16,3,35,212,2,13
	.byte	'LBISTCTRL0',0
	.word	55570
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	55638
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	55706
	.byte	4,3,35,236,2,13
	.byte	'reserved_170',0
	.word	16728
	.byte	28,3,35,240,2,13
	.byte	'PDISC',0
	.word	56283
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	4337
	.byte	8,3,35,144,3,13
	.byte	'EVRTRIM',0
	.word	55009
	.byte	4,3,35,152,3,13
	.byte	'EVRADCSTAT',0
	.word	53854
	.byte	4,3,35,156,3,13
	.byte	'EVRUVMON',0
	.word	55074
	.byte	4,3,35,160,3,13
	.byte	'EVROVMON',0
	.word	54125
	.byte	4,3,35,164,3,13
	.byte	'EVRMONCTRL',0
	.word	53989
	.byte	4,3,35,168,3,13
	.byte	'reserved_1AC',0
	.word	2518
	.byte	4,3,35,172,3,13
	.byte	'EVRSDCTRL1',0
	.word	54672
	.byte	4,3,35,176,3,13
	.byte	'EVRSDCTRL2',0
	.word	54740
	.byte	4,3,35,180,3,13
	.byte	'EVRSDCTRL3',0
	.word	54808
	.byte	4,3,35,184,3,13
	.byte	'EVRSDCTRL4',0
	.word	54876
	.byte	4,3,35,188,3,13
	.byte	'EVRSDCOEFF1',0
	.word	54258
	.byte	4,3,35,192,3,13
	.byte	'EVRSDCOEFF2',0
	.word	54327
	.byte	4,3,35,196,3,13
	.byte	'EVRSDCOEFF3',0
	.word	54396
	.byte	4,3,35,200,3,13
	.byte	'EVRSDCOEFF4',0
	.word	54465
	.byte	4,3,35,204,3,13
	.byte	'EVRSDCOEFF5',0
	.word	54534
	.byte	4,3,35,208,3,13
	.byte	'EVRSDCOEFF6',0
	.word	54603
	.byte	4,3,35,212,3,13
	.byte	'EVROSCCTRL',0
	.word	54057
	.byte	4,3,35,216,3,13
	.byte	'reserved_1DC',0
	.word	2518
	.byte	4,3,35,220,3,13
	.byte	'OVCENABLE',0
	.word	56216
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	56152
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	29019
	.byte	40,3,35,232,3,13
	.byte	'EICR',0
	.word	58450
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	53469
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	55265
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	56407
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	58459
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	2518
	.byte	4,3,35,188,4,13
	.byte	'DTSLIM',0
	.word	53278
	.byte	4,3,35,192,4,13
	.byte	'reserved_244',0
	.word	58468
	.byte	180,3,3,35,196,4,13
	.byte	'ACCEN1',0
	.word	52501
	.byte	4,3,35,248,7,13
	.byte	'ACCEN0',0
	.word	52437
	.byte	4,3,35,252,7,0,14
	.word	58479
	.byte	30
	.byte	'Ifx_SCU',0,4,181,16,3
	.word	60469
	.byte	10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,15,45,16,4,11
	.byte	'EN0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	700
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	700
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	700
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	700
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	700
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	700
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	700
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_STM_ACCEN0_Bits',0,15,79,3
	.word	60491
	.byte	10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,15,82,16,4,11
	.byte	'reserved_0',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_ACCEN1_Bits',0,15,85,3
	.word	61048
	.byte	10
	.byte	'_Ifx_STM_CAP_Bits',0,15,88,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_CAP_Bits',0,15,91,3
	.word	61125
	.byte	10
	.byte	'_Ifx_STM_CAPSV_Bits',0,15,94,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_CAPSV_Bits',0,15,97,3
	.word	61197
	.byte	10
	.byte	'_Ifx_STM_CLC_Bits',0,15,100,16,4,11
	.byte	'DISR',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	525
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_STM_CLC_Bits',0,15,107,3
	.word	61273
	.byte	10
	.byte	'_Ifx_STM_CMCON_Bits',0,15,110,16,4,11
	.byte	'MSIZE0',0,1
	.word	700
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	700
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	700
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	700
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	700
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	700
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	700
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	700
	.byte	3,0,2,35,3,0,30
	.byte	'Ifx_STM_CMCON_Bits',0,15,120,3
	.word	61414
	.byte	10
	.byte	'_Ifx_STM_CMP_Bits',0,15,123,16,4,11
	.byte	'CMPVAL',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_CMP_Bits',0,15,126,3
	.word	61632
	.byte	10
	.byte	'_Ifx_STM_ICR_Bits',0,15,129,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	525
	.byte	25,0,2,35,0,0,30
	.byte	'Ifx_STM_ICR_Bits',0,15,139,1,3
	.word	61699
	.byte	10
	.byte	'_Ifx_STM_ID_Bits',0,15,142,1,16,4,11
	.byte	'MODREV',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	717
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_STM_ID_Bits',0,15,147,1,3
	.word	61902
	.byte	10
	.byte	'_Ifx_STM_ISCR_Bits',0,15,150,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	525
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_STM_ISCR_Bits',0,15,157,1,3
	.word	62009
	.byte	10
	.byte	'_Ifx_STM_KRST0_Bits',0,15,160,1,16,4,11
	.byte	'RST',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	525
	.byte	30,0,2,35,0,0,30
	.byte	'Ifx_STM_KRST0_Bits',0,15,165,1,3
	.word	62160
	.byte	10
	.byte	'_Ifx_STM_KRST1_Bits',0,15,168,1,16,4,11
	.byte	'RST',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	525
	.byte	31,0,2,35,0,0,30
	.byte	'Ifx_STM_KRST1_Bits',0,15,172,1,3
	.word	62271
	.byte	10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,15,175,1,16,4,11
	.byte	'CLR',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	525
	.byte	31,0,2,35,0,0,30
	.byte	'Ifx_STM_KRSTCLR_Bits',0,15,179,1,3
	.word	62363
	.byte	10
	.byte	'_Ifx_STM_OCS_Bits',0,15,182,1,16,4,11
	.byte	'reserved_0',0,4
	.word	525
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	700
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	700
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	700
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	700
	.byte	2,0,2,35,3,0,30
	.byte	'Ifx_STM_OCS_Bits',0,15,189,1,3
	.word	62459
	.byte	10
	.byte	'_Ifx_STM_TIM0_Bits',0,15,192,1,16,4,11
	.byte	'STM31_0',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM0_Bits',0,15,195,1,3
	.word	62605
	.byte	10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,15,198,1,16,4,11
	.byte	'STM31_0',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM0SV_Bits',0,15,201,1,3
	.word	62677
	.byte	10
	.byte	'_Ifx_STM_TIM1_Bits',0,15,204,1,16,4,11
	.byte	'STM35_4',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM1_Bits',0,15,207,1,3
	.word	62753
	.byte	10
	.byte	'_Ifx_STM_TIM2_Bits',0,15,210,1,16,4,11
	.byte	'STM39_8',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM2_Bits',0,15,213,1,3
	.word	62825
	.byte	10
	.byte	'_Ifx_STM_TIM3_Bits',0,15,216,1,16,4,11
	.byte	'STM43_12',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM3_Bits',0,15,219,1,3
	.word	62897
	.byte	10
	.byte	'_Ifx_STM_TIM4_Bits',0,15,222,1,16,4,11
	.byte	'STM47_16',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM4_Bits',0,15,225,1,3
	.word	62970
	.byte	10
	.byte	'_Ifx_STM_TIM5_Bits',0,15,228,1,16,4,11
	.byte	'STM51_20',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM5_Bits',0,15,231,1,3
	.word	63043
	.byte	10
	.byte	'_Ifx_STM_TIM6_Bits',0,15,234,1,16,4,11
	.byte	'STM63_32',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_STM_TIM6_Bits',0,15,237,1,3
	.word	63116
	.byte	12,15,245,1,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60491
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_ACCEN0',0,15,250,1,3
	.word	63189
	.byte	12,15,253,1,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61048
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_ACCEN1',0,15,130,2,3
	.word	63253
	.byte	12,15,133,2,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61125
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_CAP',0,15,138,2,3
	.word	63317
	.byte	12,15,141,2,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61197
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_CAPSV',0,15,146,2,3
	.word	63378
	.byte	12,15,149,2,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61273
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_CLC',0,15,154,2,3
	.word	63441
	.byte	12,15,157,2,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61414
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_CMCON',0,15,162,2,3
	.word	63502
	.byte	12,15,165,2,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61632
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_CMP',0,15,170,2,3
	.word	63565
	.byte	12,15,173,2,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61699
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_ICR',0,15,178,2,3
	.word	63626
	.byte	12,15,181,2,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61902
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_ID',0,15,186,2,3
	.word	63687
	.byte	12,15,189,2,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62009
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_ISCR',0,15,194,2,3
	.word	63747
	.byte	12,15,197,2,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62160
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_KRST0',0,15,202,2,3
	.word	63809
	.byte	12,15,205,2,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62271
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_KRST1',0,15,210,2,3
	.word	63872
	.byte	12,15,213,2,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62363
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_KRSTCLR',0,15,218,2,3
	.word	63935
	.byte	12,15,221,2,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62459
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_OCS',0,15,226,2,3
	.word	64000
	.byte	12,15,229,2,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62605
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM0',0,15,234,2,3
	.word	64061
	.byte	12,15,237,2,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62677
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM0SV',0,15,242,2,3
	.word	64123
	.byte	12,15,245,2,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62753
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM1',0,15,250,2,3
	.word	64187
	.byte	12,15,253,2,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62825
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM2',0,15,130,3,3
	.word	64249
	.byte	12,15,133,3,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62897
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM3',0,15,138,3,3
	.word	64311
	.byte	12,15,141,3,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62970
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM4',0,15,146,3,3
	.word	64373
	.byte	12,15,149,3,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63043
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM5',0,15,154,3,3
	.word	64435
	.byte	12,15,157,3,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63116
	.byte	4,2,35,0,0,30
	.byte	'Ifx_STM_TIM6',0,15,162,3,3
	.word	64497
	.byte	17,16,236,10,9,1,18
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,18
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,30
	.byte	'IfxScu_CCUCON0_CLKSEL',0,16,240,10,3
	.word	64559
	.byte	17,16,250,10,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,30
	.byte	'IfxScu_WDTCON1_IR',0,16,255,10,3
	.word	64656
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,17,45,16,4,11
	.byte	'EN0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	700
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	700
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	700
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	700
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	700
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	700
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	700
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,17,79,3
	.word	64778
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,17,82,16,4,11
	.byte	'reserved_0',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,17,85,3
	.word	65339
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,17,88,16,4,11
	.byte	'SEL',0,1
	.word	700
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	700
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	525
	.byte	22,0,2,35,0,0,30
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,17,95,3
	.word	65420
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,17,98,16,4,11
	.byte	'VLD0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'VLD1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'VLD2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'VLD3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'VLD4',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'VLD5',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'VLD6',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'VLD7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'VLD8',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'VLD9',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	525
	.byte	22,0,2,35,0,0,30
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,17,111,3
	.word	65573
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,17,114,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	525
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	700
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,17,121,3
	.word	65821
	.byte	10
	.byte	'_Ifx_FLASH_COMM0_Bits',0,17,124,16,4,11
	.byte	'STATUS',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	525
	.byte	24,0,2,35,0,0,30
	.byte	'Ifx_FLASH_COMM0_Bits',0,17,128,1,3
	.word	65967
	.byte	10
	.byte	'_Ifx_FLASH_COMM1_Bits',0,17,131,1,16,4,11
	.byte	'STATUS',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_FLASH_COMM1_Bits',0,17,136,1,3
	.word	66065
	.byte	10
	.byte	'_Ifx_FLASH_COMM2_Bits',0,17,139,1,16,4,11
	.byte	'STATUS',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_FLASH_COMM2_Bits',0,17,144,1,3
	.word	66181
	.byte	10
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,17,147,1,16,4,11
	.byte	'RCODE',0,4
	.word	525
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	717
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_ECCRD_Bits',0,17,153,1,3
	.word	66297
	.byte	10
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,17,156,1,16,4,11
	.byte	'RCODE',0,4
	.word	525
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	717
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_ECCRP_Bits',0,17,162,1,3
	.word	66437
	.byte	10
	.byte	'_Ifx_FLASH_ECCW_Bits',0,17,165,1,16,4,11
	.byte	'WCODE',0,4
	.word	525
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	717
	.byte	8,2,2,35,2,11
	.byte	'DECENCDIS',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'PECENCDIS',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_ECCW_Bits',0,17,171,1,3
	.word	66577
	.byte	10
	.byte	'_Ifx_FLASH_FCON_Bits',0,17,174,1,16,4,11
	.byte	'WSPFLASH',0,1
	.word	700
	.byte	4,4,2,35,0,11
	.byte	'WSECPF',0,1
	.word	700
	.byte	2,2,2,35,0,11
	.byte	'WSDFLASH',0,2
	.word	717
	.byte	6,4,2,35,0,11
	.byte	'WSECDF',0,1
	.word	700
	.byte	3,1,2,35,1,11
	.byte	'IDLE',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'ESLDIS',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'SLEEP',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'NSAFECC',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'STALL',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'RES21',0,1
	.word	700
	.byte	2,2,2,35,2,11
	.byte	'RES23',0,1
	.word	700
	.byte	2,0,2,35,2,11
	.byte	'VOPERM',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'SQERM',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'PROERM',0,1
	.word	700
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	700
	.byte	3,2,2,35,3,11
	.byte	'PR5V',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'EOBM',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_FCON_Bits',0,17,193,1,3
	.word	66716
	.byte	10
	.byte	'_Ifx_FLASH_FPRO_Bits',0,17,196,1,16,4,11
	.byte	'PROINP',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'PRODISP',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'PROIND',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'PRODISD',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'PROINHSMCOTP',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'PROINOTP',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'RES7',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'PROINDBG',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'PRODISDBG',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'PROINHSM',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	700
	.byte	5,0,2,35,1,11
	.byte	'DCFP',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'DDFP',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'DDFPX',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'DDFD',0,1
	.word	700
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	700
	.byte	1,2,2,35,2,11
	.byte	'ENPE',0,1
	.word	700
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	700
	.byte	8,0,2,35,3,0,30
	.byte	'Ifx_FLASH_FPRO_Bits',0,17,218,1,3
	.word	67078
	.byte	10
	.byte	'_Ifx_FLASH_FSR_Bits',0,17,221,1,16,4,11
	.byte	'FABUSY',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'D0BUSY',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'RES1',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'P0BUSY',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'P1BUSY',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'RES6',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'PROG',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'ERASE',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'PFPAGE',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'DFPAGE',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'OPER',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'SQER',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'PROER',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'PFSBER',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'PFDBER',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'PFMBER',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'RES17',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'DFSBER',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'DFDBER',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'DFTBER',0,1
	.word	700
	.byte	1,3,2,35,2,11
	.byte	'DFMBER',0,1
	.word	700
	.byte	1,2,2,35,2,11
	.byte	'SRIADDERR',0,1
	.word	700
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	717
	.byte	2,7,2,35,2,11
	.byte	'PVER',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'EVER',0,1
	.word	700
	.byte	1,5,2,35,3,11
	.byte	'SPND',0,1
	.word	700
	.byte	1,4,2,35,3,11
	.byte	'SLM',0,1
	.word	700
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	700
	.byte	1,2,2,35,3,11
	.byte	'ORIER',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_FSR_Bits',0,17,254,1,3
	.word	67519
	.byte	10
	.byte	'_Ifx_FLASH_ID_Bits',0,17,129,2,16,4,11
	.byte	'MODREV',0,1
	.word	700
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	700
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	717
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_FLASH_ID_Bits',0,17,134,2,3
	.word	68125
	.byte	10
	.byte	'_Ifx_FLASH_MARD_Bits',0,17,137,2,16,4,11
	.byte	'HMARGIN',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'SELD0',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'SPND',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'SPNDERR',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	717
	.byte	10,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_FLASH_MARD_Bits',0,17,147,2,3
	.word	68236
	.byte	10
	.byte	'_Ifx_FLASH_MARP_Bits',0,17,150,2,16,4,11
	.byte	'SELP0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'SELP1',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'RES2',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'RES3',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	717
	.byte	11,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_FLASH_MARP_Bits',0,17,159,2,3
	.word	68450
	.byte	10
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,17,162,2,16,4,11
	.byte	'L',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'NSAFECC',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'RAMIN',0,1
	.word	700
	.byte	2,4,2,35,0,11
	.byte	'RAMINSEL',0,1
	.word	700
	.byte	4,0,2,35,0,11
	.byte	'OSCCFG',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'MODE',0,1
	.word	700
	.byte	2,5,2,35,1,11
	.byte	'APREN',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'CAP0EN',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'CAP1EN',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'CAP2EN',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'CAP3EN',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'ESR0CNT',0,2
	.word	717
	.byte	12,4,2,35,2,11
	.byte	'RES29',0,1
	.word	700
	.byte	2,2,2,35,3,11
	.byte	'RES30',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_PROCOND_Bits',0,17,179,2,3
	.word	68637
	.byte	10
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,17,182,2,16,4,11
	.byte	'OCDSDIS',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'EDM',0,1
	.word	700
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	525
	.byte	28,0,2,35,0,0,30
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,17,188,2,3
	.word	68961
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,17,191,2,16,4,11
	.byte	'HSMDBGDIS',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'TSTIFLCK',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'HSMTSTDIS',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'RES15',0,2
	.word	717
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	717
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,17,199,2,3
	.word	69104
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,17,202,2,16,4,11
	.byte	'HSMBOOTEN',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'SSWWAIT',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'HSMDX',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'HSM6X',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'HSM16X',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'HSM17X',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'HSMENPINS',0,2
	.word	717
	.byte	2,7,2,35,0,11
	.byte	'HSMENRES',0,1
	.word	700
	.byte	2,5,2,35,1,11
	.byte	'DESTDBG',0,1
	.word	700
	.byte	2,3,2,35,1,11
	.byte	'BLKFLAN',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	700
	.byte	2,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	717
	.byte	14,0,2,35,2,0,30
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,17,219,2,3
	.word	69293
	.byte	10
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,17,222,2,16,4,11
	.byte	'S0ROM',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'S1ROM',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'S2ROM',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'S3ROM',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'S4ROM',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'S5ROM',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'S7ROM',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'S8ROM',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'S9ROM',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'S10ROM',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'S11ROM',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'S12ROM',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'S13ROM',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'S14ROM',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'S15ROM',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'S18ROM',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'S19ROM',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'S20ROM',0,1
	.word	700
	.byte	1,3,2,35,2,11
	.byte	'S21ROM',0,1
	.word	700
	.byte	1,2,2,35,2,11
	.byte	'S22ROM',0,1
	.word	700
	.byte	1,1,2,35,2,11
	.byte	'S23ROM',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'S24ROM',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'S25ROM',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'S26ROM',0,1
	.word	700
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	700
	.byte	2,3,2,35,3,11
	.byte	'BML',0,1
	.word	700
	.byte	2,1,2,35,3,11
	.byte	'TP',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,17,254,2,3
	.word	69656
	.byte	10
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,17,129,3,16,4,11
	.byte	'S0L',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'S1L',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'S2L',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'S3L',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'S4L',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'S5L',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'S6L',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'S7L',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'S8L',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'S9L',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'S10L',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'S11L',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'S12L',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'S13L',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'S14L',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'S15L',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'S16L',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'S17L',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'S18L',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'S19L',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'S20L',0,1
	.word	700
	.byte	1,3,2,35,2,11
	.byte	'S21L',0,1
	.word	700
	.byte	1,2,2,35,2,11
	.byte	'S22L',0,1
	.word	700
	.byte	1,1,2,35,2,11
	.byte	'S23L',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'S24L',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'S25L',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'S26L',0,1
	.word	700
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	700
	.byte	4,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_PROCONP_Bits',0,17,160,3,3
	.word	70251
	.byte	10
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,17,163,3,16,4,11
	.byte	'S0WOP',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'S1WOP',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'S2WOP',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'S3WOP',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'S4WOP',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'S5WOP',0,1
	.word	700
	.byte	1,2,2,35,0,11
	.byte	'S6WOP',0,1
	.word	700
	.byte	1,1,2,35,0,11
	.byte	'S7WOP',0,1
	.word	700
	.byte	1,0,2,35,0,11
	.byte	'S8WOP',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'S9WOP',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'S10WOP',0,1
	.word	700
	.byte	1,5,2,35,1,11
	.byte	'S11WOP',0,1
	.word	700
	.byte	1,4,2,35,1,11
	.byte	'S12WOP',0,1
	.word	700
	.byte	1,3,2,35,1,11
	.byte	'S13WOP',0,1
	.word	700
	.byte	1,2,2,35,1,11
	.byte	'S14WOP',0,1
	.word	700
	.byte	1,1,2,35,1,11
	.byte	'S15WOP',0,1
	.word	700
	.byte	1,0,2,35,1,11
	.byte	'S16WOP',0,1
	.word	700
	.byte	1,7,2,35,2,11
	.byte	'S17WOP',0,1
	.word	700
	.byte	1,6,2,35,2,11
	.byte	'S18WOP',0,1
	.word	700
	.byte	1,5,2,35,2,11
	.byte	'S19WOP',0,1
	.word	700
	.byte	1,4,2,35,2,11
	.byte	'S20WOP',0,1
	.word	700
	.byte	1,3,2,35,2,11
	.byte	'S21WOP',0,1
	.word	700
	.byte	1,2,2,35,2,11
	.byte	'S22WOP',0,1
	.word	700
	.byte	1,1,2,35,2,11
	.byte	'S23WOP',0,1
	.word	700
	.byte	1,0,2,35,2,11
	.byte	'S24WOP',0,1
	.word	700
	.byte	1,7,2,35,3,11
	.byte	'S25WOP',0,1
	.word	700
	.byte	1,6,2,35,3,11
	.byte	'S26WOP',0,1
	.word	700
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	700
	.byte	4,1,2,35,3,11
	.byte	'DATM',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,17,194,3,3
	.word	70775
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,17,197,3,16,4,11
	.byte	'TAG',0,1
	.word	700
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	525
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,17,201,3,3
	.word	71357
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,17,204,3,16,4,11
	.byte	'TAG',0,1
	.word	700
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	525
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,17,208,3,3
	.word	71459
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,17,211,3,16,4,11
	.byte	'TAG',0,1
	.word	700
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	525
	.byte	26,0,2,35,0,0,30
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,17,215,3,3
	.word	71561
	.byte	10
	.byte	'_Ifx_FLASH_RRAD_Bits',0,17,218,3,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	3,5,2,35,0,11
	.byte	'ADD',0,4
	.word	525
	.byte	29,0,2,35,0,0,30
	.byte	'Ifx_FLASH_RRAD_Bits',0,17,222,3,3
	.word	71663
	.byte	10
	.byte	'_Ifx_FLASH_RRCT_Bits',0,17,225,3,16,4,11
	.byte	'STRT',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'STP',0,1
	.word	700
	.byte	1,6,2,35,0,11
	.byte	'BUSY',0,1
	.word	700
	.byte	1,5,2,35,0,11
	.byte	'DONE',0,1
	.word	700
	.byte	1,4,2,35,0,11
	.byte	'ERR',0,1
	.word	700
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	700
	.byte	3,0,2,35,0,11
	.byte	'EOBM',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	700
	.byte	7,0,2,35,1,11
	.byte	'CNT',0,2
	.word	717
	.byte	16,0,2,35,2,0,30
	.byte	'Ifx_FLASH_RRCT_Bits',0,17,236,3,3
	.word	71757
	.byte	10
	.byte	'_Ifx_FLASH_RRD0_Bits',0,17,239,3,16,4,11
	.byte	'DATA',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_FLASH_RRD0_Bits',0,17,242,3,3
	.word	71967
	.byte	10
	.byte	'_Ifx_FLASH_RRD1_Bits',0,17,245,3,16,4,11
	.byte	'DATA',0,4
	.word	525
	.byte	32,0,2,35,0,0,30
	.byte	'Ifx_FLASH_RRD1_Bits',0,17,248,3,3
	.word	72040
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,17,251,3,16,4,11
	.byte	'SEL',0,1
	.word	700
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	700
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	700
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	700
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	525
	.byte	22,0,2,35,0,0,30
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,17,130,4,3
	.word	72113
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,17,133,4,16,4,11
	.byte	'VLD0',0,1
	.word	700
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	525
	.byte	31,0,2,35,0,0,30
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,17,137,4,3
	.word	72268
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,17,140,4,16,4,11
	.byte	'reserved_0',0,1
	.word	700
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	525
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	700
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	700
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	700
	.byte	1,0,2,35,3,0,30
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,17,147,4,3
	.word	72373
	.byte	12,17,155,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64778
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_ACCEN0',0,17,160,4,3
	.word	72521
	.byte	12,17,163,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65339
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_ACCEN1',0,17,168,4,3
	.word	72587
	.byte	12,17,171,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65420
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_CBAB_CFG',0,17,176,4,3
	.word	72653
	.byte	12,17,179,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65573
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_CBAB_STAT',0,17,184,4,3
	.word	72721
	.byte	12,17,187,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65821
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_CBAB_TOP',0,17,192,4,3
	.word	72790
	.byte	12,17,195,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65967
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_COMM0',0,17,200,4,3
	.word	72858
	.byte	12,17,203,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66065
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_COMM1',0,17,208,4,3
	.word	72923
	.byte	12,17,211,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66181
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_COMM2',0,17,216,4,3
	.word	72988
	.byte	12,17,219,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66297
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_ECCRD',0,17,224,4,3
	.word	73053
	.byte	12,17,227,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66437
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_ECCRP',0,17,232,4,3
	.word	73118
	.byte	12,17,235,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66577
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_ECCW',0,17,240,4,3
	.word	73183
	.byte	12,17,243,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66716
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_FCON',0,17,248,4,3
	.word	73247
	.byte	12,17,251,4,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67078
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_FPRO',0,17,128,5,3
	.word	73311
	.byte	12,17,131,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67519
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_FSR',0,17,136,5,3
	.word	73375
	.byte	12,17,139,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68125
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_ID',0,17,144,5,3
	.word	73438
	.byte	12,17,147,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68236
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_MARD',0,17,152,5,3
	.word	73500
	.byte	12,17,155,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68450
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_MARP',0,17,160,5,3
	.word	73564
	.byte	12,17,163,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68637
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_PROCOND',0,17,168,5,3
	.word	73628
	.byte	12,17,171,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68961
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_PROCONDBG',0,17,176,5,3
	.word	73695
	.byte	12,17,179,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69104
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_PROCONHSM',0,17,184,5,3
	.word	73764
	.byte	12,17,187,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69293
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,17,192,5,3
	.word	73833
	.byte	12,17,195,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69656
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_PROCONOTP',0,17,200,5,3
	.word	73906
	.byte	12,17,203,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70251
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_PROCONP',0,17,208,5,3
	.word	73975
	.byte	12,17,211,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70775
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_PROCONWOP',0,17,216,5,3
	.word	74042
	.byte	12,17,219,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71357
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_RDB_CFG0',0,17,224,5,3
	.word	74111
	.byte	12,17,227,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71459
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_RDB_CFG1',0,17,232,5,3
	.word	74179
	.byte	12,17,235,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71561
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_RDB_CFG2',0,17,240,5,3
	.word	74247
	.byte	12,17,243,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71663
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_RRAD',0,17,248,5,3
	.word	74315
	.byte	12,17,251,5,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71757
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_RRCT',0,17,128,6,3
	.word	74379
	.byte	12,17,131,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71967
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_RRD0',0,17,136,6,3
	.word	74443
	.byte	12,17,139,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72040
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_RRD1',0,17,144,6,3
	.word	74507
	.byte	12,17,147,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72113
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_UBAB_CFG',0,17,152,6,3
	.word	74571
	.byte	12,17,155,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72268
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_UBAB_STAT',0,17,160,6,3
	.word	74639
	.byte	12,17,163,6,9,4,13
	.byte	'U',0
	.word	525
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	541
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72373
	.byte	4,2,35,0,0,30
	.byte	'Ifx_FLASH_UBAB_TOP',0,17,168,6,3
	.word	74708
	.byte	10
	.byte	'_Ifx_FLASH_CBAB',0,17,179,6,25,12,13
	.byte	'CFG',0
	.word	72653
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	72721
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	72790
	.byte	4,2,35,8,0,14
	.word	74776
	.byte	30
	.byte	'Ifx_FLASH_CBAB',0,17,184,6,3
	.word	74839
	.byte	10
	.byte	'_Ifx_FLASH_RDB',0,17,187,6,25,12,13
	.byte	'CFG0',0
	.word	74111
	.byte	4,2,35,0,13
	.byte	'CFG1',0
	.word	74179
	.byte	4,2,35,4,13
	.byte	'CFG2',0
	.word	74247
	.byte	4,2,35,8,0,14
	.word	74868
	.byte	30
	.byte	'Ifx_FLASH_RDB',0,17,192,6,3
	.word	74932
	.byte	10
	.byte	'_Ifx_FLASH_UBAB',0,17,195,6,25,12,13
	.byte	'CFG',0
	.word	74571
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	74639
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	74708
	.byte	4,2,35,8,0,14
	.word	74960
	.byte	30
	.byte	'Ifx_FLASH_UBAB',0,17,200,6,3
	.word	75023
	.byte	30
	.byte	'Ifx_P_ACCEN0_Bits',0,6,79,3
	.word	8090
	.byte	30
	.byte	'Ifx_P_ACCEN1_Bits',0,6,85,3
	.word	8003
	.byte	30
	.byte	'Ifx_P_ESR_Bits',0,6,107,3
	.word	4346
	.byte	30
	.byte	'Ifx_P_ID_Bits',0,6,115,3
	.word	2399
	.byte	30
	.byte	'Ifx_P_IN_Bits',0,6,137,1,3
	.word	3394
	.byte	30
	.byte	'Ifx_P_IOCR0_Bits',0,6,150,1,3
	.word	2527
	.byte	30
	.byte	'Ifx_P_IOCR12_Bits',0,6,163,1,3
	.word	3174
	.byte	30
	.byte	'Ifx_P_IOCR4_Bits',0,6,176,1,3
	.word	2742
	.byte	30
	.byte	'Ifx_P_IOCR8_Bits',0,6,189,1,3
	.word	2957
	.byte	30
	.byte	'Ifx_P_LPCR0_Bits',0,6,197,1,3
	.word	7362
	.byte	30
	.byte	'Ifx_P_LPCR1_Bits',0,6,205,1,3
	.word	7486
	.byte	30
	.byte	'Ifx_P_LPCR1_P21_Bits',0,6,215,1,3
	.word	7570
	.byte	30
	.byte	'Ifx_P_LPCR2_Bits',0,6,229,1,3
	.word	7750
	.byte	30
	.byte	'Ifx_P_OMCR0_Bits',0,6,240,1,3
	.word	6001
	.byte	30
	.byte	'Ifx_P_OMCR12_Bits',0,6,250,1,3
	.word	6525
	.byte	30
	.byte	'Ifx_P_OMCR4_Bits',0,6,133,2,3
	.word	6175
	.byte	30
	.byte	'Ifx_P_OMCR8_Bits',0,6,144,2,3
	.word	6349
	.byte	30
	.byte	'Ifx_P_OMCR_Bits',0,6,166,2,3
	.word	7014
	.byte	30
	.byte	'Ifx_P_OMR_Bits',0,6,203,2,3
	.word	1828
	.byte	30
	.byte	'Ifx_P_OMSR0_Bits',0,6,213,2,3
	.word	5338
	.byte	30
	.byte	'Ifx_P_OMSR12_Bits',0,6,224,2,3
	.word	5826
	.byte	30
	.byte	'Ifx_P_OMSR4_Bits',0,6,235,2,3
	.word	5485
	.byte	30
	.byte	'Ifx_P_OMSR8_Bits',0,6,246,2,3
	.word	5654
	.byte	30
	.byte	'Ifx_P_OMSR_Bits',0,6,140,3,3
	.word	6681
	.byte	30
	.byte	'Ifx_P_OUT_Bits',0,6,162,3,3
	.word	1512
	.byte	30
	.byte	'Ifx_P_PCSR_Bits',0,6,180,3,3
	.word	5052
	.byte	30
	.byte	'Ifx_P_PDISC_Bits',0,6,202,3,3
	.word	4686
	.byte	30
	.byte	'Ifx_P_PDR0_Bits',0,6,223,3,3
	.word	3717
	.byte	30
	.byte	'Ifx_P_PDR1_Bits',0,6,244,3,3
	.word	4021
	.byte	30
	.byte	'Ifx_P_ACCEN0',0,6,129,4,3
	.word	8617
	.byte	30
	.byte	'Ifx_P_ACCEN1',0,6,137,4,3
	.word	8050
	.byte	30
	.byte	'Ifx_P_ESR',0,6,145,4,3
	.word	4637
	.byte	30
	.byte	'Ifx_P_ID',0,6,153,4,3
	.word	2478
	.byte	30
	.byte	'Ifx_P_IN',0,6,161,4,3
	.word	3668
	.byte	30
	.byte	'Ifx_P_IOCR0',0,6,169,4,3
	.word	2702
	.byte	30
	.byte	'Ifx_P_IOCR12',0,6,177,4,3
	.word	3354
	.byte	30
	.byte	'Ifx_P_IOCR4',0,6,185,4,3
	.word	2917
	.byte	30
	.byte	'Ifx_P_IOCR8',0,6,193,4,3
	.word	3134
	.byte	30
	.byte	'Ifx_P_LPCR0',0,6,201,4,3
	.word	7446
	.byte	30
	.byte	'Ifx_P_LPCR1',0,6,210,4,3
	.word	7695
	.byte	30
	.byte	'Ifx_P_LPCR2',0,6,218,4,3
	.word	7954
	.byte	30
	.byte	'Ifx_P_OMCR',0,6,226,4,3
	.word	7322
	.byte	30
	.byte	'Ifx_P_OMCR0',0,6,234,4,3
	.word	6135
	.byte	30
	.byte	'Ifx_P_OMCR12',0,6,242,4,3
	.word	6641
	.byte	30
	.byte	'Ifx_P_OMCR4',0,6,250,4,3
	.word	6309
	.byte	30
	.byte	'Ifx_P_OMCR8',0,6,130,5,3
	.word	6485
	.byte	30
	.byte	'Ifx_P_OMR',0,6,138,5,3
	.word	2359
	.byte	30
	.byte	'Ifx_P_OMSR',0,6,146,5,3
	.word	6974
	.byte	30
	.byte	'Ifx_P_OMSR0',0,6,154,5,3
	.word	5445
	.byte	30
	.byte	'Ifx_P_OMSR12',0,6,162,5,3
	.word	5961
	.byte	30
	.byte	'Ifx_P_OMSR4',0,6,170,5,3
	.word	5614
	.byte	30
	.byte	'Ifx_P_OMSR8',0,6,178,5,3
	.word	5786
	.byte	30
	.byte	'Ifx_P_OUT',0,6,186,5,3
	.word	1788
	.byte	30
	.byte	'Ifx_P_PCSR',0,6,194,5,3
	.word	5298
	.byte	30
	.byte	'Ifx_P_PDISC',0,6,202,5,3
	.word	5012
	.byte	30
	.byte	'Ifx_P_PDR0',0,6,210,5,3
	.word	3981
	.byte	30
	.byte	'Ifx_P_PDR1',0,6,218,5,3
	.word	4297
	.byte	14
	.word	8657
	.byte	30
	.byte	'Ifx_P',0,6,139,6,3
	.word	76370
	.byte	17,5,83,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,30
	.byte	'IfxPort_InputMode',0,5,89,3
	.word	76390
	.byte	17,5,120,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,30
	.byte	'IfxPort_OutputIdx',0,5,130,1,3
	.word	76541
	.byte	17,5,134,1,9,1,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,30
	.byte	'IfxPort_OutputMode',0,5,138,1,3
	.word	76785
	.byte	17,5,144,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,18
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,18
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,18
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,30
	.byte	'IfxPort_PadDriver',0,5,158,1,3
	.word	76883
	.byte	30
	.byte	'IfxPort_State',0,5,178,1,3
	.word	9270
	.byte	32,5,190,1,9,8,13
	.byte	'port',0
	.word	9265
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	700
	.byte	1,2,35,4,0,30
	.byte	'IfxPort_Pin',0,5,194,1,3
	.word	77348
	.byte	30
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,7,148,1,16
	.word	176
	.byte	32,7,212,5,9,8,13
	.byte	'value',0
	.word	319
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	319
	.byte	4,2,35,4,0,30
	.byte	'IfxScuCcu_CcuconRegConfig',0,7,216,5,3
	.word	77448
	.byte	32,7,221,5,9,8,13
	.byte	'pDivider',0
	.word	700
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	700
	.byte	1,2,35,1,13
	.byte	'k2Initial',0
	.word	700
	.byte	1,2,35,2,13
	.byte	'waitTime',0
	.word	233
	.byte	4,2,35,4,0,30
	.byte	'IfxScuCcu_InitialStepConfig',0,7,227,5,3
	.word	77519
	.byte	32,7,231,5,9,12,13
	.byte	'k2Step',0
	.word	700
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	233
	.byte	4,2,35,2,13
	.byte	'hookFunction',0
	.word	77408
	.byte	4,2,35,8,0,30
	.byte	'IfxScuCcu_PllStepsConfig',0,7,236,5,3
	.word	77636
	.byte	3
	.word	173
	.byte	32,7,244,5,9,48,13
	.byte	'ccucon0',0
	.word	77448
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	77448
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	77448
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	77448
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	77448
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	77448
	.byte	8,2,35,40,0,30
	.byte	'IfxScuCcu_ClockDistributionConfig',0,7,252,5,3
	.word	77738
	.byte	32,7,128,6,9,8,13
	.byte	'value',0
	.word	319
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	319
	.byte	4,2,35,4,0,30
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,7,132,6,3
	.word	77890
	.byte	3
	.word	77636
	.byte	32,7,137,6,9,16,13
	.byte	'numOfPllDividerSteps',0
	.word	700
	.byte	1,2,35,0,13
	.byte	'pllDividerStep',0
	.word	77966
	.byte	4,2,35,4,13
	.byte	'pllInitialStep',0
	.word	77519
	.byte	8,2,35,8,0,30
	.byte	'IfxScuCcu_SysPllConfig',0,7,142,6,3
	.word	77971
	.byte	30
	.byte	'IfxCpu_spinLock',0,8,114,22
	.word	525
	.byte	30
	.byte	'IfxCpu_mutexLock',0,8,118,22
	.word	525
	.byte	30
	.byte	'IfxCpu_syncEvent',0,8,122,22
	.word	525
	.byte	30
	.byte	'IfxCpu_CoreMode',0,8,140,1,3
	.word	22080
	.byte	17,8,144,1,9,1,18
	.byte	'IfxCpu_CounterMode_normal',0,0,18
	.byte	'IfxCpu_CounterMode_task',0,1,0,30
	.byte	'IfxCpu_CounterMode',0,8,148,1,3
	.word	78187
	.byte	32,8,160,1,9,6,13
	.byte	'counter',0
	.word	319
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	700
	.byte	1,2,35,4,0,30
	.byte	'IfxCpu_Counter',0,8,164,1,3
	.word	78276
	.byte	32,8,172,1,9,32,13
	.byte	'instruction',0
	.word	78276
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	78276
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	78276
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	78276
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	78276
	.byte	6,2,35,24,0,30
	.byte	'IfxCpu_Perf',0,8,179,1,3
	.word	78342
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L80:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,11,1,0,0,20,38,0,73,19,0,0,21,46,1,3,8,54,15,39,12,63,12,60
	.byte	12,0,0,22,5,0,73,19,0,0,23,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,24,5,0,3,8,73,19,0,0,25,46,0,3,8
	.byte	54,15,39,12,63,12,60,12,0,0,26,46,1,49,19,0,0,27,5,0,49,19,0,0,28,46,1,3,8,58,15,59,15,57,15,54,15,39
	.byte	12,63,12,60,12,0,0,29,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,30,22,0,3,8,58,15,59
	.byte	15,57,15,73,19,0,0,31,21,0,54,15,0,0,32,19,1,58,15,59,15,57,15,11,15,0,0,33,52,0,3,8,58,15,59,15,57,15
	.byte	73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L81:
	.word	.L315-.L314
.L314:
	.half	3
	.word	.L317-.L316
.L316:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl',0
	.byte	0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxPort.h',0,4,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,2,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.h',0,0,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'IfxCpu_cfg.h',0,5,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxScu_cfg.h',0,5,0,0
	.byte	'IfxFlash_regdef.h',0,3,0,0,0
.L317:
.L315:
	.sdecl	'.debug_info',debug,cluster('IfxCpu_getCoreMode')
	.sect	'.debug_info'
.L82:
	.word	381
	.half	3
	.word	.L83
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L85,.L84
	.byte	2
	.word	.L78
	.byte	3
	.byte	'IfxCpu_getCoreMode',0,1,77,17
	.word	.L147
	.byte	1,1,1
	.word	.L55,.L148,.L54
	.byte	4
	.byte	'cpu',0,1,77,45
	.word	.L149,.L150
	.byte	5
	.word	.L55,.L148
	.byte	6
	.byte	'cpuMode',0,1,79,24
	.word	.L147,.L151
	.byte	6
	.byte	'dbgsr',0,1,80,24
	.word	.L152,.L153
	.byte	6
	.byte	'index',0,1,81,24
	.word	.L154,.L155
	.byte	7
	.word	.L156,.L157,.L158
	.byte	8
	.word	.L159,.L157,.L158
	.byte	6
	.byte	'reg',0,2,143,6,21
	.word	.L160,.L161
	.byte	0,0,5
	.word	.L162,.L7
	.byte	6
	.byte	'pmcsr_val',0,1,105,37
	.word	.L163,.L164
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_getCoreMode')
	.sect	'.debug_abbrev'
.L83:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_getCoreMode')
	.sect	'.debug_line'
.L84:
	.word	.L319-.L318
.L318:
	.half	3
	.word	.L321-.L320
.L320:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.h',0,0,0,0,0
.L321:
	.byte	5,17,7,0,5,2
	.word	.L55
	.byte	3,204,0,1,5,48,9
	.half	.L268-.L55
	.byte	3,4,1,5,13,9
	.half	.L267-.L268
	.byte	3,2,1,4,2,5,19,9
	.half	.L157-.L267
	.byte	3,189,5,1,5,37,9
	.half	.L270-.L157
	.byte	3,1,1,4,1,5,5,9
	.half	.L158-.L270
	.byte	3,198,122,1,5,20,7,9
	.half	.L322-.L158
	.byte	3,2,1,5,27,9
	.half	.L271-.L322
	.byte	1,5,25,9
	.half	.L4-.L271
	.byte	3,4,1,5,16,9
	.half	.L5-.L4
	.byte	3,4,1,5,5,9
	.half	.L272-.L5
	.byte	1,5,17,7,9
	.half	.L323-.L272
	.byte	3,2,1,5,39,1,5,9,9
	.half	.L6-.L323
	.byte	3,4,1,5,36,7,9
	.half	.L162-.L6
	.byte	3,4,1,5,42,9
	.half	.L324-.L162
	.byte	1,5,29,9
	.half	.L273-.L324
	.byte	3,2,1,5,13,9
	.half	.L325-.L273
	.byte	1,5,25,7,9
	.half	.L326-.L325
	.byte	3,2,1,5,46,1,5,33,9
	.half	.L9-.L326
	.byte	3,4,1,5,17,9
	.half	.L327-.L9
	.byte	1,5,29,7,9
	.half	.L328-.L327
	.byte	3,2,1,5,5,9
	.half	.L7-.L328
	.byte	3,10,1,5,1,3,1,1,7,9
	.half	.L86-.L7
	.byte	0,1,1
.L319:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_getCoreMode')
	.sect	'.debug_ranges'
.L85:
	.word	-1,.L55,0,.L86-.L55,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_getIndex')
	.sect	'.debug_info'
.L87:
	.word	286
	.half	3
	.word	.L88
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L90,.L89
	.byte	2
	.word	.L78
	.byte	3
	.byte	'IfxCpu_getIndex',0,1,131,1,20
	.word	.L154
	.byte	1,1,1
	.word	.L57,.L165,.L56
	.byte	4
	.byte	'cpu',0,1,131,1,45
	.word	.L149,.L166
	.byte	5
	.word	.L57,.L165
	.byte	6
	.byte	'result',0,1,133,1,24
	.word	.L154,.L167
	.byte	6
	.byte	'index',0,1,134,1,24
	.word	.L168,.L169
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_getIndex')
	.sect	'.debug_abbrev'
.L88:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_getIndex')
	.sect	'.debug_line'
.L89:
	.word	.L330-.L329
.L329:
	.half	3
	.word	.L332-.L331
.L331:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0,0
.L332:
	.byte	5,12,7,0,5,2
	.word	.L57
	.byte	3,134,1,1,5,13,3,4,1,5,47,9
	.half	.L333-.L57
	.byte	3,126,1,5,39,9
	.half	.L14-.L333
	.byte	3,2,1,5,9,9
	.half	.L334-.L14
	.byte	1,5,68,7,9
	.half	.L335-.L334
	.byte	3,2,1,5,22,9
	.half	.L336-.L335
	.byte	1,5,1,3,6,1,5,54,7,9
	.half	.L15-.L336
	.byte	3,118,1,5,47,1,5,1,7,9
	.half	.L337-.L15
	.byte	3,10,1,7,9
	.half	.L91-.L337
	.byte	0,1,1
.L330:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_getIndex')
	.sect	'.debug_ranges'
.L90:
	.word	-1,.L57,0,.L91-.L57,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_setCoreMode')
	.sect	'.debug_info'
.L92:
	.word	437
	.half	3
	.word	.L93
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L95,.L94
	.byte	2
	.word	.L78
	.byte	3
	.byte	'IfxCpu_setCoreMode',0,1,226,1,9
	.word	.L170
	.byte	1,1,1
	.word	.L67,.L171,.L66
	.byte	4
	.byte	'cpu',0,1,226,1,37
	.word	.L149,.L172
	.byte	4
	.byte	'mode',0,1,226,1,58
	.word	.L147,.L173
	.byte	5
	.word	.L67,.L171
	.byte	6
	.byte	'reqslp',0,1,228,1,24
	.word	.L170,.L174
	.byte	6
	.byte	'retValue',0,1,229,1,24
	.word	.L170,.L175
	.byte	6
	.byte	'index',0,1,230,1,24
	.word	.L154,.L176
	.byte	7
	.word	.L156,.L177,.L178
	.byte	8
	.word	.L159,.L177,.L178
	.byte	6
	.byte	'reg',0,2,143,6,21
	.word	.L160,.L179
	.byte	0,0,9
	.word	.L180
	.byte	6
	.byte	'safetyWdtPw',0,1,244,1,20
	.word	.L184,.L185
	.byte	0,5
	.word	.L30,.L29
	.byte	6
	.byte	'cpuWdtPw',0,1,254,1,20
	.word	.L184,.L186
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_setCoreMode')
	.sect	'.debug_abbrev'
.L93:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,17,1,18,1,0,0,9,11,1
	.byte	85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_setCoreMode')
	.sect	'.debug_line'
.L94:
	.word	.L339-.L338
.L338:
	.half	3
	.word	.L341-.L340
.L340:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.h',0,0,0,0,0
.L341:
	.byte	5,9,7,0,5,2
	.word	.L67
	.byte	3,225,1,1,5,48,9
	.half	.L282-.L67
	.byte	3,4,1,5,30,9
	.half	.L281-.L282
	.byte	1,5,17,9
	.half	.L286-.L281
	.byte	3,3,1,5,57,7,9
	.half	.L342-.L286
	.byte	1,5,26,7,9
	.half	.L343-.L342
	.byte	3,1,1,5,52,7,9
	.half	.L25-.L343
	.byte	1,5,60,1,5,52,9
	.half	.L27-.L25
	.byte	1,5,20,9
	.half	.L28-.L27
	.byte	3,2,1,5,5,9
	.half	.L288-.L28
	.byte	3,2,1,4,2,5,19,7,9
	.half	.L177-.L288
	.byte	3,162,4,1,5,37,9
	.half	.L285-.L177
	.byte	3,1,1,4,1,5,23,3,229,123,1,5,9,9
	.half	.L181-.L285
	.byte	3,123,1,5,69,7,9
	.half	.L182-.L181
	.byte	3,3,1,5,32,9
	.half	.L284-.L182
	.byte	1,5,42,9
	.half	.L287-.L284
	.byte	3,1,1,5,54,9
	.half	.L289-.L287
	.byte	3,1,1,5,29,9
	.half	.L291-.L289
	.byte	1,5,40,9
	.half	.L344-.L291
	.byte	3,1,1,5,69,9
	.half	.L292-.L344
	.byte	3,127,1,5,40,9
	.half	.L345-.L292
	.byte	3,1,1,5,16,9
	.half	.L293-.L345
	.byte	3,2,1,5,25,9
	.half	.L346-.L293
	.byte	1,5,31,9
	.half	.L347-.L346
	.byte	1,5,32,9
	.half	.L183-.L347
	.byte	3,123,1,5,63,9
	.half	.L30-.L183
	.byte	3,10,1,5,29,9
	.half	.L294-.L30
	.byte	1,5,39,9
	.half	.L296-.L294
	.byte	3,1,1,5,29,9
	.half	.L295-.L296
	.byte	3,1,1,5,37,9
	.half	.L283-.L295
	.byte	3,1,1,5,46,9
	.half	.L297-.L283
	.byte	3,127,1,5,54,9
	.half	.L348-.L297
	.byte	1,5,37,9
	.half	.L349-.L348
	.byte	3,1,1,5,5,9
	.half	.L29-.L349
	.byte	3,4,1,5,1,3,1,1,7,9
	.half	.L96-.L29
	.byte	0,1,1
.L339:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_setCoreMode')
	.sect	'.debug_ranges'
.L95:
	.word	-1,.L67,0,.L96-.L67,0,0
.L180:
	.word	-1,.L67,.L178-.L67,.L181-.L67,.L182-.L67,.L183-.L67,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_setProgramCounter')
	.sect	'.debug_info'
.L97:
	.word	406
	.half	3
	.word	.L98
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L100,.L99
	.byte	2
	.word	.L78
	.byte	3
	.byte	'IfxCpu_setProgramCounter',0,1,137,2,9
	.word	.L170
	.byte	1,1,1
	.word	.L69,.L187,.L68
	.byte	4
	.byte	'cpu',0,1,137,2,43
	.word	.L149,.L188
	.byte	4
	.byte	'programCounter',0,1,137,2,55
	.word	.L168,.L189
	.byte	5
	.word	.L69,.L187
	.byte	6
	.byte	'retVal',0,1,139,2,13
	.word	.L170,.L190
	.byte	7
	.word	.L156,.L191,.L192
	.byte	8
	.word	.L159,.L191,.L192
	.byte	6
	.byte	'reg',0,2,143,6,21
	.word	.L160,.L193
	.byte	0,0,7
	.word	.L194,.L192,.L195
	.byte	9
	.word	.L196,.L197
	.byte	8
	.word	.L198,.L192,.L195
	.byte	6
	.byte	'module',0,2,234,5,14
	.word	.L149,.L199
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_setProgramCounter')
	.sect	'.debug_abbrev'
.L98:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,17,1,18,1,0,0,9,5,0,49
	.byte	16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_setProgramCounter')
	.sect	'.debug_line'
.L99:
	.word	.L351-.L350
.L350:
	.half	3
	.word	.L353-.L352
.L352:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.h',0,0,0,0,0
.L353:
	.byte	5,20,7,0,5,2
	.word	.L69
	.byte	3,138,2,1,4,2,5,19,9
	.half	.L191-.L69
	.byte	3,133,4,1,5,37,9
	.half	.L299-.L191
	.byte	3,1,1,5,5,9
	.half	.L192-.L299
	.byte	3,91,1,5,29,7,9
	.half	.L354-.L192
	.byte	3,2,1,5,48,9
	.half	.L355-.L354
	.byte	1,5,53,9
	.half	.L356-.L355
	.byte	1,5,60,9
	.half	.L300-.L356
	.byte	1,5,16,9
	.half	.L33-.L300
	.byte	3,4,1,4,1,5,5,9
	.half	.L34-.L33
	.byte	3,155,124,1,5,16,7,9
	.half	.L195-.L34
	.byte	3,2,1,5,1,3,8,1,5,18,7,9
	.half	.L35-.L195
	.byte	3,124,1,5,39,9
	.half	.L357-.L35
	.byte	1,5,18,1,5,22,9
	.half	.L298-.L357
	.byte	1,5,1,9
	.half	.L358-.L298
	.byte	3,4,1,7,9
	.half	.L101-.L358
	.byte	0,1,1
.L351:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_setProgramCounter')
	.sect	'.debug_ranges'
.L100:
	.word	-1,.L69,0,.L101-.L69,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_startCore')
	.sect	'.debug_info'
.L102:
	.word	296
	.half	3
	.word	.L103
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L105,.L104
	.byte	2
	.word	.L78
	.byte	3
	.byte	'IfxCpu_startCore',0,1,182,2,9
	.word	.L170
	.byte	1,1,1
	.word	.L73,.L200,.L72
	.byte	4
	.byte	'cpu',0,1,182,2,35
	.word	.L149,.L201
	.byte	4
	.byte	'programCounter',0,1,182,2,47
	.word	.L168,.L202
	.byte	5
	.word	.L73,.L200
	.byte	6
	.byte	'retVal',0,1,184,2,13
	.word	.L170,.L203
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_startCore')
	.sect	'.debug_abbrev'
.L103:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_startCore')
	.sect	'.debug_line'
.L104:
	.word	.L360-.L359
.L359:
	.half	3
	.word	.L362-.L361
.L361:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0,0
.L362:
	.byte	5,9,7,0,5,2
	.word	.L73
	.byte	3,181,2,1,5,45,9
	.half	.L304-.L73
	.byte	3,5,1,5,12,9
	.half	.L303-.L304
	.byte	1,5,28,3,4,1,5,5,9
	.half	.L305-.L303
	.byte	1,5,43,7,9
	.half	.L363-.L305
	.byte	3,2,1,5,16,9
	.half	.L308-.L363
	.byte	1,5,5,9
	.half	.L43-.L308
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L106-.L43
	.byte	0,1,1
.L360:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_startCore')
	.sect	'.debug_ranges'
.L105:
	.word	-1,.L73,0,.L106-.L73,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_acquireMutex')
	.sect	'.debug_info'
.L107:
	.word	293
	.half	3
	.word	.L108
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L110,.L109
	.byte	2
	.word	.L78
	.byte	3
	.byte	'IfxCpu_acquireMutex',0,1,56,9
	.word	.L170
	.byte	1,1,1
	.word	.L53,.L204,.L52
	.byte	4
	.byte	'lock',0,1,56,47
	.word	.L205,.L206
	.byte	5
	.word	.L53,.L204
	.byte	6
	.byte	'retVal',0,1,58,21
	.word	.L170,.L207
	.byte	6
	.byte	'spinLockVal',0,1,59,21
	.word	.L208,.L209
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_acquireMutex')
	.sect	'.debug_abbrev'
.L108:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_acquireMutex')
	.sect	'.debug_line'
.L109:
	.word	.L365-.L364
.L364:
	.half	3
	.word	.L367-.L366
.L366:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0,0
.L367:
	.byte	5,19,7,0,5,2
	.word	.L53
	.byte	3,62,1,5,9,3,121,1,5,17,9
	.half	.L265-.L53
	.byte	3,7,1,9
	.half	.L368-.L265
	.byte	3,126,1,9
	.half	.L266-.L368
	.byte	3,4,1,9
	.half	.L369-.L266
	.byte	3,127,1,5,9,9
	.half	.L370-.L369
	.byte	3,4,1,5,16,9
	.half	.L371-.L370
	.byte	3,2,1,5,1,3,4,1,7,9
	.half	.L111-.L371
	.byte	0,1,1
.L365:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_acquireMutex')
	.sect	'.debug_ranges'
.L110:
	.word	-1,.L53,0,.L111-.L53,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_releaseMutex')
	.sect	'.debug_info'
.L112:
	.word	247
	.half	3
	.word	.L113
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L115,.L114
	.byte	2
	.word	.L78
	.byte	3
	.byte	'IfxCpu_releaseMutex',0,1,212,1,6,1,1,1
	.word	.L63,.L210,.L62
	.byte	4
	.byte	'lock',0,1,212,1,44
	.word	.L205,.L211
	.byte	5
	.word	.L63,.L210
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_releaseMutex')
	.sect	'.debug_abbrev'
.L113:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_releaseMutex')
	.sect	'.debug_line'
.L114:
	.word	.L373-.L372
.L372:
	.half	3
	.word	.L375-.L374
.L374:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0,0
.L375:
	.byte	5,13,7,0,5,2
	.word	.L63
	.byte	3,214,1,1,5,11,1,5,1,9
	.half	.L376-.L63
	.byte	3,1,1,7,9
	.half	.L116-.L376
	.byte	0,1,1
.L373:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_releaseMutex')
	.sect	'.debug_ranges'
.L115:
	.word	-1,.L63,0,.L116-.L63,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_resetSpinLock')
	.sect	'.debug_info'
.L117:
	.word	248
	.half	3
	.word	.L118
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L120,.L119
	.byte	2
	.word	.L78
	.byte	3
	.byte	'IfxCpu_resetSpinLock',0,1,219,1,6,1,1,1
	.word	.L65,.L212,.L64
	.byte	4
	.byte	'lock',0,1,219,1,44
	.word	.L213,.L214
	.byte	5
	.word	.L65,.L212
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_resetSpinLock')
	.sect	'.debug_abbrev'
.L118:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_resetSpinLock')
	.sect	'.debug_line'
.L119:
	.word	.L378-.L377
.L377:
	.half	3
	.word	.L380-.L379
.L379:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0,0
.L380:
	.byte	5,13,7,0,5,2
	.word	.L65
	.byte	3,221,1,1,5,11,1,5,1,9
	.half	.L381-.L65
	.byte	3,1,1,7,9
	.half	.L121-.L381
	.byte	0,1,1
.L378:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_resetSpinLock')
	.sect	'.debug_ranges'
.L120:
	.word	-1,.L65,0,.L121-.L65,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_setSpinLock')
	.sect	'.debug_info'
.L122:
	.word	322
	.half	3
	.word	.L123
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L125,.L124
	.byte	2
	.word	.L78
	.byte	3
	.byte	'IfxCpu_setSpinLock',0,1,154,2,9
	.word	.L170
	.byte	1,1,1
	.word	.L71,.L215,.L70
	.byte	4
	.byte	'lock',0,1,154,2,45
	.word	.L213,.L216
	.byte	4
	.byte	'timeoutCount',0,1,154,2,58
	.word	.L168,.L217
	.byte	5
	.word	.L71,.L215
	.byte	6
	.byte	'retVal',0,1,156,2,21
	.word	.L170,.L218
	.byte	6
	.byte	'spinLockVal',0,1,157,2,21
	.word	.L219,.L220
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_setSpinLock')
	.sect	'.debug_abbrev'
.L123:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_setSpinLock')
	.sect	'.debug_line'
.L124:
	.word	.L383-.L382
.L382:
	.half	3
	.word	.L385-.L384
.L384:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0,0
.L385:
	.byte	5,12,7,0,5,2
	.word	.L71
	.byte	3,158,2,1,5,9,3,123,1,5,23,9
	.half	.L301-.L71
	.byte	3,9,1,5,21,9
	.half	.L38-.L301
	.byte	1,9
	.half	.L386-.L38
	.byte	3,2,1,9
	.half	.L387-.L386
	.byte	3,127,1,5,13,9
	.half	.L388-.L387
	.byte	3,4,1,5,9,9
	.half	.L389-.L388
	.byte	1,5,20,7,9
	.half	.L390-.L389
	.byte	3,2,1,5,26,1,5,25,9
	.half	.L39-.L390
	.byte	3,4,1,5,14,9
	.half	.L40-.L39
	.byte	3,2,1,5,49,7,9
	.half	.L302-.L40
	.byte	1,5,1,7,9
	.half	.L41-.L302
	.byte	3,3,1,7,9
	.half	.L126-.L41
	.byte	0,1,1
.L383:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_setSpinLock')
	.sect	'.debug_ranges'
.L125:
	.word	-1,.L71,0,.L126-.L71,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_getRandomValue')
	.sect	'.debug_info'
.L127:
	.word	387
	.half	3
	.word	.L128
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L130,.L129
	.byte	2
	.word	.L78
	.byte	3
	.byte	'IfxCpu_getRandomValue',0,1,150,1,8
	.word	.L168
	.byte	1,1,1
	.word	.L59,.L221,.L58
	.byte	4
	.byte	'seed',0,1,150,1,38
	.word	.L222,.L223
	.byte	5
	.word	.L59,.L221
	.byte	6
	.byte	'x',0,1,162,1,12
	.word	.L168,.L224
	.byte	7
	.word	.L225
	.byte	8
	.word	.L228,.L59,.L226
	.byte	9
	.word	.L229,.L230
	.byte	9
	.word	.L231,.L232
	.byte	9
	.word	.L233,.L234
	.byte	10
	.word	.L235,.L236
	.byte	6
	.byte	'result',0,2,249,2,9
	.word	.L168,.L238
	.byte	0,0,8
	.word	.L228,.L227,.L237
	.byte	9
	.word	.L229,.L230
	.byte	9
	.word	.L231,.L232
	.byte	9
	.word	.L233,.L234
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_getRandomValue')
	.sect	'.debug_abbrev'
.L128:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,8,29,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2,6,0
	.byte	0,10,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_getRandomValue')
	.sect	'.debug_line'
.L129:
	.word	.L392-.L391
.L391:
	.half	3
	.word	.L394-.L393
.L393:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0,0
.L394:
	.byte	4,2,5,30,7,0,5,2
	.word	.L59
	.byte	3,131,3,1,4,1,5,16,3,158,126,1,4,2,5,30,9
	.half	.L275-.L59
	.byte	3,226,1,1,4,1,5,11,9
	.half	.L226-.L275
	.byte	3,163,126,1,4,2,5,46,9
	.half	.L227-.L226
	.byte	3,221,1,1,5,5,9
	.half	.L395-.L227
	.byte	3,118,1,4,1,5,12,9
	.half	.L396-.L395
	.byte	3,189,126,1,5,1,9
	.half	.L237-.L396
	.byte	3,3,1,7,9
	.half	.L131-.L237
	.byte	0,1,1
.L392:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_getRandomValue')
	.sect	'.debug_ranges'
.L130:
	.word	-1,.L59,0,.L131-.L59,0,0
.L225:
	.word	-1,.L59,0,.L226-.L59,.L227-.L59,.L221-.L59,0,0
.L236:
	.word	-1,.L59,0,.L226-.L59,.L227-.L59,.L237-.L59,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_getRandomValueWithinRange')
	.sect	'.debug_info'
.L132:
	.word	350
	.half	3
	.word	.L133
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L135,.L134
	.byte	2
	.word	.L78
	.byte	3
	.byte	'IfxCpu_getRandomValueWithinRange',0,1,189,1,8
	.word	.L168
	.byte	1,1,1
	.word	.L61,.L239,.L60
	.byte	4
	.byte	'seed',0,1,189,1,49
	.word	.L222,.L240
	.byte	4
	.byte	'min',0,1,189,1,62
	.word	.L168,.L241
	.byte	4
	.byte	'max',0,1,189,1,74
	.word	.L168,.L242
	.byte	5
	.word	.L61,.L239
	.byte	6
	.byte	'new_value',0,1,191,1,12
	.word	.L168,.L243
	.byte	5
	.word	.L244,.L20
	.byte	6
	.byte	'swap',0,1,196,1,18
	.word	.L245,.L246
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_getRandomValueWithinRange')
	.sect	'.debug_abbrev'
.L133:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_getRandomValueWithinRange')
	.sect	'.debug_line'
.L134:
	.word	.L398-.L397
.L397:
	.half	3
	.word	.L400-.L399
.L399:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0,0
.L400:
	.byte	5,8,7,0,5,2
	.word	.L61
	.byte	3,188,1,1,5,46,9
	.half	.L278-.L61
	.byte	3,2,1,5,5,9
	.half	.L277-.L278
	.byte	3,3,1,5,23,7,9
	.half	.L244-.L277
	.byte	3,2,1,5,13,9
	.half	.L280-.L244
	.byte	3,1,1,9
	.half	.L401-.L280
	.byte	3,1,1,5,9,9
	.half	.L20-.L401
	.byte	3,4,1,5,28,7,9
	.half	.L402-.L20
	.byte	1,5,26,7,9
	.half	.L21-.L402
	.byte	3,6,1,5,23,9
	.half	.L403-.L21
	.byte	1,5,42,9
	.half	.L404-.L403
	.byte	1,5,1,9
	.half	.L23-.L404
	.byte	3,1,1,7,9
	.half	.L136-.L23
	.byte	0,1,1
.L398:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_getRandomValueWithinRange')
	.sect	'.debug_ranges'
.L135:
	.word	-1,.L61,0,.L136-.L61,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_waitEvent')
	.sect	'.debug_info'
.L137:
	.word	404
	.half	3
	.word	.L138
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L140,.L139
	.byte	2
	.word	.L78
	.byte	3
	.byte	'IfxCpu_waitEvent',0,1,200,2,9
	.word	.L170
	.byte	1,1,1
	.word	.L75,.L247,.L74
	.byte	4
	.byte	'event',0,1,200,2,44
	.word	.L248,.L249
	.byte	4
	.byte	'timeoutMilliSec',0,1,200,2,58
	.word	.L168,.L250
	.byte	5
	.word	.L75,.L247
	.byte	6
	.byte	'sync',0,1,202,2,22
	.word	.L251,.L252
	.byte	6
	.byte	'errorcnt',0,1,204,2,22
	.word	.L170,.L253
	.byte	6
	.byte	'stmCount',0,1,206,2,22
	.word	.L168,.L254
	.byte	6
	.byte	'stmCountBegin',0,1,207,2,22
	.word	.L168,.L255
	.byte	7
	.word	.L256,.L257,.L258
	.byte	8
	.word	.L259,.L260
	.byte	0,9
	.word	.L256,.L261,.L262
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_waitEvent')
	.sect	'.debug_abbrev'
.L138:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,0,49,16,85,6,0,0,9,29,0,49,16
	.byte	17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_waitEvent')
	.sect	'.debug_line'
.L139:
	.word	.L406-.L405
.L405:
	.half	3
	.word	.L408-.L407
.L407:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0
	.byte	'IfxScuCcu.h',0,1,0,0,0
.L408:
	.byte	5,57,7,0,5,2
	.word	.L75
	.byte	3,201,2,1,5,9,9
	.half	.L409-.L75
	.byte	3,126,1,5,57,9
	.half	.L311-.L409
	.byte	3,2,1,7,9
	.half	.L410-.L311
	.byte	1,5,36,9
	.half	.L46-.L410
	.byte	1,9
	.half	.L312-.L46
	.byte	3,2,1,4,2,5,40,3,152,6,1,5,58,9
	.half	.L257-.L312
	.byte	1,4,1,5,78,9
	.half	.L258-.L257
	.byte	3,234,121,1,5,47,3,1,1,4,2,5,58,9
	.half	.L261-.L258
	.byte	3,149,6,1,4,1,5,47,3,235,121,1,4,2,5,58,9
	.half	.L313-.L261
	.byte	3,149,6,1,5,43,9
	.half	.L411-.L313
	.byte	1,4,1,5,76,9
	.half	.L262-.L411
	.byte	3,234,121,1,5,86,9
	.half	.L412-.L262
	.byte	1,5,84,9
	.half	.L413-.L412
	.byte	1,5,38,9
	.half	.L414-.L413
	.byte	1,5,72,3,3,1,5,14,9
	.half	.L48-.L414
	.byte	3,2,1,5,31,9
	.half	.L415-.L48
	.byte	3,2,1,5,34,9
	.half	.L416-.L415
	.byte	1,5,9,9
	.half	.L417-.L416
	.byte	1,5,22,7,9
	.half	.L418-.L417
	.byte	3,2,1,5,13,3,1,1,9
	.half	.L47-.L418
	.byte	3,121,1,5,19,9
	.half	.L419-.L47
	.byte	1,5,72,9
	.half	.L420-.L419
	.byte	1,5,5,7,9
	.half	.L50-.L420
	.byte	3,18,1,5,1,3,1,1,7,9
	.half	.L141-.L50
	.byte	0,1,1
.L406:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_waitEvent')
	.sect	'.debug_ranges'
.L140:
	.word	-1,.L75,0,.L141-.L75,0,0
.L260:
	.word	-1,.L75,.L257-.L75,.L258-.L75,.L261-.L75,.L262-.L75,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_emitEvent')
	.sect	'.debug_info'
.L142:
	.word	245
	.half	3
	.word	.L143
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L145,.L144
	.byte	2
	.word	.L78
	.byte	3
	.byte	'IfxCpu_emitEvent',0,1,231,2,6,1,1,1
	.word	.L77,.L263,.L76
	.byte	4
	.byte	'event',0,1,231,2,41
	.word	.L248,.L264
	.byte	5
	.word	.L77,.L263
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_emitEvent')
	.sect	'.debug_abbrev'
.L143:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_emitEvent')
	.sect	'.debug_line'
.L144:
	.word	.L422-.L421
.L421:
	.half	3
	.word	.L424-.L423
.L423:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std\\IfxCpu.c',0,0,0,0,0
.L424:
	.byte	5,5,7,0,5,2
	.word	.L77
	.byte	3,232,2,1,5,1,9
	.half	.L425-.L77
	.byte	3,1,1,7,9
	.half	.L146-.L425
	.byte	0,1,1
.L422:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_emitEvent')
	.sect	'.debug_ranges'
.L145:
	.word	-1,.L77,0,.L146-.L77,0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_acquireMutex')
	.sect	'.debug_loc'
.L52:
	.word	-1,.L53,0,.L265-.L53
	.half	2
	.byte	138,0
	.word	.L265-.L53,.L204-.L53
	.half	2
	.byte	138,8
	.word	.L204-.L53,.L204-.L53
	.half	2
	.byte	138,0
	.word	0,0
.L206:
	.word	-1,.L53,0,.L204-.L53
	.half	1
	.byte	100
	.word	0,0
.L207:
	.word	-1,.L53,.L266-.L53,.L204-.L53
	.half	1
	.byte	82
	.word	0,0
.L209:
	.word	-1,.L53,0,.L204-.L53
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_emitEvent')
	.sect	'.debug_loc'
.L76:
	.word	-1,.L77,0,.L263-.L77
	.half	2
	.byte	138,0
	.word	0,0
.L264:
	.word	-1,.L77,0,.L263-.L77
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_getCoreMode')
	.sect	'.debug_loc'
.L54:
	.word	-1,.L55,0,.L148-.L55
	.half	2
	.byte	138,0
	.word	0,0
.L150:
	.word	-1,.L55,0,.L267-.L55
	.half	1
	.byte	100
	.word	.L268-.L55,.L269-.L55
	.half	1
	.byte	111
	.word	0,0
.L151:
	.word	-1,.L55,.L157-.L55,.L148-.L55
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L153:
	.word	-1,.L55,.L271-.L55,.L4-.L55
	.half	1
	.byte	95
	.word	.L5-.L55,.L272-.L55
	.half	1
	.byte	95
	.word	0,0
.L155:
	.word	-1,.L55,.L267-.L55,.L148-.L55
	.half	1
	.byte	82
	.word	0,0
.L164:
	.word	-1,.L55,.L273-.L55,.L7-.L55
	.half	1
	.byte	111
	.word	0,0
.L161:
	.word	-1,.L55,.L270-.L55,.L158-.L55
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_getIndex')
	.sect	'.debug_loc'
.L56:
	.word	-1,.L57,0,.L165-.L57
	.half	2
	.byte	138,0
	.word	0,0
.L166:
	.word	-1,.L57,0,.L165-.L57
	.half	1
	.byte	100
	.word	0,0
.L169:
	.word	0,0
.L167:
	.word	-1,.L57,.L274-.L57,.L165-.L57
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_getRandomValue')
	.sect	'.debug_loc'
.L58:
	.word	-1,.L59,0,.L221-.L59
	.half	2
	.byte	138,0
	.word	0,0
.L230:
	.word	0,0
.L234:
	.word	0,0
.L238:
	.word	-1,.L59,.L276-.L59,.L221-.L59
	.half	1
	.byte	82
	.word	0,0
.L223:
	.word	-1,.L59,0,.L221-.L59
	.half	1
	.byte	100
	.word	0,0
.L224:
	.word	-1,.L59,.L275-.L59,.L221-.L59
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L232:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_getRandomValueWithinRange')
	.sect	'.debug_loc'
.L60:
	.word	-1,.L61,0,.L239-.L61
	.half	2
	.byte	138,0
	.word	0,0
.L242:
	.word	-1,.L61,0,.L277-.L61
	.half	1
	.byte	85
	.word	.L277-.L61,.L279-.L61
	.half	1
	.byte	95
	.word	0,0
.L241:
	.word	-1,.L61,0,.L277-.L61
	.half	1
	.byte	84
	.word	.L278-.L61,.L239-.L61
	.half	1
	.byte	88
	.word	0,0
.L243:
	.word	-1,.L61,.L277-.L61,.L23-.L61
	.half	1
	.byte	82
	.word	0,0
.L240:
	.word	-1,.L61,0,.L277-.L61
	.half	1
	.byte	100
	.word	0,0
.L246:
	.word	-1,.L61,.L280-.L61,.L20-.L61
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_releaseMutex')
	.sect	'.debug_loc'
.L62:
	.word	-1,.L63,0,.L210-.L63
	.half	2
	.byte	138,0
	.word	0,0
.L211:
	.word	-1,.L63,0,.L210-.L63
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_resetSpinLock')
	.sect	'.debug_loc'
.L64:
	.word	-1,.L65,0,.L212-.L65
	.half	2
	.byte	138,0
	.word	0,0
.L214:
	.word	-1,.L65,0,.L212-.L65
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_setCoreMode')
	.sect	'.debug_loc'
.L66:
	.word	-1,.L67,0,.L171-.L67
	.half	2
	.byte	138,0
	.word	0,0
.L172:
	.word	-1,.L67,0,.L281-.L67
	.half	1
	.byte	100
	.word	.L282-.L67,.L283-.L67
	.half	1
	.byte	111
	.word	.L290-.L67,.L291-.L67
	.half	1
	.byte	100
	.word	0,0
.L186:
	.word	-1,.L67,.L294-.L67,.L295-.L67
	.half	1
	.byte	82
	.word	.L296-.L67,.L29-.L67
	.half	1
	.byte	90
	.word	.L297-.L67,.L29-.L67
	.half	1
	.byte	84
	.word	0,0
.L176:
	.word	-1,.L67,.L281-.L67,.L284-.L67
	.half	1
	.byte	82
	.word	.L286-.L67,.L287-.L67
	.half	1
	.byte	88
	.word	.L30-.L67,.L29-.L67
	.half	1
	.byte	88
	.word	.L30-.L67,.L294-.L67
	.half	1
	.byte	82
	.word	0,0
.L173:
	.word	-1,.L67,0,.L281-.L67
	.half	1
	.byte	84
	.word	.L281-.L67,.L285-.L67
	.half	1
	.byte	95
	.word	0,0
.L179:
	.word	-1,.L67,.L285-.L67,.L178-.L67
	.half	1
	.byte	95
	.word	0,0
.L174:
	.word	-1,.L67,.L288-.L67,.L171-.L67
	.half	1
	.byte	91
	.word	0,0
.L175:
	.word	-1,.L67,.L28-.L67,.L171-.L67
	.half	1
	.byte	89
	.word	0,0
.L185:
	.word	-1,.L67,.L284-.L67,.L289-.L67
	.half	1
	.byte	82
	.word	.L287-.L67,.L30-.L67
	.half	1
	.byte	88
	.word	.L292-.L67,.L293-.L67
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_setProgramCounter')
	.sect	'.debug_loc'
.L68:
	.word	-1,.L69,0,.L187-.L69
	.half	2
	.byte	138,0
	.word	0,0
.L188:
	.word	-1,.L69,0,.L187-.L69
	.half	1
	.byte	100
	.word	0,0
.L197:
	.word	0,0
.L199:
	.word	-1,.L69,.L300-.L69,.L33-.L69
	.half	1
	.byte	111
	.word	.L34-.L69,.L187-.L69
	.half	1
	.byte	111
	.word	0,0
.L189:
	.word	-1,.L69,0,.L298-.L69
	.half	1
	.byte	84
	.word	0,0
.L193:
	.word	-1,.L69,.L299-.L69,.L192-.L69
	.half	1
	.byte	95
	.word	0,0
.L190:
	.word	-1,.L69,.L191-.L69,.L187-.L69
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_setSpinLock')
	.sect	'.debug_loc'
.L70:
	.word	-1,.L71,0,.L301-.L71
	.half	2
	.byte	138,0
	.word	.L301-.L71,.L215-.L71
	.half	2
	.byte	138,8
	.word	.L215-.L71,.L215-.L71
	.half	2
	.byte	138,0
	.word	0,0
.L216:
	.word	-1,.L71,0,.L215-.L71
	.half	1
	.byte	100
	.word	0,0
.L218:
	.word	-1,.L71,.L301-.L71,.L38-.L71
	.half	1
	.byte	82
	.word	.L38-.L71,.L215-.L71
	.half	5
	.byte	144,32,157,32,0
	.word	.L40-.L71,.L302-.L71
	.half	1
	.byte	82
	.word	0,0
.L220:
	.word	-1,.L71,0,.L215-.L71
	.half	2
	.byte	145,120
	.word	0,0
.L217:
	.word	-1,.L71,0,.L215-.L71
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_startCore')
	.sect	'.debug_loc'
.L72:
	.word	-1,.L73,0,.L200-.L73
	.half	2
	.byte	138,0
	.word	0,0
.L201:
	.word	-1,.L73,0,.L303-.L73
	.half	1
	.byte	100
	.word	.L304-.L73,.L200-.L73
	.half	1
	.byte	111
	.word	.L306-.L73,.L305-.L73
	.half	1
	.byte	100
	.word	.L307-.L73,.L308-.L73
	.half	1
	.byte	100
	.word	0,0
.L202:
	.word	-1,.L73,0,.L303-.L73
	.half	1
	.byte	84
	.word	0,0
.L203:
	.word	-1,.L73,.L303-.L73,.L305-.L73
	.half	1
	.byte	82
	.word	.L306-.L73,.L200-.L73
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_waitEvent')
	.sect	'.debug_loc'
.L74:
	.word	-1,.L75,0,.L247-.L75
	.half	2
	.byte	138,0
	.word	0,0
.L253:
	.word	-1,.L75,.L257-.L75,.L247-.L75
	.half	1
	.byte	89
	.word	0,0
.L249:
	.word	-1,.L75,0,.L257-.L75
	.half	1
	.byte	100
	.word	.L309-.L75,.L310-.L75
	.half	5
	.byte	144,32,157,32,0
	.word	.L45-.L75,.L46-.L75
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L254:
	.word	-1,.L75,.L48-.L75,.L247-.L75
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L255:
	.word	-1,.L75,.L313-.L75,.L247-.L75
	.half	1
	.byte	81
	.word	0,0
.L252:
	.word	-1,.L75,.L312-.L75,.L247-.L75
	.half	1
	.byte	111
	.word	0,0
.L250:
	.word	-1,.L75,0,.L257-.L75
	.half	1
	.byte	84
	.word	.L311-.L75,.L247-.L75
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L426:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_acquireMutex')
	.sect	'.debug_frame'
	.word	44
	.word	.L426,.L53,.L204-.L53
	.byte	8,18,8,19,8,21,8,22,8,23,4
	.word	(.L265-.L53)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L204-.L265)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_getCoreMode')
	.sect	'.debug_frame'
	.word	12
	.word	.L426,.L55,.L148-.L55
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_getIndex')
	.sect	'.debug_frame'
	.word	20
	.word	.L426,.L57,.L165-.L57
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_getRandomValue')
	.sect	'.debug_frame'
	.word	24
	.word	.L426,.L59,.L221-.L59
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_getRandomValueWithinRange')
	.sect	'.debug_frame'
	.word	12
	.word	.L426,.L61,.L239-.L61
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_releaseMutex')
	.sect	'.debug_frame'
	.word	24
	.word	.L426,.L63,.L210-.L63
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_resetSpinLock')
	.sect	'.debug_frame'
	.word	24
	.word	.L426,.L65,.L212-.L65
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_setCoreMode')
	.sect	'.debug_frame'
	.word	12
	.word	.L426,.L67,.L171-.L67
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_setProgramCounter')
	.sect	'.debug_frame'
	.word	24
	.word	.L426,.L69,.L187-.L69
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_setSpinLock')
	.sect	'.debug_frame'
	.word	44
	.word	.L426,.L71,.L215-.L71
	.byte	8,18,8,19,8,21,8,22,8,23,4
	.word	(.L301-.L71)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L215-.L301)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_startCore')
	.sect	'.debug_frame'
	.word	12
	.word	.L426,.L73,.L200-.L73
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_waitEvent')
	.sect	'.debug_frame'
	.word	12
	.word	.L426,.L75,.L247-.L75
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_emitEvent')
	.sect	'.debug_frame'
	.word	24
	.word	.L426,.L77,.L263-.L77
	.byte	8,18,8,19,8,21,8,22,8,23,0,0

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.c	   363  void IfxCpu_emitEvent(IfxCpu_syncEvent *event)
	; Module end
