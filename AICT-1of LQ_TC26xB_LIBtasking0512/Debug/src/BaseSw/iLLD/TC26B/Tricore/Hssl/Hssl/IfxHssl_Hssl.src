	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99293038"
	.compiler_invocation	"ctc --dep-file=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\.IfxHssl_Hssl.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc26x -D__CPU_TC26X__ --core=tc1.6.x --iso=99 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\User -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Driver -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -g2 --make-target=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.src ..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c"
	.compiler_name		"ctc"
	;source	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c'

	
$TC16X
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_checkErrors',code,cluster('IfxHssl_Hssl_checkErrors')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_checkErrors'
	.align	2
	
	.global	IfxHssl_Hssl_checkErrors

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	     2   * \file IfxHssl_Hssl.c
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	     3   * \brief HSSL HSSL details
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	     4   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	     5   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	     7   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	     9   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    10   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    16  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    19  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    25   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    26  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    32   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    33  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    41  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    42   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    44   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    45  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    46  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    47  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    48  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    49  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    50  #include "IfxHssl_Hssl.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    51  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    52  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    53  /*-------------------------Function Implementations---------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    54  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    55  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    56  void IfxHssl_Hssl_checkErrors(IfxHssl_Hssl *hssl)
; Function IfxHssl_Hssl_checkErrors
.L81:
IfxHssl_Hssl_checkErrors:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    57  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    58      Ifx_HSSL *hsslSFR = hssl->hssl; /* pointer to HSSL registers */
	ld.a	a15,[a4]
.L367:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    59  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    60      /* store the errors in the structure */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    61      if (hsslSFR->MFLAGS.B.NACK != 0)
	ld.bu	d15,[a15]24
	and	d15,#15
.L664:
	jeq	d15,#0,.L2
.L665:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    62      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    63          hssl->errorFlags.notAcknowledgeError = 1;
	ld.bu	d15,[a4]4
.L666:
	or	d15,#1
	st.b	[a4]4,d15
.L2:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    64      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    65  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    66      if (hsslSFR->MFLAGS.B.TTE != 0)
	ld.bu	d15,[a15]24
	extr.u	d15,d15,#4,#4
.L667:
	jeq	d15,#0,.L3
.L668:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    67      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    68          hssl->errorFlags.transactionTagError = 1;
	ld.bu	d15,[a4]4
.L669:
	or	d15,#2
	st.b	[a4]4,d15
.L3:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    69      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    70  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    71      if (hsslSFR->MFLAGS.B.TIMEOUT != 0)
	ld.bu	d15,[a15]25
	and	d15,#15
.L670:
	jeq	d15,#0,.L4
.L671:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    72      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    73          hssl->errorFlags.timeoutError = 1;
	ld.bu	d15,[a4]4
.L672:
	or	d15,#4
	st.b	[a4]4,d15
.L4:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    74      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    75  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    76      if (hsslSFR->MFLAGS.B.UNEXPECTED != 0)
	ld.bu	d15,[a15]25
	extr.u	d15,d15,#4,#4
.L673:
	jeq	d15,#0,.L5
.L674:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    77      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    78          hssl->errorFlags.unexpectedError = 1;
	ld.bu	d15,[a4]4
.L675:
	or	d15,#8
	st.b	[a4]4,d15
.L5:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    79      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    80  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    81      if (hsslSFR->MFLAGS.B.MAV != 0)
	ld.bu	d15,[a15]26
.L676:
	jz.t	d15:5,.L6
.L677:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    82      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    83          hssl->errorFlags.memoryAccessViolation = 1;
	ld.bu	d15,[a4]4
.L678:
	or	d15,#16
	st.b	[a4]4,d15
.L6:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    84      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    85  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    86      if (hsslSFR->MFLAGS.B.SRIE != 0)
	ld.bu	d15,[a15]26
.L679:
	jz.t	d15:6,.L7
.L680:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    87      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    88          hssl->errorFlags.busAccessError = 1;
	ld.bu	d15,[a4]4
.L681:
	or	d15,#32
	st.b	[a4]4,d15
.L7:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    89      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    90  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    91      if (hsslSFR->MFLAGS.B.PIE1 != 0)
	ld.bu	d15,[a15]26
.L682:
	jz.t	d15:7,.L8
.L683:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    92      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    93          hssl->errorFlags.channelNumberCodeError = 1;
	ld.bu	d15,[a4]4
.L684:
	or	d15,#64
	st.b	[a4]4,d15
.L8:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    94      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    95  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    96      if (hsslSFR->MFLAGS.B.PIE2 != 0)
	ld.bu	d15,[a15]27
.L685:
	jz.t	d15:0,.L9
.L686:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    97      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    98          hssl->errorFlags.dataLengthError = 1;
	ld.bu	d15,[a4]4
.L687:
	or	d15,#128
	st.b	[a4]4,d15
.L9:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	    99      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   100  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   101      if (hsslSFR->MFLAGS.B.CRCE != 0)
	ld.bu	d15,[a15]27
.L688:
	jz.t	d15:1,.L10
.L689:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   102      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   103          hssl->errorFlags.crcError = 1;
	ld.bu	d15,[a4]5
.L690:
	or	d15,#1
	st.b	[a4]5,d15
.L10:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   104      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   105  }
	ret
.L328:
	
__IfxHssl_Hssl_checkErrors_function_end:
	.size	IfxHssl_Hssl_checkErrors,__IfxHssl_Hssl_checkErrors_function_end-IfxHssl_Hssl_checkErrors
.L183:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_clearErrorFlags',code,cluster('IfxHssl_Hssl_clearErrorFlags')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_clearErrorFlags'
	.align	2
	
	.global	IfxHssl_Hssl_clearErrorFlags

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   106  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   107  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   108  void IfxHssl_Hssl_clearErrorFlags(IfxHssl_Hssl *hssl)
; Function IfxHssl_Hssl_clearErrorFlags
.L83:
IfxHssl_Hssl_clearErrorFlags:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   109  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   110      hssl->errorFlags.notAcknowledgeError    = 0;
	mov	d15,#0
	st.h	[a4]4,d15
.L695:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   111      hssl->errorFlags.transactionTagError    = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   112      hssl->errorFlags.timeoutError           = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   113      hssl->errorFlags.unexpectedError        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   114      hssl->errorFlags.memoryAccessViolation  = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   115      hssl->errorFlags.busAccessError         = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   116      hssl->errorFlags.channelNumberCodeError = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   117      hssl->errorFlags.dataLengthError        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   118      hssl->errorFlags.crcError               = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   119  }
	ret
.L331:
	
__IfxHssl_Hssl_clearErrorFlags_function_end:
	.size	IfxHssl_Hssl_clearErrorFlags,__IfxHssl_Hssl_clearErrorFlags_function_end-IfxHssl_Hssl_clearErrorFlags
.L188:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_delay',code,cluster('IfxHssl_Hssl_delay')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_delay'
	.align	2
	
	.global	IfxHssl_Hssl_delay

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   120  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   121  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   122  void IfxHssl_Hssl_delay(IfxHssl_Hsct *hsct)
; Function IfxHssl_Hssl_delay
.L85:
IfxHssl_Hssl_delay:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   123  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   124      uint32 i;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   125      IFX_UNUSED_PARAMETER(hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   126  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   127      for (i = 0; i < 8000; i++)
	lea	a15,7999
.L11:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   128      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   129          __nop();
	nop
.L700:
	loop	a15,.L11
.L701:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   130      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   131  }
	ret
.L333:
	
__IfxHssl_Hssl_delay_function_end:
	.size	IfxHssl_Hssl_delay,__IfxHssl_Hssl_delay_function_end-IfxHssl_Hssl_delay
.L193:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initChannel',code,cluster('IfxHssl_Hssl_initChannel')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initChannel'
	.align	2
	
	.global	IfxHssl_Hssl_initChannel

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   132  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   133  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   134  void IfxHssl_Hssl_initChannel(IfxHssl_Hssl_Channel *channel, const IfxHssl_Hssl_ChannelConfig *channelConfig)
; Function IfxHssl_Hssl_initChannel
.L87:
IfxHssl_Hssl_initChannel:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   135  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   136      channel->hssl                = channelConfig->hssl;                /* adding HSSL register pointer to channel handle */
	ld.a	a15,[a5]
.L567:
	st.a	[a4],a15
.L568:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   137      channel->hsct                = channelConfig->hsct;                /* adding HSCT register pointer to channel handle */
	ld.a	a15,[a5]4
.L569:
	st.a	[a4]4,a15
.L570:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   138  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   139      channel->channelId           = channelConfig->channelId;           /* adding channel id to channel handle */
	ld.bu	d15,[a5]8
.L571:
	st.b	[a4]8,d15
.L572:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   140      channel->currentFrameRequest = IfxHssl_Hssl_FrameRequest_noAction; /* default request, no action */
	mov	d15,#5
	st.b	[a4]9,d15
.L573:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   141  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   142      channel->streamingModeOn     = FALSE;                              /* command mode (used in waitAcknowledge function) */
	mov	d15,#0
	st.b	[a4]12,d15
.L574:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   143      channel->streamingMode       = channelConfig->streamingMode;       /* adding streaming mode to channel handle */
	ld.bu	d15,[a5]9
.L575:
	st.b	[a4]10,d15
.L576:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   144      channel->loopBack            = channelConfig->loopBack;            /* adding loopback selection to channel handle */
	ld.bu	d15,[a5]10
.L577:
	st.b	[a4]11,d15
.L578:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   145  }
	ret
.L281:
	
__IfxHssl_Hssl_initChannel_function_end:
	.size	IfxHssl_Hssl_initChannel,__IfxHssl_Hssl_initChannel_function_end-IfxHssl_Hssl_initChannel
.L148:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initChannelConfig',code,cluster('IfxHssl_Hssl_initChannelConfig')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initChannelConfig'
	.align	2
	
	.global	IfxHssl_Hssl_initChannelConfig

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   146  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   147  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   148  void IfxHssl_Hssl_initChannelConfig(IfxHssl_Hssl_ChannelConfig *channelConfig, IfxHssl_Hssl *hssl, IfxHssl_Hsct *hsct)
; Function IfxHssl_Hssl_initChannelConfig
.L89:
IfxHssl_Hssl_initChannelConfig:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   149  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   150      channelConfig->hssl          = hssl->hssl;
	ld.a	a15,[a5]
.L583:
	st.a	[a4],a15
.L584:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   151      channelConfig->hsct          = hsct->hsct;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   152  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   153      channelConfig->channelId     = IfxHssl_ChannelId_0;          /* default channel 0 */
	mov	d15,#0
.L585:
	ld.a	a15,[a6]
.L586:
	st.a	[a4]4,a15
.L587:
	st.b	[a4]8,d15
.L588:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   154      channelConfig->streamingMode = IfxHssl_StreamingMode_single; /* default streaming mode continuous */
	mov	d15,#1
	st.b	[a4]9,d15
.L589:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   155      channelConfig->loopBack      = hsct->loopBack;
	ld.bu	d15,[a6]4
.L590:
	st.b	[a4]10,d15
.L591:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   156      hssl->loopBack               = hsct->loopBack;               /* copy to hssl handle, used in trasfer apis */
	ld.bu	d15,[a6]4
.L592:
	st.b	[a5]6,d15
.L593:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   157  }
	ret
.L286:
	
__IfxHssl_Hssl_initChannelConfig_function_end:
	.size	IfxHssl_Hssl_initChannelConfig,__IfxHssl_Hssl_initChannelConfig_function_end-IfxHssl_Hssl_initChannelConfig
.L153:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initHsctModule',code,cluster('IfxHssl_Hssl_initHsctModule')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initHsctModule'
	.align	2
	
	.global	IfxHssl_Hssl_initHsctModule

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   158  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   159  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   160  void IfxHssl_Hssl_initHsctModule(IfxHssl_Hsct *hsct, const IfxHssl_Hsct_Config *config)
; Function IfxHssl_Hssl_initHsctModule
.L91:
IfxHssl_Hssl_initHsctModule:	.type	func
	mov.aa	a15,a5
.L376:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   161  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   162      Ifx_HSCT *hsctSFR = config->hsct;   /* pointer to HSCT registers */
	ld.a	a13,[a15]
.L378:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   163  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   164      hsct->hsct     = hsctSFR;           /* adding HSCT register pointer to module handle */
	st.a	[a4],a13
.L233:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	movh.a	a12,#61444
.L471:
	mov	d4,#2

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   165  /* adding loopback selection to module handle */
	ld.bu	d15,[a15]6
.L472:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	mov	d5,#0
	lea	a12,[a12]@los(0xf003c100)
.L234:
	st.b	[a4]4,d15
.L243:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	mov.aa	a4,a12
.L368:
	call	IfxPort_setPinMode
.L244:
	mov	d4,#3
	mov.aa	a4,a12
	mov	d5,#0
	call	IfxPort_setPinMode
.L245:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   583  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   584  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   585  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   586  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   587  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   588      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	mov	d4,#4
	mov.aa	a4,a12
	mov	d5,#128
	call	IfxPort_setPinMode
.L247:
	mov	d4,#5
	mov.aa	a4,a12
	mov	d5,#128
	call	IfxPort_setPinMode
.L257:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   166  #ifndef IFXHSSL_HSCT_DISABLE_PINCONFIG
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   167      /* Pad initialisiation */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   168      IfxPort_setPinModeInput(&MODULE_P21, 2, IfxPort_InputMode_noPullDevice);                          /* RXDN */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   169      IfxPort_setPinModeInput(&MODULE_P21, 3, IfxPort_InputMode_noPullDevice);                          /* RXDP */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   170      IfxPort_setPinModeOutput(&MODULE_P21, 4, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general); /* TXDN */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   171      IfxPort_setPinModeOutput(&MODULE_P21, 5, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general); /* TXDP */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   172  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   173      /* select the clock direction */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   174      if (config->interfaceMode == IfxHssl_InterfaceMode_master)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   175      {
	ld.bu	d15,[a15]4
.L258:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   583  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   584  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   585  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   586  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   587  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   588      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	movh.a	a12,#61444
	lea	a12,[a12]@los(0xf003c000)
.L259:
	jne	d15,#0,.L12
.L261:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   583  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   584  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   585  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   586  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   587  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   588      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
	mov	d4,#0
	mov.aa	a4,a12
	mov	d5,#168
	call	IfxPort_setPinMode
.L262:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   176  xPort_setPinModeOutput(&MODULE_P20, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_alt5); /* CLKOUT */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   177          IfxPort_setPinPadDriver(&MODULE_P20, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   178      }
	mov	d4,#0
	mov.aa	a4,a12
	mov	d5,d4
	call	IfxPort_setPinPadDriver
.L473:
	j	.L13
.L12:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    45   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    46   * \defgroup IfxLld_Port_Std_Enum Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    47   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    48   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    49   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    50   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    51   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    52   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    53   * \ingroup IfxLld_Port_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    54   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    55  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    56  #ifndef IFXPORT_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    57  #define IFXPORT_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    58  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    59  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    61  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    62  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    63  #include "_Impl/IfxPort_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    64  #include "Scu/Std/IfxScuWdt.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    66  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    67  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    68  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    69  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    70  /** \addtogroup IfxLld_Port_Std_Enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    71   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    72  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    73   * HSCT module.declared in MODULE_PORTx.LPCRx
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    74   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    76  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    77      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    78      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    79  } IfxPort_ControlledBy;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    80  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    81  /** \brief Ifx_P output modification modes definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    82   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    83  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    84  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    85      IfxPort_InputMode_undefined    = -1,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    86      IfxPort_InputMode_noPullDevice = 0 << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    87          IfxPort_InputMode_pullDown = 1U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    88          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    89  } IfxPort_InputMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    90  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    91  /** \brief Ifx_P input / output mode definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    92   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    93   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    94   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    95  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    96  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    97      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    98      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	    99      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   100      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   101      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   102      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   103      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   104      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   105      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   106      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   107      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   108      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   109      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   110      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   111      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   112      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   113      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   114      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   115      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   116  } IfxPort_Mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   117  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   118  /** \brief Pin output alternate index
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   120  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   121  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   122      IfxPort_OutputIdx_general  = 0x10U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   123          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   124          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   125          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   126          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   127          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   128          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   129          IfxPort_OutputIdx_alt7 = 0x17U << 3
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   130  } IfxPort_OutputIdx;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   131  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   132  /** \brief Pin output mode definition
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   134  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   135  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   136      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   137          IfxPort_OutputMode_openDrain = 0x18U << 3
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_OutputMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   139  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   140  /** \brief Pad driver mode definition (strength and slew rate).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   141   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   142   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   143   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   144  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   145  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   146      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   147      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   148      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   149      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   150      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   151      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   152      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   153      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   154      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   155      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   156      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   157      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_PadDriver;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   159  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   160  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   161   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   162  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   163  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   164      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   165      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   166  } IfxPort_PadSupply;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   167  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   168  /** \brief Ifx_P output modification modes definition.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   169   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   170   * \see Ifx_P.OMR, IfxPort_setPinState()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   172  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   173  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   174      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   175      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   176      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   177      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   178  } IfxPort_State;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   180  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   181  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   182  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   183  /*-----------------------------Data Structures--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   184  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   185  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   186  /** \addtogroup IfxLld_Port_Std_DataStructures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   187   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   188  /** \brief Defines a pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   189   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   190  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   191  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   192      Ifx_P *port;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   193      uint8  pinIndex;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   194  } IfxPort_Pin;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   195  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   196  /** \brief To configure pins
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   197   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   198  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   199  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   200      Ifx_P            *port;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   201      uint8             pinIndex;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   202      IfxPort_OutputIdx mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   203      IfxPort_PadDriver padDriver;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   204  } IfxPort_Pin_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   205  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   206  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   208  /** \addtogroup IfxLld_Port_Std_SinglePin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   209   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   210  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   211  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   212  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   213  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   214  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   215  /** \brief Return the port state.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   216   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   217   * \param pinIndex Specifies the pin for which the state should be returned.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   218   * \return Returns TRUE the pin is high; FALSE the pin is low
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   219   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   220   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   221   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   222   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   223   *      // ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   224   *    }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   225   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   226   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   227   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   228  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   229  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   230  /** \brief Set the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   231   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   232   * \param pinIndex Specifies the pin to be set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   233   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   234   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   235   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   236   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   237   * IfxPort_setPinHigh(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   238   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   239   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   240   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   241   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   242   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   243  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   244  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   245  /** \brief Reset the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   246   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   247   * \param pinIndex Specifies the pin to be reset.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   248   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   249   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   250   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   251   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   252   * IfxPort_setPinLow(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   253   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   254   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   255   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   256   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   257   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   258  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   259  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   260  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   261   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   262   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   263   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   264   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   265   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   266   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   267   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   268   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   269   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   270   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   271   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   272  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   274  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   275   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   276   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   277   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   278   * \param index Specifies the alternate (or general purpose) output channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   279   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   280   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   281   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   282   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   283   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   284   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   285   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   286   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   287  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   288  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   289  /** \brief Set / Resets / Toggle the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   290   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   291   * \param pinIndex Specifies the pin to modify.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   292   * \param action Specifies the action: set, reset, toggle.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   293   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   294   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   295   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   296   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   297   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   298   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   299   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   300   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   301   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   302   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   303  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   304  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   305  /** \brief Toggle the port output.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin to be toggled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   308   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   309   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   311   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   312   * IfxPort_togglePin(&MODULE_P33, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   313   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   314   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   315   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   316   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   317   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   318  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   319  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   320  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   321  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   322  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   324  /** \brief Disable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   325   * This function disables the emergency stop function. A check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   326   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   327   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   328   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   329   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   330   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   331   * /code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   332   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   333   *     {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   334   *         // failed to disable emergency stop for P33.0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   335   *     }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   336   * /endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   337   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   338   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   339   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   340   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   341  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   343  /** \brief Enable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   344   * This function enables the emergency stop function. A check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   345   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   346   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   347   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   348   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   350   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   351   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   352   *       // failed to enable emergency stop for P33.0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   353   *     }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   354   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   355   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   356   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   357   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   358   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   359  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   361  /** \brief Configure the port input / output mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   362   * Also Configures the P40/P41 Port for digital functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   363   * which bydefault support analog functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   364   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   365   * \param pinIndex Specifies the pin to be configured.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   366   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   367   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   368   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   369   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   370   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   371   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   372   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   373   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   374   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   375  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   376  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   377  /** \brief Configure the pad driver mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   378   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   379   * \param pinIndex Specifies the pin for which the mode will be set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   380   * \param padDriver Specifies the driver mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   381   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   382   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   383   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   384   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   385   * // enable strong 3.3V driver
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   386   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   387   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   388   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   389   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   390  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   391  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   392  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   393  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   394  /** \addtogroup IfxLld_Port_Std_PortGroup
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   395   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   397  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   398  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   399  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   400  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   401  /** \brief Return the port group state
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   402   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   403   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   404   * \param mask selects the pins which should be read (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   405   * \return Returns the selected pin values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   406   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   407   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   408   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   409   * // read the current value of P33[7:0]
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   410   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   411   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   412   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   413   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   414  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   415  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   416  /** \brief Set the port group state.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   417   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   418   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   419   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   420   * \param data specifies the value which should be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   421   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   422   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   423   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   424   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   425   * // configure P33.[7:0] as GPIO outputs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   426   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   427   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   428   * // set initial value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   429   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   430   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   431   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   432   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   433  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   434  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   435  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   436  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   437  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   438  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   439  /** \brief Returns the module address of the selected Port module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   440   * \param port Pointer to PORT module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   441   * \return PORT module register address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   442   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   443  IFX_EXTERN Ifx_P *IfxPort_getAddress(IfxPort_Index port);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   444  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   445  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   446   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   447   * \return port index of IfxModule_IndexMap. return -1 in case of unknown port index.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   448   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   449  IFX_EXTERN IfxPort_Index IfxPort_getIndex(Ifx_P *port);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   450  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   451  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   452   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   453   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   454   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   455   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   456   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   457   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   458   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   459   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   460   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   461   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   462   *  \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   463   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   464   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   465  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   466  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   467  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   468   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   469   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   470   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   471   * \param mode Specifies the port pin mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   472   * \param index Specifies the alternate (or general purpose) output channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   473   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   474   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   475   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   476   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   477   * // configure P33.[7:0] as GPIO outputs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   478   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   479   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   480   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   481   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   482  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   483  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   484  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   485   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   486   * \param pinIndex start at the given pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   487   * \param mask selects the pins which should be modified (starting from pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   488   * \param padDriver Specifies the pad driver strength.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   489   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   490   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   491   * Coding example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   492   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   493   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   494   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   495   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   496   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   497   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   498  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   499  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   500  /** \brief set LVDSH mode (configured for Port21)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   501   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   502   * \param pinIndex specifies pin  to be modified
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   503   * \param mode specifes the mode of pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   504   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   505   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   506   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   508  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   509  /** \brief set LVDSM mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   510   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   511   * \param pinIndex specifies pin to be modified
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   512   * \param lvdsPadDriver select speed grade of LVDS Pad
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   513   * \param padSupply select the PAD supply (5/3.3V)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   514   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   515   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   516  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   517  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   518  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   519  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   521  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   523  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   524  /** \brief Disable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   525   * This function disables the emergency stop function. No check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   526   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   527   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   528   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   529   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   530   * \see IfxPort_disableEmergencyStop()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   531   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   532   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   533  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   534  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   535  /** \brief Enable the emergency stop function.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   536   * This function enables the emergency stop function. No check is done on port functionality.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   537   * \param port Pointer to the port which should be accessed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   538   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   539   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   540   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   541   * \see IfxPort_enableEmergencyStop()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   542   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   543   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   544  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   545  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   546  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   547  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   548  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   549  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   550  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   551  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   552      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   553  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   554  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   555  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   556  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   557  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   558      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   559  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   560  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   561  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   562  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   563  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   564      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   565  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   566  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   567  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   568  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   569  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   570      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   571  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   572  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   573  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   574  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   575  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   576      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   577  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   578  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   579  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   580  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   581  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Port\Std\IfxPort.h	   582      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	mov	d4,#0
	mov.aa	a4,a12
	mov	d5,#8
	call	IfxPort_setPinMode

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   179   else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   180      {
.L13:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   181          IfxPort_setPinModeInput(&MODULE_P20, 0, IfxPort_InputMode_pullDown); /* CLKIN */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   182      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   183  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   184      if (config->loopBack == FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   185      /* LVDS configuration */
	ld.bu	d15,[a15]6
.L474:
	jne	d15,#0,.L14
.L263:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   186      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   187          uint16 psw = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   188          IfxScuWdt_clearCpuEndinit(psw);         /* clears the endinit protection */
	call	IfxScuWdt_getCpuWatchdogPassword
.L369:
	mov	d8,d2
.L371:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   189  
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L370:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   190          P21_LPCR1.B_P21.RDIS_CTRL = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   191          P21_LPCR1.B_P21.RX_DIS    = 0;
	movh.a	a2,#61444
	lea	a2,[a2]@los(0xf003c1a4)
	ld.bu	d15,[a2]
.L475:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   192  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   193          P21_LPCR2.B.TDIS_CTRL     = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   194          P21_LPCR2.B.TX_DIS        = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   195          P21_LPCR2.B.TX_PD         = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   196  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   197          IfxScuWdt_setCpuEndinit(psw);           /* sets the endinit protection back on */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   198      }
	mov	d4,d8
.L372:
	or	d15,#1
	st.b	[a2],d15
.L476:
	ld.bu	d15,[a2]
.L477:
	insert	d15,d15,#0,#1,#1
	st.b	[a2],d15
.L478:
	movh.a	a2,#61444
	lea	a2,[a2]@los(0xf003c1a9)
	ld.bu	d15,[a2]
.L479:
	or	d15,#16
	st.b	[a2],d15
.L480:
	ld.bu	d15,[a2]
.L481:
	insert	d15,d15,#0,#5,#1
	st.b	[a2],d15
.L482:
	ld.bu	d15,[a2]
.L483:
	insert	d15,d15,#0,#6,#1
	st.b	[a2],d15
.L484:
	call	IfxScuWdt_setCpuEndinit
.L14:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   199  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   200  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   201  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   202      /* HSCT initialisation */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   203      IfxHssl_enableHsctModule(hsctSFR);                                                  /* enabling the HSCT module */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   204  
	mov.aa	a4,a13
.L373:
	call	IfxHssl_enableHsctModule
.L374:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   205      hsctSFR->IRQCLR.B.TXTECLR = 1;                                                      /* due to AI */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   206  
	ld.bu	d15,[a13]73
.L485:
	or	d15,#4
	st.b	[a13]73,d15
.L486:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   207      /* slave interface initialisation */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   208      if (config->interfaceMode == IfxHssl_InterfaceMode_slave)                           /* slave mode initialisation */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   209      {
	ld.bu	d15,[a15]4
.L487:
	jne	d15,#1,.L15
.L488:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   210          hsctSFR->INIT.B.IFM           = IfxHssl_InterfaceMode_slave;                    /* slave mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   211          hsctSFR->INIT.B.SYS_CLK_EN    = 0;                                              /* disabling the system clock */
	ld.bu	d15,[a13]16
.L489:
	or	d15,#8
	fcall	.cocofun_4
.L490:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   212          hsctSFR->INIT.B.SRCF          = IfxHssl_ClockFrequencyRate_20Mhz;               /* Reference Clock Frequency rate 20 MHz */
	insert	d15,d15,#0,#1,#1
	fcall	.cocofun_1
.L491:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   213          hsctSFR->CONFIGPHY.B.OSCCLKEN = IfxHssl_PllReferenceClock_hsctSystemClockInput; /* PLL reference clock is hsct system clock input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   214          hsctSFR->CONFIGPHY.B.PHYRST   = 0;                                              /* disable PHY reset */
	insert	d15,d15,#0,#4,#1
	fcall	.cocofun_2
.L377:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   215          hsctSFR->CONFIGPHY.B.PLLWMF   = 16;                                             /* PLL frequency control word multiplication factor */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   216      }
	fcall	.cocofun_3
.L381:
	j	.L16
.L15:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   217  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   218      /* master interface initialisation */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   219      else                                                                           /* master mode initialisation */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   220      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   221          hsctSFR->INIT.B.IFM           = IfxHssl_InterfaceMode_master;              /* master mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   222          hsctSFR->INIT.B.SYS_CLK_EN    = 1;                                         /* enabling the system clock */
	ld.bu	d15,[a13]16
.L492:
	insert	d15,d15,#0,#3,#1
	fcall	.cocofun_4
.L493:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   223          hsctSFR->INIT.B.SRCF          = IfxHssl_ClockFrequencyRate_20Mhz;          /* Reference Clock Frequency rate 20 MHz */
	or	d15,#2
	fcall	.cocofun_1
.L494:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   224          hsctSFR->CONFIGPHY.B.OSCCLKEN = IfxHssl_PllReferenceClock_oscillatorInput; /* PLL reference clock is Oscillator input */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   225          hsctSFR->CONFIGPHY.B.PHYRST   = 0;                                         /* disable PHY reset */
	or	d15,#16
	fcall	.cocofun_2
.L495:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   226          hsctSFR->CONFIGPHY.B.PLLPON   = 1;                                         /* PLL power on */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   227          hsctSFR->CONFIGPHY.B.PLLWMF   = 16;                                        /* PLL frequency control word multiplication factor */
	ld.bu	d15,[a13]48
.L496:
	or	d15,#2
	st.b	[a13]48,d15
.L382:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   228          hsctSFR->IFCTRL.B.MTXSPEED    = IfxHssl_MasterModeTxSpeed_lowSpeed;        /* Tx low speed */
	fcall	.cocofun_3
.L383:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   229          hsctSFR->IFCTRL.B.MRXSPEED    = IfxHssl_MasterModeRxSpeed_lowSpeed;        /* Rx low speed */
	ld.bu	d15,[a13]22
.L497:
	insert	d15,d15,#0,#2,#2
	st.b	[a13]22,d15
.L498:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   230  
	ld.bu	d15,[a13]22
.L499:
	insert	d15,d15,#0,#0,#2
	st.b	[a13]22,d15
.L500:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   231          /* change from low speed to high speed */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   232          if (config->highSpeedMode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   233          {
	ld.bu	d15,[a15]5
.L501:
	jeq	d15,#0,.L17
.L502:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   234              hsctSFR->IFCTRL.B.MTXSPEED = IfxHssl_MasterModeTxSpeed_highSpeed;      /* Tx high speed */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   235              hsctSFR->IFCTRL.B.MRXSPEED = IfxHssl_MasterModeRxSpeed_highSpeed;      /* Rx high speed */
	ld.bu	d15,[a13]22
.L503:
	insert	d15,d15,#2,#2,#2
	st.b	[a13]22,d15
.L504:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   236          }
	ld.bu	d15,[a13]22
.L505:
	insert	d15,d15,#2,#0,#2
	st.b	[a13]22,d15
.L17:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   237  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   238          while (hsctSFR->STATPHY.B.PLOCK == 0)                                      /* wait until pll is locked */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   239          {}
.L18:
	ld.bu	d15,[a13]52
.L506:
	jz.t	d15:0,.L18
.L16:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   240      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   241  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   242      hsctSFR->DISABLE.U = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   243  }
	mov	d15,#0
	st.w	[a13]32,d15
.L507:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   244  
	ret
.L224:
	
__IfxHssl_Hssl_initHsctModule_function_end:
	.size	IfxHssl_Hssl_initHsctModule,__IfxHssl_Hssl_initHsctModule_function_end-IfxHssl_Hssl_initHsctModule
.L128:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl..cocofun_4',code,cluster('.cocofun_4')
	.sect	'.text.IfxHssl_Hssl..cocofun_4'
	.align	2
; Function .cocofun_4
.L93:
.cocofun_4:	.type	func
; Function body .cocofun_4, coco_iter:1
	st.b	[a13]16,d15
.L769:
	ld.bu	d15,[a13]16
.L770:
	fret
.L223:
	; End of function
	.sdecl	'.text.IfxHssl_Hssl..cocofun_3',code,cluster('.cocofun_3')
	.sect	'.text.IfxHssl_Hssl..cocofun_3'
	.align	2
; Function .cocofun_3
.L95:
.cocofun_3:	.type	func
; Function body .cocofun_3, coco_iter:0
	ld.bu	d0,[a13]49
.L763:
	mov	d15,#16
.L764:
	insert	d15,d0,d15,#0,#6
	st.b	[a13]49,d15
.L380:
	fret
.L218:
	; End of function
	.sdecl	'.text.IfxHssl_Hssl..cocofun_2',code,cluster('.cocofun_2')
	.sect	'.text.IfxHssl_Hssl..cocofun_2'
	.align	2
; Function .cocofun_2
.L97:
.cocofun_2:	.type	func
; Function body .cocofun_2, coco_iter:0
	st.b	[a13]51,d15
.L757:
	ld.bu	d15,[a13]49
.L758:
	insert	d15,d15,#0,#7,#1
	st.b	[a13]49,d15
.L379:
	fret
.L213:
	; End of function
	.sdecl	'.text.IfxHssl_Hssl..cocofun_1',code,cluster('.cocofun_1')
	.sect	'.text.IfxHssl_Hssl..cocofun_1'
	.align	2
; Function .cocofun_1
.L99:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0
	fcall	.cocofun_4
.L375:
	insert	d15,d15,#0,#2,#1
	st.b	[a13]16,d15
.L751:
	ld.bu	d15,[a13]51
.L752:
	fret
.L208:
	; End of function
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initHsctModuleConfig',code,cluster('IfxHssl_Hssl_initHsctModuleConfig')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initHsctModuleConfig'
	.align	2
	
	.global	IfxHssl_Hssl_initHsctModuleConfig

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   245  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   246  void IfxHssl_Hssl_initHsctModuleConfig(IfxHssl_Hsct_Config *config, Ifx_HSCT *hsct)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   247  {
; Function IfxHssl_Hssl_initHsctModuleConfig
.L101:
IfxHssl_Hssl_initHsctModuleConfig:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   248      config->hsct = hsct;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   249  
	st.a	[a4],a5
.L512:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   250      /* interface mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   251      config->interfaceMode = IfxHssl_InterfaceMode_master;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   252  
	mov	d15,#0
	st.b	[a4]4,d15
.L513:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   253      /* high speed mode disabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   254      config->highSpeedMode = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   255  
	st.b	[a4]5,d15
.L514:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   256      config->loopBack      = FALSE; /* default with out loopback */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   257  }
	st.b	[a4]6,d15
.L515:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   258  
	ret
.L266:
	
__IfxHssl_Hssl_initHsctModuleConfig_function_end:
	.size	IfxHssl_Hssl_initHsctModuleConfig,__IfxHssl_Hssl_initHsctModuleConfig_function_end-IfxHssl_Hssl_initHsctModuleConfig
.L133:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initHsslModule',code,cluster('IfxHssl_Hssl_initHsslModule')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initHsslModule'
	.align	2
	
	.global	IfxHssl_Hssl_initHsslModule

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   259  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   260  void IfxHssl_Hssl_initHsslModule(IfxHssl_Hssl *hssl, const IfxHssl_Hssl_Config *config)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   261  {
; Function IfxHssl_Hssl_initHsslModule
.L103:
IfxHssl_Hssl_initHsslModule:	.type	func
	mov.aa	a15,a5
.L386:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   262      Ifx_HSSL *hsslSFR = config->hssl;                           /* pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   263  
	ld.a	a12,[a15]
.L387:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   264      hssl->hssl = hsslSFR;                                       /* adding HSSL register pointer to module handle */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   265  
	st.a	[a4],a12
.L520:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   266      /* HSSL initialisation */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   267      IfxHssl_enableHsslModule(hsslSFR);                          /* enabling the HSSL module */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   268      hsslSFR->CFG.B.PREDIV = config->preDivider;                 /* predivivder */
	mov.aa	a4,a12
.L385:
	call	IfxHssl_enableHsslModule
.L384:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   269      hsslSFR->CFG.B.SCM    = 0;                                  /* command mode */
	ld.hu	d15,[a12]16
.L521:
	ld.hu	d0,[a15]36
.L522:
	insert	d15,d15,d0,#0,#14
	st.h	[a12]16,d15
.L523:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   270  
	ld.bu	d15,[a12]18
.L524:
	insert	d15,d15,#0,#2,#1
	st.b	[a12]18,d15
.L525:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   271      /* Access windows */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   272      hsslSFR->AW[0].AWSTART.U = config->accessWindow0.start;     /* start of access window */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   273      hsslSFR->AW[0].AWEND.U   = config->accessWindow0.end;       /* end of access window */
	ld.w	d15,[a15]4
.L526:
	st.w	[a12]192,d15
.L527:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   274      hsslSFR->AW[1].AWSTART.U = config->accessWindow1.start;     /* start of access window */
	ld.w	d15,[a15]8
.L528:
	st.w	[a12]196,d15
.L529:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   275      hsslSFR->AW[1].AWEND.U   = config->accessWindow1.end;       /* end of access window */
	ld.w	d15,[a15]12
.L530:
	st.w	[a12]200,d15
.L531:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   276      hsslSFR->AW[2].AWSTART.U = config->accessWindow2.start;     /* start of access window */
	ld.w	d15,[a15]16
.L532:
	st.w	[a12]204,d15
.L533:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   277      hsslSFR->AW[2].AWEND.U   = config->accessWindow2.end;       /* end of access window */
	ld.w	d15,[a15]20
.L534:
	st.w	[a12]208,d15
.L535:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   278      hsslSFR->AW[3].AWSTART.U = config->accessWindow3.start;     /* start of access window */
	ld.w	d15,[a15]24
.L536:
	st.w	[a12]212,d15
.L537:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   279      hsslSFR->AW[3].AWEND.U   = config->accessWindow3.end;       /* end of access window */
	ld.w	d15,[a15]28
.L538:
	st.w	[a12]216,d15
.L539:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   280  
	ld.w	d15,[a15]32
.L540:
	st.w	[a12]220,d15
.L541:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   281      hsslSFR->AR.U            = 0x000000ff;                      /* allow read/write access for all windows */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   282  
	mov	d15,#255
.L542:
	st.w	[a12]224,d15
.L543:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   283      hsslSFR->MFLAGSCL.B.INIC = 1;                               /* chnage into run mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   284      hsslSFR->TIDADD.U        = (uint32)IFXHSSL_JTAG_ID_ADDRESS; /* Writing JTAG_ID of the device to TIDADD.This'll be used in the response when the other device queries for ID */
	ld.bu	d15,[a12]35
.L544:
	or	d15,#128
	st.b	[a12]35,d15
.L545:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   285  
	mov	d15,#1124
.L546:
	addih	d15,d15,#61440
	st.w	[a12]148,d15

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   286      while (hsslSFR->MFLAGS.B.INI)                               /* wait until the mode changes */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   287      {}
.L19:
	ld.bu	d15,[a12]27
.L547:
	jnz.t	d15:7,.L19
.L548:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   288  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   289  
	ret
.L270:
	
__IfxHssl_Hssl_initHsslModule_function_end:
	.size	IfxHssl_Hssl_initHsslModule,__IfxHssl_Hssl_initHsslModule_function_end-IfxHssl_Hssl_initHsslModule
.L138:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initHsslModuleConfig',code,cluster('IfxHssl_Hssl_initHsslModuleConfig')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_initHsslModuleConfig'
	.align	2
	
	.global	IfxHssl_Hssl_initHsslModuleConfig

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   290  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   291  void IfxHssl_Hssl_initHsslModuleConfig(IfxHssl_Hssl_Config *config, Ifx_HSSL *hssl)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   292  {
; Function IfxHssl_Hssl_initHsslModuleConfig
.L105:
IfxHssl_Hssl_initHsslModuleConfig:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   293      config->hssl = hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   294  
	st.a	[a4],a5
.L553:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   295      /* Access windows */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   296      config->accessWindow0.start = 0x00000000; /* start of access window */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   297      config->accessWindow0.end   = 0xffffffff; /* end of access window */
	mov	d15,#0
	st.w	[a4]4,d15
.L554:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   298      config->accessWindow1.start = 0x00000000; /* start of access window */
	mov	d0,#-1
	lea	a15,[a4]8
	st.w	[a15+],d0
.L555:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   299      config->accessWindow1.end   = 0xffffffff; /* end of access window */
	st.w	[a15+],d15
.L556:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   300      config->accessWindow2.start = 0x00000000; /* start of access window */
	st.w	[a15+],d0
.L557:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   301      config->accessWindow2.end   = 0xffffffff; /* end of access window */
	st.w	[a15+],d15
.L558:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   302      config->accessWindow3.start = 0x00000000; /* start of access window */
	st.w	[a15+],d0
.L559:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   303      config->accessWindow3.end   = 0xffffffff; /* end of access window */
	st.w	[a15+],d15
.L560:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   304  
	st.w	[a15+],d0
.L561:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   305      /* predivider */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   306      config->preDivider = 256;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   307  }
	mov	d15,#256
	st.h	[a4]36,d15
.L562:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   308  
	ret
.L277:
	
__IfxHssl_Hssl_initHsslModuleConfig_function_end:
	.size	IfxHssl_Hssl_initHsslModuleConfig,__IfxHssl_Hssl_initHsslModuleConfig_function_end-IfxHssl_Hssl_initHsslModuleConfig
.L143:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_prepareStream',code,cluster('IfxHssl_Hssl_prepareStream')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_prepareStream'
	.align	2
	
	.global	IfxHssl_Hssl_prepareStream

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   309  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   310  IfxHssl_Hssl_Status IfxHssl_Hssl_prepareStream(IfxHssl_Hssl_Channel *channel, uint32 slaveTargetAddress, Ifx_SizeT count)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   311  {
; Function IfxHssl_Hssl_prepareStream
.L107:
IfxHssl_Hssl_prepareStream:	.type	func
	mov.aa	a15,a4
.L390:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   312      IfxHssl_ChannelId channelId = channel->channelId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   313      Ifx_HSSL_TS_FC    tsfcReg;
	mov	d6,d4
	ld.bu	d15,[a15]8
.L391:
	mov	d8,d5
.L392:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   314  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   315      if (channelId == IfxHssl_ChannelId_2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   316      {
	jeq	d15,#2,.L20
.L706:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   317          return IfxHssl_Hssl_Status_error;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   318      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   319  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   320      /* target start address to memeroy block 0 on target device (writing into HSSL_TSSA0 of the target) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   321      IfxHssl_Hssl_singleFrameRequest(channel, IfxHssl_Hssl_FrameRequest_writeFrame, (uint32)&channel->hssl->TS.SA[0], slaveTargetAddress, IfxHssl_DataLength_32bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   322  
	mov	d4,#2
	ld.w	d15,[a15]
.L389:
	mov	d7,d4
.L707:
	add	d5,d15,#176
	call	IfxHssl_Hssl_singleFrameRequest
.L388:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   323      while (IfxHssl_Hssl_waitAcknowledge(channel) != IfxHssl_Hssl_Status_ok)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   324      {
	j	.L21
.L22:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   325          if (IfxHssl_Hssl_waitAcknowledge(channel) == IfxHssl_Hssl_Status_error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   326          {
	mov.aa	a4,a15
.L393:
	call	IfxHssl_Hssl_waitAcknowledge
.L394:
	jeq	d2,#2,.L23
.L21:
	mov.aa	a4,a15
.L395:
	call	IfxHssl_Hssl_waitAcknowledge
.L396:
	jne	d2,#0,.L22
.L708:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   327              return IfxHssl_Hssl_Status_error;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   328          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   329      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   330  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   331      /* Precautionary measure on target for any last streaming interruption */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   332      /* Read count register on the target */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   333      IfxHssl_Hssl_read(channel, (uint32)&channel->hssl->TS.FC, IfxHssl_DataLength_32bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   334  
	ld.w	d15,[a15]
.L709:
	mov	d5,#2
	mov.aa	a4,a15
.L397:
	add	d4,d15,#188
	call	IfxHssl_Hssl_read
.L398:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   335      while (IfxHssl_Hssl_waitAcknowledge(channel) != IfxHssl_Hssl_Status_ok)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   336      {
	j	.L24
.L25:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   337          if (IfxHssl_Hssl_waitAcknowledge(channel) == IfxHssl_Hssl_Status_error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   338          {
	mov.aa	a4,a15
.L399:
	call	IfxHssl_Hssl_waitAcknowledge
.L400:
	jeq	d2,#2,.L26
.L24:
	mov.aa	a4,a15
.L401:
	call	IfxHssl_Hssl_waitAcknowledge
.L402:
	jne	d2,#0,.L25
.L344:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     2   * \file IfxHssl_Hssl.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     3   * \brief HSSL HSSL details
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     4   * \ingroup IfxLld_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    45   * \defgroup IfxLld_Hssl_Hssl_Usage How to use the HSSL Interface driver?
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    46   * \ingroup IfxLld_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    47   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    48   * The HSSL interface driver provides a default HSSL/HSCT configuration for point to point communication at two transfer speeds, 5MBaud (low speed) and 320MBaud (high speed).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    49   * It also supports streaming transfers of data a memory block at both low and high speeds.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    50   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    51   * In the following sections it will be described, how to integrate the driver into the application framework.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    52   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    53   * \section IfxLld_Hssl_Hssl_Preparation Preparation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    54   * \subsection IfxLld_Hssl_Hssl_Include Include Files
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    55   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    56   * Include following header file into your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    57   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    58   *     #include <Hssl/Hssl/IfxHssl_Hssl.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    59   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    60   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    61   * \subsection IfxLld_Hssl_Hssl_Variables Variables
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    62   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    63   * Declare the HSSL handle, HSCT handle and channel array as global variables in your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    64   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    65   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    66   *     // used globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    67   *     static IfxHssl_Hssl hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    68   *     static IfxHssl_Hsct hsct;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    69   *     IfxHssl_Hssl_Channel hsslChannel[4];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    70   *     __attribute__ ((aligned(256))) uint32 txData[80]; // needs to be declared globally in case of streaming transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    71   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    72   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    73   * \subsection IfxLld_Hssl_Hssl_InitModule Module Initialisation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    74   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    75   * The module initialisation can be done as follows:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    76   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    77   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    78   *     // create module config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    79   *     IfxHssl_Hsct_Config hsctConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    80   *     IfxHssl_Hssl_initHsctModuleConfig(&hsctConfig, &MODULE_HSCT);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    81   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    82   *     // select the interface mode (in case of slave)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    83   *     hsctConfig.interfaceMode = IfxHssl_InterfaceMode_slave;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    84   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    85   *     // select the high speed mode if required
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    86   *     hsctConfig.highSpeedMode = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    87   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    88   *     // initialize module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    89   *     // IfxHssl_Hsct hsct;  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    90   *     IfxHssl_Hssl_initHsctModule(&hsct, &hsctConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    91   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    92   *     // create module config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    93   *     IfxHssl_Hssl_Config hsslConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    94   *     IfxHssl_Hssl_initHsslModuleConfig(&hsslConfig, &MODULE_HSSL);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    95   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    96   *     // IfxHssl_Hssl hssl;  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    97   *     IfxHssl_Hssl_initHsslModule(&hssl, &hsslConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    98   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    99   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   100   * If application intends to explicitly configure the pins for HSCT module IFXHSSL_HSCT_DISABLE_PINCONFIG macro should be defined in the application.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   101   * The explicit pin assignment should be done prior to IfxHssl_Hssl_initHsctModule().
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   102   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   103   * \subsection IfxLld_Hssl_Hssl_InitChannel Channel Initialisation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   104   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   105   * The Channel initialisation can be done as follows:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   106   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   107   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   108   *     // create HSSL channel config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   109   *     IfxHssl_Hssl_ChannelConfig hsslChannelConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   110   *     IfxHssl_Hssl_initChannelConfig(&hsslChannelConfig, &hssl, &hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   111   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   112   *     // initialize the channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   113   *     // IfxHssl_Hssl_Channel hsslChannel[4];  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   114   *     for(int i=0; i<4; ++i)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   115   *     {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   116   *         hsslChannelConfig.channelId = (IfxHssl_ChannelId)i;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   117   *         IfxHssl_Hssl_initChannel(&hsslChannel[i], &hsslChannelConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   118   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   119   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   120   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   121   * \subsection IfxLld_Hssl_Hssl_LinkSpeed Changing HSCT link speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   122   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   123   * The link speed change can be done as follows
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   124   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   125   * As per the above settings the HSCT master is in High speed reception and transmission.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   126   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   127   * The pseudo code for setting the target to High speed is as below
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   128   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   129   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   130   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   131   *      // Set the Tx link speed of the master to Low speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   132   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_lowSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   133   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   134   *      // Enable reception at the Slave
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   135   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_enableReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   136   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   137   *      // Send interface commmand to change Rx to High speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   138   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_highSpeedReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   139   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   140   *      // Send interface commmand to change Tx to High speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   141   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_highSpeedTransmission);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   142   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   143   *      // Set the Tx link speed of the master to High speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   144   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_highSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   145   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   146   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   147   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   148   * The pseudo code for setitng the target to Low speed from High speed (ie. if hsctConfig.highSpeedMode is set to TRUE).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   149   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   150   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   151   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   152   *      // Set the Tx link speed of master to Low speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   153   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_lowSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   154   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   155   *      // Send interface command to change Rx to low speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   156   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_lowSpeedReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   157   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   158   *      // Set the Rx link speed of master to Low speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   159   *      IfxHssl_setHsctRxLinkSpeed(&hsct, IfxHssl_MasterModeRxSpeed_lowSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   160   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   161   *      // Send interface command to change Tx to low speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   162   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_lowSpeedTransmission);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   163   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   164   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   165   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   166   * The HSSL is ready for use now!
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   167   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   168   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   169   * \section IfxLld_Hssl_Hssl_DataTransfers Data Transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   170   * \subsection IfxLld_Hssl_Hssl_SimpleTransfers Simple Transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   171   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   172   * The HSSL driver provides simple to use data transfer functions,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   173   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   174   * It supports direct writing of 8/16/32 bit data from the initiator into a target's register, as well as reading a value from the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   175   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   176   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   177   *     // write some data to remote location:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   178   *     IfxHssl_Hssl_write(&hsslChannel[0], 0x70000000, 0x12345678, IfxHssl_DataLength_32bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   179   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   180   *     // wait for the acknowledgement
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   181   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) != IfxHssl_Hssl_Status_ok )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   182   *     {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   183   *         if( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) == IfxHssl_Hssl_Status_error )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   184   *           {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   185   *               IfxHssl_Hssl_checkErrors(&hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   186   *               break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   187   *           }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   188   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   189   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   190   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   191   * A simple to use receive function is available as well.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   192   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   193   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   194   *     // read some data from remote location:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   195   *     IfxHssl_Hssl_read(&hsslChannel[0], 0x70000000, IfxHssl_DataLength_32bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   196   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   197   *     // wait for the acknowledgement
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   198   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) != IfxHssl_Hssl_Status_ok )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   199   *     {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   200   *         if( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) == IfxHssl_Hssl_Status_error )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   201   *           {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   202   *               IfxHssl_Hssl_checkErrors(&hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   203   *               break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   204   *           }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   205   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   206   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   207   *     // read data from the register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   208   *     uint32 dataL = IfxHssl_Hssl_getReadData(&hsslChannel[0]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   209   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   210   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   211   * \subsection IfxLld_Hssl_Hssl_StreamingTransfers Streaming Transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   212   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   213   * HSSL driver also supports streaming transfers of data as a memory block at both low and high speeds.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   214   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   215   * Preparing the target for streaming with the desired memory location where the data needs to be transfered
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   216   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   217   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   218   *     // choose a channel other than channel2 for register access
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   219   *     // prepare streaming of single memory block
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   220   *     IfxHssl_Hssl_prepareStream(&hsslChannel[0], 0x70000000, 10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   221   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   222   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   223   * Stream the memory block
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   224   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   225   * Usage Example:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   226   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   227   *     // __attribute__ ((aligned(256))) uint32 txData[80];  expected to be declared globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   228   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   229   *     // for single block streaming transfer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   230   *     // change the txData address to global address before passing it to the API
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   231   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   232   *     // IfxHssl_Hssl_writeStream(&hssl, (uint32 *)IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), (uint32)txData),  10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   233   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   234   *     IfxHssl_Hssl_writeStream(&hssl, txData, 10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   235   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   236   *     // wait until the streaming is finished
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   237   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[2]) != IfxHssl_Hssl_Status_ok )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   238   *     {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   239   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   240   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   241   * \subsection IfxLld_Hssl_Hssl_DMAOperatedCommandQueues DMA Operated Command Queues
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   242   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   243   * It makes sense to do this from outside the driver, by initialising the DMA after HSSL, and send command queues through linked lists
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   244   * here is an example of how to use DMA operated command queues.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   245   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   246   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   247   * Include following header files into your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   248   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   249   *     #include <Hssl/Hssl/IfxHssl_Hssl.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   250   *     #include <Dma/Dma/IfxDma_Dma.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   251   *     #include <Scu/Std/IfxScuWdt.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   252   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   253   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   254   * Declare the HSSL handle, HSCT handle, HSSL channel handle and DMA channel handle as global variables in your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   255   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   256   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   257   *     // used globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   258   *     static IfxHssl_Hssl hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   259   *     static IfxHssl_Hsct hsct;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   260   *     IfxHssl_Hssl_Channel hsslChannel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   261   *     // DMA channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   262   *     IfxDma_Dma_Channel chn;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   263   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   264   *     // Linked List storage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   265   *     // IMPORTANT: it has to be aligned to an 64bit address, otherwise DMA can't read it
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   266   *     #define NUM_LINKED_LIST_ITEMS 3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   267   *     __attribute__ ((aligned(64))) Ifx_DMA_CH linkedList[NUM_LINKED_LIST_ITEMS] ;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   268   *     // transfer these values to channel 0 : HSSL_IWD0, HSSL_ICON0, HSSL_IRWA0 registers via linked lists
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   269   *     #define NUM_TRANSFERED_WORDS 3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   270   *     // three write command queues with different data and to different addresses on slave
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   271   *     uint32 sourceBuffer[NUM_LINKED_LIST_ITEMS][NUM_TRANSFERED_WORDS] = {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   272   *         {0xC0CAC01A, 0xFF0A0000, 0x70000000},
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   273   *         {0xBA5EBA11, 0xFF0A0000, 0x70000010},
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   274   *         {0xDEADBEEF, 0xFF0A0000, 0x70000020}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   275   *     };
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   276   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   277   *     // three command queues to the same channel 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   278   *     const uint32 destinationAddresses[NUM_LINKED_LIST_ITEMS] = {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   279   *         (uint32)&HSSL_I0_IWD,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   280   *         (uint32)&HSSL_I0_IWD,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   281   *         (uint32)&HSSL_I0_IWD
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   282   *     };
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   283   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   284   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   285   * Initialise the hssl module, see \ref IfxLld_Hssl_Hssl_InitModule
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   286   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   287   * Initialise the hssl channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   288   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   289   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   290   *     // create HSSL channel config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   291   *     IfxHssl_Hssl_ChannelConfig hsslChannelConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   292   *     IfxHssl_Hssl_initChannelConfig(&hsslChannelConfig, &hssl, &hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   293   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   294   *     // initialize the channel 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   295   *     // IfxHssl_Hssl_Channel hsslChannel;  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   296   *     hsslChannelConfig.channelId = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   297   *     IfxHssl_Hssl_initChannel(&hsslChannel, &hsslChannelConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   298   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   299   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   300   * Build a linked list
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   301   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   302   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   303   *     // create module config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   304   *     IfxDma_Dma_Config dmaConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   305   *     IfxDma_Dma_initModuleConfig(&dmaConfig, &MODULE_DMA);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   306   *     // initialize module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   307   *     IfxDma_Dma dma;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   308   *     IfxDma_Dma_initModule(&dma, &dmaConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   309   *     // initial channel configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   310   *     IfxDma_Dma_ChannelConfig cfg;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   311   *     IfxDma_Dma_initChannelConfig(&cfg, &dma);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   312   *     // following settings are used by all transactions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   313   *     cfg.transferCount = NUM_TRANSFERED_WORDS;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   314   *     cfg.requestMode = IfxDma_ChannelRequestMode_completeTransactionPerRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   315   *     cfg.moveSize = IfxDma_ChannelMoveSize_32bit;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   316   *     cfg.shadowControl = IfxDma_ChannelShadow_linkedList;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   317   *     // generate linked list items
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   318   *     for(int i=0; i<NUM_LINKED_LIST_ITEMS; ++i) {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   319   *         cfg.sourceAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   320   *         cfg.destinationAddress = destinationAddresses[i];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   321   *         // address to next transaction set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   322   *         cfg.shadowAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), (uint32)&linkedList[(i + 1) % NUM_LINKED_LIST_ITEMS]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   323   *         // transfer first transaction set into DMA channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   324   *         if( i == 0 ) {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   325   *             IfxDma_Dma_initChannel(&chn, &cfg);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   326   *         }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   327   *         // transfer into linked list storage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   328   *         IfxDma_Dma_initLinkedListEntry((void *)&linkedList[i], &cfg);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   329   *         if( i == 0 ) {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   330   *             // - trigger channel interrupt once the first transaction set has been loaded (again) into DMA channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   331   *             linkedList[i].CHCSR.B.SIT = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   332   *         } else {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   333   *          // - activate SCH (transaction request) for each entry, expect for the first one (linked list terminated here)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   334   *             linkedList[i].CHCSR.B.SCH = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   335   *         }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   336   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   337   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   338   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   339   * The transfer can be started via software with:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   340   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   341   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   342   *     // clear service request flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   343   *     (IfxDma_Dma_getSrcPointer(&chn))->B.CLRR = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   344   *     // start linked list transaction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   345   *     IfxDma_Dma_startChannelTransaction(&chn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   346   *     // wait for service request which is triggered at the end of linked list transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   347   *     while( !(IfxDma_Dma_getSrcPointer(&chn))->B.SRR );
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   348   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   349   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   350   * \subsection IfxLld_Hssl_Hssl_Interrupts Interrupts usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   351   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   352   * Interrupts can be enabled from the application by using the APIs provided in the driver,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   353   * there are APIs available in the driver to enable, disable, clear and read the status of interrupt falgs, along with these,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   354   * APIs to enable the the enterrupts are also available.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   355   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   356   * here is an example of how to use the interrupts in HSSL driver.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   357   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   358   * Using HSCT interrupts
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   359   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   360   * After initialising HSCT module \ref IfxLld_Hssl_Hssl_InitModule
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   361   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   362   * choose what flags needs to be enabled for HSCT interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   363   * and after choosing all the flags needed, enable the HSCT interrupt with desired type of service and priority.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   364   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   365   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   366   *     Ifx_HSCT *hsct = &MODULE_HSCT;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   367   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_headerError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   368   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_payloadError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   369   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_commandError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   370   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_speedModeSwitchError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   371   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   372   *     // enable the HSCT interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   373   *     IfxHssl_enableHsctInterrupt(hsct, IfxSrc_Tos_cpu0, 4);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   374   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   375   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   376   * Using HSSl interrupts
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   377   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   378   * HSSL global error interrupt (EXI)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   379   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   380   * After initilaising HSSL module \ref IfxLld_Hssl_Hssl_InitModule
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   381   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   382   * choose what flags needs to be enabled for HSSL global error (EXI) interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   383   * and after choosing all the flags needed, enable the HSSL EXI interrupt with desired type of service and priority
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   384   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   385   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   386   *     Ifx_HSSL *hssl = &MODULE_HSSL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   387   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_busAccessError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   388   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_dataLengthError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   389   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_crcError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   390   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   391   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   392   *     // enable the HSSL EXI interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   393   *     IfxHssl_enableHsslEXIInterrupt(hssl, IfxSrc_Tos_cpu0, 6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   394   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   395   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   396   * HSSL channel specific error interrupt (ERR)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   397   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   398   * After initilaising HSSL channel \ref IfxLld_Hssl_Hssl_InitChannel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   399   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   400   * choose what flags needs to be enabled for HSSL channel specific error (ERR) interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   401   * and after choosing all the flags needed, enable the HSSL ERR interrupt with desired channel, type of service and priority
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   402   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   403   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   404   *     Ifx_HSSL *hssl = &MODULE_HSSL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   405   *     IfxHssl_enableHsslChannelErrorInterruptFlag(hssl, channelId_0, IfxHssl_Hssl_ERRInterruptSource_transactionTagError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   406   *     IfxHssl_enableHsslChannelErrorInterruptFlag(hssl, channelId_0, IfxHssl_Hssl_ERRInterruptSource_timeoutError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   407   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   408   *     // enable the HSSL ERR interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   409   *     IfxHssl_enableHsslERRInterrupt(hssl, channelId_0, IfxSrc_Tos_cpu0, 8);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   410   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   411   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   412   * you can define the ISR of your own and service the interrupt, please refer to more general usage of interrupts \ref IfxLld_Cpu_Irq_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   413   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   414   * some additional APIs to clear, disable interrupt flags and get flag status are also available.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   415   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   416   * \defgroup IfxLld_Hssl_Hssl HSSL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   417   * \ingroup IfxLld_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   418   * \defgroup IfxLld_Hssl_Hssl_DataStructures Data Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   419   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   420   * \defgroup IfxLld_Hssl_Hssl_Enumerations Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   421   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   422   * \defgroup IfxLld_Hssl_Hssl_ModuleFunctions Module Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   423   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   424   * \defgroup IfxLld_Hssl_Hssl_ChannelFunctions Channel Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   425   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   426   * \defgroup IfxLld_Hssl_Hssl_SimpleCom Simple Communication
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   427   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   428   * \defgroup IfxLld_Hssl_Hssl_ErrorHandling Error Handling
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   429   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   430   * \defgroup IfxLld_Hssl_Hssl_StreamingCom Streaming Communication
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   431   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   432   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   434  #ifndef IFXHSSL_HSSL_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   435  #define IFXHSSL_HSSL_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   436  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   437  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   438  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   439  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   440  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   441  #include "Hssl/Std/IfxHssl.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   442  #include "Port/Std/IfxPort.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   443  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   444  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   445  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   446  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   447  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   448  /** \addtogroup IfxLld_Hssl_Hssl_Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   449   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   450  /** \brief frame request selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   451   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   452  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   453  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   454      IfxHssl_Hssl_FrameRequest_readFrame    = 1,  /**< \brief read frame rquest */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   455      IfxHssl_Hssl_FrameRequest_writeFrame   = 2,  /**< \brief write frame rquest */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   456      IfxHssl_Hssl_FrameRequest_triggerFrame = 3,  /**< \brief trigger frame rquest */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   457      IfxHssl_Hssl_FrameRequest_readId       = 4,  /**< \brief read id request */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   458      IfxHssl_Hssl_FrameRequest_noAction     = 5   /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   459  } IfxHssl_Hssl_FrameRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   461  /** \brief module status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   462   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   463  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   464  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   465      IfxHssl_Hssl_Status_ok    = 0, /**< \brief status ok */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   466      IfxHssl_Hssl_Status_busy  = 1, /**< \brief status busy */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   467      IfxHssl_Hssl_Status_error = 2  /**< \brief status error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   468  } IfxHssl_Hssl_Status;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   469  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   470  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   471  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   472  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   473  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   474  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   475  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   476  /** \addtogroup IfxLld_Hssl_Hssl_DataStructures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   477   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   478  /** \brief structure for access windows
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   479   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   480  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   481  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   482      uint32 start;       /**< \brief start of the access */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   483      uint32 end;         /**< \brief end of the access */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   484  } IfxHssl_Hssl_AccessWindow;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   485  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   486  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   487  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   488  /** \brief structure for error flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   489   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   490  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   491  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   492      uint8 notAcknowledgeError : 1;        /**< \brief not acknowledge error / tag error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   493      uint8 transactionTagError : 1;        /**< \brief transaction tag error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   494      uint8 timeoutError : 1;               /**< \brief timeout error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   495      uint8 unexpectedError : 1;            /**< \brief unexpected type of frame error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   496      uint8 memoryAccessViolation : 1;      /**< \brief memory access violation */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   497      uint8 busAccessError : 1;             /**< \brief SRI/SPB bus access error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   498      uint8 channelNumberCodeError : 1;     /**< \brief PHY inconsistency error 1 (channel number code error) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   499      uint8 dataLengthError : 1;            /**< \brief PHY inconsistency error 2 (data length error) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   500      uint8 crcError : 1;                   /**< \brief CRC error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   501  } IfxHssl_Hssl_errorFlags;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   503  /** \addtogroup IfxLld_Hssl_Hssl_DataStructures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   504   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   505  /** \brief HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   506   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   507  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   508  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   509      Ifx_HSSL               *hssl;             /**< \brief pointer to HSSL register */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   510      IfxHssl_Hssl_errorFlags errorFlags;       /**< \brief structure for error flags */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   511      boolean                 loopBack;         /**< \brief loop back (enable / disable) for streaming transfers within the microcontroller */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   512  } IfxHssl_Hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   513  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   514  /** \brief channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   515   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   516  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   517  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   518      Ifx_HSSL                 *hssl;                      /**< \brief pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   519      Ifx_HSCT                 *hsct;                      /**< \brief pointer to HSCT registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   520      IfxHssl_ChannelId         channelId;                 /**< \brief channel number (id) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   521      IfxHssl_Hssl_FrameRequest currentFrameRequest;       /**< \brief current frame request */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   522      IfxHssl_StreamingMode     streamingMode;             /**< \brief streaming mode selection ( single / continuous ) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   523      boolean                   loopBack;                  /**< \brief loopback (enable / disable) for streaming transfers within the microcontroller */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   524      boolean                   streamingModeOn;           /**< \brief streaming mode or command mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   525  } IfxHssl_Hssl_Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   526  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   527  /** \brief configuration structure for channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   528   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   529  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   530  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   531      Ifx_HSSL             *hssl;                /**< \brief pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   532      Ifx_HSCT             *hsct;                /**< \brief pointer to HSCT registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   533      IfxHssl_ChannelId     channelId;           /**< \brief channel number (id) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   534      IfxHssl_StreamingMode streamingMode;       /**< \brief streaming mode selection ( single / continuous ) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   535      boolean               loopBack;            /**< \brief loop back (enable / disable) for streaming transfers within the microcontroller */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   536  } IfxHssl_Hssl_ChannelConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   537  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   538  /** \brief configuration structure of the HSSL module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   539   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   540  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   541  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   542      Ifx_HSSL                 *hssl;                /**< \brief pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   543      IfxHssl_Hssl_AccessWindow accessWindow0;       /**< \brief access window of channel 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   544      IfxHssl_Hssl_AccessWindow accessWindow1;       /**< \brief access window of channel 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   545      IfxHssl_Hssl_AccessWindow accessWindow2;       /**< \brief access window of channel 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   546      IfxHssl_Hssl_AccessWindow accessWindow3;       /**< \brief access window of channel 3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   547      uint16                    preDivider;          /**< \brief Defines the down-scaled module clock to be used by all channel timeout timers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   548  } IfxHssl_Hssl_Config;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   550  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   551  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   552  /** \addtogroup IfxLld_Hssl_Hssl_ModuleFunctions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   553   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   554  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   555  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   556  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   557  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   558  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   559  /** \brief Initialises the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   560   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   561   * \param config configuration structure of the HSCT module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   562   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   563   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   564   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   565   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   566   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   567  IFX_EXTERN void IfxHssl_Hssl_initHsctModule(IfxHssl_Hsct *hsct, const IfxHssl_Hsct_Config *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   568  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   569  /** \brief Fills the config structure with default values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   570   * \param config configuration structure of the HSCT module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   571   * \param hsct pointer to HSCT register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   572   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   573   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   574   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   575   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   576   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   577  IFX_EXTERN void IfxHssl_Hssl_initHsctModuleConfig(IfxHssl_Hsct_Config *config, Ifx_HSCT *hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   579  /** \brief Initialises the Hssl module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   580   * \param hssl HSSL handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   581   * \param config configuration structure of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   582   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   583   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   584   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   585   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   586   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   587  IFX_EXTERN void IfxHssl_Hssl_initHsslModule(IfxHssl_Hssl *hssl, const IfxHssl_Hssl_Config *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   588  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   589  /** \brief Fills the config structure with default values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   590   * \param config configuration structure of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   591   * \param hssl pointer to HSSL registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   592   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   593   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   594   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   595   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   596   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   597  IFX_EXTERN void IfxHssl_Hssl_initHsslModuleConfig(IfxHssl_Hssl_Config *config, Ifx_HSSL *hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   599  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   600  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   601  /** \addtogroup IfxLld_Hssl_Hssl_ChannelFunctions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   602   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   603  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   604  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   605  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   606  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   607  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   608  /** \brief Initialises the channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   609   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   610   * \param channelConfig configuration structure for channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   611   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   612   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   613   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   614   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   615   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   616  IFX_EXTERN void IfxHssl_Hssl_initChannel(IfxHssl_Hssl_Channel *channel, const IfxHssl_Hssl_ChannelConfig *channelConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   617  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   618  /** \brief Fills the channel config structure with default values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   619   * \param channelConfig configuration structure for channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   620   * \param hssl HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   621   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   622   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   623   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   624   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   625   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   627  IFX_EXTERN void IfxHssl_Hssl_initChannelConfig(IfxHssl_Hssl_ChannelConfig *channelConfig, IfxHssl_Hssl *hssl, IfxHssl_Hsct *hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   629  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   630  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   631  /** \addtogroup IfxLld_Hssl_Hssl_SimpleCom
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   632   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   633  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   634  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   635  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   636  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   637  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   638  /** \brief reads and returs the data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   639   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   640   * \return data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   641   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   642   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   643   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   644   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   645  IFX_INLINE uint32 IfxHssl_Hssl_getReadData(IfxHssl_Hssl_Channel *channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   646  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   647  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   648  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   649  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   650  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   651  /** \brief Initiates read request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   652   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   653   * \param address address of the location from where the data is to be read
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   654   * \param dataLength length of the data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   655   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   656   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   657   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   658   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   659   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   660  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_read(IfxHssl_Hssl_Channel *channel, uint32 address, IfxHssl_DataLength dataLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   661  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   662  /** \brief sends a predefined command from master to slave
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   663   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   664   * \param command command value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   665   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   666   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   667   * Usage Example:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   668   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   669   *     // enable slave Tx channel (Rx disable to Rx low peed)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   670   *     IfxHssl_Hssl_sendControlCommand(&channel, IfxHssl_ControlCommand_enableReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   671   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   672   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   673   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   674  IFX_EXTERN void IfxHssl_Hssl_sendControlCommand(IfxHssl_Hsct *hsct, uint8 command);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   675  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   676  /** \brief serves the frame request (read, write, trigger frame and read id)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   677   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   678   * \param frameRequest frame request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   679   * \param address address of the location (to be written into / read from)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   680   * \param data data to be written
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   681   * \param dataLength length of the data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   682   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   683   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   684  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_singleFrameRequest(IfxHssl_Hssl_Channel *channel, IfxHssl_Hssl_FrameRequest frameRequest, uint32 address, uint32 data, IfxHssl_DataLength dataLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   686  /** \brief waits until the current transaction is done
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   687   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   688   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   689   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   690   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   691   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   692   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   693  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_waitAcknowledge(IfxHssl_Hssl_Channel *channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   694  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   695  /** \brief writes single frame of data into the specified address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   696   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   697   * \param address address of the location where the data is to be written
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   698   * \param data data that needs to be written
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   699   * \param dataLength length of the data (8, 16, 32 bit)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   700   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   701   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   702   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   703   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   704   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   705  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_write(IfxHssl_Hssl_Channel *channel, uint32 address, uint32 data, IfxHssl_DataLength dataLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   706  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   707  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   708  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   709  /** \addtogroup IfxLld_Hssl_Hssl_ErrorHandling
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   710   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   711  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   712  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   713  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   714  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   715  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   716  /** \brief stores the status of errors in the respective members of the error flags structure
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   717   * \param hssl HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   718   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   719   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   720  IFX_EXTERN void IfxHssl_Hssl_checkErrors(IfxHssl_Hssl *hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   721  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   722  /** \brief clears the status of members in the error flags structure
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   723   * \param hssl HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   724   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   725   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   726  IFX_EXTERN void IfxHssl_Hssl_clearErrorFlags(IfxHssl_Hssl *hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   727  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   728  /** \brief a simple software delay
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   729   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   730   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   731   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   732  IFX_EXTERN void IfxHssl_Hssl_delay(IfxHssl_Hsct *hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   733  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   734  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   735  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   736  /** \addtogroup IfxLld_Hssl_Hssl_StreamingCom
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   737   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   738  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   739  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   740  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   741  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   742  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   743  /** \brief Prepares the target device for streaming
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   744   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   745   * \param slaveTargetAddress address of the location on target device where the data needs to be transfered
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   746   * \param count Frame count (length of the data in the memory as 256 bytes per frame)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   747   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   748   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   749   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   750   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   751   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   752  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_prepareStream(IfxHssl_Hssl_Channel *channel, uint32 slaveTargetAddress, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   754  /** \brief transfers one memory block of data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   755   * useful for transfering huge data from one location to another and between devices.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   756   * NOTE: This function should be called only for IfxHssl_ChannelId_2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   757   * \param hssl HSSL handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   758   * \param data starting address of the location to be read from (memory block 0 / HSSL_ISSA0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   759   * \param count Frame count (length of the data in the memory as 256 bytes per frame)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   760   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   761   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   762   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   763   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   764   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   765  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_writeStream(IfxHssl_Hssl *hssl, uint32 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   766  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   767  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   768  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   769  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   770  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   771  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   773  IFX_INLINE uint32 IfxHssl_Hssl_getReadData(IfxHssl_Hssl_Channel *channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   774  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   775      Ifx_HSSL_I *hsslI = (Ifx_HSSL_I *)&channel->hssl->I[channel->channelId];
	ld.a	a2,[a15]
.L710:
	ld.bu	d15,[a15]8
.L345:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   339  U          = IfxHssl_Hssl_getReadData(channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   340      tsfcReg.B.RELCOUNT = tsfcReg.B.CURCOUNT;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   341      /* Set the RELCOUNT equal to CURCOUNT on the target */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   342      IfxHssl_Hssl_singleFrameRequest(channel, IfxHssl_Hssl_FrameRequest_writeFrame, (uint32)&channel->hssl->TS.FC, count, IfxHssl_DataLength_16bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   343  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   344      while (IfxHssl_Hssl_waitAcknowledge(channel) != IfxHssl_Hssl_Status_ok)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   345      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   346          if (IfxHssl_Hssl_waitAcknowledge(channel) == IfxHssl_Hssl_Status_error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   347          {
	mov	d6,d8
.L350:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     2   * \file IfxHssl_Hssl.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     3   * \brief HSSL HSSL details
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     4   * \ingroup IfxLld_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    45   * \defgroup IfxLld_Hssl_Hssl_Usage How to use the HSSL Interface driver?
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    46   * \ingroup IfxLld_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    47   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    48   * The HSSL interface driver provides a default HSSL/HSCT configuration for point to point communication at two transfer speeds, 5MBaud (low speed) and 320MBaud (high speed).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    49   * It also supports streaming transfers of data a memory block at both low and high speeds.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    50   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    51   * In the following sections it will be described, how to integrate the driver into the application framework.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    52   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    53   * \section IfxLld_Hssl_Hssl_Preparation Preparation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    54   * \subsection IfxLld_Hssl_Hssl_Include Include Files
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    55   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    56   * Include following header file into your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    57   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    58   *     #include <Hssl/Hssl/IfxHssl_Hssl.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    59   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    60   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    61   * \subsection IfxLld_Hssl_Hssl_Variables Variables
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    62   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    63   * Declare the HSSL handle, HSCT handle and channel array as global variables in your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    64   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    65   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    66   *     // used globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    67   *     static IfxHssl_Hssl hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    68   *     static IfxHssl_Hsct hsct;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    69   *     IfxHssl_Hssl_Channel hsslChannel[4];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    70   *     __attribute__ ((aligned(256))) uint32 txData[80]; // needs to be declared globally in case of streaming transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    71   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    72   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    73   * \subsection IfxLld_Hssl_Hssl_InitModule Module Initialisation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    74   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    75   * The module initialisation can be done as follows:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    76   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    77   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    78   *     // create module config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    79   *     IfxHssl_Hsct_Config hsctConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    80   *     IfxHssl_Hssl_initHsctModuleConfig(&hsctConfig, &MODULE_HSCT);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    81   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    82   *     // select the interface mode (in case of slave)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    83   *     hsctConfig.interfaceMode = IfxHssl_InterfaceMode_slave;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    84   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    85   *     // select the high speed mode if required
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    86   *     hsctConfig.highSpeedMode = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    87   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    88   *     // initialize module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    89   *     // IfxHssl_Hsct hsct;  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    90   *     IfxHssl_Hssl_initHsctModule(&hsct, &hsctConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    91   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    92   *     // create module config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    93   *     IfxHssl_Hssl_Config hsslConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    94   *     IfxHssl_Hssl_initHsslModuleConfig(&hsslConfig, &MODULE_HSSL);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    95   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    96   *     // IfxHssl_Hssl hssl;  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    97   *     IfxHssl_Hssl_initHsslModule(&hssl, &hsslConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    98   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    99   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   100   * If application intends to explicitly configure the pins for HSCT module IFXHSSL_HSCT_DISABLE_PINCONFIG macro should be defined in the application.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   101   * The explicit pin assignment should be done prior to IfxHssl_Hssl_initHsctModule().
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   102   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   103   * \subsection IfxLld_Hssl_Hssl_InitChannel Channel Initialisation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   104   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   105   * The Channel initialisation can be done as follows:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   106   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   107   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   108   *     // create HSSL channel config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   109   *     IfxHssl_Hssl_ChannelConfig hsslChannelConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   110   *     IfxHssl_Hssl_initChannelConfig(&hsslChannelConfig, &hssl, &hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   111   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   112   *     // initialize the channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   113   *     // IfxHssl_Hssl_Channel hsslChannel[4];  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   114   *     for(int i=0; i<4; ++i)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   115   *     {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   116   *         hsslChannelConfig.channelId = (IfxHssl_ChannelId)i;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   117   *         IfxHssl_Hssl_initChannel(&hsslChannel[i], &hsslChannelConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   118   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   119   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   120   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   121   * \subsection IfxLld_Hssl_Hssl_LinkSpeed Changing HSCT link speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   122   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   123   * The link speed change can be done as follows
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   124   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   125   * As per the above settings the HSCT master is in High speed reception and transmission.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   126   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   127   * The pseudo code for setting the target to High speed is as below
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   128   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   129   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   130   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   131   *      // Set the Tx link speed of the master to Low speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   132   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_lowSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   133   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   134   *      // Enable reception at the Slave
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   135   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_enableReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   136   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   137   *      // Send interface commmand to change Rx to High speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   138   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_highSpeedReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   139   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   140   *      // Send interface commmand to change Tx to High speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   141   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_highSpeedTransmission);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   142   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   143   *      // Set the Tx link speed of the master to High speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   144   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_highSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   145   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   146   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   147   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   148   * The pseudo code for setitng the target to Low speed from High speed (ie. if hsctConfig.highSpeedMode is set to TRUE).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   149   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   150   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   151   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   152   *      // Set the Tx link speed of master to Low speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   153   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_lowSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   154   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   155   *      // Send interface command to change Rx to low speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   156   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_lowSpeedReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   157   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   158   *      // Set the Rx link speed of master to Low speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   159   *      IfxHssl_setHsctRxLinkSpeed(&hsct, IfxHssl_MasterModeRxSpeed_lowSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   160   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   161   *      // Send interface command to change Tx to low speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   162   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_lowSpeedTransmission);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   163   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   164   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   165   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   166   * The HSSL is ready for use now!
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   167   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   168   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   169   * \section IfxLld_Hssl_Hssl_DataTransfers Data Transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   170   * \subsection IfxLld_Hssl_Hssl_SimpleTransfers Simple Transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   171   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   172   * The HSSL driver provides simple to use data transfer functions,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   173   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   174   * It supports direct writing of 8/16/32 bit data from the initiator into a target's register, as well as reading a value from the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   175   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   176   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   177   *     // write some data to remote location:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   178   *     IfxHssl_Hssl_write(&hsslChannel[0], 0x70000000, 0x12345678, IfxHssl_DataLength_32bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   179   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   180   *     // wait for the acknowledgement
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   181   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) != IfxHssl_Hssl_Status_ok )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   182   *     {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   183   *         if( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) == IfxHssl_Hssl_Status_error )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   184   *           {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   185   *               IfxHssl_Hssl_checkErrors(&hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   186   *               break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   187   *           }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   188   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   189   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   190   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   191   * A simple to use receive function is available as well.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   192   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   193   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   194   *     // read some data from remote location:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   195   *     IfxHssl_Hssl_read(&hsslChannel[0], 0x70000000, IfxHssl_DataLength_32bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   196   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   197   *     // wait for the acknowledgement
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   198   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) != IfxHssl_Hssl_Status_ok )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   199   *     {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   200   *         if( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) == IfxHssl_Hssl_Status_error )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   201   *           {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   202   *               IfxHssl_Hssl_checkErrors(&hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   203   *               break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   204   *           }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   205   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   206   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   207   *     // read data from the register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   208   *     uint32 dataL = IfxHssl_Hssl_getReadData(&hsslChannel[0]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   209   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   210   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   211   * \subsection IfxLld_Hssl_Hssl_StreamingTransfers Streaming Transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   212   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   213   * HSSL driver also supports streaming transfers of data as a memory block at both low and high speeds.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   214   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   215   * Preparing the target for streaming with the desired memory location where the data needs to be transfered
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   216   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   217   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   218   *     // choose a channel other than channel2 for register access
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   219   *     // prepare streaming of single memory block
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   220   *     IfxHssl_Hssl_prepareStream(&hsslChannel[0], 0x70000000, 10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   221   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   222   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   223   * Stream the memory block
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   224   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   225   * Usage Example:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   226   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   227   *     // __attribute__ ((aligned(256))) uint32 txData[80];  expected to be declared globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   228   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   229   *     // for single block streaming transfer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   230   *     // change the txData address to global address before passing it to the API
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   231   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   232   *     // IfxHssl_Hssl_writeStream(&hssl, (uint32 *)IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), (uint32)txData),  10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   233   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   234   *     IfxHssl_Hssl_writeStream(&hssl, txData, 10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   235   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   236   *     // wait until the streaming is finished
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   237   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[2]) != IfxHssl_Hssl_Status_ok )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   238   *     {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   239   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   240   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   241   * \subsection IfxLld_Hssl_Hssl_DMAOperatedCommandQueues DMA Operated Command Queues
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   242   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   243   * It makes sense to do this from outside the driver, by initialising the DMA after HSSL, and send command queues through linked lists
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   244   * here is an example of how to use DMA operated command queues.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   245   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   246   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   247   * Include following header files into your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   248   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   249   *     #include <Hssl/Hssl/IfxHssl_Hssl.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   250   *     #include <Dma/Dma/IfxDma_Dma.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   251   *     #include <Scu/Std/IfxScuWdt.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   252   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   253   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   254   * Declare the HSSL handle, HSCT handle, HSSL channel handle and DMA channel handle as global variables in your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   255   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   256   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   257   *     // used globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   258   *     static IfxHssl_Hssl hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   259   *     static IfxHssl_Hsct hsct;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   260   *     IfxHssl_Hssl_Channel hsslChannel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   261   *     // DMA channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   262   *     IfxDma_Dma_Channel chn;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   263   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   264   *     // Linked List storage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   265   *     // IMPORTANT: it has to be aligned to an 64bit address, otherwise DMA can't read it
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   266   *     #define NUM_LINKED_LIST_ITEMS 3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   267   *     __attribute__ ((aligned(64))) Ifx_DMA_CH linkedList[NUM_LINKED_LIST_ITEMS] ;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   268   *     // transfer these values to channel 0 : HSSL_IWD0, HSSL_ICON0, HSSL_IRWA0 registers via linked lists
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   269   *     #define NUM_TRANSFERED_WORDS 3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   270   *     // three write command queues with different data and to different addresses on slave
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   271   *     uint32 sourceBuffer[NUM_LINKED_LIST_ITEMS][NUM_TRANSFERED_WORDS] = {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   272   *         {0xC0CAC01A, 0xFF0A0000, 0x70000000},
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   273   *         {0xBA5EBA11, 0xFF0A0000, 0x70000010},
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   274   *         {0xDEADBEEF, 0xFF0A0000, 0x70000020}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   275   *     };
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   276   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   277   *     // three command queues to the same channel 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   278   *     const uint32 destinationAddresses[NUM_LINKED_LIST_ITEMS] = {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   279   *         (uint32)&HSSL_I0_IWD,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   280   *         (uint32)&HSSL_I0_IWD,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   281   *         (uint32)&HSSL_I0_IWD
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   282   *     };
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   283   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   284   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   285   * Initialise the hssl module, see \ref IfxLld_Hssl_Hssl_InitModule
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   286   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   287   * Initialise the hssl channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   288   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   289   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   290   *     // create HSSL channel config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   291   *     IfxHssl_Hssl_ChannelConfig hsslChannelConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   292   *     IfxHssl_Hssl_initChannelConfig(&hsslChannelConfig, &hssl, &hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   293   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   294   *     // initialize the channel 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   295   *     // IfxHssl_Hssl_Channel hsslChannel;  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   296   *     hsslChannelConfig.channelId = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   297   *     IfxHssl_Hssl_initChannel(&hsslChannel, &hsslChannelConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   298   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   299   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   300   * Build a linked list
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   301   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   302   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   303   *     // create module config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   304   *     IfxDma_Dma_Config dmaConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   305   *     IfxDma_Dma_initModuleConfig(&dmaConfig, &MODULE_DMA);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   306   *     // initialize module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   307   *     IfxDma_Dma dma;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   308   *     IfxDma_Dma_initModule(&dma, &dmaConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   309   *     // initial channel configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   310   *     IfxDma_Dma_ChannelConfig cfg;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   311   *     IfxDma_Dma_initChannelConfig(&cfg, &dma);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   312   *     // following settings are used by all transactions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   313   *     cfg.transferCount = NUM_TRANSFERED_WORDS;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   314   *     cfg.requestMode = IfxDma_ChannelRequestMode_completeTransactionPerRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   315   *     cfg.moveSize = IfxDma_ChannelMoveSize_32bit;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   316   *     cfg.shadowControl = IfxDma_ChannelShadow_linkedList;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   317   *     // generate linked list items
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   318   *     for(int i=0; i<NUM_LINKED_LIST_ITEMS; ++i) {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   319   *         cfg.sourceAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   320   *         cfg.destinationAddress = destinationAddresses[i];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   321   *         // address to next transaction set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   322   *         cfg.shadowAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), (uint32)&linkedList[(i + 1) % NUM_LINKED_LIST_ITEMS]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   323   *         // transfer first transaction set into DMA channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   324   *         if( i == 0 ) {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   325   *             IfxDma_Dma_initChannel(&chn, &cfg);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   326   *         }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   327   *         // transfer into linked list storage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   328   *         IfxDma_Dma_initLinkedListEntry((void *)&linkedList[i], &cfg);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   329   *         if( i == 0 ) {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   330   *             // - trigger channel interrupt once the first transaction set has been loaded (again) into DMA channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   331   *             linkedList[i].CHCSR.B.SIT = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   332   *         } else {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   333   *          // - activate SCH (transaction request) for each entry, expect for the first one (linked list terminated here)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   334   *             linkedList[i].CHCSR.B.SCH = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   335   *         }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   336   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   337   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   338   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   339   * The transfer can be started via software with:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   340   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   341   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   342   *     // clear service request flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   343   *     (IfxDma_Dma_getSrcPointer(&chn))->B.CLRR = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   344   *     // start linked list transaction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   345   *     IfxDma_Dma_startChannelTransaction(&chn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   346   *     // wait for service request which is triggered at the end of linked list transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   347   *     while( !(IfxDma_Dma_getSrcPointer(&chn))->B.SRR );
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   348   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   349   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   350   * \subsection IfxLld_Hssl_Hssl_Interrupts Interrupts usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   351   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   352   * Interrupts can be enabled from the application by using the APIs provided in the driver,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   353   * there are APIs available in the driver to enable, disable, clear and read the status of interrupt falgs, along with these,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   354   * APIs to enable the the enterrupts are also available.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   355   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   356   * here is an example of how to use the interrupts in HSSL driver.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   357   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   358   * Using HSCT interrupts
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   359   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   360   * After initialising HSCT module \ref IfxLld_Hssl_Hssl_InitModule
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   361   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   362   * choose what flags needs to be enabled for HSCT interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   363   * and after choosing all the flags needed, enable the HSCT interrupt with desired type of service and priority.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   364   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   365   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   366   *     Ifx_HSCT *hsct = &MODULE_HSCT;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   367   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_headerError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   368   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_payloadError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   369   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_commandError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   370   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_speedModeSwitchError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   371   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   372   *     // enable the HSCT interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   373   *     IfxHssl_enableHsctInterrupt(hsct, IfxSrc_Tos_cpu0, 4);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   374   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   375   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   376   * Using HSSl interrupts
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   377   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   378   * HSSL global error interrupt (EXI)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   379   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   380   * After initilaising HSSL module \ref IfxLld_Hssl_Hssl_InitModule
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   381   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   382   * choose what flags needs to be enabled for HSSL global error (EXI) interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   383   * and after choosing all the flags needed, enable the HSSL EXI interrupt with desired type of service and priority
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   384   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   385   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   386   *     Ifx_HSSL *hssl = &MODULE_HSSL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   387   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_busAccessError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   388   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_dataLengthError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   389   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_crcError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   390   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   391   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   392   *     // enable the HSSL EXI interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   393   *     IfxHssl_enableHsslEXIInterrupt(hssl, IfxSrc_Tos_cpu0, 6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   394   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   395   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   396   * HSSL channel specific error interrupt (ERR)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   397   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   398   * After initilaising HSSL channel \ref IfxLld_Hssl_Hssl_InitChannel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   399   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   400   * choose what flags needs to be enabled for HSSL channel specific error (ERR) interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   401   * and after choosing all the flags needed, enable the HSSL ERR interrupt with desired channel, type of service and priority
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   402   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   403   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   404   *     Ifx_HSSL *hssl = &MODULE_HSSL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   405   *     IfxHssl_enableHsslChannelErrorInterruptFlag(hssl, channelId_0, IfxHssl_Hssl_ERRInterruptSource_transactionTagError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   406   *     IfxHssl_enableHsslChannelErrorInterruptFlag(hssl, channelId_0, IfxHssl_Hssl_ERRInterruptSource_timeoutError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   407   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   408   *     // enable the HSSL ERR interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   409   *     IfxHssl_enableHsslERRInterrupt(hssl, channelId_0, IfxSrc_Tos_cpu0, 8);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   410   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   411   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   412   * you can define the ISR of your own and service the interrupt, please refer to more general usage of interrupts \ref IfxLld_Cpu_Irq_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   413   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   414   * some additional APIs to clear, disable interrupt flags and get flag status are also available.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   415   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   416   * \defgroup IfxLld_Hssl_Hssl HSSL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   417   * \ingroup IfxLld_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   418   * \defgroup IfxLld_Hssl_Hssl_DataStructures Data Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   419   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   420   * \defgroup IfxLld_Hssl_Hssl_Enumerations Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   421   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   422   * \defgroup IfxLld_Hssl_Hssl_ModuleFunctions Module Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   423   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   424   * \defgroup IfxLld_Hssl_Hssl_ChannelFunctions Channel Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   425   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   426   * \defgroup IfxLld_Hssl_Hssl_SimpleCom Simple Communication
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   427   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   428   * \defgroup IfxLld_Hssl_Hssl_ErrorHandling Error Handling
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   429   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   430   * \defgroup IfxLld_Hssl_Hssl_StreamingCom Streaming Communication
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   431   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   432   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   434  #ifndef IFXHSSL_HSSL_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   435  #define IFXHSSL_HSSL_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   436  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   437  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   438  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   439  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   440  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   441  #include "Hssl/Std/IfxHssl.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   442  #include "Port/Std/IfxPort.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   443  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   444  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   445  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   446  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   447  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   448  /** \addtogroup IfxLld_Hssl_Hssl_Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   449   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   450  /** \brief frame request selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   451   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   452  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   453  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   454      IfxHssl_Hssl_FrameRequest_readFrame    = 1,  /**< \brief read frame rquest */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   455      IfxHssl_Hssl_FrameRequest_writeFrame   = 2,  /**< \brief write frame rquest */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   456      IfxHssl_Hssl_FrameRequest_triggerFrame = 3,  /**< \brief trigger frame rquest */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   457      IfxHssl_Hssl_FrameRequest_readId       = 4,  /**< \brief read id request */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   458      IfxHssl_Hssl_FrameRequest_noAction     = 5   /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   459  } IfxHssl_Hssl_FrameRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   461  /** \brief module status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   462   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   463  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   464  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   465      IfxHssl_Hssl_Status_ok    = 0, /**< \brief status ok */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   466      IfxHssl_Hssl_Status_busy  = 1, /**< \brief status busy */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   467      IfxHssl_Hssl_Status_error = 2  /**< \brief status error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   468  } IfxHssl_Hssl_Status;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   469  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   470  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   471  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   472  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   473  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   474  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   475  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   476  /** \addtogroup IfxLld_Hssl_Hssl_DataStructures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   477   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   478  /** \brief structure for access windows
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   479   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   480  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   481  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   482      uint32 start;       /**< \brief start of the access */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   483      uint32 end;         /**< \brief end of the access */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   484  } IfxHssl_Hssl_AccessWindow;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   485  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   486  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   487  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   488  /** \brief structure for error flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   489   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   490  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   491  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   492      uint8 notAcknowledgeError : 1;        /**< \brief not acknowledge error / tag error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   493      uint8 transactionTagError : 1;        /**< \brief transaction tag error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   494      uint8 timeoutError : 1;               /**< \brief timeout error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   495      uint8 unexpectedError : 1;            /**< \brief unexpected type of frame error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   496      uint8 memoryAccessViolation : 1;      /**< \brief memory access violation */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   497      uint8 busAccessError : 1;             /**< \brief SRI/SPB bus access error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   498      uint8 channelNumberCodeError : 1;     /**< \brief PHY inconsistency error 1 (channel number code error) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   499      uint8 dataLengthError : 1;            /**< \brief PHY inconsistency error 2 (data length error) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   500      uint8 crcError : 1;                   /**< \brief CRC error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   501  } IfxHssl_Hssl_errorFlags;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   503  /** \addtogroup IfxLld_Hssl_Hssl_DataStructures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   504   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   505  /** \brief HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   506   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   507  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   508  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   509      Ifx_HSSL               *hssl;             /**< \brief pointer to HSSL register */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   510      IfxHssl_Hssl_errorFlags errorFlags;       /**< \brief structure for error flags */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   511      boolean                 loopBack;         /**< \brief loop back (enable / disable) for streaming transfers within the microcontroller */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   512  } IfxHssl_Hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   513  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   514  /** \brief channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   515   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   516  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   517  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   518      Ifx_HSSL                 *hssl;                      /**< \brief pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   519      Ifx_HSCT                 *hsct;                      /**< \brief pointer to HSCT registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   520      IfxHssl_ChannelId         channelId;                 /**< \brief channel number (id) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   521      IfxHssl_Hssl_FrameRequest currentFrameRequest;       /**< \brief current frame request */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   522      IfxHssl_StreamingMode     streamingMode;             /**< \brief streaming mode selection ( single / continuous ) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   523      boolean                   loopBack;                  /**< \brief loopback (enable / disable) for streaming transfers within the microcontroller */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   524      boolean                   streamingModeOn;           /**< \brief streaming mode or command mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   525  } IfxHssl_Hssl_Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   526  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   527  /** \brief configuration structure for channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   528   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   529  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   530  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   531      Ifx_HSSL             *hssl;                /**< \brief pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   532      Ifx_HSCT             *hsct;                /**< \brief pointer to HSCT registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   533      IfxHssl_ChannelId     channelId;           /**< \brief channel number (id) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   534      IfxHssl_StreamingMode streamingMode;       /**< \brief streaming mode selection ( single / continuous ) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   535      boolean               loopBack;            /**< \brief loop back (enable / disable) for streaming transfers within the microcontroller */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   536  } IfxHssl_Hssl_ChannelConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   537  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   538  /** \brief configuration structure of the HSSL module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   539   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   540  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   541  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   542      Ifx_HSSL                 *hssl;                /**< \brief pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   543      IfxHssl_Hssl_AccessWindow accessWindow0;       /**< \brief access window of channel 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   544      IfxHssl_Hssl_AccessWindow accessWindow1;       /**< \brief access window of channel 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   545      IfxHssl_Hssl_AccessWindow accessWindow2;       /**< \brief access window of channel 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   546      IfxHssl_Hssl_AccessWindow accessWindow3;       /**< \brief access window of channel 3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   547      uint16                    preDivider;          /**< \brief Defines the down-scaled module clock to be used by all channel timeout timers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   548  } IfxHssl_Hssl_Config;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   550  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   551  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   552  /** \addtogroup IfxLld_Hssl_Hssl_ModuleFunctions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   553   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   554  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   555  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   556  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   557  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   558  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   559  /** \brief Initialises the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   560   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   561   * \param config configuration structure of the HSCT module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   562   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   563   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   564   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   565   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   566   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   567  IFX_EXTERN void IfxHssl_Hssl_initHsctModule(IfxHssl_Hsct *hsct, const IfxHssl_Hsct_Config *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   568  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   569  /** \brief Fills the config structure with default values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   570   * \param config configuration structure of the HSCT module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   571   * \param hsct pointer to HSCT register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   572   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   573   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   574   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   575   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   576   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   577  IFX_EXTERN void IfxHssl_Hssl_initHsctModuleConfig(IfxHssl_Hsct_Config *config, Ifx_HSCT *hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   579  /** \brief Initialises the Hssl module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   580   * \param hssl HSSL handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   581   * \param config configuration structure of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   582   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   583   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   584   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   585   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   586   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   587  IFX_EXTERN void IfxHssl_Hssl_initHsslModule(IfxHssl_Hssl *hssl, const IfxHssl_Hssl_Config *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   588  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   589  /** \brief Fills the config structure with default values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   590   * \param config configuration structure of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   591   * \param hssl pointer to HSSL registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   592   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   593   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   594   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   595   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   596   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   597  IFX_EXTERN void IfxHssl_Hssl_initHsslModuleConfig(IfxHssl_Hssl_Config *config, Ifx_HSSL *hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   599  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   600  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   601  /** \addtogroup IfxLld_Hssl_Hssl_ChannelFunctions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   602   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   603  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   604  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   605  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   606  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   607  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   608  /** \brief Initialises the channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   609   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   610   * \param channelConfig configuration structure for channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   611   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   612   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   613   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   614   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   615   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   616  IFX_EXTERN void IfxHssl_Hssl_initChannel(IfxHssl_Hssl_Channel *channel, const IfxHssl_Hssl_ChannelConfig *channelConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   617  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   618  /** \brief Fills the channel config structure with default values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   619   * \param channelConfig configuration structure for channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   620   * \param hssl HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   621   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   622   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   623   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   624   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   625   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   627  IFX_EXTERN void IfxHssl_Hssl_initChannelConfig(IfxHssl_Hssl_ChannelConfig *channelConfig, IfxHssl_Hssl *hssl, IfxHssl_Hsct *hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   629  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   630  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   631  /** \addtogroup IfxLld_Hssl_Hssl_SimpleCom
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   632   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   633  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   634  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   635  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   636  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   637  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   638  /** \brief reads and returs the data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   639   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   640   * \return data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   641   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   642   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   643   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   644   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   645  IFX_INLINE uint32 IfxHssl_Hssl_getReadData(IfxHssl_Hssl_Channel *channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   646  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   647  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   648  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   649  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   650  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   651  /** \brief Initiates read request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   652   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   653   * \param address address of the location from where the data is to be read
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   654   * \param dataLength length of the data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   655   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   656   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   657   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   658   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   659   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   660  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_read(IfxHssl_Hssl_Channel *channel, uint32 address, IfxHssl_DataLength dataLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   661  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   662  /** \brief sends a predefined command from master to slave
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   663   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   664   * \param command command value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   665   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   666   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   667   * Usage Example:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   668   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   669   *     // enable slave Tx channel (Rx disable to Rx low peed)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   670   *     IfxHssl_Hssl_sendControlCommand(&channel, IfxHssl_ControlCommand_enableReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   671   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   672   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   673   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   674  IFX_EXTERN void IfxHssl_Hssl_sendControlCommand(IfxHssl_Hsct *hsct, uint8 command);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   675  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   676  /** \brief serves the frame request (read, write, trigger frame and read id)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   677   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   678   * \param frameRequest frame request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   679   * \param address address of the location (to be written into / read from)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   680   * \param data data to be written
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   681   * \param dataLength length of the data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   682   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   683   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   684  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_singleFrameRequest(IfxHssl_Hssl_Channel *channel, IfxHssl_Hssl_FrameRequest frameRequest, uint32 address, uint32 data, IfxHssl_DataLength dataLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   686  /** \brief waits until the current transaction is done
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   687   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   688   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   689   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   690   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   691   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   692   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   693  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_waitAcknowledge(IfxHssl_Hssl_Channel *channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   694  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   695  /** \brief writes single frame of data into the specified address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   696   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   697   * \param address address of the location where the data is to be written
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   698   * \param data data that needs to be written
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   699   * \param dataLength length of the data (8, 16, 32 bit)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   700   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   701   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   702   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   703   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   704   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   705  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_write(IfxHssl_Hssl_Channel *channel, uint32 address, uint32 data, IfxHssl_DataLength dataLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   706  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   707  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   708  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   709  /** \addtogroup IfxLld_Hssl_Hssl_ErrorHandling
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   710   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   711  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   712  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   713  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   714  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   715  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   716  /** \brief stores the status of errors in the respective members of the error flags structure
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   717   * \param hssl HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   718   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   719   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   720  IFX_EXTERN void IfxHssl_Hssl_checkErrors(IfxHssl_Hssl *hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   721  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   722  /** \brief clears the status of members in the error flags structure
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   723   * \param hssl HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   724   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   725   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   726  IFX_EXTERN void IfxHssl_Hssl_clearErrorFlags(IfxHssl_Hssl *hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   727  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   728  /** \brief a simple software delay
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   729   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   730   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   731   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   732  IFX_EXTERN void IfxHssl_Hssl_delay(IfxHssl_Hsct *hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   733  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   734  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   735  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   736  /** \addtogroup IfxLld_Hssl_Hssl_StreamingCom
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   737   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   738  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   739  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   740  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   741  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   742  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   743  /** \brief Prepares the target device for streaming
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   744   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   745   * \param slaveTargetAddress address of the location on target device where the data needs to be transfered
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   746   * \param count Frame count (length of the data in the memory as 256 bytes per frame)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   747   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   748   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   749   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   750   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   751   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   752  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_prepareStream(IfxHssl_Hssl_Channel *channel, uint32 slaveTargetAddress, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   754  /** \brief transfers one memory block of data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   755   * useful for transfering huge data from one location to another and between devices.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   756   * NOTE: This function should be called only for IfxHssl_ChannelId_2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   757   * \param hssl HSSL handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   758   * \param data starting address of the location to be read from (memory block 0 / HSSL_ISSA0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   759   * \param count Frame count (length of the data in the memory as 256 bytes per frame)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   760   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   761   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   762   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   763   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   764   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   765  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_writeStream(IfxHssl_Hssl *hssl, uint32 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   766  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   767  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   768  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   769  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   770  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   771  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   773  IFX_INLINE uint32 IfxHssl_Hssl_getReadData(IfxHssl_Hssl_Channel *channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   774  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   775      Ifx_HSSL_I *hsslI = (Ifx_HSSL_I *)&channel->hssl->I[channel->channelId];
	sha	d15,#4
.L711:
	addsc.a	a4,a2,d15,#0
.L351:
	mov	d4,#2
	lea	a2,[a2]188
	mov.d	d5,a2
.L712:
	mov	d7,#1

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     2   * \file IfxHssl_Hssl.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     3   * \brief HSSL HSSL details
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     4   * \ingroup IfxLld_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    45   * \defgroup IfxLld_Hssl_Hssl_Usage How to use the HSSL Interface driver?
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    46   * \ingroup IfxLld_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    47   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    48   * The HSSL interface driver provides a default HSSL/HSCT configuration for point to point communication at two transfer speeds, 5MBaud (low speed) and 320MBaud (high speed).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    49   * It also supports streaming transfers of data a memory block at both low and high speeds.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    50   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    51   * In the following sections it will be described, how to integrate the driver into the application framework.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    52   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    53   * \section IfxLld_Hssl_Hssl_Preparation Preparation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    54   * \subsection IfxLld_Hssl_Hssl_Include Include Files
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    55   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    56   * Include following header file into your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    57   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    58   *     #include <Hssl/Hssl/IfxHssl_Hssl.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    59   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    60   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    61   * \subsection IfxLld_Hssl_Hssl_Variables Variables
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    62   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    63   * Declare the HSSL handle, HSCT handle and channel array as global variables in your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    64   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    65   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    66   *     // used globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    67   *     static IfxHssl_Hssl hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    68   *     static IfxHssl_Hsct hsct;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    69   *     IfxHssl_Hssl_Channel hsslChannel[4];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    70   *     __attribute__ ((aligned(256))) uint32 txData[80]; // needs to be declared globally in case of streaming transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    71   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    72   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    73   * \subsection IfxLld_Hssl_Hssl_InitModule Module Initialisation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    74   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    75   * The module initialisation can be done as follows:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    76   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    77   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    78   *     // create module config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    79   *     IfxHssl_Hsct_Config hsctConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    80   *     IfxHssl_Hssl_initHsctModuleConfig(&hsctConfig, &MODULE_HSCT);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    81   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    82   *     // select the interface mode (in case of slave)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    83   *     hsctConfig.interfaceMode = IfxHssl_InterfaceMode_slave;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    84   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    85   *     // select the high speed mode if required
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    86   *     hsctConfig.highSpeedMode = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    87   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    88   *     // initialize module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    89   *     // IfxHssl_Hsct hsct;  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    90   *     IfxHssl_Hssl_initHsctModule(&hsct, &hsctConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    91   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    92   *     // create module config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    93   *     IfxHssl_Hssl_Config hsslConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    94   *     IfxHssl_Hssl_initHsslModuleConfig(&hsslConfig, &MODULE_HSSL);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    95   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    96   *     // IfxHssl_Hssl hssl;  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    97   *     IfxHssl_Hssl_initHsslModule(&hssl, &hsslConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    98   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    99   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   100   * If application intends to explicitly configure the pins for HSCT module IFXHSSL_HSCT_DISABLE_PINCONFIG macro should be defined in the application.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   101   * The explicit pin assignment should be done prior to IfxHssl_Hssl_initHsctModule().
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   102   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   103   * \subsection IfxLld_Hssl_Hssl_InitChannel Channel Initialisation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   104   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   105   * The Channel initialisation can be done as follows:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   106   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   107   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   108   *     // create HSSL channel config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   109   *     IfxHssl_Hssl_ChannelConfig hsslChannelConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   110   *     IfxHssl_Hssl_initChannelConfig(&hsslChannelConfig, &hssl, &hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   111   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   112   *     // initialize the channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   113   *     // IfxHssl_Hssl_Channel hsslChannel[4];  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   114   *     for(int i=0; i<4; ++i)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   115   *     {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   116   *         hsslChannelConfig.channelId = (IfxHssl_ChannelId)i;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   117   *         IfxHssl_Hssl_initChannel(&hsslChannel[i], &hsslChannelConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   118   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   119   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   120   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   121   * \subsection IfxLld_Hssl_Hssl_LinkSpeed Changing HSCT link speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   122   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   123   * The link speed change can be done as follows
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   124   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   125   * As per the above settings the HSCT master is in High speed reception and transmission.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   126   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   127   * The pseudo code for setting the target to High speed is as below
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   128   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   129   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   130   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   131   *      // Set the Tx link speed of the master to Low speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   132   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_lowSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   133   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   134   *      // Enable reception at the Slave
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   135   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_enableReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   136   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   137   *      // Send interface commmand to change Rx to High speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   138   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_highSpeedReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   139   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   140   *      // Send interface commmand to change Tx to High speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   141   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_highSpeedTransmission);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   142   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   143   *      // Set the Tx link speed of the master to High speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   144   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_highSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   145   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   146   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   147   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   148   * The pseudo code for setitng the target to Low speed from High speed (ie. if hsctConfig.highSpeedMode is set to TRUE).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   149   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   150   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   151   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   152   *      // Set the Tx link speed of master to Low speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   153   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_lowSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   154   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   155   *      // Send interface command to change Rx to low speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   156   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_lowSpeedReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   157   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   158   *      // Set the Rx link speed of master to Low speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   159   *      IfxHssl_setHsctRxLinkSpeed(&hsct, IfxHssl_MasterModeRxSpeed_lowSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   160   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   161   *      // Send interface command to change Tx to low speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   162   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_lowSpeedTransmission);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   163   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   164   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   165   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   166   * The HSSL is ready for use now!
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   167   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   168   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   169   * \section IfxLld_Hssl_Hssl_DataTransfers Data Transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   170   * \subsection IfxLld_Hssl_Hssl_SimpleTransfers Simple Transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   171   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   172   * The HSSL driver provides simple to use data transfer functions,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   173   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   174   * It supports direct writing of 8/16/32 bit data from the initiator into a target's register, as well as reading a value from the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   175   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   176   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   177   *     // write some data to remote location:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   178   *     IfxHssl_Hssl_write(&hsslChannel[0], 0x70000000, 0x12345678, IfxHssl_DataLength_32bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   179   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   180   *     // wait for the acknowledgement
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   181   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) != IfxHssl_Hssl_Status_ok )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   182   *     {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   183   *         if( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) == IfxHssl_Hssl_Status_error )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   184   *           {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   185   *               IfxHssl_Hssl_checkErrors(&hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   186   *               break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   187   *           }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   188   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   189   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   190   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   191   * A simple to use receive function is available as well.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   192   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   193   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   194   *     // read some data from remote location:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   195   *     IfxHssl_Hssl_read(&hsslChannel[0], 0x70000000, IfxHssl_DataLength_32bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   196   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   197   *     // wait for the acknowledgement
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   198   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) != IfxHssl_Hssl_Status_ok )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   199   *     {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   200   *         if( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) == IfxHssl_Hssl_Status_error )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   201   *           {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   202   *               IfxHssl_Hssl_checkErrors(&hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   203   *               break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   204   *           }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   205   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   206   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   207   *     // read data from the register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   208   *     uint32 dataL = IfxHssl_Hssl_getReadData(&hsslChannel[0]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   209   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   210   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   211   * \subsection IfxLld_Hssl_Hssl_StreamingTransfers Streaming Transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   212   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   213   * HSSL driver also supports streaming transfers of data as a memory block at both low and high speeds.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   214   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   215   * Preparing the target for streaming with the desired memory location where the data needs to be transfered
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   216   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   217   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   218   *     // choose a channel other than channel2 for register access
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   219   *     // prepare streaming of single memory block
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   220   *     IfxHssl_Hssl_prepareStream(&hsslChannel[0], 0x70000000, 10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   221   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   222   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   223   * Stream the memory block
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   224   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   225   * Usage Example:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   226   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   227   *     // __attribute__ ((aligned(256))) uint32 txData[80];  expected to be declared globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   228   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   229   *     // for single block streaming transfer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   230   *     // change the txData address to global address before passing it to the API
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   231   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   232   *     // IfxHssl_Hssl_writeStream(&hssl, (uint32 *)IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), (uint32)txData),  10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   233   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   234   *     IfxHssl_Hssl_writeStream(&hssl, txData, 10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   235   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   236   *     // wait until the streaming is finished
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   237   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[2]) != IfxHssl_Hssl_Status_ok )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   238   *     {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   239   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   240   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   241   * \subsection IfxLld_Hssl_Hssl_DMAOperatedCommandQueues DMA Operated Command Queues
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   242   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   243   * It makes sense to do this from outside the driver, by initialising the DMA after HSSL, and send command queues through linked lists
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   244   * here is an example of how to use DMA operated command queues.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   245   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   246   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   247   * Include following header files into your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   248   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   249   *     #include <Hssl/Hssl/IfxHssl_Hssl.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   250   *     #include <Dma/Dma/IfxDma_Dma.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   251   *     #include <Scu/Std/IfxScuWdt.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   252   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   253   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   254   * Declare the HSSL handle, HSCT handle, HSSL channel handle and DMA channel handle as global variables in your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   255   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   256   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   257   *     // used globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   258   *     static IfxHssl_Hssl hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   259   *     static IfxHssl_Hsct hsct;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   260   *     IfxHssl_Hssl_Channel hsslChannel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   261   *     // DMA channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   262   *     IfxDma_Dma_Channel chn;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   263   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   264   *     // Linked List storage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   265   *     // IMPORTANT: it has to be aligned to an 64bit address, otherwise DMA can't read it
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   266   *     #define NUM_LINKED_LIST_ITEMS 3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   267   *     __attribute__ ((aligned(64))) Ifx_DMA_CH linkedList[NUM_LINKED_LIST_ITEMS] ;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   268   *     // transfer these values to channel 0 : HSSL_IWD0, HSSL_ICON0, HSSL_IRWA0 registers via linked lists
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   269   *     #define NUM_TRANSFERED_WORDS 3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   270   *     // three write command queues with different data and to different addresses on slave
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   271   *     uint32 sourceBuffer[NUM_LINKED_LIST_ITEMS][NUM_TRANSFERED_WORDS] = {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   272   *         {0xC0CAC01A, 0xFF0A0000, 0x70000000},
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   273   *         {0xBA5EBA11, 0xFF0A0000, 0x70000010},
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   274   *         {0xDEADBEEF, 0xFF0A0000, 0x70000020}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   275   *     };
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   276   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   277   *     // three command queues to the same channel 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   278   *     const uint32 destinationAddresses[NUM_LINKED_LIST_ITEMS] = {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   279   *         (uint32)&HSSL_I0_IWD,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   280   *         (uint32)&HSSL_I0_IWD,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   281   *         (uint32)&HSSL_I0_IWD
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   282   *     };
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   283   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   284   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   285   * Initialise the hssl module, see \ref IfxLld_Hssl_Hssl_InitModule
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   286   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   287   * Initialise the hssl channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   288   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   289   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   290   *     // create HSSL channel config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   291   *     IfxHssl_Hssl_ChannelConfig hsslChannelConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   292   *     IfxHssl_Hssl_initChannelConfig(&hsslChannelConfig, &hssl, &hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   293   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   294   *     // initialize the channel 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   295   *     // IfxHssl_Hssl_Channel hsslChannel;  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   296   *     hsslChannelConfig.channelId = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   297   *     IfxHssl_Hssl_initChannel(&hsslChannel, &hsslChannelConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   298   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   299   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   300   * Build a linked list
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   301   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   302   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   303   *     // create module config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   304   *     IfxDma_Dma_Config dmaConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   305   *     IfxDma_Dma_initModuleConfig(&dmaConfig, &MODULE_DMA);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   306   *     // initialize module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   307   *     IfxDma_Dma dma;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   308   *     IfxDma_Dma_initModule(&dma, &dmaConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   309   *     // initial channel configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   310   *     IfxDma_Dma_ChannelConfig cfg;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   311   *     IfxDma_Dma_initChannelConfig(&cfg, &dma);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   312   *     // following settings are used by all transactions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   313   *     cfg.transferCount = NUM_TRANSFERED_WORDS;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   314   *     cfg.requestMode = IfxDma_ChannelRequestMode_completeTransactionPerRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   315   *     cfg.moveSize = IfxDma_ChannelMoveSize_32bit;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   316   *     cfg.shadowControl = IfxDma_ChannelShadow_linkedList;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   317   *     // generate linked list items
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   318   *     for(int i=0; i<NUM_LINKED_LIST_ITEMS; ++i) {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   319   *         cfg.sourceAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   320   *         cfg.destinationAddress = destinationAddresses[i];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   321   *         // address to next transaction set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   322   *         cfg.shadowAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), (uint32)&linkedList[(i + 1) % NUM_LINKED_LIST_ITEMS]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   323   *         // transfer first transaction set into DMA channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   324   *         if( i == 0 ) {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   325   *             IfxDma_Dma_initChannel(&chn, &cfg);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   326   *         }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   327   *         // transfer into linked list storage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   328   *         IfxDma_Dma_initLinkedListEntry((void *)&linkedList[i], &cfg);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   329   *         if( i == 0 ) {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   330   *             // - trigger channel interrupt once the first transaction set has been loaded (again) into DMA channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   331   *             linkedList[i].CHCSR.B.SIT = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   332   *         } else {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   333   *          // - activate SCH (transaction request) for each entry, expect for the first one (linked list terminated here)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   334   *             linkedList[i].CHCSR.B.SCH = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   335   *         }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   336   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   337   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   338   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   339   * The transfer can be started via software with:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   340   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   341   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   342   *     // clear service request flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   343   *     (IfxDma_Dma_getSrcPointer(&chn))->B.CLRR = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   344   *     // start linked list transaction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   345   *     IfxDma_Dma_startChannelTransaction(&chn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   346   *     // wait for service request which is triggered at the end of linked list transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   347   *     while( !(IfxDma_Dma_getSrcPointer(&chn))->B.SRR );
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   348   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   349   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   350   * \subsection IfxLld_Hssl_Hssl_Interrupts Interrupts usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   351   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   352   * Interrupts can be enabled from the application by using the APIs provided in the driver,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   353   * there are APIs available in the driver to enable, disable, clear and read the status of interrupt falgs, along with these,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   354   * APIs to enable the the enterrupts are also available.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   355   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   356   * here is an example of how to use the interrupts in HSSL driver.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   357   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   358   * Using HSCT interrupts
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   359   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   360   * After initialising HSCT module \ref IfxLld_Hssl_Hssl_InitModule
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   361   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   362   * choose what flags needs to be enabled for HSCT interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   363   * and after choosing all the flags needed, enable the HSCT interrupt with desired type of service and priority.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   364   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   365   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   366   *     Ifx_HSCT *hsct = &MODULE_HSCT;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   367   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_headerError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   368   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_payloadError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   369   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_commandError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   370   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_speedModeSwitchError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   371   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   372   *     // enable the HSCT interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   373   *     IfxHssl_enableHsctInterrupt(hsct, IfxSrc_Tos_cpu0, 4);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   374   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   375   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   376   * Using HSSl interrupts
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   377   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   378   * HSSL global error interrupt (EXI)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   379   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   380   * After initilaising HSSL module \ref IfxLld_Hssl_Hssl_InitModule
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   381   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   382   * choose what flags needs to be enabled for HSSL global error (EXI) interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   383   * and after choosing all the flags needed, enable the HSSL EXI interrupt with desired type of service and priority
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   384   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   385   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   386   *     Ifx_HSSL *hssl = &MODULE_HSSL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   387   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_busAccessError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   388   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_dataLengthError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   389   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_crcError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   390   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   391   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   392   *     // enable the HSSL EXI interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   393   *     IfxHssl_enableHsslEXIInterrupt(hssl, IfxSrc_Tos_cpu0, 6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   394   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   395   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   396   * HSSL channel specific error interrupt (ERR)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   397   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   398   * After initilaising HSSL channel \ref IfxLld_Hssl_Hssl_InitChannel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   399   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   400   * choose what flags needs to be enabled for HSSL channel specific error (ERR) interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   401   * and after choosing all the flags needed, enable the HSSL ERR interrupt with desired channel, type of service and priority
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   402   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   403   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   404   *     Ifx_HSSL *hssl = &MODULE_HSSL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   405   *     IfxHssl_enableHsslChannelErrorInterruptFlag(hssl, channelId_0, IfxHssl_Hssl_ERRInterruptSource_transactionTagError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   406   *     IfxHssl_enableHsslChannelErrorInterruptFlag(hssl, channelId_0, IfxHssl_Hssl_ERRInterruptSource_timeoutError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   407   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   408   *     // enable the HSSL ERR interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   409   *     IfxHssl_enableHsslERRInterrupt(hssl, channelId_0, IfxSrc_Tos_cpu0, 8);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   410   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   411   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   412   * you can define the ISR of your own and service the interrupt, please refer to more general usage of interrupts \ref IfxLld_Cpu_Irq_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   413   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   414   * some additional APIs to clear, disable interrupt flags and get flag status are also available.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   415   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   416   * \defgroup IfxLld_Hssl_Hssl HSSL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   417   * \ingroup IfxLld_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   418   * \defgroup IfxLld_Hssl_Hssl_DataStructures Data Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   419   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   420   * \defgroup IfxLld_Hssl_Hssl_Enumerations Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   421   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   422   * \defgroup IfxLld_Hssl_Hssl_ModuleFunctions Module Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   423   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   424   * \defgroup IfxLld_Hssl_Hssl_ChannelFunctions Channel Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   425   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   426   * \defgroup IfxLld_Hssl_Hssl_SimpleCom Simple Communication
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   427   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   428   * \defgroup IfxLld_Hssl_Hssl_ErrorHandling Error Handling
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   429   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   430   * \defgroup IfxLld_Hssl_Hssl_StreamingCom Streaming Communication
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   431   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   432   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   434  #ifndef IFXHSSL_HSSL_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   435  #define IFXHSSL_HSSL_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   436  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   437  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   438  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   439  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   440  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   441  #include "Hssl/Std/IfxHssl.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   442  #include "Port/Std/IfxPort.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   443  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   444  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   445  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   446  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   447  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   448  /** \addtogroup IfxLld_Hssl_Hssl_Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   449   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   450  /** \brief frame request selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   451   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   452  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   453  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   454      IfxHssl_Hssl_FrameRequest_readFrame    = 1,  /**< \brief read frame rquest */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   455      IfxHssl_Hssl_FrameRequest_writeFrame   = 2,  /**< \brief write frame rquest */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   456      IfxHssl_Hssl_FrameRequest_triggerFrame = 3,  /**< \brief trigger frame rquest */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   457      IfxHssl_Hssl_FrameRequest_readId       = 4,  /**< \brief read id request */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   458      IfxHssl_Hssl_FrameRequest_noAction     = 5   /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   459  } IfxHssl_Hssl_FrameRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   461  /** \brief module status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   462   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   463  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   464  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   465      IfxHssl_Hssl_Status_ok    = 0, /**< \brief status ok */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   466      IfxHssl_Hssl_Status_busy  = 1, /**< \brief status busy */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   467      IfxHssl_Hssl_Status_error = 2  /**< \brief status error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   468  } IfxHssl_Hssl_Status;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   469  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   470  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   471  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   472  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   473  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   474  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   475  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   476  /** \addtogroup IfxLld_Hssl_Hssl_DataStructures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   477   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   478  /** \brief structure for access windows
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   479   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   480  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   481  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   482      uint32 start;       /**< \brief start of the access */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   483      uint32 end;         /**< \brief end of the access */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   484  } IfxHssl_Hssl_AccessWindow;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   485  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   486  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   487  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   488  /** \brief structure for error flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   489   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   490  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   491  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   492      uint8 notAcknowledgeError : 1;        /**< \brief not acknowledge error / tag error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   493      uint8 transactionTagError : 1;        /**< \brief transaction tag error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   494      uint8 timeoutError : 1;               /**< \brief timeout error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   495      uint8 unexpectedError : 1;            /**< \brief unexpected type of frame error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   496      uint8 memoryAccessViolation : 1;      /**< \brief memory access violation */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   497      uint8 busAccessError : 1;             /**< \brief SRI/SPB bus access error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   498      uint8 channelNumberCodeError : 1;     /**< \brief PHY inconsistency error 1 (channel number code error) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   499      uint8 dataLengthError : 1;            /**< \brief PHY inconsistency error 2 (data length error) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   500      uint8 crcError : 1;                   /**< \brief CRC error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   501  } IfxHssl_Hssl_errorFlags;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   503  /** \addtogroup IfxLld_Hssl_Hssl_DataStructures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   504   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   505  /** \brief HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   506   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   507  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   508  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   509      Ifx_HSSL               *hssl;             /**< \brief pointer to HSSL register */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   510      IfxHssl_Hssl_errorFlags errorFlags;       /**< \brief structure for error flags */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   511      boolean                 loopBack;         /**< \brief loop back (enable / disable) for streaming transfers within the microcontroller */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   512  } IfxHssl_Hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   513  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   514  /** \brief channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   515   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   516  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   517  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   518      Ifx_HSSL                 *hssl;                      /**< \brief pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   519      Ifx_HSCT                 *hsct;                      /**< \brief pointer to HSCT registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   520      IfxHssl_ChannelId         channelId;                 /**< \brief channel number (id) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   521      IfxHssl_Hssl_FrameRequest currentFrameRequest;       /**< \brief current frame request */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   522      IfxHssl_StreamingMode     streamingMode;             /**< \brief streaming mode selection ( single / continuous ) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   523      boolean                   loopBack;                  /**< \brief loopback (enable / disable) for streaming transfers within the microcontroller */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   524      boolean                   streamingModeOn;           /**< \brief streaming mode or command mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   525  } IfxHssl_Hssl_Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   526  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   527  /** \brief configuration structure for channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   528   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   529  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   530  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   531      Ifx_HSSL             *hssl;                /**< \brief pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   532      Ifx_HSCT             *hsct;                /**< \brief pointer to HSCT registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   533      IfxHssl_ChannelId     channelId;           /**< \brief channel number (id) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   534      IfxHssl_StreamingMode streamingMode;       /**< \brief streaming mode selection ( single / continuous ) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   535      boolean               loopBack;            /**< \brief loop back (enable / disable) for streaming transfers within the microcontroller */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   536  } IfxHssl_Hssl_ChannelConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   537  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   538  /** \brief configuration structure of the HSSL module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   539   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   540  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   541  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   542      Ifx_HSSL                 *hssl;                /**< \brief pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   543      IfxHssl_Hssl_AccessWindow accessWindow0;       /**< \brief access window of channel 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   544      IfxHssl_Hssl_AccessWindow accessWindow1;       /**< \brief access window of channel 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   545      IfxHssl_Hssl_AccessWindow accessWindow2;       /**< \brief access window of channel 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   546      IfxHssl_Hssl_AccessWindow accessWindow3;       /**< \brief access window of channel 3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   547      uint16                    preDivider;          /**< \brief Defines the down-scaled module clock to be used by all channel timeout timers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   548  } IfxHssl_Hssl_Config;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   550  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   551  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   552  /** \addtogroup IfxLld_Hssl_Hssl_ModuleFunctions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   553   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   554  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   555  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   556  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   557  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   558  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   559  /** \brief Initialises the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   560   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   561   * \param config configuration structure of the HSCT module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   562   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   563   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   564   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   565   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   566   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   567  IFX_EXTERN void IfxHssl_Hssl_initHsctModule(IfxHssl_Hsct *hsct, const IfxHssl_Hsct_Config *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   568  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   569  /** \brief Fills the config structure with default values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   570   * \param config configuration structure of the HSCT module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   571   * \param hsct pointer to HSCT register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   572   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   573   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   574   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   575   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   576   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   577  IFX_EXTERN void IfxHssl_Hssl_initHsctModuleConfig(IfxHssl_Hsct_Config *config, Ifx_HSCT *hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   579  /** \brief Initialises the Hssl module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   580   * \param hssl HSSL handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   581   * \param config configuration structure of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   582   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   583   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   584   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   585   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   586   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   587  IFX_EXTERN void IfxHssl_Hssl_initHsslModule(IfxHssl_Hssl *hssl, const IfxHssl_Hssl_Config *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   588  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   589  /** \brief Fills the config structure with default values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   590   * \param config configuration structure of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   591   * \param hssl pointer to HSSL registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   592   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   593   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   594   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   595   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   596   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   597  IFX_EXTERN void IfxHssl_Hssl_initHsslModuleConfig(IfxHssl_Hssl_Config *config, Ifx_HSSL *hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   599  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   600  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   601  /** \addtogroup IfxLld_Hssl_Hssl_ChannelFunctions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   602   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   603  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   604  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   605  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   606  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   607  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   608  /** \brief Initialises the channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   609   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   610   * \param channelConfig configuration structure for channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   611   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   612   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   613   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   614   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   615   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   616  IFX_EXTERN void IfxHssl_Hssl_initChannel(IfxHssl_Hssl_Channel *channel, const IfxHssl_Hssl_ChannelConfig *channelConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   617  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   618  /** \brief Fills the channel config structure with default values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   619   * \param channelConfig configuration structure for channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   620   * \param hssl HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   621   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   622   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   623   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   624   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   625   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   627  IFX_EXTERN void IfxHssl_Hssl_initChannelConfig(IfxHssl_Hssl_ChannelConfig *channelConfig, IfxHssl_Hssl *hssl, IfxHssl_Hsct *hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   629  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   630  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   631  /** \addtogroup IfxLld_Hssl_Hssl_SimpleCom
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   632   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   633  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   634  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   635  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   636  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   637  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   638  /** \brief reads and returs the data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   639   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   640   * \return data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   641   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   642   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   643   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   644   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   645  IFX_INLINE uint32 IfxHssl_Hssl_getReadData(IfxHssl_Hssl_Channel *channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   646  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   647  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   648  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   649  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   650  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   651  /** \brief Initiates read request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   652   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   653   * \param address address of the location from where the data is to be read
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   654   * \param dataLength length of the data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   655   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   656   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   657   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   658   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   659   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   660  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_read(IfxHssl_Hssl_Channel *channel, uint32 address, IfxHssl_DataLength dataLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   661  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   662  /** \brief sends a predefined command from master to slave
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   663   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   664   * \param command command value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   665   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   666   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   667   * Usage Example:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   668   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   669   *     // enable slave Tx channel (Rx disable to Rx low peed)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   670   *     IfxHssl_Hssl_sendControlCommand(&channel, IfxHssl_ControlCommand_enableReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   671   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   672   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   673   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   674  IFX_EXTERN void IfxHssl_Hssl_sendControlCommand(IfxHssl_Hsct *hsct, uint8 command);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   675  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   676  /** \brief serves the frame request (read, write, trigger frame and read id)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   677   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   678   * \param frameRequest frame request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   679   * \param address address of the location (to be written into / read from)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   680   * \param data data to be written
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   681   * \param dataLength length of the data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   682   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   683   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   684  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_singleFrameRequest(IfxHssl_Hssl_Channel *channel, IfxHssl_Hssl_FrameRequest frameRequest, uint32 address, uint32 data, IfxHssl_DataLength dataLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   686  /** \brief waits until the current transaction is done
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   687   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   688   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   689   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   690   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   691   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   692   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   693  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_waitAcknowledge(IfxHssl_Hssl_Channel *channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   694  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   695  /** \brief writes single frame of data into the specified address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   696   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   697   * \param address address of the location where the data is to be written
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   698   * \param data data that needs to be written
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   699   * \param dataLength length of the data (8, 16, 32 bit)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   700   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   701   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   702   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   703   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   704   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   705  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_write(IfxHssl_Hssl_Channel *channel, uint32 address, uint32 data, IfxHssl_DataLength dataLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   706  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   707  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   708  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   709  /** \addtogroup IfxLld_Hssl_Hssl_ErrorHandling
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   710   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   711  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   712  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   713  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   714  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   715  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   716  /** \brief stores the status of errors in the respective members of the error flags structure
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   717   * \param hssl HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   718   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   719   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   720  IFX_EXTERN void IfxHssl_Hssl_checkErrors(IfxHssl_Hssl *hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   721  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   722  /** \brief clears the status of members in the error flags structure
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   723   * \param hssl HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   724   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   725   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   726  IFX_EXTERN void IfxHssl_Hssl_clearErrorFlags(IfxHssl_Hssl *hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   727  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   728  /** \brief a simple software delay
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   729   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   730   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   731   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   732  IFX_EXTERN void IfxHssl_Hssl_delay(IfxHssl_Hsct *hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   733  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   734  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   735  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   736  /** \addtogroup IfxLld_Hssl_Hssl_StreamingCom
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   737   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   738  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   739  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   740  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   741  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   742  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   743  /** \brief Prepares the target device for streaming
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   744   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   745   * \param slaveTargetAddress address of the location on target device where the data needs to be transfered
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   746   * \param count Frame count (length of the data in the memory as 256 bytes per frame)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   747   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   748   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   749   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   750   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   751   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   752  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_prepareStream(IfxHssl_Hssl_Channel *channel, uint32 slaveTargetAddress, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   754  /** \brief transfers one memory block of data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   755   * useful for transfering huge data from one location to another and between devices.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   756   * NOTE: This function should be called only for IfxHssl_ChannelId_2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   757   * \param hssl HSSL handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   758   * \param data starting address of the location to be read from (memory block 0 / HSSL_ISSA0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   759   * \param count Frame count (length of the data in the memory as 256 bytes per frame)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   760   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   761   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   762   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   763   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   764   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   765  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_writeStream(IfxHssl_Hssl *hssl, uint32 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   766  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   767  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   768  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   769  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   770  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   771  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   773  IFX_INLINE uint32 IfxHssl_Hssl_getReadData(IfxHssl_Hssl_Channel *channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   774  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   775      Ifx_HSSL_I *hsslI = (Ifx_HSSL_I *)&channel->hssl->I[channel->channelId];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   776      return hsslI->IRD.U;    /* retutn the data read from the data register */
	ld.w	d15,[a4]60
.L404:
	mov.aa	a4,a15
.L406:
	call	IfxHssl_Hssl_singleFrameRequest
.L403:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   348     return IfxHssl_Hssl_Status_error;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   349          }
	j	.L27
.L28:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   350      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   351  
	mov.aa	a4,a15
.L407:
	call	IfxHssl_Hssl_waitAcknowledge
.L408:
	jeq	d2,#2,.L29
.L27:
	mov.aa	a4,a15
.L409:
	call	IfxHssl_Hssl_waitAcknowledge
.L410:
	jne	d2,#0,.L28
.L713:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   352      /* Disable the streaming on the target */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   353      IfxHssl_Hssl_singleFrameRequest(channel, IfxHssl_Hssl_FrameRequest_writeFrame, (uint32)&channel->hssl->MFLAGSCL, (1 << IFX_HSSL_MFLAGSCL_TSEC_OFF), IfxHssl_DataLength_32bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   354  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   355      while (IfxHssl_Hssl_waitAcknowledge(channel) != IfxHssl_Hssl_Status_ok)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   356      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   357          if (IfxHssl_Hssl_waitAcknowledge(channel) == IfxHssl_Hssl_Status_error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   358          {
	mov	d4,#2
	ld.w	d15,[a15]
.L405:
	mov	d7,d4
	mov.aa	a4,a15
.L411:
	add	d5,d15,#32
.L714:
	movh	d6,#4096
	call	IfxHssl_Hssl_singleFrameRequest
.L412:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   359              return IfxHssl_Hssl_Status_error;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   360          }
	j	.L30
.L31:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   361      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   362  
	mov.aa	a4,a15
.L413:
	call	IfxHssl_Hssl_waitAcknowledge
.L414:
	jeq	d2,#2,.L32
.L30:
	mov.aa	a4,a15
.L415:
	call	IfxHssl_Hssl_waitAcknowledge
.L416:
	jne	d2,#0,.L31
.L715:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   363      /* memory count into target reload count register on target device */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   364      IfxHssl_Hssl_singleFrameRequest(channel, IfxHssl_Hssl_FrameRequest_writeFrame, (uint32)&channel->hssl->TS.FC, count, IfxHssl_DataLength_16bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   365  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   366      while (IfxHssl_Hssl_waitAcknowledge(channel) != IfxHssl_Hssl_Status_ok)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   367      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   368          if (IfxHssl_Hssl_waitAcknowledge(channel) == IfxHssl_Hssl_Status_error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   369          {
	mov	d6,d8
	ld.w	d15,[a15]
.L417:
	mov	d4,#2
	mov.aa	a4,a15
.L419:
	add	d5,d15,#188
.L716:
	mov	d7,#1
	call	IfxHssl_Hssl_singleFrameRequest
.L418:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   370              return IfxHssl_Hssl_Status_error;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   371          }
	j	.L33
.L34:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   372      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   373  
	mov.aa	a4,a15
.L420:
	call	IfxHssl_Hssl_waitAcknowledge
.L421:
	jeq	d2,#2,.L35
.L33:
	mov.aa	a4,a15
.L422:
	call	IfxHssl_Hssl_waitAcknowledge
.L423:
	jne	d2,#0,.L34
.L717:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   374      /* incase of transfers between two different devices (loopback off) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   375      if (!channel->loopBack)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   376      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   377          /* Get the target configuration */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   378          IfxHssl_Hssl_read(channel, (uint32)&channel->hssl->CFG, IfxHssl_DataLength_32bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   379  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   380          while (IfxHssl_Hssl_waitAcknowledge(channel) != IfxHssl_Hssl_Status_ok)
	ld.bu	d15,[a15]11
.L718:
	jne	d15,#0,.L36
.L719:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   381          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   382              if (IfxHssl_Hssl_waitAcknowledge(channel) == IfxHssl_Hssl_Status_error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   383              {
	ld.w	d15,[a15]
.L720:
	mov	d5,#2
	mov.aa	a4,a15
.L424:
	add	d4,d15,#16
	call	IfxHssl_Hssl_read
.L425:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   384                  return IfxHssl_Hssl_Status_error;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   385              }
	j	.L37
.L38:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   386          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   387  
	mov.aa	a4,a15
.L426:
	call	IfxHssl_Hssl_waitAcknowledge
.L427:
	jeq	d2,#2,.L39
.L37:
	mov.aa	a4,a15
.L428:
	call	IfxHssl_Hssl_waitAcknowledge
.L429:
	jne	d2,#0,.L38
.L352:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     2   * \file IfxHssl_Hssl.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     3   * \brief HSSL HSSL details
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     4   * \ingroup IfxLld_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    45   * \defgroup IfxLld_Hssl_Hssl_Usage How to use the HSSL Interface driver?
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    46   * \ingroup IfxLld_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    47   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    48   * The HSSL interface driver provides a default HSSL/HSCT configuration for point to point communication at two transfer speeds, 5MBaud (low speed) and 320MBaud (high speed).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    49   * It also supports streaming transfers of data a memory block at both low and high speeds.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    50   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    51   * In the following sections it will be described, how to integrate the driver into the application framework.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    52   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    53   * \section IfxLld_Hssl_Hssl_Preparation Preparation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    54   * \subsection IfxLld_Hssl_Hssl_Include Include Files
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    55   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    56   * Include following header file into your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    57   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    58   *     #include <Hssl/Hssl/IfxHssl_Hssl.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    59   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    60   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    61   * \subsection IfxLld_Hssl_Hssl_Variables Variables
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    62   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    63   * Declare the HSSL handle, HSCT handle and channel array as global variables in your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    64   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    65   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    66   *     // used globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    67   *     static IfxHssl_Hssl hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    68   *     static IfxHssl_Hsct hsct;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    69   *     IfxHssl_Hssl_Channel hsslChannel[4];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    70   *     __attribute__ ((aligned(256))) uint32 txData[80]; // needs to be declared globally in case of streaming transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    71   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    72   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    73   * \subsection IfxLld_Hssl_Hssl_InitModule Module Initialisation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    74   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    75   * The module initialisation can be done as follows:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    76   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    77   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    78   *     // create module config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    79   *     IfxHssl_Hsct_Config hsctConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    80   *     IfxHssl_Hssl_initHsctModuleConfig(&hsctConfig, &MODULE_HSCT);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    81   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    82   *     // select the interface mode (in case of slave)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    83   *     hsctConfig.interfaceMode = IfxHssl_InterfaceMode_slave;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    84   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    85   *     // select the high speed mode if required
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    86   *     hsctConfig.highSpeedMode = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    87   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    88   *     // initialize module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    89   *     // IfxHssl_Hsct hsct;  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    90   *     IfxHssl_Hssl_initHsctModule(&hsct, &hsctConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    91   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    92   *     // create module config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    93   *     IfxHssl_Hssl_Config hsslConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    94   *     IfxHssl_Hssl_initHsslModuleConfig(&hsslConfig, &MODULE_HSSL);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    95   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    96   *     // IfxHssl_Hssl hssl;  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    97   *     IfxHssl_Hssl_initHsslModule(&hssl, &hsslConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    98   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    99   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   100   * If application intends to explicitly configure the pins for HSCT module IFXHSSL_HSCT_DISABLE_PINCONFIG macro should be defined in the application.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   101   * The explicit pin assignment should be done prior to IfxHssl_Hssl_initHsctModule().
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   102   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   103   * \subsection IfxLld_Hssl_Hssl_InitChannel Channel Initialisation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   104   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   105   * The Channel initialisation can be done as follows:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   106   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   107   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   108   *     // create HSSL channel config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   109   *     IfxHssl_Hssl_ChannelConfig hsslChannelConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   110   *     IfxHssl_Hssl_initChannelConfig(&hsslChannelConfig, &hssl, &hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   111   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   112   *     // initialize the channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   113   *     // IfxHssl_Hssl_Channel hsslChannel[4];  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   114   *     for(int i=0; i<4; ++i)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   115   *     {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   116   *         hsslChannelConfig.channelId = (IfxHssl_ChannelId)i;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   117   *         IfxHssl_Hssl_initChannel(&hsslChannel[i], &hsslChannelConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   118   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   119   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   120   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   121   * \subsection IfxLld_Hssl_Hssl_LinkSpeed Changing HSCT link speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   122   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   123   * The link speed change can be done as follows
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   124   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   125   * As per the above settings the HSCT master is in High speed reception and transmission.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   126   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   127   * The pseudo code for setting the target to High speed is as below
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   128   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   129   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   130   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   131   *      // Set the Tx link speed of the master to Low speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   132   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_lowSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   133   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   134   *      // Enable reception at the Slave
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   135   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_enableReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   136   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   137   *      // Send interface commmand to change Rx to High speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   138   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_highSpeedReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   139   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   140   *      // Send interface commmand to change Tx to High speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   141   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_highSpeedTransmission);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   142   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   143   *      // Set the Tx link speed of the master to High speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   144   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_highSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   145   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   146   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   147   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   148   * The pseudo code for setitng the target to Low speed from High speed (ie. if hsctConfig.highSpeedMode is set to TRUE).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   149   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   150   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   151   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   152   *      // Set the Tx link speed of master to Low speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   153   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_lowSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   154   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   155   *      // Send interface command to change Rx to low speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   156   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_lowSpeedReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   157   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   158   *      // Set the Rx link speed of master to Low speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   159   *      IfxHssl_setHsctRxLinkSpeed(&hsct, IfxHssl_MasterModeRxSpeed_lowSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   160   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   161   *      // Send interface command to change Tx to low speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   162   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_lowSpeedTransmission);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   163   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   164   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   165   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   166   * The HSSL is ready for use now!
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   167   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   168   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   169   * \section IfxLld_Hssl_Hssl_DataTransfers Data Transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   170   * \subsection IfxLld_Hssl_Hssl_SimpleTransfers Simple Transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   171   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   172   * The HSSL driver provides simple to use data transfer functions,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   173   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   174   * It supports direct writing of 8/16/32 bit data from the initiator into a target's register, as well as reading a value from the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   175   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   176   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   177   *     // write some data to remote location:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   178   *     IfxHssl_Hssl_write(&hsslChannel[0], 0x70000000, 0x12345678, IfxHssl_DataLength_32bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   179   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   180   *     // wait for the acknowledgement
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   181   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) != IfxHssl_Hssl_Status_ok )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   182   *     {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   183   *         if( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) == IfxHssl_Hssl_Status_error )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   184   *           {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   185   *               IfxHssl_Hssl_checkErrors(&hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   186   *               break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   187   *           }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   188   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   189   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   190   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   191   * A simple to use receive function is available as well.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   192   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   193   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   194   *     // read some data from remote location:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   195   *     IfxHssl_Hssl_read(&hsslChannel[0], 0x70000000, IfxHssl_DataLength_32bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   196   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   197   *     // wait for the acknowledgement
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   198   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) != IfxHssl_Hssl_Status_ok )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   199   *     {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   200   *         if( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) == IfxHssl_Hssl_Status_error )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   201   *           {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   202   *               IfxHssl_Hssl_checkErrors(&hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   203   *               break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   204   *           }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   205   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   206   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   207   *     // read data from the register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   208   *     uint32 dataL = IfxHssl_Hssl_getReadData(&hsslChannel[0]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   209   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   210   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   211   * \subsection IfxLld_Hssl_Hssl_StreamingTransfers Streaming Transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   212   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   213   * HSSL driver also supports streaming transfers of data as a memory block at both low and high speeds.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   214   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   215   * Preparing the target for streaming with the desired memory location where the data needs to be transfered
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   216   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   217   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   218   *     // choose a channel other than channel2 for register access
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   219   *     // prepare streaming of single memory block
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   220   *     IfxHssl_Hssl_prepareStream(&hsslChannel[0], 0x70000000, 10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   221   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   222   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   223   * Stream the memory block
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   224   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   225   * Usage Example:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   226   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   227   *     // __attribute__ ((aligned(256))) uint32 txData[80];  expected to be declared globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   228   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   229   *     // for single block streaming transfer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   230   *     // change the txData address to global address before passing it to the API
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   231   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   232   *     // IfxHssl_Hssl_writeStream(&hssl, (uint32 *)IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), (uint32)txData),  10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   233   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   234   *     IfxHssl_Hssl_writeStream(&hssl, txData, 10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   235   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   236   *     // wait until the streaming is finished
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   237   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[2]) != IfxHssl_Hssl_Status_ok )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   238   *     {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   239   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   240   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   241   * \subsection IfxLld_Hssl_Hssl_DMAOperatedCommandQueues DMA Operated Command Queues
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   242   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   243   * It makes sense to do this from outside the driver, by initialising the DMA after HSSL, and send command queues through linked lists
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   244   * here is an example of how to use DMA operated command queues.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   245   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   246   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   247   * Include following header files into your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   248   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   249   *     #include <Hssl/Hssl/IfxHssl_Hssl.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   250   *     #include <Dma/Dma/IfxDma_Dma.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   251   *     #include <Scu/Std/IfxScuWdt.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   252   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   253   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   254   * Declare the HSSL handle, HSCT handle, HSSL channel handle and DMA channel handle as global variables in your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   255   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   256   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   257   *     // used globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   258   *     static IfxHssl_Hssl hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   259   *     static IfxHssl_Hsct hsct;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   260   *     IfxHssl_Hssl_Channel hsslChannel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   261   *     // DMA channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   262   *     IfxDma_Dma_Channel chn;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   263   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   264   *     // Linked List storage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   265   *     // IMPORTANT: it has to be aligned to an 64bit address, otherwise DMA can't read it
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   266   *     #define NUM_LINKED_LIST_ITEMS 3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   267   *     __attribute__ ((aligned(64))) Ifx_DMA_CH linkedList[NUM_LINKED_LIST_ITEMS] ;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   268   *     // transfer these values to channel 0 : HSSL_IWD0, HSSL_ICON0, HSSL_IRWA0 registers via linked lists
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   269   *     #define NUM_TRANSFERED_WORDS 3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   270   *     // three write command queues with different data and to different addresses on slave
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   271   *     uint32 sourceBuffer[NUM_LINKED_LIST_ITEMS][NUM_TRANSFERED_WORDS] = {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   272   *         {0xC0CAC01A, 0xFF0A0000, 0x70000000},
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   273   *         {0xBA5EBA11, 0xFF0A0000, 0x70000010},
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   274   *         {0xDEADBEEF, 0xFF0A0000, 0x70000020}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   275   *     };
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   276   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   277   *     // three command queues to the same channel 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   278   *     const uint32 destinationAddresses[NUM_LINKED_LIST_ITEMS] = {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   279   *         (uint32)&HSSL_I0_IWD,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   280   *         (uint32)&HSSL_I0_IWD,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   281   *         (uint32)&HSSL_I0_IWD
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   282   *     };
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   283   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   284   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   285   * Initialise the hssl module, see \ref IfxLld_Hssl_Hssl_InitModule
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   286   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   287   * Initialise the hssl channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   288   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   289   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   290   *     // create HSSL channel config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   291   *     IfxHssl_Hssl_ChannelConfig hsslChannelConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   292   *     IfxHssl_Hssl_initChannelConfig(&hsslChannelConfig, &hssl, &hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   293   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   294   *     // initialize the channel 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   295   *     // IfxHssl_Hssl_Channel hsslChannel;  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   296   *     hsslChannelConfig.channelId = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   297   *     IfxHssl_Hssl_initChannel(&hsslChannel, &hsslChannelConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   298   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   299   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   300   * Build a linked list
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   301   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   302   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   303   *     // create module config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   304   *     IfxDma_Dma_Config dmaConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   305   *     IfxDma_Dma_initModuleConfig(&dmaConfig, &MODULE_DMA);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   306   *     // initialize module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   307   *     IfxDma_Dma dma;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   308   *     IfxDma_Dma_initModule(&dma, &dmaConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   309   *     // initial channel configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   310   *     IfxDma_Dma_ChannelConfig cfg;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   311   *     IfxDma_Dma_initChannelConfig(&cfg, &dma);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   312   *     // following settings are used by all transactions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   313   *     cfg.transferCount = NUM_TRANSFERED_WORDS;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   314   *     cfg.requestMode = IfxDma_ChannelRequestMode_completeTransactionPerRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   315   *     cfg.moveSize = IfxDma_ChannelMoveSize_32bit;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   316   *     cfg.shadowControl = IfxDma_ChannelShadow_linkedList;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   317   *     // generate linked list items
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   318   *     for(int i=0; i<NUM_LINKED_LIST_ITEMS; ++i) {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   319   *         cfg.sourceAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   320   *         cfg.destinationAddress = destinationAddresses[i];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   321   *         // address to next transaction set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   322   *         cfg.shadowAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), (uint32)&linkedList[(i + 1) % NUM_LINKED_LIST_ITEMS]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   323   *         // transfer first transaction set into DMA channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   324   *         if( i == 0 ) {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   325   *             IfxDma_Dma_initChannel(&chn, &cfg);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   326   *         }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   327   *         // transfer into linked list storage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   328   *         IfxDma_Dma_initLinkedListEntry((void *)&linkedList[i], &cfg);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   329   *         if( i == 0 ) {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   330   *             // - trigger channel interrupt once the first transaction set has been loaded (again) into DMA channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   331   *             linkedList[i].CHCSR.B.SIT = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   332   *         } else {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   333   *          // - activate SCH (transaction request) for each entry, expect for the first one (linked list terminated here)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   334   *             linkedList[i].CHCSR.B.SCH = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   335   *         }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   336   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   337   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   338   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   339   * The transfer can be started via software with:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   340   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   341   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   342   *     // clear service request flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   343   *     (IfxDma_Dma_getSrcPointer(&chn))->B.CLRR = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   344   *     // start linked list transaction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   345   *     IfxDma_Dma_startChannelTransaction(&chn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   346   *     // wait for service request which is triggered at the end of linked list transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   347   *     while( !(IfxDma_Dma_getSrcPointer(&chn))->B.SRR );
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   348   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   349   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   350   * \subsection IfxLld_Hssl_Hssl_Interrupts Interrupts usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   351   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   352   * Interrupts can be enabled from the application by using the APIs provided in the driver,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   353   * there are APIs available in the driver to enable, disable, clear and read the status of interrupt falgs, along with these,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   354   * APIs to enable the the enterrupts are also available.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   355   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   356   * here is an example of how to use the interrupts in HSSL driver.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   357   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   358   * Using HSCT interrupts
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   359   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   360   * After initialising HSCT module \ref IfxLld_Hssl_Hssl_InitModule
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   361   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   362   * choose what flags needs to be enabled for HSCT interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   363   * and after choosing all the flags needed, enable the HSCT interrupt with desired type of service and priority.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   364   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   365   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   366   *     Ifx_HSCT *hsct = &MODULE_HSCT;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   367   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_headerError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   368   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_payloadError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   369   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_commandError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   370   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_speedModeSwitchError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   371   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   372   *     // enable the HSCT interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   373   *     IfxHssl_enableHsctInterrupt(hsct, IfxSrc_Tos_cpu0, 4);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   374   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   375   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   376   * Using HSSl interrupts
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   377   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   378   * HSSL global error interrupt (EXI)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   379   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   380   * After initilaising HSSL module \ref IfxLld_Hssl_Hssl_InitModule
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   381   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   382   * choose what flags needs to be enabled for HSSL global error (EXI) interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   383   * and after choosing all the flags needed, enable the HSSL EXI interrupt with desired type of service and priority
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   384   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   385   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   386   *     Ifx_HSSL *hssl = &MODULE_HSSL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   387   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_busAccessError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   388   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_dataLengthError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   389   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_crcError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   390   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   391   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   392   *     // enable the HSSL EXI interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   393   *     IfxHssl_enableHsslEXIInterrupt(hssl, IfxSrc_Tos_cpu0, 6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   394   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   395   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   396   * HSSL channel specific error interrupt (ERR)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   397   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   398   * After initilaising HSSL channel \ref IfxLld_Hssl_Hssl_InitChannel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   399   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   400   * choose what flags needs to be enabled for HSSL channel specific error (ERR) interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   401   * and after choosing all the flags needed, enable the HSSL ERR interrupt with desired channel, type of service and priority
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   402   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   403   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   404   *     Ifx_HSSL *hssl = &MODULE_HSSL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   405   *     IfxHssl_enableHsslChannelErrorInterruptFlag(hssl, channelId_0, IfxHssl_Hssl_ERRInterruptSource_transactionTagError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   406   *     IfxHssl_enableHsslChannelErrorInterruptFlag(hssl, channelId_0, IfxHssl_Hssl_ERRInterruptSource_timeoutError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   407   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   408   *     // enable the HSSL ERR interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   409   *     IfxHssl_enableHsslERRInterrupt(hssl, channelId_0, IfxSrc_Tos_cpu0, 8);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   410   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   411   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   412   * you can define the ISR of your own and service the interrupt, please refer to more general usage of interrupts \ref IfxLld_Cpu_Irq_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   413   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   414   * some additional APIs to clear, disable interrupt flags and get flag status are also available.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   415   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   416   * \defgroup IfxLld_Hssl_Hssl HSSL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   417   * \ingroup IfxLld_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   418   * \defgroup IfxLld_Hssl_Hssl_DataStructures Data Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   419   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   420   * \defgroup IfxLld_Hssl_Hssl_Enumerations Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   421   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   422   * \defgroup IfxLld_Hssl_Hssl_ModuleFunctions Module Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   423   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   424   * \defgroup IfxLld_Hssl_Hssl_ChannelFunctions Channel Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   425   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   426   * \defgroup IfxLld_Hssl_Hssl_SimpleCom Simple Communication
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   427   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   428   * \defgroup IfxLld_Hssl_Hssl_ErrorHandling Error Handling
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   429   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   430   * \defgroup IfxLld_Hssl_Hssl_StreamingCom Streaming Communication
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   431   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   432   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   434  #ifndef IFXHSSL_HSSL_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   435  #define IFXHSSL_HSSL_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   436  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   437  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   438  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   439  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   440  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   441  #include "Hssl/Std/IfxHssl.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   442  #include "Port/Std/IfxPort.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   443  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   444  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   445  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   446  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   447  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   448  /** \addtogroup IfxLld_Hssl_Hssl_Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   449   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   450  /** \brief frame request selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   451   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   452  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   453  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   454      IfxHssl_Hssl_FrameRequest_readFrame    = 1,  /**< \brief read frame rquest */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   455      IfxHssl_Hssl_FrameRequest_writeFrame   = 2,  /**< \brief write frame rquest */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   456      IfxHssl_Hssl_FrameRequest_triggerFrame = 3,  /**< \brief trigger frame rquest */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   457      IfxHssl_Hssl_FrameRequest_readId       = 4,  /**< \brief read id request */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   458      IfxHssl_Hssl_FrameRequest_noAction     = 5   /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   459  } IfxHssl_Hssl_FrameRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   461  /** \brief module status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   462   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   463  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   464  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   465      IfxHssl_Hssl_Status_ok    = 0, /**< \brief status ok */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   466      IfxHssl_Hssl_Status_busy  = 1, /**< \brief status busy */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   467      IfxHssl_Hssl_Status_error = 2  /**< \brief status error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   468  } IfxHssl_Hssl_Status;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   469  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   470  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   471  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   472  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   473  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   474  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   475  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   476  /** \addtogroup IfxLld_Hssl_Hssl_DataStructures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   477   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   478  /** \brief structure for access windows
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   479   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   480  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   481  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   482      uint32 start;       /**< \brief start of the access */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   483      uint32 end;         /**< \brief end of the access */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   484  } IfxHssl_Hssl_AccessWindow;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   485  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   486  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   487  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   488  /** \brief structure for error flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   489   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   490  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   491  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   492      uint8 notAcknowledgeError : 1;        /**< \brief not acknowledge error / tag error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   493      uint8 transactionTagError : 1;        /**< \brief transaction tag error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   494      uint8 timeoutError : 1;               /**< \brief timeout error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   495      uint8 unexpectedError : 1;            /**< \brief unexpected type of frame error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   496      uint8 memoryAccessViolation : 1;      /**< \brief memory access violation */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   497      uint8 busAccessError : 1;             /**< \brief SRI/SPB bus access error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   498      uint8 channelNumberCodeError : 1;     /**< \brief PHY inconsistency error 1 (channel number code error) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   499      uint8 dataLengthError : 1;            /**< \brief PHY inconsistency error 2 (data length error) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   500      uint8 crcError : 1;                   /**< \brief CRC error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   501  } IfxHssl_Hssl_errorFlags;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   503  /** \addtogroup IfxLld_Hssl_Hssl_DataStructures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   504   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   505  /** \brief HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   506   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   507  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   508  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   509      Ifx_HSSL               *hssl;             /**< \brief pointer to HSSL register */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   510      IfxHssl_Hssl_errorFlags errorFlags;       /**< \brief structure for error flags */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   511      boolean                 loopBack;         /**< \brief loop back (enable / disable) for streaming transfers within the microcontroller */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   512  } IfxHssl_Hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   513  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   514  /** \brief channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   515   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   516  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   517  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   518      Ifx_HSSL                 *hssl;                      /**< \brief pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   519      Ifx_HSCT                 *hsct;                      /**< \brief pointer to HSCT registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   520      IfxHssl_ChannelId         channelId;                 /**< \brief channel number (id) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   521      IfxHssl_Hssl_FrameRequest currentFrameRequest;       /**< \brief current frame request */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   522      IfxHssl_StreamingMode     streamingMode;             /**< \brief streaming mode selection ( single / continuous ) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   523      boolean                   loopBack;                  /**< \brief loopback (enable / disable) for streaming transfers within the microcontroller */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   524      boolean                   streamingModeOn;           /**< \brief streaming mode or command mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   525  } IfxHssl_Hssl_Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   526  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   527  /** \brief configuration structure for channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   528   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   529  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   530  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   531      Ifx_HSSL             *hssl;                /**< \brief pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   532      Ifx_HSCT             *hsct;                /**< \brief pointer to HSCT registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   533      IfxHssl_ChannelId     channelId;           /**< \brief channel number (id) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   534      IfxHssl_StreamingMode streamingMode;       /**< \brief streaming mode selection ( single / continuous ) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   535      boolean               loopBack;            /**< \brief loop back (enable / disable) for streaming transfers within the microcontroller */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   536  } IfxHssl_Hssl_ChannelConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   537  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   538  /** \brief configuration structure of the HSSL module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   539   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   540  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   541  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   542      Ifx_HSSL                 *hssl;                /**< \brief pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   543      IfxHssl_Hssl_AccessWindow accessWindow0;       /**< \brief access window of channel 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   544      IfxHssl_Hssl_AccessWindow accessWindow1;       /**< \brief access window of channel 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   545      IfxHssl_Hssl_AccessWindow accessWindow2;       /**< \brief access window of channel 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   546      IfxHssl_Hssl_AccessWindow accessWindow3;       /**< \brief access window of channel 3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   547      uint16                    preDivider;          /**< \brief Defines the down-scaled module clock to be used by all channel timeout timers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   548  } IfxHssl_Hssl_Config;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   550  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   551  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   552  /** \addtogroup IfxLld_Hssl_Hssl_ModuleFunctions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   553   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   554  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   555  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   556  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   557  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   558  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   559  /** \brief Initialises the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   560   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   561   * \param config configuration structure of the HSCT module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   562   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   563   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   564   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   565   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   566   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   567  IFX_EXTERN void IfxHssl_Hssl_initHsctModule(IfxHssl_Hsct *hsct, const IfxHssl_Hsct_Config *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   568  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   569  /** \brief Fills the config structure with default values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   570   * \param config configuration structure of the HSCT module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   571   * \param hsct pointer to HSCT register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   572   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   573   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   574   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   575   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   576   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   577  IFX_EXTERN void IfxHssl_Hssl_initHsctModuleConfig(IfxHssl_Hsct_Config *config, Ifx_HSCT *hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   579  /** \brief Initialises the Hssl module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   580   * \param hssl HSSL handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   581   * \param config configuration structure of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   582   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   583   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   584   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   585   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   586   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   587  IFX_EXTERN void IfxHssl_Hssl_initHsslModule(IfxHssl_Hssl *hssl, const IfxHssl_Hssl_Config *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   588  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   589  /** \brief Fills the config structure with default values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   590   * \param config configuration structure of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   591   * \param hssl pointer to HSSL registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   592   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   593   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   594   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   595   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   596   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   597  IFX_EXTERN void IfxHssl_Hssl_initHsslModuleConfig(IfxHssl_Hssl_Config *config, Ifx_HSSL *hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   599  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   600  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   601  /** \addtogroup IfxLld_Hssl_Hssl_ChannelFunctions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   602   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   603  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   604  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   605  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   606  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   607  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   608  /** \brief Initialises the channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   609   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   610   * \param channelConfig configuration structure for channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   611   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   612   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   613   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   614   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   615   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   616  IFX_EXTERN void IfxHssl_Hssl_initChannel(IfxHssl_Hssl_Channel *channel, const IfxHssl_Hssl_ChannelConfig *channelConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   617  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   618  /** \brief Fills the channel config structure with default values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   619   * \param channelConfig configuration structure for channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   620   * \param hssl HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   621   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   622   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   623   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   624   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   625   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   627  IFX_EXTERN void IfxHssl_Hssl_initChannelConfig(IfxHssl_Hssl_ChannelConfig *channelConfig, IfxHssl_Hssl *hssl, IfxHssl_Hsct *hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   629  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   630  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   631  /** \addtogroup IfxLld_Hssl_Hssl_SimpleCom
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   632   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   633  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   634  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   635  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   636  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   637  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   638  /** \brief reads and returs the data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   639   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   640   * \return data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   641   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   642   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   643   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   644   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   645  IFX_INLINE uint32 IfxHssl_Hssl_getReadData(IfxHssl_Hssl_Channel *channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   646  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   647  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   648  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   649  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   650  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   651  /** \brief Initiates read request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   652   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   653   * \param address address of the location from where the data is to be read
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   654   * \param dataLength length of the data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   655   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   656   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   657   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   658   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   659   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   660  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_read(IfxHssl_Hssl_Channel *channel, uint32 address, IfxHssl_DataLength dataLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   661  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   662  /** \brief sends a predefined command from master to slave
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   663   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   664   * \param command command value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   665   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   666   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   667   * Usage Example:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   668   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   669   *     // enable slave Tx channel (Rx disable to Rx low peed)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   670   *     IfxHssl_Hssl_sendControlCommand(&channel, IfxHssl_ControlCommand_enableReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   671   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   672   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   673   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   674  IFX_EXTERN void IfxHssl_Hssl_sendControlCommand(IfxHssl_Hsct *hsct, uint8 command);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   675  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   676  /** \brief serves the frame request (read, write, trigger frame and read id)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   677   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   678   * \param frameRequest frame request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   679   * \param address address of the location (to be written into / read from)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   680   * \param data data to be written
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   681   * \param dataLength length of the data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   682   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   683   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   684  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_singleFrameRequest(IfxHssl_Hssl_Channel *channel, IfxHssl_Hssl_FrameRequest frameRequest, uint32 address, uint32 data, IfxHssl_DataLength dataLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   686  /** \brief waits until the current transaction is done
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   687   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   688   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   689   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   690   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   691   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   692   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   693  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_waitAcknowledge(IfxHssl_Hssl_Channel *channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   694  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   695  /** \brief writes single frame of data into the specified address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   696   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   697   * \param address address of the location where the data is to be written
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   698   * \param data data that needs to be written
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   699   * \param dataLength length of the data (8, 16, 32 bit)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   700   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   701   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   702   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   703   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   704   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   705  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_write(IfxHssl_Hssl_Channel *channel, uint32 address, uint32 data, IfxHssl_DataLength dataLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   706  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   707  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   708  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   709  /** \addtogroup IfxLld_Hssl_Hssl_ErrorHandling
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   710   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   711  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   712  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   713  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   714  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   715  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   716  /** \brief stores the status of errors in the respective members of the error flags structure
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   717   * \param hssl HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   718   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   719   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   720  IFX_EXTERN void IfxHssl_Hssl_checkErrors(IfxHssl_Hssl *hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   721  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   722  /** \brief clears the status of members in the error flags structure
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   723   * \param hssl HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   724   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   725   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   726  IFX_EXTERN void IfxHssl_Hssl_clearErrorFlags(IfxHssl_Hssl *hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   727  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   728  /** \brief a simple software delay
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   729   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   730   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   731   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   732  IFX_EXTERN void IfxHssl_Hssl_delay(IfxHssl_Hsct *hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   733  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   734  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   735  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   736  /** \addtogroup IfxLld_Hssl_Hssl_StreamingCom
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   737   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   738  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   739  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   740  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   741  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   742  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   743  /** \brief Prepares the target device for streaming
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   744   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   745   * \param slaveTargetAddress address of the location on target device where the data needs to be transfered
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   746   * \param count Frame count (length of the data in the memory as 256 bytes per frame)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   747   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   748   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   749   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   750   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   751   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   752  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_prepareStream(IfxHssl_Hssl_Channel *channel, uint32 slaveTargetAddress, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   754  /** \brief transfers one memory block of data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   755   * useful for transfering huge data from one location to another and between devices.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   756   * NOTE: This function should be called only for IfxHssl_ChannelId_2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   757   * \param hssl HSSL handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   758   * \param data starting address of the location to be read from (memory block 0 / HSSL_ISSA0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   759   * \param count Frame count (length of the data in the memory as 256 bytes per frame)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   760   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   761   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   762   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   763   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   764   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   765  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_writeStream(IfxHssl_Hssl *hssl, uint32 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   766  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   767  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   768  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   769  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   770  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   771  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   773  IFX_INLINE uint32 IfxHssl_Hssl_getReadData(IfxHssl_Hssl_Channel *channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   774  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   775      Ifx_HSSL_I *hsslI = (Ifx_HSSL_I *)&channel->hssl->I[channel->channelId];
	ld.a	a2,[a15]
.L721:
	ld.bu	d15,[a15]8
.L353:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   388   is enabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   389          if ((IfxHssl_Hssl_getReadData(channel) & (0x00070100)) != 0x00070100)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   390          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   391              /* enable streaming mode (single) of channel 2 on target device */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   392              IfxHssl_Hssl_singleFrameRequest(channel, IfxHssl_Hssl_FrameRequest_writeFrame, (uint32)&channel->hssl->CFG, 0x00070100, IfxHssl_DataLength_32bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   393  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   394              while (IfxHssl_Hssl_waitAcknowledge(channel) != IfxHssl_Hssl_Status_ok)
	mov	d6,#256
.L355:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     2   * \file IfxHssl_Hssl.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     3   * \brief HSSL HSSL details
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     4   * \ingroup IfxLld_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    45   * \defgroup IfxLld_Hssl_Hssl_Usage How to use the HSSL Interface driver?
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    46   * \ingroup IfxLld_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    47   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    48   * The HSSL interface driver provides a default HSSL/HSCT configuration for point to point communication at two transfer speeds, 5MBaud (low speed) and 320MBaud (high speed).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    49   * It also supports streaming transfers of data a memory block at both low and high speeds.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    50   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    51   * In the following sections it will be described, how to integrate the driver into the application framework.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    52   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    53   * \section IfxLld_Hssl_Hssl_Preparation Preparation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    54   * \subsection IfxLld_Hssl_Hssl_Include Include Files
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    55   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    56   * Include following header file into your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    57   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    58   *     #include <Hssl/Hssl/IfxHssl_Hssl.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    59   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    60   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    61   * \subsection IfxLld_Hssl_Hssl_Variables Variables
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    62   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    63   * Declare the HSSL handle, HSCT handle and channel array as global variables in your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    64   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    65   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    66   *     // used globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    67   *     static IfxHssl_Hssl hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    68   *     static IfxHssl_Hsct hsct;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    69   *     IfxHssl_Hssl_Channel hsslChannel[4];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    70   *     __attribute__ ((aligned(256))) uint32 txData[80]; // needs to be declared globally in case of streaming transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    71   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    72   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    73   * \subsection IfxLld_Hssl_Hssl_InitModule Module Initialisation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    74   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    75   * The module initialisation can be done as follows:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    76   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    77   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    78   *     // create module config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    79   *     IfxHssl_Hsct_Config hsctConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    80   *     IfxHssl_Hssl_initHsctModuleConfig(&hsctConfig, &MODULE_HSCT);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    81   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    82   *     // select the interface mode (in case of slave)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    83   *     hsctConfig.interfaceMode = IfxHssl_InterfaceMode_slave;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    84   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    85   *     // select the high speed mode if required
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    86   *     hsctConfig.highSpeedMode = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    87   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    88   *     // initialize module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    89   *     // IfxHssl_Hsct hsct;  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    90   *     IfxHssl_Hssl_initHsctModule(&hsct, &hsctConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    91   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    92   *     // create module config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    93   *     IfxHssl_Hssl_Config hsslConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    94   *     IfxHssl_Hssl_initHsslModuleConfig(&hsslConfig, &MODULE_HSSL);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    95   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    96   *     // IfxHssl_Hssl hssl;  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    97   *     IfxHssl_Hssl_initHsslModule(&hssl, &hsslConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    98   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    99   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   100   * If application intends to explicitly configure the pins for HSCT module IFXHSSL_HSCT_DISABLE_PINCONFIG macro should be defined in the application.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   101   * The explicit pin assignment should be done prior to IfxHssl_Hssl_initHsctModule().
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   102   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   103   * \subsection IfxLld_Hssl_Hssl_InitChannel Channel Initialisation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   104   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   105   * The Channel initialisation can be done as follows:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   106   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   107   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   108   *     // create HSSL channel config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   109   *     IfxHssl_Hssl_ChannelConfig hsslChannelConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   110   *     IfxHssl_Hssl_initChannelConfig(&hsslChannelConfig, &hssl, &hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   111   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   112   *     // initialize the channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   113   *     // IfxHssl_Hssl_Channel hsslChannel[4];  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   114   *     for(int i=0; i<4; ++i)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   115   *     {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   116   *         hsslChannelConfig.channelId = (IfxHssl_ChannelId)i;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   117   *         IfxHssl_Hssl_initChannel(&hsslChannel[i], &hsslChannelConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   118   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   119   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   120   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   121   * \subsection IfxLld_Hssl_Hssl_LinkSpeed Changing HSCT link speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   122   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   123   * The link speed change can be done as follows
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   124   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   125   * As per the above settings the HSCT master is in High speed reception and transmission.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   126   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   127   * The pseudo code for setting the target to High speed is as below
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   128   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   129   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   130   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   131   *      // Set the Tx link speed of the master to Low speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   132   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_lowSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   133   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   134   *      // Enable reception at the Slave
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   135   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_enableReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   136   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   137   *      // Send interface commmand to change Rx to High speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   138   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_highSpeedReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   139   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   140   *      // Send interface commmand to change Tx to High speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   141   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_highSpeedTransmission);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   142   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   143   *      // Set the Tx link speed of the master to High speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   144   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_highSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   145   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   146   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   147   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   148   * The pseudo code for setitng the target to Low speed from High speed (ie. if hsctConfig.highSpeedMode is set to TRUE).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   149   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   150   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   151   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   152   *      // Set the Tx link speed of master to Low speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   153   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_lowSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   154   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   155   *      // Send interface command to change Rx to low speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   156   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_lowSpeedReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   157   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   158   *      // Set the Rx link speed of master to Low speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   159   *      IfxHssl_setHsctRxLinkSpeed(&hsct, IfxHssl_MasterModeRxSpeed_lowSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   160   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   161   *      // Send interface command to change Tx to low speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   162   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_lowSpeedTransmission);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   163   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   164   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   165   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   166   * The HSSL is ready for use now!
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   167   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   168   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   169   * \section IfxLld_Hssl_Hssl_DataTransfers Data Transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   170   * \subsection IfxLld_Hssl_Hssl_SimpleTransfers Simple Transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   171   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   172   * The HSSL driver provides simple to use data transfer functions,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   173   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   174   * It supports direct writing of 8/16/32 bit data from the initiator into a target's register, as well as reading a value from the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   175   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   176   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   177   *     // write some data to remote location:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   178   *     IfxHssl_Hssl_write(&hsslChannel[0], 0x70000000, 0x12345678, IfxHssl_DataLength_32bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   179   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   180   *     // wait for the acknowledgement
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   181   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) != IfxHssl_Hssl_Status_ok )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   182   *     {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   183   *         if( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) == IfxHssl_Hssl_Status_error )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   184   *           {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   185   *               IfxHssl_Hssl_checkErrors(&hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   186   *               break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   187   *           }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   188   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   189   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   190   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   191   * A simple to use receive function is available as well.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   192   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   193   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   194   *     // read some data from remote location:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   195   *     IfxHssl_Hssl_read(&hsslChannel[0], 0x70000000, IfxHssl_DataLength_32bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   196   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   197   *     // wait for the acknowledgement
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   198   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) != IfxHssl_Hssl_Status_ok )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   199   *     {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   200   *         if( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) == IfxHssl_Hssl_Status_error )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   201   *           {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   202   *               IfxHssl_Hssl_checkErrors(&hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   203   *               break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   204   *           }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   205   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   206   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   207   *     // read data from the register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   208   *     uint32 dataL = IfxHssl_Hssl_getReadData(&hsslChannel[0]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   209   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   210   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   211   * \subsection IfxLld_Hssl_Hssl_StreamingTransfers Streaming Transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   212   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   213   * HSSL driver also supports streaming transfers of data as a memory block at both low and high speeds.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   214   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   215   * Preparing the target for streaming with the desired memory location where the data needs to be transfered
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   216   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   217   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   218   *     // choose a channel other than channel2 for register access
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   219   *     // prepare streaming of single memory block
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   220   *     IfxHssl_Hssl_prepareStream(&hsslChannel[0], 0x70000000, 10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   221   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   222   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   223   * Stream the memory block
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   224   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   225   * Usage Example:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   226   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   227   *     // __attribute__ ((aligned(256))) uint32 txData[80];  expected to be declared globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   228   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   229   *     // for single block streaming transfer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   230   *     // change the txData address to global address before passing it to the API
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   231   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   232   *     // IfxHssl_Hssl_writeStream(&hssl, (uint32 *)IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), (uint32)txData),  10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   233   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   234   *     IfxHssl_Hssl_writeStream(&hssl, txData, 10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   235   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   236   *     // wait until the streaming is finished
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   237   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[2]) != IfxHssl_Hssl_Status_ok )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   238   *     {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   239   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   240   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   241   * \subsection IfxLld_Hssl_Hssl_DMAOperatedCommandQueues DMA Operated Command Queues
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   242   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   243   * It makes sense to do this from outside the driver, by initialising the DMA after HSSL, and send command queues through linked lists
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   244   * here is an example of how to use DMA operated command queues.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   245   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   246   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   247   * Include following header files into your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   248   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   249   *     #include <Hssl/Hssl/IfxHssl_Hssl.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   250   *     #include <Dma/Dma/IfxDma_Dma.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   251   *     #include <Scu/Std/IfxScuWdt.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   252   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   253   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   254   * Declare the HSSL handle, HSCT handle, HSSL channel handle and DMA channel handle as global variables in your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   255   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   256   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   257   *     // used globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   258   *     static IfxHssl_Hssl hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   259   *     static IfxHssl_Hsct hsct;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   260   *     IfxHssl_Hssl_Channel hsslChannel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   261   *     // DMA channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   262   *     IfxDma_Dma_Channel chn;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   263   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   264   *     // Linked List storage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   265   *     // IMPORTANT: it has to be aligned to an 64bit address, otherwise DMA can't read it
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   266   *     #define NUM_LINKED_LIST_ITEMS 3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   267   *     __attribute__ ((aligned(64))) Ifx_DMA_CH linkedList[NUM_LINKED_LIST_ITEMS] ;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   268   *     // transfer these values to channel 0 : HSSL_IWD0, HSSL_ICON0, HSSL_IRWA0 registers via linked lists
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   269   *     #define NUM_TRANSFERED_WORDS 3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   270   *     // three write command queues with different data and to different addresses on slave
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   271   *     uint32 sourceBuffer[NUM_LINKED_LIST_ITEMS][NUM_TRANSFERED_WORDS] = {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   272   *         {0xC0CAC01A, 0xFF0A0000, 0x70000000},
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   273   *         {0xBA5EBA11, 0xFF0A0000, 0x70000010},
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   274   *         {0xDEADBEEF, 0xFF0A0000, 0x70000020}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   275   *     };
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   276   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   277   *     // three command queues to the same channel 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   278   *     const uint32 destinationAddresses[NUM_LINKED_LIST_ITEMS] = {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   279   *         (uint32)&HSSL_I0_IWD,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   280   *         (uint32)&HSSL_I0_IWD,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   281   *         (uint32)&HSSL_I0_IWD
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   282   *     };
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   283   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   284   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   285   * Initialise the hssl module, see \ref IfxLld_Hssl_Hssl_InitModule
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   286   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   287   * Initialise the hssl channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   288   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   289   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   290   *     // create HSSL channel config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   291   *     IfxHssl_Hssl_ChannelConfig hsslChannelConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   292   *     IfxHssl_Hssl_initChannelConfig(&hsslChannelConfig, &hssl, &hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   293   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   294   *     // initialize the channel 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   295   *     // IfxHssl_Hssl_Channel hsslChannel;  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   296   *     hsslChannelConfig.channelId = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   297   *     IfxHssl_Hssl_initChannel(&hsslChannel, &hsslChannelConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   298   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   299   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   300   * Build a linked list
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   301   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   302   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   303   *     // create module config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   304   *     IfxDma_Dma_Config dmaConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   305   *     IfxDma_Dma_initModuleConfig(&dmaConfig, &MODULE_DMA);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   306   *     // initialize module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   307   *     IfxDma_Dma dma;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   308   *     IfxDma_Dma_initModule(&dma, &dmaConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   309   *     // initial channel configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   310   *     IfxDma_Dma_ChannelConfig cfg;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   311   *     IfxDma_Dma_initChannelConfig(&cfg, &dma);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   312   *     // following settings are used by all transactions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   313   *     cfg.transferCount = NUM_TRANSFERED_WORDS;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   314   *     cfg.requestMode = IfxDma_ChannelRequestMode_completeTransactionPerRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   315   *     cfg.moveSize = IfxDma_ChannelMoveSize_32bit;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   316   *     cfg.shadowControl = IfxDma_ChannelShadow_linkedList;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   317   *     // generate linked list items
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   318   *     for(int i=0; i<NUM_LINKED_LIST_ITEMS; ++i) {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   319   *         cfg.sourceAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   320   *         cfg.destinationAddress = destinationAddresses[i];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   321   *         // address to next transaction set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   322   *         cfg.shadowAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), (uint32)&linkedList[(i + 1) % NUM_LINKED_LIST_ITEMS]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   323   *         // transfer first transaction set into DMA channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   324   *         if( i == 0 ) {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   325   *             IfxDma_Dma_initChannel(&chn, &cfg);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   326   *         }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   327   *         // transfer into linked list storage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   328   *         IfxDma_Dma_initLinkedListEntry((void *)&linkedList[i], &cfg);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   329   *         if( i == 0 ) {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   330   *             // - trigger channel interrupt once the first transaction set has been loaded (again) into DMA channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   331   *             linkedList[i].CHCSR.B.SIT = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   332   *         } else {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   333   *          // - activate SCH (transaction request) for each entry, expect for the first one (linked list terminated here)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   334   *             linkedList[i].CHCSR.B.SCH = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   335   *         }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   336   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   337   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   338   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   339   * The transfer can be started via software with:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   340   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   341   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   342   *     // clear service request flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   343   *     (IfxDma_Dma_getSrcPointer(&chn))->B.CLRR = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   344   *     // start linked list transaction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   345   *     IfxDma_Dma_startChannelTransaction(&chn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   346   *     // wait for service request which is triggered at the end of linked list transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   347   *     while( !(IfxDma_Dma_getSrcPointer(&chn))->B.SRR );
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   348   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   349   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   350   * \subsection IfxLld_Hssl_Hssl_Interrupts Interrupts usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   351   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   352   * Interrupts can be enabled from the application by using the APIs provided in the driver,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   353   * there are APIs available in the driver to enable, disable, clear and read the status of interrupt falgs, along with these,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   354   * APIs to enable the the enterrupts are also available.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   355   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   356   * here is an example of how to use the interrupts in HSSL driver.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   357   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   358   * Using HSCT interrupts
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   359   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   360   * After initialising HSCT module \ref IfxLld_Hssl_Hssl_InitModule
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   361   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   362   * choose what flags needs to be enabled for HSCT interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   363   * and after choosing all the flags needed, enable the HSCT interrupt with desired type of service and priority.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   364   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   365   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   366   *     Ifx_HSCT *hsct = &MODULE_HSCT;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   367   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_headerError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   368   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_payloadError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   369   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_commandError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   370   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_speedModeSwitchError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   371   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   372   *     // enable the HSCT interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   373   *     IfxHssl_enableHsctInterrupt(hsct, IfxSrc_Tos_cpu0, 4);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   374   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   375   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   376   * Using HSSl interrupts
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   377   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   378   * HSSL global error interrupt (EXI)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   379   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   380   * After initilaising HSSL module \ref IfxLld_Hssl_Hssl_InitModule
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   381   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   382   * choose what flags needs to be enabled for HSSL global error (EXI) interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   383   * and after choosing all the flags needed, enable the HSSL EXI interrupt with desired type of service and priority
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   384   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   385   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   386   *     Ifx_HSSL *hssl = &MODULE_HSSL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   387   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_busAccessError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   388   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_dataLengthError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   389   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_crcError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   390   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   391   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   392   *     // enable the HSSL EXI interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   393   *     IfxHssl_enableHsslEXIInterrupt(hssl, IfxSrc_Tos_cpu0, 6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   394   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   395   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   396   * HSSL channel specific error interrupt (ERR)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   397   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   398   * After initilaising HSSL channel \ref IfxLld_Hssl_Hssl_InitChannel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   399   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   400   * choose what flags needs to be enabled for HSSL channel specific error (ERR) interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   401   * and after choosing all the flags needed, enable the HSSL ERR interrupt with desired channel, type of service and priority
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   402   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   403   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   404   *     Ifx_HSSL *hssl = &MODULE_HSSL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   405   *     IfxHssl_enableHsslChannelErrorInterruptFlag(hssl, channelId_0, IfxHssl_Hssl_ERRInterruptSource_transactionTagError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   406   *     IfxHssl_enableHsslChannelErrorInterruptFlag(hssl, channelId_0, IfxHssl_Hssl_ERRInterruptSource_timeoutError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   407   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   408   *     // enable the HSSL ERR interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   409   *     IfxHssl_enableHsslERRInterrupt(hssl, channelId_0, IfxSrc_Tos_cpu0, 8);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   410   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   411   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   412   * you can define the ISR of your own and service the interrupt, please refer to more general usage of interrupts \ref IfxLld_Cpu_Irq_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   413   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   414   * some additional APIs to clear, disable interrupt flags and get flag status are also available.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   415   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   416   * \defgroup IfxLld_Hssl_Hssl HSSL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   417   * \ingroup IfxLld_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   418   * \defgroup IfxLld_Hssl_Hssl_DataStructures Data Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   419   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   420   * \defgroup IfxLld_Hssl_Hssl_Enumerations Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   421   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   422   * \defgroup IfxLld_Hssl_Hssl_ModuleFunctions Module Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   423   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   424   * \defgroup IfxLld_Hssl_Hssl_ChannelFunctions Channel Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   425   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   426   * \defgroup IfxLld_Hssl_Hssl_SimpleCom Simple Communication
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   427   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   428   * \defgroup IfxLld_Hssl_Hssl_ErrorHandling Error Handling
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   429   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   430   * \defgroup IfxLld_Hssl_Hssl_StreamingCom Streaming Communication
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   431   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   432   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   434  #ifndef IFXHSSL_HSSL_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   435  #define IFXHSSL_HSSL_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   436  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   437  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   438  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   439  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   440  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   441  #include "Hssl/Std/IfxHssl.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   442  #include "Port/Std/IfxPort.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   443  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   444  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   445  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   446  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   447  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   448  /** \addtogroup IfxLld_Hssl_Hssl_Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   449   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   450  /** \brief frame request selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   451   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   452  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   453  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   454      IfxHssl_Hssl_FrameRequest_readFrame    = 1,  /**< \brief read frame rquest */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   455      IfxHssl_Hssl_FrameRequest_writeFrame   = 2,  /**< \brief write frame rquest */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   456      IfxHssl_Hssl_FrameRequest_triggerFrame = 3,  /**< \brief trigger frame rquest */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   457      IfxHssl_Hssl_FrameRequest_readId       = 4,  /**< \brief read id request */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   458      IfxHssl_Hssl_FrameRequest_noAction     = 5   /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   459  } IfxHssl_Hssl_FrameRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   461  /** \brief module status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   462   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   463  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   464  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   465      IfxHssl_Hssl_Status_ok    = 0, /**< \brief status ok */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   466      IfxHssl_Hssl_Status_busy  = 1, /**< \brief status busy */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   467      IfxHssl_Hssl_Status_error = 2  /**< \brief status error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   468  } IfxHssl_Hssl_Status;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   469  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   470  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   471  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   472  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   473  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   474  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   475  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   476  /** \addtogroup IfxLld_Hssl_Hssl_DataStructures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   477   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   478  /** \brief structure for access windows
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   479   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   480  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   481  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   482      uint32 start;       /**< \brief start of the access */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   483      uint32 end;         /**< \brief end of the access */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   484  } IfxHssl_Hssl_AccessWindow;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   485  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   486  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   487  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   488  /** \brief structure for error flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   489   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   490  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   491  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   492      uint8 notAcknowledgeError : 1;        /**< \brief not acknowledge error / tag error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   493      uint8 transactionTagError : 1;        /**< \brief transaction tag error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   494      uint8 timeoutError : 1;               /**< \brief timeout error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   495      uint8 unexpectedError : 1;            /**< \brief unexpected type of frame error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   496      uint8 memoryAccessViolation : 1;      /**< \brief memory access violation */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   497      uint8 busAccessError : 1;             /**< \brief SRI/SPB bus access error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   498      uint8 channelNumberCodeError : 1;     /**< \brief PHY inconsistency error 1 (channel number code error) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   499      uint8 dataLengthError : 1;            /**< \brief PHY inconsistency error 2 (data length error) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   500      uint8 crcError : 1;                   /**< \brief CRC error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   501  } IfxHssl_Hssl_errorFlags;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   503  /** \addtogroup IfxLld_Hssl_Hssl_DataStructures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   504   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   505  /** \brief HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   506   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   507  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   508  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   509      Ifx_HSSL               *hssl;             /**< \brief pointer to HSSL register */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   510      IfxHssl_Hssl_errorFlags errorFlags;       /**< \brief structure for error flags */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   511      boolean                 loopBack;         /**< \brief loop back (enable / disable) for streaming transfers within the microcontroller */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   512  } IfxHssl_Hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   513  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   514  /** \brief channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   515   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   516  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   517  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   518      Ifx_HSSL                 *hssl;                      /**< \brief pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   519      Ifx_HSCT                 *hsct;                      /**< \brief pointer to HSCT registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   520      IfxHssl_ChannelId         channelId;                 /**< \brief channel number (id) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   521      IfxHssl_Hssl_FrameRequest currentFrameRequest;       /**< \brief current frame request */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   522      IfxHssl_StreamingMode     streamingMode;             /**< \brief streaming mode selection ( single / continuous ) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   523      boolean                   loopBack;                  /**< \brief loopback (enable / disable) for streaming transfers within the microcontroller */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   524      boolean                   streamingModeOn;           /**< \brief streaming mode or command mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   525  } IfxHssl_Hssl_Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   526  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   527  /** \brief configuration structure for channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   528   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   529  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   530  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   531      Ifx_HSSL             *hssl;                /**< \brief pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   532      Ifx_HSCT             *hsct;                /**< \brief pointer to HSCT registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   533      IfxHssl_ChannelId     channelId;           /**< \brief channel number (id) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   534      IfxHssl_StreamingMode streamingMode;       /**< \brief streaming mode selection ( single / continuous ) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   535      boolean               loopBack;            /**< \brief loop back (enable / disable) for streaming transfers within the microcontroller */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   536  } IfxHssl_Hssl_ChannelConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   537  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   538  /** \brief configuration structure of the HSSL module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   539   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   540  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   541  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   542      Ifx_HSSL                 *hssl;                /**< \brief pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   543      IfxHssl_Hssl_AccessWindow accessWindow0;       /**< \brief access window of channel 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   544      IfxHssl_Hssl_AccessWindow accessWindow1;       /**< \brief access window of channel 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   545      IfxHssl_Hssl_AccessWindow accessWindow2;       /**< \brief access window of channel 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   546      IfxHssl_Hssl_AccessWindow accessWindow3;       /**< \brief access window of channel 3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   547      uint16                    preDivider;          /**< \brief Defines the down-scaled module clock to be used by all channel timeout timers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   548  } IfxHssl_Hssl_Config;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   550  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   551  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   552  /** \addtogroup IfxLld_Hssl_Hssl_ModuleFunctions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   553   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   554  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   555  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   556  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   557  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   558  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   559  /** \brief Initialises the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   560   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   561   * \param config configuration structure of the HSCT module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   562   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   563   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   564   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   565   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   566   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   567  IFX_EXTERN void IfxHssl_Hssl_initHsctModule(IfxHssl_Hsct *hsct, const IfxHssl_Hsct_Config *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   568  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   569  /** \brief Fills the config structure with default values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   570   * \param config configuration structure of the HSCT module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   571   * \param hsct pointer to HSCT register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   572   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   573   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   574   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   575   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   576   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   577  IFX_EXTERN void IfxHssl_Hssl_initHsctModuleConfig(IfxHssl_Hsct_Config *config, Ifx_HSCT *hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   579  /** \brief Initialises the Hssl module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   580   * \param hssl HSSL handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   581   * \param config configuration structure of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   582   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   583   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   584   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   585   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   586   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   587  IFX_EXTERN void IfxHssl_Hssl_initHsslModule(IfxHssl_Hssl *hssl, const IfxHssl_Hssl_Config *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   588  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   589  /** \brief Fills the config structure with default values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   590   * \param config configuration structure of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   591   * \param hssl pointer to HSSL registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   592   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   593   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   594   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   595   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   596   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   597  IFX_EXTERN void IfxHssl_Hssl_initHsslModuleConfig(IfxHssl_Hssl_Config *config, Ifx_HSSL *hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   599  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   600  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   601  /** \addtogroup IfxLld_Hssl_Hssl_ChannelFunctions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   602   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   603  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   604  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   605  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   606  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   607  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   608  /** \brief Initialises the channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   609   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   610   * \param channelConfig configuration structure for channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   611   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   612   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   613   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   614   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   615   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   616  IFX_EXTERN void IfxHssl_Hssl_initChannel(IfxHssl_Hssl_Channel *channel, const IfxHssl_Hssl_ChannelConfig *channelConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   617  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   618  /** \brief Fills the channel config structure with default values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   619   * \param channelConfig configuration structure for channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   620   * \param hssl HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   621   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   622   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   623   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   624   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   625   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   627  IFX_EXTERN void IfxHssl_Hssl_initChannelConfig(IfxHssl_Hssl_ChannelConfig *channelConfig, IfxHssl_Hssl *hssl, IfxHssl_Hsct *hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   629  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   630  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   631  /** \addtogroup IfxLld_Hssl_Hssl_SimpleCom
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   632   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   633  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   634  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   635  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   636  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   637  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   638  /** \brief reads and returs the data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   639   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   640   * \return data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   641   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   642   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   643   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   644   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   645  IFX_INLINE uint32 IfxHssl_Hssl_getReadData(IfxHssl_Hssl_Channel *channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   646  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   647  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   648  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   649  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   650  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   651  /** \brief Initiates read request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   652   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   653   * \param address address of the location from where the data is to be read
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   654   * \param dataLength length of the data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   655   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   656   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   657   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   658   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   659   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   660  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_read(IfxHssl_Hssl_Channel *channel, uint32 address, IfxHssl_DataLength dataLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   661  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   662  /** \brief sends a predefined command from master to slave
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   663   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   664   * \param command command value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   665   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   666   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   667   * Usage Example:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   668   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   669   *     // enable slave Tx channel (Rx disable to Rx low peed)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   670   *     IfxHssl_Hssl_sendControlCommand(&channel, IfxHssl_ControlCommand_enableReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   671   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   672   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   673   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   674  IFX_EXTERN void IfxHssl_Hssl_sendControlCommand(IfxHssl_Hsct *hsct, uint8 command);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   675  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   676  /** \brief serves the frame request (read, write, trigger frame and read id)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   677   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   678   * \param frameRequest frame request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   679   * \param address address of the location (to be written into / read from)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   680   * \param data data to be written
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   681   * \param dataLength length of the data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   682   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   683   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   684  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_singleFrameRequest(IfxHssl_Hssl_Channel *channel, IfxHssl_Hssl_FrameRequest frameRequest, uint32 address, uint32 data, IfxHssl_DataLength dataLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   686  /** \brief waits until the current transaction is done
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   687   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   688   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   689   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   690   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   691   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   692   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   693  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_waitAcknowledge(IfxHssl_Hssl_Channel *channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   694  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   695  /** \brief writes single frame of data into the specified address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   696   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   697   * \param address address of the location where the data is to be written
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   698   * \param data data that needs to be written
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   699   * \param dataLength length of the data (8, 16, 32 bit)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   700   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   701   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   702   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   703   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   704   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   705  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_write(IfxHssl_Hssl_Channel *channel, uint32 address, uint32 data, IfxHssl_DataLength dataLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   706  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   707  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   708  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   709  /** \addtogroup IfxLld_Hssl_Hssl_ErrorHandling
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   710   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   711  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   712  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   713  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   714  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   715  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   716  /** \brief stores the status of errors in the respective members of the error flags structure
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   717   * \param hssl HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   718   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   719   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   720  IFX_EXTERN void IfxHssl_Hssl_checkErrors(IfxHssl_Hssl *hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   721  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   722  /** \brief clears the status of members in the error flags structure
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   723   * \param hssl HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   724   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   725   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   726  IFX_EXTERN void IfxHssl_Hssl_clearErrorFlags(IfxHssl_Hssl *hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   727  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   728  /** \brief a simple software delay
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   729   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   730   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   731   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   732  IFX_EXTERN void IfxHssl_Hssl_delay(IfxHssl_Hsct *hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   733  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   734  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   735  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   736  /** \addtogroup IfxLld_Hssl_Hssl_StreamingCom
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   737   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   738  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   739  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   740  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   741  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   742  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   743  /** \brief Prepares the target device for streaming
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   744   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   745   * \param slaveTargetAddress address of the location on target device where the data needs to be transfered
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   746   * \param count Frame count (length of the data in the memory as 256 bytes per frame)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   747   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   748   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   749   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   750   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   751   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   752  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_prepareStream(IfxHssl_Hssl_Channel *channel, uint32 slaveTargetAddress, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   754  /** \brief transfers one memory block of data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   755   * useful for transfering huge data from one location to another and between devices.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   756   * NOTE: This function should be called only for IfxHssl_ChannelId_2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   757   * \param hssl HSSL handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   758   * \param data starting address of the location to be read from (memory block 0 / HSSL_ISSA0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   759   * \param count Frame count (length of the data in the memory as 256 bytes per frame)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   760   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   761   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   762   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   763   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   764   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   765  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_writeStream(IfxHssl_Hssl *hssl, uint32 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   766  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   767  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   768  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   769  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   770  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   771  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   773  IFX_INLINE uint32 IfxHssl_Hssl_getReadData(IfxHssl_Hssl_Channel *channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   774  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   775      Ifx_HSSL_I *hsslI = (Ifx_HSSL_I *)&channel->hssl->I[channel->channelId];
	sha	d15,#4
.L722:
	addsc.a	a2,a2,d15,#0
.L356:
	addih	d6,d6,#7
.L357:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     2   * \file IfxHssl_Hssl.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     3   * \brief HSSL HSSL details
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     4   * \ingroup IfxLld_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    45   * \defgroup IfxLld_Hssl_Hssl_Usage How to use the HSSL Interface driver?
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    46   * \ingroup IfxLld_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    47   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    48   * The HSSL interface driver provides a default HSSL/HSCT configuration for point to point communication at two transfer speeds, 5MBaud (low speed) and 320MBaud (high speed).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    49   * It also supports streaming transfers of data a memory block at both low and high speeds.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    50   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    51   * In the following sections it will be described, how to integrate the driver into the application framework.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    52   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    53   * \section IfxLld_Hssl_Hssl_Preparation Preparation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    54   * \subsection IfxLld_Hssl_Hssl_Include Include Files
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    55   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    56   * Include following header file into your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    57   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    58   *     #include <Hssl/Hssl/IfxHssl_Hssl.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    59   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    60   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    61   * \subsection IfxLld_Hssl_Hssl_Variables Variables
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    62   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    63   * Declare the HSSL handle, HSCT handle and channel array as global variables in your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    64   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    65   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    66   *     // used globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    67   *     static IfxHssl_Hssl hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    68   *     static IfxHssl_Hsct hsct;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    69   *     IfxHssl_Hssl_Channel hsslChannel[4];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    70   *     __attribute__ ((aligned(256))) uint32 txData[80]; // needs to be declared globally in case of streaming transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    71   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    72   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    73   * \subsection IfxLld_Hssl_Hssl_InitModule Module Initialisation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    74   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    75   * The module initialisation can be done as follows:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    76   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    77   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    78   *     // create module config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    79   *     IfxHssl_Hsct_Config hsctConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    80   *     IfxHssl_Hssl_initHsctModuleConfig(&hsctConfig, &MODULE_HSCT);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    81   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    82   *     // select the interface mode (in case of slave)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    83   *     hsctConfig.interfaceMode = IfxHssl_InterfaceMode_slave;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    84   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    85   *     // select the high speed mode if required
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    86   *     hsctConfig.highSpeedMode = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    87   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    88   *     // initialize module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    89   *     // IfxHssl_Hsct hsct;  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    90   *     IfxHssl_Hssl_initHsctModule(&hsct, &hsctConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    91   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    92   *     // create module config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    93   *     IfxHssl_Hssl_Config hsslConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    94   *     IfxHssl_Hssl_initHsslModuleConfig(&hsslConfig, &MODULE_HSSL);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    95   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    96   *     // IfxHssl_Hssl hssl;  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    97   *     IfxHssl_Hssl_initHsslModule(&hssl, &hsslConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    98   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	    99   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   100   * If application intends to explicitly configure the pins for HSCT module IFXHSSL_HSCT_DISABLE_PINCONFIG macro should be defined in the application.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   101   * The explicit pin assignment should be done prior to IfxHssl_Hssl_initHsctModule().
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   102   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   103   * \subsection IfxLld_Hssl_Hssl_InitChannel Channel Initialisation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   104   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   105   * The Channel initialisation can be done as follows:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   106   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   107   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   108   *     // create HSSL channel config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   109   *     IfxHssl_Hssl_ChannelConfig hsslChannelConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   110   *     IfxHssl_Hssl_initChannelConfig(&hsslChannelConfig, &hssl, &hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   111   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   112   *     // initialize the channels
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   113   *     // IfxHssl_Hssl_Channel hsslChannel[4];  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   114   *     for(int i=0; i<4; ++i)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   115   *     {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   116   *         hsslChannelConfig.channelId = (IfxHssl_ChannelId)i;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   117   *         IfxHssl_Hssl_initChannel(&hsslChannel[i], &hsslChannelConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   118   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   119   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   120   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   121   * \subsection IfxLld_Hssl_Hssl_LinkSpeed Changing HSCT link speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   122   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   123   * The link speed change can be done as follows
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   124   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   125   * As per the above settings the HSCT master is in High speed reception and transmission.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   126   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   127   * The pseudo code for setting the target to High speed is as below
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   128   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   129   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   130   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   131   *      // Set the Tx link speed of the master to Low speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   132   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_lowSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   133   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   134   *      // Enable reception at the Slave
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   135   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_enableReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   136   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   137   *      // Send interface commmand to change Rx to High speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   138   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_highSpeedReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   139   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   140   *      // Send interface commmand to change Tx to High speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   141   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_highSpeedTransmission);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   142   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   143   *      // Set the Tx link speed of the master to High speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   144   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_highSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   145   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   146   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   147   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   148   * The pseudo code for setitng the target to Low speed from High speed (ie. if hsctConfig.highSpeedMode is set to TRUE).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   149   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   150   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   151   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   152   *      // Set the Tx link speed of master to Low speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   153   *      IfxHssl_setHsctTxLinkSpeed(&hsct , IfxHssl_MasterModeTxSpeed_lowSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   154   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   155   *      // Send interface command to change Rx to low speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   156   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_lowSpeedReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   157   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   158   *      // Set the Rx link speed of master to Low speed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   159   *      IfxHssl_setHsctRxLinkSpeed(&hsct, IfxHssl_MasterModeRxSpeed_lowSpeed);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   160   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   161   *      // Send interface command to change Tx to low speed at the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   162   *      IfxHssl_Hssl_sendControlCommand(&hsct,IfxHssl_ControlCommand_lowSpeedTransmission);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   163   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   164   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   165   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   166   * The HSSL is ready for use now!
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   167   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   168   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   169   * \section IfxLld_Hssl_Hssl_DataTransfers Data Transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   170   * \subsection IfxLld_Hssl_Hssl_SimpleTransfers Simple Transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   171   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   172   * The HSSL driver provides simple to use data transfer functions,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   173   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   174   * It supports direct writing of 8/16/32 bit data from the initiator into a target's register, as well as reading a value from the target
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   175   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   176   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   177   *     // write some data to remote location:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   178   *     IfxHssl_Hssl_write(&hsslChannel[0], 0x70000000, 0x12345678, IfxHssl_DataLength_32bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   179   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   180   *     // wait for the acknowledgement
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   181   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) != IfxHssl_Hssl_Status_ok )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   182   *     {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   183   *         if( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) == IfxHssl_Hssl_Status_error )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   184   *           {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   185   *               IfxHssl_Hssl_checkErrors(&hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   186   *               break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   187   *           }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   188   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   189   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   190   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   191   * A simple to use receive function is available as well.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   192   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   193   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   194   *     // read some data from remote location:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   195   *     IfxHssl_Hssl_read(&hsslChannel[0], 0x70000000, IfxHssl_DataLength_32bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   196   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   197   *     // wait for the acknowledgement
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   198   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) != IfxHssl_Hssl_Status_ok )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   199   *     {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   200   *         if( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[0]) == IfxHssl_Hssl_Status_error )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   201   *           {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   202   *               IfxHssl_Hssl_checkErrors(&hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   203   *               break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   204   *           }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   205   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   206   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   207   *     // read data from the register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   208   *     uint32 dataL = IfxHssl_Hssl_getReadData(&hsslChannel[0]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   209   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   210   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   211   * \subsection IfxLld_Hssl_Hssl_StreamingTransfers Streaming Transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   212   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   213   * HSSL driver also supports streaming transfers of data as a memory block at both low and high speeds.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   214   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   215   * Preparing the target for streaming with the desired memory location where the data needs to be transfered
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   216   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   217   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   218   *     // choose a channel other than channel2 for register access
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   219   *     // prepare streaming of single memory block
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   220   *     IfxHssl_Hssl_prepareStream(&hsslChannel[0], 0x70000000, 10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   221   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   222   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   223   * Stream the memory block
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   224   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   225   * Usage Example:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   226   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   227   *     // __attribute__ ((aligned(256))) uint32 txData[80];  expected to be declared globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   228   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   229   *     // for single block streaming transfer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   230   *     // change the txData address to global address before passing it to the API
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   231   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   232   *     // IfxHssl_Hssl_writeStream(&hssl, (uint32 *)IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), (uint32)txData),  10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   233   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   234   *     IfxHssl_Hssl_writeStream(&hssl, txData, 10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   235   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   236   *     // wait until the streaming is finished
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   237   *     while( IfxHssl_Hssl_waitAcknowledge(&hsslChannel[2]) != IfxHssl_Hssl_Status_ok )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   238   *     {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   239   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   240   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   241   * \subsection IfxLld_Hssl_Hssl_DMAOperatedCommandQueues DMA Operated Command Queues
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   242   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   243   * It makes sense to do this from outside the driver, by initialising the DMA after HSSL, and send command queues through linked lists
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   244   * here is an example of how to use DMA operated command queues.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   245   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   246   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   247   * Include following header files into your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   248   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   249   *     #include <Hssl/Hssl/IfxHssl_Hssl.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   250   *     #include <Dma/Dma/IfxDma_Dma.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   251   *     #include <Scu/Std/IfxScuWdt.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   252   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   253   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   254   * Declare the HSSL handle, HSCT handle, HSSL channel handle and DMA channel handle as global variables in your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   255   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   256   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   257   *     // used globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   258   *     static IfxHssl_Hssl hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   259   *     static IfxHssl_Hsct hsct;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   260   *     IfxHssl_Hssl_Channel hsslChannel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   261   *     // DMA channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   262   *     IfxDma_Dma_Channel chn;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   263   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   264   *     // Linked List storage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   265   *     // IMPORTANT: it has to be aligned to an 64bit address, otherwise DMA can't read it
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   266   *     #define NUM_LINKED_LIST_ITEMS 3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   267   *     __attribute__ ((aligned(64))) Ifx_DMA_CH linkedList[NUM_LINKED_LIST_ITEMS] ;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   268   *     // transfer these values to channel 0 : HSSL_IWD0, HSSL_ICON0, HSSL_IRWA0 registers via linked lists
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   269   *     #define NUM_TRANSFERED_WORDS 3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   270   *     // three write command queues with different data and to different addresses on slave
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   271   *     uint32 sourceBuffer[NUM_LINKED_LIST_ITEMS][NUM_TRANSFERED_WORDS] = {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   272   *         {0xC0CAC01A, 0xFF0A0000, 0x70000000},
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   273   *         {0xBA5EBA11, 0xFF0A0000, 0x70000010},
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   274   *         {0xDEADBEEF, 0xFF0A0000, 0x70000020}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   275   *     };
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   276   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   277   *     // three command queues to the same channel 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   278   *     const uint32 destinationAddresses[NUM_LINKED_LIST_ITEMS] = {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   279   *         (uint32)&HSSL_I0_IWD,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   280   *         (uint32)&HSSL_I0_IWD,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   281   *         (uint32)&HSSL_I0_IWD
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   282   *     };
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   283   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   284   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   285   * Initialise the hssl module, see \ref IfxLld_Hssl_Hssl_InitModule
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   286   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   287   * Initialise the hssl channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   288   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   289   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   290   *     // create HSSL channel config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   291   *     IfxHssl_Hssl_ChannelConfig hsslChannelConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   292   *     IfxHssl_Hssl_initChannelConfig(&hsslChannelConfig, &hssl, &hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   293   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   294   *     // initialize the channel 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   295   *     // IfxHssl_Hssl_Channel hsslChannel;  defined globally
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   296   *     hsslChannelConfig.channelId = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   297   *     IfxHssl_Hssl_initChannel(&hsslChannel, &hsslChannelConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   298   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   299   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   300   * Build a linked list
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   301   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   302   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   303   *     // create module config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   304   *     IfxDma_Dma_Config dmaConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   305   *     IfxDma_Dma_initModuleConfig(&dmaConfig, &MODULE_DMA);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   306   *     // initialize module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   307   *     IfxDma_Dma dma;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   308   *     IfxDma_Dma_initModule(&dma, &dmaConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   309   *     // initial channel configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   310   *     IfxDma_Dma_ChannelConfig cfg;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   311   *     IfxDma_Dma_initChannelConfig(&cfg, &dma);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   312   *     // following settings are used by all transactions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   313   *     cfg.transferCount = NUM_TRANSFERED_WORDS;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   314   *     cfg.requestMode = IfxDma_ChannelRequestMode_completeTransactionPerRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   315   *     cfg.moveSize = IfxDma_ChannelMoveSize_32bit;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   316   *     cfg.shadowControl = IfxDma_ChannelShadow_linkedList;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   317   *     // generate linked list items
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   318   *     for(int i=0; i<NUM_LINKED_LIST_ITEMS; ++i) {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   319   *         cfg.sourceAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   320   *         cfg.destinationAddress = destinationAddresses[i];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   321   *         // address to next transaction set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   322   *         cfg.shadowAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), (uint32)&linkedList[(i + 1) % NUM_LINKED_LIST_ITEMS]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   323   *         // transfer first transaction set into DMA channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   324   *         if( i == 0 ) {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   325   *             IfxDma_Dma_initChannel(&chn, &cfg);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   326   *         }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   327   *         // transfer into linked list storage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   328   *         IfxDma_Dma_initLinkedListEntry((void *)&linkedList[i], &cfg);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   329   *         if( i == 0 ) {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   330   *             // - trigger channel interrupt once the first transaction set has been loaded (again) into DMA channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   331   *             linkedList[i].CHCSR.B.SIT = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   332   *         } else {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   333   *          // - activate SCH (transaction request) for each entry, expect for the first one (linked list terminated here)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   334   *             linkedList[i].CHCSR.B.SCH = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   335   *         }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   336   *     }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   337   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   338   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   339   * The transfer can be started via software with:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   340   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   341   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   342   *     // clear service request flag
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   343   *     (IfxDma_Dma_getSrcPointer(&chn))->B.CLRR = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   344   *     // start linked list transaction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   345   *     IfxDma_Dma_startChannelTransaction(&chn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   346   *     // wait for service request which is triggered at the end of linked list transfers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   347   *     while( !(IfxDma_Dma_getSrcPointer(&chn))->B.SRR );
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   348   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   349   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   350   * \subsection IfxLld_Hssl_Hssl_Interrupts Interrupts usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   351   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   352   * Interrupts can be enabled from the application by using the APIs provided in the driver,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   353   * there are APIs available in the driver to enable, disable, clear and read the status of interrupt falgs, along with these,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   354   * APIs to enable the the enterrupts are also available.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   355   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   356   * here is an example of how to use the interrupts in HSSL driver.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   357   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   358   * Using HSCT interrupts
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   359   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   360   * After initialising HSCT module \ref IfxLld_Hssl_Hssl_InitModule
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   361   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   362   * choose what flags needs to be enabled for HSCT interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   363   * and after choosing all the flags needed, enable the HSCT interrupt with desired type of service and priority.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   364   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   365   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   366   *     Ifx_HSCT *hsct = &MODULE_HSCT;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   367   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_headerError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   368   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_payloadError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   369   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_commandError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   370   *     IfxHssl_enableHsctInterruptFlag(hsct, IfxHssl_Hsct_InterruptSource_speedModeSwitchError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   371   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   372   *     // enable the HSCT interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   373   *     IfxHssl_enableHsctInterrupt(hsct, IfxSrc_Tos_cpu0, 4);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   374   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   375   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   376   * Using HSSl interrupts
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   377   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   378   * HSSL global error interrupt (EXI)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   379   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   380   * After initilaising HSSL module \ref IfxLld_Hssl_Hssl_InitModule
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   381   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   382   * choose what flags needs to be enabled for HSSL global error (EXI) interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   383   * and after choosing all the flags needed, enable the HSSL EXI interrupt with desired type of service and priority
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   384   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   385   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   386   *     Ifx_HSSL *hssl = &MODULE_HSSL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   387   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_busAccessError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   388   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_dataLengthError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   389   *     IfxHssl_enableHsslGlobalErrorInterruptFlag(hssl, IfxHssl_Hssl_EXIInterruptSource_crcError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   390   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   391   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   392   *     // enable the HSSL EXI interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   393   *     IfxHssl_enableHsslEXIInterrupt(hssl, IfxSrc_Tos_cpu0, 6);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   394   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   395   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   396   * HSSL channel specific error interrupt (ERR)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   397   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   398   * After initilaising HSSL channel \ref IfxLld_Hssl_Hssl_InitChannel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   399   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   400   * choose what flags needs to be enabled for HSSL channel specific error (ERR) interrupt and call the following function once for each flag by choosing the right flag as parameter,\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   401   * and after choosing all the flags needed, enable the HSSL ERR interrupt with desired channel, type of service and priority
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   402   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   403   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   404   *     Ifx_HSSL *hssl = &MODULE_HSSL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   405   *     IfxHssl_enableHsslChannelErrorInterruptFlag(hssl, channelId_0, IfxHssl_Hssl_ERRInterruptSource_transactionTagError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   406   *     IfxHssl_enableHsslChannelErrorInterruptFlag(hssl, channelId_0, IfxHssl_Hssl_ERRInterruptSource_timeoutError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   407   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   408   *     // enable the HSSL ERR interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   409   *     IfxHssl_enableHsslERRInterrupt(hssl, channelId_0, IfxSrc_Tos_cpu0, 8);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   410   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   411   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   412   * you can define the ISR of your own and service the interrupt, please refer to more general usage of interrupts \ref IfxLld_Cpu_Irq_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   413   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   414   * some additional APIs to clear, disable interrupt flags and get flag status are also available.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   415   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   416   * \defgroup IfxLld_Hssl_Hssl HSSL
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   417   * \ingroup IfxLld_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   418   * \defgroup IfxLld_Hssl_Hssl_DataStructures Data Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   419   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   420   * \defgroup IfxLld_Hssl_Hssl_Enumerations Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   421   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   422   * \defgroup IfxLld_Hssl_Hssl_ModuleFunctions Module Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   423   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   424   * \defgroup IfxLld_Hssl_Hssl_ChannelFunctions Channel Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   425   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   426   * \defgroup IfxLld_Hssl_Hssl_SimpleCom Simple Communication
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   427   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   428   * \defgroup IfxLld_Hssl_Hssl_ErrorHandling Error Handling
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   429   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   430   * \defgroup IfxLld_Hssl_Hssl_StreamingCom Streaming Communication
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   431   * \ingroup IfxLld_Hssl_Hssl
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   432   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   434  #ifndef IFXHSSL_HSSL_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   435  #define IFXHSSL_HSSL_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   436  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   437  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   438  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   439  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   440  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   441  #include "Hssl/Std/IfxHssl.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   442  #include "Port/Std/IfxPort.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   443  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   444  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   445  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   446  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   447  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   448  /** \addtogroup IfxLld_Hssl_Hssl_Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   449   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   450  /** \brief frame request selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   451   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   452  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   453  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   454      IfxHssl_Hssl_FrameRequest_readFrame    = 1,  /**< \brief read frame rquest */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   455      IfxHssl_Hssl_FrameRequest_writeFrame   = 2,  /**< \brief write frame rquest */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   456      IfxHssl_Hssl_FrameRequest_triggerFrame = 3,  /**< \brief trigger frame rquest */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   457      IfxHssl_Hssl_FrameRequest_readId       = 4,  /**< \brief read id request */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   458      IfxHssl_Hssl_FrameRequest_noAction     = 5   /**< \brief no action */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   459  } IfxHssl_Hssl_FrameRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   461  /** \brief module status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   462   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   463  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   464  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   465      IfxHssl_Hssl_Status_ok    = 0, /**< \brief status ok */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   466      IfxHssl_Hssl_Status_busy  = 1, /**< \brief status busy */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   467      IfxHssl_Hssl_Status_error = 2  /**< \brief status error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   468  } IfxHssl_Hssl_Status;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   469  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   470  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   471  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   472  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   473  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   474  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   475  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   476  /** \addtogroup IfxLld_Hssl_Hssl_DataStructures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   477   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   478  /** \brief structure for access windows
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   479   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   480  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   481  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   482      uint32 start;       /**< \brief start of the access */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   483      uint32 end;         /**< \brief end of the access */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   484  } IfxHssl_Hssl_AccessWindow;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   485  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   486  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   487  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   488  /** \brief structure for error flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   489   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   490  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   491  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   492      uint8 notAcknowledgeError : 1;        /**< \brief not acknowledge error / tag error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   493      uint8 transactionTagError : 1;        /**< \brief transaction tag error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   494      uint8 timeoutError : 1;               /**< \brief timeout error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   495      uint8 unexpectedError : 1;            /**< \brief unexpected type of frame error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   496      uint8 memoryAccessViolation : 1;      /**< \brief memory access violation */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   497      uint8 busAccessError : 1;             /**< \brief SRI/SPB bus access error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   498      uint8 channelNumberCodeError : 1;     /**< \brief PHY inconsistency error 1 (channel number code error) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   499      uint8 dataLengthError : 1;            /**< \brief PHY inconsistency error 2 (data length error) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   500      uint8 crcError : 1;                   /**< \brief CRC error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   501  } IfxHssl_Hssl_errorFlags;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   502  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   503  /** \addtogroup IfxLld_Hssl_Hssl_DataStructures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   504   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   505  /** \brief HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   506   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   507  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   508  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   509      Ifx_HSSL               *hssl;             /**< \brief pointer to HSSL register */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   510      IfxHssl_Hssl_errorFlags errorFlags;       /**< \brief structure for error flags */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   511      boolean                 loopBack;         /**< \brief loop back (enable / disable) for streaming transfers within the microcontroller */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   512  } IfxHssl_Hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   513  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   514  /** \brief channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   515   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   516  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   517  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   518      Ifx_HSSL                 *hssl;                      /**< \brief pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   519      Ifx_HSCT                 *hsct;                      /**< \brief pointer to HSCT registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   520      IfxHssl_ChannelId         channelId;                 /**< \brief channel number (id) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   521      IfxHssl_Hssl_FrameRequest currentFrameRequest;       /**< \brief current frame request */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   522      IfxHssl_StreamingMode     streamingMode;             /**< \brief streaming mode selection ( single / continuous ) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   523      boolean                   loopBack;                  /**< \brief loopback (enable / disable) for streaming transfers within the microcontroller */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   524      boolean                   streamingModeOn;           /**< \brief streaming mode or command mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   525  } IfxHssl_Hssl_Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   526  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   527  /** \brief configuration structure for channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   528   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   529  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   530  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   531      Ifx_HSSL             *hssl;                /**< \brief pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   532      Ifx_HSCT             *hsct;                /**< \brief pointer to HSCT registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   533      IfxHssl_ChannelId     channelId;           /**< \brief channel number (id) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   534      IfxHssl_StreamingMode streamingMode;       /**< \brief streaming mode selection ( single / continuous ) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   535      boolean               loopBack;            /**< \brief loop back (enable / disable) for streaming transfers within the microcontroller */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   536  } IfxHssl_Hssl_ChannelConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   537  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   538  /** \brief configuration structure of the HSSL module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   539   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   540  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   541  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   542      Ifx_HSSL                 *hssl;                /**< \brief pointer to HSSL registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   543      IfxHssl_Hssl_AccessWindow accessWindow0;       /**< \brief access window of channel 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   544      IfxHssl_Hssl_AccessWindow accessWindow1;       /**< \brief access window of channel 1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   545      IfxHssl_Hssl_AccessWindow accessWindow2;       /**< \brief access window of channel 2 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   546      IfxHssl_Hssl_AccessWindow accessWindow3;       /**< \brief access window of channel 3 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   547      uint16                    preDivider;          /**< \brief Defines the down-scaled module clock to be used by all channel timeout timers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   548  } IfxHssl_Hssl_Config;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   550  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   551  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   552  /** \addtogroup IfxLld_Hssl_Hssl_ModuleFunctions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   553   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   554  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   555  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   556  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   557  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   558  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   559  /** \brief Initialises the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   560   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   561   * \param config configuration structure of the HSCT module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   562   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   563   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   564   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   565   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   566   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   567  IFX_EXTERN void IfxHssl_Hssl_initHsctModule(IfxHssl_Hsct *hsct, const IfxHssl_Hsct_Config *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   568  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   569  /** \brief Fills the config structure with default values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   570   * \param config configuration structure of the HSCT module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   571   * \param hsct pointer to HSCT register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   572   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   573   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   574   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   575   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   576   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   577  IFX_EXTERN void IfxHssl_Hssl_initHsctModuleConfig(IfxHssl_Hsct_Config *config, Ifx_HSCT *hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   579  /** \brief Initialises the Hssl module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   580   * \param hssl HSSL handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   581   * \param config configuration structure of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   582   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   583   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   584   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   585   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   586   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   587  IFX_EXTERN void IfxHssl_Hssl_initHsslModule(IfxHssl_Hssl *hssl, const IfxHssl_Hssl_Config *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   588  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   589  /** \brief Fills the config structure with default values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   590   * \param config configuration structure of the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   591   * \param hssl pointer to HSSL registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   592   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   593   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   594   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   595   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   596   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   597  IFX_EXTERN void IfxHssl_Hssl_initHsslModuleConfig(IfxHssl_Hssl_Config *config, Ifx_HSSL *hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   599  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   600  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   601  /** \addtogroup IfxLld_Hssl_Hssl_ChannelFunctions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   602   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   603  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   604  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   605  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   606  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   607  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   608  /** \brief Initialises the channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   609   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   610   * \param channelConfig configuration structure for channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   611   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   612   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   613   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   614   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   615   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   616  IFX_EXTERN void IfxHssl_Hssl_initChannel(IfxHssl_Hssl_Channel *channel, const IfxHssl_Hssl_ChannelConfig *channelConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   617  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   618  /** \brief Fills the channel config structure with default values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   619   * \param channelConfig configuration structure for channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   620   * \param hssl HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   621   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   622   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   623   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   624   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   625   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   627  IFX_EXTERN void IfxHssl_Hssl_initChannelConfig(IfxHssl_Hssl_ChannelConfig *channelConfig, IfxHssl_Hssl *hssl, IfxHssl_Hsct *hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   629  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   630  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   631  /** \addtogroup IfxLld_Hssl_Hssl_SimpleCom
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   632   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   633  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   634  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   635  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   636  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   637  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   638  /** \brief reads and returs the data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   639   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   640   * \return data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   641   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   642   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   643   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   644   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   645  IFX_INLINE uint32 IfxHssl_Hssl_getReadData(IfxHssl_Hssl_Channel *channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   646  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   647  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   648  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   649  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   650  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   651  /** \brief Initiates read request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   652   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   653   * \param address address of the location from where the data is to be read
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   654   * \param dataLength length of the data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   655   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   656   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   657   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   658   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   659   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   660  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_read(IfxHssl_Hssl_Channel *channel, uint32 address, IfxHssl_DataLength dataLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   661  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   662  /** \brief sends a predefined command from master to slave
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   663   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   664   * \param command command value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   665   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   666   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   667   * Usage Example:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   668   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   669   *     // enable slave Tx channel (Rx disable to Rx low peed)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   670   *     IfxHssl_Hssl_sendControlCommand(&channel, IfxHssl_ControlCommand_enableReception);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   671   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   672   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   673   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   674  IFX_EXTERN void IfxHssl_Hssl_sendControlCommand(IfxHssl_Hsct *hsct, uint8 command);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   675  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   676  /** \brief serves the frame request (read, write, trigger frame and read id)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   677   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   678   * \param frameRequest frame request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   679   * \param address address of the location (to be written into / read from)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   680   * \param data data to be written
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   681   * \param dataLength length of the data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   682   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   683   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   684  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_singleFrameRequest(IfxHssl_Hssl_Channel *channel, IfxHssl_Hssl_FrameRequest frameRequest, uint32 address, uint32 data, IfxHssl_DataLength dataLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   685  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   686  /** \brief waits until the current transaction is done
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   687   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   688   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   689   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   690   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   691   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   692   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   693  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_waitAcknowledge(IfxHssl_Hssl_Channel *channel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   694  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   695  /** \brief writes single frame of data into the specified address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   696   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   697   * \param address address of the location where the data is to be written
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   698   * \param data data that needs to be written
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   699   * \param dataLength length of the data (8, 16, 32 bit)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   700   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   701   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   702   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   703   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   704   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   705  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_write(IfxHssl_Hssl_Channel *channel, uint32 address, uint32 data, IfxHssl_DataLength dataLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   706  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   707  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   708  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   709  /** \addtogroup IfxLld_Hssl_Hssl_ErrorHandling
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   710   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   711  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   712  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   713  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   714  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   715  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   716  /** \brief stores the status of errors in the respective members of the error flags structure
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   717   * \param hssl HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   718   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   719   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   720  IFX_EXTERN void IfxHssl_Hssl_checkErrors(IfxHssl_Hssl *hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   721  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   722  /** \brief clears the status of members in the error flags structure
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   723   * \param hssl HSSL Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   724   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   725   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   726  IFX_EXTERN void IfxHssl_Hssl_clearErrorFlags(IfxHssl_Hssl *hssl);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   727  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   728  /** \brief a simple software delay
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   729   * \param hsct HSCT Handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   730   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   731   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   732  IFX_EXTERN void IfxHssl_Hssl_delay(IfxHssl_Hsct *hsct);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   733  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   734  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   735  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   736  /** \addtogroup IfxLld_Hssl_Hssl_StreamingCom
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   737   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   738  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   739  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   740  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   741  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   742  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   743  /** \brief Prepares the target device for streaming
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   744   * \param channel channel handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   745   * \param slaveTargetAddress address of the location on target device where the data needs to be transfered
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   746   * \param count Frame count (length of the data in the memory as 256 bytes per frame)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   747   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   748   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   749   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   750   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   751   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   752  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_prepareStream(IfxHssl_Hssl_Channel *channel, uint32 slaveTargetAddress, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   753  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   754  /** \brief transfers one memory block of data
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   755   * useful for transfering huge data from one location to another and between devices.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   756   * NOTE: This function should be called only for IfxHssl_ChannelId_2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   757   * \param hssl HSSL handle
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   758   * \param data starting address of the location to be read from (memory block 0 / HSSL_ISSA0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   759   * \param count Frame count (length of the data in the memory as 256 bytes per frame)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   760   * \return module status (ok, busy, error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   761   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   762   * A coding example can be found in \ref IfxLld_Hssl_Hssl_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   763   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   764   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   765  IFX_EXTERN IfxHssl_Hssl_Status IfxHssl_Hssl_writeStream(IfxHssl_Hssl *hssl, uint32 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   766  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   767  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   768  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   769  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   770  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   771  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   773  IFX_INLINE uint32 IfxHssl_Hssl_getReadData(IfxHssl_Hssl_Channel *channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   774  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   775      Ifx_HSSL_I *hsslI = (Ifx_HSSL_I *)&channel->hssl->I[channel->channelId];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.h	   776      return hsslI->IRD.U;    /* retutn the data read from the data register */
	ld.w	d15,[a2]60
.L358:
	and	d15,d6
.L723:
	jeq	d15,d6,.L40
.L724:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   395       {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   396                  if (IfxHssl_Hssl_waitAcknowledge(channel) == IfxHssl_Hssl_Status_error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   397                  {
	mov	d4,#2
	ld.w	d15,[a15]
.L725:
	mov	d7,d4
	mov.aa	a4,a15
.L430:
	add	d5,d15,#16
	call	IfxHssl_Hssl_singleFrameRequest
.L431:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   398                      return IfxHssl_Hssl_Status_error;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   399                  }
	j	.L41
.L42:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   400              }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   401          }
	mov.aa	a4,a15
.L432:
	call	IfxHssl_Hssl_waitAcknowledge
.L433:
	jeq	d2,#2,.L43
.L41:
	mov.aa	a4,a15
.L434:
	call	IfxHssl_Hssl_waitAcknowledge
.L435:
	jne	d2,#0,.L42
.L40:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   402  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   403          /* enable streaming on target device */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   404          IfxHssl_Hssl_singleFrameRequest(channel, IfxHssl_Hssl_FrameRequest_writeFrame, (uint32)&channel->hssl->MFLAGSSET, 0x10000000, IfxHssl_DataLength_32bit);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   405  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   406          while (IfxHssl_Hssl_waitAcknowledge(channel) != IfxHssl_Hssl_Status_ok)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   407          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   408              if (IfxHssl_Hssl_waitAcknowledge(channel) == IfxHssl_Hssl_Status_error)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   409              {
	mov	d4,#2
	ld.w	d15,[a15]
.L726:
	mov	d7,d4
	mov.aa	a4,a15
.L436:
	add	d5,d15,#28
.L727:
	movh	d6,#4096
	call	IfxHssl_Hssl_singleFrameRequest
.L437:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   410                  return IfxHssl_Hssl_Status_error;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   411              }
	j	.L44
.L45:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   412          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   413      }
	mov.aa	a4,a15
.L438:
	call	IfxHssl_Hssl_waitAcknowledge
.L439:
	jne	d2,#2,.L46

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   414  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   415      channel->streamingModeOn = TRUE;    /* for waitAcknowledge function */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   416      /* preperation was successful */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   417      return IfxHssl_Hssl_Status_ok;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   418  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   421  IfxHssl_Hssl_Status IfxHssl_Hssl_read(IfxHssl_Hssl_Channel *channel, uint32 address, IfxHssl_DataLength dataLength)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   422  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   423      uint32 data = 0;                                                                                                 /* not required, data will be read back */
.L43:
.L39:
.L35:
.L32:
.L29:
.L26:
.L23:
.L20:
	mov	d2,#2
	ret
.L46:
.L44:
	mov.aa	a4,a15
.L440:
	call	IfxHssl_Hssl_waitAcknowledge
.L441:
	jne	d2,#0,.L45
.L36:
	mov	d15,#1
	st.b	[a15]12,d15
.L728:
	ret
.L336:
	
__IfxHssl_Hssl_prepareStream_function_end:
	.size	IfxHssl_Hssl_prepareStream,__IfxHssl_Hssl_prepareStream_function_end-IfxHssl_Hssl_prepareStream
.L198:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_read',code,cluster('IfxHssl_Hssl_read')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_read'
	.align	2
	
	.global	IfxHssl_Hssl_read

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   424      return IfxHssl_Hssl_singleFrameRequest(channel, IfxHssl_Hssl_FrameRequest_readFrame, address, data, dataLength); /* initiate the read request */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   425  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   426  
; Function IfxHssl_Hssl_read
.L109:
IfxHssl_Hssl_read:	.type	func
	mov	d15,d4
.L444:
	mov	d7,d5
.L445:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   427  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   428  void IfxHssl_Hssl_sendControlCommand(IfxHssl_Hsct *hsct, uint8 command)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   429  {
	mov	d4,#1
.L442:
	mov	d6,#0
.L598:
	mov	d5,d15
.L443:
	j	IfxHssl_Hssl_singleFrameRequest
.L292:
	
__IfxHssl_Hssl_read_function_end:
	.size	IfxHssl_Hssl_read,__IfxHssl_Hssl_read_function_end-IfxHssl_Hssl_read
.L158:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_sendControlCommand',code,cluster('IfxHssl_Hssl_sendControlCommand')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_sendControlCommand'
	.align	2
	
	.global	IfxHssl_Hssl_sendControlCommand

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   430      Ifx_HSCT *hsctSFR = hsct->hsct;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   431  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   432      hsctSFR->IFCTRL.B.IFCVS = command; /* write the command into the register */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   433      hsctSFR->IFCTRL.B.SIFCV = 1;       /* activate the command */
; Function IfxHssl_Hssl_sendControlCommand
.L111:
IfxHssl_Hssl_sendControlCommand:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   434  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   435      IfxHssl_Hssl_delay(hsct);          /* wait until the change happens */
	ld.a	a15,[a4]
.L446:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   436  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   437  
	st.b	[a15]20,d4
.L603:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   438  
	ld.bu	d15,[a15]21
.L604:
	or	d15,#1
	st.b	[a15]21,d15
.L605:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   439  IfxHssl_Hssl_Status IfxHssl_Hssl_singleFrameRequest(IfxHssl_Hssl_Channel *channel, IfxHssl_Hssl_FrameRequest frameRequest, uint32 address, uint32 data, IfxHssl_DataLength dataLength)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   440  {
	j	IfxHssl_Hssl_delay
.L298:
	
__IfxHssl_Hssl_sendControlCommand_function_end:
	.size	IfxHssl_Hssl_sendControlCommand,__IfxHssl_Hssl_sendControlCommand_function_end-IfxHssl_Hssl_sendControlCommand
.L163:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_singleFrameRequest',code,cluster('IfxHssl_Hssl_singleFrameRequest')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_singleFrameRequest'
	.align	2
	
	.global	IfxHssl_Hssl_singleFrameRequest

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   441      Ifx_HSSL_I *hsslI = (Ifx_HSSL_I *)&channel->hssl->I[channel->channelId];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   442  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   443      if (channel->currentFrameRequest != IfxHssl_Hssl_FrameRequest_noAction)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   444      {
; Function IfxHssl_Hssl_singleFrameRequest
.L113:
IfxHssl_Hssl_singleFrameRequest:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   445          return IfxHssl_Hssl_Status_busy;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   446      }
	ld.a	a15,[a4]
.L610:
	ld.bu	d15,[a4]8
	sha	d15,#4
.L611:
	addsc.a	a15,a15,d15,#0
.L612:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   447  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   448      hsslI->ICON.B.DATLEN = dataLength;               /* 0x2 -> word size */
	ld.bu	d15,[a4]9
.L613:
	lea	a15,[a15]48
.L447:
	jeq	d15,#5,.L50
.L614:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   449      hsslI->ICON.B.TOREL  = 0xff;                     /* max reload value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   450  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   451      switch (frameRequest)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   452      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   453      case IfxHssl_Hssl_FrameRequest_readFrame:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   454          hsslI->ICON.B.RWT = IfxHssl_Command_readFrame;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   455          hsslI->IRWA.U     = address;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   456          break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   457      case IfxHssl_Hssl_FrameRequest_writeFrame:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   458          hsslI->ICON.B.RWT = IfxHssl_Command_writeFrame;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   459          hsslI->IWD.U      = data;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   460          hsslI->IRWA.U     = address;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   461          break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   462      case IfxHssl_Hssl_FrameRequest_triggerFrame:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   463          hsslI->ICON.B.RWT = IfxHssl_Command_triggerFrame;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   464          hsslI->IWD.U      = data;    /* dummy */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   465          hsslI->IRWA.U     = address; /* dummy */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   466          break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   467      case IfxHssl_Hssl_FrameRequest_readId:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   468          /* request an ID frame  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   469          hsslI->ICON.B.IDQ = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   470          break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   471      default:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   472          /* invalid request */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   473          return IfxHssl_Hssl_Status_error;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   474      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   475  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   476      channel->currentFrameRequest = frameRequest;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   477  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   478      return IfxHssl_Hssl_Status_ok;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   479  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   480  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   481  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   482  IfxHssl_Hssl_Status IfxHssl_Hssl_waitAcknowledge(IfxHssl_Hssl_Channel *channel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   483  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   484      uint32            requestType = channel->currentFrameRequest;
	mov	d2,#1
	ret
.L50:
	ld.bu	d15,[a15]6
.L615:
	insert	d15,d15,d7,#0,#2
	st.b	[a15]6,d15
.L616:
	mov	d15,#255
	st.b	[a15]7,d15
.L617:
	jeq	d4,#1,.L52
.L618:
	mov	d2,#2
	jeq	d4,#2,.L53
.L619:
	jeq	d4,#3,.L54
.L620:
	jeq	d4,#4,.L55
.L621:
	ret
.L52:
	ld.bu	d15,[a15]6
.L622:
	insert	d15,d15,#1,#2,#2
	st.b	[a15]6,d15
.L623:
	j	.L57
.L53:
	ld.bu	d15,[a15]6
.L624:
	insert	d15,d15,#2,#2,#2
	j	.L58
.L54:
	ld.bu	d15,[a15]6
.L625:
	or	d15,#12
.L58:
	st.b	[a15]6,d15
.L626:
	st.w	[a15],d6
.L57:
	st.w	[a15]8,d5
.L627:
	j	.L59
.L55:
	ld.bu	d15,[a15]4
.L628:
	or	d15,#1
	st.b	[a15]4,d15
.L59:
	st.b	[a4]9,d4
.L629:
	mov	d2,#0
	ret
.L303:
	
__IfxHssl_Hssl_singleFrameRequest_function_end:
	.size	IfxHssl_Hssl_singleFrameRequest,__IfxHssl_Hssl_singleFrameRequest_function_end-IfxHssl_Hssl_singleFrameRequest
.L168:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_waitAcknowledge',code,cluster('IfxHssl_Hssl_waitAcknowledge')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_waitAcknowledge'
	.align	2
	
	.global	IfxHssl_Hssl_waitAcknowledge

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   485      IfxHssl_ChannelId channelId   = channel->channelId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   486  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   487      if ((channelId == IfxHssl_ChannelId_2) && (channel->hssl->CFG.B.SCM == 1))
; Function IfxHssl_Hssl_waitAcknowledge
.L115:
IfxHssl_Hssl_waitAcknowledge:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   488      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   489          while (channel->hssl->MFLAGS.B.ISB)
	ld.bu	d15,[a4]9
.L634:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   490          {
	ld.bu	d4,[a4]8
.L635:
	mov	d0,d15
.L448:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   491              /* transfer in progress */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   492          }
	jne	d4,#2,.L63
.L636:
	ld.a	a15,[a4]
.L637:
	ld.bu	d1,[a15]18
.L638:
	jz.t	d1:2,.L64

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   493      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   494      else
.L65:
	ld.bu	d15,[a15]26
.L639:
	jnz.t	d15:4,.L65
.L640:
	j	.L66
.L64:
.L63:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   495      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   496          if (channel->currentFrameRequest == IfxHssl_Hssl_FrameRequest_writeFrame)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   497          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   498              requestType = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   499          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   500  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   501          /* expect a read frame when requestType == IfxHssl_Hssl_FrameRequest_readId */
	eq	d1,d15,#2
	ld.a	a15,[a4]
.L641:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   502          if ((channel->currentFrameRequest == IfxHssl_Hssl_FrameRequest_readFrame) || (channel->currentFrameRequest == IfxHssl_Hssl_FrameRequest_readId))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   503          {
	seln	d0,d1,d0,#1
.L642:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   504              requestType = 2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   505          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   506  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   507          if (channel->currentFrameRequest == IfxHssl_Hssl_FrameRequest_triggerFrame)
	jeq	d15,#1,.L68
.L643:
	jne	d15,#4,.L69
.L68:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   508          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   509              requestType = 3;
	mov	d0,#2
.L69:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   510          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   511  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   512          uint32 qFlags               = channel->hssl->QFLAGS.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   513          uint32 mFlags               = channel->hssl->MFLAGS.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   514          uint32 acknwoledgeFlagsMask = ((requestType << (16 + (channel->channelId * 2))) | (1 << channel->channelId));
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   515          uint32 errorFlagsMask       = ((0x03E00000) | (4369 << channel->channelId)); /* all the possible errors */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   516  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   517          if (channel->hssl->I[channelId].ICON.B.BSY == 1)
	eq	d15,d15,#3
	ld.w	d1,[a15]20
.L316:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   518          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   519              return IfxHssl_Hssl_Status_busy;
	sha	d2,d4,#1
	ld.w	d5,[a15]24
.L317:
	cmov	d0,d15,#3
.L318:
	add	d2,d2,#16
.L644:
	sh	d0,d0,d2
.L449:
	mov	d2,#1
.L645:
	sha	d2,d2,d4
.L452:
	or	d0,d2
.L646:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   520          }
	mov	d2,#4369
.L647:
	sha	d2,d2,d4
.L648:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   521  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   522          if (qFlags & acknwoledgeFlagsMask)     /* transfer in progress? */
	sha	d4,#4
.L649:
	addsc.a	a15,a15,d4,#0
.L650:
	movh	d3,#992
.L651:
	ld.bu	d15,[a15]54
.L453:
	or	d2,d3
.L652:
	jnz.t	d15:4,.L71
.L653:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   523          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   524              return IfxHssl_Hssl_Status_busy;   /* return busy status in case of no error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   525          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   526  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   527          if (mFlags & errorFlagsMask)           /* check for errors */
	and	d1,d0
.L450:
	jeq	d1,#0,.L72

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   528          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   529              channel->currentFrameRequest = IfxHssl_Hssl_FrameRequest_noAction;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   530              return IfxHssl_Hssl_Status_error;  /* return error status in case of an error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   531          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   533          /* transfer is finished */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   534          channel->currentFrameRequest = IfxHssl_Hssl_FrameRequest_noAction;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   535      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   536  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   537      return IfxHssl_Hssl_Status_ok;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   538  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   539  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   540  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   541  IfxHssl_Hssl_Status IfxHssl_Hssl_write(IfxHssl_Hssl_Channel *channel, uint32 address, uint32 data, IfxHssl_DataLength dataLength)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   542  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   543      return IfxHssl_Hssl_singleFrameRequest(channel, IfxHssl_Hssl_FrameRequest_writeFrame, address, data, dataLength);
.L71:
	mov	d2,#1
	ret
.L72:
	and	d5,d2
.L451:
	jeq	d5,#0,.L74
.L654:
	mov	d15,#5
	st.b	[a4]9,d15
.L655:
	mov	d2,#2
	ret
.L74:
	mov	d15,#5
	st.b	[a4]9,d15
.L66:
	mov	d2,#0
	ret
.L312:
	
__IfxHssl_Hssl_waitAcknowledge_function_end:
	.size	IfxHssl_Hssl_waitAcknowledge,__IfxHssl_Hssl_waitAcknowledge_function_end-IfxHssl_Hssl_waitAcknowledge
.L173:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_write',code,cluster('IfxHssl_Hssl_write')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_write'
	.align	2
	
	.global	IfxHssl_Hssl_write

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   544  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   545  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   546  
; Function IfxHssl_Hssl_write
.L117:
IfxHssl_Hssl_write:	.type	func
	mov	d15,d4
.L457:
	mov	d0,d5
.L458:
	mov	d7,d6
.L459:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   547  IfxHssl_Hssl_Status IfxHssl_Hssl_writeStream(IfxHssl_Hssl *hssl, uint32 *data, Ifx_SizeT count)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   548  {
	mov	d4,#2
.L454:
	mov	d5,d15
.L455:
	mov	d6,d0
.L456:
	j	IfxHssl_Hssl_singleFrameRequest
.L323:
	
__IfxHssl_Hssl_write_function_end:
	.size	IfxHssl_Hssl_write,__IfxHssl_Hssl_write_function_end-IfxHssl_Hssl_write
.L178:
	; End of function
	
	.sdecl	'.text.IfxHssl_Hssl.IfxHssl_Hssl_writeStream',code,cluster('IfxHssl_Hssl_writeStream')
	.sect	'.text.IfxHssl_Hssl.IfxHssl_Hssl_writeStream'
	.align	2
	
	.global	IfxHssl_Hssl_writeStream

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   549      Ifx_HSSL             *hsslSFR       = hssl->hssl;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   550      Ifx_HSSL_IS          *hsslIS        = (Ifx_HSSL_IS *)&hsslSFR->IS;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   551      IfxHssl_StreamingMode streamingMode = IfxHssl_StreamingMode_single;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   552  
; Function IfxHssl_Hssl_writeStream
.L119:
IfxHssl_Hssl_writeStream:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   553      /* single memory block streaming */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   554      hsslIS->SA[0].U                              = (uint32)data;  /* initiator start address to memeroy block 0 */
	ld.a	a15,[a4]
.L460:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   555  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   556      hsslIS->FC.B.RELCOUNT                        = count;         /* memory count into initiator reload count register */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   557  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   558      hsslSFR->CFG.B.SCM                           = 1;             /* enable streaming mode of channel 2 on the initiator */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   559      hsslSFR->CFG.B.SMT                           = streamingMode; /* set transmitter streaming mode ( single / continuous ) on the initiator */
	mov.d	d15,a5
.L461:
	st.w	[a15]160,d15
.L733:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   560      hsslSFR->CFG.B.SMR                           = streamingMode; /* set receiver streaming mode ( single / continuous ) on the initiator */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   561      /* streaming is supported only on IfxHssl_ChannelId_2 */
	st.h	[a15]172,d4
.L734:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   562      hsslSFR->I[IfxHssl_ChannelId_2].ICON.B.TOREL = 0xff;          /* set the transmitter reload value to 0xff.*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   563  
	ld.bu	d15,[a15]18
.L462:
	or	d15,#4
	st.b	[a15]18,d15
.L735:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   564      /* incase of transfers within the device(loopback on) */
	ld.bu	d15,[a15]18
.L736:
	or	d15,#1
	st.b	[a15]18,d15
.L737:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   565      if (hssl->loopBack)
	ld.bu	d15,[a15]18
.L738:
	or	d15,#2
	st.b	[a15]18,d15
.L739:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   566      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   567          hsslSFR->MFLAGSSET.B.TSES = 1; /* enable target */
	mov	d15,#255
	st.b	[a15]87,d15
.L740:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   568      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   570      /* initiate the transfer */
	ld.bu	d15,[a4]6
.L741:
	jeq	d15,#0,.L78
.L742:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   571      hsslSFR->MFLAGSSET.B.ISBS = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   572  
	ld.bu	d15,[a15]31
.L743:
	or	d15,#16
	st.b	[a15]31,d15
.L78:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   573      /* streaming started */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   574      return IfxHssl_Hssl_Status_ok;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Hssl\Hssl\IfxHssl_Hssl.c	   575  }

	ld.bu	d15,[a15]30
.L744:


	mov	d2,#0
.L745:


	or	d15,#16


	st.b	[a15]30,d15
.L746:


	ret
.L359:
	
__IfxHssl_Hssl_writeStream_function_end:
	.size	IfxHssl_Hssl_writeStream,__IfxHssl_Hssl_writeStream_function_end-IfxHssl_Hssl_writeStream
.L203:
	; End of function
	
	.calls	'IfxHssl_Hssl_initHsctModule','IfxPort_setPinMode'
	.calls	'IfxHssl_Hssl_initHsctModule','IfxPort_setPinPadDriver'
	.calls	'IfxHssl_Hssl_initHsctModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxHssl_Hssl_initHsctModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxHssl_Hssl_initHsctModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxHssl_Hssl_initHsctModule','IfxHssl_enableHsctModule'
	.calls	'IfxHssl_Hssl_initHsslModule','IfxHssl_enableHsslModule'
	.calls	'IfxHssl_Hssl_prepareStream','IfxHssl_Hssl_singleFrameRequest'
	.calls	'IfxHssl_Hssl_prepareStream','IfxHssl_Hssl_waitAcknowledge'
	.calls	'IfxHssl_Hssl_prepareStream','IfxHssl_Hssl_read'
	.calls	'IfxHssl_Hssl_read','IfxHssl_Hssl_singleFrameRequest'
	.calls	'IfxHssl_Hssl_sendControlCommand','IfxHssl_Hssl_delay'
	.calls	'IfxHssl_Hssl_write','IfxHssl_Hssl_singleFrameRequest'
	.calls	'IfxHssl_Hssl_initHsctModule','.cocofun_4'
	.calls	'IfxHssl_Hssl_initHsctModule','.cocofun_1'
	.calls	'IfxHssl_Hssl_initHsctModule','.cocofun_2'
	.calls	'IfxHssl_Hssl_initHsctModule','.cocofun_3'
	.calls	'.cocofun_1','.cocofun_4'
	.calls	'IfxHssl_Hssl_checkErrors','',0
	.calls	'IfxHssl_Hssl_clearErrorFlags','',0
	.calls	'IfxHssl_Hssl_delay','',0
	.calls	'IfxHssl_Hssl_initChannel','',0
	.calls	'IfxHssl_Hssl_initChannelConfig','',0
	.calls	'IfxHssl_Hssl_initHsctModule','',0
	.calls	'.cocofun_4','',0
	.calls	'.cocofun_3','',0
	.calls	'.cocofun_2','',0
	.calls	'.cocofun_1','',0
	.calls	'IfxHssl_Hssl_initHsctModuleConfig','',0
	.calls	'IfxHssl_Hssl_initHsslModule','',0
	.calls	'IfxHssl_Hssl_initHsslModuleConfig','',0
	.calls	'IfxHssl_Hssl_prepareStream','',0
	.calls	'IfxHssl_Hssl_read','',0
	.calls	'IfxHssl_Hssl_sendControlCommand','',0
	.calls	'IfxHssl_Hssl_singleFrameRequest','',0
	.calls	'IfxHssl_Hssl_waitAcknowledge','',0
	.calls	'IfxHssl_Hssl_write','',0
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxHssl_enableHsctModule
	.extern	IfxHssl_enableHsslModule
	.extern	IfxPort_setPinMode
	.extern	IfxPort_setPinPadDriver
	.calls	'IfxHssl_Hssl_writeStream','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L121:
	.word	62942
	.half	3
	.word	.L122
	.byte	4
.L120:
	.byte	1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L123
	.byte	2,1,1,3
	.word	181
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	184
	.byte	6,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	229
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	241
	.byte	6,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	321
	.byte	8
	.byte	'__ld64',0,3,2,135,1,19
	.word	295
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	327
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	327
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	295
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5
.L300:
	.byte	7
	.byte	'unsigned char',0,1,8,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,45,16,4,11
	.byte	'SRPN',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	436
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	436
	.byte	2,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	436
	.byte	3,0,2,35,1,11
	.byte	'ECC',0,1
	.word	436
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	436
	.byte	2,0,2,35,2,11
	.byte	'SRR',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	436
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	436
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	436
	.byte	1,0,2,35,3,0,12,4,70,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	453
	.byte	4,2,35,0,0,14
	.word	743
	.byte	3
	.word	782
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,3,250,1,17,1,1,5
	.byte	'src',0,3,250,1,60
	.word	787
	.byte	6,0,4
	.byte	'IfxSrc_enable',0,3,3,140,2,17,1,1,5
	.byte	'src',0,3,140,2,54
	.word	787
	.byte	6,0,15,5,69,9,1,16
	.byte	'IfxSrc_Tos_cpu0',0,0,16
	.byte	'IfxSrc_Tos_cpu1',0,1,16
	.byte	'IfxSrc_Tos_dma',0,3,0
.L264:
	.byte	7
	.byte	'unsigned short int',0,2,7,4
	.byte	'IfxSrc_init',0,3,3,146,2,17,1,1,5
	.byte	'src',0,3,146,2,52
	.word	787
	.byte	5
	.byte	'typOfService',0,3,146,2,68
	.word	872
	.byte	5
	.byte	'priority',0,3,146,2,95
	.word	931
	.byte	17,6,0,0,10
	.byte	'_Ifx_P_OUT_Bits',0,7,143,3,16,4,11
	.byte	'P0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	436
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	436
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	436
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	16,0,2,35,2,0,12,7,181,5,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1030
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,7,169,2,16,4,11
	.byte	'PS0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	436
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	436
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	436
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	436
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	436
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	436
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	436
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	436
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	436
	.byte	1,0,2,35,3,0,12,7,133,5,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1346
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,7,110,16,4,11
	.byte	'MODREV',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	931
	.byte	16,0,2,35,2,0,12,7,148,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1917
	.byte	4,2,35,0,0,18,4
	.word	436
	.byte	19,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,7,140,1,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	436
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	436
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	436
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	436
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	436
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	436
	.byte	5,0,2,35,3,0,12,7,164,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2045
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,7,166,1,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	436
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	436
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	436
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	436
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	436
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	436
	.byte	5,0,2,35,3,0,12,7,180,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2260
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,7,179,1,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	436
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	436
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	436
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	436
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	436
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	436
	.byte	5,0,2,35,3,0,12,7,188,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2475
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,7,153,1,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	436
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	436
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	436
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	436
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	436
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	436
	.byte	5,0,2,35,3,0,12,7,172,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2692
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,7,118,16,4,11
	.byte	'P0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	436
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	436
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	436
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	16,0,2,35,2,0,12,7,156,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2912
	.byte	4,2,35,0,0,18,24
	.word	436
	.byte	19,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,7,205,3,16,4,11
	.byte	'PD0',0,1
	.word	436
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	436
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'PD2',0,1
	.word	436
	.byte	3,5,2,35,1,11
	.byte	'PL2',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'PD3',0,1
	.word	436
	.byte	3,1,2,35,1,11
	.byte	'PL3',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'PD4',0,1
	.word	436
	.byte	3,5,2,35,2,11
	.byte	'PL4',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'PD5',0,1
	.word	436
	.byte	3,1,2,35,2,11
	.byte	'PL5',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'PD6',0,1
	.word	436
	.byte	3,5,2,35,3,11
	.byte	'PL6',0,1
	.word	436
	.byte	1,4,2,35,3,11
	.byte	'PD7',0,1
	.word	436
	.byte	3,1,2,35,3,11
	.byte	'PL7',0,1
	.word	436
	.byte	1,0,2,35,3,0,12,7,205,5,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3235
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,7,226,3,16,4,11
	.byte	'PD8',0,1
	.word	436
	.byte	3,5,2,35,0,11
	.byte	'PL8',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'PD9',0,1
	.word	436
	.byte	3,1,2,35,0,11
	.byte	'PL9',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'PD10',0,1
	.word	436
	.byte	3,5,2,35,1,11
	.byte	'PL10',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'PD11',0,1
	.word	436
	.byte	3,1,2,35,1,11
	.byte	'PL11',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'PD12',0,1
	.word	436
	.byte	3,5,2,35,2,11
	.byte	'PL12',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'PD13',0,1
	.word	436
	.byte	3,1,2,35,2,11
	.byte	'PL13',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'PD14',0,1
	.word	436
	.byte	3,5,2,35,3,11
	.byte	'PL14',0,1
	.word	436
	.byte	1,4,2,35,3,11
	.byte	'PD15',0,1
	.word	436
	.byte	3,1,2,35,3,11
	.byte	'PL15',0,1
	.word	436
	.byte	1,0,2,35,3,0,12,7,213,5,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3539
	.byte	4,2,35,0,0,18,8
	.word	436
	.byte	19,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,7,88,16,4,11
	.byte	'EN0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	436
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	436
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	436
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	16,0,2,35,2,0,12,7,140,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3864
	.byte	4,2,35,0,0,18,12
	.word	436
	.byte	19,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,7,183,3,16,4,11
	.byte	'PDIS0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	436
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	436
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	436
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	16,0,2,35,2,0,12,7,197,5,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4204
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,7,165,3,16,4,11
	.byte	'SEL0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	436
	.byte	2,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	413
	.byte	19,1,2,35,0,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,12,7,189,5,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4570
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,7,206,2,16,4,11
	.byte	'PS0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	413
	.byte	28,0,2,35,0,0,12,7,149,5,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4856
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,7,227,2,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	413
	.byte	24,0,2,35,0,0,12,7,165,5,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5003
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,7,238,2,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	413
	.byte	20,0,2,35,0,0,12,7,173,5,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5172
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,7,216,2,16,4,11
	.byte	'reserved_0',0,2
	.word	931
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	436
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	436
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	436
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	16,0,2,35,2,0,12,7,157,5,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5344
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,7,232,1,16,4,11
	.byte	'reserved_0',0,2
	.word	931
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	931
	.byte	12,0,2,35,2,0,12,7,229,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5519
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,7,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	413
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	436
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	436
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	436
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	8,0,2,35,3,0,12,7,245,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5693
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,7,136,2,16,4,11
	.byte	'reserved_0',0,4
	.word	413
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	436
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	436
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	436
	.byte	4,0,2,35,3,0,12,7,253,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5867
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,7,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	413
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	436
	.byte	1,0,2,35,3,0,12,7,237,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6043
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,7,249,2,16,4,11
	.byte	'PS0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	436
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	436
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	436
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	16,0,2,35,2,0,12,7,141,5,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6199
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,7,147,2,16,4,11
	.byte	'reserved_0',0,2
	.word	931
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	436
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	436
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	436
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	436
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	436
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	436
	.byte	1,0,2,35,3,0,12,7,221,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6532
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR0_Bits',0,7,192,1,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	413
	.byte	30,0,2,35,0,0,12,7,196,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6880
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_Bits',0,7,200,1,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	413
	.byte	30,0,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,7,208,1,16,4,11
	.byte	'RDIS_CTRL',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'RX_DIS',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	436
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	413
	.byte	24,0,2,35,0,0,12,7,204,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7004
	.byte	4,2,35,0,13
	.byte	'B_P21',0
	.word	7088
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR2_Bits',0,7,218,1,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'LVDSR',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'LVDSRL',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	436
	.byte	2,4,2,35,1,11
	.byte	'TDIS_CTRL',0,1
	.word	436
	.byte	1,3,2,35,1,11
	.byte	'TX_DIS',0,1
	.word	436
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	436
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	16,0,2,35,2,0,12,7,213,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7268
	.byte	4,2,35,0,0,18,76
	.word	436
	.byte	19,75,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,7,82,16,4,11
	.byte	'reserved_0',0,4
	.word	413
	.byte	32,0,2,35,0,0,12,7,132,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7521
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,7,45,16,4,11
	.byte	'EN0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	436
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	436
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	436
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	436
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	436
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	436
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	436
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	436
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	436
	.byte	1,0,2,35,3,0,12,7,252,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7608
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,7,229,5,25,128,2,13
	.byte	'OUT',0
	.word	1306
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	1877
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	1996
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2036
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	2220
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	2435
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	2652
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	2872
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	2036
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	3186
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	3226
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	3499
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	3815
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	3855
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	4155
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	4195
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	4530
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	4816
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	3855
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	4963
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	5132
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	5304
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	5479
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	5653
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	5827
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	6003
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	6159
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	6492
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	6840
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	3855
	.byte	8,3,35,152,1,13
	.byte	'LPCR0',0
	.word	6964
	.byte	4,3,35,160,1,13
	.byte	'LPCR1',0
	.word	7213
	.byte	4,3,35,164,1,13
	.byte	'LPCR2',0
	.word	7472
	.byte	4,3,35,168,1,13
	.byte	'reserved_A4',0
	.word	7512
	.byte	76,3,35,172,1,13
	.byte	'ACCEN1',0
	.word	7568
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	8135
	.byte	4,3,35,252,1,0,14
	.word	8175
	.byte	3
	.word	8778
	.byte	15,6,83,9,1,16
	.byte	'IfxPort_InputMode_undefined',0,127,16
	.byte	'IfxPort_InputMode_noPullDevice',0,0,16
	.byte	'IfxPort_InputMode_pullDown',0,8,16
	.byte	'IfxPort_InputMode_pullUp',0,16,0
.L232:
	.byte	4
	.byte	'IfxPort_setPinModeInput',0,3,6,196,4,17,1,1
.L235:
	.byte	5
	.byte	'port',0,6,196,4,48
	.word	8783
.L237:
	.byte	5
	.byte	'pinIndex',0,6,196,4,60
	.word	436
.L239:
	.byte	5
	.byte	'mode',0,6,196,4,88
	.word	8788
.L241:
	.byte	6,0,15,6,134,1,9,1,16
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,16
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,15,6,120,9,1,16
	.byte	'IfxPort_OutputIdx_general',0,128,1,16
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,16
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,16
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,16
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,16
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,16
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,16
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0
.L246:
	.byte	4
	.byte	'IfxPort_setPinModeOutput',0,3,6,202,4,17,1,1
.L248:
	.byte	5
	.byte	'port',0,6,202,4,49
	.word	8783
.L250:
	.byte	5
	.byte	'pinIndex',0,6,202,4,61
	.word	436
.L252:
	.byte	5
	.byte	'mode',0,6,202,4,90
	.word	8993
.L254:
	.byte	5
	.byte	'index',0,6,202,4,114
	.word	9063
.L256:
	.byte	6,0,15,6,172,1,9,4,16
	.byte	'IfxPort_State_notChanged',0,0,16
	.byte	'IfxPort_State_high',0,1,16
	.byte	'IfxPort_State_low',0,128,128,4,16
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,6,208,4,17,1,1,5
	.byte	'port',0,6,208,4,44
	.word	8783
	.byte	5
	.byte	'pinIndex',0,6,208,4,56
	.word	436
	.byte	5
	.byte	'action',0,6,208,4,80
	.word	9376
	.byte	6,0
.L294:
	.byte	7
	.byte	'unsigned long int',0,4,7,10
	.byte	'_Ifx_HSSL_CLC_Bits',0,9,126,16,4,11
	.byte	'DISR',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	413
	.byte	28,0,2,35,0,0,12,9,206,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9578
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_ID_Bits',0,9,177,1,16,4,11
	.byte	'MODREV',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	931
	.byte	16,0,2,35,2,0,12,9,254,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9735
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_CRC_Bits',0,9,136,1,16,4,11
	.byte	'XORMASK',0,2
	.word	931
	.byte	16,0,2,35,0,11
	.byte	'XEN',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	931
	.byte	15,0,2,35,2,0,12,9,214,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9858
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_CFG_Bits',0,9,114,16,4,11
	.byte	'PREDIV',0,2
	.word	931
	.byte	14,2,2,35,0,11
	.byte	'reserved_14',0,1
	.word	436
	.byte	2,0,2,35,1,11
	.byte	'SMT',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'SMR',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'SCM',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'CCC',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	931
	.byte	12,0,2,35,2,0,12,9,198,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9981
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_QFLAGS_Bits',0,9,200,2,16,4,11
	.byte	'I',0,1
	.word	436
	.byte	4,4,2,35,0,11
	.byte	'T',0,1
	.word	436
	.byte	4,0,2,35,0,11
	.byte	'R',0,1
	.word	436
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	436
	.byte	4,0,2,35,1,11
	.byte	'E0',0,1
	.word	436
	.byte	2,6,2,35,2,11
	.byte	'E1',0,1
	.word	436
	.byte	2,4,2,35,2,11
	.byte	'E2',0,1
	.word	436
	.byte	2,2,2,35,2,11
	.byte	'E3',0,1
	.word	436
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	4,4,2,35,3,11
	.byte	'IS',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'RS',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'TS',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'ES',0,1
	.word	436
	.byte	1,0,2,35,3,0,12,9,222,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10170
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_MFLAGS_Bits',0,9,228,1,16,4,11
	.byte	'NACK',0,1
	.word	436
	.byte	4,4,2,35,0,11
	.byte	'TTE',0,1
	.word	436
	.byte	4,0,2,35,0,11
	.byte	'TIMEOUT',0,1
	.word	436
	.byte	4,4,2,35,1,11
	.byte	'UNEXPECTED',0,1
	.word	436
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	436
	.byte	2,6,2,35,2,11
	.byte	'TMB',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'IMB',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'ISB',0,1
	.word	436
	.byte	1,3,2,35,2,11
	.byte	'MAV',0,1
	.word	436
	.byte	1,2,2,35,2,11
	.byte	'SRIE',0,1
	.word	436
	.byte	1,1,2,35,2,11
	.byte	'PIE1',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'PIE2',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'CRCE',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	436
	.byte	2,4,2,35,3,11
	.byte	'TSE',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'TEI',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'TEO',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'INI',0,1
	.word	436
	.byte	1,0,2,35,3,0,12,9,182,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10436
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_MFLAGSSET_Bits',0,9,164,2,16,4,11
	.byte	'NACKS',0,1
	.word	436
	.byte	4,4,2,35,0,11
	.byte	'TTES',0,1
	.word	436
	.byte	4,0,2,35,0,11
	.byte	'TIMEOUTS',0,1
	.word	436
	.byte	4,4,2,35,1,11
	.byte	'UNEXPECTEDS',0,1
	.word	436
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	436
	.byte	2,6,2,35,2,11
	.byte	'TMBS',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'IMBS',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'ISBS',0,1
	.word	436
	.byte	1,3,2,35,2,11
	.byte	'MAVS',0,1
	.word	436
	.byte	1,2,2,35,2,11
	.byte	'SRIES',0,1
	.word	436
	.byte	1,1,2,35,2,11
	.byte	'PIE1S',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'PIE2S',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'CRCES',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	436
	.byte	2,4,2,35,3,11
	.byte	'TSES',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'TEOS',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'INIS',0,1
	.word	436
	.byte	1,0,2,35,3,0,12,9,206,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10807
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_MFLAGSCL_Bits',0,9,251,1,16,4,11
	.byte	'NACKC',0,1
	.word	436
	.byte	4,4,2,35,0,11
	.byte	'TTEC',0,1
	.word	436
	.byte	4,0,2,35,0,11
	.byte	'TIMEOUTC',0,1
	.word	436
	.byte	4,4,2,35,1,11
	.byte	'UNEXPECTEDC',0,1
	.word	436
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	436
	.byte	2,6,2,35,2,11
	.byte	'TMBC',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'IMBC',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'ISBC',0,1
	.word	436
	.byte	1,3,2,35,2,11
	.byte	'MAVC',0,1
	.word	436
	.byte	1,2,2,35,2,11
	.byte	'SRIEC',0,1
	.word	436
	.byte	1,1,2,35,2,11
	.byte	'PIE1C',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'PIE2C',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'CRCEC',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	436
	.byte	2,4,2,35,3,11
	.byte	'TSEC',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'TEOC',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'INIC',0,1
	.word	436
	.byte	1,0,2,35,3,0,12,9,190,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11204
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_MFLAGSEN_Bits',0,9,146,2,16,4,11
	.byte	'NACKEN',0,1
	.word	436
	.byte	4,4,2,35,0,11
	.byte	'TTEEN',0,1
	.word	436
	.byte	4,0,2,35,0,11
	.byte	'TIMEOUTEN',0,1
	.word	436
	.byte	4,4,2,35,1,11
	.byte	'UNEXPECTEDEN',0,1
	.word	436
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	436
	.byte	5,3,2,35,2,11
	.byte	'MAVEN',0,1
	.word	436
	.byte	1,2,2,35,2,11
	.byte	'SRIEEN',0,1
	.word	436
	.byte	1,1,2,35,2,11
	.byte	'PIE1EN',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'PIE2EN',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'CRCEEN',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	436
	.byte	3,3,2,35,3,11
	.byte	'TEIEN',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	436
	.byte	2,0,2,35,3,0,12,9,198,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11600
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_SFSFLAGS_Bits',0,9,218,2,16,4,11
	.byte	'RXFL',0,1
	.word	436
	.byte	2,6,2,35,0,11
	.byte	'TXFL',0,1
	.word	436
	.byte	2,4,2,35,0,11
	.byte	'EXFL',0,1
	.word	436
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	931
	.byte	9,1,2,35,0,11
	.byte	'ISF',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	16,0,2,35,2,0,12,9,230,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11926
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_I_IWD_Bits',0,9,171,1,16,4,11
	.byte	'DATA',0,4
	.word	413
	.byte	32,0,2,35,0,0,12,9,246,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12105
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_I_ICON_Bits',0,9,144,1,16,4,11
	.byte	'IDQ',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'TQ',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'LETT',0,1
	.word	436
	.byte	3,3,2,35,0,11
	.byte	'CETT',0,1
	.word	436
	.byte	3,0,2,35,0,11
	.byte	'TOCV',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'DATLEN',0,1
	.word	436
	.byte	2,6,2,35,2,11
	.byte	'RWT',0,1
	.word	436
	.byte	2,4,2,35,2,11
	.byte	'BSY',0,1
	.word	436
	.byte	1,3,2,35,2,11
	.byte	'ITTAG',0,1
	.word	436
	.byte	3,0,2,35,2,11
	.byte	'TOREL',0,1
	.word	436
	.byte	8,0,2,35,3,0,12,9,222,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12189
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_I_IRWA_Bits',0,9,165,1,16,4,11
	.byte	'ADDRESS',0,4
	.word	413
	.byte	32,0,2,35,0,0,12,9,238,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12417
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_I_IRD_Bits',0,9,159,1,16,4,11
	.byte	'DATA',0,4
	.word	413
	.byte	32,0,2,35,0,0,12,9,230,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12505
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_I',0,9,181,5,25,16,13
	.byte	'IWD',0
	.word	12149
	.byte	4,2,35,0,13
	.byte	'ICON',0
	.word	12377
	.byte	4,2,35,4,13
	.byte	'IRWA',0
	.word	12465
	.byte	4,2,35,8,13
	.byte	'IRD',0
	.word	12549
	.byte	4,2,35,12,0,18,64
	.word	12589
	.byte	19,3,0,14
	.word	12662
	.byte	10
	.byte	'_Ifx_HSSL_T_TCD_Bits',0,9,235,2,16,4,11
	.byte	'D',0,4
	.word	413
	.byte	32,0,2,35,0,0,12,9,246,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12676
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_T_TCA_Bits',0,9,229,2,16,4,11
	.byte	'A',0,4
	.word	413
	.byte	32,0,2,35,0,0,12,9,238,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12757
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_T',0,9,198,5,25,8,13
	.byte	'TCD',0
	.word	12717
	.byte	4,2,35,0,13
	.byte	'TCA',0
	.word	12798
	.byte	4,2,35,4,0,18,32
	.word	12838
	.byte	19,3,0,14
	.word	12883
	.byte	10
	.byte	'_Ifx_HSSL_TSTAT_Bits',0,9,140,3,16,4,11
	.byte	'LASTCC0',0,1
	.word	436
	.byte	5,3,2,35,0,11
	.byte	'LASTTT0',0,1
	.word	436
	.byte	3,0,2,35,0,11
	.byte	'LASTCC1',0,1
	.word	436
	.byte	5,3,2,35,1,11
	.byte	'LASTTT1',0,1
	.word	436
	.byte	3,0,2,35,1,11
	.byte	'LASTCC2',0,1
	.word	436
	.byte	5,3,2,35,2,11
	.byte	'LASTTT2',0,1
	.word	436
	.byte	3,0,2,35,2,11
	.byte	'LASTCC3',0,1
	.word	436
	.byte	5,3,2,35,3,11
	.byte	'LASTTT3',0,1
	.word	436
	.byte	3,0,2,35,3,0,12,9,158,5,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12897
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_TIDADD_Bits',0,9,241,2,16,4,11
	.byte	'A',0,4
	.word	413
	.byte	32,0,2,35,0,0,12,9,254,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13117
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_ISSA_Bits',0,9,199,1,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	5,3,2,35,0,11
	.byte	'START',0,4
	.word	413
	.byte	27,0,2,35,0,0,12,9,150,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13199
	.byte	4,2,35,0,0,18,8
	.word	13265
	.byte	19,1,0,10
	.byte	'_Ifx_HSSL_IS_CA_Bits',0,9,185,1,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	5,3,2,35,0,11
	.byte	'CURR',0,4
	.word	413
	.byte	27,0,2,35,0,0,12,9,134,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13314
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_IS_FC_Bits',0,9,192,1,16,4,11
	.byte	'RELCOUNT',0,2
	.word	931
	.byte	16,0,2,35,0,11
	.byte	'CURCOUNT',0,2
	.word	931
	.byte	16,0,2,35,2,0,12,9,142,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13420
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_IS',0,9,190,5,25,16,13
	.byte	'SA',0
	.word	13305
	.byte	8,2,35,0,13
	.byte	'CA',0
	.word	13380
	.byte	4,2,35,8,13
	.byte	'FC',0
	.word	13488
	.byte	4,2,35,12,0,14
	.word	13528
	.byte	10
	.byte	'_Ifx_HSSL_TSSA_Bits',0,9,133,3,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	413
	.byte	27,0,2,35,0,0,12,9,150,5,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13589
	.byte	4,2,35,0,0,18,8
	.word	13654
	.byte	19,1,0,10
	.byte	'_Ifx_HSSL_TS_CA_Bits',0,9,247,2,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	5,3,2,35,0,11
	.byte	'CURR',0,4
	.word	413
	.byte	27,0,2,35,0,0,12,9,134,5,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13703
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_TS_FC_Bits',0,9,254,2,16,4,11
	.byte	'RELCOUNT',0,2
	.word	931
	.byte	16,0,2,35,0,11
	.byte	'CURCOUNT',0,2
	.word	931
	.byte	16,0,2,35,2,0
.L341:
	.byte	12,9,142,5,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13809
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_TS',0,9,205,5,25,16,13
	.byte	'SA',0
	.word	13694
	.byte	8,2,35,0,13
	.byte	'CA',0
	.word	13769
	.byte	4,2,35,8,13
	.byte	'FC',0
	.word	13877
	.byte	4,2,35,12,0,14
	.word	13917
	.byte	10
	.byte	'_Ifx_HSSL_AW_AWSTART_Bits',0,9,107,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'AWS',0,4
	.word	413
	.byte	24,0,2,35,0,0,12,9,190,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13978
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_AW_AWEND_Bits',0,9,100,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'AWE',0,4
	.word	413
	.byte	24,0,2,35,0,0,12,9,182,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14087
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_AW',0,9,174,5,25,8,13
	.byte	'AWSTART',0
	.word	14047
	.byte	4,2,35,0,13
	.byte	'AWEND',0
	.word	14154
	.byte	4,2,35,4,0,18,32
	.word	14194
	.byte	19,3,0,14
	.word	14246
	.byte	10
	.byte	'_Ifx_HSSL_AR_Bits',0,9,88,16,4,11
	.byte	'ARW0',0,1
	.word	436
	.byte	2,6,2,35,0,11
	.byte	'ARW1',0,1
	.word	436
	.byte	2,4,2,35,0,11
	.byte	'ARW2',0,1
	.word	436
	.byte	2,2,2,35,0,11
	.byte	'ARW3',0,1
	.word	436
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'MAVCH',0,1
	.word	436
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	931
	.byte	14,0,2,35,2,0,12,9,174,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14260
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_OCS_Bits',0,9,187,2,16,4,11
	.byte	'TGS',0,1
	.word	436
	.byte	2,6,2,35,0,11
	.byte	'TGB',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'TG_P',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	413
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	436
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	436
	.byte	2,0,2,35,3,0,12,9,214,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14450
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_KRSTCLR_Bits',0,9,221,1,16,4,11
	.byte	'CLR',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	413
	.byte	31,0,2,35,0,0,12,9,174,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14657
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_KRST1_Bits',0,9,214,1,16,4,11
	.byte	'RST',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	413
	.byte	31,0,2,35,0,0,12,9,166,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14764
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_KRST0_Bits',0,9,206,1,16,4,11
	.byte	'RST',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	413
	.byte	30,0,2,35,0,0,12,9,158,4,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14869
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_ACCEN1_Bits',0,9,82,16,4,11
	.byte	'reserved_0',0,4
	.word	413
	.byte	32,0,2,35,0,0,12,9,166,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14993
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSSL_ACCEN0_Bits',0,9,45,16,4,11
	.byte	'EN0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	436
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	436
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	436
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	436
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	436
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	436
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	436
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	436
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	436
	.byte	1,0,2,35,3,0,12,9,158,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15083
	.byte	4,2,35,0,0,18,128,6
	.word	436
	.byte	19,255,5,0,10
	.byte	'_Ifx_HSSL',0,9,223,5,25,128,8,13
	.byte	'CLC',0
	.word	9695
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	2036
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	9818
	.byte	4,2,35,8,13
	.byte	'CRC',0
	.word	9941
	.byte	4,2,35,12,13
	.byte	'CFG',0
	.word	10130
	.byte	4,2,35,16,13
	.byte	'QFLAGS',0
	.word	10396
	.byte	4,2,35,20,13
	.byte	'MFLAGS',0
	.word	10767
	.byte	4,2,35,24,13
	.byte	'MFLAGSSET',0
	.word	11164
	.byte	4,2,35,28,13
	.byte	'MFLAGSCL',0
	.word	11560
	.byte	4,2,35,32,13
	.byte	'MFLAGSEN',0
	.word	11886
	.byte	4,2,35,36,13
	.byte	'SFSFLAGS',0
	.word	12065
	.byte	4,2,35,40,13
	.byte	'reserved_2C',0
	.word	2036
	.byte	4,2,35,44,13
	.byte	'I',0
	.word	12671
	.byte	64,2,35,48,13
	.byte	'T',0
	.word	12892
	.byte	32,2,35,112,13
	.byte	'TSTAT',0
	.word	13077
	.byte	4,3,35,144,1,13
	.byte	'TIDADD',0
	.word	13159
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	3855
	.byte	8,3,35,152,1,13
	.byte	'IS',0
	.word	13584
	.byte	16,3,35,160,1,13
	.byte	'TS',0
	.word	13973
	.byte	16,3,35,176,1,13
	.byte	'AW',0
	.word	14255
	.byte	32,3,35,192,1,13
	.byte	'AR',0
	.word	14410
	.byte	4,3,35,224,1,13
	.byte	'reserved_E4',0
	.word	2036
	.byte	4,3,35,228,1,13
	.byte	'OCS',0
	.word	14617
	.byte	4,3,35,232,1,13
	.byte	'KRSTCLR',0
	.word	14724
	.byte	4,3,35,236,1,13
	.byte	'KRST1',0
	.word	14829
	.byte	4,3,35,240,1,13
	.byte	'KRST0',0
	.word	14953
	.byte	4,3,35,244,1,13
	.byte	'ACCEN1',0
	.word	15043
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	15613
	.byte	4,3,35,252,1,13
	.byte	'reserved_100',0
	.word	15653
	.byte	128,6,3,35,128,2,0,14
	.word	15664
.L275:
	.byte	3
	.word	16152
	.byte	10
	.byte	'_Ifx_HSCT_CLC_Bits',0,10,88,16,4,11
	.byte	'DISR',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	413
	.byte	28,0,2,35,0,0,12,10,206,2,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16162
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_ID_Bits',0,10,134,1,16,4,11
	.byte	'MODREV',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	931
	.byte	16,0,2,35,2,0,12,10,238,2,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16319
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_INIT_Bits',0,10,162,1,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'SYS_CLK_EN',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'SRCF',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'IFM',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	931
	.byte	6,6,2,35,0,11
	.byte	'LHLR',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	436
	.byte	5,0,2,35,1,11
	.byte	'TXHD',0,1
	.word	436
	.byte	3,5,2,35,2,11
	.byte	'RXHD',0,1
	.word	436
	.byte	3,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	931
	.byte	10,0,2,35,2,0,12,10,134,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16442
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_IFCTRL_Bits',0,10,142,1,16,4,11
	.byte	'IFCVS',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'SIFCV',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	436
	.byte	7,0,2,35,1,11
	.byte	'MRXSPEED',0,1
	.word	436
	.byte	2,6,2,35,2,11
	.byte	'MTXSPEED',0,1
	.word	436
	.byte	2,4,2,35,2,11
	.byte	'IFTESTMD',0,1
	.word	436
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,2
	.word	931
	.byte	11,0,2,35,2,0,12,10,246,2,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16700
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_SLEEPCTRL_Bits',0,10,141,2,16,4,11
	.byte	'SLPEN',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'SLPCLKG',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	413
	.byte	30,0,2,35,0,0,12,10,198,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16908
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_CTSCTRL_Bits',0,10,115,16,4,11
	.byte	'CTS_FRAME',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'CTS_TXD',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'CTS_RXD',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'HSSL_CTS_FBD',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	413
	.byte	28,0,2,35,0,0,12,10,222,2,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17038
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_DISABLE_Bits',0,10,125,16,4,11
	.byte	'TX_DIS',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'RX_DIS',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'RX_HEPD',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	413
	.byte	29,0,2,35,0,0,12,10,230,2,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17212
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_STAT_Bits',0,10,149,2,16,4,11
	.byte	'RX_PSIZE',0,1
	.word	436
	.byte	3,5,2,35,0,11
	.byte	'RX_CHANNEL',0,1
	.word	436
	.byte	4,1,2,35,0,11
	.byte	'RX_SLEEP',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'TX_SLEEP',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	436
	.byte	3,4,2,35,1,11
	.byte	'TX_PSIZE',0,1
	.word	436
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'TX_CHANNEL_TYPE',0,1
	.word	436
	.byte	4,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	436
	.byte	4,0,2,35,2,11
	.byte	'LIFCCMDR',0,1
	.word	436
	.byte	8,0,2,35,3,0,12,10,206,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17358
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_IFSTAT_Bits',0,10,154,1,16,4,11
	.byte	'RX_STAT',0,1
	.word	436
	.byte	3,5,2,35,0,11
	.byte	'TX_STAT',0,1
	.word	436
	.byte	2,3,2,35,0,11
	.byte	'reserved_5',0,4
	.word	413
	.byte	27,0,2,35,0,0,12,10,254,2,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17642
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_CONFIGPHY_Bits',0,10,98,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'PLLPON',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'PLLPE',0,1
	.word	436
	.byte	6,0,2,35,0,11
	.byte	'PLLWMF',0,1
	.word	436
	.byte	6,2,2,35,1,11
	.byte	'PLLKPKI',0,1
	.word	436
	.byte	1,1,2,35,1,11
	.byte	'PHYRST',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'PLLKP',0,1
	.word	436
	.byte	3,5,2,35,2,11
	.byte	'PLLKI',0,1
	.word	436
	.byte	3,2,2,35,2,11
	.byte	'PLLIVR',0,2
	.word	931
	.byte	4,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	436
	.byte	2,4,2,35,3,11
	.byte	'OSCCLKEN',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	436
	.byte	3,0,2,35,3,0,12,10,214,2,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17771
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_STATPHY_Bits',0,10,164,2,16,4,11
	.byte	'PLOCK',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'RXLSA',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'TXLSA',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	413
	.byte	29,0,2,35,0,0,12,10,214,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18072
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_IRQ_Bits',0,10,177,1,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'HER',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'PYER',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'CER',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'IFCFS',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'SMER',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'USMSF',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'PLER',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'USM',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'PAR',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'TXTE',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'SFO',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'SFU',0,1
	.word	436
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	413
	.byte	19,0,2,35,0,0,12,10,142,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18215
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_IRQEN_Bits',0,10,215,1,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'HEREN',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'PYEREN',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'CEREN',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'IFCFSEN',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'SMEREN',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'USMSFEN',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'PLEREN',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'USMEN',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'PAREN',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'TXTEEN',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'SFOEN',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'SFUEN',0,1
	.word	436
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	413
	.byte	19,0,2,35,0,0,12,10,158,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18514
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_IRQCLR_Bits',0,10,196,1,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'HERCLR',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'PYERCLR',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'CERCLR',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'IFCFSCLR',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'SMERCLR',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'USMSFCLR',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'PLERCLR',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'USMCLR',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'PARCLR',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'TXTECLR',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'SFOCLR',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'SFUCLR',0,1
	.word	436
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	413
	.byte	19,0,2,35,0,0,12,10,150,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18839
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_USMR_Bits',0,10,173,2,16,4,11
	.byte	'USMR',0,4
	.word	413
	.byte	32,0,2,35,0,0,12,10,222,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19177
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_USMS_Bits',0,10,179,2,16,4,11
	.byte	'USMS',0,4
	.word	413
	.byte	32,0,2,35,0,0,12,10,230,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19260
	.byte	4,2,35,0,0,18,144,255,3
	.word	436
	.byte	19,143,255,3,0,10
	.byte	'_Ifx_HSCT_OCS_Bits',0,10,128,2,16,4,11
	.byte	'TGS',0,1
	.word	436
	.byte	2,6,2,35,0,11
	.byte	'TGB',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'TG_P',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	413
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	436
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	436
	.byte	2,0,2,35,3,0,12,10,190,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19356
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_KRSTCLR_Bits',0,10,249,1,16,4,11
	.byte	'CLR',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	413
	.byte	31,0,2,35,0,0,12,10,182,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19563
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_KRST1_Bits',0,10,242,1,16,4,11
	.byte	'RST',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	413
	.byte	31,0,2,35,0,0,12,10,174,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19670
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_KRST0_Bits',0,10,234,1,16,4,11
	.byte	'RST',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	413
	.byte	30,0,2,35,0,0,12,10,166,3,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19775
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_ACCEN1_Bits',0,10,82,16,4,11
	.byte	'reserved_0',0,4
	.word	413
	.byte	32,0,2,35,0,0,12,10,198,2,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19899
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT_ACCEN0_Bits',0,10,45,16,4,11
	.byte	'EN0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	436
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	436
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	436
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	436
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	436
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	436
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	436
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	436
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	436
	.byte	1,0,2,35,3,0,12,10,190,2,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19989
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_HSCT',0,10,246,3,25,128,128,4,13
	.byte	'CLC',0
	.word	16279
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	2036
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	16402
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2036
	.byte	4,2,35,12,13
	.byte	'INIT',0
	.word	16660
	.byte	4,2,35,16,13
	.byte	'IFCTRL',0
	.word	16868
	.byte	4,2,35,20,13
	.byte	'SLEEPCTRL',0
	.word	16998
	.byte	4,2,35,24,13
	.byte	'CTSCTRL',0
	.word	17172
	.byte	4,2,35,28,13
	.byte	'DISABLE',0
	.word	17318
	.byte	4,2,35,32,13
	.byte	'STAT',0
	.word	17602
	.byte	4,2,35,36,13
	.byte	'IFSTAT',0
	.word	17731
	.byte	4,2,35,40,13
	.byte	'reserved_2C',0
	.word	2036
	.byte	4,2,35,44,13
	.byte	'CONFIGPHY',0
	.word	18032
	.byte	4,2,35,48,13
	.byte	'STATPHY',0
	.word	18175
	.byte	4,2,35,52,13
	.byte	'reserved_38',0
	.word	3855
	.byte	8,2,35,56,13
	.byte	'IRQ',0
	.word	18474
	.byte	4,2,35,64,13
	.byte	'IRQEN',0
	.word	18799
	.byte	4,2,35,68,13
	.byte	'IRQCLR',0
	.word	19137
	.byte	4,2,35,72,13
	.byte	'reserved_4C',0
	.word	2036
	.byte	4,2,35,76,13
	.byte	'USMR',0
	.word	19220
	.byte	4,2,35,80,13
	.byte	'USMS',0
	.word	19303
	.byte	4,2,35,84,13
	.byte	'reserved_58',0
	.word	19343
	.byte	144,255,3,2,35,88,13
	.byte	'OCS',0
	.word	19523
	.byte	4,4,35,232,255,3,13
	.byte	'KRSTCLR',0
	.word	19630
	.byte	4,4,35,236,255,3,13
	.byte	'KRST1',0
	.word	19735
	.byte	4,4,35,240,255,3,13
	.byte	'KRST0',0
	.word	19859
	.byte	4,4,35,244,255,3,13
	.byte	'ACCEN1',0
	.word	19949
	.byte	4,4,35,248,255,3,13
	.byte	'ACCEN0',0
	.word	20519
	.byte	4,4,35,252,255,3,0,14
	.word	20559
.L230:
	.byte	3
	.word	21054
	.byte	15,11,77,9,1,16
	.byte	'IfxHssl_ChannelId_0',0,0,16
	.byte	'IfxHssl_ChannelId_1',0,1,16
	.byte	'IfxHssl_ChannelId_2',0,2,16
	.byte	'IfxHssl_ChannelId_3',0,3,0
.L305:
	.byte	15,8,196,3,9,1,16
	.byte	'IfxHssl_Hssl_FrameRequest_readFrame',0,1,16
	.byte	'IfxHssl_Hssl_FrameRequest_writeFrame',0,2,16
	.byte	'IfxHssl_Hssl_FrameRequest_triggerFrame',0,3,16
	.byte	'IfxHssl_Hssl_FrameRequest_readId',0,4,16
	.byte	'IfxHssl_Hssl_FrameRequest_noAction',0,5,0,15,11,214,1,9,1,16
	.byte	'IfxHssl_StreamingMode_continuous',0,0,16
	.byte	'IfxHssl_StreamingMode_single',0,1,0,20,8,132,4,9,16,13
	.byte	'hssl',0
	.word	16157
	.byte	4,2,35,0,13
	.byte	'hsct',0
	.word	21059
	.byte	4,2,35,4,13
	.byte	'channelId',0
	.word	21064
	.byte	1,2,35,8,13
	.byte	'currentFrameRequest',0
	.word	21158
	.byte	1,2,35,9,13
	.byte	'streamingMode',0
	.word	21355
	.byte	1,2,35,10,13
	.byte	'loopBack',0
	.word	436
	.byte	1,2,35,11,13
	.byte	'streamingModeOn',0
	.word	436
	.byte	1,2,35,12,0
.L282:
	.byte	3
	.word	21428
.L343:
	.byte	8
	.byte	'IfxHssl_Hssl_getReadData',0,3,8,133,6,19
	.word	9557
	.byte	1,1
.L346:
	.byte	5
	.byte	'channel',0,8,133,6,66
	.word	21577
.L348:
	.byte	6,0,21
	.word	429
	.byte	22
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,23
	.word	21638
	.byte	0,14
	.word	413
	.byte	3
	.word	413
	.byte	24
	.byte	'__cmpswapw',0
	.word	21680
	.byte	1,1,1,1,25
	.byte	'p',0
	.word	21685
	.byte	25
	.byte	'value',0
	.word	413
	.byte	25
	.byte	'compare',0
	.word	413
	.byte	0,26
	.byte	'__nop',0,1,1,1,1,27
	.word	189
	.byte	28
	.word	215
	.byte	6,0,27
	.word	250
	.byte	28
	.word	282
	.byte	6,0,27
	.word	332
	.byte	28
	.word	351
	.byte	6,0,27
	.word	367
	.byte	28
	.word	382
	.byte	28
	.word	396
	.byte	6,0,29
	.byte	'IfxScuWdt_clearCpuEndinit',0,12,217,1,17,1,1,1,1,5
	.byte	'password',0,12,217,1,50
	.word	931
	.byte	0,29
	.byte	'IfxScuWdt_setCpuEndinit',0,12,239,1,17,1,1,1,1,5
	.byte	'password',0,12,239,1,48
	.word	931
	.byte	0,30
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,12,129,3,19
	.word	931
	.byte	1,1,1,1,27
	.word	792
	.byte	28
	.word	820
	.byte	6,0,27
	.word	835
	.byte	28
	.word	857
	.byte	6,0,27
	.word	953
	.byte	28
	.word	973
	.byte	28
	.word	986
	.byte	28
	.word	1008
	.byte	17,31
	.word	792
	.byte	28
	.word	820
	.byte	32
	.word	833
	.byte	0,6,0,0,29
	.byte	'IfxHssl_enableHsctModule',0,11,140,3,17,1,1,1,1,5
	.byte	'hsct',0,11,140,3,52
	.word	21059
	.byte	0,29
	.byte	'IfxHssl_enableHsslModule',0,11,244,4,17,1,1,1,1,5
	.byte	'hssl',0,11,244,4,52
	.word	16157
	.byte	0,27
	.word	8913
	.byte	28
	.word	8945
	.byte	28
	.word	8959
	.byte	28
	.word	8977
	.byte	6,0,27
	.word	9280
	.byte	28
	.word	9313
	.byte	28
	.word	9327
	.byte	28
	.word	9345
	.byte	28
	.word	9359
	.byte	6,0,27
	.word	9479
	.byte	28
	.word	9507
	.byte	28
	.word	9521
	.byte	28
	.word	9539
	.byte	6,0,15,6,95,9,1,16
	.byte	'IfxPort_Mode_inputNoPullDevice',0,0,16
	.byte	'IfxPort_Mode_inputPullDown',0,8,16
	.byte	'IfxPort_Mode_inputPullUp',0,16,16
	.byte	'IfxPort_Mode_outputPushPullGeneral',0,128,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt1',0,136,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt2',0,144,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt3',0,152,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt4',0,160,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt5',0,168,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt6',0,176,1,16
	.byte	'IfxPort_Mode_outputPushPullAlt7',0,184,1,16
	.byte	'IfxPort_Mode_outputOpenDrainGeneral',0,192,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt1',0,200,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt2',0,208,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt3',0,216,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt4',0,224,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt5',0,232,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt6',0,240,1,16
	.byte	'IfxPort_Mode_outputOpenDrainAlt7',0,248,1,0,29
	.byte	'IfxPort_setPinMode',0,6,247,2,17,1,1,1,1,5
	.byte	'port',0,6,247,2,43
	.word	8783
	.byte	5
	.byte	'pinIndex',0,6,247,2,55
	.word	436
	.byte	5
	.byte	'mode',0,6,247,2,78
	.word	22191
	.byte	0,15,6,144,1,9,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,16
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,16
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,16
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,16
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,16
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,16
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,16
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,16
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,29
	.byte	'IfxPort_setPinPadDriver',0,6,134,3,17,1,1,1,1,5
	.byte	'port',0,6,134,3,48
	.word	8783
	.byte	5
	.byte	'pinIndex',0,6,134,3,60
	.word	436
	.byte	5
	.byte	'padDriver',0,6,134,3,88
	.word	22935
	.byte	0,20,11,135,2,9,8,13
	.byte	'hsct',0
	.word	21059
	.byte	4,2,35,0,13
	.byte	'loopBack',0
	.word	436
	.byte	1,2,35,4,0
.L225:
	.byte	3
	.word	23435
	.byte	15,11,177,1,9,1,16
	.byte	'IfxHssl_InterfaceMode_master',0,0,16
	.byte	'IfxHssl_InterfaceMode_slave',0,1,0,20,11,143,2,9,8,13
	.byte	'hsct',0
	.word	21059
	.byte	4,2,35,0,13
	.byte	'interfaceMode',0
	.word	23479
	.byte	1,2,35,4,13
	.byte	'highSpeedMode',0
	.word	436
	.byte	1,2,35,5,13
	.byte	'loopBack',0
	.word	436
	.byte	1,2,35,6,0,21
	.word	23547
.L227:
	.byte	3
	.word	23632
.L267:
	.byte	3
	.word	23547
	.byte	20,8,234,3,9,2,11
	.byte	'notAcknowledgeError',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'transactionTagError',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'timeoutError',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'unexpectedError',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'memoryAccessViolation',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'busAccessError',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'channelNumberCodeError',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'dataLengthError',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'crcError',0,1
	.word	436
	.byte	1,7,2,35,1,0,20,8,251,3,9,8,13
	.byte	'hssl',0
	.word	16157
	.byte	4,2,35,0,13
	.byte	'errorFlags',0
	.word	23647
	.byte	2,2,35,4,13
	.byte	'loopBack',0
	.word	436
	.byte	1,2,35,6,0
.L271:
	.byte	3
	.word	23907
	.byte	20,8,224,3,9,8,13
	.byte	'start',0
	.word	9557
	.byte	4,2,35,0,13
	.byte	'end',0
	.word	9557
	.byte	4,2,35,4,0,20,8,156,4,9,40,13
	.byte	'hssl',0
	.word	16157
	.byte	4,2,35,0,13
	.byte	'accessWindow0',0
	.word	23971
	.byte	8,2,35,4,13
	.byte	'accessWindow1',0
	.word	23971
	.byte	8,2,35,12,13
	.byte	'accessWindow2',0
	.word	23971
	.byte	8,2,35,20,13
	.byte	'accessWindow3',0
	.word	23971
	.byte	8,2,35,28,13
	.byte	'preDivider',0
	.word	931
	.byte	2,2,35,36,0,21
	.word	24006
.L273:
	.byte	3
	.word	24139
.L278:
	.byte	3
	.word	24006
	.byte	20,8,145,4,9,12,13
	.byte	'hssl',0
	.word	16157
	.byte	4,2,35,0,13
	.byte	'hsct',0
	.word	21059
	.byte	4,2,35,4,13
	.byte	'channelId',0
	.word	21064
	.byte	1,2,35,8,13
	.byte	'streamingMode',0
	.word	21355
	.byte	1,2,35,9,13
	.byte	'loopBack',0
	.word	436
	.byte	1,2,35,10,0,21
	.word	24154
.L284:
	.byte	3
	.word	24249
.L287:
	.byte	3
	.word	24154
	.byte	27
	.word	21582
	.byte	28
	.word	21619
	.byte	6,0
.L291:
	.byte	15,8,207,3,9,1,16
	.byte	'IfxHssl_Hssl_Status_ok',0,0,16
	.byte	'IfxHssl_Hssl_Status_busy',0,1,16
	.byte	'IfxHssl_Hssl_Status_error',0,2,0
.L296:
	.byte	15,11,127,9,1,16
	.byte	'IfxHssl_DataLength_8bit',0,0,16
	.byte	'IfxHssl_DataLength_16bit',0,1,16
	.byte	'IfxHssl_DataLength_32bit',0,2,0,14
	.word	12589
.L310:
	.byte	3
	.word	24449
.L339:
	.byte	7
	.byte	'short int',0,2,5
.L361:
	.byte	3
	.word	9557
	.byte	14
	.word	13528
.L365:
	.byte	3
	.word	24477
	.byte	33
	.byte	'__wchar_t',0,13,1,1
	.word	24459
	.byte	33
	.byte	'__size_t',0,13,1,1
	.word	413
	.byte	33
	.byte	'__ptrdiff_t',0,13,1,1
	.word	429
	.byte	34,1,3
	.word	24542
	.byte	33
	.byte	'__codeptr',0,13,1,1
	.word	24544
	.byte	33
	.byte	'boolean',0,14,101,29
	.word	436
	.byte	33
	.byte	'uint8',0,14,105,29
	.word	436
	.byte	33
	.byte	'uint16',0,14,109,29
	.word	931
	.byte	33
	.byte	'uint32',0,14,113,29
	.word	9557
	.byte	33
	.byte	'uint64',0,14,118,29
	.word	295
	.byte	33
	.byte	'sint16',0,14,126,29
	.word	24459
	.byte	7
	.byte	'long int',0,4,5,33
	.byte	'sint32',0,14,131,1,29
	.word	24657
	.byte	7
	.byte	'long long int',0,8,5,33
	.byte	'sint64',0,14,139,1,29
	.word	24685
	.byte	33
	.byte	'float32',0,14,168,1,29
	.word	241
	.byte	33
	.byte	'pvoid',0,15,57,28
	.word	327
	.byte	33
	.byte	'Ifx_TickTime',0,15,79,28
	.word	24685
	.byte	33
	.byte	'Ifx_SizeT',0,15,92,16
	.word	24459
	.byte	33
	.byte	'Ifx_Priority',0,15,103,16
	.word	931
	.byte	33
	.byte	'Ifx_HSSL_ACCEN0_Bits',0,9,79,3
	.word	15083
	.byte	33
	.byte	'Ifx_HSSL_ACCEN1_Bits',0,9,85,3
	.word	14993
	.byte	33
	.byte	'Ifx_HSSL_AR_Bits',0,9,97,3
	.word	14260
	.byte	33
	.byte	'Ifx_HSSL_AW_AWEND_Bits',0,9,104,3
	.word	14087
	.byte	33
	.byte	'Ifx_HSSL_AW_AWSTART_Bits',0,9,111,3
	.word	13978
	.byte	33
	.byte	'Ifx_HSSL_CFG_Bits',0,9,123,3
	.word	9981
	.byte	33
	.byte	'Ifx_HSSL_CLC_Bits',0,9,133,1,3
	.word	9578
	.byte	33
	.byte	'Ifx_HSSL_CRC_Bits',0,9,141,1,3
	.word	9858
	.byte	33
	.byte	'Ifx_HSSL_I_ICON_Bits',0,9,156,1,3
	.word	12189
	.byte	33
	.byte	'Ifx_HSSL_I_IRD_Bits',0,9,162,1,3
	.word	12505
	.byte	33
	.byte	'Ifx_HSSL_I_IRWA_Bits',0,9,168,1,3
	.word	12417
	.byte	33
	.byte	'Ifx_HSSL_I_IWD_Bits',0,9,174,1,3
	.word	12105
	.byte	33
	.byte	'Ifx_HSSL_ID_Bits',0,9,182,1,3
	.word	9735
	.byte	33
	.byte	'Ifx_HSSL_IS_CA_Bits',0,9,189,1,3
	.word	13314
	.byte	33
	.byte	'Ifx_HSSL_IS_FC_Bits',0,9,196,1,3
	.word	13420
	.byte	33
	.byte	'Ifx_HSSL_ISSA_Bits',0,9,203,1,3
	.word	13199
	.byte	33
	.byte	'Ifx_HSSL_KRST0_Bits',0,9,211,1,3
	.word	14869
	.byte	33
	.byte	'Ifx_HSSL_KRST1_Bits',0,9,218,1,3
	.word	14764
	.byte	33
	.byte	'Ifx_HSSL_KRSTCLR_Bits',0,9,225,1,3
	.word	14657
	.byte	33
	.byte	'Ifx_HSSL_MFLAGS_Bits',0,9,248,1,3
	.word	10436
	.byte	33
	.byte	'Ifx_HSSL_MFLAGSCL_Bits',0,9,143,2,3
	.word	11204
	.byte	33
	.byte	'Ifx_HSSL_MFLAGSEN_Bits',0,9,161,2,3
	.word	11600
	.byte	33
	.byte	'Ifx_HSSL_MFLAGSSET_Bits',0,9,184,2,3
	.word	10807
	.byte	33
	.byte	'Ifx_HSSL_OCS_Bits',0,9,197,2,3
	.word	14450
	.byte	33
	.byte	'Ifx_HSSL_QFLAGS_Bits',0,9,215,2,3
	.word	10170
	.byte	33
	.byte	'Ifx_HSSL_SFSFLAGS_Bits',0,9,226,2,3
	.word	11926
	.byte	33
	.byte	'Ifx_HSSL_T_TCA_Bits',0,9,232,2,3
	.word	12757
	.byte	33
	.byte	'Ifx_HSSL_T_TCD_Bits',0,9,238,2,3
	.word	12676
	.byte	33
	.byte	'Ifx_HSSL_TIDADD_Bits',0,9,244,2,3
	.word	13117
	.byte	33
	.byte	'Ifx_HSSL_TS_CA_Bits',0,9,251,2,3
	.word	13703
	.byte	33
	.byte	'Ifx_HSSL_TS_FC_Bits',0,9,130,3,3
	.word	13809
	.byte	33
	.byte	'Ifx_HSSL_TSSA_Bits',0,9,137,3,3
	.word	13589
	.byte	33
	.byte	'Ifx_HSSL_TSTAT_Bits',0,9,150,3,3
	.word	12897
	.byte	33
	.byte	'Ifx_HSSL_ACCEN0',0,9,163,3,3
	.word	15613
	.byte	33
	.byte	'Ifx_HSSL_ACCEN1',0,9,171,3,3
	.word	15043
	.byte	33
	.byte	'Ifx_HSSL_AR',0,9,179,3,3
	.word	14410
	.byte	33
	.byte	'Ifx_HSSL_AW_AWEND',0,9,187,3,3
	.word	14154
	.byte	33
	.byte	'Ifx_HSSL_AW_AWSTART',0,9,195,3,3
	.word	14047
	.byte	33
	.byte	'Ifx_HSSL_CFG',0,9,203,3,3
	.word	10130
	.byte	33
	.byte	'Ifx_HSSL_CLC',0,9,211,3,3
	.word	9695
	.byte	33
	.byte	'Ifx_HSSL_CRC',0,9,219,3,3
	.word	9941
	.byte	33
	.byte	'Ifx_HSSL_I_ICON',0,9,227,3,3
	.word	12377
	.byte	33
	.byte	'Ifx_HSSL_I_IRD',0,9,235,3,3
	.word	12549
	.byte	33
	.byte	'Ifx_HSSL_I_IRWA',0,9,243,3,3
	.word	12465
	.byte	33
	.byte	'Ifx_HSSL_I_IWD',0,9,251,3,3
	.word	12149
	.byte	33
	.byte	'Ifx_HSSL_ID',0,9,131,4,3
	.word	9818
	.byte	33
	.byte	'Ifx_HSSL_IS_CA',0,9,139,4,3
	.word	13380
	.byte	33
	.byte	'Ifx_HSSL_IS_FC',0,9,147,4,3
	.word	13488
	.byte	33
	.byte	'Ifx_HSSL_ISSA',0,9,155,4,3
	.word	13265
	.byte	33
	.byte	'Ifx_HSSL_KRST0',0,9,163,4,3
	.word	14953
	.byte	33
	.byte	'Ifx_HSSL_KRST1',0,9,171,4,3
	.word	14829
	.byte	33
	.byte	'Ifx_HSSL_KRSTCLR',0,9,179,4,3
	.word	14724
	.byte	33
	.byte	'Ifx_HSSL_MFLAGS',0,9,187,4,3
	.word	10767
	.byte	33
	.byte	'Ifx_HSSL_MFLAGSCL',0,9,195,4,3
	.word	11560
	.byte	33
	.byte	'Ifx_HSSL_MFLAGSEN',0,9,203,4,3
	.word	11886
	.byte	33
	.byte	'Ifx_HSSL_MFLAGSSET',0,9,211,4,3
	.word	11164
	.byte	33
	.byte	'Ifx_HSSL_OCS',0,9,219,4,3
	.word	14617
	.byte	33
	.byte	'Ifx_HSSL_QFLAGS',0,9,227,4,3
	.word	10396
	.byte	33
	.byte	'Ifx_HSSL_SFSFLAGS',0,9,235,4,3
	.word	12065
	.byte	33
	.byte	'Ifx_HSSL_T_TCA',0,9,243,4,3
	.word	12798
	.byte	33
	.byte	'Ifx_HSSL_T_TCD',0,9,251,4,3
	.word	12717
	.byte	33
	.byte	'Ifx_HSSL_TIDADD',0,9,131,5,3
	.word	13159
	.byte	33
	.byte	'Ifx_HSSL_TS_CA',0,9,139,5,3
	.word	13769
	.byte	33
	.byte	'Ifx_HSSL_TS_FC',0,9,147,5,3
	.word	13877
	.byte	33
	.byte	'Ifx_HSSL_TSSA',0,9,155,5,3
	.word	13654
	.byte	33
	.byte	'Ifx_HSSL_TSTAT',0,9,163,5,3
	.word	13077
	.byte	14
	.word	14194
	.byte	33
	.byte	'Ifx_HSSL_AW',0,9,178,5,3
	.word	26580
	.byte	14
	.word	12589
	.byte	33
	.byte	'Ifx_HSSL_I',0,9,187,5,3
	.word	26606
	.byte	14
	.word	13528
	.byte	33
	.byte	'Ifx_HSSL_IS',0,9,195,5,3
	.word	26631
	.byte	14
	.word	12838
	.byte	33
	.byte	'Ifx_HSSL_T',0,9,202,5,3
	.word	26657
	.byte	14
	.word	13917
	.byte	33
	.byte	'Ifx_HSSL_TS',0,9,210,5,3
	.word	26682
	.byte	14
	.word	15664
	.byte	33
	.byte	'Ifx_HSSL',0,9,254,5,3
	.word	26708
	.byte	33
	.byte	'Ifx_HSCT_ACCEN0_Bits',0,10,79,3
	.word	19989
	.byte	33
	.byte	'Ifx_HSCT_ACCEN1_Bits',0,10,85,3
	.word	19899
	.byte	33
	.byte	'Ifx_HSCT_CLC_Bits',0,10,95,3
	.word	16162
	.byte	33
	.byte	'Ifx_HSCT_CONFIGPHY_Bits',0,10,112,3
	.word	17771
	.byte	33
	.byte	'Ifx_HSCT_CTSCTRL_Bits',0,10,122,3
	.word	17038
	.byte	33
	.byte	'Ifx_HSCT_DISABLE_Bits',0,10,131,1,3
	.word	17212
	.byte	33
	.byte	'Ifx_HSCT_ID_Bits',0,10,139,1,3
	.word	16319
	.byte	33
	.byte	'Ifx_HSCT_IFCTRL_Bits',0,10,151,1,3
	.word	16700
	.byte	33
	.byte	'Ifx_HSCT_IFSTAT_Bits',0,10,159,1,3
	.word	17642
	.byte	33
	.byte	'Ifx_HSCT_INIT_Bits',0,10,174,1,3
	.word	16442
	.byte	33
	.byte	'Ifx_HSCT_IRQ_Bits',0,10,193,1,3
	.word	18215
	.byte	33
	.byte	'Ifx_HSCT_IRQCLR_Bits',0,10,212,1,3
	.word	18839
	.byte	33
	.byte	'Ifx_HSCT_IRQEN_Bits',0,10,231,1,3
	.word	18514
	.byte	33
	.byte	'Ifx_HSCT_KRST0_Bits',0,10,239,1,3
	.word	19775
	.byte	33
	.byte	'Ifx_HSCT_KRST1_Bits',0,10,246,1,3
	.word	19670
	.byte	33
	.byte	'Ifx_HSCT_KRSTCLR_Bits',0,10,253,1,3
	.word	19563
	.byte	33
	.byte	'Ifx_HSCT_OCS_Bits',0,10,138,2,3
	.word	19356
	.byte	33
	.byte	'Ifx_HSCT_SLEEPCTRL_Bits',0,10,146,2,3
	.word	16908
	.byte	33
	.byte	'Ifx_HSCT_STAT_Bits',0,10,161,2,3
	.word	17358
	.byte	33
	.byte	'Ifx_HSCT_STATPHY_Bits',0,10,170,2,3
	.word	18072
	.byte	33
	.byte	'Ifx_HSCT_USMR_Bits',0,10,176,2,3
	.word	19177
	.byte	33
	.byte	'Ifx_HSCT_USMS_Bits',0,10,182,2,3
	.word	19260
	.byte	33
	.byte	'Ifx_HSCT_ACCEN0',0,10,195,2,3
	.word	20519
	.byte	33
	.byte	'Ifx_HSCT_ACCEN1',0,10,203,2,3
	.word	19949
	.byte	33
	.byte	'Ifx_HSCT_CLC',0,10,211,2,3
	.word	16279
	.byte	33
	.byte	'Ifx_HSCT_CONFIGPHY',0,10,219,2,3
	.word	18032
	.byte	33
	.byte	'Ifx_HSCT_CTSCTRL',0,10,227,2,3
	.word	17172
	.byte	33
	.byte	'Ifx_HSCT_DISABLE',0,10,235,2,3
	.word	17318
	.byte	33
	.byte	'Ifx_HSCT_ID',0,10,243,2,3
	.word	16402
	.byte	33
	.byte	'Ifx_HSCT_IFCTRL',0,10,251,2,3
	.word	16868
	.byte	33
	.byte	'Ifx_HSCT_IFSTAT',0,10,131,3,3
	.word	17731
	.byte	33
	.byte	'Ifx_HSCT_INIT',0,10,139,3,3
	.word	16660
	.byte	33
	.byte	'Ifx_HSCT_IRQ',0,10,147,3,3
	.word	18474
	.byte	33
	.byte	'Ifx_HSCT_IRQCLR',0,10,155,3,3
	.word	19137
	.byte	33
	.byte	'Ifx_HSCT_IRQEN',0,10,163,3,3
	.word	18799
	.byte	33
	.byte	'Ifx_HSCT_KRST0',0,10,171,3,3
	.word	19859
	.byte	33
	.byte	'Ifx_HSCT_KRST1',0,10,179,3,3
	.word	19735
	.byte	33
	.byte	'Ifx_HSCT_KRSTCLR',0,10,187,3,3
	.word	19630
	.byte	33
	.byte	'Ifx_HSCT_OCS',0,10,195,3,3
	.word	19523
	.byte	33
	.byte	'Ifx_HSCT_SLEEPCTRL',0,10,203,3,3
	.word	16998
	.byte	33
	.byte	'Ifx_HSCT_STAT',0,10,211,3,3
	.word	17602
	.byte	33
	.byte	'Ifx_HSCT_STATPHY',0,10,219,3,3
	.word	18175
	.byte	33
	.byte	'Ifx_HSCT_USMR',0,10,227,3,3
	.word	19220
	.byte	33
	.byte	'Ifx_HSCT_USMS',0,10,235,3,3
	.word	19303
	.byte	14
	.word	20559
	.byte	33
	.byte	'Ifx_HSCT',0,10,148,4,3
	.word	27908
	.byte	15,16,250,10,9,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,16
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,33
	.byte	'IfxScu_WDTCON1_IR',0,16,255,10,3
	.word	27931
	.byte	10
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,17,45,16,4,11
	.byte	'EN0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	436
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	436
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	436
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	436
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	436
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	436
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	436
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	436
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_ACCEN0_Bits',0,17,79,3
	.word	28053
	.byte	10
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,17,82,16,4,11
	.byte	'reserved_0',0,4
	.word	413
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN1_Bits',0,17,85,3
	.word	28610
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,17,88,16,4,11
	.byte	'STM0DIS',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	413
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,17,94,3
	.word	28687
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,17,97,16,4,11
	.byte	'BAUD1DIV',0,1
	.word	436
	.byte	4,4,2,35,0,11
	.byte	'BAUD2DIV',0,1
	.word	436
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	436
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	436
	.byte	4,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	436
	.byte	4,4,2,35,2,11
	.byte	'FSI2DIV',0,1
	.word	436
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	436
	.byte	2,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	436
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	436
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	436
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON0_Bits',0,17,111,3
	.word	28823
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,17,114,16,4,11
	.byte	'CANDIV',0,1
	.word	436
	.byte	4,4,2,35,0,11
	.byte	'ERAYDIV',0,1
	.word	436
	.byte	4,0,2,35,0,11
	.byte	'STMDIV',0,1
	.word	436
	.byte	4,4,2,35,1,11
	.byte	'GTMDIV',0,1
	.word	436
	.byte	4,0,2,35,1,11
	.byte	'ETHDIV',0,1
	.word	436
	.byte	4,4,2,35,2,11
	.byte	'ASCLINFDIV',0,1
	.word	436
	.byte	4,0,2,35,2,11
	.byte	'ASCLINSDIV',0,1
	.word	436
	.byte	4,4,2,35,3,11
	.byte	'INSEL',0,1
	.word	436
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON1_Bits',0,17,126,3
	.word	29103
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,17,129,1,16,4,11
	.byte	'BBBDIV',0,1
	.word	436
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	413
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON2_Bits',0,17,135,1,3
	.word	29341
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,17,138,1,16,4,11
	.byte	'PLLDIV',0,1
	.word	436
	.byte	6,2,2,35,0,11
	.byte	'PLLSEL',0,1
	.word	436
	.byte	2,0,2,35,0,11
	.byte	'PLLERAYDIV',0,1
	.word	436
	.byte	6,2,2,35,1,11
	.byte	'PLLERAYSEL',0,1
	.word	436
	.byte	2,0,2,35,1,11
	.byte	'SRIDIV',0,1
	.word	436
	.byte	6,2,2,35,2,11
	.byte	'SRISEL',0,1
	.word	436
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON3_Bits',0,17,150,1,3
	.word	29469
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,17,153,1,16,4,11
	.byte	'SPBDIV',0,1
	.word	436
	.byte	6,2,2,35,0,11
	.byte	'SPBSEL',0,1
	.word	436
	.byte	2,0,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	436
	.byte	6,2,2,35,1,11
	.byte	'GTMSEL',0,1
	.word	436
	.byte	2,0,2,35,1,11
	.byte	'STMDIV',0,1
	.word	436
	.byte	6,2,2,35,2,11
	.byte	'STMSEL',0,1
	.word	436
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON4_Bits',0,17,165,1,3
	.word	29712
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,17,168,1,16,4,11
	.byte	'MAXDIV',0,1
	.word	436
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	413
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON5_Bits',0,17,174,1,3
	.word	29947
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,17,177,1,16,4,11
	.byte	'CPU0DIV',0,1
	.word	436
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	413
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON6_Bits',0,17,181,1,3
	.word	30075
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,17,184,1,16,4,11
	.byte	'CPU1DIV',0,1
	.word	436
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	413
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON7_Bits',0,17,188,1,3
	.word	30175
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,17,191,1,16,4,11
	.byte	'CHREV',0,1
	.word	436
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	436
	.byte	2,0,2,35,0,11
	.byte	'CHID',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'EEA',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	436
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	436
	.byte	4,4,2,35,3,11
	.byte	'SP',0,1
	.word	436
	.byte	2,2,2,35,3,11
	.byte	'SEC',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CHIPID_Bits',0,17,202,1,3
	.word	30275
	.byte	10
	.byte	'_Ifx_SCU_DTSCON_Bits',0,17,205,1,16,4,11
	.byte	'PWD',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'START',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	436
	.byte	2,4,2,35,0,11
	.byte	'CAL',0,4
	.word	413
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	7,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_DTSCON_Bits',0,17,213,1,3
	.word	30483
	.byte	10
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,17,216,1,16,4,11
	.byte	'LOWER',0,2
	.word	931
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	436
	.byte	5,1,2,35,1,11
	.byte	'LLU',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	931
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	436
	.byte	4,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_DTSLIM_Bits',0,17,225,1,3
	.word	30648
	.byte	10
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,17,228,1,16,4,11
	.byte	'RESULT',0,2
	.word	931
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	436
	.byte	4,2,2,35,1,11
	.byte	'RDY',0,1
	.word	436
	.byte	1,1,2,35,1,11
	.byte	'BUSY',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,17,235,1,3
	.word	30831
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,17,238,1,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	436
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	436
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	413
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	436
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	436
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	436
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	436
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EICR_Bits',0,17,129,2,3
	.word	30985
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,17,132,2,16,4,11
	.byte	'INTF0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	413
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_EIFR_Bits',0,17,143,2,3
	.word	31349
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,17,146,2,16,4,11
	.byte	'POL',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	931
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	436
	.byte	6,0,2,35,2,11
	.byte	'EMSFM',0,1
	.word	436
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	436
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	436
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_EMSR_Bits',0,17,159,2,3
	.word	31560
	.byte	10
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,17,162,2,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	931
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	413
	.byte	23,0,2,35,0,0,33
	.byte	'Ifx_SCU_ESRCFG_Bits',0,17,167,2,3
	.word	31812
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,17,170,2,16,4,11
	.byte	'ARI',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	413
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_ESROCFG_Bits',0,17,175,2,3
	.word	31930
	.byte	10
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,17,178,2,16,4,11
	.byte	'reserved_0',0,4
	.word	413
	.byte	28,4,2,35,0,11
	.byte	'EVR13OFF',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'BPEVR13OFF',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVR13CON_Bits',0,17,185,2,3
	.word	32041
	.byte	10
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,17,188,2,16,4,11
	.byte	'reserved_0',0,4
	.word	413
	.byte	28,4,2,35,0,11
	.byte	'EVR33OFF',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'BPEVR33OFF',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVR33CON_Bits',0,17,195,2,3
	.word	32204
	.byte	10
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,17,198,2,16,4,11
	.byte	'ADC13V',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	436
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,17,205,2,3
	.word	32367
	.byte	10
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,17,208,2,16,4,11
	.byte	'DVS13TRIM',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'DVS33TRIM',0,1
	.word	436
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,17,215,2,3
	.word	32525
	.byte	10
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,17,218,2,16,4,11
	.byte	'EVR13OVMOD',0,1
	.word	436
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	436
	.byte	2,4,2,35,0,11
	.byte	'EVR13UVMOD',0,1
	.word	436
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	436
	.byte	2,0,2,35,0,11
	.byte	'EVR33OVMOD',0,1
	.word	436
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	436
	.byte	2,4,2,35,1,11
	.byte	'EVR33UVMOD',0,1
	.word	436
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	436
	.byte	2,0,2,35,1,11
	.byte	'SWDOVMOD',0,1
	.word	436
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	436
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	436
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	931
	.byte	10,0,2,35,2,0,33
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,17,232,2,3
	.word	32690
	.byte	10
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,17,235,2,16,4,11
	.byte	'OSCTRIM',0,2
	.word	931
	.byte	10,6,2,35,0,11
	.byte	'OSCPTAT',0,1
	.word	436
	.byte	6,0,2,35,1,11
	.byte	'OSCANASEL',0,1
	.word	436
	.byte	4,4,2,35,2,11
	.byte	'HPBGTRIM',0,2
	.word	931
	.byte	7,5,2,35,2,11
	.byte	'HPBGCLKEN',0,1
	.word	436
	.byte	1,4,2,35,3,11
	.byte	'OSC3V3',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	436
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,17,245,2,3
	.word	33019
	.byte	10
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,17,248,2,16,4,11
	.byte	'EVR13OVVAL',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	436
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVROVMON_Bits',0,17,255,2,3
	.word	33240
	.byte	10
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,17,130,3,16,4,11
	.byte	'RST13TRIM',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	413
	.byte	16,8,2,35,0,11
	.byte	'RST13OFF',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'BPRST13OFF',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	436
	.byte	1,5,2,35,3,11
	.byte	'BPRST33OFF',0,1
	.word	436
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,17,142,3,3
	.word	33403
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,17,145,3,16,4,11
	.byte	'SD5P',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'SD5I',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'SD5D',0,1
	.word	436
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,17,152,3,3
	.word	33675
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,17,155,3,16,4,11
	.byte	'SD33P',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'SD33I',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'SD33D',0,1
	.word	436
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,17,162,3,3
	.word	33828
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,17,165,3,16,4,11
	.byte	'CT5REG0',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'CT5REG1',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'CT5REG2',0,1
	.word	436
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,17,172,3,3
	.word	33984
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,17,175,3,16,4,11
	.byte	'CT5REG3',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'CT5REG4',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,17,181,3,3
	.word	34146
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,17,184,3,16,4,11
	.byte	'CT33REG0',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'CT33REG1',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'CT33REG2',0,1
	.word	436
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,17,191,3,3
	.word	34289
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,17,194,3,16,4,11
	.byte	'CT33REG3',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'CT33REG4',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,17,200,3,3
	.word	34454
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,17,203,3,16,4,11
	.byte	'SDFREQSPRD',0,2
	.word	931
	.byte	16,0,2,35,0,11
	.byte	'SDFREQ',0,1
	.word	436
	.byte	8,0,2,35,2,11
	.byte	'SDSTEP',0,1
	.word	436
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	436
	.byte	2,2,2,35,3,11
	.byte	'SDSAMPLE',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,17,211,3,3
	.word	34599
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,17,214,3,16,4,11
	.byte	'DRVP',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'SDMINMAXDC',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'DRVN',0,1
	.word	436
	.byte	8,0,2,35,2,11
	.byte	'SDLUT',0,1
	.word	436
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,17,222,3,3
	.word	34780
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,17,225,3,16,4,11
	.byte	'SDPWMPRE',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'SDPID',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'SDVOKLVL',0,1
	.word	436
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,17,232,3,3
	.word	34954
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,17,235,3,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'SYNCDIV',0,1
	.word	436
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	413
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,17,241,3,3
	.word	35114
	.byte	10
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,17,244,3,16,4,11
	.byte	'EVR13',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'OV13',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'EVR33',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'OV33',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'UV13',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'UV33',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'EXTPASS13',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'EXTPASS33',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'BGPROK',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	413
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,17,130,4,3
	.word	35258
	.byte	10
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,17,133,4,16,4,11
	.byte	'EVR13TRIM',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,17,139,4,3
	.word	35532
	.byte	10
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,17,142,4,16,4,11
	.byte	'EVR13UVVAL',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	436
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,17,149,4,3
	.word	35671
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,17,152,4,16,4,11
	.byte	'EN0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	436
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	931
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	436
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	436
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	436
	.byte	8,0,2,35,3,0,33
	.byte	'Ifx_SCU_EXTCON_Bits',0,17,163,4,3
	.word	35834
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,17,166,4,16,4,11
	.byte	'STEP',0,2
	.word	931
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	436
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	436
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	931
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	436
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_FDR_Bits',0,17,174,4,3
	.word	36052
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,17,177,4,16,4,11
	.byte	'FS0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	436
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	436
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	436
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	8,0,2,35,3,0,33
	.byte	'Ifx_SCU_FMR_Bits',0,17,197,4,3
	.word	36215
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,17,200,4,16,4,11
	.byte	'MODREV',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	931
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_ID_Bits',0,17,205,4,3
	.word	36551
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,17,208,4,16,4,11
	.byte	'IPEN00',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	436
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	436
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	436
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	436
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	436
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	436
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	436
	.byte	2,0,2,35,3,0,33
	.byte	'Ifx_SCU_IGCR_Bits',0,17,232,4,3
	.word	36658
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,17,235,4,16,4,11
	.byte	'P0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	413
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_IN_Bits',0,17,240,4,3
	.word	37110
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,17,243,4,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	436
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	436
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	436
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_IOCR_Bits',0,17,250,4,3
	.word	37209
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,17,253,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'LBISTREQP',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,2
	.word	931
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,17,131,5,3
	.word	37359
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,17,134,5,16,4,11
	.byte	'SEED',0,4
	.word	413
	.byte	23,9,2,35,0,11
	.byte	'reserved_23',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	436
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	436
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	436
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,17,141,5,3
	.word	37508
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,17,144,5,16,4,11
	.byte	'SIGNATURE',0,4
	.word	413
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	7,1,2,35,3,11
	.byte	'LBISTDONE',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,17,149,5,3
	.word	37669
	.byte	10
	.byte	'_Ifx_SCU_LCLCON_Bits',0,17,152,5,16,4,11
	.byte	'reserved_0',0,2
	.word	931
	.byte	16,0,2,35,0,11
	.byte	'LS',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	931
	.byte	14,1,2,35,2,11
	.byte	'LSEN',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_LCLCON_Bits',0,17,158,5,3
	.word	37799
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,17,161,5,16,4,11
	.byte	'LCLT0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	413
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_LCLTEST_Bits',0,17,166,5,3
	.word	37931
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,17,169,5,16,4,11
	.byte	'DEPT',0,1
	.word	436
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	931
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_MANID_Bits',0,17,174,5,3
	.word	38046
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,17,177,5,16,4,11
	.byte	'PS0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	931
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	931
	.byte	14,0,2,35,2,0,33
	.byte	'Ifx_SCU_OMR_Bits',0,17,185,5,3
	.word	38157
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,17,188,5,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	436
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	436
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'X1D',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'X1DEN',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	436
	.byte	4,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	436
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	436
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	436
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	436
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	436
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_OSCCON_Bits',0,17,209,5,3
	.word	38315
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,17,212,5,16,4,11
	.byte	'P0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	413
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_OUT_Bits',0,17,217,5,3
	.word	38727
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,17,220,5,16,4,11
	.byte	'CSEL0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	931
	.byte	13,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	436
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	436
	.byte	6,0,2,35,3,0,33
	.byte	'Ifx_SCU_OVCCON_Bits',0,17,233,5,3
	.word	38828
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,17,236,5,16,4,11
	.byte	'OVEN0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	413
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,17,242,5,3
	.word	39095
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,17,245,5,16,4,11
	.byte	'PDIS0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	413
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_PDISC_Bits',0,17,250,5,3
	.word	39231
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,17,253,5,16,4,11
	.byte	'PD0',0,1
	.word	436
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	436
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	413
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_PDR_Bits',0,17,132,6,3
	.word	39342
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,17,135,6,16,4,11
	.byte	'PDR0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	413
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_PDRR_Bits',0,17,146,6,3
	.word	39475
	.byte	10
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,17,149,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	931
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	436
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	436
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	436
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	436
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_PLLCON0_Bits',0,17,166,6,3
	.word	39678
	.byte	10
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,17,169,6,16,4,11
	.byte	'K2DIV',0,1
	.word	436
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	436
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	436
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	931
	.byte	9,0,2,35,2,0,33
	.byte	'Ifx_SCU_PLLCON1_Bits',0,17,177,6,3
	.word	40034
	.byte	10
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,17,180,6,16,4,11
	.byte	'MODCFG',0,2
	.word	931
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_PLLCON2_Bits',0,17,184,6,3
	.word	40212
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,17,187,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	436
	.byte	2,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	931
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	436
	.byte	5,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	436
	.byte	2,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	436
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	436
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	436
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,17,204,6,3
	.word	40312
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,17,207,6,16,4,11
	.byte	'K2DIV',0,1
	.word	436
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	436
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	436
	.byte	4,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	436
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	931
	.byte	9,0,2,35,2,0,33
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,17,215,6,3
	.word	40682
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,17,218,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	413
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,17,227,6,3
	.word	40868
	.byte	10
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,17,230,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	413
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,17,241,6,3
	.word	41066
	.byte	10
	.byte	'_Ifx_SCU_PMCSR_Bits',0,17,244,6,16,4,11
	.byte	'REQSLP',0,1
	.word	436
	.byte	2,6,2,35,0,11
	.byte	'SMUSLP',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	436
	.byte	5,0,2,35,0,11
	.byte	'PMST',0,1
	.word	436
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	413
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR_Bits',0,17,251,6,3
	.word	41299
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,17,254,6,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKEN',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'PINAWKEN',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'PINBWKEN',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	436
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	436
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	436
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	436
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	436
	.byte	2,0,2,35,1,11
	.byte	'SCREN',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'STBYRAMSEL',0,1
	.word	436
	.byte	2,5,2,35,2,11
	.byte	'SCRCLKSEL',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	436
	.byte	1,3,2,35,2,11
	.byte	'TRISTEN',0,1
	.word	436
	.byte	1,2,2,35,2,11
	.byte	'TRISTREQ',0,1
	.word	436
	.byte	1,1,2,35,2,11
	.byte	'PORSTDF',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'DCDCSYNC',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	436
	.byte	3,3,2,35,3,11
	.byte	'ESR0TRIST',0,1
	.word	436
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	436
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,17,153,7,3
	.word	41451
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,17,156,7,16,4,11
	.byte	'SCRSTEN',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'SCRSTREQ',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	436
	.byte	6,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	436
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	436
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	436
	.byte	3,0,2,35,1,11
	.byte	'SCRCFG',0,1
	.word	436
	.byte	8,0,2,35,2,11
	.byte	'CPUSEL',0,1
	.word	436
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	436
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	436
	.byte	3,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,17,170,7,3
	.word	42018
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR2_Bits',0,17,173,7,16,4,11
	.byte	'SCRINT',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'BUSY',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'SCRECC',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'SCRWDT',0,1
	.word	436
	.byte	1,5,2,35,1,11
	.byte	'SCRRST',0,1
	.word	436
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	436
	.byte	4,0,2,35,1,11
	.byte	'TCINT',0,1
	.word	436
	.byte	8,0,2,35,2,11
	.byte	'TCINTREQ',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'SMURST',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'RST',0,1
	.word	436
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	436
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	436
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMSWCR2_Bits',0,17,187,7,3
	.word	42312
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,17,190,7,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUN',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUN',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUN',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	436
	.byte	1,6,2,35,1,11
	.byte	'HWCFGEVR',0,1
	.word	436
	.byte	3,3,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	436
	.byte	2,1,2,35,1,11
	.byte	'TRIST',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'SCRST',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'SCRWKP',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'SCR',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'ESR1WKEN',0,1
	.word	436
	.byte	1,3,2,35,2,11
	.byte	'PINAWKEN',0,1
	.word	436
	.byte	1,2,2,35,2,11
	.byte	'PINBWKEN',0,1
	.word	436
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	931
	.byte	4,5,2,35,2,11
	.byte	'ESR0TRIST',0,1
	.word	436
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	436
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,17,214,7,3
	.word	42590
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,17,217,7,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUNCLR',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUNCLR',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'SCRSTCLR',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'SCRWKPCLR',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	931
	.byte	14,0,2,35,2,0,33
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,17,230,7,3
	.word	43086
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,17,233,7,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	931
	.byte	10,4,2,35,0,11
	.byte	'CSS0',0,1
	.word	436
	.byte	1,3,2,35,1,11
	.byte	'CSS1',0,1
	.word	436
	.byte	1,2,2,35,1,11
	.byte	'CSS2',0,1
	.word	436
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	931
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_RSTCON2_Bits',0,17,243,7,3
	.word	43399
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,17,246,7,16,4,11
	.byte	'ESR0',0,1
	.word	436
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	436
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	436
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	436
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	436
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	436
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	436
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	436
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_RSTCON_Bits',0,17,129,8,3
	.word	43608
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,17,132,8,16,4,11
	.byte	'ESR0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	436
	.byte	8,0,2,35,1,11
	.byte	'PORST',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	436
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	436
	.byte	2,1,2,35,2,11
	.byte	'EVR13',0,1
	.word	436
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	436
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	436
	.byte	2,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	436
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	436
	.byte	3,0,2,35,3,0,33
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,17,155,8,3
	.word	43819
	.byte	10
	.byte	'_Ifx_SCU_SAFECON_Bits',0,17,158,8,16,4,11
	.byte	'HBT',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	413
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_SCU_SAFECON_Bits',0,17,162,8,3
	.word	44251
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,17,165,8,16,4,11
	.byte	'HWCFG',0,1
	.word	436
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	436
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	436
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	436
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	436
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	436
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	436
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	436
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	436
	.byte	3,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	436
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	436
	.byte	7,0,2,35,3,0,33
	.byte	'Ifx_SCU_STSTAT_Bits',0,17,178,8,3
	.word	44347
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,17,181,8,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	413
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,17,186,8,3
	.word	44607
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,17,189,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	436
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	436
	.byte	3,0,2,35,0,11
	.byte	'DATM',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	413
	.byte	23,0,2,35,0,0,33
	.byte	'Ifx_SCU_SYSCON_Bits',0,17,198,8,3
	.word	44732
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,17,201,8,16,4,11
	.byte	'ESR0T',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	413
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,17,208,8,3
	.word	44929
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,17,211,8,16,4,11
	.byte	'ESR0T',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	413
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,17,218,8,3
	.word	45082
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,17,221,8,16,4,11
	.byte	'ESR0T',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	413
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSET_Bits',0,17,228,8,3
	.word	45235
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,17,231,8,16,4,11
	.byte	'ESR0T',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	413
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,17,238,8,3
	.word	45388
	.byte	7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,17,241,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	45543
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	45543
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	45543
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	45543
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,17,247,8,3
	.word	45559
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,17,250,8,16,4,11
	.byte	'reserved_0',0,1
	.word	436
	.byte	2,6,2,35,0,11
	.byte	'IR0',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	436
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,17,134,9,3
	.word	45689
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,17,137,9,16,4,11
	.byte	'AE',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	436
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	931
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,17,150,9,3
	.word	45927
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,17,153,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	45543
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	45543
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	45543
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	45543
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,17,159,9,3
	.word	46150
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,17,162,9,16,4,11
	.byte	'CLRIRF',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	436
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	931
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,17,175,9,3
	.word	46276
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,17,178,9,16,4,11
	.byte	'AE',0,1
	.word	436
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	436
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	436
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	436
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	436
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	436
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	436
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	436
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	436
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	436
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	931
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,17,191,9,3
	.word	46528
	.byte	12,17,199,9,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28053
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN0',0,17,204,9,3
	.word	46747
	.byte	12,17,207,9,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28610
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN1',0,17,212,9,3
	.word	46811
	.byte	12,17,215,9,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28687
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ARSTDIS',0,17,220,9,3
	.word	46875
	.byte	12,17,223,9,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28823
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON0',0,17,228,9,3
	.word	46940
	.byte	12,17,231,9,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29103
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON1',0,17,236,9,3
	.word	47005
	.byte	12,17,239,9,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29341
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON2',0,17,244,9,3
	.word	47070
	.byte	12,17,247,9,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29469
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON3',0,17,252,9,3
	.word	47135
	.byte	12,17,255,9,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29712
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON4',0,17,132,10,3
	.word	47200
	.byte	12,17,135,10,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29947
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON5',0,17,140,10,3
	.word	47265
	.byte	12,17,143,10,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30075
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON6',0,17,148,10,3
	.word	47330
	.byte	12,17,151,10,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30175
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON7',0,17,156,10,3
	.word	47395
	.byte	12,17,159,10,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30275
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CHIPID',0,17,164,10,3
	.word	47460
	.byte	12,17,167,10,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30483
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_DTSCON',0,17,172,10,3
	.word	47524
	.byte	12,17,175,10,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30648
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_DTSLIM',0,17,180,10,3
	.word	47588
	.byte	12,17,183,10,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30831
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_DTSSTAT',0,17,188,10,3
	.word	47652
	.byte	12,17,191,10,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30985
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EICR',0,17,196,10,3
	.word	47717
	.byte	12,17,199,10,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31349
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EIFR',0,17,204,10,3
	.word	47779
	.byte	12,17,207,10,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31560
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EMSR',0,17,212,10,3
	.word	47841
	.byte	12,17,215,10,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31812
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ESRCFG',0,17,220,10,3
	.word	47903
	.byte	12,17,223,10,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31930
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ESROCFG',0,17,228,10,3
	.word	47967
	.byte	12,17,231,10,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32041
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVR13CON',0,17,236,10,3
	.word	48032
	.byte	12,17,239,10,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32204
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVR33CON',0,17,244,10,3
	.word	48098
	.byte	12,17,247,10,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32367
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRADCSTAT',0,17,252,10,3
	.word	48164
	.byte	12,17,255,10,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32525
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRDVSTAT',0,17,132,11,3
	.word	48232
	.byte	12,17,135,11,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32690
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRMONCTRL',0,17,140,11,3
	.word	48299
	.byte	12,17,143,11,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33019
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVROSCCTRL',0,17,148,11,3
	.word	48367
	.byte	12,17,151,11,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33240
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVROVMON',0,17,156,11,3
	.word	48435
	.byte	12,17,159,11,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33403
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRRSTCON',0,17,164,11,3
	.word	48501
	.byte	12,17,167,11,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33675
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,17,172,11,3
	.word	48568
	.byte	12,17,175,11,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33828
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,17,180,11,3
	.word	48637
	.byte	12,17,183,11,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33984
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,17,188,11,3
	.word	48706
	.byte	12,17,191,11,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34146
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,17,196,11,3
	.word	48775
	.byte	12,17,199,11,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34289
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,17,204,11,3
	.word	48844
	.byte	12,17,207,11,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34454
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,17,212,11,3
	.word	48913
	.byte	12,17,215,11,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34599
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCTRL1',0,17,220,11,3
	.word	48982
	.byte	12,17,223,11,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34780
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCTRL2',0,17,228,11,3
	.word	49050
	.byte	12,17,231,11,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34954
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCTRL3',0,17,236,11,3
	.word	49118
	.byte	12,17,239,11,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35114
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSDCTRL4',0,17,244,11,3
	.word	49186
	.byte	12,17,247,11,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35258
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRSTAT',0,17,252,11,3
	.word	49254
	.byte	12,17,255,11,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35532
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRTRIM',0,17,132,12,3
	.word	49319
	.byte	12,17,135,12,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35671
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EVRUVMON',0,17,140,12,3
	.word	49384
	.byte	12,17,143,12,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35834
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EXTCON',0,17,148,12,3
	.word	49450
	.byte	12,17,151,12,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36052
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_FDR',0,17,156,12,3
	.word	49514
	.byte	12,17,159,12,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36215
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_FMR',0,17,164,12,3
	.word	49575
	.byte	12,17,167,12,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36551
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ID',0,17,172,12,3
	.word	49636
	.byte	12,17,175,12,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36658
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_IGCR',0,17,180,12,3
	.word	49696
	.byte	12,17,183,12,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37110
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_IN',0,17,188,12,3
	.word	49758
	.byte	12,17,191,12,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37209
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_IOCR',0,17,196,12,3
	.word	49818
	.byte	12,17,199,12,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37359
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL0',0,17,204,12,3
	.word	49880
	.byte	12,17,207,12,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37508
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL1',0,17,212,12,3
	.word	49948
	.byte	12,17,215,12,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37669
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL2',0,17,220,12,3
	.word	50016
	.byte	12,17,223,12,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37799
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LCLCON',0,17,228,12,3
	.word	50084
	.byte	12,17,231,12,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37931
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LCLTEST',0,17,236,12,3
	.word	50148
	.byte	12,17,239,12,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38046
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_MANID',0,17,244,12,3
	.word	50213
	.byte	12,17,247,12,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38157
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OMR',0,17,252,12,3
	.word	50276
	.byte	12,17,255,12,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38315
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OSCCON',0,17,132,13,3
	.word	50337
	.byte	12,17,135,13,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38727
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OUT',0,17,140,13,3
	.word	50401
	.byte	12,17,143,13,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38828
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OVCCON',0,17,148,13,3
	.word	50462
	.byte	12,17,151,13,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39095
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OVCENABLE',0,17,156,13,3
	.word	50526
	.byte	12,17,159,13,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39231
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PDISC',0,17,164,13,3
	.word	50593
	.byte	12,17,167,13,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39342
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PDR',0,17,172,13,3
	.word	50656
	.byte	12,17,175,13,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39475
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PDRR',0,17,180,13,3
	.word	50717
	.byte	12,17,183,13,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39678
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLCON0',0,17,188,13,3
	.word	50779
	.byte	12,17,191,13,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40034
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLCON1',0,17,196,13,3
	.word	50844
	.byte	12,17,199,13,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40212
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLCON2',0,17,204,13,3
	.word	50909
	.byte	12,17,207,13,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40312
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLERAYCON0',0,17,212,13,3
	.word	50974
	.byte	12,17,215,13,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40682
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLERAYCON1',0,17,220,13,3
	.word	51043
	.byte	12,17,223,13,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40868
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLERAYSTAT',0,17,228,13,3
	.word	51112
	.byte	12,17,231,13,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41066
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PLLSTAT',0,17,236,13,3
	.word	51181
	.byte	12,17,239,13,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41299
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR',0,17,244,13,3
	.word	51246
	.byte	12,17,247,13,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41451
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSWCR0',0,17,252,13,3
	.word	51309
	.byte	12,17,255,13,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42018
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSWCR1',0,17,132,14,3
	.word	51374
	.byte	12,17,135,14,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42312
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSWCR2',0,17,140,14,3
	.word	51439
	.byte	12,17,143,14,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42590
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSWSTAT',0,17,148,14,3
	.word	51504
	.byte	12,17,151,14,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43086
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSWSTATCLR',0,17,156,14,3
	.word	51570
	.byte	12,17,159,14,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43608
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_RSTCON',0,17,164,14,3
	.word	51639
	.byte	12,17,167,14,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43399
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_RSTCON2',0,17,172,14,3
	.word	51703
	.byte	12,17,175,14,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43819
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_RSTSTAT',0,17,180,14,3
	.word	51768
	.byte	12,17,183,14,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44251
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SAFECON',0,17,188,14,3
	.word	51833
	.byte	12,17,191,14,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44347
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STSTAT',0,17,196,14,3
	.word	51898
	.byte	12,17,199,14,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44607
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SWRSTCON',0,17,204,14,3
	.word	51962
	.byte	12,17,207,14,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44732
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SYSCON',0,17,212,14,3
	.word	52028
	.byte	12,17,215,14,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44929
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPCLR',0,17,220,14,3
	.word	52092
	.byte	12,17,223,14,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45082
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPDIS',0,17,228,14,3
	.word	52157
	.byte	12,17,231,14,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45235
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSET',0,17,236,14,3
	.word	52222
	.byte	12,17,239,14,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45388
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSTAT',0,17,244,14,3
	.word	52287
	.byte	12,17,247,14,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45559
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTCPU_CON0',0,17,252,14,3
	.word	52353
	.byte	12,17,255,14,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45689
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTCPU_CON1',0,17,132,15,3
	.word	52422
	.byte	12,17,135,15,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45927
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTCPU_SR',0,17,140,15,3
	.word	52491
	.byte	12,17,143,15,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46150
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_CON0',0,17,148,15,3
	.word	52558
	.byte	12,17,151,15,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46276
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_CON1',0,17,156,15,3
	.word	52625
	.byte	12,17,159,15,9,4,13
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46528
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_SR',0,17,164,15,3
	.word	52692
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU',0,17,175,15,25,12,13
	.byte	'CON0',0
	.word	52353
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	52422
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	52491
	.byte	4,2,35,8,0,14
	.word	52757
	.byte	33
	.byte	'Ifx_SCU_WDTCPU',0,17,180,15,3
	.word	52820
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,17,183,15,25,12,13
	.byte	'CON0',0
	.word	52558
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	52625
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	52692
	.byte	4,2,35,8,0,14
	.word	52849
	.byte	33
	.byte	'Ifx_SCU_WDTS',0,17,188,15,3
	.word	52910
	.byte	33
	.byte	'IfxSrc_Tos',0,5,74,3
	.word	872
	.byte	33
	.byte	'Ifx_SRC_SRCR_Bits',0,4,62,3
	.word	453
	.byte	33
	.byte	'Ifx_SRC_SRCR',0,4,75,3
	.word	743
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,4,86,25,4,13
	.byte	'SR',0
	.word	743
	.byte	4,2,35,0,0,14
	.word	53003
	.byte	33
	.byte	'Ifx_SRC_AGBT',0,4,89,3
	.word	53035
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,4,92,25,12,13
	.byte	'TX',0
	.word	743
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	743
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	743
	.byte	4,2,35,8,0,14
	.word	53061
	.byte	33
	.byte	'Ifx_SRC_ASCLIN',0,4,97,3
	.word	53120
	.byte	10
	.byte	'_Ifx_SRC_BCUSPB',0,4,100,25,4,13
	.byte	'SBSRC',0
	.word	743
	.byte	4,2,35,0,0,14
	.word	53148
	.byte	33
	.byte	'Ifx_SRC_BCUSPB',0,4,103,3
	.word	53185
	.byte	18,64
	.word	743
	.byte	19,15,0,10
	.byte	'_Ifx_SRC_CAN',0,4,106,25,64,13
	.byte	'INT',0
	.word	53213
	.byte	64,2,35,0,0,14
	.word	53222
	.byte	33
	.byte	'Ifx_SRC_CAN',0,4,109,3
	.word	53254
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,4,112,25,16,13
	.byte	'SR0',0
	.word	743
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	743
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	743
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	743
	.byte	4,2,35,12,0,14
	.word	53279
	.byte	33
	.byte	'Ifx_SRC_CCU6',0,4,118,3
	.word	53351
	.byte	18,8
	.word	743
	.byte	19,1,0,10
	.byte	'_Ifx_SRC_CERBERUS',0,4,121,25,8,13
	.byte	'SR',0
	.word	53377
	.byte	8,2,35,0,0,14
	.word	53386
	.byte	33
	.byte	'Ifx_SRC_CERBERUS',0,4,124,3
	.word	53422
	.byte	10
	.byte	'_Ifx_SRC_CIF',0,4,127,25,16,13
	.byte	'MI',0
	.word	743
	.byte	4,2,35,0,13
	.byte	'MIEP',0
	.word	743
	.byte	4,2,35,4,13
	.byte	'ISP',0
	.word	743
	.byte	4,2,35,8,13
	.byte	'MJPEG',0
	.word	743
	.byte	4,2,35,12,0,14
	.word	53452
	.byte	33
	.byte	'Ifx_SRC_CIF',0,4,133,1,3
	.word	53525
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,4,136,1,25,4,13
	.byte	'SBSRC',0
	.word	743
	.byte	4,2,35,0,0,14
	.word	53551
	.byte	33
	.byte	'Ifx_SRC_CPU',0,4,139,1,3
	.word	53586
	.byte	18,192,1
	.word	743
	.byte	19,47,0,10
	.byte	'_Ifx_SRC_DMA',0,4,142,1,25,208,1,13
	.byte	'ERR',0
	.word	743
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	4195
	.byte	12,2,35,4,13
	.byte	'CH',0
	.word	53612
	.byte	192,1,2,35,16,0,14
	.word	53622
	.byte	33
	.byte	'Ifx_SRC_DMA',0,4,147,1,3
	.word	53689
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,4,150,1,25,8,13
	.byte	'SRM',0
	.word	743
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	743
	.byte	4,2,35,4,0,14
	.word	53715
	.byte	33
	.byte	'Ifx_SRC_DSADC',0,4,154,1,3
	.word	53763
	.byte	10
	.byte	'_Ifx_SRC_EMEM',0,4,157,1,25,4,13
	.byte	'SR',0
	.word	743
	.byte	4,2,35,0,0,14
	.word	53791
	.byte	33
	.byte	'Ifx_SRC_EMEM',0,4,160,1,3
	.word	53824
	.byte	18,40
	.word	436
	.byte	19,39,0,10
	.byte	'_Ifx_SRC_ERAY',0,4,163,1,25,80,13
	.byte	'INT',0
	.word	53377
	.byte	8,2,35,0,13
	.byte	'TINT',0
	.word	53377
	.byte	8,2,35,8,13
	.byte	'NDAT',0
	.word	53377
	.byte	8,2,35,16,13
	.byte	'MBSC',0
	.word	53377
	.byte	8,2,35,24,13
	.byte	'OBUSY',0
	.word	743
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	743
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	53851
	.byte	40,2,35,40,0,14
	.word	53860
	.byte	33
	.byte	'Ifx_SRC_ERAY',0,4,172,1,3
	.word	53987
	.byte	10
	.byte	'_Ifx_SRC_ETH',0,4,175,1,25,4,13
	.byte	'SR',0
	.word	743
	.byte	4,2,35,0,0,14
	.word	54014
	.byte	33
	.byte	'Ifx_SRC_ETH',0,4,178,1,3
	.word	54046
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,4,181,1,25,4,13
	.byte	'SR',0
	.word	743
	.byte	4,2,35,0,0,14
	.word	54072
	.byte	33
	.byte	'Ifx_SRC_FCE',0,4,184,1,3
	.word	54104
	.byte	10
	.byte	'_Ifx_SRC_FFT',0,4,187,1,25,12,13
	.byte	'DONE',0
	.word	743
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	743
	.byte	4,2,35,4,13
	.byte	'RFS',0
	.word	743
	.byte	4,2,35,8,0,14
	.word	54130
	.byte	33
	.byte	'Ifx_SRC_FFT',0,4,192,1,3
	.word	54190
	.byte	18,16
	.word	436
	.byte	19,15,0,10
	.byte	'_Ifx_SRC_GPSR',0,4,195,1,25,32,13
	.byte	'SR0',0
	.word	743
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	743
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	743
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	743
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	54216
	.byte	16,2,35,16,0,14
	.word	54225
	.byte	33
	.byte	'Ifx_SRC_GPSR',0,4,202,1,3
	.word	54319
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,4,205,1,25,48,13
	.byte	'CIRQ',0
	.word	743
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	743
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	743
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	743
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	743
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	743
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	3226
	.byte	24,2,35,24,0,14
	.word	54346
	.byte	33
	.byte	'Ifx_SRC_GPT12',0,4,214,1,3
	.word	54463
	.byte	18,12
	.word	743
	.byte	19,2,0,18,32
	.word	743
	.byte	19,7,0,18,32
	.word	54500
	.byte	19,0,0,18,88
	.word	436
	.byte	19,87,0,18,108
	.word	743
	.byte	19,26,0,18,96
	.word	436
	.byte	19,95,0,18,96
	.word	54500
	.byte	19,2,0,18,160,3
	.word	436
	.byte	19,159,3,0,18,64
	.word	54500
	.byte	19,1,0,18,192,3
	.word	436
	.byte	19,191,3,0,18,16
	.word	743
	.byte	19,3,0,18,64
	.word	54585
	.byte	19,3,0,18,192,2
	.word	436
	.byte	19,191,2,0,18,52
	.word	436
	.byte	19,51,0,10
	.byte	'_Ifx_SRC_GTM',0,4,217,1,25,204,18,13
	.byte	'AEIIRQ',0
	.word	743
	.byte	4,2,35,0,13
	.byte	'ARUIRQ',0
	.word	54491
	.byte	12,2,35,4,13
	.byte	'reserved_10',0
	.word	2036
	.byte	4,2,35,16,13
	.byte	'BRCIRQ',0
	.word	743
	.byte	4,2,35,20,13
	.byte	'CMPIRQ',0
	.word	743
	.byte	4,2,35,24,13
	.byte	'SPEIRQ',0
	.word	53377
	.byte	8,2,35,28,13
	.byte	'reserved_24',0
	.word	3855
	.byte	8,2,35,36,13
	.byte	'PSM',0
	.word	54509
	.byte	32,2,35,44,13
	.byte	'reserved_4C',0
	.word	54518
	.byte	88,2,35,76,13
	.byte	'DPLL',0
	.word	54527
	.byte	108,3,35,164,1,13
	.byte	'reserved_110',0
	.word	54536
	.byte	96,3,35,144,2,13
	.byte	'ERR',0
	.word	743
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	4195
	.byte	12,3,35,244,2,13
	.byte	'TIM',0
	.word	54545
	.byte	96,3,35,128,3,13
	.byte	'reserved_1E0',0
	.word	54554
	.byte	160,3,3,35,224,3,13
	.byte	'MCS',0
	.word	54545
	.byte	96,3,35,128,7,13
	.byte	'reserved_3E0',0
	.word	54554
	.byte	160,3,3,35,224,7,13
	.byte	'TOM',0
	.word	54565
	.byte	64,3,35,128,11,13
	.byte	'reserved_5C0',0
	.word	54574
	.byte	192,3,3,35,192,11,13
	.byte	'ATOM',0
	.word	54594
	.byte	64,3,35,128,15,13
	.byte	'reserved_7C0',0
	.word	54603
	.byte	192,2,3,35,192,15,13
	.byte	'MCSW0',0
	.word	54491
	.byte	12,3,35,128,18,13
	.byte	'reserved_90C',0
	.word	54614
	.byte	52,3,35,140,18,13
	.byte	'MCSW1',0
	.word	54491
	.byte	12,3,35,192,18,0,14
	.word	54623
	.byte	33
	.byte	'Ifx_SRC_GTM',0,4,243,1,3
	.word	55083
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,4,246,1,25,4,13
	.byte	'SR',0
	.word	743
	.byte	4,2,35,0,0,14
	.word	55109
	.byte	33
	.byte	'Ifx_SRC_HSCT',0,4,249,1,3
	.word	55142
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,4,252,1,25,16,13
	.byte	'COK',0
	.word	743
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	743
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	743
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	743
	.byte	4,2,35,12,0,14
	.word	55169
	.byte	33
	.byte	'Ifx_SRC_HSSL',0,4,130,2,3
	.word	55242
	.byte	18,56
	.word	436
	.byte	19,55,0,10
	.byte	'_Ifx_SRC_I2C',0,4,133,2,25,80,13
	.byte	'BREQ',0
	.word	743
	.byte	4,2,35,0,13
	.byte	'LBREQ',0
	.word	743
	.byte	4,2,35,4,13
	.byte	'SREQ',0
	.word	743
	.byte	4,2,35,8,13
	.byte	'LSREQ',0
	.word	743
	.byte	4,2,35,12,13
	.byte	'ERR',0
	.word	743
	.byte	4,2,35,16,13
	.byte	'P',0
	.word	743
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	55269
	.byte	56,2,35,24,0,14
	.word	55278
	.byte	33
	.byte	'Ifx_SRC_I2C',0,4,142,2,3
	.word	55401
	.byte	10
	.byte	'_Ifx_SRC_LMU',0,4,145,2,25,4,13
	.byte	'SR',0
	.word	743
	.byte	4,2,35,0,0,14
	.word	55427
	.byte	33
	.byte	'Ifx_SRC_LMU',0,4,148,2,3
	.word	55459
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,4,151,2,25,20,13
	.byte	'SR0',0
	.word	743
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	743
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	743
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	743
	.byte	4,2,35,12,13
	.byte	'SR4',0
	.word	743
	.byte	4,2,35,16,0,14
	.word	55485
	.byte	33
	.byte	'Ifx_SRC_MSC',0,4,158,2,3
	.word	55570
	.byte	10
	.byte	'_Ifx_SRC_PMU',0,4,161,2,25,4,13
	.byte	'SR',0
	.word	743
	.byte	4,2,35,0,0,14
	.word	55596
	.byte	33
	.byte	'Ifx_SRC_PMU',0,4,164,2,3
	.word	55628
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,4,167,2,25,32,13
	.byte	'SR',0
	.word	54500
	.byte	32,2,35,0,0,14
	.word	55654
	.byte	33
	.byte	'Ifx_SRC_PSI5',0,4,170,2,3
	.word	55687
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,4,173,2,25,32,13
	.byte	'SR',0
	.word	54500
	.byte	32,2,35,0,0,14
	.word	55714
	.byte	33
	.byte	'Ifx_SRC_PSI5S',0,4,176,2,3
	.word	55748
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,4,179,2,25,24,13
	.byte	'TX',0
	.word	743
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	743
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	743
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	743
	.byte	4,2,35,12,13
	.byte	'HC',0
	.word	743
	.byte	4,2,35,16,13
	.byte	'U',0
	.word	743
	.byte	4,2,35,20,0,14
	.word	55776
	.byte	33
	.byte	'Ifx_SRC_QSPI',0,4,187,2,3
	.word	55869
	.byte	10
	.byte	'_Ifx_SRC_SCR',0,4,190,2,25,4,13
	.byte	'SR',0
	.word	743
	.byte	4,2,35,0,0,14
	.word	55896
	.byte	33
	.byte	'Ifx_SRC_SCR',0,4,193,2,3
	.word	55928
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,4,196,2,25,20,13
	.byte	'DTS',0
	.word	743
	.byte	4,2,35,0,13
	.byte	'ERU',0
	.word	54585
	.byte	16,2,35,4,0,14
	.word	55954
	.byte	33
	.byte	'Ifx_SRC_SCU',0,4,200,2,3
	.word	56000
	.byte	18,24
	.word	743
	.byte	19,5,0,10
	.byte	'_Ifx_SRC_SENT',0,4,203,2,25,24,13
	.byte	'SR',0
	.word	56026
	.byte	24,2,35,0,0,14
	.word	56035
	.byte	33
	.byte	'Ifx_SRC_SENT',0,4,206,2,3
	.word	56068
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,4,209,2,25,12,13
	.byte	'SR',0
	.word	54491
	.byte	12,2,35,0,0,14
	.word	56095
	.byte	33
	.byte	'Ifx_SRC_SMU',0,4,212,2,3
	.word	56127
	.byte	10
	.byte	'_Ifx_SRC_STM',0,4,215,2,25,8,13
	.byte	'SR0',0
	.word	743
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	743
	.byte	4,2,35,4,0,14
	.word	56153
	.byte	33
	.byte	'Ifx_SRC_STM',0,4,219,2,3
	.word	56199
	.byte	10
	.byte	'_Ifx_SRC_VADCCG',0,4,222,2,25,16,13
	.byte	'SR0',0
	.word	743
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	743
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	743
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	743
	.byte	4,2,35,12,0,14
	.word	56225
	.byte	33
	.byte	'Ifx_SRC_VADCCG',0,4,228,2,3
	.word	56300
	.byte	10
	.byte	'_Ifx_SRC_VADCG',0,4,231,2,25,16,13
	.byte	'SR0',0
	.word	743
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	743
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	743
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	743
	.byte	4,2,35,12,0,14
	.word	56329
	.byte	33
	.byte	'Ifx_SRC_VADCG',0,4,237,2,3
	.word	56403
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,4,240,2,25,4,13
	.byte	'SRC',0
	.word	743
	.byte	4,2,35,0,0,14
	.word	56431
	.byte	33
	.byte	'Ifx_SRC_XBAR',0,4,243,2,3
	.word	56465
	.byte	18,4
	.word	53003
	.byte	19,0,0,14
	.word	56492
	.byte	10
	.byte	'_Ifx_SRC_GAGBT',0,4,128,3,25,4,13
	.byte	'AGBT',0
	.word	56501
	.byte	4,2,35,0,0,14
	.word	56506
	.byte	33
	.byte	'Ifx_SRC_GAGBT',0,4,131,3,3
	.word	56542
	.byte	18,48
	.word	53061
	.byte	19,3,0,14
	.word	56570
	.byte	10
	.byte	'_Ifx_SRC_GASCLIN',0,4,134,3,25,48,13
	.byte	'ASCLIN',0
	.word	56579
	.byte	48,2,35,0,0,14
	.word	56584
	.byte	33
	.byte	'Ifx_SRC_GASCLIN',0,4,137,3,3
	.word	56624
	.byte	14
	.word	53148
	.byte	10
	.byte	'_Ifx_SRC_GBCU',0,4,140,3,25,4,13
	.byte	'SPB',0
	.word	56654
	.byte	4,2,35,0,0,14
	.word	56659
	.byte	33
	.byte	'Ifx_SRC_GBCU',0,4,143,3,3
	.word	56693
	.byte	18,64
	.word	53222
	.byte	19,0,0,14
	.word	56720
	.byte	10
	.byte	'_Ifx_SRC_GCAN',0,4,146,3,25,64,13
	.byte	'CAN',0
	.word	56729
	.byte	64,2,35,0,0,14
	.word	56734
	.byte	33
	.byte	'Ifx_SRC_GCAN',0,4,149,3,3
	.word	56768
	.byte	18,32
	.word	53279
	.byte	19,1,0,14
	.word	56795
	.byte	10
	.byte	'_Ifx_SRC_GCCU6',0,4,152,3,25,32,13
	.byte	'CCU6',0
	.word	56804
	.byte	32,2,35,0,0,14
	.word	56809
	.byte	33
	.byte	'Ifx_SRC_GCCU6',0,4,155,3,3
	.word	56845
	.byte	14
	.word	53386
	.byte	10
	.byte	'_Ifx_SRC_GCERBERUS',0,4,158,3,25,8,13
	.byte	'CERBERUS',0
	.word	56873
	.byte	8,2,35,0,0,14
	.word	56878
	.byte	33
	.byte	'Ifx_SRC_GCERBERUS',0,4,161,3,3
	.word	56922
	.byte	18,16
	.word	53452
	.byte	19,0,0,14
	.word	56954
	.byte	10
	.byte	'_Ifx_SRC_GCIF',0,4,164,3,25,16,13
	.byte	'CIF',0
	.word	56963
	.byte	16,2,35,0,0,14
	.word	56968
	.byte	33
	.byte	'Ifx_SRC_GCIF',0,4,167,3,3
	.word	57002
	.byte	18,8
	.word	53551
	.byte	19,1,0,14
	.word	57029
	.byte	10
	.byte	'_Ifx_SRC_GCPU',0,4,170,3,25,8,13
	.byte	'CPU',0
	.word	57038
	.byte	8,2,35,0,0,14
	.word	57043
	.byte	33
	.byte	'Ifx_SRC_GCPU',0,4,173,3,3
	.word	57077
	.byte	18,208,1
	.word	53622
	.byte	19,0,0,14
	.word	57104
	.byte	10
	.byte	'_Ifx_SRC_GDMA',0,4,176,3,25,208,1,13
	.byte	'DMA',0
	.word	57114
	.byte	208,1,2,35,0,0,14
	.word	57119
	.byte	33
	.byte	'Ifx_SRC_GDMA',0,4,179,3,3
	.word	57155
	.byte	14
	.word	53715
	.byte	14
	.word	53715
	.byte	14
	.word	53715
	.byte	10
	.byte	'_Ifx_SRC_GDSADC',0,4,182,3,25,32,13
	.byte	'DSADC0',0
	.word	57182
	.byte	8,2,35,0,13
	.byte	'reserved_8',0
	.word	3855
	.byte	8,2,35,8,13
	.byte	'DSADC2',0
	.word	57187
	.byte	8,2,35,16,13
	.byte	'DSADC3',0
	.word	57192
	.byte	8,2,35,24,0,14
	.word	57197
	.byte	33
	.byte	'Ifx_SRC_GDSADC',0,4,188,3,3
	.word	57288
	.byte	18,4
	.word	53791
	.byte	19,0,0,14
	.word	57317
	.byte	10
	.byte	'_Ifx_SRC_GEMEM',0,4,191,3,25,4,13
	.byte	'EMEM',0
	.word	57326
	.byte	4,2,35,0,0,14
	.word	57331
	.byte	33
	.byte	'Ifx_SRC_GEMEM',0,4,194,3,3
	.word	57367
	.byte	18,80
	.word	53860
	.byte	19,0,0,14
	.word	57395
	.byte	10
	.byte	'_Ifx_SRC_GERAY',0,4,197,3,25,80,13
	.byte	'ERAY',0
	.word	57404
	.byte	80,2,35,0,0,14
	.word	57409
	.byte	33
	.byte	'Ifx_SRC_GERAY',0,4,200,3,3
	.word	57445
	.byte	18,4
	.word	54014
	.byte	19,0,0,14
	.word	57473
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,4,203,3,25,4,13
	.byte	'ETH',0
	.word	57482
	.byte	4,2,35,0,0,14
	.word	57487
	.byte	33
	.byte	'Ifx_SRC_GETH',0,4,206,3,3
	.word	57521
	.byte	18,4
	.word	54072
	.byte	19,0,0,14
	.word	57548
	.byte	10
	.byte	'_Ifx_SRC_GFCE',0,4,209,3,25,4,13
	.byte	'FCE',0
	.word	57557
	.byte	4,2,35,0,0,14
	.word	57562
	.byte	33
	.byte	'Ifx_SRC_GFCE',0,4,212,3,3
	.word	57596
	.byte	18,12
	.word	54130
	.byte	19,0,0,14
	.word	57623
	.byte	10
	.byte	'_Ifx_SRC_GFFT',0,4,215,3,25,12,13
	.byte	'FFT',0
	.word	57632
	.byte	12,2,35,0,0,14
	.word	57637
	.byte	33
	.byte	'Ifx_SRC_GFFT',0,4,218,3,3
	.word	57671
	.byte	18,64
	.word	54225
	.byte	19,1,0,14
	.word	57698
	.byte	10
	.byte	'_Ifx_SRC_GGPSR',0,4,221,3,25,64,13
	.byte	'GPSR',0
	.word	57707
	.byte	64,2,35,0,0,14
	.word	57712
	.byte	33
	.byte	'Ifx_SRC_GGPSR',0,4,224,3,3
	.word	57748
	.byte	18,48
	.word	54346
	.byte	19,0,0,14
	.word	57776
	.byte	10
	.byte	'_Ifx_SRC_GGPT12',0,4,227,3,25,48,13
	.byte	'GPT12',0
	.word	57785
	.byte	48,2,35,0,0,14
	.word	57790
	.byte	33
	.byte	'Ifx_SRC_GGPT12',0,4,230,3,3
	.word	57828
	.byte	18,204,18
	.word	54623
	.byte	19,0,0,14
	.word	57857
	.byte	10
	.byte	'_Ifx_SRC_GGTM',0,4,233,3,25,204,18,13
	.byte	'GTM',0
	.word	57867
	.byte	204,18,2,35,0,0,14
	.word	57872
	.byte	33
	.byte	'Ifx_SRC_GGTM',0,4,236,3,3
	.word	57908
	.byte	18,4
	.word	55109
	.byte	19,0,0,14
	.word	57935
	.byte	10
	.byte	'_Ifx_SRC_GHSCT',0,4,239,3,25,4,13
	.byte	'HSCT',0
	.word	57944
	.byte	4,2,35,0,0,14
	.word	57949
	.byte	33
	.byte	'Ifx_SRC_GHSCT',0,4,242,3,3
	.word	57985
	.byte	18,64
	.word	55169
	.byte	19,3,0,14
	.word	58013
	.byte	10
	.byte	'_Ifx_SRC_GHSSL',0,4,245,3,25,68,13
	.byte	'HSSL',0
	.word	58022
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	743
	.byte	4,2,35,64,0,14
	.word	58027
	.byte	33
	.byte	'Ifx_SRC_GHSSL',0,4,249,3,3
	.word	58076
	.byte	18,80
	.word	55278
	.byte	19,0,0,14
	.word	58104
	.byte	10
	.byte	'_Ifx_SRC_GI2C',0,4,252,3,25,80,13
	.byte	'I2C',0
	.word	58113
	.byte	80,2,35,0,0,14
	.word	58118
	.byte	33
	.byte	'Ifx_SRC_GI2C',0,4,255,3,3
	.word	58152
	.byte	18,4
	.word	55427
	.byte	19,0,0,14
	.word	58179
	.byte	10
	.byte	'_Ifx_SRC_GLMU',0,4,130,4,25,4,13
	.byte	'LMU',0
	.word	58188
	.byte	4,2,35,0,0,14
	.word	58193
	.byte	33
	.byte	'Ifx_SRC_GLMU',0,4,133,4,3
	.word	58227
	.byte	18,40
	.word	55485
	.byte	19,1,0,14
	.word	58254
	.byte	10
	.byte	'_Ifx_SRC_GMSC',0,4,136,4,25,40,13
	.byte	'MSC',0
	.word	58263
	.byte	40,2,35,0,0,14
	.word	58268
	.byte	33
	.byte	'Ifx_SRC_GMSC',0,4,139,4,3
	.word	58302
	.byte	18,8
	.word	55596
	.byte	19,1,0,14
	.word	58329
	.byte	10
	.byte	'_Ifx_SRC_GPMU',0,4,142,4,25,8,13
	.byte	'PMU',0
	.word	58338
	.byte	8,2,35,0,0,14
	.word	58343
	.byte	33
	.byte	'Ifx_SRC_GPMU',0,4,145,4,3
	.word	58377
	.byte	18,32
	.word	55654
	.byte	19,0,0,14
	.word	58404
	.byte	10
	.byte	'_Ifx_SRC_GPSI5',0,4,148,4,25,32,13
	.byte	'PSI5',0
	.word	58413
	.byte	32,2,35,0,0,14
	.word	58418
	.byte	33
	.byte	'Ifx_SRC_GPSI5',0,4,151,4,3
	.word	58454
	.byte	18,32
	.word	55714
	.byte	19,0,0,14
	.word	58482
	.byte	10
	.byte	'_Ifx_SRC_GPSI5S',0,4,154,4,25,32,13
	.byte	'PSI5S',0
	.word	58491
	.byte	32,2,35,0,0,14
	.word	58496
	.byte	33
	.byte	'Ifx_SRC_GPSI5S',0,4,157,4,3
	.word	58534
	.byte	18,96
	.word	55776
	.byte	19,3,0,14
	.word	58563
	.byte	10
	.byte	'_Ifx_SRC_GQSPI',0,4,160,4,25,96,13
	.byte	'QSPI',0
	.word	58572
	.byte	96,2,35,0,0,14
	.word	58577
	.byte	33
	.byte	'Ifx_SRC_GQSPI',0,4,163,4,3
	.word	58613
	.byte	18,4
	.word	55896
	.byte	19,0,0,14
	.word	58641
	.byte	10
	.byte	'_Ifx_SRC_GSCR',0,4,166,4,25,4,13
	.byte	'SCR',0
	.word	58650
	.byte	4,2,35,0,0,14
	.word	58655
	.byte	33
	.byte	'Ifx_SRC_GSCR',0,4,169,4,3
	.word	58689
	.byte	14
	.word	55954
	.byte	10
	.byte	'_Ifx_SRC_GSCU',0,4,172,4,25,20,13
	.byte	'SCU',0
	.word	58716
	.byte	20,2,35,0,0,14
	.word	58721
	.byte	33
	.byte	'Ifx_SRC_GSCU',0,4,175,4,3
	.word	58755
	.byte	18,24
	.word	56035
	.byte	19,0,0,14
	.word	58782
	.byte	10
	.byte	'_Ifx_SRC_GSENT',0,4,178,4,25,24,13
	.byte	'SENT',0
	.word	58791
	.byte	24,2,35,0,0,14
	.word	58796
	.byte	33
	.byte	'Ifx_SRC_GSENT',0,4,181,4,3
	.word	58832
	.byte	18,12
	.word	56095
	.byte	19,0,0,14
	.word	58860
	.byte	10
	.byte	'_Ifx_SRC_GSMU',0,4,184,4,25,12,13
	.byte	'SMU',0
	.word	58869
	.byte	12,2,35,0,0,14
	.word	58874
	.byte	33
	.byte	'Ifx_SRC_GSMU',0,4,187,4,3
	.word	58908
	.byte	18,16
	.word	56153
	.byte	19,1,0,14
	.word	58935
	.byte	10
	.byte	'_Ifx_SRC_GSTM',0,4,190,4,25,16,13
	.byte	'STM',0
	.word	58944
	.byte	16,2,35,0,0,14
	.word	58949
	.byte	33
	.byte	'Ifx_SRC_GSTM',0,4,193,4,3
	.word	58983
	.byte	18,64
	.word	56329
	.byte	19,3,0,14
	.word	59010
	.byte	18,224,1
	.word	436
	.byte	19,223,1,0,18,32
	.word	56225
	.byte	19,1,0,14
	.word	59035
	.byte	10
	.byte	'_Ifx_SRC_GVADC',0,4,196,4,25,192,2,13
	.byte	'G',0
	.word	59019
	.byte	64,2,35,0,13
	.byte	'reserved_40',0
	.word	59024
	.byte	224,1,2,35,64,13
	.byte	'CG',0
	.word	59044
	.byte	32,3,35,160,2,0,14
	.word	59049
	.byte	33
	.byte	'Ifx_SRC_GVADC',0,4,201,4,3
	.word	59118
	.byte	14
	.word	56431
	.byte	10
	.byte	'_Ifx_SRC_GXBAR',0,4,204,4,25,4,13
	.byte	'XBAR',0
	.word	59146
	.byte	4,2,35,0,0,14
	.word	59151
	.byte	33
	.byte	'Ifx_SRC_GXBAR',0,4,207,4,3
	.word	59187
	.byte	33
	.byte	'IfxHssl_ChannelId',0,11,83,3
	.word	21064
	.byte	33
	.byte	'IfxHssl_DataLength',0,11,132,1,3
	.word	24363
	.byte	15,11,137,1,9,1,16
	.byte	'IfxHssl_Hsct_InterruptSource_headerError',0,1,16
	.byte	'IfxHssl_Hsct_InterruptSource_payloadError',0,2,16
	.byte	'IfxHssl_Hsct_InterruptSource_commandError',0,3,16
	.byte	'IfxHssl_Hsct_InterruptSource_interfaceControlFrameSend',0,4,16
	.byte	'IfxHssl_Hsct_InterruptSource_speedModeSwitchError',0,5,16
	.byte	'IfxHssl_Hsct_InterruptSource_unsolicitedMessageSendFinished',0,6,16
	.byte	'IfxHssl_Hsct_InterruptSource_pllLockLosterror',0,7,16
	.byte	'IfxHssl_Hsct_InterruptSource_UnsolicitedMessageReceived',0,8,16
	.byte	'IfxHssl_Hsct_InterruptSource_pingAnswerReceived',0,9,16
	.byte	'IfxHssl_Hsct_InterruptSource_txTransferError',0,10,16
	.byte	'IfxHssl_Hsct_InterruptSource_synchronizationFifoOverflow',0,11,16
	.byte	'IfxHssl_Hsct_InterruptSource_synchronizationFifoUnderflow',0,12,0,33
	.byte	'IfxHssl_Hsct_InterruptSource',0,11,154,1,3
	.word	59269
	.byte	15,11,159,1,9,1,16
	.byte	'IfxHssl_Hsct_SleepMode_enable',0,0,16
	.byte	'IfxHssl_Hsct_SleepMode_disable',0,1,0,33
	.byte	'IfxHssl_Hsct_SleepMode',0,11,163,1,3
	.word	59938
	.byte	15,11,168,1,9,1,16
	.byte	'IfxHssl_Hssl_SleepMode_enable',0,0,16
	.byte	'IfxHssl_Hssl_SleepMode_disable',0,1,0,33
	.byte	'IfxHssl_Hssl_SleepMode',0,11,172,1,3
	.word	60042
	.byte	33
	.byte	'IfxHssl_InterfaceMode',0,11,181,1,3
	.word	23479
	.byte	15,11,186,1,9,1,16
	.byte	'IfxHssl_MasterModeRxSpeed_lowSpeed',0,0,16
	.byte	'IfxHssl_MasterModeRxSpeed_mediumSpeed',0,1,16
	.byte	'IfxHssl_MasterModeRxSpeed_highSpeed',0,2,0,33
	.byte	'IfxHssl_MasterModeRxSpeed',0,11,191,1,3
	.word	60177
	.byte	15,11,196,1,9,1,16
	.byte	'IfxHssl_MasterModeTxSpeed_lowSpeed',0,0,16
	.byte	'IfxHssl_MasterModeTxSpeed_highSpeed',0,2,0,33
	.byte	'IfxHssl_MasterModeTxSpeed',0,11,200,1,3
	.word	60334
	.byte	33
	.byte	'IfxHssl_StreamingMode',0,11,218,1,3
	.word	21355
	.byte	15,11,222,1,9,1,16
	.byte	'IfxHssl_SuspendMode_none',0,0,16
	.byte	'IfxHssl_SuspendMode_hard',0,1,16
	.byte	'IfxHssl_SuspendMode_soft',0,2,0,33
	.byte	'IfxHssl_SuspendMode',0,11,227,1,3
	.word	60482
	.byte	15,11,234,1,9,1,16
	.byte	'IfxHssl_Hssl_ERRInterruptSource_notAcknowledgeError',0,0,16
	.byte	'IfxHssl_Hssl_ERRInterruptSource_transactionTagError',0,4,16
	.byte	'IfxHssl_Hssl_ERRInterruptSource_timeoutError',0,8,16
	.byte	'IfxHssl_Hssl_ERRInterruptSource_unexpectedError',0,12,0,33
	.byte	'IfxHssl_Hssl_ERRInterruptSource',0,11,240,1,3
	.word	60599
	.byte	15,11,245,1,9,1,16
	.byte	'IfxHssl_Hssl_EXIInterruptSource_memoryAccessViolation',0,21,16
	.byte	'IfxHssl_Hssl_EXIInterruptSource_busAccessError',0,22,16
	.byte	'IfxHssl_Hssl_EXIInterruptSource_channelNumberCodeError',0,23,16
	.byte	'IfxHssl_Hssl_EXIInterruptSource_dataLengthError',0,24,16
	.byte	'IfxHssl_Hssl_EXIInterruptSource_crcError',0,25,0,33
	.byte	'IfxHssl_Hssl_EXIInterruptSource',0,11,253,1,3
	.word	60852
	.byte	33
	.byte	'IfxHssl_Hsct',0,11,139,2,3
	.word	23435
	.byte	33
	.byte	'IfxHssl_Hsct_Config',0,11,149,2,3
	.word	23547
	.byte	33
	.byte	'Ifx_P_ACCEN0_Bits',0,7,79,3
	.word	7608
	.byte	33
	.byte	'Ifx_P_ACCEN1_Bits',0,7,85,3
	.word	7521
	.byte	33
	.byte	'Ifx_P_ESR_Bits',0,7,107,3
	.word	3864
	.byte	33
	.byte	'Ifx_P_ID_Bits',0,7,115,3
	.word	1917
	.byte	33
	.byte	'Ifx_P_IN_Bits',0,7,137,1,3
	.word	2912
	.byte	33
	.byte	'Ifx_P_IOCR0_Bits',0,7,150,1,3
	.word	2045
	.byte	33
	.byte	'Ifx_P_IOCR12_Bits',0,7,163,1,3
	.word	2692
	.byte	33
	.byte	'Ifx_P_IOCR4_Bits',0,7,176,1,3
	.word	2260
	.byte	33
	.byte	'Ifx_P_IOCR8_Bits',0,7,189,1,3
	.word	2475
	.byte	33
	.byte	'Ifx_P_LPCR0_Bits',0,7,197,1,3
	.word	6880
	.byte	33
	.byte	'Ifx_P_LPCR1_Bits',0,7,205,1,3
	.word	7004
	.byte	33
	.byte	'Ifx_P_LPCR1_P21_Bits',0,7,215,1,3
	.word	7088
	.byte	33
	.byte	'Ifx_P_LPCR2_Bits',0,7,229,1,3
	.word	7268
	.byte	33
	.byte	'Ifx_P_OMCR0_Bits',0,7,240,1,3
	.word	5519
	.byte	33
	.byte	'Ifx_P_OMCR12_Bits',0,7,250,1,3
	.word	6043
	.byte	33
	.byte	'Ifx_P_OMCR4_Bits',0,7,133,2,3
	.word	5693
	.byte	33
	.byte	'Ifx_P_OMCR8_Bits',0,7,144,2,3
	.word	5867
	.byte	33
	.byte	'Ifx_P_OMCR_Bits',0,7,166,2,3
	.word	6532
	.byte	33
	.byte	'Ifx_P_OMR_Bits',0,7,203,2,3
	.word	1346
	.byte	33
	.byte	'Ifx_P_OMSR0_Bits',0,7,213,2,3
	.word	4856
	.byte	33
	.byte	'Ifx_P_OMSR12_Bits',0,7,224,2,3
	.word	5344
	.byte	33
	.byte	'Ifx_P_OMSR4_Bits',0,7,235,2,3
	.word	5003
	.byte	33
	.byte	'Ifx_P_OMSR8_Bits',0,7,246,2,3
	.word	5172
	.byte	33
	.byte	'Ifx_P_OMSR_Bits',0,7,140,3,3
	.word	6199
	.byte	33
	.byte	'Ifx_P_OUT_Bits',0,7,162,3,3
	.word	1030
	.byte	33
	.byte	'Ifx_P_PCSR_Bits',0,7,180,3,3
	.word	4570
	.byte	33
	.byte	'Ifx_P_PDISC_Bits',0,7,202,3,3
	.word	4204
	.byte	33
	.byte	'Ifx_P_PDR0_Bits',0,7,223,3,3
	.word	3235
	.byte	33
	.byte	'Ifx_P_PDR1_Bits',0,7,244,3,3
	.word	3539
	.byte	33
	.byte	'Ifx_P_ACCEN0',0,7,129,4,3
	.word	8135
	.byte	33
	.byte	'Ifx_P_ACCEN1',0,7,137,4,3
	.word	7568
	.byte	33
	.byte	'Ifx_P_ESR',0,7,145,4,3
	.word	4155
	.byte	33
	.byte	'Ifx_P_ID',0,7,153,4,3
	.word	1996
	.byte	33
	.byte	'Ifx_P_IN',0,7,161,4,3
	.word	3186
	.byte	33
	.byte	'Ifx_P_IOCR0',0,7,169,4,3
	.word	2220
	.byte	33
	.byte	'Ifx_P_IOCR12',0,7,177,4,3
	.word	2872
	.byte	33
	.byte	'Ifx_P_IOCR4',0,7,185,4,3
	.word	2435
	.byte	33
	.byte	'Ifx_P_IOCR8',0,7,193,4,3
	.word	2652
	.byte	33
	.byte	'Ifx_P_LPCR0',0,7,201,4,3
	.word	6964
	.byte	33
	.byte	'Ifx_P_LPCR1',0,7,210,4,3
	.word	7213
	.byte	33
	.byte	'Ifx_P_LPCR2',0,7,218,4,3
	.word	7472
	.byte	33
	.byte	'Ifx_P_OMCR',0,7,226,4,3
	.word	6840
	.byte	33
	.byte	'Ifx_P_OMCR0',0,7,234,4,3
	.word	5653
	.byte	33
	.byte	'Ifx_P_OMCR12',0,7,242,4,3
	.word	6159
	.byte	33
	.byte	'Ifx_P_OMCR4',0,7,250,4,3
	.word	5827
	.byte	33
	.byte	'Ifx_P_OMCR8',0,7,130,5,3
	.word	6003
	.byte	33
	.byte	'Ifx_P_OMR',0,7,138,5,3
	.word	1877
	.byte	33
	.byte	'Ifx_P_OMSR',0,7,146,5,3
	.word	6492
	.byte	33
	.byte	'Ifx_P_OMSR0',0,7,154,5,3
	.word	4963
	.byte	33
	.byte	'Ifx_P_OMSR12',0,7,162,5,3
	.word	5479
	.byte	33
	.byte	'Ifx_P_OMSR4',0,7,170,5,3
	.word	5132
	.byte	33
	.byte	'Ifx_P_OMSR8',0,7,178,5,3
	.word	5304
	.byte	33
	.byte	'Ifx_P_OUT',0,7,186,5,3
	.word	1306
	.byte	33
	.byte	'Ifx_P_PCSR',0,7,194,5,3
	.word	4816
	.byte	33
	.byte	'Ifx_P_PDISC',0,7,202,5,3
	.word	4530
	.byte	33
	.byte	'Ifx_P_PDR0',0,7,210,5,3
	.word	3499
	.byte	33
	.byte	'Ifx_P_PDR1',0,7,218,5,3
	.word	3815
	.byte	14
	.word	8175
	.byte	33
	.byte	'Ifx_P',0,7,139,6,3
	.word	62524
	.byte	33
	.byte	'IfxPort_InputMode',0,6,89,3
	.word	8788
	.byte	33
	.byte	'IfxPort_Mode',0,6,116,3
	.word	22191
	.byte	33
	.byte	'IfxPort_OutputIdx',0,6,130,1,3
	.word	9063
	.byte	33
	.byte	'IfxPort_OutputMode',0,6,138,1,3
	.word	8993
	.byte	33
	.byte	'IfxPort_PadDriver',0,6,158,1,3
	.word	22935
	.byte	33
	.byte	'IfxPort_State',0,6,178,1,3
	.word	9376
	.byte	33
	.byte	'IfxHssl_Hssl_FrameRequest',0,8,203,3,3
	.word	21158
	.byte	33
	.byte	'IfxHssl_Hssl_Status',0,8,212,3,3
	.word	24276
	.byte	33
	.byte	'IfxHssl_Hssl_AccessWindow',0,8,228,3,3
	.word	23971
	.byte	33
	.byte	'IfxHssl_Hssl_errorFlags',0,8,245,3,3
	.word	23647
	.byte	33
	.byte	'IfxHssl_Hssl',0,8,128,4,3
	.word	23907
	.byte	33
	.byte	'IfxHssl_Hssl_Channel',0,8,141,4,3
	.word	21428
	.byte	33
	.byte	'IfxHssl_Hssl_ChannelConfig',0,8,152,4,3
	.word	24154
	.byte	33
	.byte	'IfxHssl_Hssl_Config',0,8,164,4,3
	.word	24006
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L122:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,4,1,58,15,59,15,57,15,11,15,0,0,16,40,0,3,8,28,13,0,0
	.byte	17,11,1,0,0,18,1,1,11,15,73,19,0,0,19,33,0,47,15,0,0,20,19,1,58,15,59,15,57,15,11,15,0,0,21,38,0,73,19
	.byte	0,0,22,46,1,3,8,54,15,39,12,63,12,60,12,0,0,23,5,0,73,19,0,0,24,46,1,3,8,73,19,54,15,39,12,63,12,60,12
	.byte	0,0,25,5,0,3,8,73,19,0,0,26,46,0,3,8,54,15,39,12,63,12,60,12,0,0,27,46,1,49,19,0,0,28,5,0,49,19,0,0,29
	.byte	46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,30,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12
	.byte	63,12,60,12,0,0,31,29,1,49,19,0,0,32,11,0,49,19,0,0,33,22,0,3,8,58,15,59,15,57,15,73,19,0,0,34,21,0,54
	.byte	15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L123:
	.word	.L464-.L463
.L463:
	.half	3
	.word	.L466-.L465
.L465:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0
	.byte	0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxSrc.h',0,2,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxSrc_cfg.h',0,4,0,0
	.byte	'IfxPort.h',0,5,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.h',0,0,0,0
	.byte	'IfxHssl_regdef.h',0,3,0,0
	.byte	'IfxHsct_regdef.h',0,3,0,0
	.byte	'IfxHssl.h',0,6,0,0
	.byte	'IfxScuWdt.h',0,7,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'IfxScu_cfg.h',0,4,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0,0
.L466:
.L464:
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_initHsctModule')
	.sect	'.debug_info'
.L124:
	.word	762
	.half	3
	.word	.L125
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L127,.L126
	.byte	2
	.word	.L120
	.byte	3
	.byte	'IfxHssl_Hssl_initHsctModule',0,1,160,1,6,1,1,1
	.word	.L91,.L224,.L90
	.byte	4
	.byte	'hsct',0,1,160,1,48
	.word	.L225,.L226
	.byte	4
	.byte	'config',0,1,160,1,81
	.word	.L227,.L228
	.byte	5
	.word	.L229
	.byte	6
	.byte	'hsctSFR',0,1,162,1,15
	.word	.L230,.L231
	.byte	7
	.word	.L232,.L233,.L234
	.byte	8
	.word	.L235,.L236
	.byte	8
	.word	.L237,.L238
	.byte	8
	.word	.L239,.L240
	.byte	9
	.word	.L241,.L242
	.byte	0,7
	.word	.L232,.L243,.L244
	.byte	8
	.word	.L235,.L236
	.byte	8
	.word	.L237,.L238
	.byte	8
	.word	.L239,.L240
	.byte	0,7
	.word	.L232,.L244,.L245
	.byte	8
	.word	.L235,.L236
	.byte	8
	.word	.L237,.L238
	.byte	8
	.word	.L239,.L240
	.byte	10
	.word	.L241,.L244,.L245
	.byte	0,7
	.word	.L246,.L245,.L247
	.byte	8
	.word	.L248,.L249
	.byte	8
	.word	.L250,.L251
	.byte	8
	.word	.L252,.L253
	.byte	8
	.word	.L254,.L255
	.byte	10
	.word	.L256,.L245,.L247
	.byte	0,7
	.word	.L246,.L247,.L257
	.byte	8
	.word	.L248,.L249
	.byte	8
	.word	.L250,.L251
	.byte	8
	.word	.L252,.L253
	.byte	8
	.word	.L254,.L255
	.byte	10
	.word	.L256,.L247,.L257
	.byte	0,7
	.word	.L246,.L258,.L259
	.byte	8
	.word	.L248,.L249
	.byte	8
	.word	.L250,.L251
	.byte	8
	.word	.L252,.L253
	.byte	8
	.word	.L254,.L255
	.byte	9
	.word	.L256,.L260
	.byte	0,7
	.word	.L246,.L261,.L262
	.byte	8
	.word	.L248,.L249
	.byte	8
	.word	.L250,.L251
	.byte	8
	.word	.L252,.L253
	.byte	8
	.word	.L254,.L255
	.byte	0,7
	.word	.L232,.L12,.L13
	.byte	8
	.word	.L235,.L236
	.byte	8
	.word	.L237,.L238
	.byte	8
	.word	.L239,.L240
	.byte	10
	.word	.L241,.L12,.L13
	.byte	0,11
	.word	.L263,.L14
	.byte	6
	.byte	'psw',0,1,188,1,16
	.word	.L264,.L265
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_initHsctModule')
	.sect	'.debug_abbrev'
.L125:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,85,6,0,0,10,11
	.byte	0,49,16,17,1,18,1,0,0,11,11,1,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_initHsctModule')
	.sect	'.debug_line'
.L126:
	.word	.L468-.L467
.L467:
	.half	3
	.word	.L470-.L469
.L469:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0
	.byte	'IfxPort.h',0,1,0,0,0
.L470:
	.byte	5,6,7,0,5,2
	.word	.L91
	.byte	3,159,1,1,5,31,9
	.half	.L376-.L91
	.byte	3,2,1,5,20,9
	.half	.L378-.L376
	.byte	3,2,1,4,2,5,24,9
	.half	.L233-.L378
	.byte	3,162,3,1,5,30,9
	.half	.L471-.L233
	.byte	1,4,1,5,28,3,223,124,1,4,2,5,40,9
	.half	.L472-.L471
	.byte	3,161,3,1,5,24,1,4,1,5,20,9
	.half	.L234-.L472
	.byte	3,223,124,1,4,2,5,40,9
	.half	.L243-.L234
	.byte	3,161,3,1,5,30,9
	.half	.L244-.L243
	.byte	1,5,40,1,5,30,9
	.half	.L245-.L244
	.byte	3,6,1,5,40,1,5,30,9
	.half	.L247-.L245
	.byte	1,5,40,1,4,1,5,15,9
	.half	.L257-.L247
	.byte	3,227,124,1,4,2,5,24,9
	.half	.L258-.L257
	.byte	3,157,3,1,4,1,5,5,9
	.half	.L259-.L258
	.byte	3,227,124,1,4,2,5,30,7,9
	.half	.L261-.L259
	.byte	3,157,3,1,5,40,1,4,1,5,46,9
	.half	.L262-.L261
	.byte	3,230,124,1,5,49,1,5,102,9
	.half	.L473-.L262
	.byte	3,127,1,4,2,5,30,9
	.half	.L12-.L473
	.byte	3,149,3,1,5,40,1,4,1,5,15,9
	.half	.L13-.L12
	.byte	3,243,124,1,5,5,9
	.half	.L474-.L13
	.byte	1,5,54,7,9
	.half	.L263-.L474
	.byte	3,3,1,5,20,9
	.half	.L369-.L263
	.byte	1,5,35,9
	.half	.L371-.L369
	.byte	3,1,1,5,24,9
	.half	.L370-.L371
	.byte	3,2,1,5,33,9
	.half	.L475-.L370
	.byte	3,7,1,5,35,9
	.half	.L372-.L475
	.byte	3,121,1,5,24,9
	.half	.L476-.L372
	.byte	3,1,1,5,35,9
	.half	.L477-.L476
	.byte	1,5,20,9
	.half	.L478-.L477
	.byte	3,2,1,5,35,9
	.half	.L479-.L478
	.byte	1,5,20,9
	.half	.L480-.L479
	.byte	3,1,1,5,35,9
	.half	.L481-.L480
	.byte	1,5,20,9
	.half	.L482-.L481
	.byte	3,1,1,5,35,9
	.half	.L483-.L482
	.byte	1,5,33,9
	.half	.L484-.L483
	.byte	3,2,1,5,30,9
	.half	.L14-.L484
	.byte	3,6,1,5,22,9
	.half	.L374-.L14
	.byte	3,2,1,5,31,9
	.half	.L485-.L374
	.byte	1,5,15,9
	.half	.L486-.L485
	.byte	3,3,1,5,5,9
	.half	.L487-.L486
	.byte	1,5,24,7,9
	.half	.L488-.L487
	.byte	3,2,1,5,39,9
	.half	.L489-.L488
	.byte	1,9
	.half	.L490-.L489
	.byte	3,1,1,9
	.half	.L491-.L490
	.byte	3,2,1,5,29,9
	.half	.L377-.L491
	.byte	3,2,1,5,68,9
	.half	.L381-.L377
	.byte	3,123,1,5,24,9
	.half	.L15-.L381
	.byte	3,11,1,5,39,9
	.half	.L492-.L15
	.byte	1,9
	.half	.L493-.L492
	.byte	3,1,1,9
	.half	.L494-.L493
	.byte	3,2,1,5,29,9
	.half	.L495-.L494
	.byte	3,2,1,5,39,9
	.half	.L496-.L495
	.byte	1,5,29,9
	.half	.L382-.L496
	.byte	3,1,1,5,26,9
	.half	.L383-.L382
	.byte	3,1,1,5,39,9
	.half	.L497-.L383
	.byte	1,5,26,9
	.half	.L498-.L497
	.byte	3,1,1,5,39,9
	.half	.L499-.L498
	.byte	1,5,19,9
	.half	.L500-.L499
	.byte	3,3,1,5,9,9
	.half	.L501-.L500
	.byte	1,5,30,7,9
	.half	.L502-.L501
	.byte	3,2,1,5,40,9
	.half	.L503-.L502
	.byte	1,5,30,9
	.half	.L504-.L503
	.byte	3,1,1,5,40,9
	.half	.L505-.L504
	.byte	1,5,34,9
	.half	.L18-.L505
	.byte	3,3,1,5,45,9
	.half	.L506-.L18
	.byte	1,5,26,7,9
	.half	.L16-.L506
	.byte	3,4,1,5,24,1,5,1,9
	.half	.L507-.L16
	.byte	3,1,1,7,9
	.half	.L128-.L507
	.byte	0,1,1
.L468:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_initHsctModule')
	.sect	'.debug_ranges'
.L127:
	.word	-1,.L91,0,.L128-.L91,0,0
.L229:
	.word	-1,.L91,0,.L224-.L91,-1,.L93,0,.L223-.L93,-1,.L95,0,.L218-.L95,-1,.L97,0,.L213-.L97,-1,.L99,0,.L208-.L99
	.word	0,0
.L242:
	.word	-1,.L91,.L233-.L91,.L234-.L91,.L243-.L91,.L244-.L91,0,0
.L260:
	.word	-1,.L91,.L258-.L91,.L259-.L91,.L261-.L91,.L262-.L91,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_initHsctModuleConfig')
	.sect	'.debug_info'
.L129:
	.word	289
	.half	3
	.word	.L130
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L132,.L131
	.byte	2
	.word	.L120
	.byte	3
	.byte	'IfxHssl_Hssl_initHsctModuleConfig',0,1,247,1,6,1,1,1
	.word	.L101,.L266,.L100
	.byte	4
	.byte	'config',0,1,247,1,61
	.word	.L267,.L268
	.byte	4
	.byte	'hsct',0,1,247,1,79
	.word	.L230,.L269
	.byte	5
	.word	.L101,.L266
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_initHsctModuleConfig')
	.sect	'.debug_abbrev'
.L130:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_initHsctModuleConfig')
	.sect	'.debug_line'
.L131:
	.word	.L509-.L508
.L508:
	.half	3
	.word	.L511-.L510
.L510:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L511:
	.byte	5,18,7,0,5,2
	.word	.L101
	.byte	3,248,1,1,5,29,9
	.half	.L512-.L101
	.byte	3,3,1,5,27,1,9
	.half	.L513-.L512
	.byte	3,3,1,9
	.half	.L514-.L513
	.byte	3,2,1,5,1,9
	.half	.L515-.L514
	.byte	3,1,1,7,9
	.half	.L133-.L515
	.byte	0,1,1
.L509:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_initHsctModuleConfig')
	.sect	'.debug_ranges'
.L132:
	.word	-1,.L101,0,.L133-.L101,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_initHsslModule')
	.sect	'.debug_info'
.L134:
	.word	305
	.half	3
	.word	.L135
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L137,.L136
	.byte	2
	.word	.L120
	.byte	3
	.byte	'IfxHssl_Hssl_initHsslModule',0,1,133,2,6,1,1,1
	.word	.L103,.L270,.L102
	.byte	4
	.byte	'hssl',0,1,133,2,48
	.word	.L271,.L272
	.byte	4
	.byte	'config',0,1,133,2,81
	.word	.L273,.L274
	.byte	5
	.word	.L103,.L270
	.byte	6
	.byte	'hsslSFR',0,1,135,2,15
	.word	.L275,.L276
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_initHsslModule')
	.sect	'.debug_abbrev'
.L135:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_initHsslModule')
	.sect	'.debug_line'
.L136:
	.word	.L517-.L516
.L516:
	.half	3
	.word	.L519-.L518
.L518:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L519:
	.byte	5,6,7,0,5,2
	.word	.L103
	.byte	3,132,2,1,5,31,9
	.half	.L386-.L103
	.byte	3,2,1,5,16,9
	.half	.L387-.L386
	.byte	3,2,1,5,30,9
	.half	.L520-.L387
	.byte	3,3,1,5,19,9
	.half	.L384-.L520
	.byte	3,1,1,5,35,9
	.half	.L521-.L384
	.byte	1,5,27,9
	.half	.L522-.L521
	.byte	1,5,19,9
	.half	.L523-.L522
	.byte	3,1,1,5,27,9
	.half	.L524-.L523
	.byte	1,5,53,9
	.half	.L525-.L524
	.byte	3,3,1,5,30,9
	.half	.L526-.L525
	.byte	1,5,53,9
	.half	.L527-.L526
	.byte	3,1,1,5,30,9
	.half	.L528-.L527
	.byte	1,5,53,9
	.half	.L529-.L528
	.byte	3,1,1,5,30,9
	.half	.L530-.L529
	.byte	1,5,53,9
	.half	.L531-.L530
	.byte	3,1,1,5,30,9
	.half	.L532-.L531
	.byte	1,5,53,9
	.half	.L533-.L532
	.byte	3,1,1,5,30,9
	.half	.L534-.L533
	.byte	1,5,53,9
	.half	.L535-.L534
	.byte	3,1,1,5,30,9
	.half	.L536-.L535
	.byte	1,5,53,9
	.half	.L537-.L536
	.byte	3,1,1,5,30,9
	.half	.L538-.L537
	.byte	1,5,53,9
	.half	.L539-.L538
	.byte	3,1,1,5,30,9
	.half	.L540-.L539
	.byte	1,5,32,9
	.half	.L541-.L540
	.byte	3,2,1,5,30,9
	.half	.L542-.L541
	.byte	1,5,24,9
	.half	.L543-.L542
	.byte	3,2,1,5,30,9
	.half	.L544-.L543
	.byte	1,5,40,9
	.half	.L545-.L544
	.byte	3,1,1,5,30,9
	.half	.L546-.L545
	.byte	1,5,29,9
	.half	.L19-.L546
	.byte	3,2,1,5,33,9
	.half	.L547-.L19
	.byte	1,5,1,7,9
	.half	.L548-.L547
	.byte	3,2,1,7,9
	.half	.L138-.L548
	.byte	0,1,1
.L517:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_initHsslModule')
	.sect	'.debug_ranges'
.L137:
	.word	-1,.L103,0,.L138-.L103,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_initHsslModuleConfig')
	.sect	'.debug_info'
.L139:
	.word	289
	.half	3
	.word	.L140
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L142,.L141
	.byte	2
	.word	.L120
	.byte	3
	.byte	'IfxHssl_Hssl_initHsslModuleConfig',0,1,164,2,6,1,1,1
	.word	.L105,.L277,.L104
	.byte	4
	.byte	'config',0,1,164,2,61
	.word	.L278,.L279
	.byte	4
	.byte	'hssl',0,1,164,2,79
	.word	.L275,.L280
	.byte	5
	.word	.L105,.L277
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_initHsslModuleConfig')
	.sect	'.debug_abbrev'
.L140:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_initHsslModuleConfig')
	.sect	'.debug_line'
.L141:
	.word	.L550-.L549
.L549:
	.half	3
	.word	.L552-.L551
.L551:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L552:
	.byte	5,18,7,0,5,2
	.word	.L105
	.byte	3,165,2,1,5,35,9
	.half	.L553-.L105
	.byte	3,3,1,5,33,1,5,35,9
	.half	.L554-.L553
	.byte	3,1,1,5,33,1,9
	.half	.L555-.L554
	.byte	3,1,1,9
	.half	.L556-.L555
	.byte	3,1,1,9
	.half	.L557-.L556
	.byte	3,1,1,9
	.half	.L558-.L557
	.byte	3,1,1,9
	.half	.L559-.L558
	.byte	3,1,1,9
	.half	.L560-.L559
	.byte	3,1,1,5,26,9
	.half	.L561-.L560
	.byte	3,3,1,5,24,1,5,1,9
	.half	.L562-.L561
	.byte	3,1,1,7,9
	.half	.L143-.L562
	.byte	0,1,1
.L550:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_initHsslModuleConfig')
	.sect	'.debug_ranges'
.L142:
	.word	-1,.L105,0,.L143-.L105,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_initChannel')
	.sect	'.debug_info'
.L144:
	.word	290
	.half	3
	.word	.L145
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L147,.L146
	.byte	2
	.word	.L120
	.byte	3
	.byte	'IfxHssl_Hssl_initChannel',0,1,134,1,6,1,1,1
	.word	.L87,.L281,.L86
	.byte	4
	.byte	'channel',0,1,134,1,53
	.word	.L282,.L283
	.byte	4
	.byte	'channelConfig',0,1,134,1,96
	.word	.L284,.L285
	.byte	5
	.word	.L87,.L281
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_initChannel')
	.sect	'.debug_abbrev'
.L145:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_initChannel')
	.sect	'.debug_line'
.L146:
	.word	.L564-.L563
.L563:
	.half	3
	.word	.L566-.L565
.L565:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L566:
	.byte	5,49,7,0,5,2
	.word	.L87
	.byte	3,135,1,1,5,34,9
	.half	.L567-.L87
	.byte	1,5,49,9
	.half	.L568-.L567
	.byte	3,1,1,5,34,9
	.half	.L569-.L568
	.byte	1,5,49,9
	.half	.L570-.L569
	.byte	3,2,1,5,34,9
	.half	.L571-.L570
	.byte	1,5,36,9
	.half	.L572-.L571
	.byte	3,1,1,5,34,1,5,36,9
	.half	.L573-.L572
	.byte	3,2,1,5,34,1,5,49,9
	.half	.L574-.L573
	.byte	3,1,1,5,34,9
	.half	.L575-.L574
	.byte	1,5,49,9
	.half	.L576-.L575
	.byte	3,1,1,5,34,9
	.half	.L577-.L576
	.byte	1,5,1,9
	.half	.L578-.L577
	.byte	3,1,1,7,9
	.half	.L148-.L578
	.byte	0,1,1
.L564:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_initChannel')
	.sect	'.debug_ranges'
.L147:
	.word	-1,.L87,0,.L148-.L87,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_initChannelConfig')
	.sect	'.debug_info'
.L149:
	.word	311
	.half	3
	.word	.L150
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L152,.L151
	.byte	2
	.word	.L120
	.byte	3
	.byte	'IfxHssl_Hssl_initChannelConfig',0,1,148,1,6,1,1,1
	.word	.L89,.L286,.L88
	.byte	4
	.byte	'channelConfig',0,1,148,1,65
	.word	.L287,.L288
	.byte	4
	.byte	'hssl',0,1,148,1,94
	.word	.L271,.L289
	.byte	4
	.byte	'hsct',0,1,148,1,114
	.word	.L225,.L290
	.byte	5
	.word	.L89,.L286
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_initChannelConfig')
	.sect	'.debug_abbrev'
.L150:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_initChannelConfig')
	.sect	'.debug_line'
.L151:
	.word	.L580-.L579
.L579:
	.half	3
	.word	.L582-.L581
.L581:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L582:
	.byte	5,40,7,0,5,2
	.word	.L89
	.byte	3,149,1,1,5,34,9
	.half	.L583-.L89
	.byte	1,5,36,9
	.half	.L584-.L583
	.byte	3,3,1,5,40,9
	.half	.L585-.L584
	.byte	3,126,1,5,34,9
	.half	.L586-.L585
	.byte	1,9
	.half	.L587-.L586
	.byte	3,2,1,5,36,9
	.half	.L588-.L587
	.byte	3,1,1,5,34,1,5,40,9
	.half	.L589-.L588
	.byte	3,1,1,5,34,9
	.half	.L590-.L589
	.byte	1,5,40,9
	.half	.L591-.L590
	.byte	3,1,1,5,34,9
	.half	.L592-.L591
	.byte	1,5,1,9
	.half	.L593-.L592
	.byte	3,1,1,7,9
	.half	.L153-.L593
	.byte	0,1,1
.L580:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_initChannelConfig')
	.sect	'.debug_ranges'
.L152:
	.word	-1,.L89,0,.L153-.L89,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_read')
	.sect	'.debug_info'
.L154:
	.word	305
	.half	3
	.word	.L155
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L157,.L156
	.byte	2
	.word	.L120
	.byte	3
	.byte	'IfxHssl_Hssl_read',0,1,170,3,21
	.word	.L291
	.byte	1,1,1
	.word	.L109,.L292,.L108
	.byte	4
	.byte	'channel',0,1,170,3,61
	.word	.L282,.L293
	.byte	4
	.byte	'address',0,1,170,3,77
	.word	.L294,.L295
	.byte	4
	.byte	'dataLength',0,1,170,3,105
	.word	.L296,.L297
	.byte	5
	.word	.L109,.L292
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_read')
	.sect	'.debug_abbrev'
.L155:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_read')
	.sect	'.debug_line'
.L156:
	.word	.L595-.L594
.L594:
	.half	3
	.word	.L597-.L596
.L596:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L597:
	.byte	5,21,7,0,5,2
	.word	.L109
	.byte	3,169,3,1,5,53,9
	.half	.L445-.L109
	.byte	3,3,1,5,99,9
	.half	.L442-.L445
	.byte	1,5,105,9
	.half	.L598-.L442
	.byte	1,5,1,9
	.half	.L158-.L598
	.byte	3,1,0,1,1
.L595:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_read')
	.sect	'.debug_ranges'
.L157:
	.word	-1,.L109,0,.L158-.L109,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_sendControlCommand')
	.sect	'.debug_info'
.L159:
	.word	310
	.half	3
	.word	.L160
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L162,.L161
	.byte	2
	.word	.L120
	.byte	3
	.byte	'IfxHssl_Hssl_sendControlCommand',0,1,177,3,6,1,1,1
	.word	.L111,.L298,.L110
	.byte	4
	.byte	'hsct',0,1,177,3,52
	.word	.L225,.L299
	.byte	4
	.byte	'command',0,1,177,3,64
	.word	.L300,.L301
	.byte	5
	.word	.L111,.L298
	.byte	6
	.byte	'hsctSFR',0,1,179,3,15
	.word	.L230,.L302
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_sendControlCommand')
	.sect	'.debug_abbrev'
.L160:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_sendControlCommand')
	.sect	'.debug_line'
.L161:
	.word	.L600-.L599
.L599:
	.half	3
	.word	.L602-.L601
.L601:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L602:
	.byte	5,29,7,0,5,2
	.word	.L111
	.byte	3,178,3,1,9
	.half	.L446-.L111
	.byte	3,2,1,5,22,9
	.half	.L603-.L446
	.byte	3,1,1,5,29,9
	.half	.L604-.L603
	.byte	1,5,24,9
	.half	.L605-.L604
	.byte	3,2,1,5,1,7,9
	.half	.L163-.L605
	.byte	3,1,0,1,1
.L600:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_sendControlCommand')
	.sect	'.debug_ranges'
.L162:
	.word	-1,.L111,0,.L163-.L111,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_singleFrameRequest')
	.sect	'.debug_info'
.L164:
	.word	386
	.half	3
	.word	.L165
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L167,.L166
	.byte	2
	.word	.L120
	.byte	3
	.byte	'IfxHssl_Hssl_singleFrameRequest',0,1,188,3,21
	.word	.L291
	.byte	1,1,1
	.word	.L113,.L303,.L112
	.byte	4
	.byte	'channel',0,1,188,3,75
	.word	.L282,.L304
	.byte	4
	.byte	'frameRequest',0,1,188,3,110
	.word	.L305,.L306
	.byte	4
	.byte	'address',0,1,188,3,131,1
	.word	.L294,.L307
	.byte	4
	.byte	'data',0,1,188,3,147,1
	.word	.L294,.L308
	.byte	4
	.byte	'dataLength',0,1,188,3,172,1
	.word	.L296,.L309
	.byte	5
	.word	.L113,.L303
	.byte	6
	.byte	'hsslI',0,1,190,3,17
	.word	.L310,.L311
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_singleFrameRequest')
	.sect	'.debug_abbrev'
.L165:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_singleFrameRequest')
	.sect	'.debug_line'
.L166:
	.word	.L607-.L606
.L606:
	.half	3
	.word	.L609-.L608
.L608:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L609:
	.byte	5,47,7,0,5,2
	.word	.L113
	.byte	3,189,3,1,5,64,9
	.half	.L610-.L113
	.byte	1,5,56,9
	.half	.L611-.L610
	.byte	1,5,16,9
	.half	.L612-.L611
	.byte	3,2,1,5,56,9
	.half	.L613-.L612
	.byte	3,126,1,5,5,9
	.half	.L447-.L613
	.byte	3,2,1,5,16,7,9
	.half	.L614-.L447
	.byte	3,2,1,5,1,3,34,1,5,18,7,9
	.half	.L50-.L614
	.byte	3,97,1,5,26,9
	.half	.L615-.L50
	.byte	1,5,28,9
	.half	.L616-.L615
	.byte	3,1,1,5,26,1,5,10,9
	.half	.L617-.L616
	.byte	3,4,1,7,9
	.half	.L618-.L617
	.byte	3,4,1,9
	.half	.L619-.L618
	.byte	3,5,1,7,9
	.half	.L620-.L619
	.byte	3,5,1,5,1,7,9
	.half	.L621-.L620
	.byte	3,12,1,5,22,7,9
	.half	.L52-.L621
	.byte	3,103,1,5,27,9
	.half	.L622-.L52
	.byte	1,5,9,9
	.half	.L623-.L622
	.byte	3,2,1,5,22,9
	.half	.L53-.L623
	.byte	3,2,1,5,27,9
	.half	.L624-.L53
	.byte	1,5,9,3,3,1,5,22,9
	.half	.L54-.L624
	.byte	3,2,1,5,27,9
	.half	.L625-.L54
	.byte	1,9
	.half	.L626-.L625
	.byte	3,1,1,9
	.half	.L57-.L626
	.byte	3,1,1,5,9,9
	.half	.L627-.L57
	.byte	3,1,1,5,22,9
	.half	.L55-.L627
	.byte	3,3,1,5,27,9
	.half	.L628-.L55
	.byte	1,5,34,9
	.half	.L59-.L628
	.byte	3,7,1,5,12,9
	.half	.L629-.L59
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L168-.L629
	.byte	0,1,1
.L607:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_singleFrameRequest')
	.sect	'.debug_ranges'
.L167:
	.word	-1,.L113,0,.L168-.L113,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_waitAcknowledge')
	.sect	'.debug_info'
.L169:
	.word	405
	.half	3
	.word	.L170
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L172,.L171
	.byte	2
	.word	.L120
	.byte	3
	.byte	'IfxHssl_Hssl_waitAcknowledge',0,1,231,3,21
	.word	.L291
	.byte	1,1,1
	.word	.L115,.L312,.L114
	.byte	4
	.byte	'channel',0,1,231,3,72
	.word	.L282,.L313
	.byte	5
	.word	.L115,.L312
	.byte	6
	.byte	'requestType',0,1,233,3,23
	.word	.L294,.L314
	.byte	7
	.word	.L315
	.byte	6
	.byte	'qFlags',0,1,133,4,16
	.word	.L294,.L319
	.byte	6
	.byte	'mFlags',0,1,134,4,16
	.word	.L294,.L320
	.byte	6
	.byte	'acknwoledgeFlagsMask',0,1,135,4,16
	.word	.L294,.L321
	.byte	6
	.byte	'errorFlagsMask',0,1,136,4,16
	.word	.L294,.L322
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_waitAcknowledge')
	.sect	'.debug_abbrev'
.L170:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_waitAcknowledge')
	.sect	'.debug_line'
.L171:
	.word	.L631-.L630
.L630:
	.half	3
	.word	.L633-.L632
.L632:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L633:
	.byte	5,44,7,0,5,2
	.word	.L115
	.byte	3,232,3,1,9
	.half	.L634-.L115
	.byte	3,1,1,5,35,9
	.half	.L635-.L634
	.byte	3,127,1,5,9,9
	.half	.L448-.L635
	.byte	3,3,1,5,55,7,9
	.half	.L636-.L448
	.byte	1,5,68,9
	.half	.L637-.L636
	.byte	1,5,73,9
	.half	.L638-.L637
	.byte	1,5,39,7,9
	.half	.L65-.L638
	.byte	3,2,1,5,43,9
	.half	.L639-.L65
	.byte	1,7,9
	.half	.L640-.L639
	.byte	1,5,9,9
	.half	.L63-.L640
	.byte	3,7,1,5,55,3,119,1,5,25,9
	.half	.L641-.L63
	.byte	3,11,1,5,13,9
	.half	.L642-.L641
	.byte	3,4,1,5,116,7,9
	.half	.L643-.L642
	.byte	1,5,25,7,9
	.half	.L68-.L643
	.byte	3,2,1,5,9,9
	.half	.L69-.L68
	.byte	3,3,1,5,60,3,5,1,5,70,9
	.half	.L316-.L69
	.byte	3,2,1,5,60,3,127,1,5,25,9
	.half	.L317-.L316
	.byte	3,124,1,5,60,9
	.half	.L318-.L317
	.byte	3,5,1,5,53,9
	.half	.L644-.L318
	.byte	1,5,92,9
	.half	.L449-.L644
	.byte	1,5,94,9
	.half	.L645-.L449
	.byte	1,5,89,9
	.half	.L452-.L645
	.byte	1,5,56,9
	.half	.L646-.L452
	.byte	3,1,1,5,61,9
	.half	.L647-.L646
	.byte	1,5,30,9
	.half	.L648-.L647
	.byte	3,2,1,5,29,9
	.half	.L649-.L648
	.byte	1,5,41,9
	.half	.L650-.L649
	.byte	3,126,1,5,47,9
	.half	.L651-.L650
	.byte	3,2,1,5,53,9
	.half	.L453-.L651
	.byte	3,126,1,5,9,9
	.half	.L652-.L453
	.byte	3,2,1,5,20,7,9
	.half	.L653-.L652
	.byte	3,5,1,5,9,9
	.half	.L450-.L653
	.byte	1,5,20,7,9
	.half	.L71-.L450
	.byte	3,2,1,5,1,3,14,1,5,20,7,9
	.half	.L72-.L71
	.byte	3,117,1,5,9,9
	.half	.L451-.L72
	.byte	1,5,44,7,9
	.half	.L654-.L451
	.byte	3,2,1,5,42,1,5,20,9
	.half	.L655-.L654
	.byte	3,1,1,5,1,3,8,1,5,40,7,9
	.half	.L74-.L655
	.byte	3,124,1,5,38,1,5,12,9
	.half	.L66-.L74
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L173-.L66
	.byte	0,1,1
.L631:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_waitAcknowledge')
	.sect	'.debug_ranges'
.L172:
	.word	-1,.L115,0,.L173-.L115,0,0
.L315:
	.word	-1,.L115,.L316-.L115,.L317-.L115,.L318-.L115,.L66-.L115,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_write')
	.sect	'.debug_info'
.L174:
	.word	324
	.half	3
	.word	.L175
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L177,.L176
	.byte	2
	.word	.L120
	.byte	3
	.byte	'IfxHssl_Hssl_write',0,1,162,4,21
	.word	.L291
	.byte	1,1,1
	.word	.L117,.L323,.L116
	.byte	4
	.byte	'channel',0,1,162,4,62
	.word	.L282,.L324
	.byte	4
	.byte	'address',0,1,162,4,78
	.word	.L294,.L325
	.byte	4
	.byte	'data',0,1,162,4,94
	.word	.L294,.L326
	.byte	4
	.byte	'dataLength',0,1,162,4,119
	.word	.L296,.L327
	.byte	5
	.word	.L117,.L323
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_write')
	.sect	'.debug_abbrev'
.L175:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_write')
	.sect	'.debug_line'
.L176:
	.word	.L657-.L656
.L656:
	.half	3
	.word	.L659-.L658
.L658:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L659:
	.byte	5,21,7,0,5,2
	.word	.L117
	.byte	3,161,4,1,5,53,9
	.half	.L459-.L117
	.byte	3,2,1,5,106,9
	.half	.L454-.L459
	.byte	1,5,1,9
	.half	.L178-.L454
	.byte	3,1,0,1,1
.L657:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_write')
	.sect	'.debug_ranges'
.L177:
	.word	-1,.L117,0,.L178-.L117,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_checkErrors')
	.sect	'.debug_info'
.L179:
	.word	279
	.half	3
	.word	.L180
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L182,.L181
	.byte	2
	.word	.L120
	.byte	3
	.byte	'IfxHssl_Hssl_checkErrors',0,1,56,6,1,1,1
	.word	.L81,.L328,.L80
	.byte	4
	.byte	'hssl',0,1,56,45
	.word	.L271,.L329
	.byte	5
	.word	.L81,.L328
	.byte	6
	.byte	'hsslSFR',0,1,58,15
	.word	.L275,.L330
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_checkErrors')
	.sect	'.debug_abbrev'
.L180:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_checkErrors')
	.sect	'.debug_line'
.L181:
	.word	.L661-.L660
.L660:
	.half	3
	.word	.L663-.L662
.L662:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L663:
	.byte	5,29,7,0,5,2
	.word	.L81
	.byte	3,57,1,5,26,9
	.half	.L367-.L81
	.byte	3,3,1,5,5,9
	.half	.L664-.L367
	.byte	1,5,25,7,9
	.half	.L665-.L664
	.byte	3,2,1,5,46,9
	.half	.L666-.L665
	.byte	1,5,26,9
	.half	.L2-.L666
	.byte	3,3,1,5,5,9
	.half	.L667-.L2
	.byte	1,5,25,7,9
	.half	.L668-.L667
	.byte	3,2,1,5,46,9
	.half	.L669-.L668
	.byte	1,5,26,9
	.half	.L3-.L669
	.byte	3,3,1,5,5,9
	.half	.L670-.L3
	.byte	1,5,25,7,9
	.half	.L671-.L670
	.byte	3,2,1,5,39,9
	.half	.L672-.L671
	.byte	1,5,26,9
	.half	.L4-.L672
	.byte	3,3,1,5,5,9
	.half	.L673-.L4
	.byte	1,5,25,7,9
	.half	.L674-.L673
	.byte	3,2,1,5,42,9
	.half	.L675-.L674
	.byte	1,5,26,9
	.half	.L5-.L675
	.byte	3,3,1,5,5,9
	.half	.L676-.L5
	.byte	1,5,25,7,9
	.half	.L677-.L676
	.byte	3,2,1,5,48,9
	.half	.L678-.L677
	.byte	1,5,26,9
	.half	.L6-.L678
	.byte	3,3,1,5,5,9
	.half	.L679-.L6
	.byte	1,5,25,7,9
	.half	.L680-.L679
	.byte	3,2,1,5,41,9
	.half	.L681-.L680
	.byte	1,5,26,9
	.half	.L7-.L681
	.byte	3,3,1,5,5,9
	.half	.L682-.L7
	.byte	1,5,25,7,9
	.half	.L683-.L682
	.byte	3,2,1,5,49,9
	.half	.L684-.L683
	.byte	1,5,26,9
	.half	.L8-.L684
	.byte	3,3,1,5,5,9
	.half	.L685-.L8
	.byte	1,5,25,7,9
	.half	.L686-.L685
	.byte	3,2,1,5,42,9
	.half	.L687-.L686
	.byte	1,5,26,9
	.half	.L9-.L687
	.byte	3,3,1,5,5,9
	.half	.L688-.L9
	.byte	1,5,25,7,9
	.half	.L689-.L688
	.byte	3,2,1,5,35,9
	.half	.L690-.L689
	.byte	1,5,1,9
	.half	.L10-.L690
	.byte	3,2,1,7,9
	.half	.L183-.L10
	.byte	0,1,1
.L661:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_checkErrors')
	.sect	'.debug_ranges'
.L182:
	.word	-1,.L81,0,.L183-.L81,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_clearErrorFlags')
	.sect	'.debug_info'
.L184:
	.word	262
	.half	3
	.word	.L185
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L187,.L186
	.byte	2
	.word	.L120
	.byte	3
	.byte	'IfxHssl_Hssl_clearErrorFlags',0,1,108,6,1,1,1
	.word	.L83,.L331,.L82
	.byte	4
	.byte	'hssl',0,1,108,49
	.word	.L271,.L332
	.byte	5
	.word	.L83,.L331
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_clearErrorFlags')
	.sect	'.debug_abbrev'
.L185:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_clearErrorFlags')
	.sect	'.debug_line'
.L186:
	.word	.L692-.L691
.L691:
	.half	3
	.word	.L694-.L693
.L693:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L694:
	.byte	5,47,7,0,5,2
	.word	.L83
	.byte	3,237,0,1,5,45,1,5,1,9
	.half	.L695-.L83
	.byte	3,9,1,7,9
	.half	.L188-.L695
	.byte	0,1,1
.L692:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_clearErrorFlags')
	.sect	'.debug_ranges'
.L187:
	.word	-1,.L83,0,.L188-.L83,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_delay')
	.sect	'.debug_info'
.L189:
	.word	267
	.half	3
	.word	.L190
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L192,.L191
	.byte	2
	.word	.L120
	.byte	3
	.byte	'IfxHssl_Hssl_delay',0,1,122,6,1,1,1
	.word	.L85,.L333,.L84
	.byte	4
	.byte	'hsct',0,1,122,39
	.word	.L225,.L334
	.byte	5
	.word	.L85,.L333
	.byte	6
	.byte	'i',0,1,124,12
	.word	.L294,.L335
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_delay')
	.sect	'.debug_abbrev'
.L190:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_delay')
	.sect	'.debug_line'
.L191:
	.word	.L697-.L696
.L696:
	.half	3
	.word	.L699-.L698
.L698:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L699:
	.byte	5,25,7,0,5,2
	.word	.L85
	.byte	3,254,0,1,5,14,9
	.half	.L11-.L85
	.byte	3,2,1,5,25,9
	.half	.L700-.L11
	.byte	3,126,1,5,1,7,9
	.half	.L701-.L700
	.byte	3,4,1,7,9
	.half	.L193-.L701
	.byte	0,1,1
.L697:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_delay')
	.sect	'.debug_ranges'
.L192:
	.word	-1,.L85,0,.L193-.L85,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_prepareStream')
	.sect	'.debug_info'
.L194:
	.word	475
	.half	3
	.word	.L195
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L197,.L196
	.byte	2
	.word	.L120
	.byte	3
	.byte	'IfxHssl_Hssl_prepareStream',0,1,183,2,21
	.word	.L291
	.byte	1,1,1
	.word	.L107,.L336,.L106
	.byte	4
	.byte	'channel',0,1,183,2,70
	.word	.L282,.L337
	.byte	4
	.byte	'slaveTargetAddress',0,1,183,2,86
	.word	.L294,.L338
	.byte	4
	.byte	'count',0,1,183,2,116
	.word	.L339,.L340
	.byte	5
	.word	.L107,.L336
	.byte	6
	.byte	'tsfcReg',0,1,186,2,23
	.word	.L341,.L342
	.byte	7
	.word	.L343,.L344,.L345
	.byte	8
	.word	.L346,.L347
	.byte	9
	.word	.L348,.L349
	.byte	0,7
	.word	.L343,.L350,.L351
	.byte	8
	.word	.L346,.L347
	.byte	0,7
	.word	.L343,.L352,.L353
	.byte	8
	.word	.L346,.L347
	.byte	9
	.word	.L348,.L354
	.byte	0,7
	.word	.L343,.L355,.L356
	.byte	8
	.word	.L346,.L347
	.byte	0,7
	.word	.L343,.L357,.L358
	.byte	8
	.word	.L346,.L347
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_prepareStream')
	.sect	'.debug_abbrev'
.L195:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,85
	.byte	6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_prepareStream')
	.sect	'.debug_line'
.L196:
	.word	.L703-.L702
.L702:
	.half	3
	.word	.L705-.L704
.L704:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.h',0,0,0,0,0
.L705:
	.byte	5,21,7,0,5,2
	.word	.L107
	.byte	3,182,2,1,5,42,9
	.half	.L390-.L107
	.byte	3,2,1,5,21,9
	.half	.L391-.L390
	.byte	3,126,1,5,5,9
	.half	.L392-.L391
	.byte	3,5,1,5,46,7,9
	.half	.L706-.L392
	.byte	3,6,1,5,100,1,5,138,1,9
	.half	.L389-.L706
	.byte	1,5,106,9
	.half	.L707-.L389
	.byte	1,5,138,1,1,5,75,9
	.half	.L388-.L707
	.byte	3,2,1,5,42,9
	.half	.L22-.L388
	.byte	3,2,1,5,9,9
	.half	.L394-.L22
	.byte	1,5,41,7,9
	.half	.L21-.L394
	.byte	3,126,1,5,75,9
	.half	.L396-.L21
	.byte	1,5,48,7,9
	.half	.L708-.L396
	.byte	3,10,1,5,63,9
	.half	.L709-.L708
	.byte	1,5,54,9
	.half	.L397-.L709
	.byte	1,5,63,1,5,75,9
	.half	.L398-.L397
	.byte	3,2,1,5,42,9
	.half	.L25-.L398
	.byte	3,2,1,5,9,9
	.half	.L400-.L25
	.byte	1,5,41,7,9
	.half	.L24-.L400
	.byte	3,126,1,5,75,9
	.half	.L402-.L24
	.byte	1,4,2,5,47,7,9
	.half	.L344-.L402
	.byte	3,183,3,1,5,64,9
	.half	.L710-.L344
	.byte	1,4,1,5,122,9
	.half	.L345-.L710
	.byte	3,212,124,1,4,2,5,64,9
	.half	.L350-.L345
	.byte	3,172,3,1,5,56,9
	.half	.L711-.L350
	.byte	1,4,1,5,46,9
	.half	.L351-.L711
	.byte	3,212,124,1,5,106,1,5,122,9
	.half	.L712-.L351
	.byte	1,4,2,5,22,3,173,3,1,4,1,5,122,9
	.half	.L404-.L712
	.byte	3,211,124,1,5,75,9
	.half	.L403-.L404
	.byte	3,2,1,5,42,9
	.half	.L28-.L403
	.byte	3,2,1,5,9,9
	.half	.L408-.L28
	.byte	1,5,41,7,9
	.half	.L27-.L408
	.byte	3,126,1,5,75,9
	.half	.L410-.L27
	.byte	1,5,46,7,9
	.half	.L713-.L410
	.byte	3,9,1,5,100,1,5,153,1,9
	.half	.L405-.L713
	.byte	1,5,106,9
	.half	.L411-.L405
	.byte	1,5,121,9
	.half	.L714-.L411
	.byte	1,5,153,1,1,5,75,9
	.half	.L412-.L714
	.byte	3,2,1,5,42,9
	.half	.L31-.L412
	.byte	3,2,1,5,9,9
	.half	.L414-.L31
	.byte	1,5,41,7,9
	.half	.L30-.L414
	.byte	3,126,1,5,75,9
	.half	.L416-.L30
	.byte	1,5,122,7,9
	.half	.L715-.L416
	.byte	3,9,1,5,100,1,5,46,9
	.half	.L417-.L715
	.byte	1,5,122,1,5,106,9
	.half	.L419-.L417
	.byte	1,5,122,9
	.half	.L716-.L419
	.byte	1,5,75,9
	.half	.L418-.L716
	.byte	3,2,1,5,42,9
	.half	.L34-.L418
	.byte	3,2,1,5,9,9
	.half	.L421-.L34
	.byte	1,5,41,7,9
	.half	.L33-.L421
	.byte	3,126,1,5,75,9
	.half	.L423-.L33
	.byte	1,5,17,7,9
	.half	.L717-.L423
	.byte	3,9,1,5,10,9
	.half	.L718-.L717
	.byte	1,5,52,7,9
	.half	.L719-.L718
	.byte	3,3,1,5,65,9
	.half	.L720-.L719
	.byte	1,5,58,9
	.half	.L424-.L720
	.byte	1,5,65,1,5,79,9
	.half	.L425-.L424
	.byte	3,2,1,5,46,9
	.half	.L38-.L425
	.byte	3,2,1,5,13,9
	.half	.L427-.L38
	.byte	1,5,45,7,9
	.half	.L37-.L427
	.byte	3,126,1,5,79,9
	.half	.L429-.L37
	.byte	1,4,2,5,47,7,9
	.half	.L352-.L429
	.byte	3,134,3,1,5,64,9
	.half	.L721-.L352
	.byte	1,4,1,5,67,9
	.half	.L353-.L721
	.byte	3,131,125,1,4,2,5,64,9
	.half	.L355-.L353
	.byte	3,253,2,1,5,56,9
	.half	.L722-.L355
	.byte	1,4,1,5,67,9
	.half	.L356-.L722
	.byte	3,131,125,1,4,2,5,22,9
	.half	.L357-.L356
	.byte	3,254,2,1,4,1,5,48,9
	.half	.L358-.L357
	.byte	3,130,125,1,5,9,9
	.half	.L723-.L358
	.byte	1,5,54,7,9
	.half	.L724-.L723
	.byte	3,3,1,5,108,1,5,133,1,9
	.half	.L725-.L724
	.byte	1,5,114,9
	.half	.L430-.L725
	.byte	1,5,133,1,1,5,83,9
	.half	.L431-.L430
	.byte	3,2,1,5,50,9
	.half	.L42-.L431
	.byte	3,2,1,5,17,9
	.half	.L433-.L42
	.byte	1,5,49,7,9
	.half	.L41-.L433
	.byte	3,126,1,5,83,9
	.half	.L435-.L41
	.byte	1,5,50,7,9
	.half	.L40-.L435
	.byte	3,10,1,5,104,1,5,135,1,9
	.half	.L726-.L40
	.byte	1,5,110,9
	.half	.L436-.L726
	.byte	1,5,121,9
	.half	.L727-.L436
	.byte	3,77,1,5,135,1,3,51,1,5,79,9
	.half	.L437-.L727
	.byte	3,2,1,5,46,9
	.half	.L45-.L437
	.byte	3,2,1,5,13,9
	.half	.L439-.L45
	.byte	1,5,24,7,9
	.half	.L20-.L439
	.byte	3,2,1,5,1,3,8,1,5,45,7,9
	.half	.L44-.L20
	.byte	3,116,1,5,79,9
	.half	.L441-.L44
	.byte	1,5,32,7,9
	.half	.L36-.L441
	.byte	3,9,1,5,30,1,5,1,9
	.half	.L728-.L36
	.byte	3,3,1,7,9
	.half	.L198-.L728
	.byte	0,1,1
.L703:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_prepareStream')
	.sect	'.debug_ranges'
.L197:
	.word	-1,.L107,0,.L198-.L107,0,0
.L349:
	.word	-1,.L107,.L344-.L107,.L345-.L107,.L350-.L107,.L351-.L107,0,0
.L354:
	.word	-1,.L107,.L352-.L107,.L353-.L107,.L355-.L107,.L356-.L107,.L357-.L107,.L358-.L107,0,0
	.sdecl	'.debug_info',debug,cluster('IfxHssl_Hssl_writeStream')
	.sect	'.debug_info'
.L199:
	.word	343
	.half	3
	.word	.L200
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L202,.L201
	.byte	2
	.word	.L120
	.byte	3
	.byte	'IfxHssl_Hssl_writeStream',0,1,168,4,21
	.word	.L291
	.byte	1,1,1
	.word	.L119,.L359,.L118
	.byte	4
	.byte	'hssl',0,1,168,4,60
	.word	.L271,.L360
	.byte	4
	.byte	'data',0,1,168,4,74
	.word	.L361,.L362
	.byte	4
	.byte	'count',0,1,168,4,90
	.word	.L339,.L363
	.byte	5
	.word	.L119,.L359
	.byte	6
	.byte	'hsslSFR',0,1,170,4,27
	.word	.L275,.L364
	.byte	6
	.byte	'hsslIS',0,1,171,4,27
	.word	.L365,.L366
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxHssl_Hssl_writeStream')
	.sect	'.debug_abbrev'
.L200:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxHssl_Hssl_writeStream')
	.sect	'.debug_line'
.L201:
	.word	.L730-.L729
.L729:
	.half	3
	.word	.L732-.L731
.L731:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L732:
	.byte	5,47,7,0,5,2
	.word	.L119
	.byte	3,169,4,1,5,60,9
	.half	.L460-.L119
	.byte	3,5,1,5,50,9
	.half	.L461-.L460
	.byte	1,9
	.half	.L733-.L461
	.byte	3,2,1,5,19,9
	.half	.L734-.L733
	.byte	3,2,1,5,50,9
	.half	.L462-.L734
	.byte	1,5,19,9
	.half	.L735-.L462
	.byte	3,1,1,5,50,9
	.half	.L736-.L735
	.byte	1,5,19,9
	.half	.L737-.L736
	.byte	3,1,1,5,50,9
	.half	.L738-.L737
	.byte	1,5,52,9
	.half	.L739-.L738
	.byte	3,2,1,5,50,1,5,13,9
	.half	.L740-.L739
	.byte	3,3,1,5,5,9
	.half	.L741-.L740
	.byte	1,5,29,7,9
	.half	.L742-.L741
	.byte	3,2,1,5,35,9
	.half	.L743-.L742
	.byte	1,5,25,9
	.half	.L78-.L743
	.byte	3,4,1,5,12,9
	.half	.L744-.L78
	.byte	3,3,1,5,31,9
	.half	.L745-.L744
	.byte	3,125,1,5,1,9
	.half	.L746-.L745
	.byte	3,4,1,7,9
	.half	.L203-.L746
	.byte	0,1,1
.L730:
	.sdecl	'.debug_ranges',debug,cluster('IfxHssl_Hssl_writeStream')
	.sect	'.debug_ranges'
.L202:
	.word	-1,.L119,0,.L203-.L119,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L204:
	.word	216
	.half	3
	.word	.L205
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L207,.L206
	.byte	2
	.word	.L120
	.byte	3
	.byte	'.cocofun_1',0,1,160,1,6,1
	.word	.L99,.L208,.L98
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L205:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L206:
	.word	.L748-.L747
.L747:
	.half	3
	.word	.L750-.L749
.L749:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L750:
	.byte	5,39,7,0,5,2
	.word	.L99
	.byte	3,211,1,1,9
	.half	.L375-.L99
	.byte	3,1,1,5,29,9
	.half	.L751-.L375
	.byte	3,1,1,9
	.half	.L208-.L751
	.byte	0,1,1,5,39,0,5,2
	.word	.L99
	.byte	3,211,1,1,9
	.half	.L375-.L99
	.byte	3,12,1,5,29,9
	.half	.L751-.L375
	.byte	3,1,1,9
	.half	.L752-.L751
	.byte	3,117,1,7,9
	.half	.L208-.L752
	.byte	0,1,1
.L748:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L207:
	.word	-1,.L99,0,.L208-.L99,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_2')
	.sect	'.debug_info'
.L209:
	.word	216
	.half	3
	.word	.L210
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L212,.L211
	.byte	2
	.word	.L120
	.byte	3
	.byte	'.cocofun_2',0,1,160,1,6,1
	.word	.L97,.L213,.L96
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_2')
	.sect	'.debug_abbrev'
.L210:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_2')
	.sect	'.debug_line'
.L211:
	.word	.L754-.L753
.L753:
	.half	3
	.word	.L756-.L755
.L755:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L756:
	.byte	5,39,7,0,5,2
	.word	.L97
	.byte	3,213,1,1,5,29,9
	.half	.L757-.L97
	.byte	3,1,1,5,39,9
	.half	.L758-.L757
	.byte	1,9
	.half	.L213-.L758
	.byte	0,1,1,5,39,0,5,2
	.word	.L97
	.byte	3,224,1,1,5,29,9
	.half	.L757-.L97
	.byte	3,1,1,5,39,9
	.half	.L758-.L757
	.byte	1,9
	.half	.L379-.L758
	.byte	3,117,1,7,9
	.half	.L213-.L379
	.byte	0,1,1
.L754:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_2')
	.sect	'.debug_ranges'
.L212:
	.word	-1,.L97,0,.L213-.L97,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_3')
	.sect	'.debug_info'
.L214:
	.word	216
	.half	3
	.word	.L215
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L217,.L216
	.byte	2
	.word	.L120
	.byte	3
	.byte	'.cocofun_3',0,1,160,1,6,1
	.word	.L95,.L218,.L94
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_3')
	.sect	'.debug_abbrev'
.L215:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_3')
	.sect	'.debug_line'
.L216:
	.word	.L760-.L759
.L759:
	.half	3
	.word	.L762-.L761
.L761:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L762:
	.byte	5,29,7,0,5,2
	.word	.L95
	.byte	3,215,1,1,5,41,9
	.half	.L763-.L95
	.byte	1,5,39,9
	.half	.L764-.L763
	.byte	1,9
	.half	.L218-.L764
	.byte	0,1,1,5,29,0,5,2
	.word	.L95
	.byte	3,227,1,1,5,41,9
	.half	.L763-.L95
	.byte	1,5,39,9
	.half	.L764-.L763
	.byte	1,9
	.half	.L380-.L764
	.byte	3,116,1,7,9
	.half	.L218-.L380
	.byte	0,1,1
.L760:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_3')
	.sect	'.debug_ranges'
.L217:
	.word	-1,.L95,0,.L218-.L95,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_4')
	.sect	'.debug_info'
.L219:
	.word	216
	.half	3
	.word	.L220
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L222,.L221
	.byte	2
	.word	.L120
	.byte	3
	.byte	'.cocofun_4',0,1,160,1,6,1
	.word	.L93,.L223,.L92
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_4')
	.sect	'.debug_abbrev'
.L220:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_4')
	.sect	'.debug_line'
.L221:
	.word	.L766-.L765
.L765:
	.half	3
	.word	.L768-.L767
.L767:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl\\IfxHssl_Hssl.c',0,0,0,0,0
.L768:
	.byte	5,39,7,0,5,2
	.word	.L93
	.byte	3,210,1,1,5,24,9
	.half	.L769-.L93
	.byte	3,1,1,9
	.half	.L223-.L769
	.byte	0,1,1,5,39,0,5,2
	.word	.L93
	.byte	3,221,1,1,5,24,9
	.half	.L769-.L93
	.byte	3,1,1,9
	.half	.L770-.L769
	.byte	3,117,1,7,9
	.half	.L223-.L770
	.byte	0,1,1,5,39,0,5,2
	.word	.L93
	.byte	3,211,1,1,5,24,9
	.half	.L769-.L93
	.byte	3,1,1,9
	.half	.L770-.L769
	.byte	3,127,1,7,9
	.half	.L223-.L770
	.byte	0,1,1,5,39,0,5,2
	.word	.L93
	.byte	3,222,1,1,5,24,9
	.half	.L769-.L93
	.byte	3,1,1,9
	.half	.L770-.L769
	.byte	3,116,1,7,9
	.half	.L223-.L770
	.byte	0,1,1
.L766:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_4')
	.sect	'.debug_ranges'
.L222:
	.word	-1,.L93,0,.L223-.L93,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L98:
	.word	-1,.L99,0,.L208-.L99
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_2')
	.sect	'.debug_loc'
.L96:
	.word	-1,.L97,0,.L213-.L97
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_3')
	.sect	'.debug_loc'
.L94:
	.word	-1,.L95,0,.L218-.L95
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_4')
	.sect	'.debug_loc'
.L92:
	.word	-1,.L93,0,.L223-.L93
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_checkErrors')
	.sect	'.debug_loc'
.L80:
	.word	-1,.L81,0,.L328-.L81
	.half	2
	.byte	138,0
	.word	0,0
.L329:
	.word	-1,.L81,0,.L328-.L81
	.half	1
	.byte	100
	.word	0,0
.L330:
	.word	-1,.L81,.L367-.L81,.L328-.L81
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_clearErrorFlags')
	.sect	'.debug_loc'
.L82:
	.word	-1,.L83,0,.L331-.L83
	.half	2
	.byte	138,0
	.word	0,0
.L332:
	.word	-1,.L83,0,.L331-.L83
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_delay')
	.sect	'.debug_loc'
.L84:
	.word	-1,.L85,0,.L333-.L85
	.half	2
	.byte	138,0
	.word	0,0
.L334:
	.word	-1,.L85,0,.L333-.L85
	.half	1
	.byte	100
	.word	0,0
.L335:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_initChannel')
	.sect	'.debug_loc'
.L86:
	.word	-1,.L87,0,.L281-.L87
	.half	2
	.byte	138,0
	.word	0,0
.L283:
	.word	-1,.L87,0,.L281-.L87
	.half	1
	.byte	100
	.word	0,0
.L285:
	.word	-1,.L87,0,.L281-.L87
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_initChannelConfig')
	.sect	'.debug_loc'
.L88:
	.word	-1,.L89,0,.L286-.L89
	.half	2
	.byte	138,0
	.word	0,0
.L288:
	.word	-1,.L89,0,.L286-.L89
	.half	1
	.byte	100
	.word	0,0
.L290:
	.word	-1,.L89,0,.L286-.L89
	.half	1
	.byte	102
	.word	0,0
.L289:
	.word	-1,.L89,0,.L286-.L89
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_initHsctModule')
	.sect	'.debug_loc'
.L90:
	.word	-1,.L91,0,.L224-.L91
	.half	2
	.byte	138,0
	.word	0,0
.L228:
	.word	-1,.L91,0,.L244-.L91
	.half	1
	.byte	101
	.word	.L93-.L91,.L223-.L91
	.half	1
	.byte	111
	.word	.L375-.L91,.L208-.L91
	.half	1
	.byte	111
	.word	.L376-.L91,.L377-.L91
	.half	1
	.byte	111
	.word	.L97-.L91,.L379-.L91
	.half	1
	.byte	111
	.word	.L95-.L91,.L380-.L91
	.half	1
	.byte	111
	.word	.L97-.L91,.L213-.L91
	.half	1
	.byte	111
	.word	.L381-.L91,.L382-.L91
	.half	1
	.byte	111
	.word	.L95-.L91,.L218-.L91
	.half	1
	.byte	111
	.word	.L383-.L91,.L224-.L91
	.half	1
	.byte	111
	.word	0,0
.L226:
	.word	-1,.L91,0,.L368-.L91
	.half	1
	.byte	100
	.word	0,0
.L231:
	.word	-1,.L91,.L373-.L91,.L374-.L91
	.half	1
	.byte	100
	.word	.L93-.L91,.L223-.L91
	.half	1
	.byte	109
	.word	.L375-.L91,.L208-.L91
	.half	1
	.byte	109
	.word	.L378-.L91,.L377-.L91
	.half	1
	.byte	109
	.word	.L97-.L91,.L379-.L91
	.half	1
	.byte	109
	.word	.L95-.L91,.L380-.L91
	.half	1
	.byte	109
	.word	.L97-.L91,.L213-.L91
	.half	1
	.byte	109
	.word	.L381-.L91,.L382-.L91
	.half	1
	.byte	109
	.word	.L95-.L91,.L218-.L91
	.half	1
	.byte	109
	.word	.L383-.L91,.L224-.L91
	.half	1
	.byte	109
	.word	0,0
.L255:
	.word	0,0
.L240:
	.word	0,0
.L253:
	.word	0,0
.L238:
	.word	0,0
.L251:
	.word	0,0
.L236:
	.word	0,0
.L249:
	.word	0,0
.L265:
	.word	-1,.L91,.L369-.L91,.L370-.L91
	.half	1
	.byte	82
	.word	.L371-.L91,.L14-.L91
	.half	1
	.byte	88
	.word	.L372-.L91,.L14-.L91
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_initHsctModuleConfig')
	.sect	'.debug_loc'
.L100:
	.word	-1,.L101,0,.L266-.L101
	.half	2
	.byte	138,0
	.word	0,0
.L268:
	.word	-1,.L101,0,.L266-.L101
	.half	1
	.byte	100
	.word	0,0
.L269:
	.word	-1,.L101,0,.L266-.L101
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_initHsslModule')
	.sect	'.debug_loc'
.L102:
	.word	-1,.L103,0,.L270-.L103
	.half	2
	.byte	138,0
	.word	0,0
.L274:
	.word	-1,.L103,0,.L384-.L103
	.half	1
	.byte	101
	.word	.L386-.L103,.L270-.L103
	.half	1
	.byte	111
	.word	0,0
.L272:
	.word	-1,.L103,0,.L385-.L103
	.half	1
	.byte	100
	.word	0,0
.L276:
	.word	-1,.L103,.L387-.L103,.L270-.L103
	.half	1
	.byte	108
	.word	.L385-.L103,.L384-.L103
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_initHsslModuleConfig')
	.sect	'.debug_loc'
.L104:
	.word	-1,.L105,0,.L277-.L105
	.half	2
	.byte	138,0
	.word	0,0
.L279:
	.word	-1,.L105,0,.L277-.L105
	.half	1
	.byte	100
	.word	0,0
.L280:
	.word	-1,.L105,0,.L277-.L105
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_prepareStream')
	.sect	'.debug_loc'
.L106:
	.word	-1,.L107,0,.L336-.L107
	.half	2
	.byte	138,0
	.word	0,0
.L337:
	.word	-1,.L107,0,.L388-.L107
	.half	1
	.byte	100
	.word	.L390-.L107,.L336-.L107
	.half	1
	.byte	111
	.word	.L393-.L107,.L394-.L107
	.half	1
	.byte	100
	.word	.L395-.L107,.L396-.L107
	.half	1
	.byte	100
	.word	.L397-.L107,.L398-.L107
	.half	1
	.byte	100
	.word	.L399-.L107,.L400-.L107
	.half	1
	.byte	100
	.word	.L401-.L107,.L402-.L107
	.half	1
	.byte	100
	.word	.L406-.L107,.L403-.L107
	.half	1
	.byte	100
	.word	.L407-.L107,.L408-.L107
	.half	1
	.byte	100
	.word	.L409-.L107,.L410-.L107
	.half	1
	.byte	100
	.word	.L411-.L107,.L412-.L107
	.half	1
	.byte	100
	.word	.L413-.L107,.L414-.L107
	.half	1
	.byte	100
	.word	.L415-.L107,.L416-.L107
	.half	1
	.byte	100
	.word	.L419-.L107,.L418-.L107
	.half	1
	.byte	100
	.word	.L420-.L107,.L421-.L107
	.half	1
	.byte	100
	.word	.L422-.L107,.L423-.L107
	.half	1
	.byte	100
	.word	.L424-.L107,.L425-.L107
	.half	1
	.byte	100
	.word	.L426-.L107,.L427-.L107
	.half	1
	.byte	100
	.word	.L428-.L107,.L429-.L107
	.half	1
	.byte	100
	.word	.L430-.L107,.L431-.L107
	.half	1
	.byte	100
	.word	.L432-.L107,.L433-.L107
	.half	1
	.byte	100
	.word	.L434-.L107,.L435-.L107
	.half	1
	.byte	100
	.word	.L436-.L107,.L437-.L107
	.half	1
	.byte	100
	.word	.L438-.L107,.L439-.L107
	.half	1
	.byte	100
	.word	.L440-.L107,.L441-.L107
	.half	1
	.byte	100
	.word	0,0
.L347:
	.word	0,0
.L340:
	.word	-1,.L107,0,.L388-.L107
	.half	1
	.byte	85
	.word	.L392-.L107,.L336-.L107
	.half	1
	.byte	88
	.word	.L350-.L107,.L403-.L107
	.half	1
	.byte	86
	.word	.L417-.L107,.L418-.L107
	.half	1
	.byte	86
	.word	0,0
.L338:
	.word	-1,.L107,0,.L389-.L107
	.half	1
	.byte	84
	.word	.L391-.L107,.L388-.L107
	.half	1
	.byte	86
	.word	0,0
.L342:
	.word	-1,.L107,.L404-.L107,.L405-.L107
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_read')
	.sect	'.debug_loc'
.L108:
	.word	-1,.L109,0,.L292-.L109
	.half	2
	.byte	138,0
	.word	0,0
.L295:
	.word	-1,.L109,0,.L442-.L109
	.half	1
	.byte	84
	.word	.L444-.L109,.L292-.L109
	.half	1
	.byte	95
	.word	.L443-.L109,.L292-.L109
	.half	1
	.byte	85
	.word	0,0
.L293:
	.word	-1,.L109,0,.L292-.L109
	.half	1
	.byte	100
	.word	0,0
.L297:
	.word	-1,.L109,0,.L443-.L109
	.half	1
	.byte	85
	.word	.L445-.L109,.L292-.L109
	.half	1
	.byte	87
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_sendControlCommand')
	.sect	'.debug_loc'
.L110:
	.word	-1,.L111,0,.L298-.L111
	.half	2
	.byte	138,0
	.word	0,0
.L301:
	.word	-1,.L111,0,.L298-.L111
	.half	1
	.byte	84
	.word	0,0
.L299:
	.word	-1,.L111,0,.L298-.L111
	.half	1
	.byte	100
	.word	0,0
.L302:
	.word	-1,.L111,.L446-.L111,.L298-.L111
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_singleFrameRequest')
	.sect	'.debug_loc'
.L112:
	.word	-1,.L113,0,.L303-.L113
	.half	2
	.byte	138,0
	.word	0,0
.L307:
	.word	-1,.L113,0,.L303-.L113
	.half	1
	.byte	85
	.word	0,0
.L304:
	.word	-1,.L113,0,.L303-.L113
	.half	1
	.byte	100
	.word	0,0
.L308:
	.word	-1,.L113,0,.L303-.L113
	.half	1
	.byte	86
	.word	0,0
.L309:
	.word	-1,.L113,0,.L303-.L113
	.half	1
	.byte	87
	.word	0,0
.L306:
	.word	-1,.L113,0,.L303-.L113
	.half	1
	.byte	84
	.word	0,0
.L311:
	.word	-1,.L113,.L447-.L113,.L303-.L113
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_waitAcknowledge')
	.sect	'.debug_loc'
.L114:
	.word	-1,.L115,0,.L312-.L115
	.half	2
	.byte	138,0
	.word	0,0
.L321:
	.word	-1,.L115,.L452-.L115,.L66-.L115
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L313:
	.word	-1,.L115,0,.L312-.L115
	.half	1
	.byte	100
	.word	0,0
.L322:
	.word	-1,.L115,.L453-.L115,.L66-.L115
	.half	1
	.byte	82
	.word	0,0
.L320:
	.word	-1,.L115,.L317-.L115,.L451-.L115
	.half	1
	.byte	85
	.word	0,0
.L319:
	.word	-1,.L115,.L316-.L115,.L450-.L115
	.half	1
	.byte	81
	.word	0,0
.L314:
	.word	-1,.L115,.L448-.L115,.L449-.L115
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_write')
	.sect	'.debug_loc'
.L116:
	.word	-1,.L117,0,.L323-.L117
	.half	2
	.byte	138,0
	.word	0,0
.L325:
	.word	-1,.L117,0,.L454-.L117
	.half	1
	.byte	84
	.word	.L457-.L117,.L323-.L117
	.half	1
	.byte	95
	.word	.L455-.L117,.L323-.L117
	.half	1
	.byte	85
	.word	0,0
.L324:
	.word	-1,.L117,0,.L323-.L117
	.half	1
	.byte	100
	.word	0,0
.L326:
	.word	-1,.L117,0,.L455-.L117
	.half	1
	.byte	85
	.word	.L458-.L117,.L323-.L117
	.half	5
	.byte	144,32,157,32,0
	.word	.L456-.L117,.L323-.L117
	.half	1
	.byte	86
	.word	0,0
.L327:
	.word	-1,.L117,0,.L456-.L117
	.half	1
	.byte	86
	.word	.L459-.L117,.L323-.L117
	.half	1
	.byte	87
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxHssl_Hssl_writeStream')
	.sect	'.debug_loc'
.L118:
	.word	-1,.L119,0,.L359-.L119
	.half	2
	.byte	138,0
	.word	0,0
.L363:
	.word	-1,.L119,0,.L359-.L119
	.half	1
	.byte	84
	.word	0,0
.L362:
	.word	-1,.L119,0,.L359-.L119
	.half	1
	.byte	101
	.word	.L461-.L119,.L462-.L119
	.half	1
	.byte	95
	.word	0,0
.L360:
	.word	-1,.L119,0,.L359-.L119
	.half	1
	.byte	100
	.word	0,0
.L366:
	.word	0,0
.L364:
	.word	-1,.L119,.L460-.L119,.L359-.L119
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L771:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_checkErrors')
	.sect	'.debug_frame'
	.word	24
	.word	.L771,.L81,.L328-.L81
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_clearErrorFlags')
	.sect	'.debug_frame'
	.word	24
	.word	.L771,.L83,.L331-.L83
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_delay')
	.sect	'.debug_frame'
	.word	24
	.word	.L771,.L85,.L333-.L85
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_initChannel')
	.sect	'.debug_frame'
	.word	20
	.word	.L771,.L87,.L281-.L87
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_initChannelConfig')
	.sect	'.debug_frame'
	.word	20
	.word	.L771,.L89,.L286-.L89
	.byte	8,18,8,19,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_initHsctModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L771,.L91,.L224-.L91
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_initHsctModuleConfig')
	.sect	'.debug_frame'
	.word	20
	.word	.L771,.L101,.L266-.L101
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_initHsslModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L771,.L103,.L270-.L103
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_initHsslModuleConfig')
	.sect	'.debug_frame'
	.word	20
	.word	.L771,.L105,.L277-.L105
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_prepareStream')
	.sect	'.debug_frame'
	.word	12
	.word	.L771,.L107,.L336-.L107
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_read')
	.sect	'.debug_frame'
	.word	12
	.word	.L771,.L109,.L292-.L109
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_sendControlCommand')
	.sect	'.debug_frame'
	.word	12
	.word	.L771,.L111,.L298-.L111
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_singleFrameRequest')
	.sect	'.debug_frame'
	.word	24
	.word	.L771,.L113,.L303-.L113
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_waitAcknowledge')
	.sect	'.debug_frame'
	.word	24
	.word	.L771,.L115,.L312-.L115
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_write')
	.sect	'.debug_frame'
	.word	12
	.word	.L771,.L117,.L323-.L117
	.sdecl	'.debug_frame',debug,cluster('IfxHssl_Hssl_writeStream')
	.sect	'.debug_frame'
	.word	20
	.word	.L771,.L119,.L359-.L119
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L772:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_4')
	.sect	'.debug_frame'
	.word	24
	.word	.L772,.L93,.L223-.L93
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_3')
	.sect	'.debug_frame'
	.word	24
	.word	.L772,.L95,.L218-.L95
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_2')
	.sect	'.debug_frame'
	.word	24
	.word	.L772,.L97,.L213-.L97
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L772,.L99,.L208-.L99
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
