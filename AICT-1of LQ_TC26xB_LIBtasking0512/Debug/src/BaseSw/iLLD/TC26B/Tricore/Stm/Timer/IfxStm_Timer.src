	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99293038"
	.compiler_invocation	"ctc --dep-file=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\.IfxStm_Timer.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc26x -D__CPU_TC26X__ --core=tc1.6.x --iso=99 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\User -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Driver -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -g2 --make-target=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.src ..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c"
	.compiler_name		"ctc"
	;source	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c'

	
$TC16X
	
	.sdecl	'.text.IfxStm_Timer.IfxStm_Timer_acknowledgeTimerIrq',code,cluster('IfxStm_Timer_acknowledgeTimerIrq')
	.sect	'.text.IfxStm_Timer.IfxStm_Timer_acknowledgeTimerIrq'
	.align	2
	
	.global	IfxStm_Timer_acknowledgeTimerIrq

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	     2   * \file IfxStm_Timer.c
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	     3   * \brief STM TIMER details
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	     4   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	     5   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	     7   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	     9   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    10   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    16  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    19  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    25   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    26  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    32   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    33  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    41  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    42   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    43   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    44  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    45  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    46  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    47  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    48  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    49  #include "IfxStm_Timer.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    50  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    51  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    52  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    53  /*-------------------------Function Implementations---------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    54  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    55  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    56  boolean IfxStm_Timer_acknowledgeTimerIrq(IfxStm_Timer *driver)
; Function IfxStm_Timer_acknowledgeTimerIrq
.L19:
IfxStm_Timer_acknowledgeTimerIrq:	.type	func
	mov.aa	a15,a4
.L254:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    57  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    58      boolean event;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    59      event = IfxStm_isCompareFlagSet(driver->stm, driver->comparator);
	ld.a	a4,[a15]12
.L253:
	ld.bu	d4,[a15]16
	call	IfxStm_isCompareFlagSet
.L256:
	mov	d8,d2
.L258:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    60  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    61      if (event)
	jeq	d8,#0,.L2
.L285:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    62      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    63          IfxStm_clearCompareFlag(driver->stm, driver->comparator);
	ld.a	a4,[a15]12
.L286:
	ld.bu	d4,[a15]16
	call	IfxStm_clearCompareFlag
.L257:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    64  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    65          if (!driver->base.singleShot)
	ld.bu	d15,[a15]11
.L133:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    66          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    67              driver->comparatorValue += driver->base.period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    68              IfxStm_updateCompare(driver->stm, driver->comparator, driver->comparatorValue);
	ld.bu	d4,[a15]16
.L287:
	ld.a	a4,[a15]12
.L134:
	jne	d15,#0,.L3
.L288:
	ld.w	d0,[a15]18
.L289:
	ld.w	d15,[a15]
.L290:
	add	d0,d15
	st.w	[a15]18,d0
.L143:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    44   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    45   * \ingroup IfxLld_Stm
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    46   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    47   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    48   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    49   * In the following sections it will be described, how to integrate the driver into the application framework.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    51   * \section IfxLld_Stm_Preparation Preparation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    52   * \subsection IfxLld_Stm_Include Include Files
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    53   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    54   * Include following header file into your C code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    55   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    56   * #include <Stm/Std/IfxStm.h>
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    57   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    58   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    59   * \subsection IfxLld_Stm_Variables Variables
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    60   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    61   * Declare STM variables :
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    62   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    63   * Ifx_STM *stmSfr;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    64   * IfxStm_CompareConfig stmConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    65   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    66   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    67   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    68   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    69   * See also \ref IfxLld_Cpu_Irq_Usage
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    70   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    71   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    72   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    73   * // priorities are normally defined in Ifx_IntPrioDef.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    74   * #define IFX_INTPRIO_STM0_SR0  10
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    75   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    76   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    77   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    78   * please take care in choosing number of ticks, the below example code will raise an interrupt
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    79   * evry time the specified number of ticks have been elapsed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    80   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    81   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    82   * {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    83   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    84   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    85   * }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    86   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    87   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    88   * Finally install the interrupt handlers in your initialisation function:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    89   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    90   *     // install interrupt handlers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    91   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    92   *     IfxCpu_enableInterrupts();
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    93   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    94   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    95   * \subsection IfxLld_Stm_Init Module Initialisation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    96   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    97   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    99   * The module initialisation can be done as followed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   100   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   101   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   102   *     stmSfr = &MODULE_STM0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   103   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   104   *     IfxStm_initCompareConfig(&stmConfig);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   105   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   106   *     // configure to generate interrupt every 10 us
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   107   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   108   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   109   *     stmConfig.ticks = ticks;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   110   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   111   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   112   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   113   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   114   *     IfxStm_initCompare(stmSfr, &stmConfig);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   115   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   116   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   117   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   118   * Now the Stm shall generate interrupts regularly based on the configured time !
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   119   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   120   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   121   * \ingroup IfxLld_Stm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   122   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   123   * \ingroup IfxLld_Stm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   124   * \defgroup IfxLld_Stm_Std_Module Module Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   125   * \ingroup IfxLld_Stm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   126   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   127   * \ingroup IfxLld_Stm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   128   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   129   * \ingroup IfxLld_Stm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   130   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   131  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   132  #ifndef IFXSTM_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   133  #define IFXSTM_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   134  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   135  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   136  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   137  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   138  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   139  #include "_Impl/IfxStm_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   140  #include "Scu/Std/IfxScuCcu.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   141  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   142  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   143  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   144  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   145  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   146  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   147  /** \addtogroup IfxLld_Stm_Std_Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   148   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   149  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   150   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   151  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   152  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   153      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   154      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   155  } IfxStm_Comparator;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   157  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   158   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   159  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   160  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   163  } IfxStm_ComparatorInterrupt;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   164  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   165  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   166   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   167  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   168  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   181      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   182      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   183      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   184      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   185      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   186      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   201  } IfxStm_ComparatorOffset;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   202  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   203  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   204   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   205  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   206  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   219      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   220      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   221      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   222      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   223      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   224      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   225      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   228      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   229      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   230      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   231      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   232      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   233      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   234      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   235      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   236      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   237      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   238      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   239  } IfxStm_ComparatorSize;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   240  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   242   * Definition in Ifx_STM.CLC.B.EDIS
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   243   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   244  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   245  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   246      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   247      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   248  } IfxStm_SleepMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   249  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   251   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   252  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   253  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   254      IfxStm_SuspendMode_none = 0,  /**< \brief No suspend */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   255      IfxStm_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   256      IfxStm_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   257  } IfxStm_SuspendMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   258  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   259  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   261  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   262  /*-----------------------------Data Structures--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   263  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   264  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   265  /** \addtogroup IfxLld_Stm_Std_Structures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   266   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   267  /** \brief Comparator Configuration Structure
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   268   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   269  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   270  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   271      IfxStm_Comparator          comparator;                /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   272      IfxStm_ComparatorInterrupt comparatorInterrupt;       /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   273      IfxStm_ComparatorOffset    compareOffset;             /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   274      IfxStm_ComparatorSize      compareSize;               /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   275      uint32                     ticks;                     /**< \brief count for next comparison from current timer count. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   276      Ifx_Priority               triggerPriority;           /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   277      IfxSrc_Tos                 typeOfService;             /**< \brief Type of service. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   278  } IfxStm_CompareConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   279  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   280  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   281  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   282  /** \addtogroup IfxLld_Stm_Std_Module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   283   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   284  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   285  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   286  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   287  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   288  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   289  /** \brief Returns system timer value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   290   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   291   * \return system timer value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   292   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   293  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   294  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   295  /** \brief Returns the system timer frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   296   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   297   * \return the system timer frequency in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   298   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   299  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   300  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   301  /** \brief Returns the module's suspend state.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   302   * TRUE :if module is suspended.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   303   * FALSE:if module is not yet suspended.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   304   * \param stm Pointer to STM module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   305   * \return Suspend status (TRUE / FALSE)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   306   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   307  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   308  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   309  /** \brief Configure the Module to Hard/Soft suspend mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   310   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   311   * \param stm Pointer to STM module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   312   * \param mode Module suspend mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   313   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   314   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   315  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   316  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   317  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   318  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   319  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   320  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   321  /** \brief Disables the Stm module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   322   * \param stm pointer to STM registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   323   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   324   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   325  IFX_EXTERN void IfxStm_disableModule(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   326  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   327  /** \brief enable suspend by debugger.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   329   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   330   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   331  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   333  /** \brief Returns the module index of the selected STM module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   334   * \param stm Pointer to STM module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   335   * \return STM module register address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   337  IFX_EXTERN Ifx_STM *IfxStm_getAddress(IfxStm_Index stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   338  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   339  /** \brief API to get the resource index of the STM specified.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   341   * \return system timer module index.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   342   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   343  IFX_EXTERN IfxStm_Index IfxStm_getIndex(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   344  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   345  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   346  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   347  /** \addtogroup IfxLld_Stm_Std_Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   348   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   349  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   350  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   351  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   352  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   353  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   354  /** \brief Returns the lower system timer value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   355   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   356   * \return the lower system timer value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   357   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   358  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   360  /** \brief Gets the TIM3 couter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   361   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   362   * \return TIM3 counter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   364  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   365  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   366  /** \brief Gets the TIM4 couter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   367   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   368   * \return TIM4 counter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   369   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   370  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   371  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   372  /** \brief Gets the TIM5 couter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   373   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   374   * \return TIM5 counter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   375   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   376  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   378  /** \brief Gets the TIM6 couter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   379   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   380   * \return TIM6 counter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   382  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   383  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   384  /** \brief Gets the TIM1 couter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   386   * \return TIM1 counter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   387   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   388  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   389  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   390  /** \brief Gets the TIM2 couter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   391   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   392   * \return TIM2 counter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   393   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   394  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   396  /** \brief Returns the timer value shifted right by offset.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   397   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   398   * \param offset offset value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   399   * \return the lower system timer value shifted by offset.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   400   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   401  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   402  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   403  /** \brief Wait for requested time.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   404   * The macro waits in while loop for the specified time in system timer ticks.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   406   * \param ticks ticks Wait time in system timer ticks.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   407   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   409  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   410  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   411  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   412  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   413  /** \addtogroup IfxLld_Stm_Std_Comparator
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   414   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   415  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   416  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   417  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   418  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   419  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   420  /** \brief Returns the updated compare register value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   421   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   422   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   423   * \return The compare value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   424   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   425  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   426  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   427  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   428   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   429   * \param microSeconds Number of micro seconds that need to be converted to ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   430   * \return ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   431   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   432  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   433  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   434  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   435   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   436   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   437   * \return ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   438   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   439  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   440  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   441  /** \brief Update the compare register value increased with given ticks.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   442   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   443   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   444   * \param ticks count for next comparison from current timer count.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   445   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   446   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   447  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   448  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   449  /** \brief Update the compare register value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   450   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   451   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   452   * \param ticks count for next comparison.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   453   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   454   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   455  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   456  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   457  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   458  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   459  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   460  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   461  /** \brief Clear the compare interrupt flag.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   462   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   463   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   464   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   465   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   466  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   467  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   468  /** \brief Disables the compare interrupt
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   469   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   470   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   471   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   472   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   473  IFX_EXTERN void IfxStm_disableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   474  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   475  /** \brief Enables the compare interrupt .
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   476   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   477   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   478   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   479   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   480  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   481  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   482  /** \brief get the interrupt source pointer for the comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   483   * \param stm pointer to the STM registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   484   * \param comparator comparator selection comparator
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   485   * \return pointer to the interrupt source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   486   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   487  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxStm_getSrcPointer(Ifx_STM *stm, IfxStm_Comparator comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   488  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   489  /** \brief Initialise stm compare register.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   490   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   491   * \param config pointer to configuration structure.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   492   * \return TRUE if Comparator successful otherwise FLASE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   493   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   494  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   495  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   496  /** \brief Initialise compare configuration with default values.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   497   * \param config pointer to configuration structure.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   498   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   499   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   500  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   501  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   502  /** \brief Indicates if the compare interrupt flag is set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   503   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   504   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   505   * \return TRUE if the comparator flag is set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   506   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   507  IFX_EXTERN boolean IfxStm_isCompareFlagSet(Ifx_STM *stm, IfxStm_Comparator comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   508  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   509  /** \brief Set the compare behavior
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   510   * \param stm pointer to System timer module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   511   * \param comparator comparator selection comparator
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   512   * \param offset Comparator start bit position
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   513   * \param size Size of compare value to compare with timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   514   * \param interrupt Comparator Interrupt request source defined
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   515   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   516   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   517  IFX_EXTERN void IfxStm_setCompareControl(Ifx_STM *stm, IfxStm_Comparator comparator, IfxStm_ComparatorOffset offset, IfxStm_ComparatorSize size, IfxStm_ComparatorInterrupt interrupt);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   518  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   519  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   520  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   521  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   522  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   523  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   524  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   525  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   526   * \param stm pointer STM registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   527   * \param mode mode selection (enable/ disable)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   528   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   529   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   530  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   531  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   532  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   533  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   534  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   535  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   536  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   537   * \param stm pointer to STM registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   538   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   539   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   540  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   541  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   542  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   543  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   544  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   545  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   546  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   547  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   548      uint64 result;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   549  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   550      result  = stm->TIM0.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   551      result |= ((uint64)stm->CAP.U) << 32;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   552  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   553      return result;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   554  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   555  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   556  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   557  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   558  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   559      return stm->CMP[comparator].B.CMPVAL;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   560  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   561  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   562  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   563  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   564  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   565      IFX_UNUSED_PARAMETER(stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   566      float32 result;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   567  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   568      result = IfxScuCcu_getStmFrequency();
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   569  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   570      return result;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   571  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   572  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   573  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   574  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   575  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   576      return stm->TIM0.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   577  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   578  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   579  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   580  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   581  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   582      return stm->TIM3.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   583  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   584  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   585  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   586  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   587  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   588      return stm->TIM4.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   589  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   590  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   591  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   592  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   593  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   594      return stm->TIM5.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   595  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   596  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   597  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   598  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   599  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   600      return stm->TIM6.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   601  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   602  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   603  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   604  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   605  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   606      return stm->TIM1.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   607  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   608  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   609  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   610  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   611  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   612      return stm->TIM2.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   613  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   614  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   615  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   616  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   617  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   618      uint64 now;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   619  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   620      now = IfxStm_get(stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   621  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   622      return (uint32)(now >> offset);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   623  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   624  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   625  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   626  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   627  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   628      sint32 freq = (sint32)IfxStm_getFrequency(stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   629      return (freq / (1000000)) * microSeconds;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   630  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   631  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   632  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   633  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   634  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   635      sint32 freq = (sint32)IfxStm_getFrequency(stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   636      return (freq / (1000)) * milliSeconds;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   637  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   638  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   639  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   640  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   641  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   642      stm->CMP[comparator].B.CMPVAL = stm->CMP[comparator].B.CMPVAL + ticks;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   643  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   644  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   645  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   646  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   647  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   648      Ifx_STM_OCS ocs;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   649  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   650      // read the status
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   651      ocs.U = stm->OCS.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   652  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   653      // return the status
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   654      return ocs.B.SUSSTA;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   655  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   656  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   657  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   658  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   659  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   660      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   661      IfxScuWdt_clearCpuEndinit(passwd);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   662      stm->CLC.B.EDIS = mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   663      IfxScuWdt_setCpuEndinit(passwd);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   664  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   665  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   666  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   667  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   668  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   669      Ifx_STM_OCS ocs;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   670  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   671      // remove protection and configure the suspend mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   672      ocs.B.SUS_P = 1;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   673      ocs.B.SUS   = mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   674      stm->OCS.U  = ocs.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   675  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   676  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   677  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   678  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   679  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   680      stm->CMP[comparator].B.CMPVAL = ticks;
	addsc.a	a15,a4,d4,#2
.L255:
	st.w	[a15]48,d0
.L144:
	j	.L4
.L3:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    69  rInterrupt(driver->stm, driver->comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    70          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    71      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    72      else
	call	IfxStm_disableComparatorInterrupt
.L4:
.L2:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    73      {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    74  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    75      return event;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    76  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    77  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    78  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    79  float32 IfxStm_Timer_getFrequency(IfxStm_Timer *driver)
	mov	d2,d8
	ret
.L128:
	
__IfxStm_Timer_acknowledgeTimerIrq_function_end:
	.size	IfxStm_Timer_acknowledgeTimerIrq,__IfxStm_Timer_acknowledgeTimerIrq_function_end-IfxStm_Timer_acknowledgeTimerIrq
.L56:
	; End of function
	
	.sdecl	'.text.IfxStm_Timer.IfxStm_Timer_getFrequency',code,cluster('IfxStm_Timer_getFrequency')
	.sect	'.text.IfxStm_Timer.IfxStm_Timer_getFrequency'
	.align	2
	
	.global	IfxStm_Timer_getFrequency

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    80  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    81      return 1.0 / IfxStdIf_Timer_tickToS(driver->base.clockFreq, driver->base.period);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    82  }
; Function IfxStm_Timer_getFrequency
.L21:
IfxStm_Timer_getFrequency:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    83  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    84  
	ld.w	d0,[a4]
.L295:
	ld.w	d1,[a4]6
.L296:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
	utof	d0,d0
.L297:
	movh	d15,#16256
.L298:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
	div.f	d0,d0,d1
.L299:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    85  imer_getInputFrequency(IfxStm_Timer *driver)
	div.f	d2,d15,d0
	ret
.L146:
	
__IfxStm_Timer_getFrequency_function_end:
	.size	IfxStm_Timer_getFrequency,__IfxStm_Timer_getFrequency_function_end-IfxStm_Timer_getFrequency
.L61:
	; End of function
	
	.sdecl	'.text.IfxStm_Timer.IfxStm_Timer_getInputFrequency',code,cluster('IfxStm_Timer_getInputFrequency')
	.sect	'.text.IfxStm_Timer.IfxStm_Timer_getInputFrequency'
	.align	2
	
	.global	IfxStm_Timer_getInputFrequency

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    86  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    87      return driver->base.clockFreq;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    88  }
; Function IfxStm_Timer_getInputFrequency
.L23:
IfxStm_Timer_getInputFrequency:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    89  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    90  
	ld.w	d2,[a4]6
.L304:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    91  Ifx_TimerValue IfxStm_Timer_getPeriod(IfxStm_Timer *driver)
	ret
.L148:
	
__IfxStm_Timer_getInputFrequency_function_end:
	.size	IfxStm_Timer_getInputFrequency,__IfxStm_Timer_getInputFrequency_function_end-IfxStm_Timer_getInputFrequency
.L66:
	; End of function
	
	.sdecl	'.text.IfxStm_Timer.IfxStm_Timer_getPeriod',code,cluster('IfxStm_Timer_getPeriod')
	.sect	'.text.IfxStm_Timer.IfxStm_Timer_getPeriod'
	.align	2
	
	.global	IfxStm_Timer_getPeriod

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    92  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    93      return driver->base.period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    94  }
; Function IfxStm_Timer_getPeriod
.L25:
IfxStm_Timer_getPeriod:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    95  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    96  
	ld.w	d2,[a4]
.L309:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    97  float32 IfxStm_Timer_getResolution(IfxStm_Timer *driver)
	ret
.L151:
	
__IfxStm_Timer_getPeriod_function_end:
	.size	IfxStm_Timer_getPeriod,__IfxStm_Timer_getPeriod_function_end-IfxStm_Timer_getPeriod
.L71:
	; End of function
	
	.sdecl	'.text.IfxStm_Timer.IfxStm_Timer_getResolution',code,cluster('IfxStm_Timer_getResolution')
	.sect	'.text.IfxStm_Timer.IfxStm_Timer_getResolution'
	.align	2
	
	.global	IfxStm_Timer_getResolution

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    98  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	    99      return 1.0 / driver->base.clockFreq;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   100  }
; Function IfxStm_Timer_getResolution
.L27:
IfxStm_Timer_getResolution:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   101  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   102  
	movh	d15,#16256
	ld.w	d0,[a4]6
.L314:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   103  void IfxStm_Timer_run(IfxStm_Timer *driver)
	div.f	d2,d15,d0
	ret
.L153:
	
__IfxStm_Timer_getResolution_function_end:
	.size	IfxStm_Timer_getResolution,__IfxStm_Timer_getResolution_function_end-IfxStm_Timer_getResolution
.L76:
	; End of function
	
	.sdecl	'.text.IfxStm_Timer.IfxStm_Timer_run',code,cluster('IfxStm_Timer_run')
	.sect	'.text.IfxStm_Timer.IfxStm_Timer_run'
	.align	2
	
	.global	IfxStm_Timer_run

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   104  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   105      boolean interruptState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   106      uint64  timer;
; Function IfxStm_Timer_run
.L29:
IfxStm_Timer_run:	.type	func
	mov.aa	a12,a4
.L158:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
	mfcr	d15,#65068
.L260:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
	extr.u	d15,d15,#15,#1
.L261:
	ne	d15,d15,#0
.L162:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
	disable
.L319:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
	nop
.L159:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   107  IfxCpu_disableInterrupts();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   108      timer          = IfxStm_get(driver->stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   109      IfxCpu_restoreInterrupts(interruptState);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   110  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   111      driver->comparatorValue = (Ifx_TimerValue)(timer >> driver->comparatorShift) + driver->base.period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   112  
	ld.a	a15,[a12]12
.L167:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    44   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    45   * \ingroup IfxLld_Stm
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    46   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    47   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    48   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    49   * In the following sections it will be described, how to integrate the driver into the application framework.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    51   * \section IfxLld_Stm_Preparation Preparation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    52   * \subsection IfxLld_Stm_Include Include Files
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    53   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    54   * Include following header file into your C code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    55   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    56   * #include <Stm/Std/IfxStm.h>
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    57   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    58   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    59   * \subsection IfxLld_Stm_Variables Variables
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    60   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    61   * Declare STM variables :
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    62   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    63   * Ifx_STM *stmSfr;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    64   * IfxStm_CompareConfig stmConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    65   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    66   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    67   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    68   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    69   * See also \ref IfxLld_Cpu_Irq_Usage
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    70   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    71   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    72   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    73   * // priorities are normally defined in Ifx_IntPrioDef.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    74   * #define IFX_INTPRIO_STM0_SR0  10
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    75   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    76   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    77   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    78   * please take care in choosing number of ticks, the below example code will raise an interrupt
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    79   * evry time the specified number of ticks have been elapsed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    80   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    81   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    82   * {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    83   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    84   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    85   * }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    86   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    87   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    88   * Finally install the interrupt handlers in your initialisation function:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    89   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    90   *     // install interrupt handlers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    91   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    92   *     IfxCpu_enableInterrupts();
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    93   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    94   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    95   * \subsection IfxLld_Stm_Init Module Initialisation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    96   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    97   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    99   * The module initialisation can be done as followed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   100   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   101   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   102   *     stmSfr = &MODULE_STM0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   103   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   104   *     IfxStm_initCompareConfig(&stmConfig);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   105   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   106   *     // configure to generate interrupt every 10 us
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   107   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   108   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   109   *     stmConfig.ticks = ticks;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   110   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   111   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   112   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   113   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   114   *     IfxStm_initCompare(stmSfr, &stmConfig);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   115   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   116   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   117   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   118   * Now the Stm shall generate interrupts regularly based on the configured time !
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   119   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   120   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   121   * \ingroup IfxLld_Stm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   122   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   123   * \ingroup IfxLld_Stm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   124   * \defgroup IfxLld_Stm_Std_Module Module Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   125   * \ingroup IfxLld_Stm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   126   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   127   * \ingroup IfxLld_Stm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   128   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   129   * \ingroup IfxLld_Stm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   130   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   131  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   132  #ifndef IFXSTM_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   133  #define IFXSTM_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   134  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   135  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   136  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   137  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   138  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   139  #include "_Impl/IfxStm_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   140  #include "Scu/Std/IfxScuCcu.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   141  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   142  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   143  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   144  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   145  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   146  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   147  /** \addtogroup IfxLld_Stm_Std_Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   148   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   149  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   150   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   151  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   152  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   153      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   154      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   155  } IfxStm_Comparator;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   157  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   158   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   159  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   160  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   163  } IfxStm_ComparatorInterrupt;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   164  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   165  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   166   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   167  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   168  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   181      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   182      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   183      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   184      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   185      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   186      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   201  } IfxStm_ComparatorOffset;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   202  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   203  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   204   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   205  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   206  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   219      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   220      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   221      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   222      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   223      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   224      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   225      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   228      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   229      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   230      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   231      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   232      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   233      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   234      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   235      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   236      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   237      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   238      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   239  } IfxStm_ComparatorSize;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   240  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   242   * Definition in Ifx_STM.CLC.B.EDIS
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   243   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   244  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   245  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   246      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   247      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   248  } IfxStm_SleepMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   249  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   251   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   252  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   253  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   254      IfxStm_SuspendMode_none = 0,  /**< \brief No suspend */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   255      IfxStm_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   256      IfxStm_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   257  } IfxStm_SuspendMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   258  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   259  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   261  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   262  /*-----------------------------Data Structures--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   263  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   264  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   265  /** \addtogroup IfxLld_Stm_Std_Structures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   266   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   267  /** \brief Comparator Configuration Structure
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   268   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   269  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   270  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   271      IfxStm_Comparator          comparator;                /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   272      IfxStm_ComparatorInterrupt comparatorInterrupt;       /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   273      IfxStm_ComparatorOffset    compareOffset;             /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   274      IfxStm_ComparatorSize      compareSize;               /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   275      uint32                     ticks;                     /**< \brief count for next comparison from current timer count. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   276      Ifx_Priority               triggerPriority;           /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   277      IfxSrc_Tos                 typeOfService;             /**< \brief Type of service. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   278  } IfxStm_CompareConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   279  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   280  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   281  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   282  /** \addtogroup IfxLld_Stm_Std_Module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   283   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   284  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   285  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   286  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   287  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   288  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   289  /** \brief Returns system timer value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   290   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   291   * \return system timer value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   292   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   293  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   294  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   295  /** \brief Returns the system timer frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   296   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   297   * \return the system timer frequency in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   298   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   299  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   300  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   301  /** \brief Returns the module's suspend state.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   302   * TRUE :if module is suspended.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   303   * FALSE:if module is not yet suspended.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   304   * \param stm Pointer to STM module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   305   * \return Suspend status (TRUE / FALSE)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   306   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   307  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   308  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   309  /** \brief Configure the Module to Hard/Soft suspend mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   310   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   311   * \param stm Pointer to STM module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   312   * \param mode Module suspend mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   313   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   314   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   315  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   316  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   317  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   318  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   319  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   320  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   321  /** \brief Disables the Stm module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   322   * \param stm pointer to STM registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   323   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   324   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   325  IFX_EXTERN void IfxStm_disableModule(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   326  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   327  /** \brief enable suspend by debugger.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   329   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   330   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   331  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   333  /** \brief Returns the module index of the selected STM module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   334   * \param stm Pointer to STM module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   335   * \return STM module register address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   337  IFX_EXTERN Ifx_STM *IfxStm_getAddress(IfxStm_Index stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   338  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   339  /** \brief API to get the resource index of the STM specified.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   341   * \return system timer module index.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   342   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   343  IFX_EXTERN IfxStm_Index IfxStm_getIndex(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   344  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   345  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   346  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   347  /** \addtogroup IfxLld_Stm_Std_Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   348   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   349  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   350  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   351  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   352  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   353  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   354  /** \brief Returns the lower system timer value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   355   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   356   * \return the lower system timer value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   357   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   358  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   360  /** \brief Gets the TIM3 couter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   361   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   362   * \return TIM3 counter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   364  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   365  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   366  /** \brief Gets the TIM4 couter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   367   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   368   * \return TIM4 counter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   369   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   370  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   371  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   372  /** \brief Gets the TIM5 couter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   373   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   374   * \return TIM5 counter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   375   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   376  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   378  /** \brief Gets the TIM6 couter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   379   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   380   * \return TIM6 counter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   382  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   383  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   384  /** \brief Gets the TIM1 couter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   386   * \return TIM1 counter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   387   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   388  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   389  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   390  /** \brief Gets the TIM2 couter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   391   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   392   * \return TIM2 counter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   393   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   394  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   396  /** \brief Returns the timer value shifted right by offset.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   397   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   398   * \param offset offset value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   399   * \return the lower system timer value shifted by offset.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   400   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   401  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   402  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   403  /** \brief Wait for requested time.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   404   * The macro waits in while loop for the specified time in system timer ticks.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   406   * \param ticks ticks Wait time in system timer ticks.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   407   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   409  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   410  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   411  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   412  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   413  /** \addtogroup IfxLld_Stm_Std_Comparator
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   414   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   415  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   416  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   417  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   418  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   419  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   420  /** \brief Returns the updated compare register value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   421   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   422   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   423   * \return The compare value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   424   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   425  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   426  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   427  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   428   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   429   * \param microSeconds Number of micro seconds that need to be converted to ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   430   * \return ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   431   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   432  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   433  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   434  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   435   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   436   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   437   * \return ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   438   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   439  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   440  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   441  /** \brief Update the compare register value increased with given ticks.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   442   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   443   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   444   * \param ticks count for next comparison from current timer count.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   445   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   446   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   447  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   448  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   449  /** \brief Update the compare register value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   450   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   451   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   452   * \param ticks count for next comparison.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   453   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   454   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   455  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   456  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   457  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   458  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   459  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   460  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   461  /** \brief Clear the compare interrupt flag.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   462   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   463   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   464   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   465   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   466  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   467  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   468  /** \brief Disables the compare interrupt
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   469   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   470   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   471   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   472   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   473  IFX_EXTERN void IfxStm_disableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   474  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   475  /** \brief Enables the compare interrupt .
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   476   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   477   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   478   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   479   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   480  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   481  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   482  /** \brief get the interrupt source pointer for the comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   483   * \param stm pointer to the STM registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   484   * \param comparator comparator selection comparator
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   485   * \return pointer to the interrupt source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   486   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   487  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxStm_getSrcPointer(Ifx_STM *stm, IfxStm_Comparator comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   488  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   489  /** \brief Initialise stm compare register.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   490   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   491   * \param config pointer to configuration structure.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   492   * \return TRUE if Comparator successful otherwise FLASE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   493   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   494  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   495  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   496  /** \brief Initialise compare configuration with default values.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   497   * \param config pointer to configuration structure.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   498   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   499   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   500  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   501  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   502  /** \brief Indicates if the compare interrupt flag is set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   503   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   504   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   505   * \return TRUE if the comparator flag is set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   506   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   507  IFX_EXTERN boolean IfxStm_isCompareFlagSet(Ifx_STM *stm, IfxStm_Comparator comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   508  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   509  /** \brief Set the compare behavior
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   510   * \param stm pointer to System timer module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   511   * \param comparator comparator selection comparator
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   512   * \param offset Comparator start bit position
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   513   * \param size Size of compare value to compare with timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   514   * \param interrupt Comparator Interrupt request source defined
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   515   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   516   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   517  IFX_EXTERN void IfxStm_setCompareControl(Ifx_STM *stm, IfxStm_Comparator comparator, IfxStm_ComparatorOffset offset, IfxStm_ComparatorSize size, IfxStm_ComparatorInterrupt interrupt);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   518  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   519  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   520  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   521  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   522  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   523  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   524  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   525  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   526   * \param stm pointer STM registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   527   * \param mode mode selection (enable/ disable)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   528   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   529   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   530  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   531  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   532  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   533  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   534  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   535  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   536  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   537   * \param stm pointer to STM registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   538   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   539   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   540  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   541  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   542  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   543  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   544  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   545  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   546  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   547  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   548      uint64 result;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   549  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   550      result  = stm->TIM0.U;
	ld.w	d4,[a15]16
.L320:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   551      result |= ((uint64)stm->CAP.U) << 32;
	ld.w	d5,[a15]44
.L168:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   938      if (enabled != FALSE)      (inlined)
	jeq	d15,#0,.L10
.L321:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   778  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   779  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   780  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   781  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   782  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   783      Ifx_CPU_CORE_ID reg;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   784      reg.U = __mfcr(CPU_CORE_ID);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   785      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   786  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   787  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   788  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   789  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   790  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   791      return IfxCpu_getPerformanceCounter(CPU_ICNT);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   792  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   793  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   794  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   795  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   796  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   797      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_ICNT);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   798  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   799  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   800  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   801  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   802  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   803      Ifx_CPU_CCNT ccnt;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   804  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   805      if (address == CPU_CCNT)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   806      {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   807          ccnt.U = __mfcr(CPU_CCNT);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   808      }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   809      else if (address == CPU_ICNT)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   810      {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   811          ccnt.U = __mfcr(CPU_ICNT);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   812      }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   813      else if (address == CPU_M1CNT)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   814      {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   815          ccnt.U = __mfcr(CPU_M1CNT);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   816      }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   817      else if (address == CPU_M2CNT)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   818      {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   819          ccnt.U = __mfcr(CPU_M2CNT);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   820      }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   821      else if (address == CPU_M3CNT)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   822      {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   823          ccnt.U = __mfcr(CPU_M3CNT);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   824      }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   825  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   826      return ccnt.B.CountValue;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   827  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   828  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   829  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   830  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   831  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   832      Ifx_CPU_CCNT ccnt;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   833  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   834      if (address == CPU_CCNT)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   835      {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   836          ccnt.U = __mfcr(CPU_CCNT);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   837      }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   838      else if (address == CPU_ICNT)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   839      {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   840          ccnt.U = __mfcr(CPU_ICNT);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   841      }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   842      else if (address == CPU_M1CNT)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   843      {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   844          ccnt.U = __mfcr(CPU_M1CNT);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   845      }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   846      else if (address == CPU_M2CNT)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   847      {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   848          ccnt.U = __mfcr(CPU_M2CNT);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   849      }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   850      else if (address == CPU_M3CNT)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   851      {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   852          ccnt.U = __mfcr(CPU_M3CNT);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   853      }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   854  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   855      return ccnt.B.SOvf;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   856  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   857  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   858  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   859  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   860  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   861      uint32  k;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   862      uint32  nxt_cxi_val = 0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   863      uint32 *prvCsa      = 0U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   864      uint32 *nxtCsa      = csaBegin;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   865      uint32  numOfCsa    = (((uint32)csaEnd - (uint32)csaBegin) / 64U);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   866  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   867      for (k = 0; k < numOfCsa; k++)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   868      {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   869          nxt_cxi_val = ((uint32)nxtCsa & (0XFU << 28)) >> 12 | ((uint32)nxtCsa & (0XFFFFU << 6)) >> 6;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   870  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   871          if (k == 0)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   872          {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   873              __mtcr(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   874          }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   875          else
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   876          {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   877              *prvCsa = nxt_cxi_val;  /* Store null pointer in last CSA (= very first time!) */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   878          }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   879  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   880          if (k == (numOfCsa - 3U))
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   881          {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   882              __mtcr(CPU_LCX, nxt_cxi_val);   /* Last but 2 context save area is pointed in LCX to know if there is CSA depletion */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   883          }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   884  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   885          prvCsa  = (uint32 *)nxtCsa;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   886          nxtCsa += 16;           /* next CSA */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   887      }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   888  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   889      *prvCsa = 0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   890  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   891  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   892  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   893  IFX_INLINE void IfxCpu_invalidateProgramCache(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   894  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   895      uint16 cpuWdtPassword = IfxScuWdt_getCpuWatchdogPassword();
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   896      {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   897          IfxScuWdt_clearCpuEndinit(cpuWdtPassword);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   898          Ifx_CPU_PCON1 pcon1;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   899          pcon1.U       = __mfcr(CPU_PCON1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   900          pcon1.B.PCINV = 1;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   901          __mtcr(CPU_PCON1, pcon1.U);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   902          IfxScuWdt_setCpuEndinit(cpuWdtPassword);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   903      }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   904  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   905  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   906  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   907  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   908  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   909      uint8 segment = (uint32)address >> 24;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   910      return ((segment == IFXCPU_CACHABLE_FLASH_SEGMENT) || (segment == IFXCPU_CACHABLE_LMU_SEGMENT)) ? TRUE : FALSE;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   911  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   912  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   913  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   914  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   915  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   916      Ifx_CPU_CCTRL cctrl;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   917      cctrl.U    = __mfcr(CPU_CCTRL);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   918      /*Disable the counters */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   919      cctrl.B.CE = 0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   920      __mtcr(CPU_CCTRL, cctrl.U);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   921  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   922      /* reset the counters */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   923      __mtcr(CPU_CCNT, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   924      __mtcr(CPU_ICNT, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   925      __mtcr(CPU_M1CNT, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   926      __mtcr(CPU_M2CNT, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   927      __mtcr(CPU_M3CNT, 0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   928  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   929      /*Enable the counters, set the counter mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   930      cctrl.B.CE = 1;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   931      cctrl.B.CM = mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   932      __mtcr(CPU_CCTRL, cctrl.U);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   933  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   934  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   935  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   936  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   937  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   938      if (enabled != FALSE)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   939      {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   940          __enable();
	enable

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   938      if (enabled != FALSE)      (inlined)
.L10:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   113  xStm_updateCompare(driver->stm, driver->comparator, driver->comparatorValue);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   114      IfxStm_enableComparatorInterrupt(driver->stm, driver->comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   115  }
	ld.bu	d6,[a12]22
.L322:
	call	__ll_ushr64
.L259:
	ld.w	d15,[a12]
.L323:
	add	d2,d15
	st.w	[a12]18,d2
.L178:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   116  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   117  
	ld.a	a15,[a12]12
.L324:
	ld.bu	d15,[a12]16
.L325:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    44   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    45   * \ingroup IfxLld_Stm
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    46   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    47   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    48   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    49   * In the following sections it will be described, how to integrate the driver into the application framework.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    51   * \section IfxLld_Stm_Preparation Preparation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    52   * \subsection IfxLld_Stm_Include Include Files
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    53   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    54   * Include following header file into your C code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    55   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    56   * #include <Stm/Std/IfxStm.h>
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    57   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    58   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    59   * \subsection IfxLld_Stm_Variables Variables
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    60   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    61   * Declare STM variables :
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    62   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    63   * Ifx_STM *stmSfr;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    64   * IfxStm_CompareConfig stmConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    65   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    66   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    67   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    68   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    69   * See also \ref IfxLld_Cpu_Irq_Usage
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    70   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    71   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    72   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    73   * // priorities are normally defined in Ifx_IntPrioDef.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    74   * #define IFX_INTPRIO_STM0_SR0  10
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    75   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    76   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    77   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    78   * please take care in choosing number of ticks, the below example code will raise an interrupt
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    79   * evry time the specified number of ticks have been elapsed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    80   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    81   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    82   * {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    83   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    84   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    85   * }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    86   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    87   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    88   * Finally install the interrupt handlers in your initialisation function:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    89   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    90   *     // install interrupt handlers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    91   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    92   *     IfxCpu_enableInterrupts();
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    93   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    94   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    95   * \subsection IfxLld_Stm_Init Module Initialisation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    96   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    97   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    99   * The module initialisation can be done as followed.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   100   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   101   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   102   *     stmSfr = &MODULE_STM0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   103   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   104   *     IfxStm_initCompareConfig(&stmConfig);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   105   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   106   *     // configure to generate interrupt every 10 us
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   107   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   108   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   109   *     stmConfig.ticks = ticks;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   110   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   111   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   112   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   113   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   114   *     IfxStm_initCompare(stmSfr, &stmConfig);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   115   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   116   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   117   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   118   * Now the Stm shall generate interrupts regularly based on the configured time !
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   119   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   120   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   121   * \ingroup IfxLld_Stm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   122   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   123   * \ingroup IfxLld_Stm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   124   * \defgroup IfxLld_Stm_Std_Module Module Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   125   * \ingroup IfxLld_Stm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   126   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   127   * \ingroup IfxLld_Stm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   128   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   129   * \ingroup IfxLld_Stm_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   130   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   131  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   132  #ifndef IFXSTM_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   133  #define IFXSTM_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   134  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   135  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   136  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   137  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   138  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   139  #include "_Impl/IfxStm_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   140  #include "Scu/Std/IfxScuCcu.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   141  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   142  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   143  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   144  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   145  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   146  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   147  /** \addtogroup IfxLld_Stm_Std_Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   148   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   149  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   150   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   151  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   152  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   153      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   154      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   155  } IfxStm_Comparator;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   157  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   158   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   159  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   160  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   163  } IfxStm_ComparatorInterrupt;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   164  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   165  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   166   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   167  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   168  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   181      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   182      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   183      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   184      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   185      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   186      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   201  } IfxStm_ComparatorOffset;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   202  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   203  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   204   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   205  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   206  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   219      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   220      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   221      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   222      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   223      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   224      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   225      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   228      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   229      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   230      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   231      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   232      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   233      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   234      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   235      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   236      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   237      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   238      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   239  } IfxStm_ComparatorSize;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   240  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   242   * Definition in Ifx_STM.CLC.B.EDIS
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   243   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   244  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   245  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   246      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   247      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   248  } IfxStm_SleepMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   249  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   251   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   252  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   253  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   254      IfxStm_SuspendMode_none = 0,  /**< \brief No suspend */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   255      IfxStm_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   256      IfxStm_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   257  } IfxStm_SuspendMode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   258  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   259  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   261  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   262  /*-----------------------------Data Structures--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   263  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   264  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   265  /** \addtogroup IfxLld_Stm_Std_Structures
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   266   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   267  /** \brief Comparator Configuration Structure
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   268   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   269  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   270  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   271      IfxStm_Comparator          comparator;                /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   272      IfxStm_ComparatorInterrupt comparatorInterrupt;       /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   273      IfxStm_ComparatorOffset    compareOffset;             /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   274      IfxStm_ComparatorSize      compareSize;               /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   275      uint32                     ticks;                     /**< \brief count for next comparison from current timer count. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   276      Ifx_Priority               triggerPriority;           /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   277      IfxSrc_Tos                 typeOfService;             /**< \brief Type of service. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   278  } IfxStm_CompareConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   279  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   280  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   281  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   282  /** \addtogroup IfxLld_Stm_Std_Module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   283   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   284  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   285  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   286  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   287  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   288  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   289  /** \brief Returns system timer value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   290   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   291   * \return system timer value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   292   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   293  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   294  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   295  /** \brief Returns the system timer frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   296   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   297   * \return the system timer frequency in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   298   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   299  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   300  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   301  /** \brief Returns the module's suspend state.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   302   * TRUE :if module is suspended.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   303   * FALSE:if module is not yet suspended.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   304   * \param stm Pointer to STM module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   305   * \return Suspend status (TRUE / FALSE)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   306   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   307  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   308  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   309  /** \brief Configure the Module to Hard/Soft suspend mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   310   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   311   * \param stm Pointer to STM module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   312   * \param mode Module suspend mode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   313   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   314   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   315  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   316  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   317  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   318  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   319  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   320  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   321  /** \brief Disables the Stm module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   322   * \param stm pointer to STM registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   323   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   324   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   325  IFX_EXTERN void IfxStm_disableModule(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   326  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   327  /** \brief enable suspend by debugger.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   329   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   330   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   331  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   333  /** \brief Returns the module index of the selected STM module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   334   * \param stm Pointer to STM module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   335   * \return STM module register address
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   337  IFX_EXTERN Ifx_STM *IfxStm_getAddress(IfxStm_Index stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   338  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   339  /** \brief API to get the resource index of the STM specified.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   341   * \return system timer module index.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   342   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   343  IFX_EXTERN IfxStm_Index IfxStm_getIndex(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   344  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   345  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   346  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   347  /** \addtogroup IfxLld_Stm_Std_Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   348   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   349  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   350  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   351  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   352  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   353  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   354  /** \brief Returns the lower system timer value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   355   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   356   * \return the lower system timer value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   357   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   358  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   360  /** \brief Gets the TIM3 couter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   361   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   362   * \return TIM3 counter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   364  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   365  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   366  /** \brief Gets the TIM4 couter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   367   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   368   * \return TIM4 counter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   369   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   370  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   371  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   372  /** \brief Gets the TIM5 couter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   373   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   374   * \return TIM5 counter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   375   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   376  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   378  /** \brief Gets the TIM6 couter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   379   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   380   * \return TIM6 counter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   382  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   383  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   384  /** \brief Gets the TIM1 couter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   386   * \return TIM1 counter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   387   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   388  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   389  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   390  /** \brief Gets the TIM2 couter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   391   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   392   * \return TIM2 counter value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   393   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   394  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   396  /** \brief Returns the timer value shifted right by offset.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   397   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   398   * \param offset offset value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   399   * \return the lower system timer value shifted by offset.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   400   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   401  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   402  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   403  /** \brief Wait for requested time.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   404   * The macro waits in while loop for the specified time in system timer ticks.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   406   * \param ticks ticks Wait time in system timer ticks.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   407   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   409  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   410  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   411  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   412  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   413  /** \addtogroup IfxLld_Stm_Std_Comparator
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   414   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   415  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   416  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   417  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   418  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   419  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   420  /** \brief Returns the updated compare register value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   421   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   422   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   423   * \return The compare value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   424   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   425  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   426  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   427  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   428   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   429   * \param microSeconds Number of micro seconds that need to be converted to ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   430   * \return ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   431   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   432  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   433  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   434  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   435   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   436   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   437   * \return ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   438   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   439  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   440  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   441  /** \brief Update the compare register value increased with given ticks.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   442   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   443   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   444   * \param ticks count for next comparison from current timer count.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   445   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   446   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   447  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   448  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   449  /** \brief Update the compare register value.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   450   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   451   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   452   * \param ticks count for next comparison.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   453   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   454   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   455  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   456  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   457  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   458  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   459  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   460  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   461  /** \brief Clear the compare interrupt flag.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   462   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   463   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   464   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   465   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   466  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   467  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   468  /** \brief Disables the compare interrupt
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   469   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   470   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   471   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   472   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   473  IFX_EXTERN void IfxStm_disableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   474  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   475  /** \brief Enables the compare interrupt .
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   476   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   477   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   478   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   479   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   480  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   481  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   482  /** \brief get the interrupt source pointer for the comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   483   * \param stm pointer to the STM registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   484   * \param comparator comparator selection comparator
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   485   * \return pointer to the interrupt source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   486   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   487  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxStm_getSrcPointer(Ifx_STM *stm, IfxStm_Comparator comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   488  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   489  /** \brief Initialise stm compare register.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   490   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   491   * \param config pointer to configuration structure.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   492   * \return TRUE if Comparator successful otherwise FLASE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   493   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   494  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   495  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   496  /** \brief Initialise compare configuration with default values.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   497   * \param config pointer to configuration structure.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   498   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   499   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   500  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   501  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   502  /** \brief Indicates if the compare interrupt flag is set.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   503   * \param stm pointer to System timer module registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   504   * \param comparator comparator selection comparator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   505   * \return TRUE if the comparator flag is set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   506   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   507  IFX_EXTERN boolean IfxStm_isCompareFlagSet(Ifx_STM *stm, IfxStm_Comparator comparator);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   508  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   509  /** \brief Set the compare behavior
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   510   * \param stm pointer to System timer module registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   511   * \param comparator comparator selection comparator
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   512   * \param offset Comparator start bit position
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   513   * \param size Size of compare value to compare with timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   514   * \param interrupt Comparator Interrupt request source defined
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   515   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   516   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   517  IFX_EXTERN void IfxStm_setCompareControl(Ifx_STM *stm, IfxStm_Comparator comparator, IfxStm_ComparatorOffset offset, IfxStm_ComparatorSize size, IfxStm_ComparatorInterrupt interrupt);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   518  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   519  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   520  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   521  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   522  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   523  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   524  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   525  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   526   * \param stm pointer STM registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   527   * \param mode mode selection (enable/ disable)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   528   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   529   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   530  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   531  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   532  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   533  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   534  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   535  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   536  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   537   * \param stm pointer to STM registers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   538   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   539   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   540  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   541  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   542  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   543  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   544  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   545  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   546  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   547  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   548      uint64 result;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   549  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   550      result  = stm->TIM0.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   551      result |= ((uint64)stm->CAP.U) << 32;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   552  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   553      return result;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   554  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   555  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   556  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   557  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   558  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   559      return stm->CMP[comparator].B.CMPVAL;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   560  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   561  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   562  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   563  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   564  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   565      IFX_UNUSED_PARAMETER(stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   566      float32 result;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   567  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   568      result = IfxScuCcu_getStmFrequency();
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   569  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   570      return result;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   571  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   572  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   573  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   574  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   575  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   576      return stm->TIM0.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   577  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   578  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   579  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   580  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   581  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   582      return stm->TIM3.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   583  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   584  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   585  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   586  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   587  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   588      return stm->TIM4.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   589  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   590  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   591  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   592  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   593  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   594      return stm->TIM5.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   595  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   596  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   597  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   598  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   599  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   600      return stm->TIM6.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   601  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   602  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   603  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   604  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   605  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   606      return stm->TIM1.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   607  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   608  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   609  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   610  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   611  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   612      return stm->TIM2.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   613  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   614  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   615  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   616  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   617  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   618      uint64 now;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   619  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   620      now = IfxStm_get(stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   621  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   622      return (uint32)(now >> offset);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   623  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   624  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   625  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   626  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   627  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   628      sint32 freq = (sint32)IfxStm_getFrequency(stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   629      return (freq / (1000000)) * microSeconds;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   630  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   631  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   632  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   633  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   634  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   635      sint32 freq = (sint32)IfxStm_getFrequency(stm);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   636      return (freq / (1000)) * milliSeconds;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   637  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   638  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   639  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   640  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   641  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   642      stm->CMP[comparator].B.CMPVAL = stm->CMP[comparator].B.CMPVAL + ticks;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   643  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   644  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   645  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   646  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   647  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   648      Ifx_STM_OCS ocs;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   649  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   650      // read the status
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   651      ocs.U = stm->OCS.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   652  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   653      // return the status
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   654      return ocs.B.SUSSTA;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   655  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   656  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   657  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   658  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   659  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   660      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   661      IfxScuWdt_clearCpuEndinit(passwd);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   662      stm->CLC.B.EDIS = mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   663      IfxScuWdt_setCpuEndinit(passwd);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   664  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   665  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   666  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   667  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   668  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   669      Ifx_STM_OCS ocs;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   670  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   671      // remove protection and configure the suspend mode.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   672      ocs.B.SUS_P = 1;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   673      ocs.B.SUS   = mode;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   674      stm->OCS.U  = ocs.U;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   675  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   676  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   677  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   678  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   679  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   680      stm->CMP[comparator].B.CMPVAL = ticks;
	addsc.a	a15,a15,d15,#2
.L326:
	st.w	[a15]48,d2
.L179:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   118  an IfxStm_Timer_setFrequency(IfxStm_Timer *driver, float32 frequency)
	ld.a	a4,[a12]12
.L327:
	ld.bu	d4,[a12]16
	j	IfxStm_enableComparatorInterrupt
.L155:
	
__IfxStm_Timer_run_function_end:
	.size	IfxStm_Timer_run,__IfxStm_Timer_run_function_end-IfxStm_Timer_run
.L81:
	; End of function
	
	.sdecl	'.text.IfxStm_Timer.IfxStm_Timer_setFrequency',code,cluster('IfxStm_Timer_setFrequency')
	.sect	'.text.IfxStm_Timer.IfxStm_Timer_setFrequency'
	.align	2
	
	.global	IfxStm_Timer_setFrequency

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   119  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   120      Ifx_TimerValue period = IfxStdIf_Timer_sToTick(driver->base.clockFreq, 1.0 / frequency);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   121  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   122      return IfxStm_Timer_setPeriod(driver, period);
; Function IfxStm_Timer_setFrequency
.L31:
IfxStm_Timer_setFrequency:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   123  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   124  
	movh	d15,#16256
.L332:
	div.f	d15,d15,d4
	ld.w	d0,[a4]6
.L333:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	mul.f	d15,d15,d0
	ftouz	d4,d15
.L262:
	j	IfxStm_Timer_setPeriod
.L183:
	
__IfxStm_Timer_setFrequency_function_end:
	.size	IfxStm_Timer_setFrequency,__IfxStm_Timer_setFrequency_function_end-IfxStm_Timer_setFrequency
.L86:
	; End of function
	
	.sdecl	'.text.IfxStm_Timer.IfxStm_Timer_setPeriod',code,cluster('IfxStm_Timer_setPeriod')
	.sect	'.text.IfxStm_Timer.IfxStm_Timer_setPeriod'
	.align	2
	
	.global	IfxStm_Timer_setPeriod

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   125  n IfxStm_Timer_setPeriod(IfxStm_Timer *driver, Ifx_TimerValue period)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   126  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   127      driver->base.period = period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   128  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   129      return TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   130  }
; Function IfxStm_Timer_setPeriod
.L33:
IfxStm_Timer_setPeriod:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   131  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   132  
	st.w	[a4],d4
.L338:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   133  void IfxStm_Timer_setSingleMode(IfxStm_Timer *driver, boolean enabled)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   134  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   135      driver->base.singleShot = enabled;
	mov	d2,#1
	ret
.L186:
	
__IfxStm_Timer_setPeriod_function_end:
	.size	IfxStm_Timer_setPeriod,__IfxStm_Timer_setPeriod_function_end-IfxStm_Timer_setPeriod
.L91:
	; End of function
	
	.sdecl	'.text.IfxStm_Timer.IfxStm_Timer_setSingleMode',code,cluster('IfxStm_Timer_setSingleMode')
	.sect	'.text.IfxStm_Timer.IfxStm_Timer_setSingleMode'
	.align	2
	
	.global	IfxStm_Timer_setSingleMode

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   136  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   137  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   138  
; Function IfxStm_Timer_setSingleMode
.L35:
IfxStm_Timer_setSingleMode:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   139  boolean IfxStm_Timer_stdIfTimerInit(IfxStdIf_Timer *stdif, IfxStm_Timer *driver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   140  {
	st.b	[a4]11,d4
.L343:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   141      IfxStdIf_Timer_initStdIf(stdif, driver);
	ret
.L189:
	
__IfxStm_Timer_setSingleMode_function_end:
	.size	IfxStm_Timer_setSingleMode,__IfxStm_Timer_setSingleMode_function_end-IfxStm_Timer_setSingleMode
.L96:
	; End of function
	
	.sdecl	'.text.IfxStm_Timer.IfxStm_Timer_stdIfTimerInit',code,cluster('IfxStm_Timer_stdIfTimerInit')
	.sect	'.text.IfxStm_Timer.IfxStm_Timer_stdIfTimerInit'
	.align	2
	
	.global	IfxStm_Timer_stdIfTimerInit

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   142      /* Set the API link */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   143      stdif->getFrequency         = (IfxStdIf_Timer_GetFrequency) & IfxStm_Timer_getFrequency;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   144      stdif->getPeriod            = (IfxStdIf_Timer_GetPeriod) & IfxStm_Timer_getPeriod;
; Function IfxStm_Timer_stdIfTimerInit
.L37:
IfxStm_Timer_stdIfTimerInit:	.type	func
	mov.aa	a15,a4
.L264:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   145      stdif->getResolution        = (IfxStdIf_Timer_GetResolution) & IfxStm_Timer_getResolution;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   146      //stdif->getTrigger
	call	IfxStdIf_Timer_initStdIf
.L263:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   147      stdif->setFrequency         = (IfxStdIf_Timer_SetFrequency) & IfxStm_Timer_setFrequency;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   148      stdif->updateInputFrequency = (IfxStdIf_Timer_UpdateInputFrequency) & IfxStm_Timer_updateInputFrequency;
	movh.a	a2,#@his(IfxStm_Timer_getFrequency)
	lea	a2,[a2]@los(IfxStm_Timer_getFrequency)
.L348:
	st.a	[a15]4,a2
.L349:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   149      //stdif->applyUpdate
	movh.a	a2,#@his(IfxStm_Timer_getPeriod)
	lea	a2,[a2]@los(IfxStm_Timer_getPeriod)
.L350:
	st.a	[a15]8,a2
.L351:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   150      //stdif->disableUpdate
	movh.a	a2,#@his(IfxStm_Timer_getResolution)
	lea	a2,[a2]@los(IfxStm_Timer_getResolution)
.L352:
	st.a	[a15]12,a2
.L353:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   151      stdif->getInputFrequency = (IfxStdIf_Timer_GetInputFrequency) & IfxStm_Timer_getInputFrequency;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   152      stdif->run               = (IfxStdIf_Timer_Run) & IfxStm_Timer_run;
	movh.a	a2,#@his(IfxStm_Timer_setFrequency)
	lea	a2,[a2]@los(IfxStm_Timer_setFrequency)
.L354:
	st.a	[a15]20,a2
.L355:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   153      stdif->setPeriod         = (IfxStdIf_Timer_SetPeriod) & IfxStm_Timer_setPeriod;
	movh.a	a2,#@his(IfxStm_Timer_updateInputFrequency)
	lea	a2,[a2]@los(IfxStm_Timer_updateInputFrequency)
.L356:
	st.a	[a15]24,a2
.L357:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   154      stdif->setSingleMode     = (IfxStdIf_Timer_SetSingleMode) & IfxStm_Timer_setSingleMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   155      //stdif->setTrigger
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   156      stdif->stop              = (IfxStdIf_Timer_Stop) & IfxStm_Timer_stop;
	movh.a	a2,#@his(IfxStm_Timer_getInputFrequency)
	lea	a2,[a2]@los(IfxStm_Timer_getInputFrequency)
.L358:
	st.a	[a15]36,a2
.L359:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   157      stdif->ackTimerIrq       = (IfxStdIf_Timer_AckTimerIrq) & IfxStm_Timer_acknowledgeTimerIrq;
	movh.a	a2,#@his(IfxStm_Timer_run)
	lea	a2,[a2]@los(IfxStm_Timer_run)
.L360:
	st.a	[a15]40,a2
.L361:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   158      //stdif->ackTriggerIrq
	movh.a	a2,#@his(IfxStm_Timer_setPeriod)
	lea	a2,[a2]@los(IfxStm_Timer_setPeriod)
.L362:
	st.a	[a15]44,a2
.L363:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   159  
	movh.a	a2,#@his(IfxStm_Timer_setSingleMode)
	lea	a2,[a2]@los(IfxStm_Timer_setSingleMode)
.L364:
	st.a	[a15]48,a2
.L365:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   160      return TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   161  }
	movh.a	a2,#@his(IfxStm_Timer_stop)
	lea	a2,[a2]@los(IfxStm_Timer_stop)
.L366:
	st.a	[a15]56,a2
.L367:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   162  
	movh.a	a2,#@his(IfxStm_Timer_acknowledgeTimerIrq)
	lea	a2,[a2]@los(IfxStm_Timer_acknowledgeTimerIrq)
.L368:
	st.a	[a15]60,a2
.L369:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   163  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   164  void IfxStm_Timer_stop(IfxStm_Timer *driver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   165  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   166      IfxStm_disableComparatorInterrupt(driver->stm, driver->comparator);
	mov	d2,#1
	ret
.L192:
	
__IfxStm_Timer_stdIfTimerInit_function_end:
	.size	IfxStm_Timer_stdIfTimerInit,__IfxStm_Timer_stdIfTimerInit_function_end-IfxStm_Timer_stdIfTimerInit
.L101:
	; End of function
	
	.sdecl	'.text.IfxStm_Timer.IfxStm_Timer_stop',code,cluster('IfxStm_Timer_stop')
	.sect	'.text.IfxStm_Timer.IfxStm_Timer_stop'
	.align	2
	
	.global	IfxStm_Timer_stop

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   167  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   168  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   169  
; Function IfxStm_Timer_stop
.L39:
IfxStm_Timer_stop:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   170  void IfxStm_Timer_updateInputFrequency(IfxStm_Timer *driver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   171  {
	ld.a	a15,[a4]12
.L374:
	ld.bu	d4,[a4]16
	mov.aa	a4,a15
.L265:
	j	IfxStm_disableComparatorInterrupt
.L196:
	
__IfxStm_Timer_stop_function_end:
	.size	IfxStm_Timer_stop,__IfxStm_Timer_stop_function_end-IfxStm_Timer_stop
.L106:
	; End of function
	
	.sdecl	'.text.IfxStm_Timer.IfxStm_Timer_updateInputFrequency',code,cluster('IfxStm_Timer_updateInputFrequency')
	.sect	'.text.IfxStm_Timer.IfxStm_Timer_updateInputFrequency'
	.align	2
	
	.global	IfxStm_Timer_updateInputFrequency

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   172      float32 freqency;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   173      freqency               = IfxStm_getFrequency(driver->stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   174      driver->base.clockFreq = freqency / (1 << driver->comparatorShift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   175  }
; Function IfxStm_Timer_updateInputFrequency
.L41:
IfxStm_Timer_updateInputFrequency:	.type	func
	mov.aa	a15,a4
.L201:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     2   * \file IfxScuCcu.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     3   * \brief SCU  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     4   * \ingroup IfxLld_Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    45   * \defgroup IfxLld_Scu SCU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    46   * \addtogroup IfxLld_Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    47   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    48   * \defgroup IfxLld_ScuCcu How to use the Scu Clock driver?
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    49   * \addtogroup IfxLld_ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    50   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    51   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    52   * The Scu Clock control unit driver provides a default configuration for pll and Clock initialisation and set of peripheral clock configuration functions.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    53   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    54   * In the following sections it will be described, how to integrate the driver into the application framework.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    55   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    56   * \section IfxLld_ScuCcu_Std_Preparation Preparation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    57   * \subsection IfxLld_ScuCcu_Std_Include Include Files
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    58   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    59   * Include following header file into your C code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    60   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    61   * #include <Scu/Std/IfxScuCcu.h>
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    62   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    63   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    64   * \subsection IfxLld_ScuCcu_Std_Variables Variables
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    65   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    66   * Declare the Clock Configuration variables in your C code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    67   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    68   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    69   * // used globally
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    70   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    71   * // configuration for the PLL  steps
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    72   * static IfxScuCcu_PllStepsConfig IfxScuCcu_testPllConfigSteps[] = {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    73   *     IFXSCU_CFG_PLL_STEPS
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    74   * };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    75   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    76   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    77   * // Default configuration for the Clock Configuration
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    78   * IfxScuCcu_Config                      IfxScuCcu_testClockConfig = {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    79   *     {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    80   *        sizeof(IfxScuCcu_testPllConfigSteps) / sizeof(IfxScuCcu_PllStepsConfig),
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    81   *        (IfxScuCcu_PllStepsConfig *)IfxScuCcu_testPllConfigSteps,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    82   *        IFXSCU_CFG_PLL_INITIAL_STEP,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    83   *     },
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    84   *     IFXSCU_CFG_CLK_DISTRIBUTION,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    85   *     IFXSCU_CFG_FLASH_WAITSTATE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    86   *     IFX_CFG_SCU_XTAL_FREQUENCY
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    87   * };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    88   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    89   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    90   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    91   * \subsection IfxLld_ScuCcu_Std_Init Module Initialisation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    92   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    93   * The module initialisation can be done in the same function. Here an example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    94   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    95   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    96   *        // standard PLL & clock initialisation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    97   *         IfxScuCcu_init(&IfxScuCcu_testClockConfig);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    99   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   100   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   101   *    The PLL and clocks are now initialised based on the IFXSCU_CFG_XTAL_FREQ and  IFXSCU_CFG_PLL_FREQ values configured in Ifx_Cfg.h.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   102   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   103   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   104   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   105   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   106   * \defgroup IfxLld_Scu_Std_Ccu Ccu Basic Functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   107   * \ingroup IfxLld_Scu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   108   * \defgroup IfxLld_Scu_Std_Ccu_Ccu Clock Control Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   109   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   110   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Operative Clock Control Operative Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   111   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   112   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Configuration Clock Control Configuration Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   113   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   114   * \defgroup IfxLld_Scu_Std_Ccu_Enum Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   115   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   116   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   117  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   118  #ifndef IFXSCUCCU_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   119  #define IFXSCUCCU_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   120  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   121  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   122  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   123  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   124  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   125  #include "_Impl/IfxScu_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   126  #include "Scu/Std/IfxScuWdt.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   127  #include "Cpu/Std/IfxCpu.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   128  #include "IfxStm_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   129  #include "IfxScu_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   130  #include "IfxFlash_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   131  #include "_PinMap/IfxScu_PinMap.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   132  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   133  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   134  /*-----------------------------------Macros-----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   135  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   136  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   137  /** \brief Oscillator stability check timeout count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   138   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   139  #define IFXSCUCCU_OSC_STABLECHK_TIME (640)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   140  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   141  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   142  /*------------------------------Type Definitions------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   143  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   144  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   145  /** \brief Function pointer type for the hooks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   146   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   147   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   148  typedef void (*IfxScuCcu_PllStepsFunctionHook)(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   149  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   150  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   151  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   152  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   153  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   154  /** \addtogroup IfxLld_Scu_Std_Ccu_Enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   155   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   156  /** \brief MODULE_SCU.PLLCON1.B.K1DIV, specifies the K1-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   157   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   158  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   159  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   160      IfxScuCcu_K1divider_1 = 0,      /**< \brief K1-Divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   161      IfxScuCcu_K1divider_2,          /**< \brief K1-Divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   162      IfxScuCcu_K1divider_3,          /**< \brief K1-Divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   163      IfxScuCcu_K1divider_4,          /**< \brief K1-Divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   164      IfxScuCcu_K1divider_5,          /**< \brief K1-Divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   165      IfxScuCcu_K1divider_6,          /**< \brief K1-Divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   166      IfxScuCcu_K1divider_7,          /**< \brief K1-Divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   167      IfxScuCcu_K1divider_8,          /**< \brief K1-Divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   168      IfxScuCcu_K1divider_9,          /**< \brief K1-Divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   169      IfxScuCcu_K1divider_10,         /**< \brief K1-Divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   170      IfxScuCcu_K1divider_11,         /**< \brief K1-Divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   171      IfxScuCcu_K1divider_12,         /**< \brief K1-Divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   172      IfxScuCcu_K1divider_13,         /**< \brief K1-Divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   173      IfxScuCcu_K1divider_14,         /**< \brief K1-Divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   174      IfxScuCcu_K1divider_15,         /**< \brief K1-Divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   175      IfxScuCcu_K1divider_16,         /**< \brief K1-Divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   176      IfxScuCcu_K1divider_17,         /**< \brief K1-Divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   177      IfxScuCcu_K1divider_18,         /**< \brief K1-Divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   178      IfxScuCcu_K1divider_19,         /**< \brief K1-Divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   179      IfxScuCcu_K1divider_20,         /**< \brief K1-Divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   180      IfxScuCcu_K1divider_21,         /**< \brief K1-Divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   181      IfxScuCcu_K1divider_22,         /**< \brief K1-Divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   182      IfxScuCcu_K1divider_23,         /**< \brief K1-Divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   183      IfxScuCcu_K1divider_24,         /**< \brief K1-Divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   184      IfxScuCcu_K1divider_25,         /**< \brief K1-Divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   185      IfxScuCcu_K1divider_26,         /**< \brief K1-Divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   186      IfxScuCcu_K1divider_27,         /**< \brief K1-Divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   187      IfxScuCcu_K1divider_28,         /**< \brief K1-Divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   188      IfxScuCcu_K1divider_29,         /**< \brief K1-Divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   189      IfxScuCcu_K1divider_30,         /**< \brief K1-Divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   190      IfxScuCcu_K1divider_31,         /**< \brief K1-Divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   191      IfxScuCcu_K1divider_32,         /**< \brief K1-Divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   192      IfxScuCcu_K1divider_33,         /**< \brief K1-Divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   193      IfxScuCcu_K1divider_34,         /**< \brief K1-Divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   194      IfxScuCcu_K1divider_35,         /**< \brief K1-Divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   195      IfxScuCcu_K1divider_36,         /**< \brief K1-Divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   196      IfxScuCcu_K1divider_37,         /**< \brief K1-Divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   197      IfxScuCcu_K1divider_38,         /**< \brief K1-Divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   198      IfxScuCcu_K1divider_39,         /**< \brief K1-Divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   199      IfxScuCcu_K1divider_40,         /**< \brief K1-Divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   200      IfxScuCcu_K1divider_41,         /**< \brief K1-Divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   201      IfxScuCcu_K1divider_42,         /**< \brief K1-Divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   202      IfxScuCcu_K1divider_43,         /**< \brief K1-Divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   203      IfxScuCcu_K1divider_44,         /**< \brief K1-Divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   204      IfxScuCcu_K1divider_45,         /**< \brief K1-Divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   205      IfxScuCcu_K1divider_46,         /**< \brief K1-Divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   206      IfxScuCcu_K1divider_47,         /**< \brief K1-Divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   207      IfxScuCcu_K1divider_48,         /**< \brief K1-Divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   208      IfxScuCcu_K1divider_49,         /**< \brief K1-Divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   209      IfxScuCcu_K1divider_50,         /**< \brief K1-Divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   210      IfxScuCcu_K1divider_51,         /**< \brief K1-Divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   211      IfxScuCcu_K1divider_52,         /**< \brief K1-Divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   212      IfxScuCcu_K1divider_53,         /**< \brief K1-Divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   213      IfxScuCcu_K1divider_54,         /**< \brief K1-Divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   214      IfxScuCcu_K1divider_55,         /**< \brief K1-Divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   215      IfxScuCcu_K1divider_56,         /**< \brief K1-Divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   216      IfxScuCcu_K1divider_57,         /**< \brief K1-Divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   217      IfxScuCcu_K1divider_58,         /**< \brief K1-Divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   218      IfxScuCcu_K1divider_59,         /**< \brief K1-Divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   219      IfxScuCcu_K1divider_60,         /**< \brief K1-Divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   220      IfxScuCcu_K1divider_61,         /**< \brief K1-Divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   221      IfxScuCcu_K1divider_62,         /**< \brief K1-Divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   222      IfxScuCcu_K1divider_63,         /**< \brief K1-Divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   223      IfxScuCcu_K1divider_64,         /**< \brief K1-Divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   224      IfxScuCcu_K1divider_65,         /**< \brief K1-Divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   225      IfxScuCcu_K1divider_66,         /**< \brief K1-Divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   226      IfxScuCcu_K1divider_67,         /**< \brief K1-Divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   227      IfxScuCcu_K1divider_68,         /**< \brief K1-Divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   228      IfxScuCcu_K1divider_69,         /**< \brief K1-Divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   229      IfxScuCcu_K1divider_70,         /**< \brief K1-Divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   230      IfxScuCcu_K1divider_71,         /**< \brief K1-Divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   231      IfxScuCcu_K1divider_72,         /**< \brief K1-Divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   232      IfxScuCcu_K1divider_73,         /**< \brief K1-Divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   233      IfxScuCcu_K1divider_74,         /**< \brief K1-Divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   234      IfxScuCcu_K1divider_75,         /**< \brief K1-Divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   235      IfxScuCcu_K1divider_76,         /**< \brief K1-Divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   236      IfxScuCcu_K1divider_77,         /**< \brief K1-Divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   237      IfxScuCcu_K1divider_78,         /**< \brief K1-Divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   238      IfxScuCcu_K1divider_79,         /**< \brief K1-Divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   239      IfxScuCcu_K1divider_80,         /**< \brief K1-Divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   240      IfxScuCcu_K1divider_81,         /**< \brief K1-Divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   241      IfxScuCcu_K1divider_82,         /**< \brief K1-Divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   242      IfxScuCcu_K1divider_83,         /**< \brief K1-Divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   243      IfxScuCcu_K1divider_84,         /**< \brief K1-Divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   244      IfxScuCcu_K1divider_85,         /**< \brief K1-Divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   245      IfxScuCcu_K1divider_86,         /**< \brief K1-Divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   246      IfxScuCcu_K1divider_87,         /**< \brief K1-Divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   247      IfxScuCcu_K1divider_88,         /**< \brief K1-Divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   248      IfxScuCcu_K1divider_89,         /**< \brief K1-Divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   249      IfxScuCcu_K1divider_90,         /**< \brief K1-Divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   250      IfxScuCcu_K1divider_91,         /**< \brief K1-Divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   251      IfxScuCcu_K1divider_92,         /**< \brief K1-Divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   252      IfxScuCcu_K1divider_93,         /**< \brief K1-Divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   253      IfxScuCcu_K1divider_94,         /**< \brief K1-Divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   254      IfxScuCcu_K1divider_95,         /**< \brief K1-Divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   255      IfxScuCcu_K1divider_96,         /**< \brief K1-Divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   256      IfxScuCcu_K1divider_97,         /**< \brief K1-Divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   257      IfxScuCcu_K1divider_98,         /**< \brief K1-Divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   258      IfxScuCcu_K1divider_99,         /**< \brief K1-Divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   259      IfxScuCcu_K1divider_100,        /**< \brief K1-Divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   260      IfxScuCcu_K1divider_101,        /**< \brief K1-Divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   261      IfxScuCcu_K1divider_102,        /**< \brief K1-Divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   262      IfxScuCcu_K1divider_103,        /**< \brief K1-Divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   263      IfxScuCcu_K1divider_104,        /**< \brief K1-Divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   264      IfxScuCcu_K1divider_105,        /**< \brief K1-Divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   265      IfxScuCcu_K1divider_106,        /**< \brief K1-Divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   266      IfxScuCcu_K1divider_107,        /**< \brief K1-Divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   267      IfxScuCcu_K1divider_108,        /**< \brief K1-Divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   268      IfxScuCcu_K1divider_109,        /**< \brief K1-Divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   269      IfxScuCcu_K1divider_110,        /**< \brief K1-Divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   270      IfxScuCcu_K1divider_111,        /**< \brief K1-Divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   271      IfxScuCcu_K1divider_112,        /**< \brief K1-Divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   272      IfxScuCcu_K1divider_113,        /**< \brief K1-Divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   273      IfxScuCcu_K1divider_114,        /**< \brief K1-Divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   274      IfxScuCcu_K1divider_115,        /**< \brief K1-Divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   275      IfxScuCcu_K1divider_116,        /**< \brief K1-Divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   276      IfxScuCcu_K1divider_117,        /**< \brief K1-Divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   277      IfxScuCcu_K1divider_118,        /**< \brief K1-Divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   278      IfxScuCcu_K1divider_119,        /**< \brief K1-Divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   279      IfxScuCcu_K1divider_120,        /**< \brief K1-Divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   280      IfxScuCcu_K1divider_121,        /**< \brief K1-Divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   281      IfxScuCcu_K1divider_122,        /**< \brief K1-Divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   282      IfxScuCcu_K1divider_123,        /**< \brief K1-Divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   283      IfxScuCcu_K1divider_124,        /**< \brief K1-Divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   284      IfxScuCcu_K1divider_125,        /**< \brief K1-Divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   285      IfxScuCcu_K1divider_126,        /**< \brief K1-Divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   286      IfxScuCcu_K1divider_127,        /**< \brief K1-Divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   287      IfxScuCcu_K1divider_128         /**< \brief K1-Divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   288  } IfxScuCcu_K1divider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   289  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   290  /** \brief MODULE_SCU.PLLCON1.B.K2DIV, specifies the K2-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   292  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   294      IfxScuCcu_K2divider_1 = 0,      /**< \brief K2-Divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   295      IfxScuCcu_K2divider_2,          /**< \brief K2-Divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   296      IfxScuCcu_K2divider_3,          /**< \brief K2-Divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   297      IfxScuCcu_K2divider_4,          /**< \brief K2-Divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   298      IfxScuCcu_K2divider_5,          /**< \brief K2-Divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   299      IfxScuCcu_K2divider_6,          /**< \brief K2-Divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   300      IfxScuCcu_K2divider_7,          /**< \brief K2-Divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   301      IfxScuCcu_K2divider_8,          /**< \brief K2-Divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   302      IfxScuCcu_K2divider_9,          /**< \brief K2-Divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   303      IfxScuCcu_K2divider_10,         /**< \brief K2-Divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   304      IfxScuCcu_K2divider_11,         /**< \brief K2-Divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   305      IfxScuCcu_K2divider_12,         /**< \brief K2-Divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   306      IfxScuCcu_K2divider_13,         /**< \brief K2-Divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   307      IfxScuCcu_K2divider_14,         /**< \brief K2-Divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   308      IfxScuCcu_K2divider_15,         /**< \brief K2-Divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   309      IfxScuCcu_K2divider_16,         /**< \brief K2-Divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   310      IfxScuCcu_K2divider_17,         /**< \brief K2-Divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   311      IfxScuCcu_K2divider_18,         /**< \brief K2-Divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   312      IfxScuCcu_K2divider_19,         /**< \brief K2-Divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   313      IfxScuCcu_K2divider_20,         /**< \brief K2-Divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   314      IfxScuCcu_K2divider_21,         /**< \brief K2-Divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   315      IfxScuCcu_K2divider_22,         /**< \brief K2-Divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   316      IfxScuCcu_K2divider_23,         /**< \brief K2-Divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   317      IfxScuCcu_K2divider_24,         /**< \brief K2-Divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   318      IfxScuCcu_K2divider_25,         /**< \brief K2-Divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   319      IfxScuCcu_K2divider_26,         /**< \brief K2-Divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   320      IfxScuCcu_K2divider_27,         /**< \brief K2-Divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   321      IfxScuCcu_K2divider_28,         /**< \brief K2-Divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   322      IfxScuCcu_K2divider_29,         /**< \brief K2-Divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   323      IfxScuCcu_K2divider_30,         /**< \brief K2-Divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   324      IfxScuCcu_K2divider_31,         /**< \brief K2-Divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   325      IfxScuCcu_K2divider_32,         /**< \brief K2-Divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   326      IfxScuCcu_K2divider_33,         /**< \brief K2-Divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   327      IfxScuCcu_K2divider_34,         /**< \brief K2-Divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   328      IfxScuCcu_K2divider_35,         /**< \brief K2-Divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   329      IfxScuCcu_K2divider_36,         /**< \brief K2-Divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   330      IfxScuCcu_K2divider_37,         /**< \brief K2-Divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   331      IfxScuCcu_K2divider_38,         /**< \brief K2-Divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   332      IfxScuCcu_K2divider_39,         /**< \brief K2-Divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   333      IfxScuCcu_K2divider_40,         /**< \brief K2-Divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   334      IfxScuCcu_K2divider_41,         /**< \brief K2-Divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   335      IfxScuCcu_K2divider_42,         /**< \brief K2-Divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   336      IfxScuCcu_K2divider_43,         /**< \brief K2-Divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   337      IfxScuCcu_K2divider_44,         /**< \brief K2-Divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   338      IfxScuCcu_K2divider_45,         /**< \brief K2-Divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   339      IfxScuCcu_K2divider_46,         /**< \brief K2-Divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   340      IfxScuCcu_K2divider_47,         /**< \brief K2-Divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   341      IfxScuCcu_K2divider_48,         /**< \brief K2-Divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   342      IfxScuCcu_K2divider_49,         /**< \brief K2-Divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   343      IfxScuCcu_K2divider_50,         /**< \brief K2-Divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   344      IfxScuCcu_K2divider_51,         /**< \brief K2-Divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   345      IfxScuCcu_K2divider_52,         /**< \brief K2-Divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   346      IfxScuCcu_K2divider_53,         /**< \brief K2-Divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   347      IfxScuCcu_K2divider_54,         /**< \brief K2-Divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   348      IfxScuCcu_K2divider_55,         /**< \brief K2-Divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   349      IfxScuCcu_K2divider_56,         /**< \brief K2-Divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   350      IfxScuCcu_K2divider_57,         /**< \brief K2-Divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   351      IfxScuCcu_K2divider_58,         /**< \brief K2-Divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   352      IfxScuCcu_K2divider_59,         /**< \brief K2-Divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   353      IfxScuCcu_K2divider_60,         /**< \brief K2-Divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   354      IfxScuCcu_K2divider_61,         /**< \brief K2-Divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   355      IfxScuCcu_K2divider_62,         /**< \brief K2-Divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   356      IfxScuCcu_K2divider_63,         /**< \brief K2-Divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   357      IfxScuCcu_K2divider_64,         /**< \brief K2-Divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   358      IfxScuCcu_K2divider_65,         /**< \brief K2-Divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   359      IfxScuCcu_K2divider_66,         /**< \brief K2-Divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   360      IfxScuCcu_K2divider_67,         /**< \brief K2-Divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   361      IfxScuCcu_K2divider_68,         /**< \brief K2-Divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   362      IfxScuCcu_K2divider_69,         /**< \brief K2-Divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   363      IfxScuCcu_K2divider_70,         /**< \brief K2-Divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   364      IfxScuCcu_K2divider_71,         /**< \brief K2-Divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   365      IfxScuCcu_K2divider_72,         /**< \brief K2-Divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   366      IfxScuCcu_K2divider_73,         /**< \brief K2-Divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   367      IfxScuCcu_K2divider_74,         /**< \brief K2-Divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   368      IfxScuCcu_K2divider_75,         /**< \brief K2-Divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   369      IfxScuCcu_K2divider_76,         /**< \brief K2-Divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   370      IfxScuCcu_K2divider_77,         /**< \brief K2-Divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   371      IfxScuCcu_K2divider_78,         /**< \brief K2-Divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   372      IfxScuCcu_K2divider_79,         /**< \brief K2-Divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   373      IfxScuCcu_K2divider_80,         /**< \brief K2-Divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   374      IfxScuCcu_K2divider_81,         /**< \brief K2-Divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   375      IfxScuCcu_K2divider_82,         /**< \brief K2-Divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   376      IfxScuCcu_K2divider_83,         /**< \brief K2-Divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   377      IfxScuCcu_K2divider_84,         /**< \brief K2-Divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   378      IfxScuCcu_K2divider_85,         /**< \brief K2-Divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   379      IfxScuCcu_K2divider_86,         /**< \brief K2-Divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   380      IfxScuCcu_K2divider_87,         /**< \brief K2-Divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   381      IfxScuCcu_K2divider_88,         /**< \brief K2-Divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   382      IfxScuCcu_K2divider_89,         /**< \brief K2-Divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   383      IfxScuCcu_K2divider_90,         /**< \brief K2-Divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   384      IfxScuCcu_K2divider_91,         /**< \brief K2-Divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   385      IfxScuCcu_K2divider_92,         /**< \brief K2-Divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   386      IfxScuCcu_K2divider_93,         /**< \brief K2-Divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   387      IfxScuCcu_K2divider_94,         /**< \brief K2-Divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   388      IfxScuCcu_K2divider_95,         /**< \brief K2-Divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   389      IfxScuCcu_K2divider_96,         /**< \brief K2-Divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   390      IfxScuCcu_K2divider_97,         /**< \brief K2-Divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   391      IfxScuCcu_K2divider_98,         /**< \brief K2-Divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   392      IfxScuCcu_K2divider_99,         /**< \brief K2-Divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   393      IfxScuCcu_K2divider_100,        /**< \brief K2-Divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   394      IfxScuCcu_K2divider_101,        /**< \brief K2-Divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   395      IfxScuCcu_K2divider_102,        /**< \brief K2-Divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   396      IfxScuCcu_K2divider_103,        /**< \brief K2-Divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   397      IfxScuCcu_K2divider_104,        /**< \brief K2-Divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   398      IfxScuCcu_K2divider_105,        /**< \brief K2-Divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   399      IfxScuCcu_K2divider_106,        /**< \brief K2-Divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   400      IfxScuCcu_K2divider_107,        /**< \brief K2-Divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   401      IfxScuCcu_K2divider_108,        /**< \brief K2-Divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   402      IfxScuCcu_K2divider_109,        /**< \brief K2-Divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   403      IfxScuCcu_K2divider_110,        /**< \brief K2-Divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   404      IfxScuCcu_K2divider_111,        /**< \brief K2-Divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   405      IfxScuCcu_K2divider_112,        /**< \brief K2-Divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   406      IfxScuCcu_K2divider_113,        /**< \brief K2-Divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   407      IfxScuCcu_K2divider_114,        /**< \brief K2-Divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   408      IfxScuCcu_K2divider_115,        /**< \brief K2-Divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   409      IfxScuCcu_K2divider_116,        /**< \brief K2-Divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   410      IfxScuCcu_K2divider_117,        /**< \brief K2-Divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   411      IfxScuCcu_K2divider_118,        /**< \brief K2-Divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   412      IfxScuCcu_K2divider_119,        /**< \brief K2-Divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   413      IfxScuCcu_K2divider_120,        /**< \brief K2-Divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   414      IfxScuCcu_K2divider_121,        /**< \brief K2-Divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   415      IfxScuCcu_K2divider_122,        /**< \brief K2-Divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   416      IfxScuCcu_K2divider_123,        /**< \brief K2-Divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   417      IfxScuCcu_K2divider_124,        /**< \brief K2-Divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   418      IfxScuCcu_K2divider_125,        /**< \brief K2-Divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   419      IfxScuCcu_K2divider_126,        /**< \brief K2-Divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   420      IfxScuCcu_K2divider_127,        /**< \brief K2-Divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   421      IfxScuCcu_K2divider_128         /**< \brief K2-Divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   422  } IfxScuCcu_K2divider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   424  /** \brief MODULE_SCU.PLLCON1.B.K3DIV, specifies the K3-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   425   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   426  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   427  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   428      IfxScuCcu_K3divider_1 = 0,      /**< \brief K3-Divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   429      IfxScuCcu_K3divider_2,          /**< \brief K3-Divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   430      IfxScuCcu_K3divider_3,          /**< \brief K3-Divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   431      IfxScuCcu_K3divider_4,          /**< \brief K3-Divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   432      IfxScuCcu_K3divider_5,          /**< \brief K3-Divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   433      IfxScuCcu_K3divider_6,          /**< \brief K3-Divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   434      IfxScuCcu_K3divider_7,          /**< \brief K3-Divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   435      IfxScuCcu_K3divider_8,          /**< \brief K3-Divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   436      IfxScuCcu_K3divider_9,          /**< \brief K3-Divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   437      IfxScuCcu_K3divider_10,         /**< \brief K3-Divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   438      IfxScuCcu_K3divider_11,         /**< \brief K3-Divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   439      IfxScuCcu_K3divider_12,         /**< \brief K3-Divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   440      IfxScuCcu_K3divider_13,         /**< \brief K3-Divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   441      IfxScuCcu_K3divider_14,         /**< \brief K3-Divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   442      IfxScuCcu_K3divider_15,         /**< \brief K3-Divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   443      IfxScuCcu_K3divider_16,         /**< \brief K3-Divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   444      IfxScuCcu_K3divider_17,         /**< \brief K3-Divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   445      IfxScuCcu_K3divider_18,         /**< \brief K3-Divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   446      IfxScuCcu_K3divider_19,         /**< \brief K3-Divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   447      IfxScuCcu_K3divider_20,         /**< \brief K3-Divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   448      IfxScuCcu_K3divider_21,         /**< \brief K3-Divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   449      IfxScuCcu_K3divider_22,         /**< \brief K3-Divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   450      IfxScuCcu_K3divider_23,         /**< \brief K3-Divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   451      IfxScuCcu_K3divider_24,         /**< \brief K3-Divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   452      IfxScuCcu_K3divider_25,         /**< \brief K3-Divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   453      IfxScuCcu_K3divider_26,         /**< \brief K3-Divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   454      IfxScuCcu_K3divider_27,         /**< \brief K3-Divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   455      IfxScuCcu_K3divider_28,         /**< \brief K3-Divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   456      IfxScuCcu_K3divider_29,         /**< \brief K3-Divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   457      IfxScuCcu_K3divider_30,         /**< \brief K3-Divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   458      IfxScuCcu_K3divider_31,         /**< \brief K3-Divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   459      IfxScuCcu_K3divider_32,         /**< \brief K3-Divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   460      IfxScuCcu_K3divider_33,         /**< \brief K3-Divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   461      IfxScuCcu_K3divider_34,         /**< \brief K3-Divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   462      IfxScuCcu_K3divider_35,         /**< \brief K3-Divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   463      IfxScuCcu_K3divider_36,         /**< \brief K3-Divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   464      IfxScuCcu_K3divider_37,         /**< \brief K3-Divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   465      IfxScuCcu_K3divider_38,         /**< \brief K3-Divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   466      IfxScuCcu_K3divider_39,         /**< \brief K3-Divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   467      IfxScuCcu_K3divider_40,         /**< \brief K3-Divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   468      IfxScuCcu_K3divider_41,         /**< \brief K3-Divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   469      IfxScuCcu_K3divider_42,         /**< \brief K3-Divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   470      IfxScuCcu_K3divider_43,         /**< \brief K3-Divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   471      IfxScuCcu_K3divider_44,         /**< \brief K3-Divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   472      IfxScuCcu_K3divider_45,         /**< \brief K3-Divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   473      IfxScuCcu_K3divider_46,         /**< \brief K3-Divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   474      IfxScuCcu_K3divider_47,         /**< \brief K3-Divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   475      IfxScuCcu_K3divider_48,         /**< \brief K3-Divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   476      IfxScuCcu_K3divider_49,         /**< \brief K3-Divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   477      IfxScuCcu_K3divider_50,         /**< \brief K3-Divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   478      IfxScuCcu_K3divider_51,         /**< \brief K3-Divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   479      IfxScuCcu_K3divider_52,         /**< \brief K3-Divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   480      IfxScuCcu_K3divider_53,         /**< \brief K3-Divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   481      IfxScuCcu_K3divider_54,         /**< \brief K3-Divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   482      IfxScuCcu_K3divider_55,         /**< \brief K3-Divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   483      IfxScuCcu_K3divider_56,         /**< \brief K3-Divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   484      IfxScuCcu_K3divider_57,         /**< \brief K3-Divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   485      IfxScuCcu_K3divider_58,         /**< \brief K3-Divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   486      IfxScuCcu_K3divider_59,         /**< \brief K3-Divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   487      IfxScuCcu_K3divider_60,         /**< \brief K3-Divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   488      IfxScuCcu_K3divider_61,         /**< \brief K3-Divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   489      IfxScuCcu_K3divider_62,         /**< \brief K3-Divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   490      IfxScuCcu_K3divider_63,         /**< \brief K3-Divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   491      IfxScuCcu_K3divider_64,         /**< \brief K3-Divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   492      IfxScuCcu_K3divider_65,         /**< \brief K3-Divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   493      IfxScuCcu_K3divider_66,         /**< \brief K3-Divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   494      IfxScuCcu_K3divider_67,         /**< \brief K3-Divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   495      IfxScuCcu_K3divider_68,         /**< \brief K3-Divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   496      IfxScuCcu_K3divider_69,         /**< \brief K3-Divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   497      IfxScuCcu_K3divider_70,         /**< \brief K3-Divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   498      IfxScuCcu_K3divider_71,         /**< \brief K3-Divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   499      IfxScuCcu_K3divider_72,         /**< \brief K3-Divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   500      IfxScuCcu_K3divider_73,         /**< \brief K3-Divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   501      IfxScuCcu_K3divider_74,         /**< \brief K3-Divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   502      IfxScuCcu_K3divider_75,         /**< \brief K3-Divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   503      IfxScuCcu_K3divider_76,         /**< \brief K3-Divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   504      IfxScuCcu_K3divider_77,         /**< \brief K3-Divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   505      IfxScuCcu_K3divider_78,         /**< \brief K3-Divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   506      IfxScuCcu_K3divider_79,         /**< \brief K3-Divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   507      IfxScuCcu_K3divider_80,         /**< \brief K3-Divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   508      IfxScuCcu_K3divider_81,         /**< \brief K3-Divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   509      IfxScuCcu_K3divider_82,         /**< \brief K3-Divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   510      IfxScuCcu_K3divider_83,         /**< \brief K3-Divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   511      IfxScuCcu_K3divider_84,         /**< \brief K3-Divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   512      IfxScuCcu_K3divider_85,         /**< \brief K3-Divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   513      IfxScuCcu_K3divider_86,         /**< \brief K3-Divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   514      IfxScuCcu_K3divider_87,         /**< \brief K3-Divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   515      IfxScuCcu_K3divider_88,         /**< \brief K3-Divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   516      IfxScuCcu_K3divider_89,         /**< \brief K3-Divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   517      IfxScuCcu_K3divider_90,         /**< \brief K3-Divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   518      IfxScuCcu_K3divider_91,         /**< \brief K3-Divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   519      IfxScuCcu_K3divider_92,         /**< \brief K3-Divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   520      IfxScuCcu_K3divider_93,         /**< \brief K3-Divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   521      IfxScuCcu_K3divider_94,         /**< \brief K3-Divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   522      IfxScuCcu_K3divider_95,         /**< \brief K3-Divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   523      IfxScuCcu_K3divider_96,         /**< \brief K3-Divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   524      IfxScuCcu_K3divider_97,         /**< \brief K3-Divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   525      IfxScuCcu_K3divider_98,         /**< \brief K3-Divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   526      IfxScuCcu_K3divider_99,         /**< \brief K3-Divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   527      IfxScuCcu_K3divider_100,        /**< \brief K3-Divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   528      IfxScuCcu_K3divider_101,        /**< \brief K3-Divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   529      IfxScuCcu_K3divider_102,        /**< \brief K3-Divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   530      IfxScuCcu_K3divider_103,        /**< \brief K3-Divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   531      IfxScuCcu_K3divider_104,        /**< \brief K3-Divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   532      IfxScuCcu_K3divider_105,        /**< \brief K3-Divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   533      IfxScuCcu_K3divider_106,        /**< \brief K3-Divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   534      IfxScuCcu_K3divider_107,        /**< \brief K3-Divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   535      IfxScuCcu_K3divider_108,        /**< \brief K3-Divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   536      IfxScuCcu_K3divider_109,        /**< \brief K3-Divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   537      IfxScuCcu_K3divider_110,        /**< \brief K3-Divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   538      IfxScuCcu_K3divider_111,        /**< \brief K3-Divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   539      IfxScuCcu_K3divider_112,        /**< \brief K3-Divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   540      IfxScuCcu_K3divider_113,        /**< \brief K3-Divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   541      IfxScuCcu_K3divider_114,        /**< \brief K3-Divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   542      IfxScuCcu_K3divider_115,        /**< \brief K3-Divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   543      IfxScuCcu_K3divider_116,        /**< \brief K3-Divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   544      IfxScuCcu_K3divider_117,        /**< \brief K3-Divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   545      IfxScuCcu_K3divider_118,        /**< \brief K3-Divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   546      IfxScuCcu_K3divider_119,        /**< \brief K3-Divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   547      IfxScuCcu_K3divider_120,        /**< \brief K3-Divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   548      IfxScuCcu_K3divider_121,        /**< \brief K3-Divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   549      IfxScuCcu_K3divider_122,        /**< \brief K3-Divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   550      IfxScuCcu_K3divider_123,        /**< \brief K3-Divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   551      IfxScuCcu_K3divider_124,        /**< \brief K3-Divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   552      IfxScuCcu_K3divider_125,        /**< \brief K3-Divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   553      IfxScuCcu_K3divider_126,        /**< \brief K3-Divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   554      IfxScuCcu_K3divider_127,        /**< \brief K3-Divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   555      IfxScuCcu_K3divider_128         /**< \brief K3-Divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   556  } IfxScuCcu_K3divider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   557  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   558  /** \brief MODULE_SCU.PLLCON0.B.NDIV, specifies the N-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   559   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   560  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   561  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   562      IfxScuCcu_Ndivider_1 = 0,      /**< \brief  N-divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   563      IfxScuCcu_Ndivider_2,          /**< \brief  N-divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   564      IfxScuCcu_Ndivider_3,          /**< \brief  N-divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   565      IfxScuCcu_Ndivider_4,          /**< \brief  N-divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   566      IfxScuCcu_Ndivider_5,          /**< \brief  N-divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   567      IfxScuCcu_Ndivider_6,          /**< \brief  N-divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   568      IfxScuCcu_Ndivider_7,          /**< \brief  N-divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   569      IfxScuCcu_Ndivider_8,          /**< \brief  N-divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   570      IfxScuCcu_Ndivider_9,          /**< \brief  N-divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   571      IfxScuCcu_Ndivider_10,         /**< \brief  N-divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   572      IfxScuCcu_Ndivider_11,         /**< \brief  N-divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   573      IfxScuCcu_Ndivider_12,         /**< \brief  N-divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   574      IfxScuCcu_Ndivider_13,         /**< \brief  N-divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   575      IfxScuCcu_Ndivider_14,         /**< \brief  N-divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   576      IfxScuCcu_Ndivider_15,         /**< \brief  N-divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   577      IfxScuCcu_Ndivider_16,         /**< \brief  N-divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   578      IfxScuCcu_Ndivider_17,         /**< \brief  N-divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   579      IfxScuCcu_Ndivider_18,         /**< \brief  N-divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   580      IfxScuCcu_Ndivider_19,         /**< \brief  N-divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   581      IfxScuCcu_Ndivider_20,         /**< \brief  N-divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   582      IfxScuCcu_Ndivider_21,         /**< \brief  N-divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   583      IfxScuCcu_Ndivider_22,         /**< \brief  N-divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   584      IfxScuCcu_Ndivider_23,         /**< \brief  N-divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   585      IfxScuCcu_Ndivider_24,         /**< \brief  N-divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   586      IfxScuCcu_Ndivider_25,         /**< \brief  N-divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   587      IfxScuCcu_Ndivider_26,         /**< \brief  N-divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   588      IfxScuCcu_Ndivider_27,         /**< \brief  N-divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   589      IfxScuCcu_Ndivider_28,         /**< \brief  N-divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   590      IfxScuCcu_Ndivider_29,         /**< \brief  N-divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   591      IfxScuCcu_Ndivider_30,         /**< \brief  N-divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   592      IfxScuCcu_Ndivider_31,         /**< \brief  N-divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   593      IfxScuCcu_Ndivider_32,         /**< \brief  N-divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   594      IfxScuCcu_Ndivider_33,         /**< \brief  N-divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   595      IfxScuCcu_Ndivider_34,         /**< \brief  N-divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   596      IfxScuCcu_Ndivider_35,         /**< \brief  N-divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   597      IfxScuCcu_Ndivider_36,         /**< \brief  N-divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   598      IfxScuCcu_Ndivider_37,         /**< \brief  N-divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   599      IfxScuCcu_Ndivider_38,         /**< \brief  N-divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   600      IfxScuCcu_Ndivider_39,         /**< \brief  N-divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   601      IfxScuCcu_Ndivider_40,         /**< \brief  N-divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   602      IfxScuCcu_Ndivider_41,         /**< \brief  N-divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   603      IfxScuCcu_Ndivider_42,         /**< \brief  N-divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   604      IfxScuCcu_Ndivider_43,         /**< \brief  N-divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   605      IfxScuCcu_Ndivider_44,         /**< \brief  N-divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   606      IfxScuCcu_Ndivider_45,         /**< \brief  N-divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   607      IfxScuCcu_Ndivider_46,         /**< \brief  N-divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   608      IfxScuCcu_Ndivider_47,         /**< \brief  N-divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   609      IfxScuCcu_Ndivider_48,         /**< \brief  N-divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   610      IfxScuCcu_Ndivider_49,         /**< \brief  N-divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   611      IfxScuCcu_Ndivider_50,         /**< \brief  N-divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   612      IfxScuCcu_Ndivider_51,         /**< \brief  N-divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   613      IfxScuCcu_Ndivider_52,         /**< \brief  N-divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   614      IfxScuCcu_Ndivider_53,         /**< \brief  N-divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   615      IfxScuCcu_Ndivider_54,         /**< \brief  N-divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   616      IfxScuCcu_Ndivider_55,         /**< \brief  N-divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   617      IfxScuCcu_Ndivider_56,         /**< \brief  N-divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   618      IfxScuCcu_Ndivider_57,         /**< \brief  N-divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   619      IfxScuCcu_Ndivider_58,         /**< \brief  N-divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   620      IfxScuCcu_Ndivider_59,         /**< \brief  N-divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   621      IfxScuCcu_Ndivider_60,         /**< \brief  N-divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   622      IfxScuCcu_Ndivider_61,         /**< \brief  N-divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   623      IfxScuCcu_Ndivider_62,         /**< \brief  N-divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   624      IfxScuCcu_Ndivider_63,         /**< \brief  N-divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   625      IfxScuCcu_Ndivider_64,         /**< \brief  N-divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   626      IfxScuCcu_Ndivider_65,         /**< \brief  N-divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   627      IfxScuCcu_Ndivider_66,         /**< \brief  N-divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   628      IfxScuCcu_Ndivider_67,         /**< \brief  N-divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   629      IfxScuCcu_Ndivider_68,         /**< \brief  N-divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   630      IfxScuCcu_Ndivider_69,         /**< \brief  N-divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   631      IfxScuCcu_Ndivider_70,         /**< \brief  N-divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   632      IfxScuCcu_Ndivider_71,         /**< \brief  N-divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   633      IfxScuCcu_Ndivider_72,         /**< \brief  N-divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   634      IfxScuCcu_Ndivider_73,         /**< \brief  N-divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   635      IfxScuCcu_Ndivider_74,         /**< \brief  N-divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   636      IfxScuCcu_Ndivider_75,         /**< \brief  N-divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   637      IfxScuCcu_Ndivider_76,         /**< \brief  N-divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   638      IfxScuCcu_Ndivider_77,         /**< \brief  N-divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   639      IfxScuCcu_Ndivider_78,         /**< \brief  N-divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   640      IfxScuCcu_Ndivider_79,         /**< \brief  N-divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   641      IfxScuCcu_Ndivider_80,         /**< \brief  N-divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   642      IfxScuCcu_Ndivider_81,         /**< \brief  N-divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   643      IfxScuCcu_Ndivider_82,         /**< \brief  N-divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   644      IfxScuCcu_Ndivider_83,         /**< \brief  N-divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   645      IfxScuCcu_Ndivider_84,         /**< \brief  N-divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   646      IfxScuCcu_Ndivider_85,         /**< \brief  N-divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   647      IfxScuCcu_Ndivider_86,         /**< \brief  N-divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   648      IfxScuCcu_Ndivider_87,         /**< \brief  N-divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   649      IfxScuCcu_Ndivider_88,         /**< \brief  N-divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   650      IfxScuCcu_Ndivider_89,         /**< \brief  N-divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   651      IfxScuCcu_Ndivider_90,         /**< \brief  N-divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   652      IfxScuCcu_Ndivider_91,         /**< \brief  N-divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   653      IfxScuCcu_Ndivider_92,         /**< \brief  N-divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   654      IfxScuCcu_Ndivider_93,         /**< \brief  N-divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   655      IfxScuCcu_Ndivider_94,         /**< \brief  N-divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   656      IfxScuCcu_Ndivider_95,         /**< \brief  N-divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   657      IfxScuCcu_Ndivider_96,         /**< \brief  N-divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   658      IfxScuCcu_Ndivider_97,         /**< \brief  N-divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   659      IfxScuCcu_Ndivider_98,         /**< \brief  N-divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   660      IfxScuCcu_Ndivider_99,         /**< \brief  N-divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   661      IfxScuCcu_Ndivider_100,        /**< \brief  N-divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   662      IfxScuCcu_Ndivider_101,        /**< \brief  N-divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   663      IfxScuCcu_Ndivider_102,        /**< \brief  N-divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   664      IfxScuCcu_Ndivider_103,        /**< \brief  N-divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   665      IfxScuCcu_Ndivider_104,        /**< \brief  N-divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   666      IfxScuCcu_Ndivider_105,        /**< \brief  N-divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   667      IfxScuCcu_Ndivider_106,        /**< \brief  N-divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   668      IfxScuCcu_Ndivider_107,        /**< \brief  N-divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   669      IfxScuCcu_Ndivider_108,        /**< \brief  N-divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   670      IfxScuCcu_Ndivider_109,        /**< \brief  N-divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   671      IfxScuCcu_Ndivider_110,        /**< \brief  N-divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   672      IfxScuCcu_Ndivider_111,        /**< \brief  N-divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   673      IfxScuCcu_Ndivider_112,        /**< \brief  N-divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   674      IfxScuCcu_Ndivider_113,        /**< \brief  N-divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   675      IfxScuCcu_Ndivider_114,        /**< \brief  N-divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   676      IfxScuCcu_Ndivider_115,        /**< \brief  N-divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   677      IfxScuCcu_Ndivider_116,        /**< \brief  N-divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   678      IfxScuCcu_Ndivider_117,        /**< \brief  N-divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   679      IfxScuCcu_Ndivider_118,        /**< \brief  N-divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   680      IfxScuCcu_Ndivider_119,        /**< \brief  N-divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   681      IfxScuCcu_Ndivider_120,        /**< \brief  N-divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   682      IfxScuCcu_Ndivider_121,        /**< \brief  N-divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   683      IfxScuCcu_Ndivider_122,        /**< \brief  N-divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   684      IfxScuCcu_Ndivider_123,        /**< \brief  N-divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   685      IfxScuCcu_Ndivider_124,        /**< \brief  N-divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   686      IfxScuCcu_Ndivider_125,        /**< \brief  N-divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   687      IfxScuCcu_Ndivider_126,        /**< \brief  N-divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   688      IfxScuCcu_Ndivider_127,        /**< \brief  N-divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   689      IfxScuCcu_Ndivider_128         /**< \brief  N-divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   690  } IfxScuCcu_Ndivider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   691  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   692  /** \brief MODULE_SCU.PLLCON0.B.PDIV, specifies the P-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   693   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   694  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   695  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   696      IfxScuCcu_Pdivider_1 = 0,      /**< \brief  P-divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   697      IfxScuCcu_Pdivider_2,          /**< \brief  P-divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   698      IfxScuCcu_Pdivider_3,          /**< \brief  P-divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   699      IfxScuCcu_Pdivider_4,          /**< \brief  P-divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   700      IfxScuCcu_Pdivider_5,          /**< \brief  P-divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   701      IfxScuCcu_Pdivider_6,          /**< \brief  P-divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   702      IfxScuCcu_Pdivider_7,          /**< \brief  P-divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   703      IfxScuCcu_Pdivider_8,          /**< \brief  P-divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   704      IfxScuCcu_Pdivider_9,          /**< \brief  P-divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   705      IfxScuCcu_Pdivider_10,         /**< \brief  P-divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   706      IfxScuCcu_Pdivider_11,         /**< \brief  P-divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   707      IfxScuCcu_Pdivider_12,         /**< \brief  P-divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   708      IfxScuCcu_Pdivider_13,         /**< \brief  P-divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   709      IfxScuCcu_Pdivider_14,         /**< \brief  P-divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   710      IfxScuCcu_Pdivider_15,         /**< \brief  P-divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   711      IfxScuCcu_Pdivider_16          /**< \brief  P-divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   712  } IfxScuCcu_Pdivider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   713  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   714  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   715  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   716  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   717  /*-----------------------------Data Structures--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   718  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   719  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   720  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   721   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   722  /** \brief Configuration structure type for CCUCON registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   723   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   724  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   725  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   726      uint32 value;       /**< \brief CCUCON Register value to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   727      uint32 mask;        /**< \brief CCUCON Mask to select the bit fields to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   728  } IfxScuCcu_CcuconRegConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   729  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   730  /** \brief Configuration structure type for the Pll initial step.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   731   * This structure must be used to configure the P, N and K2 dividers for initial step.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   732   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   733  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   734  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   735      uint8   pDivider;        /**< \brief P divider value for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   736      uint8   nDivider;        /**< \brief N divider value for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   737      uint8   k2Initial;       /**< \brief K2 divider value for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   738      float32 waitTime;        /**< \brief Wait time for for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   739  } IfxScuCcu_InitialStepConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   740  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   741  /** \brief Configuration structure type for the Pll Steps for current jump control.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   742   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   743  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   744  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   745      uint8                          k2Step;             /**< \brief K2 divider value for this step. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   746      float32                        waitTime;           /**< \brief Wait time for for this step. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   747      IfxScuCcu_PllStepsFunctionHook hookFunction;       /**< \brief Hook function called at the end of this step. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   748  } IfxScuCcu_PllStepsConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   749  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   750  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   751  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   752  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   753   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   754  /** \brief Configuration structure type for all the CCUCON registers to configure clock distribution.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   755   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   756  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   757  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   758      IfxScuCcu_CcuconRegConfig ccucon0;       /**< \brief CCUCON0 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   759      IfxScuCcu_CcuconRegConfig ccucon1;       /**< \brief CCUCON1 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   760      IfxScuCcu_CcuconRegConfig ccucon2;       /**< \brief CCUCON2 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   761      IfxScuCcu_CcuconRegConfig ccucon5;       /**< \brief CCUCON5 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   762      IfxScuCcu_CcuconRegConfig ccucon6;       /**< \brief CCUCON6 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   763      IfxScuCcu_CcuconRegConfig ccucon7;       /**< \brief CCUCON7 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   764  } IfxScuCcu_ClockDistributionConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   765  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   766  /** \brief Configuration structure type for the Flash waitstate configuration.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   767   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   768  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   769  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   770      uint32 value;       /**< \brief FLASH.FCON Register value to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   771      uint32 mask;        /**< \brief FLASH.FCON Mask to select the bit fields to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   772  } IfxScuCcu_FlashWaitstateConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   773  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   774  /** \brief Configuration structure type for the System Pll step.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   775   * This structure must be used to configure the P, N and K1 dividers .
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   776   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   777  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   778  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   779      uint8                       numOfPllDividerSteps;       /**< \brief Number of PLL divider steps during clock throttling. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   780      IfxScuCcu_PllStepsConfig   *pllDividerStep;             /**< \brief Pointer to the array of Pll divider step configuration. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   781      IfxScuCcu_InitialStepConfig pllInitialStep;             /**< \brief Configuration of first step which is same as internal osc frequency. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   782  } IfxScuCcu_SysPllConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   783  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   784  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   785  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   786  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   787   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   788  /** \brief Configuration structure SCU module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   789   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   790  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   791  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   792      IfxScuCcu_SysPllConfig            sysPll;                         /**< \brief System PLL configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   793      IfxScuCcu_ClockDistributionConfig clockDistribution;              /**< \brief Configuration of of bus clocks and other module clock distribution. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   794      IfxScuCcu_FlashWaitstateConfig    flashFconWaitStateConfig;       /**< \brief Configuration of flash waitstate */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   795      uint32                            xtalFrequency;                  /**< \brief Xtal Frequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   796  } IfxScuCcu_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   797  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   798  /** \brief Configuration structure for E-ray PLL
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   799   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   800  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   801  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   802      IfxScuCcu_InitialStepConfig pllInitialStep;       /**< \brief Configuration of first step which is same as internal osc frequency. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   803  } IfxScuCcu_ErayPllConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   804  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   805  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   806  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   807  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Operative
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   808   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   809  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   810  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   811  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   812  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   813  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   814  /** \brief API to get EVR Oscillator frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   815   * This API returns the constant which is specific to the ScuCcu of the controller.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   816   * \return EVR Oscillator frequency (fBACK or fEVR) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   817   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   818  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   819  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   820  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   821   * This API returns the  PLL2ERAY frequency based on the K3 divider value in PLLERAYCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   822   * \return PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   823   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   824  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   825  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   826  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   827   * This API returns the  PLL2 frequency based on the K3 divider value in PLLCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   828   * \return PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   829   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   830  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   831  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   832  /** \brief Returns the clock source selection
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   833   * \return Clock source selection
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   834   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   835  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   836  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   837  /** \brief API to get STM divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   838   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   839   * \return STM frequency (fSTM) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   840   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   841  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   842  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   843  /** \brief API to get CAN divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   844   * This API returns the fCAN frequency based on the divider value in CCUCON register and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   845   * \return STM frequency (fSTM) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   846   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   847  IFX_INLINE float32 IfxScuCcu_getCanFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   848  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   849  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   850  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   851  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   852  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   853  /** \brief API to get BAUD1 divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   854   * This API returns the based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   855   * \return Baud1 frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   856   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   857  IFX_EXTERN float32 IfxScuCcu_getBaud1Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   858  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   859  /** \brief API to get BAUD2 divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   860   * This API returns the Baud2 frequency based on the divider value in CCUCON register and the fMAX.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   861   * \return Baud2 frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   862   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   863  IFX_EXTERN float32 IfxScuCcu_getBaud2Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   864  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   865  /** \brief API to get BBB divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   866   * This API returns the BBBDivider frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   867   * \return BBB frequency (fBBB) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   868   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   869  IFX_EXTERN float32 IfxScuCcu_getBbbFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   870  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   871  /** \brief This API returns the Cpu frequency based on the divider value in CCUCON register and fSource frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   872   * \param cpu CPU number for which effective fCPU is sought
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   873   * \return Cpu[x] frequency in Hz, where x is cpu number passed as parameter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   874   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   875  IFX_EXTERN float32 IfxScuCcu_getCpuFrequency(const IfxCpu_ResourceCpu cpu);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   876  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   877  /** \brief API to get FSI2 divider frequency in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   878   * This API returns the fFSI2 frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   879   * \return FSI2 frequency (fFSI2) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   880   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   881  IFX_EXTERN float32 IfxScuCcu_getFsi2Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   882  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   883  /** \brief API to get FSI divider frequency in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   884   * This API returns the fFSI based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   885   * \return FSI frequency (fFSI) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   886   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   887  IFX_EXTERN float32 IfxScuCcu_getFsiFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   888  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   889  /** \brief API to get FMAX divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   890   * This API returns the fMax frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   891   * \return Max frequency (fMAX) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   892   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   893  IFX_EXTERN float32 IfxScuCcu_getMaxFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   894  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   895  /** \brief get source frequency fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   896   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   897   * \return Module frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   898   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   899  IFX_EXTERN float32 IfxScuCcu_getModuleFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   900  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   901  /** \brief API to get Oscillator 0 frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   902   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   903   * \return Osc0 frequency (fOSC0) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   904   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   905  IFX_EXTERN float32 IfxScuCcu_getOsc0Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   906  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   907  /** \brief API to get Oscillator 0 frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   908   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   909   * \return Osc frequency (fOSC) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   910   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   911  IFX_EXTERN float32 IfxScuCcu_getOscFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   912  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   913  /** \brief API to get actual PLL (Eray) frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   914   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   915   * \return frequency of Pll Eray (fPLLERAY) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   916   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   917  IFX_EXTERN float32 IfxScuCcu_getPllErayFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   918  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   919  /** \brief API to get actual ERAY PLL Voltage Controlled Oscillator frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   920   * This API returns the based on the divider values in PLLERAYCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   921   * \return Pll (Eray) VCO frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   922   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   923  IFX_EXTERN float32 IfxScuCcu_getPllErayVcoFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   924  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   925  /** \brief API to get actual PLL output frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   926   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   927   * \return Pll (fPLL) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   928   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   929  IFX_EXTERN float32 IfxScuCcu_getPllFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   930  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   931  /** \brief API to get actual PLL Voltage Controlled Oscillator frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   932   * This API returns the based on the divider values in PLLCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   933   * \return Pll VCO frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   934   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   935  IFX_EXTERN float32 IfxScuCcu_getPllVcoFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   936  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   937  /** \brief get source frequency fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   938   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   939   * \return Effective fSOURCE in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   940   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   941  IFX_EXTERN float32 IfxScuCcu_getSourceFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   942  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   943  /** \brief API to get SPB divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   944   * This API returns the based on fSOURCE and also on Low power divider mode and/or SPBDIV divider value in CCUCON registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   945   * \return SPB frequency (fSPB) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   946   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   947  IFX_EXTERN float32 IfxScuCcu_getSpbFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   948  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   949  /** \brief API to get SRI divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   950   * This API returns the Sri frequency based on the divider values in CCUCON registers and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   951   * \return Sri frequency (fSRI) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   952   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   953  IFX_EXTERN float32 IfxScuCcu_getSriFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   954  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   955  /** \brief API to set CPU frequency (with CPU divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   956   * This API configure CPU divider values in CCUCON registers. The actual frequency is always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   957   * \param cpu CPU number for which fCPU to be configured
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   958   * \param cpuFreq Desired CPU frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   959   * \return Actual CPU[x] frequency in Hz, where x is the cpu number passed as parameter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   960   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   961  IFX_EXTERN float32 IfxScuCcu_setCpuFrequency(IfxCpu_ResourceCpu cpu, float32 cpuFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   962  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   963  /** \brief API to configure PLL2ERAY (K3 Divider for ADC clock) for desired frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   964   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   965   * \param pll2ErayFreq PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   966   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   967   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   968  IFX_EXTERN float32 IfxScuCcu_setPll2ErayFrequency(float32 pll2ErayFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   969  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   970  /** \brief API to configure PLL2 (K3 Divider for ADC clock) for desired frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   971   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   972   * \param pll2Freq PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   973   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   974   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   975  IFX_EXTERN float32 IfxScuCcu_setPll2Frequency(float32 pll2Freq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   976  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   977  /** \brief API to set SPB frequency (with SPB divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   978   * This API configure SPB divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   979   * \param spbFreq Desired SPB frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   980   * \return Actual SPB frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   981   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   982  IFX_EXTERN float32 IfxScuCcu_setSpbFrequency(float32 spbFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   983  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   984  /** \brief API to set SRI frequency (with SRI divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   985   * This API configure Sri divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   986   * \param sriFreq Sri frequency (fSRI) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   987   * \return Actual Sri frequency (fSRI) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   988   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   989  IFX_EXTERN float32 IfxScuCcu_setSriFrequency(float32 sriFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   990  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   991  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   992  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   993  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   994   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   995  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   996  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   997  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   998  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   999  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1000  /** \brief The api calculates the system PLL divider values P, N, K based on given xtal frequency and PLL frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1001   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1002   * \param fPll Desired PLL frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1003   * \return 0- Success, 1 - Failure
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1004   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1005  IFX_EXTERN boolean IfxScuCcu_calculateSysPllDividers(IfxScuCcu_Config *cfg, uint32 fPll);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1006  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1007  /** \brief API to initialize the SCU Clock Control Unit.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1008   * This API initialize the PLL with ramp steps, BUS dividers for the configuration provided by the configuration structure.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1009   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1010   * \return Error status of the ScuCcu initialization process.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1011   * \retval TRUE: If an error occurred during initialization.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1012   * \retval FALSE: If initialization was successful.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1013   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1014  IFX_EXTERN boolean IfxScuCcu_init(const IfxScuCcu_Config *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1015  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1016  /** \brief Initializes the clock configuration with default values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1017   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1018   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1019   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1020  IFX_EXTERN void IfxScuCcu_initConfig(IfxScuCcu_Config *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1021  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1022  /** \brief API to initialize the SCU Eray Pll
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1023   * This API initialize the Eray PLL for the configuration provided by the configuration structure.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1024   * \param cfg Pointer to the configuration structure of the Eray Pll
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1025   * \return Error status of the ScuCcu Eray Pll initialization process.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1026   * \retval TRUE: If an error occurred during initialization.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1027   * \retval FALSE: If initialization was successful.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1028   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1029  IFX_EXTERN boolean IfxScuCcu_initErayPll(const IfxScuCcu_ErayPllConfig *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1030  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1031  /** \brief Initializes the clock configuration with default values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1032   * \param cfg Pointer to the configuration structure of the ScuCcuEray Pll
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1033   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1034   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1035  IFX_EXTERN void IfxScuCcu_initErayPllConfig(IfxScuCcu_ErayPllConfig *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1036  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1037  /** \brief API to switch to Backup clock from the current PLL frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1038   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1039   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1040   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1041  IFX_EXTERN void IfxScuCcu_switchToBackupClock(const IfxScuCcu_Config *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1042  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1043  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1044  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1045  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1046  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1047  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1048  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1049  /** \brief API to get GTMdivider frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1050   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1051   * return GTM frequency (fGTM) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1052   * \return Gtm Frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1053   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1054  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1055  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1056  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1057  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1058  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1059  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1060  /** \brief API to set GTM frequency (with GTM divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1061   * This API configure GTM divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1062   * \param gtmFreq Desired GTM frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1063   * \return Actual GTM frequency in HZ
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1064   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1065  IFX_EXTERN float32 IfxScuCcu_setGtmFrequency(float32 gtmFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1066  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1067  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1068  /*-------------------Global Exported Variables/Constants----------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1069  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1070  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1071  /** \brief Configuration structure for SCU CCU driver.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1072   * The values of this structure are defined as # defined macros in the implementation of Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1073   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1074  IFX_EXTERN IFX_CONST IfxScuCcu_Config IfxScuCcu_defaultClockConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1075  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1076  /** \brief Configuration structure for SCU CCU driver.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1077   * The values of this structure are defined as # defined macros in the implementation of Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1078   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1079  IFX_EXTERN IFX_CONST IfxScuCcu_ErayPllConfig IfxScuCcu_defaultErayPllConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1080  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1081  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1082  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1083  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1084  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1085  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1086  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1087      return IFXSCU_EVR_OSC_FREQUENCY;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1088  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1089  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1090  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1091  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1092  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1093      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.GTMDIV;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1094  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1095  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1096  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1097  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1098  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1099      float32 pll2ErayFrequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1100  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1101      pll2ErayFrequency = IfxScuCcu_getPllErayVcoFrequency() / (SCU_PLLERAYCON1.B.K3DIV + 1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1102  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1103      return pll2ErayFrequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1104  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1105  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1106  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1107  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1108  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1109      float32 pll2Frequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1110      pll2Frequency = IfxScuCcu_getPllVcoFrequency() / (SCU_PLLCON1.B.K3DIV + 1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1111  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1112      return pll2Frequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1113  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1114  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1116  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1117  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1118      return (IfxScu_CCUCON0_CLKSEL)SCU_CCUCON0.B.CLKSEL;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1119  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1120  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1122  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1123  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1124      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.STMDIV;
	call	IfxScuCcu_getSourceFrequency
.L379:
	fcall	.cocofun_1
.L202:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   176  onst IfxStm_Timer_Config *config)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   177  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   178      boolean            result = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   179      IfxStm_Timer_Base *base   = &driver->base;
	mov	d15,#1
	ld.bu	d1,[a15]22
.L266:
	sha	d15,d15,d1
	itof	d15,d15
.L207:
	div.f	d15,d0,d15
	st.w	[a15]6,d15
.L208:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   180  
	ret
.L198:
	
__IfxStm_Timer_updateInputFrequency_function_end:
	.size	IfxStm_Timer_updateInputFrequency,__IfxStm_Timer_updateInputFrequency_function_end-IfxStm_Timer_updateInputFrequency
.L111:
	; End of function
	
	.sdecl	'.text.IfxStm_Timer..cocofun_1',code,cluster('.cocofun_1')
	.sect	'.text.IfxStm_Timer..cocofun_1'
	.align	2
; Function .cocofun_1
.L43:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     2   * \file IfxScuCcu.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     3   * \brief SCU  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     4   * \ingroup IfxLld_Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    45   * \defgroup IfxLld_Scu SCU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    46   * \addtogroup IfxLld_Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    47   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    48   * \defgroup IfxLld_ScuCcu How to use the Scu Clock driver?
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    49   * \addtogroup IfxLld_ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    50   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    51   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    52   * The Scu Clock control unit driver provides a default configuration for pll and Clock initialisation and set of peripheral clock configuration functions.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    53   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    54   * In the following sections it will be described, how to integrate the driver into the application framework.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    55   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    56   * \section IfxLld_ScuCcu_Std_Preparation Preparation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    57   * \subsection IfxLld_ScuCcu_Std_Include Include Files
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    58   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    59   * Include following header file into your C code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    60   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    61   * #include <Scu/Std/IfxScuCcu.h>
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    62   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    63   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    64   * \subsection IfxLld_ScuCcu_Std_Variables Variables
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    65   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    66   * Declare the Clock Configuration variables in your C code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    67   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    68   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    69   * // used globally
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    70   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    71   * // configuration for the PLL  steps
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    72   * static IfxScuCcu_PllStepsConfig IfxScuCcu_testPllConfigSteps[] = {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    73   *     IFXSCU_CFG_PLL_STEPS
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    74   * };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    75   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    76   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    77   * // Default configuration for the Clock Configuration
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    78   * IfxScuCcu_Config                      IfxScuCcu_testClockConfig = {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    79   *     {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    80   *        sizeof(IfxScuCcu_testPllConfigSteps) / sizeof(IfxScuCcu_PllStepsConfig),
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    81   *        (IfxScuCcu_PllStepsConfig *)IfxScuCcu_testPllConfigSteps,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    82   *        IFXSCU_CFG_PLL_INITIAL_STEP,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    83   *     },
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    84   *     IFXSCU_CFG_CLK_DISTRIBUTION,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    85   *     IFXSCU_CFG_FLASH_WAITSTATE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    86   *     IFX_CFG_SCU_XTAL_FREQUENCY
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    87   * };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    88   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    89   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    90   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    91   * \subsection IfxLld_ScuCcu_Std_Init Module Initialisation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    92   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    93   * The module initialisation can be done in the same function. Here an example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    94   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    95   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    96   *        // standard PLL & clock initialisation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    97   *         IfxScuCcu_init(&IfxScuCcu_testClockConfig);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    99   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   100   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   101   *    The PLL and clocks are now initialised based on the IFXSCU_CFG_XTAL_FREQ and  IFXSCU_CFG_PLL_FREQ values configured in Ifx_Cfg.h.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   102   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   103   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   104   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   105   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   106   * \defgroup IfxLld_Scu_Std_Ccu Ccu Basic Functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   107   * \ingroup IfxLld_Scu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   108   * \defgroup IfxLld_Scu_Std_Ccu_Ccu Clock Control Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   109   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   110   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Operative Clock Control Operative Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   111   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   112   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Configuration Clock Control Configuration Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   113   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   114   * \defgroup IfxLld_Scu_Std_Ccu_Enum Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   115   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   116   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   117  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   118  #ifndef IFXSCUCCU_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   119  #define IFXSCUCCU_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   120  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   121  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   122  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   123  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   124  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   125  #include "_Impl/IfxScu_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   126  #include "Scu/Std/IfxScuWdt.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   127  #include "Cpu/Std/IfxCpu.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   128  #include "IfxStm_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   129  #include "IfxScu_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   130  #include "IfxFlash_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   131  #include "_PinMap/IfxScu_PinMap.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   132  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   133  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   134  /*-----------------------------------Macros-----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   135  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   136  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   137  /** \brief Oscillator stability check timeout count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   138   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   139  #define IFXSCUCCU_OSC_STABLECHK_TIME (640)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   140  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   141  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   142  /*------------------------------Type Definitions------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   143  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   144  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   145  /** \brief Function pointer type for the hooks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   146   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   147   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   148  typedef void (*IfxScuCcu_PllStepsFunctionHook)(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   149  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   150  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   151  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   152  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   153  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   154  /** \addtogroup IfxLld_Scu_Std_Ccu_Enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   155   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   156  /** \brief MODULE_SCU.PLLCON1.B.K1DIV, specifies the K1-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   157   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   158  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   159  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   160      IfxScuCcu_K1divider_1 = 0,      /**< \brief K1-Divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   161      IfxScuCcu_K1divider_2,          /**< \brief K1-Divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   162      IfxScuCcu_K1divider_3,          /**< \brief K1-Divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   163      IfxScuCcu_K1divider_4,          /**< \brief K1-Divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   164      IfxScuCcu_K1divider_5,          /**< \brief K1-Divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   165      IfxScuCcu_K1divider_6,          /**< \brief K1-Divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   166      IfxScuCcu_K1divider_7,          /**< \brief K1-Divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   167      IfxScuCcu_K1divider_8,          /**< \brief K1-Divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   168      IfxScuCcu_K1divider_9,          /**< \brief K1-Divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   169      IfxScuCcu_K1divider_10,         /**< \brief K1-Divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   170      IfxScuCcu_K1divider_11,         /**< \brief K1-Divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   171      IfxScuCcu_K1divider_12,         /**< \brief K1-Divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   172      IfxScuCcu_K1divider_13,         /**< \brief K1-Divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   173      IfxScuCcu_K1divider_14,         /**< \brief K1-Divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   174      IfxScuCcu_K1divider_15,         /**< \brief K1-Divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   175      IfxScuCcu_K1divider_16,         /**< \brief K1-Divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   176      IfxScuCcu_K1divider_17,         /**< \brief K1-Divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   177      IfxScuCcu_K1divider_18,         /**< \brief K1-Divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   178      IfxScuCcu_K1divider_19,         /**< \brief K1-Divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   179      IfxScuCcu_K1divider_20,         /**< \brief K1-Divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   180      IfxScuCcu_K1divider_21,         /**< \brief K1-Divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   181      IfxScuCcu_K1divider_22,         /**< \brief K1-Divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   182      IfxScuCcu_K1divider_23,         /**< \brief K1-Divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   183      IfxScuCcu_K1divider_24,         /**< \brief K1-Divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   184      IfxScuCcu_K1divider_25,         /**< \brief K1-Divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   185      IfxScuCcu_K1divider_26,         /**< \brief K1-Divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   186      IfxScuCcu_K1divider_27,         /**< \brief K1-Divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   187      IfxScuCcu_K1divider_28,         /**< \brief K1-Divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   188      IfxScuCcu_K1divider_29,         /**< \brief K1-Divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   189      IfxScuCcu_K1divider_30,         /**< \brief K1-Divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   190      IfxScuCcu_K1divider_31,         /**< \brief K1-Divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   191      IfxScuCcu_K1divider_32,         /**< \brief K1-Divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   192      IfxScuCcu_K1divider_33,         /**< \brief K1-Divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   193      IfxScuCcu_K1divider_34,         /**< \brief K1-Divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   194      IfxScuCcu_K1divider_35,         /**< \brief K1-Divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   195      IfxScuCcu_K1divider_36,         /**< \brief K1-Divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   196      IfxScuCcu_K1divider_37,         /**< \brief K1-Divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   197      IfxScuCcu_K1divider_38,         /**< \brief K1-Divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   198      IfxScuCcu_K1divider_39,         /**< \brief K1-Divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   199      IfxScuCcu_K1divider_40,         /**< \brief K1-Divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   200      IfxScuCcu_K1divider_41,         /**< \brief K1-Divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   201      IfxScuCcu_K1divider_42,         /**< \brief K1-Divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   202      IfxScuCcu_K1divider_43,         /**< \brief K1-Divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   203      IfxScuCcu_K1divider_44,         /**< \brief K1-Divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   204      IfxScuCcu_K1divider_45,         /**< \brief K1-Divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   205      IfxScuCcu_K1divider_46,         /**< \brief K1-Divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   206      IfxScuCcu_K1divider_47,         /**< \brief K1-Divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   207      IfxScuCcu_K1divider_48,         /**< \brief K1-Divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   208      IfxScuCcu_K1divider_49,         /**< \brief K1-Divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   209      IfxScuCcu_K1divider_50,         /**< \brief K1-Divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   210      IfxScuCcu_K1divider_51,         /**< \brief K1-Divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   211      IfxScuCcu_K1divider_52,         /**< \brief K1-Divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   212      IfxScuCcu_K1divider_53,         /**< \brief K1-Divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   213      IfxScuCcu_K1divider_54,         /**< \brief K1-Divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   214      IfxScuCcu_K1divider_55,         /**< \brief K1-Divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   215      IfxScuCcu_K1divider_56,         /**< \brief K1-Divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   216      IfxScuCcu_K1divider_57,         /**< \brief K1-Divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   217      IfxScuCcu_K1divider_58,         /**< \brief K1-Divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   218      IfxScuCcu_K1divider_59,         /**< \brief K1-Divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   219      IfxScuCcu_K1divider_60,         /**< \brief K1-Divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   220      IfxScuCcu_K1divider_61,         /**< \brief K1-Divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   221      IfxScuCcu_K1divider_62,         /**< \brief K1-Divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   222      IfxScuCcu_K1divider_63,         /**< \brief K1-Divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   223      IfxScuCcu_K1divider_64,         /**< \brief K1-Divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   224      IfxScuCcu_K1divider_65,         /**< \brief K1-Divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   225      IfxScuCcu_K1divider_66,         /**< \brief K1-Divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   226      IfxScuCcu_K1divider_67,         /**< \brief K1-Divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   227      IfxScuCcu_K1divider_68,         /**< \brief K1-Divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   228      IfxScuCcu_K1divider_69,         /**< \brief K1-Divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   229      IfxScuCcu_K1divider_70,         /**< \brief K1-Divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   230      IfxScuCcu_K1divider_71,         /**< \brief K1-Divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   231      IfxScuCcu_K1divider_72,         /**< \brief K1-Divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   232      IfxScuCcu_K1divider_73,         /**< \brief K1-Divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   233      IfxScuCcu_K1divider_74,         /**< \brief K1-Divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   234      IfxScuCcu_K1divider_75,         /**< \brief K1-Divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   235      IfxScuCcu_K1divider_76,         /**< \brief K1-Divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   236      IfxScuCcu_K1divider_77,         /**< \brief K1-Divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   237      IfxScuCcu_K1divider_78,         /**< \brief K1-Divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   238      IfxScuCcu_K1divider_79,         /**< \brief K1-Divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   239      IfxScuCcu_K1divider_80,         /**< \brief K1-Divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   240      IfxScuCcu_K1divider_81,         /**< \brief K1-Divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   241      IfxScuCcu_K1divider_82,         /**< \brief K1-Divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   242      IfxScuCcu_K1divider_83,         /**< \brief K1-Divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   243      IfxScuCcu_K1divider_84,         /**< \brief K1-Divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   244      IfxScuCcu_K1divider_85,         /**< \brief K1-Divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   245      IfxScuCcu_K1divider_86,         /**< \brief K1-Divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   246      IfxScuCcu_K1divider_87,         /**< \brief K1-Divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   247      IfxScuCcu_K1divider_88,         /**< \brief K1-Divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   248      IfxScuCcu_K1divider_89,         /**< \brief K1-Divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   249      IfxScuCcu_K1divider_90,         /**< \brief K1-Divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   250      IfxScuCcu_K1divider_91,         /**< \brief K1-Divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   251      IfxScuCcu_K1divider_92,         /**< \brief K1-Divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   252      IfxScuCcu_K1divider_93,         /**< \brief K1-Divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   253      IfxScuCcu_K1divider_94,         /**< \brief K1-Divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   254      IfxScuCcu_K1divider_95,         /**< \brief K1-Divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   255      IfxScuCcu_K1divider_96,         /**< \brief K1-Divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   256      IfxScuCcu_K1divider_97,         /**< \brief K1-Divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   257      IfxScuCcu_K1divider_98,         /**< \brief K1-Divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   258      IfxScuCcu_K1divider_99,         /**< \brief K1-Divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   259      IfxScuCcu_K1divider_100,        /**< \brief K1-Divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   260      IfxScuCcu_K1divider_101,        /**< \brief K1-Divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   261      IfxScuCcu_K1divider_102,        /**< \brief K1-Divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   262      IfxScuCcu_K1divider_103,        /**< \brief K1-Divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   263      IfxScuCcu_K1divider_104,        /**< \brief K1-Divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   264      IfxScuCcu_K1divider_105,        /**< \brief K1-Divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   265      IfxScuCcu_K1divider_106,        /**< \brief K1-Divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   266      IfxScuCcu_K1divider_107,        /**< \brief K1-Divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   267      IfxScuCcu_K1divider_108,        /**< \brief K1-Divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   268      IfxScuCcu_K1divider_109,        /**< \brief K1-Divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   269      IfxScuCcu_K1divider_110,        /**< \brief K1-Divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   270      IfxScuCcu_K1divider_111,        /**< \brief K1-Divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   271      IfxScuCcu_K1divider_112,        /**< \brief K1-Divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   272      IfxScuCcu_K1divider_113,        /**< \brief K1-Divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   273      IfxScuCcu_K1divider_114,        /**< \brief K1-Divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   274      IfxScuCcu_K1divider_115,        /**< \brief K1-Divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   275      IfxScuCcu_K1divider_116,        /**< \brief K1-Divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   276      IfxScuCcu_K1divider_117,        /**< \brief K1-Divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   277      IfxScuCcu_K1divider_118,        /**< \brief K1-Divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   278      IfxScuCcu_K1divider_119,        /**< \brief K1-Divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   279      IfxScuCcu_K1divider_120,        /**< \brief K1-Divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   280      IfxScuCcu_K1divider_121,        /**< \brief K1-Divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   281      IfxScuCcu_K1divider_122,        /**< \brief K1-Divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   282      IfxScuCcu_K1divider_123,        /**< \brief K1-Divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   283      IfxScuCcu_K1divider_124,        /**< \brief K1-Divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   284      IfxScuCcu_K1divider_125,        /**< \brief K1-Divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   285      IfxScuCcu_K1divider_126,        /**< \brief K1-Divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   286      IfxScuCcu_K1divider_127,        /**< \brief K1-Divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   287      IfxScuCcu_K1divider_128         /**< \brief K1-Divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   288  } IfxScuCcu_K1divider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   289  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   290  /** \brief MODULE_SCU.PLLCON1.B.K2DIV, specifies the K2-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   292  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   294      IfxScuCcu_K2divider_1 = 0,      /**< \brief K2-Divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   295      IfxScuCcu_K2divider_2,          /**< \brief K2-Divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   296      IfxScuCcu_K2divider_3,          /**< \brief K2-Divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   297      IfxScuCcu_K2divider_4,          /**< \brief K2-Divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   298      IfxScuCcu_K2divider_5,          /**< \brief K2-Divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   299      IfxScuCcu_K2divider_6,          /**< \brief K2-Divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   300      IfxScuCcu_K2divider_7,          /**< \brief K2-Divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   301      IfxScuCcu_K2divider_8,          /**< \brief K2-Divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   302      IfxScuCcu_K2divider_9,          /**< \brief K2-Divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   303      IfxScuCcu_K2divider_10,         /**< \brief K2-Divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   304      IfxScuCcu_K2divider_11,         /**< \brief K2-Divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   305      IfxScuCcu_K2divider_12,         /**< \brief K2-Divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   306      IfxScuCcu_K2divider_13,         /**< \brief K2-Divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   307      IfxScuCcu_K2divider_14,         /**< \brief K2-Divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   308      IfxScuCcu_K2divider_15,         /**< \brief K2-Divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   309      IfxScuCcu_K2divider_16,         /**< \brief K2-Divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   310      IfxScuCcu_K2divider_17,         /**< \brief K2-Divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   311      IfxScuCcu_K2divider_18,         /**< \brief K2-Divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   312      IfxScuCcu_K2divider_19,         /**< \brief K2-Divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   313      IfxScuCcu_K2divider_20,         /**< \brief K2-Divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   314      IfxScuCcu_K2divider_21,         /**< \brief K2-Divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   315      IfxScuCcu_K2divider_22,         /**< \brief K2-Divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   316      IfxScuCcu_K2divider_23,         /**< \brief K2-Divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   317      IfxScuCcu_K2divider_24,         /**< \brief K2-Divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   318      IfxScuCcu_K2divider_25,         /**< \brief K2-Divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   319      IfxScuCcu_K2divider_26,         /**< \brief K2-Divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   320      IfxScuCcu_K2divider_27,         /**< \brief K2-Divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   321      IfxScuCcu_K2divider_28,         /**< \brief K2-Divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   322      IfxScuCcu_K2divider_29,         /**< \brief K2-Divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   323      IfxScuCcu_K2divider_30,         /**< \brief K2-Divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   324      IfxScuCcu_K2divider_31,         /**< \brief K2-Divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   325      IfxScuCcu_K2divider_32,         /**< \brief K2-Divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   326      IfxScuCcu_K2divider_33,         /**< \brief K2-Divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   327      IfxScuCcu_K2divider_34,         /**< \brief K2-Divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   328      IfxScuCcu_K2divider_35,         /**< \brief K2-Divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   329      IfxScuCcu_K2divider_36,         /**< \brief K2-Divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   330      IfxScuCcu_K2divider_37,         /**< \brief K2-Divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   331      IfxScuCcu_K2divider_38,         /**< \brief K2-Divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   332      IfxScuCcu_K2divider_39,         /**< \brief K2-Divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   333      IfxScuCcu_K2divider_40,         /**< \brief K2-Divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   334      IfxScuCcu_K2divider_41,         /**< \brief K2-Divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   335      IfxScuCcu_K2divider_42,         /**< \brief K2-Divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   336      IfxScuCcu_K2divider_43,         /**< \brief K2-Divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   337      IfxScuCcu_K2divider_44,         /**< \brief K2-Divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   338      IfxScuCcu_K2divider_45,         /**< \brief K2-Divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   339      IfxScuCcu_K2divider_46,         /**< \brief K2-Divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   340      IfxScuCcu_K2divider_47,         /**< \brief K2-Divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   341      IfxScuCcu_K2divider_48,         /**< \brief K2-Divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   342      IfxScuCcu_K2divider_49,         /**< \brief K2-Divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   343      IfxScuCcu_K2divider_50,         /**< \brief K2-Divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   344      IfxScuCcu_K2divider_51,         /**< \brief K2-Divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   345      IfxScuCcu_K2divider_52,         /**< \brief K2-Divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   346      IfxScuCcu_K2divider_53,         /**< \brief K2-Divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   347      IfxScuCcu_K2divider_54,         /**< \brief K2-Divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   348      IfxScuCcu_K2divider_55,         /**< \brief K2-Divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   349      IfxScuCcu_K2divider_56,         /**< \brief K2-Divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   350      IfxScuCcu_K2divider_57,         /**< \brief K2-Divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   351      IfxScuCcu_K2divider_58,         /**< \brief K2-Divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   352      IfxScuCcu_K2divider_59,         /**< \brief K2-Divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   353      IfxScuCcu_K2divider_60,         /**< \brief K2-Divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   354      IfxScuCcu_K2divider_61,         /**< \brief K2-Divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   355      IfxScuCcu_K2divider_62,         /**< \brief K2-Divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   356      IfxScuCcu_K2divider_63,         /**< \brief K2-Divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   357      IfxScuCcu_K2divider_64,         /**< \brief K2-Divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   358      IfxScuCcu_K2divider_65,         /**< \brief K2-Divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   359      IfxScuCcu_K2divider_66,         /**< \brief K2-Divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   360      IfxScuCcu_K2divider_67,         /**< \brief K2-Divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   361      IfxScuCcu_K2divider_68,         /**< \brief K2-Divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   362      IfxScuCcu_K2divider_69,         /**< \brief K2-Divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   363      IfxScuCcu_K2divider_70,         /**< \brief K2-Divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   364      IfxScuCcu_K2divider_71,         /**< \brief K2-Divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   365      IfxScuCcu_K2divider_72,         /**< \brief K2-Divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   366      IfxScuCcu_K2divider_73,         /**< \brief K2-Divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   367      IfxScuCcu_K2divider_74,         /**< \brief K2-Divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   368      IfxScuCcu_K2divider_75,         /**< \brief K2-Divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   369      IfxScuCcu_K2divider_76,         /**< \brief K2-Divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   370      IfxScuCcu_K2divider_77,         /**< \brief K2-Divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   371      IfxScuCcu_K2divider_78,         /**< \brief K2-Divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   372      IfxScuCcu_K2divider_79,         /**< \brief K2-Divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   373      IfxScuCcu_K2divider_80,         /**< \brief K2-Divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   374      IfxScuCcu_K2divider_81,         /**< \brief K2-Divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   375      IfxScuCcu_K2divider_82,         /**< \brief K2-Divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   376      IfxScuCcu_K2divider_83,         /**< \brief K2-Divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   377      IfxScuCcu_K2divider_84,         /**< \brief K2-Divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   378      IfxScuCcu_K2divider_85,         /**< \brief K2-Divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   379      IfxScuCcu_K2divider_86,         /**< \brief K2-Divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   380      IfxScuCcu_K2divider_87,         /**< \brief K2-Divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   381      IfxScuCcu_K2divider_88,         /**< \brief K2-Divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   382      IfxScuCcu_K2divider_89,         /**< \brief K2-Divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   383      IfxScuCcu_K2divider_90,         /**< \brief K2-Divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   384      IfxScuCcu_K2divider_91,         /**< \brief K2-Divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   385      IfxScuCcu_K2divider_92,         /**< \brief K2-Divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   386      IfxScuCcu_K2divider_93,         /**< \brief K2-Divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   387      IfxScuCcu_K2divider_94,         /**< \brief K2-Divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   388      IfxScuCcu_K2divider_95,         /**< \brief K2-Divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   389      IfxScuCcu_K2divider_96,         /**< \brief K2-Divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   390      IfxScuCcu_K2divider_97,         /**< \brief K2-Divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   391      IfxScuCcu_K2divider_98,         /**< \brief K2-Divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   392      IfxScuCcu_K2divider_99,         /**< \brief K2-Divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   393      IfxScuCcu_K2divider_100,        /**< \brief K2-Divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   394      IfxScuCcu_K2divider_101,        /**< \brief K2-Divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   395      IfxScuCcu_K2divider_102,        /**< \brief K2-Divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   396      IfxScuCcu_K2divider_103,        /**< \brief K2-Divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   397      IfxScuCcu_K2divider_104,        /**< \brief K2-Divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   398      IfxScuCcu_K2divider_105,        /**< \brief K2-Divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   399      IfxScuCcu_K2divider_106,        /**< \brief K2-Divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   400      IfxScuCcu_K2divider_107,        /**< \brief K2-Divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   401      IfxScuCcu_K2divider_108,        /**< \brief K2-Divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   402      IfxScuCcu_K2divider_109,        /**< \brief K2-Divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   403      IfxScuCcu_K2divider_110,        /**< \brief K2-Divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   404      IfxScuCcu_K2divider_111,        /**< \brief K2-Divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   405      IfxScuCcu_K2divider_112,        /**< \brief K2-Divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   406      IfxScuCcu_K2divider_113,        /**< \brief K2-Divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   407      IfxScuCcu_K2divider_114,        /**< \brief K2-Divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   408      IfxScuCcu_K2divider_115,        /**< \brief K2-Divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   409      IfxScuCcu_K2divider_116,        /**< \brief K2-Divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   410      IfxScuCcu_K2divider_117,        /**< \brief K2-Divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   411      IfxScuCcu_K2divider_118,        /**< \brief K2-Divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   412      IfxScuCcu_K2divider_119,        /**< \brief K2-Divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   413      IfxScuCcu_K2divider_120,        /**< \brief K2-Divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   414      IfxScuCcu_K2divider_121,        /**< \brief K2-Divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   415      IfxScuCcu_K2divider_122,        /**< \brief K2-Divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   416      IfxScuCcu_K2divider_123,        /**< \brief K2-Divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   417      IfxScuCcu_K2divider_124,        /**< \brief K2-Divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   418      IfxScuCcu_K2divider_125,        /**< \brief K2-Divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   419      IfxScuCcu_K2divider_126,        /**< \brief K2-Divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   420      IfxScuCcu_K2divider_127,        /**< \brief K2-Divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   421      IfxScuCcu_K2divider_128         /**< \brief K2-Divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   422  } IfxScuCcu_K2divider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   424  /** \brief MODULE_SCU.PLLCON1.B.K3DIV, specifies the K3-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   425   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   426  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   427  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   428      IfxScuCcu_K3divider_1 = 0,      /**< \brief K3-Divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   429      IfxScuCcu_K3divider_2,          /**< \brief K3-Divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   430      IfxScuCcu_K3divider_3,          /**< \brief K3-Divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   431      IfxScuCcu_K3divider_4,          /**< \brief K3-Divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   432      IfxScuCcu_K3divider_5,          /**< \brief K3-Divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   433      IfxScuCcu_K3divider_6,          /**< \brief K3-Divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   434      IfxScuCcu_K3divider_7,          /**< \brief K3-Divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   435      IfxScuCcu_K3divider_8,          /**< \brief K3-Divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   436      IfxScuCcu_K3divider_9,          /**< \brief K3-Divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   437      IfxScuCcu_K3divider_10,         /**< \brief K3-Divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   438      IfxScuCcu_K3divider_11,         /**< \brief K3-Divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   439      IfxScuCcu_K3divider_12,         /**< \brief K3-Divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   440      IfxScuCcu_K3divider_13,         /**< \brief K3-Divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   441      IfxScuCcu_K3divider_14,         /**< \brief K3-Divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   442      IfxScuCcu_K3divider_15,         /**< \brief K3-Divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   443      IfxScuCcu_K3divider_16,         /**< \brief K3-Divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   444      IfxScuCcu_K3divider_17,         /**< \brief K3-Divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   445      IfxScuCcu_K3divider_18,         /**< \brief K3-Divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   446      IfxScuCcu_K3divider_19,         /**< \brief K3-Divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   447      IfxScuCcu_K3divider_20,         /**< \brief K3-Divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   448      IfxScuCcu_K3divider_21,         /**< \brief K3-Divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   449      IfxScuCcu_K3divider_22,         /**< \brief K3-Divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   450      IfxScuCcu_K3divider_23,         /**< \brief K3-Divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   451      IfxScuCcu_K3divider_24,         /**< \brief K3-Divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   452      IfxScuCcu_K3divider_25,         /**< \brief K3-Divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   453      IfxScuCcu_K3divider_26,         /**< \brief K3-Divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   454      IfxScuCcu_K3divider_27,         /**< \brief K3-Divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   455      IfxScuCcu_K3divider_28,         /**< \brief K3-Divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   456      IfxScuCcu_K3divider_29,         /**< \brief K3-Divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   457      IfxScuCcu_K3divider_30,         /**< \brief K3-Divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   458      IfxScuCcu_K3divider_31,         /**< \brief K3-Divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   459      IfxScuCcu_K3divider_32,         /**< \brief K3-Divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   460      IfxScuCcu_K3divider_33,         /**< \brief K3-Divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   461      IfxScuCcu_K3divider_34,         /**< \brief K3-Divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   462      IfxScuCcu_K3divider_35,         /**< \brief K3-Divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   463      IfxScuCcu_K3divider_36,         /**< \brief K3-Divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   464      IfxScuCcu_K3divider_37,         /**< \brief K3-Divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   465      IfxScuCcu_K3divider_38,         /**< \brief K3-Divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   466      IfxScuCcu_K3divider_39,         /**< \brief K3-Divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   467      IfxScuCcu_K3divider_40,         /**< \brief K3-Divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   468      IfxScuCcu_K3divider_41,         /**< \brief K3-Divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   469      IfxScuCcu_K3divider_42,         /**< \brief K3-Divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   470      IfxScuCcu_K3divider_43,         /**< \brief K3-Divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   471      IfxScuCcu_K3divider_44,         /**< \brief K3-Divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   472      IfxScuCcu_K3divider_45,         /**< \brief K3-Divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   473      IfxScuCcu_K3divider_46,         /**< \brief K3-Divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   474      IfxScuCcu_K3divider_47,         /**< \brief K3-Divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   475      IfxScuCcu_K3divider_48,         /**< \brief K3-Divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   476      IfxScuCcu_K3divider_49,         /**< \brief K3-Divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   477      IfxScuCcu_K3divider_50,         /**< \brief K3-Divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   478      IfxScuCcu_K3divider_51,         /**< \brief K3-Divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   479      IfxScuCcu_K3divider_52,         /**< \brief K3-Divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   480      IfxScuCcu_K3divider_53,         /**< \brief K3-Divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   481      IfxScuCcu_K3divider_54,         /**< \brief K3-Divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   482      IfxScuCcu_K3divider_55,         /**< \brief K3-Divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   483      IfxScuCcu_K3divider_56,         /**< \brief K3-Divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   484      IfxScuCcu_K3divider_57,         /**< \brief K3-Divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   485      IfxScuCcu_K3divider_58,         /**< \brief K3-Divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   486      IfxScuCcu_K3divider_59,         /**< \brief K3-Divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   487      IfxScuCcu_K3divider_60,         /**< \brief K3-Divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   488      IfxScuCcu_K3divider_61,         /**< \brief K3-Divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   489      IfxScuCcu_K3divider_62,         /**< \brief K3-Divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   490      IfxScuCcu_K3divider_63,         /**< \brief K3-Divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   491      IfxScuCcu_K3divider_64,         /**< \brief K3-Divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   492      IfxScuCcu_K3divider_65,         /**< \brief K3-Divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   493      IfxScuCcu_K3divider_66,         /**< \brief K3-Divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   494      IfxScuCcu_K3divider_67,         /**< \brief K3-Divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   495      IfxScuCcu_K3divider_68,         /**< \brief K3-Divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   496      IfxScuCcu_K3divider_69,         /**< \brief K3-Divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   497      IfxScuCcu_K3divider_70,         /**< \brief K3-Divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   498      IfxScuCcu_K3divider_71,         /**< \brief K3-Divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   499      IfxScuCcu_K3divider_72,         /**< \brief K3-Divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   500      IfxScuCcu_K3divider_73,         /**< \brief K3-Divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   501      IfxScuCcu_K3divider_74,         /**< \brief K3-Divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   502      IfxScuCcu_K3divider_75,         /**< \brief K3-Divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   503      IfxScuCcu_K3divider_76,         /**< \brief K3-Divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   504      IfxScuCcu_K3divider_77,         /**< \brief K3-Divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   505      IfxScuCcu_K3divider_78,         /**< \brief K3-Divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   506      IfxScuCcu_K3divider_79,         /**< \brief K3-Divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   507      IfxScuCcu_K3divider_80,         /**< \brief K3-Divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   508      IfxScuCcu_K3divider_81,         /**< \brief K3-Divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   509      IfxScuCcu_K3divider_82,         /**< \brief K3-Divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   510      IfxScuCcu_K3divider_83,         /**< \brief K3-Divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   511      IfxScuCcu_K3divider_84,         /**< \brief K3-Divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   512      IfxScuCcu_K3divider_85,         /**< \brief K3-Divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   513      IfxScuCcu_K3divider_86,         /**< \brief K3-Divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   514      IfxScuCcu_K3divider_87,         /**< \brief K3-Divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   515      IfxScuCcu_K3divider_88,         /**< \brief K3-Divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   516      IfxScuCcu_K3divider_89,         /**< \brief K3-Divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   517      IfxScuCcu_K3divider_90,         /**< \brief K3-Divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   518      IfxScuCcu_K3divider_91,         /**< \brief K3-Divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   519      IfxScuCcu_K3divider_92,         /**< \brief K3-Divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   520      IfxScuCcu_K3divider_93,         /**< \brief K3-Divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   521      IfxScuCcu_K3divider_94,         /**< \brief K3-Divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   522      IfxScuCcu_K3divider_95,         /**< \brief K3-Divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   523      IfxScuCcu_K3divider_96,         /**< \brief K3-Divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   524      IfxScuCcu_K3divider_97,         /**< \brief K3-Divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   525      IfxScuCcu_K3divider_98,         /**< \brief K3-Divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   526      IfxScuCcu_K3divider_99,         /**< \brief K3-Divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   527      IfxScuCcu_K3divider_100,        /**< \brief K3-Divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   528      IfxScuCcu_K3divider_101,        /**< \brief K3-Divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   529      IfxScuCcu_K3divider_102,        /**< \brief K3-Divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   530      IfxScuCcu_K3divider_103,        /**< \brief K3-Divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   531      IfxScuCcu_K3divider_104,        /**< \brief K3-Divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   532      IfxScuCcu_K3divider_105,        /**< \brief K3-Divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   533      IfxScuCcu_K3divider_106,        /**< \brief K3-Divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   534      IfxScuCcu_K3divider_107,        /**< \brief K3-Divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   535      IfxScuCcu_K3divider_108,        /**< \brief K3-Divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   536      IfxScuCcu_K3divider_109,        /**< \brief K3-Divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   537      IfxScuCcu_K3divider_110,        /**< \brief K3-Divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   538      IfxScuCcu_K3divider_111,        /**< \brief K3-Divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   539      IfxScuCcu_K3divider_112,        /**< \brief K3-Divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   540      IfxScuCcu_K3divider_113,        /**< \brief K3-Divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   541      IfxScuCcu_K3divider_114,        /**< \brief K3-Divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   542      IfxScuCcu_K3divider_115,        /**< \brief K3-Divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   543      IfxScuCcu_K3divider_116,        /**< \brief K3-Divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   544      IfxScuCcu_K3divider_117,        /**< \brief K3-Divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   545      IfxScuCcu_K3divider_118,        /**< \brief K3-Divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   546      IfxScuCcu_K3divider_119,        /**< \brief K3-Divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   547      IfxScuCcu_K3divider_120,        /**< \brief K3-Divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   548      IfxScuCcu_K3divider_121,        /**< \brief K3-Divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   549      IfxScuCcu_K3divider_122,        /**< \brief K3-Divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   550      IfxScuCcu_K3divider_123,        /**< \brief K3-Divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   551      IfxScuCcu_K3divider_124,        /**< \brief K3-Divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   552      IfxScuCcu_K3divider_125,        /**< \brief K3-Divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   553      IfxScuCcu_K3divider_126,        /**< \brief K3-Divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   554      IfxScuCcu_K3divider_127,        /**< \brief K3-Divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   555      IfxScuCcu_K3divider_128         /**< \brief K3-Divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   556  } IfxScuCcu_K3divider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   557  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   558  /** \brief MODULE_SCU.PLLCON0.B.NDIV, specifies the N-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   559   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   560  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   561  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   562      IfxScuCcu_Ndivider_1 = 0,      /**< \brief  N-divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   563      IfxScuCcu_Ndivider_2,          /**< \brief  N-divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   564      IfxScuCcu_Ndivider_3,          /**< \brief  N-divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   565      IfxScuCcu_Ndivider_4,          /**< \brief  N-divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   566      IfxScuCcu_Ndivider_5,          /**< \brief  N-divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   567      IfxScuCcu_Ndivider_6,          /**< \brief  N-divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   568      IfxScuCcu_Ndivider_7,          /**< \brief  N-divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   569      IfxScuCcu_Ndivider_8,          /**< \brief  N-divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   570      IfxScuCcu_Ndivider_9,          /**< \brief  N-divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   571      IfxScuCcu_Ndivider_10,         /**< \brief  N-divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   572      IfxScuCcu_Ndivider_11,         /**< \brief  N-divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   573      IfxScuCcu_Ndivider_12,         /**< \brief  N-divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   574      IfxScuCcu_Ndivider_13,         /**< \brief  N-divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   575      IfxScuCcu_Ndivider_14,         /**< \brief  N-divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   576      IfxScuCcu_Ndivider_15,         /**< \brief  N-divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   577      IfxScuCcu_Ndivider_16,         /**< \brief  N-divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   578      IfxScuCcu_Ndivider_17,         /**< \brief  N-divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   579      IfxScuCcu_Ndivider_18,         /**< \brief  N-divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   580      IfxScuCcu_Ndivider_19,         /**< \brief  N-divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   581      IfxScuCcu_Ndivider_20,         /**< \brief  N-divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   582      IfxScuCcu_Ndivider_21,         /**< \brief  N-divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   583      IfxScuCcu_Ndivider_22,         /**< \brief  N-divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   584      IfxScuCcu_Ndivider_23,         /**< \brief  N-divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   585      IfxScuCcu_Ndivider_24,         /**< \brief  N-divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   586      IfxScuCcu_Ndivider_25,         /**< \brief  N-divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   587      IfxScuCcu_Ndivider_26,         /**< \brief  N-divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   588      IfxScuCcu_Ndivider_27,         /**< \brief  N-divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   589      IfxScuCcu_Ndivider_28,         /**< \brief  N-divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   590      IfxScuCcu_Ndivider_29,         /**< \brief  N-divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   591      IfxScuCcu_Ndivider_30,         /**< \brief  N-divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   592      IfxScuCcu_Ndivider_31,         /**< \brief  N-divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   593      IfxScuCcu_Ndivider_32,         /**< \brief  N-divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   594      IfxScuCcu_Ndivider_33,         /**< \brief  N-divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   595      IfxScuCcu_Ndivider_34,         /**< \brief  N-divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   596      IfxScuCcu_Ndivider_35,         /**< \brief  N-divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   597      IfxScuCcu_Ndivider_36,         /**< \brief  N-divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   598      IfxScuCcu_Ndivider_37,         /**< \brief  N-divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   599      IfxScuCcu_Ndivider_38,         /**< \brief  N-divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   600      IfxScuCcu_Ndivider_39,         /**< \brief  N-divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   601      IfxScuCcu_Ndivider_40,         /**< \brief  N-divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   602      IfxScuCcu_Ndivider_41,         /**< \brief  N-divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   603      IfxScuCcu_Ndivider_42,         /**< \brief  N-divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   604      IfxScuCcu_Ndivider_43,         /**< \brief  N-divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   605      IfxScuCcu_Ndivider_44,         /**< \brief  N-divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   606      IfxScuCcu_Ndivider_45,         /**< \brief  N-divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   607      IfxScuCcu_Ndivider_46,         /**< \brief  N-divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   608      IfxScuCcu_Ndivider_47,         /**< \brief  N-divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   609      IfxScuCcu_Ndivider_48,         /**< \brief  N-divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   610      IfxScuCcu_Ndivider_49,         /**< \brief  N-divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   611      IfxScuCcu_Ndivider_50,         /**< \brief  N-divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   612      IfxScuCcu_Ndivider_51,         /**< \brief  N-divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   613      IfxScuCcu_Ndivider_52,         /**< \brief  N-divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   614      IfxScuCcu_Ndivider_53,         /**< \brief  N-divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   615      IfxScuCcu_Ndivider_54,         /**< \brief  N-divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   616      IfxScuCcu_Ndivider_55,         /**< \brief  N-divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   617      IfxScuCcu_Ndivider_56,         /**< \brief  N-divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   618      IfxScuCcu_Ndivider_57,         /**< \brief  N-divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   619      IfxScuCcu_Ndivider_58,         /**< \brief  N-divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   620      IfxScuCcu_Ndivider_59,         /**< \brief  N-divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   621      IfxScuCcu_Ndivider_60,         /**< \brief  N-divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   622      IfxScuCcu_Ndivider_61,         /**< \brief  N-divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   623      IfxScuCcu_Ndivider_62,         /**< \brief  N-divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   624      IfxScuCcu_Ndivider_63,         /**< \brief  N-divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   625      IfxScuCcu_Ndivider_64,         /**< \brief  N-divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   626      IfxScuCcu_Ndivider_65,         /**< \brief  N-divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   627      IfxScuCcu_Ndivider_66,         /**< \brief  N-divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   628      IfxScuCcu_Ndivider_67,         /**< \brief  N-divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   629      IfxScuCcu_Ndivider_68,         /**< \brief  N-divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   630      IfxScuCcu_Ndivider_69,         /**< \brief  N-divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   631      IfxScuCcu_Ndivider_70,         /**< \brief  N-divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   632      IfxScuCcu_Ndivider_71,         /**< \brief  N-divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   633      IfxScuCcu_Ndivider_72,         /**< \brief  N-divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   634      IfxScuCcu_Ndivider_73,         /**< \brief  N-divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   635      IfxScuCcu_Ndivider_74,         /**< \brief  N-divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   636      IfxScuCcu_Ndivider_75,         /**< \brief  N-divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   637      IfxScuCcu_Ndivider_76,         /**< \brief  N-divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   638      IfxScuCcu_Ndivider_77,         /**< \brief  N-divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   639      IfxScuCcu_Ndivider_78,         /**< \brief  N-divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   640      IfxScuCcu_Ndivider_79,         /**< \brief  N-divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   641      IfxScuCcu_Ndivider_80,         /**< \brief  N-divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   642      IfxScuCcu_Ndivider_81,         /**< \brief  N-divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   643      IfxScuCcu_Ndivider_82,         /**< \brief  N-divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   644      IfxScuCcu_Ndivider_83,         /**< \brief  N-divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   645      IfxScuCcu_Ndivider_84,         /**< \brief  N-divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   646      IfxScuCcu_Ndivider_85,         /**< \brief  N-divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   647      IfxScuCcu_Ndivider_86,         /**< \brief  N-divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   648      IfxScuCcu_Ndivider_87,         /**< \brief  N-divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   649      IfxScuCcu_Ndivider_88,         /**< \brief  N-divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   650      IfxScuCcu_Ndivider_89,         /**< \brief  N-divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   651      IfxScuCcu_Ndivider_90,         /**< \brief  N-divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   652      IfxScuCcu_Ndivider_91,         /**< \brief  N-divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   653      IfxScuCcu_Ndivider_92,         /**< \brief  N-divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   654      IfxScuCcu_Ndivider_93,         /**< \brief  N-divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   655      IfxScuCcu_Ndivider_94,         /**< \brief  N-divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   656      IfxScuCcu_Ndivider_95,         /**< \brief  N-divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   657      IfxScuCcu_Ndivider_96,         /**< \brief  N-divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   658      IfxScuCcu_Ndivider_97,         /**< \brief  N-divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   659      IfxScuCcu_Ndivider_98,         /**< \brief  N-divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   660      IfxScuCcu_Ndivider_99,         /**< \brief  N-divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   661      IfxScuCcu_Ndivider_100,        /**< \brief  N-divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   662      IfxScuCcu_Ndivider_101,        /**< \brief  N-divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   663      IfxScuCcu_Ndivider_102,        /**< \brief  N-divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   664      IfxScuCcu_Ndivider_103,        /**< \brief  N-divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   665      IfxScuCcu_Ndivider_104,        /**< \brief  N-divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   666      IfxScuCcu_Ndivider_105,        /**< \brief  N-divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   667      IfxScuCcu_Ndivider_106,        /**< \brief  N-divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   668      IfxScuCcu_Ndivider_107,        /**< \brief  N-divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   669      IfxScuCcu_Ndivider_108,        /**< \brief  N-divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   670      IfxScuCcu_Ndivider_109,        /**< \brief  N-divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   671      IfxScuCcu_Ndivider_110,        /**< \brief  N-divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   672      IfxScuCcu_Ndivider_111,        /**< \brief  N-divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   673      IfxScuCcu_Ndivider_112,        /**< \brief  N-divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   674      IfxScuCcu_Ndivider_113,        /**< \brief  N-divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   675      IfxScuCcu_Ndivider_114,        /**< \brief  N-divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   676      IfxScuCcu_Ndivider_115,        /**< \brief  N-divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   677      IfxScuCcu_Ndivider_116,        /**< \brief  N-divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   678      IfxScuCcu_Ndivider_117,        /**< \brief  N-divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   679      IfxScuCcu_Ndivider_118,        /**< \brief  N-divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   680      IfxScuCcu_Ndivider_119,        /**< \brief  N-divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   681      IfxScuCcu_Ndivider_120,        /**< \brief  N-divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   682      IfxScuCcu_Ndivider_121,        /**< \brief  N-divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   683      IfxScuCcu_Ndivider_122,        /**< \brief  N-divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   684      IfxScuCcu_Ndivider_123,        /**< \brief  N-divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   685      IfxScuCcu_Ndivider_124,        /**< \brief  N-divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   686      IfxScuCcu_Ndivider_125,        /**< \brief  N-divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   687      IfxScuCcu_Ndivider_126,        /**< \brief  N-divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   688      IfxScuCcu_Ndivider_127,        /**< \brief  N-divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   689      IfxScuCcu_Ndivider_128         /**< \brief  N-divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   690  } IfxScuCcu_Ndivider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   691  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   692  /** \brief MODULE_SCU.PLLCON0.B.PDIV, specifies the P-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   693   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   694  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   695  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   696      IfxScuCcu_Pdivider_1 = 0,      /**< \brief  P-divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   697      IfxScuCcu_Pdivider_2,          /**< \brief  P-divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   698      IfxScuCcu_Pdivider_3,          /**< \brief  P-divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   699      IfxScuCcu_Pdivider_4,          /**< \brief  P-divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   700      IfxScuCcu_Pdivider_5,          /**< \brief  P-divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   701      IfxScuCcu_Pdivider_6,          /**< \brief  P-divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   702      IfxScuCcu_Pdivider_7,          /**< \brief  P-divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   703      IfxScuCcu_Pdivider_8,          /**< \brief  P-divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   704      IfxScuCcu_Pdivider_9,          /**< \brief  P-divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   705      IfxScuCcu_Pdivider_10,         /**< \brief  P-divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   706      IfxScuCcu_Pdivider_11,         /**< \brief  P-divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   707      IfxScuCcu_Pdivider_12,         /**< \brief  P-divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   708      IfxScuCcu_Pdivider_13,         /**< \brief  P-divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   709      IfxScuCcu_Pdivider_14,         /**< \brief  P-divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   710      IfxScuCcu_Pdivider_15,         /**< \brief  P-divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   711      IfxScuCcu_Pdivider_16          /**< \brief  P-divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   712  } IfxScuCcu_Pdivider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   713  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   714  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   715  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   716  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   717  /*-----------------------------Data Structures--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   718  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   719  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   720  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   721   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   722  /** \brief Configuration structure type for CCUCON registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   723   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   724  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   725  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   726      uint32 value;       /**< \brief CCUCON Register value to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   727      uint32 mask;        /**< \brief CCUCON Mask to select the bit fields to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   728  } IfxScuCcu_CcuconRegConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   729  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   730  /** \brief Configuration structure type for the Pll initial step.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   731   * This structure must be used to configure the P, N and K2 dividers for initial step.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   732   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   733  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   734  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   735      uint8   pDivider;        /**< \brief P divider value for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   736      uint8   nDivider;        /**< \brief N divider value for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   737      uint8   k2Initial;       /**< \brief K2 divider value for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   738      float32 waitTime;        /**< \brief Wait time for for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   739  } IfxScuCcu_InitialStepConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   740  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   741  /** \brief Configuration structure type for the Pll Steps for current jump control.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   742   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   743  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   744  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   745      uint8                          k2Step;             /**< \brief K2 divider value for this step. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   746      float32                        waitTime;           /**< \brief Wait time for for this step. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   747      IfxScuCcu_PllStepsFunctionHook hookFunction;       /**< \brief Hook function called at the end of this step. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   748  } IfxScuCcu_PllStepsConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   749  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   750  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   751  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   752  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   753   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   754  /** \brief Configuration structure type for all the CCUCON registers to configure clock distribution.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   755   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   756  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   757  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   758      IfxScuCcu_CcuconRegConfig ccucon0;       /**< \brief CCUCON0 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   759      IfxScuCcu_CcuconRegConfig ccucon1;       /**< \brief CCUCON1 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   760      IfxScuCcu_CcuconRegConfig ccucon2;       /**< \brief CCUCON2 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   761      IfxScuCcu_CcuconRegConfig ccucon5;       /**< \brief CCUCON5 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   762      IfxScuCcu_CcuconRegConfig ccucon6;       /**< \brief CCUCON6 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   763      IfxScuCcu_CcuconRegConfig ccucon7;       /**< \brief CCUCON7 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   764  } IfxScuCcu_ClockDistributionConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   765  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   766  /** \brief Configuration structure type for the Flash waitstate configuration.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   767   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   768  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   769  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   770      uint32 value;       /**< \brief FLASH.FCON Register value to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   771      uint32 mask;        /**< \brief FLASH.FCON Mask to select the bit fields to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   772  } IfxScuCcu_FlashWaitstateConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   773  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   774  /** \brief Configuration structure type for the System Pll step.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   775   * This structure must be used to configure the P, N and K1 dividers .
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   776   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   777  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   778  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   779      uint8                       numOfPllDividerSteps;       /**< \brief Number of PLL divider steps during clock throttling. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   780      IfxScuCcu_PllStepsConfig   *pllDividerStep;             /**< \brief Pointer to the array of Pll divider step configuration. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   781      IfxScuCcu_InitialStepConfig pllInitialStep;             /**< \brief Configuration of first step which is same as internal osc frequency. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   782  } IfxScuCcu_SysPllConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   783  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   784  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   785  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   786  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   787   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   788  /** \brief Configuration structure SCU module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   789   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   790  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   791  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   792      IfxScuCcu_SysPllConfig            sysPll;                         /**< \brief System PLL configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   793      IfxScuCcu_ClockDistributionConfig clockDistribution;              /**< \brief Configuration of of bus clocks and other module clock distribution. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   794      IfxScuCcu_FlashWaitstateConfig    flashFconWaitStateConfig;       /**< \brief Configuration of flash waitstate */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   795      uint32                            xtalFrequency;                  /**< \brief Xtal Frequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   796  } IfxScuCcu_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   797  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   798  /** \brief Configuration structure for E-ray PLL
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   799   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   800  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   801  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   802      IfxScuCcu_InitialStepConfig pllInitialStep;       /**< \brief Configuration of first step which is same as internal osc frequency. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   803  } IfxScuCcu_ErayPllConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   804  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   805  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   806  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   807  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Operative
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   808   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   809  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   810  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   811  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   812  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   813  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   814  /** \brief API to get EVR Oscillator frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   815   * This API returns the constant which is specific to the ScuCcu of the controller.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   816   * \return EVR Oscillator frequency (fBACK or fEVR) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   817   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   818  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   819  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   820  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   821   * This API returns the  PLL2ERAY frequency based on the K3 divider value in PLLERAYCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   822   * \return PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   823   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   824  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   825  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   826  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   827   * This API returns the  PLL2 frequency based on the K3 divider value in PLLCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   828   * \return PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   829   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   830  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   831  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   832  /** \brief Returns the clock source selection
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   833   * \return Clock source selection
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   834   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   835  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   836  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   837  /** \brief API to get STM divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   838   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   839   * \return STM frequency (fSTM) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   840   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   841  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   842  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   843  /** \brief API to get CAN divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   844   * This API returns the fCAN frequency based on the divider value in CCUCON register and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   845   * \return STM frequency (fSTM) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   846   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   847  IFX_INLINE float32 IfxScuCcu_getCanFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   848  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   849  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   850  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   851  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   852  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   853  /** \brief API to get BAUD1 divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   854   * This API returns the based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   855   * \return Baud1 frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   856   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   857  IFX_EXTERN float32 IfxScuCcu_getBaud1Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   858  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   859  /** \brief API to get BAUD2 divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   860   * This API returns the Baud2 frequency based on the divider value in CCUCON register and the fMAX.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   861   * \return Baud2 frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   862   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   863  IFX_EXTERN float32 IfxScuCcu_getBaud2Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   864  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   865  /** \brief API to get BBB divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   866   * This API returns the BBBDivider frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   867   * \return BBB frequency (fBBB) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   868   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   869  IFX_EXTERN float32 IfxScuCcu_getBbbFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   870  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   871  /** \brief This API returns the Cpu frequency based on the divider value in CCUCON register and fSource frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   872   * \param cpu CPU number for which effective fCPU is sought
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   873   * \return Cpu[x] frequency in Hz, where x is cpu number passed as parameter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   874   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   875  IFX_EXTERN float32 IfxScuCcu_getCpuFrequency(const IfxCpu_ResourceCpu cpu);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   876  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   877  /** \brief API to get FSI2 divider frequency in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   878   * This API returns the fFSI2 frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   879   * \return FSI2 frequency (fFSI2) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   880   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   881  IFX_EXTERN float32 IfxScuCcu_getFsi2Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   882  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   883  /** \brief API to get FSI divider frequency in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   884   * This API returns the fFSI based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   885   * \return FSI frequency (fFSI) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   886   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   887  IFX_EXTERN float32 IfxScuCcu_getFsiFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   888  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   889  /** \brief API to get FMAX divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   890   * This API returns the fMax frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   891   * \return Max frequency (fMAX) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   892   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   893  IFX_EXTERN float32 IfxScuCcu_getMaxFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   894  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   895  /** \brief get source frequency fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   896   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   897   * \return Module frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   898   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   899  IFX_EXTERN float32 IfxScuCcu_getModuleFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   900  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   901  /** \brief API to get Oscillator 0 frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   902   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   903   * \return Osc0 frequency (fOSC0) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   904   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   905  IFX_EXTERN float32 IfxScuCcu_getOsc0Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   906  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   907  /** \brief API to get Oscillator 0 frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   908   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   909   * \return Osc frequency (fOSC) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   910   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   911  IFX_EXTERN float32 IfxScuCcu_getOscFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   912  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   913  /** \brief API to get actual PLL (Eray) frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   914   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   915   * \return frequency of Pll Eray (fPLLERAY) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   916   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   917  IFX_EXTERN float32 IfxScuCcu_getPllErayFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   918  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   919  /** \brief API to get actual ERAY PLL Voltage Controlled Oscillator frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   920   * This API returns the based on the divider values in PLLERAYCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   921   * \return Pll (Eray) VCO frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   922   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   923  IFX_EXTERN float32 IfxScuCcu_getPllErayVcoFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   924  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   925  /** \brief API to get actual PLL output frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   926   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   927   * \return Pll (fPLL) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   928   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   929  IFX_EXTERN float32 IfxScuCcu_getPllFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   930  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   931  /** \brief API to get actual PLL Voltage Controlled Oscillator frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   932   * This API returns the based on the divider values in PLLCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   933   * \return Pll VCO frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   934   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   935  IFX_EXTERN float32 IfxScuCcu_getPllVcoFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   936  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   937  /** \brief get source frequency fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   938   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   939   * \return Effective fSOURCE in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   940   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   941  IFX_EXTERN float32 IfxScuCcu_getSourceFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   942  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   943  /** \brief API to get SPB divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   944   * This API returns the based on fSOURCE and also on Low power divider mode and/or SPBDIV divider value in CCUCON registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   945   * \return SPB frequency (fSPB) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   946   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   947  IFX_EXTERN float32 IfxScuCcu_getSpbFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   948  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   949  /** \brief API to get SRI divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   950   * This API returns the Sri frequency based on the divider values in CCUCON registers and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   951   * \return Sri frequency (fSRI) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   952   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   953  IFX_EXTERN float32 IfxScuCcu_getSriFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   954  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   955  /** \brief API to set CPU frequency (with CPU divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   956   * This API configure CPU divider values in CCUCON registers. The actual frequency is always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   957   * \param cpu CPU number for which fCPU to be configured
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   958   * \param cpuFreq Desired CPU frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   959   * \return Actual CPU[x] frequency in Hz, where x is the cpu number passed as parameter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   960   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   961  IFX_EXTERN float32 IfxScuCcu_setCpuFrequency(IfxCpu_ResourceCpu cpu, float32 cpuFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   962  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   963  /** \brief API to configure PLL2ERAY (K3 Divider for ADC clock) for desired frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   964   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   965   * \param pll2ErayFreq PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   966   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   967   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   968  IFX_EXTERN float32 IfxScuCcu_setPll2ErayFrequency(float32 pll2ErayFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   969  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   970  /** \brief API to configure PLL2 (K3 Divider for ADC clock) for desired frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   971   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   972   * \param pll2Freq PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   973   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   974   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   975  IFX_EXTERN float32 IfxScuCcu_setPll2Frequency(float32 pll2Freq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   976  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   977  /** \brief API to set SPB frequency (with SPB divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   978   * This API configure SPB divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   979   * \param spbFreq Desired SPB frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   980   * \return Actual SPB frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   981   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   982  IFX_EXTERN float32 IfxScuCcu_setSpbFrequency(float32 spbFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   983  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   984  /** \brief API to set SRI frequency (with SRI divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   985   * This API configure Sri divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   986   * \param sriFreq Sri frequency (fSRI) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   987   * \return Actual Sri frequency (fSRI) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   988   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   989  IFX_EXTERN float32 IfxScuCcu_setSriFrequency(float32 sriFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   990  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   991  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   992  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   993  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   994   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   995  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   996  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   997  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   998  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   999  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1000  /** \brief The api calculates the system PLL divider values P, N, K based on given xtal frequency and PLL frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1001   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1002   * \param fPll Desired PLL frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1003   * \return 0- Success, 1 - Failure
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1004   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1005  IFX_EXTERN boolean IfxScuCcu_calculateSysPllDividers(IfxScuCcu_Config *cfg, uint32 fPll);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1006  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1007  /** \brief API to initialize the SCU Clock Control Unit.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1008   * This API initialize the PLL with ramp steps, BUS dividers for the configuration provided by the configuration structure.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1009   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1010   * \return Error status of the ScuCcu initialization process.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1011   * \retval TRUE: If an error occurred during initialization.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1012   * \retval FALSE: If initialization was successful.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1013   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1014  IFX_EXTERN boolean IfxScuCcu_init(const IfxScuCcu_Config *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1015  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1016  /** \brief Initializes the clock configuration with default values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1017   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1018   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1019   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1020  IFX_EXTERN void IfxScuCcu_initConfig(IfxScuCcu_Config *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1021  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1022  /** \brief API to initialize the SCU Eray Pll
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1023   * This API initialize the Eray PLL for the configuration provided by the configuration structure.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1024   * \param cfg Pointer to the configuration structure of the Eray Pll
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1025   * \return Error status of the ScuCcu Eray Pll initialization process.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1026   * \retval TRUE: If an error occurred during initialization.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1027   * \retval FALSE: If initialization was successful.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1028   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1029  IFX_EXTERN boolean IfxScuCcu_initErayPll(const IfxScuCcu_ErayPllConfig *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1030  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1031  /** \brief Initializes the clock configuration with default values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1032   * \param cfg Pointer to the configuration structure of the ScuCcuEray Pll
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1033   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1034   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1035  IFX_EXTERN void IfxScuCcu_initErayPllConfig(IfxScuCcu_ErayPllConfig *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1036  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1037  /** \brief API to switch to Backup clock from the current PLL frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1038   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1039   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1040   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1041  IFX_EXTERN void IfxScuCcu_switchToBackupClock(const IfxScuCcu_Config *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1042  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1043  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1044  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1045  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1046  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1047  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1048  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1049  /** \brief API to get GTMdivider frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1050   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1051   * return GTM frequency (fGTM) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1052   * \return Gtm Frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1053   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1054  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1055  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1056  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1057  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1058  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1059  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1060  /** \brief API to set GTM frequency (with GTM divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1061   * This API configure GTM divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1062   * \param gtmFreq Desired GTM frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1063   * \return Actual GTM frequency in HZ
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1064   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1065  IFX_EXTERN float32 IfxScuCcu_setGtmFrequency(float32 gtmFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1066  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1067  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1068  /*-------------------Global Exported Variables/Constants----------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1069  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1070  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1071  /** \brief Configuration structure for SCU CCU driver.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1072   * The values of this structure are defined as # defined macros in the implementation of Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1073   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1074  IFX_EXTERN IFX_CONST IfxScuCcu_Config IfxScuCcu_defaultClockConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1075  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1076  /** \brief Configuration structure for SCU CCU driver.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1077   * The values of this structure are defined as # defined macros in the implementation of Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1078   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1079  IFX_EXTERN IFX_CONST IfxScuCcu_ErayPllConfig IfxScuCcu_defaultErayPllConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1080  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1081  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1082  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1083  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1084  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1085  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1086  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1087      return IFXSCU_EVR_OSC_FREQUENCY;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1088  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1089  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1090  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1091  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1092  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1093      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.GTMDIV;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1094  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1095  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1096  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1097  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1098  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1099      float32 pll2ErayFrequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1100  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1101      pll2ErayFrequency = IfxScuCcu_getPllErayVcoFrequency() / (SCU_PLLERAYCON1.B.K3DIV + 1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1102  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1103      return pll2ErayFrequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1104  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1105  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1106  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1107  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1108  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1109      float32 pll2Frequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1110      pll2Frequency = IfxScuCcu_getPllVcoFrequency() / (SCU_PLLCON1.B.K3DIV + 1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1111  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1112      return pll2Frequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1113  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1114  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1116  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1117  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1118      return (IfxScu_CCUCON0_CLKSEL)SCU_CCUCON0.B.CLKSEL;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1119  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1120  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1122  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1123  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1124      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.STMDIV;
	movh.a	a2,#61443
	ld.bu	d15,[a2]@los(0xf0036035)
	and	d15,#15
	itof	d15,d15
.L426:
	div.f	d0,d2,d15
	fret
.L126:
	; End of function
	.sdecl	'.text.IfxStm_Timer.IfxStm_Timer_init',code,cluster('IfxStm_Timer_init')
	.sect	'.text.IfxStm_Timer.IfxStm_Timer_init'
	.align	2
	
	.global	IfxStm_Timer_init

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   181  sult = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   182      IfxStm_Timer_Base *base   = &driver->base;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   183  
; Function IfxStm_Timer_init
.L45:
IfxStm_Timer_init:	.type	func
	mov.aa	a12,a5
.L267:
	mov.aa	a15,a4
.L268:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   184      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, config->base.countDir == IfxStdIf_Timer_CountDir_up); /* only this mode is supported */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   185  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   186      driver->stm          = config->stm;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   187      driver->comparator   = config->comparator;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   188  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   189      base->triggerEnabled = config->base.trigger.enabled;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   190      base->singleShot     = FALSE;
	ld.a	a2,[a12]36
.L384:
	st.a	[a15]12,a2
.L385:
	mov	d8,#1
.L269:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   191  
	ld.bu	d15,[a12]40
.L386:
	st.b	[a15]16,d15
.L387:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   192      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, config->base.trigger.enabled == FALSE); /* Trigger feature not supported */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   193      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, config->base.startOffset == 0);         /* Trigger feature not supported */
	ld.bu	d15,[a12]12
.L388:
	st.b	[a15]4,d15
.L389:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   194  
	mov	d15,#0
	st.b	[a15]11,d15
.L220:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     2   * \file IfxScuCcu.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     3   * \brief SCU  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     4   * \ingroup IfxLld_Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    45   * \defgroup IfxLld_Scu SCU
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    46   * \addtogroup IfxLld_Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    47   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    48   * \defgroup IfxLld_ScuCcu How to use the Scu Clock driver?
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    49   * \addtogroup IfxLld_ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    50   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    51   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    52   * The Scu Clock control unit driver provides a default configuration for pll and Clock initialisation and set of peripheral clock configuration functions.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    53   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    54   * In the following sections it will be described, how to integrate the driver into the application framework.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    55   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    56   * \section IfxLld_ScuCcu_Std_Preparation Preparation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    57   * \subsection IfxLld_ScuCcu_Std_Include Include Files
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    58   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    59   * Include following header file into your C code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    60   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    61   * #include <Scu/Std/IfxScuCcu.h>
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    62   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    63   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    64   * \subsection IfxLld_ScuCcu_Std_Variables Variables
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    65   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    66   * Declare the Clock Configuration variables in your C code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    67   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    68   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    69   * // used globally
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    70   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    71   * // configuration for the PLL  steps
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    72   * static IfxScuCcu_PllStepsConfig IfxScuCcu_testPllConfigSteps[] = {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    73   *     IFXSCU_CFG_PLL_STEPS
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    74   * };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    75   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    76   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    77   * // Default configuration for the Clock Configuration
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    78   * IfxScuCcu_Config                      IfxScuCcu_testClockConfig = {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    79   *     {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    80   *        sizeof(IfxScuCcu_testPllConfigSteps) / sizeof(IfxScuCcu_PllStepsConfig),
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    81   *        (IfxScuCcu_PllStepsConfig *)IfxScuCcu_testPllConfigSteps,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    82   *        IFXSCU_CFG_PLL_INITIAL_STEP,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    83   *     },
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    84   *     IFXSCU_CFG_CLK_DISTRIBUTION,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    85   *     IFXSCU_CFG_FLASH_WAITSTATE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    86   *     IFX_CFG_SCU_XTAL_FREQUENCY
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    87   * };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    88   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    89   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    90   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    91   * \subsection IfxLld_ScuCcu_Std_Init Module Initialisation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    92   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    93   * The module initialisation can be done in the same function. Here an example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    94   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    95   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    96   *        // standard PLL & clock initialisation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    97   *         IfxScuCcu_init(&IfxScuCcu_testClockConfig);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	    99   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   100   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   101   *    The PLL and clocks are now initialised based on the IFXSCU_CFG_XTAL_FREQ and  IFXSCU_CFG_PLL_FREQ values configured in Ifx_Cfg.h.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   102   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   103   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   104   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   105   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   106   * \defgroup IfxLld_Scu_Std_Ccu Ccu Basic Functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   107   * \ingroup IfxLld_Scu_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   108   * \defgroup IfxLld_Scu_Std_Ccu_Ccu Clock Control Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   109   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   110   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Operative Clock Control Operative Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   111   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   112   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Configuration Clock Control Configuration Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   113   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   114   * \defgroup IfxLld_Scu_Std_Ccu_Enum Enumerations
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   115   * \ingroup IfxLld_Scu_Std_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   116   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   117  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   118  #ifndef IFXSCUCCU_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   119  #define IFXSCUCCU_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   120  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   121  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   122  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   123  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   124  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   125  #include "_Impl/IfxScu_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   126  #include "Scu/Std/IfxScuWdt.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   127  #include "Cpu/Std/IfxCpu.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   128  #include "IfxStm_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   129  #include "IfxScu_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   130  #include "IfxFlash_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   131  #include "_PinMap/IfxScu_PinMap.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   132  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   133  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   134  /*-----------------------------------Macros-----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   135  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   136  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   137  /** \brief Oscillator stability check timeout count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   138   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   139  #define IFXSCUCCU_OSC_STABLECHK_TIME (640)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   140  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   141  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   142  /*------------------------------Type Definitions------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   143  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   144  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   145  /** \brief Function pointer type for the hooks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   146   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   147   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   148  typedef void (*IfxScuCcu_PllStepsFunctionHook)(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   149  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   150  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   151  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   152  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   153  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   154  /** \addtogroup IfxLld_Scu_Std_Ccu_Enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   155   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   156  /** \brief MODULE_SCU.PLLCON1.B.K1DIV, specifies the K1-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   157   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   158  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   159  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   160      IfxScuCcu_K1divider_1 = 0,      /**< \brief K1-Divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   161      IfxScuCcu_K1divider_2,          /**< \brief K1-Divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   162      IfxScuCcu_K1divider_3,          /**< \brief K1-Divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   163      IfxScuCcu_K1divider_4,          /**< \brief K1-Divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   164      IfxScuCcu_K1divider_5,          /**< \brief K1-Divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   165      IfxScuCcu_K1divider_6,          /**< \brief K1-Divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   166      IfxScuCcu_K1divider_7,          /**< \brief K1-Divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   167      IfxScuCcu_K1divider_8,          /**< \brief K1-Divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   168      IfxScuCcu_K1divider_9,          /**< \brief K1-Divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   169      IfxScuCcu_K1divider_10,         /**< \brief K1-Divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   170      IfxScuCcu_K1divider_11,         /**< \brief K1-Divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   171      IfxScuCcu_K1divider_12,         /**< \brief K1-Divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   172      IfxScuCcu_K1divider_13,         /**< \brief K1-Divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   173      IfxScuCcu_K1divider_14,         /**< \brief K1-Divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   174      IfxScuCcu_K1divider_15,         /**< \brief K1-Divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   175      IfxScuCcu_K1divider_16,         /**< \brief K1-Divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   176      IfxScuCcu_K1divider_17,         /**< \brief K1-Divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   177      IfxScuCcu_K1divider_18,         /**< \brief K1-Divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   178      IfxScuCcu_K1divider_19,         /**< \brief K1-Divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   179      IfxScuCcu_K1divider_20,         /**< \brief K1-Divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   180      IfxScuCcu_K1divider_21,         /**< \brief K1-Divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   181      IfxScuCcu_K1divider_22,         /**< \brief K1-Divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   182      IfxScuCcu_K1divider_23,         /**< \brief K1-Divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   183      IfxScuCcu_K1divider_24,         /**< \brief K1-Divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   184      IfxScuCcu_K1divider_25,         /**< \brief K1-Divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   185      IfxScuCcu_K1divider_26,         /**< \brief K1-Divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   186      IfxScuCcu_K1divider_27,         /**< \brief K1-Divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   187      IfxScuCcu_K1divider_28,         /**< \brief K1-Divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   188      IfxScuCcu_K1divider_29,         /**< \brief K1-Divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   189      IfxScuCcu_K1divider_30,         /**< \brief K1-Divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   190      IfxScuCcu_K1divider_31,         /**< \brief K1-Divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   191      IfxScuCcu_K1divider_32,         /**< \brief K1-Divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   192      IfxScuCcu_K1divider_33,         /**< \brief K1-Divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   193      IfxScuCcu_K1divider_34,         /**< \brief K1-Divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   194      IfxScuCcu_K1divider_35,         /**< \brief K1-Divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   195      IfxScuCcu_K1divider_36,         /**< \brief K1-Divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   196      IfxScuCcu_K1divider_37,         /**< \brief K1-Divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   197      IfxScuCcu_K1divider_38,         /**< \brief K1-Divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   198      IfxScuCcu_K1divider_39,         /**< \brief K1-Divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   199      IfxScuCcu_K1divider_40,         /**< \brief K1-Divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   200      IfxScuCcu_K1divider_41,         /**< \brief K1-Divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   201      IfxScuCcu_K1divider_42,         /**< \brief K1-Divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   202      IfxScuCcu_K1divider_43,         /**< \brief K1-Divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   203      IfxScuCcu_K1divider_44,         /**< \brief K1-Divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   204      IfxScuCcu_K1divider_45,         /**< \brief K1-Divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   205      IfxScuCcu_K1divider_46,         /**< \brief K1-Divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   206      IfxScuCcu_K1divider_47,         /**< \brief K1-Divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   207      IfxScuCcu_K1divider_48,         /**< \brief K1-Divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   208      IfxScuCcu_K1divider_49,         /**< \brief K1-Divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   209      IfxScuCcu_K1divider_50,         /**< \brief K1-Divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   210      IfxScuCcu_K1divider_51,         /**< \brief K1-Divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   211      IfxScuCcu_K1divider_52,         /**< \brief K1-Divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   212      IfxScuCcu_K1divider_53,         /**< \brief K1-Divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   213      IfxScuCcu_K1divider_54,         /**< \brief K1-Divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   214      IfxScuCcu_K1divider_55,         /**< \brief K1-Divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   215      IfxScuCcu_K1divider_56,         /**< \brief K1-Divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   216      IfxScuCcu_K1divider_57,         /**< \brief K1-Divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   217      IfxScuCcu_K1divider_58,         /**< \brief K1-Divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   218      IfxScuCcu_K1divider_59,         /**< \brief K1-Divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   219      IfxScuCcu_K1divider_60,         /**< \brief K1-Divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   220      IfxScuCcu_K1divider_61,         /**< \brief K1-Divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   221      IfxScuCcu_K1divider_62,         /**< \brief K1-Divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   222      IfxScuCcu_K1divider_63,         /**< \brief K1-Divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   223      IfxScuCcu_K1divider_64,         /**< \brief K1-Divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   224      IfxScuCcu_K1divider_65,         /**< \brief K1-Divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   225      IfxScuCcu_K1divider_66,         /**< \brief K1-Divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   226      IfxScuCcu_K1divider_67,         /**< \brief K1-Divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   227      IfxScuCcu_K1divider_68,         /**< \brief K1-Divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   228      IfxScuCcu_K1divider_69,         /**< \brief K1-Divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   229      IfxScuCcu_K1divider_70,         /**< \brief K1-Divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   230      IfxScuCcu_K1divider_71,         /**< \brief K1-Divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   231      IfxScuCcu_K1divider_72,         /**< \brief K1-Divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   232      IfxScuCcu_K1divider_73,         /**< \brief K1-Divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   233      IfxScuCcu_K1divider_74,         /**< \brief K1-Divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   234      IfxScuCcu_K1divider_75,         /**< \brief K1-Divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   235      IfxScuCcu_K1divider_76,         /**< \brief K1-Divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   236      IfxScuCcu_K1divider_77,         /**< \brief K1-Divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   237      IfxScuCcu_K1divider_78,         /**< \brief K1-Divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   238      IfxScuCcu_K1divider_79,         /**< \brief K1-Divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   239      IfxScuCcu_K1divider_80,         /**< \brief K1-Divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   240      IfxScuCcu_K1divider_81,         /**< \brief K1-Divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   241      IfxScuCcu_K1divider_82,         /**< \brief K1-Divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   242      IfxScuCcu_K1divider_83,         /**< \brief K1-Divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   243      IfxScuCcu_K1divider_84,         /**< \brief K1-Divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   244      IfxScuCcu_K1divider_85,         /**< \brief K1-Divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   245      IfxScuCcu_K1divider_86,         /**< \brief K1-Divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   246      IfxScuCcu_K1divider_87,         /**< \brief K1-Divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   247      IfxScuCcu_K1divider_88,         /**< \brief K1-Divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   248      IfxScuCcu_K1divider_89,         /**< \brief K1-Divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   249      IfxScuCcu_K1divider_90,         /**< \brief K1-Divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   250      IfxScuCcu_K1divider_91,         /**< \brief K1-Divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   251      IfxScuCcu_K1divider_92,         /**< \brief K1-Divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   252      IfxScuCcu_K1divider_93,         /**< \brief K1-Divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   253      IfxScuCcu_K1divider_94,         /**< \brief K1-Divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   254      IfxScuCcu_K1divider_95,         /**< \brief K1-Divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   255      IfxScuCcu_K1divider_96,         /**< \brief K1-Divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   256      IfxScuCcu_K1divider_97,         /**< \brief K1-Divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   257      IfxScuCcu_K1divider_98,         /**< \brief K1-Divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   258      IfxScuCcu_K1divider_99,         /**< \brief K1-Divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   259      IfxScuCcu_K1divider_100,        /**< \brief K1-Divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   260      IfxScuCcu_K1divider_101,        /**< \brief K1-Divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   261      IfxScuCcu_K1divider_102,        /**< \brief K1-Divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   262      IfxScuCcu_K1divider_103,        /**< \brief K1-Divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   263      IfxScuCcu_K1divider_104,        /**< \brief K1-Divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   264      IfxScuCcu_K1divider_105,        /**< \brief K1-Divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   265      IfxScuCcu_K1divider_106,        /**< \brief K1-Divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   266      IfxScuCcu_K1divider_107,        /**< \brief K1-Divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   267      IfxScuCcu_K1divider_108,        /**< \brief K1-Divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   268      IfxScuCcu_K1divider_109,        /**< \brief K1-Divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   269      IfxScuCcu_K1divider_110,        /**< \brief K1-Divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   270      IfxScuCcu_K1divider_111,        /**< \brief K1-Divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   271      IfxScuCcu_K1divider_112,        /**< \brief K1-Divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   272      IfxScuCcu_K1divider_113,        /**< \brief K1-Divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   273      IfxScuCcu_K1divider_114,        /**< \brief K1-Divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   274      IfxScuCcu_K1divider_115,        /**< \brief K1-Divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   275      IfxScuCcu_K1divider_116,        /**< \brief K1-Divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   276      IfxScuCcu_K1divider_117,        /**< \brief K1-Divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   277      IfxScuCcu_K1divider_118,        /**< \brief K1-Divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   278      IfxScuCcu_K1divider_119,        /**< \brief K1-Divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   279      IfxScuCcu_K1divider_120,        /**< \brief K1-Divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   280      IfxScuCcu_K1divider_121,        /**< \brief K1-Divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   281      IfxScuCcu_K1divider_122,        /**< \brief K1-Divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   282      IfxScuCcu_K1divider_123,        /**< \brief K1-Divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   283      IfxScuCcu_K1divider_124,        /**< \brief K1-Divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   284      IfxScuCcu_K1divider_125,        /**< \brief K1-Divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   285      IfxScuCcu_K1divider_126,        /**< \brief K1-Divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   286      IfxScuCcu_K1divider_127,        /**< \brief K1-Divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   287      IfxScuCcu_K1divider_128         /**< \brief K1-Divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   288  } IfxScuCcu_K1divider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   289  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   290  /** \brief MODULE_SCU.PLLCON1.B.K2DIV, specifies the K2-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   291   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   292  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   293  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   294      IfxScuCcu_K2divider_1 = 0,      /**< \brief K2-Divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   295      IfxScuCcu_K2divider_2,          /**< \brief K2-Divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   296      IfxScuCcu_K2divider_3,          /**< \brief K2-Divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   297      IfxScuCcu_K2divider_4,          /**< \brief K2-Divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   298      IfxScuCcu_K2divider_5,          /**< \brief K2-Divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   299      IfxScuCcu_K2divider_6,          /**< \brief K2-Divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   300      IfxScuCcu_K2divider_7,          /**< \brief K2-Divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   301      IfxScuCcu_K2divider_8,          /**< \brief K2-Divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   302      IfxScuCcu_K2divider_9,          /**< \brief K2-Divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   303      IfxScuCcu_K2divider_10,         /**< \brief K2-Divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   304      IfxScuCcu_K2divider_11,         /**< \brief K2-Divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   305      IfxScuCcu_K2divider_12,         /**< \brief K2-Divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   306      IfxScuCcu_K2divider_13,         /**< \brief K2-Divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   307      IfxScuCcu_K2divider_14,         /**< \brief K2-Divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   308      IfxScuCcu_K2divider_15,         /**< \brief K2-Divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   309      IfxScuCcu_K2divider_16,         /**< \brief K2-Divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   310      IfxScuCcu_K2divider_17,         /**< \brief K2-Divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   311      IfxScuCcu_K2divider_18,         /**< \brief K2-Divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   312      IfxScuCcu_K2divider_19,         /**< \brief K2-Divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   313      IfxScuCcu_K2divider_20,         /**< \brief K2-Divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   314      IfxScuCcu_K2divider_21,         /**< \brief K2-Divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   315      IfxScuCcu_K2divider_22,         /**< \brief K2-Divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   316      IfxScuCcu_K2divider_23,         /**< \brief K2-Divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   317      IfxScuCcu_K2divider_24,         /**< \brief K2-Divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   318      IfxScuCcu_K2divider_25,         /**< \brief K2-Divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   319      IfxScuCcu_K2divider_26,         /**< \brief K2-Divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   320      IfxScuCcu_K2divider_27,         /**< \brief K2-Divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   321      IfxScuCcu_K2divider_28,         /**< \brief K2-Divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   322      IfxScuCcu_K2divider_29,         /**< \brief K2-Divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   323      IfxScuCcu_K2divider_30,         /**< \brief K2-Divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   324      IfxScuCcu_K2divider_31,         /**< \brief K2-Divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   325      IfxScuCcu_K2divider_32,         /**< \brief K2-Divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   326      IfxScuCcu_K2divider_33,         /**< \brief K2-Divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   327      IfxScuCcu_K2divider_34,         /**< \brief K2-Divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   328      IfxScuCcu_K2divider_35,         /**< \brief K2-Divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   329      IfxScuCcu_K2divider_36,         /**< \brief K2-Divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   330      IfxScuCcu_K2divider_37,         /**< \brief K2-Divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   331      IfxScuCcu_K2divider_38,         /**< \brief K2-Divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   332      IfxScuCcu_K2divider_39,         /**< \brief K2-Divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   333      IfxScuCcu_K2divider_40,         /**< \brief K2-Divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   334      IfxScuCcu_K2divider_41,         /**< \brief K2-Divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   335      IfxScuCcu_K2divider_42,         /**< \brief K2-Divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   336      IfxScuCcu_K2divider_43,         /**< \brief K2-Divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   337      IfxScuCcu_K2divider_44,         /**< \brief K2-Divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   338      IfxScuCcu_K2divider_45,         /**< \brief K2-Divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   339      IfxScuCcu_K2divider_46,         /**< \brief K2-Divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   340      IfxScuCcu_K2divider_47,         /**< \brief K2-Divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   341      IfxScuCcu_K2divider_48,         /**< \brief K2-Divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   342      IfxScuCcu_K2divider_49,         /**< \brief K2-Divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   343      IfxScuCcu_K2divider_50,         /**< \brief K2-Divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   344      IfxScuCcu_K2divider_51,         /**< \brief K2-Divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   345      IfxScuCcu_K2divider_52,         /**< \brief K2-Divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   346      IfxScuCcu_K2divider_53,         /**< \brief K2-Divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   347      IfxScuCcu_K2divider_54,         /**< \brief K2-Divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   348      IfxScuCcu_K2divider_55,         /**< \brief K2-Divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   349      IfxScuCcu_K2divider_56,         /**< \brief K2-Divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   350      IfxScuCcu_K2divider_57,         /**< \brief K2-Divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   351      IfxScuCcu_K2divider_58,         /**< \brief K2-Divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   352      IfxScuCcu_K2divider_59,         /**< \brief K2-Divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   353      IfxScuCcu_K2divider_60,         /**< \brief K2-Divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   354      IfxScuCcu_K2divider_61,         /**< \brief K2-Divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   355      IfxScuCcu_K2divider_62,         /**< \brief K2-Divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   356      IfxScuCcu_K2divider_63,         /**< \brief K2-Divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   357      IfxScuCcu_K2divider_64,         /**< \brief K2-Divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   358      IfxScuCcu_K2divider_65,         /**< \brief K2-Divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   359      IfxScuCcu_K2divider_66,         /**< \brief K2-Divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   360      IfxScuCcu_K2divider_67,         /**< \brief K2-Divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   361      IfxScuCcu_K2divider_68,         /**< \brief K2-Divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   362      IfxScuCcu_K2divider_69,         /**< \brief K2-Divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   363      IfxScuCcu_K2divider_70,         /**< \brief K2-Divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   364      IfxScuCcu_K2divider_71,         /**< \brief K2-Divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   365      IfxScuCcu_K2divider_72,         /**< \brief K2-Divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   366      IfxScuCcu_K2divider_73,         /**< \brief K2-Divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   367      IfxScuCcu_K2divider_74,         /**< \brief K2-Divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   368      IfxScuCcu_K2divider_75,         /**< \brief K2-Divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   369      IfxScuCcu_K2divider_76,         /**< \brief K2-Divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   370      IfxScuCcu_K2divider_77,         /**< \brief K2-Divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   371      IfxScuCcu_K2divider_78,         /**< \brief K2-Divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   372      IfxScuCcu_K2divider_79,         /**< \brief K2-Divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   373      IfxScuCcu_K2divider_80,         /**< \brief K2-Divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   374      IfxScuCcu_K2divider_81,         /**< \brief K2-Divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   375      IfxScuCcu_K2divider_82,         /**< \brief K2-Divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   376      IfxScuCcu_K2divider_83,         /**< \brief K2-Divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   377      IfxScuCcu_K2divider_84,         /**< \brief K2-Divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   378      IfxScuCcu_K2divider_85,         /**< \brief K2-Divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   379      IfxScuCcu_K2divider_86,         /**< \brief K2-Divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   380      IfxScuCcu_K2divider_87,         /**< \brief K2-Divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   381      IfxScuCcu_K2divider_88,         /**< \brief K2-Divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   382      IfxScuCcu_K2divider_89,         /**< \brief K2-Divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   383      IfxScuCcu_K2divider_90,         /**< \brief K2-Divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   384      IfxScuCcu_K2divider_91,         /**< \brief K2-Divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   385      IfxScuCcu_K2divider_92,         /**< \brief K2-Divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   386      IfxScuCcu_K2divider_93,         /**< \brief K2-Divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   387      IfxScuCcu_K2divider_94,         /**< \brief K2-Divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   388      IfxScuCcu_K2divider_95,         /**< \brief K2-Divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   389      IfxScuCcu_K2divider_96,         /**< \brief K2-Divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   390      IfxScuCcu_K2divider_97,         /**< \brief K2-Divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   391      IfxScuCcu_K2divider_98,         /**< \brief K2-Divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   392      IfxScuCcu_K2divider_99,         /**< \brief K2-Divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   393      IfxScuCcu_K2divider_100,        /**< \brief K2-Divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   394      IfxScuCcu_K2divider_101,        /**< \brief K2-Divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   395      IfxScuCcu_K2divider_102,        /**< \brief K2-Divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   396      IfxScuCcu_K2divider_103,        /**< \brief K2-Divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   397      IfxScuCcu_K2divider_104,        /**< \brief K2-Divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   398      IfxScuCcu_K2divider_105,        /**< \brief K2-Divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   399      IfxScuCcu_K2divider_106,        /**< \brief K2-Divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   400      IfxScuCcu_K2divider_107,        /**< \brief K2-Divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   401      IfxScuCcu_K2divider_108,        /**< \brief K2-Divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   402      IfxScuCcu_K2divider_109,        /**< \brief K2-Divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   403      IfxScuCcu_K2divider_110,        /**< \brief K2-Divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   404      IfxScuCcu_K2divider_111,        /**< \brief K2-Divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   405      IfxScuCcu_K2divider_112,        /**< \brief K2-Divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   406      IfxScuCcu_K2divider_113,        /**< \brief K2-Divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   407      IfxScuCcu_K2divider_114,        /**< \brief K2-Divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   408      IfxScuCcu_K2divider_115,        /**< \brief K2-Divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   409      IfxScuCcu_K2divider_116,        /**< \brief K2-Divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   410      IfxScuCcu_K2divider_117,        /**< \brief K2-Divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   411      IfxScuCcu_K2divider_118,        /**< \brief K2-Divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   412      IfxScuCcu_K2divider_119,        /**< \brief K2-Divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   413      IfxScuCcu_K2divider_120,        /**< \brief K2-Divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   414      IfxScuCcu_K2divider_121,        /**< \brief K2-Divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   415      IfxScuCcu_K2divider_122,        /**< \brief K2-Divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   416      IfxScuCcu_K2divider_123,        /**< \brief K2-Divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   417      IfxScuCcu_K2divider_124,        /**< \brief K2-Divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   418      IfxScuCcu_K2divider_125,        /**< \brief K2-Divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   419      IfxScuCcu_K2divider_126,        /**< \brief K2-Divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   420      IfxScuCcu_K2divider_127,        /**< \brief K2-Divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   421      IfxScuCcu_K2divider_128         /**< \brief K2-Divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   422  } IfxScuCcu_K2divider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   423  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   424  /** \brief MODULE_SCU.PLLCON1.B.K3DIV, specifies the K3-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   425   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   426  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   427  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   428      IfxScuCcu_K3divider_1 = 0,      /**< \brief K3-Divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   429      IfxScuCcu_K3divider_2,          /**< \brief K3-Divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   430      IfxScuCcu_K3divider_3,          /**< \brief K3-Divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   431      IfxScuCcu_K3divider_4,          /**< \brief K3-Divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   432      IfxScuCcu_K3divider_5,          /**< \brief K3-Divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   433      IfxScuCcu_K3divider_6,          /**< \brief K3-Divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   434      IfxScuCcu_K3divider_7,          /**< \brief K3-Divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   435      IfxScuCcu_K3divider_8,          /**< \brief K3-Divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   436      IfxScuCcu_K3divider_9,          /**< \brief K3-Divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   437      IfxScuCcu_K3divider_10,         /**< \brief K3-Divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   438      IfxScuCcu_K3divider_11,         /**< \brief K3-Divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   439      IfxScuCcu_K3divider_12,         /**< \brief K3-Divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   440      IfxScuCcu_K3divider_13,         /**< \brief K3-Divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   441      IfxScuCcu_K3divider_14,         /**< \brief K3-Divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   442      IfxScuCcu_K3divider_15,         /**< \brief K3-Divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   443      IfxScuCcu_K3divider_16,         /**< \brief K3-Divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   444      IfxScuCcu_K3divider_17,         /**< \brief K3-Divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   445      IfxScuCcu_K3divider_18,         /**< \brief K3-Divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   446      IfxScuCcu_K3divider_19,         /**< \brief K3-Divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   447      IfxScuCcu_K3divider_20,         /**< \brief K3-Divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   448      IfxScuCcu_K3divider_21,         /**< \brief K3-Divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   449      IfxScuCcu_K3divider_22,         /**< \brief K3-Divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   450      IfxScuCcu_K3divider_23,         /**< \brief K3-Divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   451      IfxScuCcu_K3divider_24,         /**< \brief K3-Divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   452      IfxScuCcu_K3divider_25,         /**< \brief K3-Divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   453      IfxScuCcu_K3divider_26,         /**< \brief K3-Divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   454      IfxScuCcu_K3divider_27,         /**< \brief K3-Divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   455      IfxScuCcu_K3divider_28,         /**< \brief K3-Divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   456      IfxScuCcu_K3divider_29,         /**< \brief K3-Divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   457      IfxScuCcu_K3divider_30,         /**< \brief K3-Divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   458      IfxScuCcu_K3divider_31,         /**< \brief K3-Divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   459      IfxScuCcu_K3divider_32,         /**< \brief K3-Divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   460      IfxScuCcu_K3divider_33,         /**< \brief K3-Divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   461      IfxScuCcu_K3divider_34,         /**< \brief K3-Divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   462      IfxScuCcu_K3divider_35,         /**< \brief K3-Divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   463      IfxScuCcu_K3divider_36,         /**< \brief K3-Divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   464      IfxScuCcu_K3divider_37,         /**< \brief K3-Divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   465      IfxScuCcu_K3divider_38,         /**< \brief K3-Divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   466      IfxScuCcu_K3divider_39,         /**< \brief K3-Divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   467      IfxScuCcu_K3divider_40,         /**< \brief K3-Divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   468      IfxScuCcu_K3divider_41,         /**< \brief K3-Divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   469      IfxScuCcu_K3divider_42,         /**< \brief K3-Divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   470      IfxScuCcu_K3divider_43,         /**< \brief K3-Divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   471      IfxScuCcu_K3divider_44,         /**< \brief K3-Divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   472      IfxScuCcu_K3divider_45,         /**< \brief K3-Divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   473      IfxScuCcu_K3divider_46,         /**< \brief K3-Divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   474      IfxScuCcu_K3divider_47,         /**< \brief K3-Divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   475      IfxScuCcu_K3divider_48,         /**< \brief K3-Divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   476      IfxScuCcu_K3divider_49,         /**< \brief K3-Divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   477      IfxScuCcu_K3divider_50,         /**< \brief K3-Divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   478      IfxScuCcu_K3divider_51,         /**< \brief K3-Divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   479      IfxScuCcu_K3divider_52,         /**< \brief K3-Divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   480      IfxScuCcu_K3divider_53,         /**< \brief K3-Divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   481      IfxScuCcu_K3divider_54,         /**< \brief K3-Divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   482      IfxScuCcu_K3divider_55,         /**< \brief K3-Divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   483      IfxScuCcu_K3divider_56,         /**< \brief K3-Divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   484      IfxScuCcu_K3divider_57,         /**< \brief K3-Divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   485      IfxScuCcu_K3divider_58,         /**< \brief K3-Divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   486      IfxScuCcu_K3divider_59,         /**< \brief K3-Divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   487      IfxScuCcu_K3divider_60,         /**< \brief K3-Divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   488      IfxScuCcu_K3divider_61,         /**< \brief K3-Divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   489      IfxScuCcu_K3divider_62,         /**< \brief K3-Divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   490      IfxScuCcu_K3divider_63,         /**< \brief K3-Divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   491      IfxScuCcu_K3divider_64,         /**< \brief K3-Divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   492      IfxScuCcu_K3divider_65,         /**< \brief K3-Divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   493      IfxScuCcu_K3divider_66,         /**< \brief K3-Divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   494      IfxScuCcu_K3divider_67,         /**< \brief K3-Divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   495      IfxScuCcu_K3divider_68,         /**< \brief K3-Divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   496      IfxScuCcu_K3divider_69,         /**< \brief K3-Divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   497      IfxScuCcu_K3divider_70,         /**< \brief K3-Divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   498      IfxScuCcu_K3divider_71,         /**< \brief K3-Divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   499      IfxScuCcu_K3divider_72,         /**< \brief K3-Divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   500      IfxScuCcu_K3divider_73,         /**< \brief K3-Divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   501      IfxScuCcu_K3divider_74,         /**< \brief K3-Divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   502      IfxScuCcu_K3divider_75,         /**< \brief K3-Divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   503      IfxScuCcu_K3divider_76,         /**< \brief K3-Divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   504      IfxScuCcu_K3divider_77,         /**< \brief K3-Divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   505      IfxScuCcu_K3divider_78,         /**< \brief K3-Divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   506      IfxScuCcu_K3divider_79,         /**< \brief K3-Divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   507      IfxScuCcu_K3divider_80,         /**< \brief K3-Divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   508      IfxScuCcu_K3divider_81,         /**< \brief K3-Divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   509      IfxScuCcu_K3divider_82,         /**< \brief K3-Divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   510      IfxScuCcu_K3divider_83,         /**< \brief K3-Divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   511      IfxScuCcu_K3divider_84,         /**< \brief K3-Divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   512      IfxScuCcu_K3divider_85,         /**< \brief K3-Divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   513      IfxScuCcu_K3divider_86,         /**< \brief K3-Divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   514      IfxScuCcu_K3divider_87,         /**< \brief K3-Divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   515      IfxScuCcu_K3divider_88,         /**< \brief K3-Divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   516      IfxScuCcu_K3divider_89,         /**< \brief K3-Divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   517      IfxScuCcu_K3divider_90,         /**< \brief K3-Divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   518      IfxScuCcu_K3divider_91,         /**< \brief K3-Divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   519      IfxScuCcu_K3divider_92,         /**< \brief K3-Divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   520      IfxScuCcu_K3divider_93,         /**< \brief K3-Divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   521      IfxScuCcu_K3divider_94,         /**< \brief K3-Divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   522      IfxScuCcu_K3divider_95,         /**< \brief K3-Divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   523      IfxScuCcu_K3divider_96,         /**< \brief K3-Divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   524      IfxScuCcu_K3divider_97,         /**< \brief K3-Divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   525      IfxScuCcu_K3divider_98,         /**< \brief K3-Divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   526      IfxScuCcu_K3divider_99,         /**< \brief K3-Divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   527      IfxScuCcu_K3divider_100,        /**< \brief K3-Divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   528      IfxScuCcu_K3divider_101,        /**< \brief K3-Divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   529      IfxScuCcu_K3divider_102,        /**< \brief K3-Divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   530      IfxScuCcu_K3divider_103,        /**< \brief K3-Divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   531      IfxScuCcu_K3divider_104,        /**< \brief K3-Divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   532      IfxScuCcu_K3divider_105,        /**< \brief K3-Divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   533      IfxScuCcu_K3divider_106,        /**< \brief K3-Divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   534      IfxScuCcu_K3divider_107,        /**< \brief K3-Divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   535      IfxScuCcu_K3divider_108,        /**< \brief K3-Divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   536      IfxScuCcu_K3divider_109,        /**< \brief K3-Divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   537      IfxScuCcu_K3divider_110,        /**< \brief K3-Divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   538      IfxScuCcu_K3divider_111,        /**< \brief K3-Divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   539      IfxScuCcu_K3divider_112,        /**< \brief K3-Divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   540      IfxScuCcu_K3divider_113,        /**< \brief K3-Divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   541      IfxScuCcu_K3divider_114,        /**< \brief K3-Divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   542      IfxScuCcu_K3divider_115,        /**< \brief K3-Divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   543      IfxScuCcu_K3divider_116,        /**< \brief K3-Divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   544      IfxScuCcu_K3divider_117,        /**< \brief K3-Divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   545      IfxScuCcu_K3divider_118,        /**< \brief K3-Divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   546      IfxScuCcu_K3divider_119,        /**< \brief K3-Divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   547      IfxScuCcu_K3divider_120,        /**< \brief K3-Divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   548      IfxScuCcu_K3divider_121,        /**< \brief K3-Divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   549      IfxScuCcu_K3divider_122,        /**< \brief K3-Divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   550      IfxScuCcu_K3divider_123,        /**< \brief K3-Divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   551      IfxScuCcu_K3divider_124,        /**< \brief K3-Divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   552      IfxScuCcu_K3divider_125,        /**< \brief K3-Divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   553      IfxScuCcu_K3divider_126,        /**< \brief K3-Divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   554      IfxScuCcu_K3divider_127,        /**< \brief K3-Divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   555      IfxScuCcu_K3divider_128         /**< \brief K3-Divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   556  } IfxScuCcu_K3divider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   557  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   558  /** \brief MODULE_SCU.PLLCON0.B.NDIV, specifies the N-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   559   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   560  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   561  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   562      IfxScuCcu_Ndivider_1 = 0,      /**< \brief  N-divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   563      IfxScuCcu_Ndivider_2,          /**< \brief  N-divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   564      IfxScuCcu_Ndivider_3,          /**< \brief  N-divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   565      IfxScuCcu_Ndivider_4,          /**< \brief  N-divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   566      IfxScuCcu_Ndivider_5,          /**< \brief  N-divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   567      IfxScuCcu_Ndivider_6,          /**< \brief  N-divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   568      IfxScuCcu_Ndivider_7,          /**< \brief  N-divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   569      IfxScuCcu_Ndivider_8,          /**< \brief  N-divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   570      IfxScuCcu_Ndivider_9,          /**< \brief  N-divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   571      IfxScuCcu_Ndivider_10,         /**< \brief  N-divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   572      IfxScuCcu_Ndivider_11,         /**< \brief  N-divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   573      IfxScuCcu_Ndivider_12,         /**< \brief  N-divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   574      IfxScuCcu_Ndivider_13,         /**< \brief  N-divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   575      IfxScuCcu_Ndivider_14,         /**< \brief  N-divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   576      IfxScuCcu_Ndivider_15,         /**< \brief  N-divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   577      IfxScuCcu_Ndivider_16,         /**< \brief  N-divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   578      IfxScuCcu_Ndivider_17,         /**< \brief  N-divider 17  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   579      IfxScuCcu_Ndivider_18,         /**< \brief  N-divider 18  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   580      IfxScuCcu_Ndivider_19,         /**< \brief  N-divider 19  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   581      IfxScuCcu_Ndivider_20,         /**< \brief  N-divider 20  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   582      IfxScuCcu_Ndivider_21,         /**< \brief  N-divider 21  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   583      IfxScuCcu_Ndivider_22,         /**< \brief  N-divider 22  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   584      IfxScuCcu_Ndivider_23,         /**< \brief  N-divider 23  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   585      IfxScuCcu_Ndivider_24,         /**< \brief  N-divider 24  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   586      IfxScuCcu_Ndivider_25,         /**< \brief  N-divider 25  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   587      IfxScuCcu_Ndivider_26,         /**< \brief  N-divider 26  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   588      IfxScuCcu_Ndivider_27,         /**< \brief  N-divider 27  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   589      IfxScuCcu_Ndivider_28,         /**< \brief  N-divider 28  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   590      IfxScuCcu_Ndivider_29,         /**< \brief  N-divider 29  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   591      IfxScuCcu_Ndivider_30,         /**< \brief  N-divider 30  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   592      IfxScuCcu_Ndivider_31,         /**< \brief  N-divider 31  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   593      IfxScuCcu_Ndivider_32,         /**< \brief  N-divider 32  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   594      IfxScuCcu_Ndivider_33,         /**< \brief  N-divider 33  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   595      IfxScuCcu_Ndivider_34,         /**< \brief  N-divider 34  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   596      IfxScuCcu_Ndivider_35,         /**< \brief  N-divider 35  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   597      IfxScuCcu_Ndivider_36,         /**< \brief  N-divider 36  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   598      IfxScuCcu_Ndivider_37,         /**< \brief  N-divider 37  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   599      IfxScuCcu_Ndivider_38,         /**< \brief  N-divider 38  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   600      IfxScuCcu_Ndivider_39,         /**< \brief  N-divider 39  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   601      IfxScuCcu_Ndivider_40,         /**< \brief  N-divider 40  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   602      IfxScuCcu_Ndivider_41,         /**< \brief  N-divider 41  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   603      IfxScuCcu_Ndivider_42,         /**< \brief  N-divider 42  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   604      IfxScuCcu_Ndivider_43,         /**< \brief  N-divider 43  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   605      IfxScuCcu_Ndivider_44,         /**< \brief  N-divider 44  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   606      IfxScuCcu_Ndivider_45,         /**< \brief  N-divider 45  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   607      IfxScuCcu_Ndivider_46,         /**< \brief  N-divider 46  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   608      IfxScuCcu_Ndivider_47,         /**< \brief  N-divider 47  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   609      IfxScuCcu_Ndivider_48,         /**< \brief  N-divider 48  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   610      IfxScuCcu_Ndivider_49,         /**< \brief  N-divider 49  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   611      IfxScuCcu_Ndivider_50,         /**< \brief  N-divider 50  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   612      IfxScuCcu_Ndivider_51,         /**< \brief  N-divider 51  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   613      IfxScuCcu_Ndivider_52,         /**< \brief  N-divider 52  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   614      IfxScuCcu_Ndivider_53,         /**< \brief  N-divider 53  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   615      IfxScuCcu_Ndivider_54,         /**< \brief  N-divider 54  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   616      IfxScuCcu_Ndivider_55,         /**< \brief  N-divider 55  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   617      IfxScuCcu_Ndivider_56,         /**< \brief  N-divider 56  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   618      IfxScuCcu_Ndivider_57,         /**< \brief  N-divider 57  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   619      IfxScuCcu_Ndivider_58,         /**< \brief  N-divider 58  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   620      IfxScuCcu_Ndivider_59,         /**< \brief  N-divider 59  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   621      IfxScuCcu_Ndivider_60,         /**< \brief  N-divider 60  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   622      IfxScuCcu_Ndivider_61,         /**< \brief  N-divider 61  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   623      IfxScuCcu_Ndivider_62,         /**< \brief  N-divider 62  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   624      IfxScuCcu_Ndivider_63,         /**< \brief  N-divider 63  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   625      IfxScuCcu_Ndivider_64,         /**< \brief  N-divider 64  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   626      IfxScuCcu_Ndivider_65,         /**< \brief  N-divider 65  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   627      IfxScuCcu_Ndivider_66,         /**< \brief  N-divider 66  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   628      IfxScuCcu_Ndivider_67,         /**< \brief  N-divider 67  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   629      IfxScuCcu_Ndivider_68,         /**< \brief  N-divider 68  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   630      IfxScuCcu_Ndivider_69,         /**< \brief  N-divider 69  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   631      IfxScuCcu_Ndivider_70,         /**< \brief  N-divider 70  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   632      IfxScuCcu_Ndivider_71,         /**< \brief  N-divider 71  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   633      IfxScuCcu_Ndivider_72,         /**< \brief  N-divider 72  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   634      IfxScuCcu_Ndivider_73,         /**< \brief  N-divider 73  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   635      IfxScuCcu_Ndivider_74,         /**< \brief  N-divider 74  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   636      IfxScuCcu_Ndivider_75,         /**< \brief  N-divider 75  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   637      IfxScuCcu_Ndivider_76,         /**< \brief  N-divider 76  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   638      IfxScuCcu_Ndivider_77,         /**< \brief  N-divider 77  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   639      IfxScuCcu_Ndivider_78,         /**< \brief  N-divider 78  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   640      IfxScuCcu_Ndivider_79,         /**< \brief  N-divider 79  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   641      IfxScuCcu_Ndivider_80,         /**< \brief  N-divider 80  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   642      IfxScuCcu_Ndivider_81,         /**< \brief  N-divider 81  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   643      IfxScuCcu_Ndivider_82,         /**< \brief  N-divider 82  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   644      IfxScuCcu_Ndivider_83,         /**< \brief  N-divider 83  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   645      IfxScuCcu_Ndivider_84,         /**< \brief  N-divider 84  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   646      IfxScuCcu_Ndivider_85,         /**< \brief  N-divider 85  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   647      IfxScuCcu_Ndivider_86,         /**< \brief  N-divider 86  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   648      IfxScuCcu_Ndivider_87,         /**< \brief  N-divider 87  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   649      IfxScuCcu_Ndivider_88,         /**< \brief  N-divider 88  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   650      IfxScuCcu_Ndivider_89,         /**< \brief  N-divider 89  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   651      IfxScuCcu_Ndivider_90,         /**< \brief  N-divider 90  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   652      IfxScuCcu_Ndivider_91,         /**< \brief  N-divider 91  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   653      IfxScuCcu_Ndivider_92,         /**< \brief  N-divider 92  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   654      IfxScuCcu_Ndivider_93,         /**< \brief  N-divider 93  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   655      IfxScuCcu_Ndivider_94,         /**< \brief  N-divider 94  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   656      IfxScuCcu_Ndivider_95,         /**< \brief  N-divider 95  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   657      IfxScuCcu_Ndivider_96,         /**< \brief  N-divider 96  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   658      IfxScuCcu_Ndivider_97,         /**< \brief  N-divider 97  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   659      IfxScuCcu_Ndivider_98,         /**< \brief  N-divider 98  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   660      IfxScuCcu_Ndivider_99,         /**< \brief  N-divider 99  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   661      IfxScuCcu_Ndivider_100,        /**< \brief  N-divider 100  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   662      IfxScuCcu_Ndivider_101,        /**< \brief  N-divider 101  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   663      IfxScuCcu_Ndivider_102,        /**< \brief  N-divider 102  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   664      IfxScuCcu_Ndivider_103,        /**< \brief  N-divider 103  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   665      IfxScuCcu_Ndivider_104,        /**< \brief  N-divider 104  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   666      IfxScuCcu_Ndivider_105,        /**< \brief  N-divider 105  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   667      IfxScuCcu_Ndivider_106,        /**< \brief  N-divider 106  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   668      IfxScuCcu_Ndivider_107,        /**< \brief  N-divider 107  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   669      IfxScuCcu_Ndivider_108,        /**< \brief  N-divider 108  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   670      IfxScuCcu_Ndivider_109,        /**< \brief  N-divider 109  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   671      IfxScuCcu_Ndivider_110,        /**< \brief  N-divider 110  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   672      IfxScuCcu_Ndivider_111,        /**< \brief  N-divider 111  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   673      IfxScuCcu_Ndivider_112,        /**< \brief  N-divider 112  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   674      IfxScuCcu_Ndivider_113,        /**< \brief  N-divider 113  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   675      IfxScuCcu_Ndivider_114,        /**< \brief  N-divider 114  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   676      IfxScuCcu_Ndivider_115,        /**< \brief  N-divider 115  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   677      IfxScuCcu_Ndivider_116,        /**< \brief  N-divider 116  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   678      IfxScuCcu_Ndivider_117,        /**< \brief  N-divider 117  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   679      IfxScuCcu_Ndivider_118,        /**< \brief  N-divider 118  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   680      IfxScuCcu_Ndivider_119,        /**< \brief  N-divider 119  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   681      IfxScuCcu_Ndivider_120,        /**< \brief  N-divider 120  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   682      IfxScuCcu_Ndivider_121,        /**< \brief  N-divider 121  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   683      IfxScuCcu_Ndivider_122,        /**< \brief  N-divider 122  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   684      IfxScuCcu_Ndivider_123,        /**< \brief  N-divider 123  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   685      IfxScuCcu_Ndivider_124,        /**< \brief  N-divider 124  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   686      IfxScuCcu_Ndivider_125,        /**< \brief  N-divider 125  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   687      IfxScuCcu_Ndivider_126,        /**< \brief  N-divider 126  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   688      IfxScuCcu_Ndivider_127,        /**< \brief  N-divider 127  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   689      IfxScuCcu_Ndivider_128         /**< \brief  N-divider 128  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   690  } IfxScuCcu_Ndivider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   691  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   692  /** \brief MODULE_SCU.PLLCON0.B.PDIV, specifies the P-Divider
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   693   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   694  typedef enum
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   695  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   696      IfxScuCcu_Pdivider_1 = 0,      /**< \brief  P-divider 1  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   697      IfxScuCcu_Pdivider_2,          /**< \brief  P-divider 2  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   698      IfxScuCcu_Pdivider_3,          /**< \brief  P-divider 3  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   699      IfxScuCcu_Pdivider_4,          /**< \brief  P-divider 4  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   700      IfxScuCcu_Pdivider_5,          /**< \brief  P-divider 5  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   701      IfxScuCcu_Pdivider_6,          /**< \brief  P-divider 6  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   702      IfxScuCcu_Pdivider_7,          /**< \brief  P-divider 7  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   703      IfxScuCcu_Pdivider_8,          /**< \brief  P-divider 8  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   704      IfxScuCcu_Pdivider_9,          /**< \brief  P-divider 9  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   705      IfxScuCcu_Pdivider_10,         /**< \brief  P-divider 10  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   706      IfxScuCcu_Pdivider_11,         /**< \brief  P-divider 11  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   707      IfxScuCcu_Pdivider_12,         /**< \brief  P-divider 12  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   708      IfxScuCcu_Pdivider_13,         /**< \brief  P-divider 13  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   709      IfxScuCcu_Pdivider_14,         /**< \brief  P-divider 14  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   710      IfxScuCcu_Pdivider_15,         /**< \brief  P-divider 15  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   711      IfxScuCcu_Pdivider_16          /**< \brief  P-divider 16  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   712  } IfxScuCcu_Pdivider;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   713  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   714  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   715  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   716  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   717  /*-----------------------------Data Structures--------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   718  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   719  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   720  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   721   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   722  /** \brief Configuration structure type for CCUCON registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   723   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   724  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   725  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   726      uint32 value;       /**< \brief CCUCON Register value to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   727      uint32 mask;        /**< \brief CCUCON Mask to select the bit fields to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   728  } IfxScuCcu_CcuconRegConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   729  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   730  /** \brief Configuration structure type for the Pll initial step.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   731   * This structure must be used to configure the P, N and K2 dividers for initial step.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   732   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   733  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   734  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   735      uint8   pDivider;        /**< \brief P divider value for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   736      uint8   nDivider;        /**< \brief N divider value for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   737      uint8   k2Initial;       /**< \brief K2 divider value for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   738      float32 waitTime;        /**< \brief Wait time for for basic (initial) step */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   739  } IfxScuCcu_InitialStepConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   740  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   741  /** \brief Configuration structure type for the Pll Steps for current jump control.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   742   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   743  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   744  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   745      uint8                          k2Step;             /**< \brief K2 divider value for this step. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   746      float32                        waitTime;           /**< \brief Wait time for for this step. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   747      IfxScuCcu_PllStepsFunctionHook hookFunction;       /**< \brief Hook function called at the end of this step. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   748  } IfxScuCcu_PllStepsConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   749  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   750  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   751  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   752  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   753   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   754  /** \brief Configuration structure type for all the CCUCON registers to configure clock distribution.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   755   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   756  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   757  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   758      IfxScuCcu_CcuconRegConfig ccucon0;       /**< \brief CCUCON0 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   759      IfxScuCcu_CcuconRegConfig ccucon1;       /**< \brief CCUCON1 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   760      IfxScuCcu_CcuconRegConfig ccucon2;       /**< \brief CCUCON2 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   761      IfxScuCcu_CcuconRegConfig ccucon5;       /**< \brief CCUCON5 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   762      IfxScuCcu_CcuconRegConfig ccucon6;       /**< \brief CCUCON6 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   763      IfxScuCcu_CcuconRegConfig ccucon7;       /**< \brief CCUCON7 Register configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   764  } IfxScuCcu_ClockDistributionConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   765  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   766  /** \brief Configuration structure type for the Flash waitstate configuration.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   767   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   768  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   769  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   770      uint32 value;       /**< \brief FLASH.FCON Register value to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   771      uint32 mask;        /**< \brief FLASH.FCON Mask to select the bit fields to be updated. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   772  } IfxScuCcu_FlashWaitstateConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   773  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   774  /** \brief Configuration structure type for the System Pll step.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   775   * This structure must be used to configure the P, N and K1 dividers .
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   776   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   777  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   778  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   779      uint8                       numOfPllDividerSteps;       /**< \brief Number of PLL divider steps during clock throttling. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   780      IfxScuCcu_PllStepsConfig   *pllDividerStep;             /**< \brief Pointer to the array of Pll divider step configuration. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   781      IfxScuCcu_InitialStepConfig pllInitialStep;             /**< \brief Configuration of first step which is same as internal osc frequency. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   782  } IfxScuCcu_SysPllConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   783  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   784  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   785  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   786  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   787   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   788  /** \brief Configuration structure SCU module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   789   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   790  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   791  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   792      IfxScuCcu_SysPllConfig            sysPll;                         /**< \brief System PLL configuration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   793      IfxScuCcu_ClockDistributionConfig clockDistribution;              /**< \brief Configuration of of bus clocks and other module clock distribution. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   794      IfxScuCcu_FlashWaitstateConfig    flashFconWaitStateConfig;       /**< \brief Configuration of flash waitstate */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   795      uint32                            xtalFrequency;                  /**< \brief Xtal Frequency */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   796  } IfxScuCcu_Config;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   797  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   798  /** \brief Configuration structure for E-ray PLL
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   799   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   800  typedef struct
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   801  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   802      IfxScuCcu_InitialStepConfig pllInitialStep;       /**< \brief Configuration of first step which is same as internal osc frequency. */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   803  } IfxScuCcu_ErayPllConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   804  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   805  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   806  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   807  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Operative
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   808   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   809  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   810  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   811  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   812  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   813  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   814  /** \brief API to get EVR Oscillator frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   815   * This API returns the constant which is specific to the ScuCcu of the controller.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   816   * \return EVR Oscillator frequency (fBACK or fEVR) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   817   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   818  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   819  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   820  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   821   * This API returns the  PLL2ERAY frequency based on the K3 divider value in PLLERAYCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   822   * \return PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   823   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   824  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   825  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   826  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   827   * This API returns the  PLL2 frequency based on the K3 divider value in PLLCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   828   * \return PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   829   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   830  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   831  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   832  /** \brief Returns the clock source selection
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   833   * \return Clock source selection
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   834   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   835  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   836  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   837  /** \brief API to get STM divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   838   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   839   * \return STM frequency (fSTM) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   840   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   841  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   842  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   843  /** \brief API to get CAN divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   844   * This API returns the fCAN frequency based on the divider value in CCUCON register and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   845   * \return STM frequency (fSTM) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   846   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   847  IFX_INLINE float32 IfxScuCcu_getCanFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   848  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   849  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   850  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   851  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   852  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   853  /** \brief API to get BAUD1 divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   854   * This API returns the based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   855   * \return Baud1 frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   856   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   857  IFX_EXTERN float32 IfxScuCcu_getBaud1Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   858  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   859  /** \brief API to get BAUD2 divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   860   * This API returns the Baud2 frequency based on the divider value in CCUCON register and the fMAX.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   861   * \return Baud2 frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   862   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   863  IFX_EXTERN float32 IfxScuCcu_getBaud2Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   864  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   865  /** \brief API to get BBB divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   866   * This API returns the BBBDivider frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   867   * \return BBB frequency (fBBB) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   868   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   869  IFX_EXTERN float32 IfxScuCcu_getBbbFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   870  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   871  /** \brief This API returns the Cpu frequency based on the divider value in CCUCON register and fSource frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   872   * \param cpu CPU number for which effective fCPU is sought
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   873   * \return Cpu[x] frequency in Hz, where x is cpu number passed as parameter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   874   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   875  IFX_EXTERN float32 IfxScuCcu_getCpuFrequency(const IfxCpu_ResourceCpu cpu);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   876  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   877  /** \brief API to get FSI2 divider frequency in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   878   * This API returns the fFSI2 frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   879   * \return FSI2 frequency (fFSI2) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   880   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   881  IFX_EXTERN float32 IfxScuCcu_getFsi2Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   882  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   883  /** \brief API to get FSI divider frequency in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   884   * This API returns the fFSI based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   885   * \return FSI frequency (fFSI) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   886   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   887  IFX_EXTERN float32 IfxScuCcu_getFsiFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   888  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   889  /** \brief API to get FMAX divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   890   * This API returns the fMax frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   891   * \return Max frequency (fMAX) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   892   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   893  IFX_EXTERN float32 IfxScuCcu_getMaxFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   894  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   895  /** \brief get source frequency fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   896   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   897   * \return Module frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   898   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   899  IFX_EXTERN float32 IfxScuCcu_getModuleFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   900  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   901  /** \brief API to get Oscillator 0 frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   902   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   903   * \return Osc0 frequency (fOSC0) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   904   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   905  IFX_EXTERN float32 IfxScuCcu_getOsc0Frequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   906  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   907  /** \brief API to get Oscillator 0 frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   908   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   909   * \return Osc frequency (fOSC) in Hz.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   910   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   911  IFX_EXTERN float32 IfxScuCcu_getOscFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   912  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   913  /** \brief API to get actual PLL (Eray) frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   914   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   915   * \return frequency of Pll Eray (fPLLERAY) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   916   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   917  IFX_EXTERN float32 IfxScuCcu_getPllErayFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   918  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   919  /** \brief API to get actual ERAY PLL Voltage Controlled Oscillator frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   920   * This API returns the based on the divider values in PLLERAYCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   921   * \return Pll (Eray) VCO frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   922   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   923  IFX_EXTERN float32 IfxScuCcu_getPllErayVcoFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   924  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   925  /** \brief API to get actual PLL output frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   926   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   927   * \return Pll (fPLL) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   928   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   929  IFX_EXTERN float32 IfxScuCcu_getPllFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   930  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   931  /** \brief API to get actual PLL Voltage Controlled Oscillator frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   932   * This API returns the based on the divider values in PLLCON registers and the input oscillator.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   933   * \return Pll VCO frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   934   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   935  IFX_EXTERN float32 IfxScuCcu_getPllVcoFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   936  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   937  /** \brief get source frequency fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   938   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   939   * \return Effective fSOURCE in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   940   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   941  IFX_EXTERN float32 IfxScuCcu_getSourceFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   942  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   943  /** \brief API to get SPB divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   944   * This API returns the based on fSOURCE and also on Low power divider mode and/or SPBDIV divider value in CCUCON registers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   945   * \return SPB frequency (fSPB) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   946   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   947  IFX_EXTERN float32 IfxScuCcu_getSpbFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   948  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   949  /** \brief API to get SRI divider frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   950   * This API returns the Sri frequency based on the divider values in CCUCON registers and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   951   * \return Sri frequency (fSRI) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   952   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   953  IFX_EXTERN float32 IfxScuCcu_getSriFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   954  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   955  /** \brief API to set CPU frequency (with CPU divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   956   * This API configure CPU divider values in CCUCON registers. The actual frequency is always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   957   * \param cpu CPU number for which fCPU to be configured
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   958   * \param cpuFreq Desired CPU frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   959   * \return Actual CPU[x] frequency in Hz, where x is the cpu number passed as parameter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   960   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   961  IFX_EXTERN float32 IfxScuCcu_setCpuFrequency(IfxCpu_ResourceCpu cpu, float32 cpuFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   962  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   963  /** \brief API to configure PLL2ERAY (K3 Divider for ADC clock) for desired frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   964   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   965   * \param pll2ErayFreq PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   966   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   967   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   968  IFX_EXTERN float32 IfxScuCcu_setPll2ErayFrequency(float32 pll2ErayFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   969  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   970  /** \brief API to configure PLL2 (K3 Divider for ADC clock) for desired frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   971   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   972   * \param pll2Freq PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   973   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   974   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   975  IFX_EXTERN float32 IfxScuCcu_setPll2Frequency(float32 pll2Freq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   976  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   977  /** \brief API to set SPB frequency (with SPB divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   978   * This API configure SPB divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   979   * \param spbFreq Desired SPB frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   980   * \return Actual SPB frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   981   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   982  IFX_EXTERN float32 IfxScuCcu_setSpbFrequency(float32 spbFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   983  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   984  /** \brief API to set SRI frequency (with SRI divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   985   * This API configure Sri divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   986   * \param sriFreq Sri frequency (fSRI) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   987   * \return Actual Sri frequency (fSRI) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   988   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   989  IFX_EXTERN float32 IfxScuCcu_setSriFrequency(float32 sriFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   990  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   991  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   992  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   993  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   994   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   995  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   996  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   997  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   998  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	   999  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1000  /** \brief The api calculates the system PLL divider values P, N, K based on given xtal frequency and PLL frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1001   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1002   * \param fPll Desired PLL frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1003   * \return 0- Success, 1 - Failure
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1004   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1005  IFX_EXTERN boolean IfxScuCcu_calculateSysPllDividers(IfxScuCcu_Config *cfg, uint32 fPll);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1006  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1007  /** \brief API to initialize the SCU Clock Control Unit.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1008   * This API initialize the PLL with ramp steps, BUS dividers for the configuration provided by the configuration structure.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1009   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1010   * \return Error status of the ScuCcu initialization process.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1011   * \retval TRUE: If an error occurred during initialization.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1012   * \retval FALSE: If initialization was successful.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1013   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1014  IFX_EXTERN boolean IfxScuCcu_init(const IfxScuCcu_Config *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1015  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1016  /** \brief Initializes the clock configuration with default values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1017   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1018   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1019   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1020  IFX_EXTERN void IfxScuCcu_initConfig(IfxScuCcu_Config *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1021  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1022  /** \brief API to initialize the SCU Eray Pll
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1023   * This API initialize the Eray PLL for the configuration provided by the configuration structure.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1024   * \param cfg Pointer to the configuration structure of the Eray Pll
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1025   * \return Error status of the ScuCcu Eray Pll initialization process.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1026   * \retval TRUE: If an error occurred during initialization.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1027   * \retval FALSE: If initialization was successful.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1028   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1029  IFX_EXTERN boolean IfxScuCcu_initErayPll(const IfxScuCcu_ErayPllConfig *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1030  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1031  /** \brief Initializes the clock configuration with default values
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1032   * \param cfg Pointer to the configuration structure of the ScuCcuEray Pll
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1033   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1034   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1035  IFX_EXTERN void IfxScuCcu_initErayPllConfig(IfxScuCcu_ErayPllConfig *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1036  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1037  /** \brief API to switch to Backup clock from the current PLL frequency.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1038   * \param cfg Pointer to the configuration structure of the ScuCcu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1039   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1040   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1041  IFX_EXTERN void IfxScuCcu_switchToBackupClock(const IfxScuCcu_Config *cfg);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1042  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1043  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1044  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1045  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1046  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1047  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1048  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1049  /** \brief API to get GTMdivider frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1050   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1051   * return GTM frequency (fGTM) in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1052   * \return Gtm Frequency
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1053   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1054  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1055  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1056  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1057  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1058  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1059  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1060  /** \brief API to set GTM frequency (with GTM divider)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1061   * This API configure GTM divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1062   * \param gtmFreq Desired GTM frequency in Hz
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1063   * \return Actual GTM frequency in HZ
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1064   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1065  IFX_EXTERN float32 IfxScuCcu_setGtmFrequency(float32 gtmFreq);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1066  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1067  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1068  /*-------------------Global Exported Variables/Constants----------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1069  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1070  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1071  /** \brief Configuration structure for SCU CCU driver.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1072   * The values of this structure are defined as # defined macros in the implementation of Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1073   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1074  IFX_EXTERN IFX_CONST IfxScuCcu_Config IfxScuCcu_defaultClockConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1075  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1076  /** \brief Configuration structure for SCU CCU driver.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1077   * The values of this structure are defined as # defined macros in the implementation of Scu
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1078   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1079  IFX_EXTERN IFX_CONST IfxScuCcu_ErayPllConfig IfxScuCcu_defaultErayPllConfig;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1080  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1081  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1082  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1083  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1084  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1085  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1086  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1087      return IFXSCU_EVR_OSC_FREQUENCY;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1088  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1089  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1090  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1091  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1092  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1093      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.GTMDIV;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1094  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1095  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1096  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1097  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1098  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1099      float32 pll2ErayFrequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1100  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1101      pll2ErayFrequency = IfxScuCcu_getPllErayVcoFrequency() / (SCU_PLLERAYCON1.B.K3DIV + 1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1102  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1103      return pll2ErayFrequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1104  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1105  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1106  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1107  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1108  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1109      float32 pll2Frequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1110      pll2Frequency = IfxScuCcu_getPllVcoFrequency() / (SCU_PLLCON1.B.K3DIV + 1);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1111  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1112      return pll2Frequency;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1113  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1114  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1115  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1116  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1117  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1118      return (IfxScu_CCUCON0_CLKSEL)SCU_CCUCON0.B.CLKSEL;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1119  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1120  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1121  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1122  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1123  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Scu\Std\IfxScuCcu.h	  1124      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.STMDIV;
	call	IfxScuCcu_getSourceFrequency
.L390:
	fcall	.cocofun_1
.L221:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   195   0);         /* Trigger feature not supported */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   196  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   197      /* Initialize the timer part */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   198      // STM timer is already running after reset (free running timer)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   199  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   200      // Calculate shift
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   201      driver->comparatorShift = 32 - __clz((uint32)(config->base.minResolution * IfxStm_getFrequency(driver->stm)));
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   203      if (driver->comparatorShift > 0)
	ld.w	d15,[a12]8
.L391:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   204      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   205          driver->comparatorShift--;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   206      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   207  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   208      IfxStm_Timer_updateInputFrequency(driver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   209  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   210      if ((config->base.minResolution > 0) && ((1.0 / base->clockFreq) > config->base.minResolution))
	mov.aa	a4,a15
.L224:
	mul.f	d15,d15,d0
.L225:
	ftouz	d15,d15
.L392:
	clz	d15,d15
.L393:
	rsub	d15,d15,#32
	extr.u	d15,d15,#0,#8
.L394:
	cadd	d15,d15,#-1
	st.b	[a15]22,d15
.L395:
	call	IfxStm_Timer_updateInputFrequency
.L270:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   211      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   212          result = FALSE;
	ld.w	d0,[a12]8
.L396:
	mov	d15,#0
.L397:
	cmp.f	d15,d0,d15
.L398:
	jz.t	d15:2,.L14
.L399:
	movh	d15,#16256
	ld.w	d1,[a15]6
.L400:
	div.f	d15,d15,d1
.L401:
	cmp.f	d15,d15,d0
	extr.u	d15,d15,#2,#1
.L402:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   213          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, FALSE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   214      }
	cmov	d8,d15,#0
.L14:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   215      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   216      {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   217  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   218      IfxStm_Timer_setFrequency(driver, config->base.frequency);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   219  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   220      IfxStm_setCompareControl(driver->stm, driver->comparator,
	ld.w	d4,[a12]
	mov.aa	a4,a15
.L271:
	call	IfxStm_Timer_setFrequency
.L272:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   221          (IfxStm_ComparatorOffset)driver->comparatorShift,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   222          IfxStm_ComparatorSize_32Bits,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   223          driver->comparator == IfxStm_Comparator_0 ? IfxStm_ComparatorInterrupt_ir0 : IfxStm_ComparatorInterrupt_ir1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   224  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   225      /* Interrupt configuration */
	ld.bu	d4,[a15]16
.L403:
	mov	d6,#31
	ld.a	a4,[a15]12
.L404:
	ne	d7,d4,#0
	ld.bu	d5,[a15]22
.L405:
	call	IfxStm_setCompareControl
.L406:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   226      if (config->base.isrPriority > 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   227      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   228          /* clear the interrupt flag of the selected comparator */
	ld.hu	d15,[a12]4
.L407:
	jeq	d15,#0,.L16
.L408:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   229          IfxStm_clearCompareFlag(driver->stm, driver->comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   230  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   231          volatile Ifx_SRC_SRCR *src;
	ld.a	a4,[a15]12
.L409:
	ld.bu	d4,[a15]16
	call	IfxStm_clearCompareFlag
.L226:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   232          src = IfxStm_getSrcPointer(driver->stm, config->comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   233          IfxSrc_init(src, config->base.isrProvider, config->base.isrPriority);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   234          IfxSrc_enable(src);
	ld.a	a4,[a15]12
.L410:
	ld.bu	d4,[a12]40
	call	IfxStm_getSrcPointer
.L273:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   235      }
	ld.bu	d0,[a12]6
.L230:
	ld.hu	d15,[a12]4
.L411:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     2   * \file IfxSrc.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     3   * \brief SRC  basic functionality
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     4   * \ingroup IfxLld_Src
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     8   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    44   * \defgroup IfxLld_Src SRC
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    45   * \addtogroup IfxLld_Src
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    46   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    47   * \defgroup IfxLld_Src_Usage How to use Service Request Mechanism?
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    48   * \addtogroup IfxLld_Src_Usage
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    49   * \{
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    51   * For Aurix controller peripherals that can generate service requests is connected to one
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    52   * or more Service Request Nodes (SRNs) in the central Interrupt Router(IR) module. Refer to Controller User Manual for more details\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    53   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    54   * IfxSrc driver provides the APIs to configure and control service requests. Refer \ref IfxLld_Src_Usage for
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    55   * details of these APIs.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    56   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    57   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    58   * \section Ifx_Src_UsageInit Initialize the Service Request Node
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    59   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    60   * Service request node is initialized to configure the following,\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    61   * 1) Route the interrupt trigger to service provider, which are:\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    62   *  __a. One of the available CPUs or\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    63   *  __b. DMA controller\n
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    64   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    65   * 2) Priority of CPU Interrupt or DMA Trigger.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    66   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    67   * For Interrupt or DMA to be correctly triggered, following steps are to be done in the user code:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    68   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    69   * \subsection Ifx_Src_UsageInitStep1 Step1: Configure the Node
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    70   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    71   * User must configure the service request node in the application / driver files.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    72   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    73   * \subsection Ifx_Src_UsageInitStep2 Step2: Enable the Trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    74   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    75   * Enable the service request node to connect the trigger event from the hardware to service provider.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    76   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    77   * Example:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    78   * Following example show the configuration for STM0 Service request 0 trigger configured to trigger
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    79   * CPU1 with the priority specified by IFX_INTPRIO_STM0 (from the example at IfxCpu_Irq)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    80   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    81   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    82   * //file: myApplication.c
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    83   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    84   * #include "Ifx_IntPrioDef.h" // to get the priority numbers
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    85   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    86   * void myDriverInitFunction(void)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    87   * {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    88   *    // driver init code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    89   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    90   *    // Step1: Call the function to route the trigger from for SRC_STM0_SR0 to CPU1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    91   *    // and priority specified at Ifx_IntPrioDef.h globally
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    92   *  IfxSrc_init(&MODULE_SRC.STM.STM[0].SR0, IfxSrc_Tos_cpu1, IFX_INTPRIO_STM0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    93   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    94   *    // Step2: Enable the service request node
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    95   *  IfxSrc_init(&MODULE_SRC.STM.STM[0].SR0);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    96   * }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    97   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    99   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   100   * \}
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   101   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   102   * \defgroup IfxLld_Src_Std_Service_Request Service Request Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   103   * \ingroup IfxLld_Src_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   104   * \defgroup IfxLld_Src_Std_Module Module Functions
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   105   * \ingroup IfxLld_Src_Std
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   106   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   107  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   108  #ifndef IFXSRC_H
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   109  #define IFXSRC_H 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   110  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   111  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   112  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   113  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   114  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   115  #include "_Impl/IfxSrc_cfg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   116  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   117  #include "IfxSrc_reg.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   118  /** \addtogroup IfxLld_Src_Std_Service_Request
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   119   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   120  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   121  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   122  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   123  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   124  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   125  /** \brief Resets the overrun flag of the Service Request.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   126   * \param src pointer to the Service Request Control register which the overrun flag should be cleared.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   127   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   128   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   129   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   130   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   131   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   132  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   133  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   134  /** \brief Resets a specific interrupt service by software.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   135   * \param src pointer to the Service Request Control register which the request should be cleared.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   136   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   137   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   138   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   139   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   140   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   141  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   142  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   143  /** \brief Gets the current overrun status.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   144   * \param src pointer to the Service Request Control register for which the overrun status should be returned.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   145   * \return current service request control overrun status.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   146   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   147   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   148   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   149   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   150  IFX_INLINE boolean IfxSrc_isOverrun(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   151  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   152  /** \brief Gets the current request status.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   153   * \param src pointer to the Service Request Control register for which the request status should be returned.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   154   * \return current service request control request status.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   155   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   156   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   157   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   158   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   159  IFX_INLINE boolean IfxSrc_isRequested(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   160  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   161  /** \brief Requests a specific interrupt service by software
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   162   * \param src pointer to the Service Request Control register which the interrupt has to be requested.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   163   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   164   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   165   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   166   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   167   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   168  IFX_INLINE void IfxSrc_setRequest(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   169  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   170  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   171  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   172  /** \addtogroup IfxLld_Src_Std_Module
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   173   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   174  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   175  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   176  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   177  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   178  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   179  /** \brief DeInitializes the service request control register.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   180   * \param src pointer to the Service Request Control register which should be deinitialised.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   181   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   182   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   183   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   184   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   185   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   186  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   187  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   188  /** \brief Disables a specific interrupt service request.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   189   * \param src pointer to the Service Request Control register for which the interrupt has to be disabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   190   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   191   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   192   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   193   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   194   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   195  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   196  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   197  /** \brief Enables a specific interrupt service request.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   198   * \param src pointer to the Service Request Control register for which the interrupt has to be enabled.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   199   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   200   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   201   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   202   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   203   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   204  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   205  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   206  /** \brief Initializes the service request control register.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   207   * \param src pointer to the Service Request Control register which should be initialised.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   208   * \param typOfService type of interrupt service provider.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   209   * \param priority Interrupt priority.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   210   * \return None
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   211   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   212   * Get the peripheral service control register which request need to be serviced and assign this service to any of service providers.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   213   * \code
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   214   * //define the interrupt priority
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   215   * #define IFXASCLIN0_TX_INTPRIO 2
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   216   * //get the service request
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   217   * volatile Ifx_SRC_SRCR *src = IfxAsclin_getSrcPointerRx( &MODULE_ASCLIN0 );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   218   * //initlaise the service request
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   219   * IfxSrc_init( src, IfxSrc_Tos_cpu0, IFXASCLIN0_TX_INTPRIO );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   220   * // enable the service
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   221   * IfxSrc_enable( src );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   222   * //check for service request flags and clear if they occur
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   223   * if ( IfxSrc_isRequested( src ) == TRUE )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   224   * {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   225   *    IfxSrc_clearRequest( src );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   226   * }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   227   * if ( IfxSrc_isOverrun( src ) == TRUE )
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   228   * {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   229   *      IfxSrc_clearOverrun( src );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   230   * }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   231   * // Atlast deinitialise the service control
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   232   * IfxSrc_deinit( src );
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   233   * \endcode
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   234   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   235   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   236  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   238  /** \} */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   239  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   240  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   241  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   242  /******************************************************************************/
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   243  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   244  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   245  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   246      src->B.IOVCLR = 1;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   247  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   248  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   249  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   250  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   251  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   252      src->B.CLRR = 1;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   253  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   254  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   255  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   256  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   257  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   258      src->U = 0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   259  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   260  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   261  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   262  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   264      src->B.SRE = 0;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   265  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   266  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   267  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   268  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   269  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   270      src->B.SRE = 1;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   271  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   272  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   273  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   274  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   275  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   276      src->B.SRPN = priority;
	st.b	[a2],d15
.L412:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   277      src->B.TOS  = typOfService;
	ld.bu	d15,[a2]1
.L413:
	insert	d15,d15,d0,#3,#2
	st.b	[a2]1,d15
.L240:
	ld.bu	d15,[a2]3
.L414:
	or	d15,#2
	st.b	[a2]3,d15
.L231:
	ld.bu	d15,[a2]1
.L415:
	or	d15,#4
	st.b	[a2]1,d15
.L16:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   236  rc);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   237      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   238  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   239      return result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   240  }
	mov	d2,d8
	ret
.L213:
	
__IfxStm_Timer_init_function_end:
	.size	IfxStm_Timer_init,__IfxStm_Timer_init_function_end-IfxStm_Timer_init
.L116:
	; End of function
	
	.sdecl	'.text.IfxStm_Timer.IfxStm_Timer_initConfig',code,cluster('IfxStm_Timer_initConfig')
	.sect	'.text.IfxStm_Timer.IfxStm_Timer_initConfig'
	.align	2
	
	.global	IfxStm_Timer_initConfig

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   241  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   242  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   243  void IfxStm_Timer_initConfig(IfxStm_Timer_Config *config, Ifx_STM *stm)
; Function IfxStm_Timer_initConfig
.L47:
IfxStm_Timer_initConfig:	.type	func
	mov.aa	a15,a4
.L275:
	mov.aa	a12,a5
.L276:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   244  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   245      IfxStdIf_Timer_initConfig(&config->base);
	call	IfxStdIf_Timer_initConfig
.L274:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   246      config->stm        = stm;
	st.a	[a15]36,a12
.L420:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   247      config->comparator = IfxStm_Comparator_0;
	mov	d15,#0
	st.b	[a15]40,d15
.L421:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Timer\IfxStm_Timer.c	   248  }
	ret
.L248:
	
__IfxStm_Timer_initConfig_function_end:
	.size	IfxStm_Timer_initConfig,__IfxStm_Timer_initConfig_function_end-IfxStm_Timer_initConfig
.L121:
	; End of function
	
	.calls	'IfxStm_Timer_run','__ll_ushr64'
	.calls	'__INDIRECT__','IfxStm_Timer_acknowledgeTimerIrq'
	.calls	'__INDIRECT__','IfxStm_Timer_getFrequency'
	.calls	'__INDIRECT__','IfxStm_Timer_getInputFrequency'
	.calls	'__INDIRECT__','IfxStm_Timer_getPeriod'
	.calls	'__INDIRECT__','IfxStm_Timer_getResolution'
	.calls	'__INDIRECT__','IfxStm_Timer_run'
	.calls	'__INDIRECT__','IfxStm_Timer_setFrequency'
	.calls	'__INDIRECT__','IfxStm_Timer_setPeriod'
	.calls	'__INDIRECT__','IfxStm_Timer_setSingleMode'
	.calls	'__INDIRECT__','IfxStm_Timer_stop'
	.calls	'__INDIRECT__','IfxStm_Timer_updateInputFrequency'
	.calls	'IfxStm_Timer_acknowledgeTimerIrq','IfxStm_isCompareFlagSet'
	.calls	'IfxStm_Timer_acknowledgeTimerIrq','IfxStm_clearCompareFlag'
	.calls	'IfxStm_Timer_acknowledgeTimerIrq','IfxStm_disableComparatorInterrupt'
	.calls	'IfxStm_Timer_run','IfxStm_enableComparatorInterrupt'
	.calls	'IfxStm_Timer_setFrequency','IfxStm_Timer_setPeriod'
	.calls	'IfxStm_Timer_stdIfTimerInit','IfxStdIf_Timer_initStdIf'
	.calls	'IfxStm_Timer_stop','IfxStm_disableComparatorInterrupt'
	.calls	'IfxStm_Timer_updateInputFrequency','IfxScuCcu_getSourceFrequency'
	.calls	'IfxStm_Timer_init','IfxScuCcu_getSourceFrequency'
	.calls	'IfxStm_Timer_init','IfxStm_Timer_updateInputFrequency'
	.calls	'IfxStm_Timer_init','IfxStm_Timer_setFrequency'
	.calls	'IfxStm_Timer_init','IfxStm_setCompareControl'
	.calls	'IfxStm_Timer_init','IfxStm_clearCompareFlag'
	.calls	'IfxStm_Timer_init','IfxStm_getSrcPointer'
	.calls	'IfxStm_Timer_initConfig','IfxStdIf_Timer_initConfig'
	.calls	'IfxStm_Timer_updateInputFrequency','.cocofun_1'
	.calls	'IfxStm_Timer_init','.cocofun_1'
	.calls	'IfxStm_Timer_acknowledgeTimerIrq','',0
	.calls	'IfxStm_Timer_getFrequency','',0
	.calls	'IfxStm_Timer_getInputFrequency','',0
	.calls	'IfxStm_Timer_getPeriod','',0
	.calls	'IfxStm_Timer_getResolution','',0
	.calls	'IfxStm_Timer_run','',0
	.calls	'IfxStm_Timer_setFrequency','',0
	.calls	'IfxStm_Timer_setPeriod','',0
	.calls	'IfxStm_Timer_setSingleMode','',0
	.calls	'IfxStm_Timer_stdIfTimerInit','',0
	.calls	'IfxStm_Timer_stop','',0
	.calls	'IfxStm_Timer_updateInputFrequency','',0
	.calls	'.cocofun_1','',0
	.calls	'IfxStm_Timer_init','',0
	.extern	IfxScuCcu_getSourceFrequency
	.extern	IfxStm_clearCompareFlag
	.extern	IfxStm_disableComparatorInterrupt
	.extern	IfxStm_enableComparatorInterrupt
	.extern	IfxStm_getSrcPointer
	.extern	IfxStm_isCompareFlagSet
	.extern	IfxStm_setCompareControl
	.extern	IfxStdIf_Timer_initConfig
	.extern	IfxStdIf_Timer_initStdIf
	.extern	__ll_ushr64
	.extern	__INDIRECT__
	.calls	'IfxStm_Timer_initConfig','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L49:
	.word	84200
	.half	3
	.word	.L50
	.byte	4
.L48:
	.byte	1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L51
	.byte	2,1,1,3
	.word	181
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	184
	.byte	6,0,7
	.byte	'__fract',0,4,128,1
.L145:
	.byte	7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	229
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	241
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,172,2,17,1,1,6,0
.L172:
	.byte	7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	353
	.byte	8
	.byte	'__ld64',0,3,2,135,1,19
	.word	327
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	359
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	359
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	327
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,241,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	468
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	468
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	468
	.byte	16,0,2,35,0,0,12,4,247,14,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	484
	.byte	4,2,35,0,0
.L127:
	.byte	7
	.byte	'unsigned char',0,1,8,7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,250,8,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	2,6,2,35,0,11
	.byte	'IR0',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	620
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,12,4,255,14,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	659
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,137,9,16,4,11
	.byte	'AE',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	620
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	637
	.byte	16,0,2,35,2,0,12,4,135,15,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	903
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,4,175,15,25,12,13
	.byte	'CON0',0
	.word	580
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	863
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1094
	.byte	4,2,35,8,0,14
	.word	1134
	.byte	3
	.word	1197
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,181,3,17,1,1,5
	.byte	'watchdog',0,3,181,3,65
	.word	1202
	.byte	5
	.byte	'password',0,3,181,3,82
	.word	637
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,140,4,17,1,1,5
	.byte	'watchdog',0,3,140,4,63
	.word	1202
	.byte	5
	.byte	'password',0,3,140,4,80
	.word	637
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,227,3,19
	.word	637
	.byte	1,1,5
	.byte	'watchdog',0,3,227,3,74
	.word	1202
	.byte	6,0,15,6,156,1,9,1,16
	.byte	'IfxCpu_ResourceCpu_0',0,0,16
	.byte	'IfxCpu_ResourceCpu_1',0,1,16
	.byte	'IfxCpu_ResourceCpu_none',0,2,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,5,141,6,31
	.word	1432
	.byte	1,1,6,0
.L161:
	.byte	8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,5,139,5,20
	.word	620
	.byte	1,1
.L163:
	.byte	6,0
.L157:
	.byte	8
	.byte	'IfxCpu_disableInterrupts',0,3,5,147,5,20
	.word	620
	.byte	1,1
.L160:
	.byte	17,6,0,0
.L174:
	.byte	4
	.byte	'IfxCpu_restoreInterrupts',0,3,5,168,7,17,1,1
.L175:
	.byte	5
	.byte	'enabled',0,5,168,7,50
	.word	620
.L177:
	.byte	6,0
.L150:
	.byte	7
	.byte	'unsigned long int',0,4,7,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,5,161,6,19
	.word	1680
	.byte	1,1,5
	.byte	'address',0,5,161,6,55
	.word	637
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,5,190,6,20
	.word	620
	.byte	1,1,5
	.byte	'address',0,5,190,6,70
	.word	637
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,5,172,8,17,1,1,5
	.byte	'address',0,5,172,8,56
	.word	1680
	.byte	5
	.byte	'count',0,5,172,8,72
	.word	1680
	.byte	17,6,0,0,10
	.byte	'_Ifx_P_OUT_Bits',0,8,143,3,16,4,11
	.byte	'P0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,12,8,181,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1911
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,8,169,2,16,4,11
	.byte	'PS0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	620
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	620
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	620
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	620
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	620
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	620
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	620
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	620
	.byte	1,0,2,35,3,0,12,8,133,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2227
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,8,110,16,4,11
	.byte	'MODREV',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	637
	.byte	16,0,2,35,2,0,12,8,148,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2798
	.byte	4,2,35,0,0,18,4
	.word	620
	.byte	19,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,8,140,1,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	620
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	620
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	620
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	620
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	620
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	620
	.byte	5,0,2,35,3,0,12,8,164,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2926
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,8,166,1,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	620
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	620
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	620
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	620
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	620
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	620
	.byte	5,0,2,35,3,0,12,8,180,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3141
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,8,179,1,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	620
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	620
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	620
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	620
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	620
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	620
	.byte	5,0,2,35,3,0,12,8,188,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3356
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,8,153,1,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	620
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	620
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	620
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	620
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	620
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	620
	.byte	5,0,2,35,3,0,12,8,172,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3573
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,8,118,16,4,11
	.byte	'P0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,12,8,156,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3793
	.byte	4,2,35,0,0,18,24
	.word	620
	.byte	19,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,8,205,3,16,4,11
	.byte	'PD0',0,1
	.word	620
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	620
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'PD2',0,1
	.word	620
	.byte	3,5,2,35,1,11
	.byte	'PL2',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'PD3',0,1
	.word	620
	.byte	3,1,2,35,1,11
	.byte	'PL3',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'PD4',0,1
	.word	620
	.byte	3,5,2,35,2,11
	.byte	'PL4',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'PD5',0,1
	.word	620
	.byte	3,1,2,35,2,11
	.byte	'PL5',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'PD6',0,1
	.word	620
	.byte	3,5,2,35,3,11
	.byte	'PL6',0,1
	.word	620
	.byte	1,4,2,35,3,11
	.byte	'PD7',0,1
	.word	620
	.byte	3,1,2,35,3,11
	.byte	'PL7',0,1
	.word	620
	.byte	1,0,2,35,3,0,12,8,205,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4116
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,8,226,3,16,4,11
	.byte	'PD8',0,1
	.word	620
	.byte	3,5,2,35,0,11
	.byte	'PL8',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'PD9',0,1
	.word	620
	.byte	3,1,2,35,0,11
	.byte	'PL9',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'PD10',0,1
	.word	620
	.byte	3,5,2,35,1,11
	.byte	'PL10',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'PD11',0,1
	.word	620
	.byte	3,1,2,35,1,11
	.byte	'PL11',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'PD12',0,1
	.word	620
	.byte	3,5,2,35,2,11
	.byte	'PL12',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'PD13',0,1
	.word	620
	.byte	3,1,2,35,2,11
	.byte	'PL13',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'PD14',0,1
	.word	620
	.byte	3,5,2,35,3,11
	.byte	'PL14',0,1
	.word	620
	.byte	1,4,2,35,3,11
	.byte	'PD15',0,1
	.word	620
	.byte	3,1,2,35,3,11
	.byte	'PL15',0,1
	.word	620
	.byte	1,0,2,35,3,0,12,8,213,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4420
	.byte	4,2,35,0,0,18,8
	.word	620
	.byte	19,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,8,88,16,4,11
	.byte	'EN0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,12,8,140,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4745
	.byte	4,2,35,0,0,18,12
	.word	620
	.byte	19,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,8,183,3,16,4,11
	.byte	'PDIS0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,12,8,197,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5085
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,8,165,3,16,4,11
	.byte	'SEL0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	620
	.byte	2,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	445
	.byte	19,1,2,35,0,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,12,8,189,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5451
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,8,206,2,16,4,11
	.byte	'PS0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	445
	.byte	28,0,2,35,0,0,12,8,149,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5737
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,8,227,2,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	445
	.byte	24,0,2,35,0,0,12,8,165,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5884
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,8,238,2,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	445
	.byte	20,0,2,35,0,0,12,8,173,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6053
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,8,216,2,16,4,11
	.byte	'reserved_0',0,2
	.word	637
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,12,8,157,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6225
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,8,232,1,16,4,11
	.byte	'reserved_0',0,2
	.word	637
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	637
	.byte	12,0,2,35,2,0,12,8,229,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6400
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,8,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	445
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	620
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	620
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	620
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	8,0,2,35,3,0,12,8,245,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6574
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,8,136,2,16,4,11
	.byte	'reserved_0',0,4
	.word	445
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	620
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	620
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	620
	.byte	4,0,2,35,3,0,12,8,253,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6748
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,8,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	445
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	620
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	620
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	620
	.byte	1,0,2,35,3,0,12,8,237,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6924
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,8,249,2,16,4,11
	.byte	'PS0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,12,8,141,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7080
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,8,147,2,16,4,11
	.byte	'reserved_0',0,2
	.word	637
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	620
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	620
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	620
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	620
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	620
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	620
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	620
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	620
	.byte	1,0,2,35,3,0,12,8,221,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7413
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR0_Bits',0,8,192,1,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	445
	.byte	30,0,2,35,0,0,12,8,196,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7761
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_Bits',0,8,200,1,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	445
	.byte	30,0,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,8,208,1,16,4,11
	.byte	'RDIS_CTRL',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'RX_DIS',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	620
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	445
	.byte	24,0,2,35,0,0,12,8,204,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7885
	.byte	4,2,35,0,13
	.byte	'B_P21',0
	.word	7969
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR2_Bits',0,8,218,1,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'LVDSR',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'LVDSRL',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	620
	.byte	2,4,2,35,1,11
	.byte	'TDIS_CTRL',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'TX_DIS',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,12,8,213,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8149
	.byte	4,2,35,0,0,18,76
	.word	620
	.byte	19,75,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,8,82,16,4,11
	.byte	'reserved_0',0,4
	.word	445
	.byte	32,0,2,35,0,0,12,8,132,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8402
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,8,45,16,4,11
	.byte	'EN0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	620
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	620
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	620
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	620
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	620
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	620
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	620
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	620
	.byte	1,0,2,35,3,0,12,8,252,3,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8489
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,8,229,5,25,128,2,13
	.byte	'OUT',0
	.word	2187
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	2758
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	2877
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2917
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	3101
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3316
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3533
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	3753
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	2917
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	4067
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4107
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4380
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4696
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	4736
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	5036
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	5076
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5411
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5697
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	4736
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	5844
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	6013
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	6185
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	6360
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6534
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6708
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	6884
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	7040
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	7373
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	7721
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	4736
	.byte	8,3,35,152,1,13
	.byte	'LPCR0',0
	.word	7845
	.byte	4,3,35,160,1,13
	.byte	'LPCR1',0
	.word	8094
	.byte	4,3,35,164,1,13
	.byte	'LPCR2',0
	.word	8353
	.byte	4,3,35,168,1,13
	.byte	'reserved_A4',0
	.word	8393
	.byte	76,3,35,172,1,13
	.byte	'ACCEN1',0
	.word	8449
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	9016
	.byte	4,3,35,252,1,0,14
	.word	9056
	.byte	3
	.word	9659
	.byte	15,7,172,1,9,4,16
	.byte	'IfxPort_State_notChanged',0,0,16
	.byte	'IfxPort_State_high',0,1,16
	.byte	'IfxPort_State_low',0,128,128,4,16
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,7,208,4,17,1,1,5
	.byte	'port',0,7,208,4,44
	.word	9664
	.byte	5
	.byte	'pinIndex',0,7,208,4,56
	.word	620
	.byte	5
	.byte	'action',0,7,208,4,80
	.word	9669
	.byte	6,0
.L210:
	.byte	8
	.byte	'IfxScuCcu_getStmFrequency',0,3,9,226,8,20
	.word	241
	.byte	1,1
.L211:
	.byte	6,0,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,11,45,16,4,11
	.byte	'SRPN',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	620
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	620
	.byte	2,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	620
	.byte	3,0,2,35,1,11
	.byte	'ECC',0,1
	.word	620
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	620
	.byte	2,0,2,35,2,11
	.byte	'SRR',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	620
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	620
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	620
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	620
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	620
	.byte	1,0,2,35,3,0,12,11,70,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9890
	.byte	4,2,35,0,0,14
	.word	10180
.L227:
	.byte	3
	.word	10219
.L239:
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,10,250,1,17,1,1
.L241:
	.byte	5
	.byte	'src',0,10,250,1,60
	.word	10224
.L243:
	.byte	6,0
.L244:
	.byte	4
	.byte	'IfxSrc_enable',0,3,10,140,2,17,1,1
.L245:
	.byte	5
	.byte	'src',0,10,140,2,54
	.word	10224
.L247:
	.byte	6,0,15,12,69,9,1,16
	.byte	'IfxSrc_Tos_cpu0',0,0,16
	.byte	'IfxSrc_Tos_cpu1',0,1,16
	.byte	'IfxSrc_Tos_dma',0,3,0
.L229:
	.byte	4
	.byte	'IfxSrc_init',0,3,10,146,2,17,1,1
.L232:
	.byte	5
	.byte	'src',0,10,146,2,52
	.word	10224
.L234:
	.byte	5
	.byte	'typOfService',0,10,146,2,68
	.word	10309
.L236:
	.byte	5
	.byte	'priority',0,10,146,2,95
	.word	637
.L238:
	.byte	17,6,0,0,10
	.byte	'_Ifx_STM_CLC_Bits',0,14,100,16,4,11
	.byte	'DISR',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	445
	.byte	28,0,2,35,0,0,12,14,149,2,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10445
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ID_Bits',0,14,142,1,16,4,11
	.byte	'MODREV',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	637
	.byte	16,0,2,35,2,0,12,14,181,2,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10601
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM0_Bits',0,14,192,1,16,4,11
	.byte	'STM31_0',0,4
	.word	445
	.byte	32,0,2,35,0,0,12,14,229,2,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10723
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM1_Bits',0,14,204,1,16,4,11
	.byte	'STM35_4',0,4
	.word	445
	.byte	32,0,2,35,0,0,12,14,245,2,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10808
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM2_Bits',0,14,210,1,16,4,11
	.byte	'STM39_8',0,4
	.word	445
	.byte	32,0,2,35,0,0,12,14,253,2,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10893
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM3_Bits',0,14,216,1,16,4,11
	.byte	'STM43_12',0,4
	.word	445
	.byte	32,0,2,35,0,0,12,14,133,3,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10978
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM4_Bits',0,14,222,1,16,4,11
	.byte	'STM47_16',0,4
	.word	445
	.byte	32,0,2,35,0,0,12,14,141,3,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11064
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM5_Bits',0,14,228,1,16,4,11
	.byte	'STM51_20',0,4
	.word	445
	.byte	32,0,2,35,0,0,12,14,149,3,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11150
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM6_Bits',0,14,234,1,16,4,11
	.byte	'STM63_32',0,4
	.word	445
	.byte	32,0,2,35,0,0,12,14,157,3,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11236
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_CAP_Bits',0,14,88,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	445
	.byte	32,0,2,35,0,0,12,14,133,2,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11322
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_CMP_Bits',0,14,123,16,4,11
	.byte	'CMPVAL',0,4
	.word	445
	.byte	32,0,2,35,0,0,12,14,165,2,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11409
	.byte	4,2,35,0,0,18,8
	.word	11451
	.byte	19,1,0,10
	.byte	'_Ifx_STM_CMCON_Bits',0,14,110,16,4,11
	.byte	'MSIZE0',0,1
	.word	620
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	620
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	620
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	620
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	620
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	620
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	620
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	620
	.byte	3,0,2,35,3,0,12,14,157,2,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11500
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ICR_Bits',0,14,129,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	445
	.byte	25,0,2,35,0,0,12,14,173,2,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11731
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ISCR_Bits',0,14,150,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	445
	.byte	28,0,2,35,0,0,12,14,189,2,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11948
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,14,198,1,16,4,11
	.byte	'STM31_0',0,4
	.word	445
	.byte	32,0,2,35,0,0,12,14,237,2,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12112
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_CAPSV_Bits',0,14,94,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	445
	.byte	32,0,2,35,0,0,12,14,141,2,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12199
	.byte	4,2,35,0,0,18,144,1
	.word	620
	.byte	19,143,1,0,10
	.byte	'_Ifx_STM_OCS_Bits',0,14,182,1,16,4,11
	.byte	'reserved_0',0,4
	.word	445
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	620
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	620
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	620
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	620
	.byte	2,0,2,35,3,0,12,14,221,2,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12299
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,14,175,1,16,4,11
	.byte	'CLR',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	445
	.byte	31,0,2,35,0,0,12,14,213,2,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12459
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_KRST1_Bits',0,14,168,1,16,4,11
	.byte	'RST',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	445
	.byte	31,0,2,35,0,0,12,14,205,2,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12565
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_KRST0_Bits',0,14,160,1,16,4,11
	.byte	'RST',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	445
	.byte	30,0,2,35,0,0,12,14,197,2,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12669
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,14,82,16,4,11
	.byte	'reserved_0',0,4
	.word	445
	.byte	32,0,2,35,0,0,12,14,253,1,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12792
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,14,45,16,4,11
	.byte	'EN0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	620
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	620
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	620
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	620
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	620
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	620
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	620
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	620
	.byte	1,0,2,35,3,0,12,14,245,1,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12881
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM',0,14,173,3,25,128,2,13
	.byte	'CLC',0
	.word	10561
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	2917
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	10683
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2917
	.byte	4,2,35,12,13
	.byte	'TIM0',0
	.word	10768
	.byte	4,2,35,16,13
	.byte	'TIM1',0
	.word	10853
	.byte	4,2,35,20,13
	.byte	'TIM2',0
	.word	10938
	.byte	4,2,35,24,13
	.byte	'TIM3',0
	.word	11024
	.byte	4,2,35,28,13
	.byte	'TIM4',0
	.word	11110
	.byte	4,2,35,32,13
	.byte	'TIM5',0
	.word	11196
	.byte	4,2,35,36,13
	.byte	'TIM6',0
	.word	11282
	.byte	4,2,35,40,13
	.byte	'CAP',0
	.word	11369
	.byte	4,2,35,44,13
	.byte	'CMP',0
	.word	11491
	.byte	8,2,35,48,13
	.byte	'CMCON',0
	.word	11691
	.byte	4,2,35,56,13
	.byte	'ICR',0
	.word	11908
	.byte	4,2,35,60,13
	.byte	'ISCR',0
	.word	12072
	.byte	4,2,35,64,13
	.byte	'reserved_44',0
	.word	5076
	.byte	12,2,35,68,13
	.byte	'TIM0SV',0
	.word	12159
	.byte	4,2,35,80,13
	.byte	'CAPSV',0
	.word	12248
	.byte	4,2,35,84,13
	.byte	'reserved_58',0
	.word	12288
	.byte	144,1,2,35,88,13
	.byte	'OCS',0
	.word	12419
	.byte	4,3,35,232,1,13
	.byte	'KRSTCLR',0
	.word	12525
	.byte	4,3,35,236,1,13
	.byte	'KRST1',0
	.word	12629
	.byte	4,3,35,240,1,13
	.byte	'KRST0',0
	.word	12752
	.byte	4,3,35,244,1,13
	.byte	'ACCEN1',0
	.word	12841
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	13410
	.byte	4,3,35,252,1,0,14
	.word	13450
.L251:
	.byte	3
	.word	13870
.L166:
	.byte	8
	.byte	'IfxStm_get',0,3,13,162,4,19
	.word	327
	.byte	1,1
.L169:
	.byte	5
	.byte	'stm',0,13,162,4,39
	.word	13875
.L171:
	.byte	6,0
.L200:
	.byte	8
	.byte	'IfxStm_getFrequency',0,3,13,179,4,20
	.word	241
	.byte	1,1
.L203:
	.byte	5
	.byte	'stm',0,13,179,4,49
	.word	13875
.L205:
	.byte	17
.L209:
	.byte	6,6,0,0,8
	.byte	'IfxStm_getLower',0,3,13,190,4,19
	.word	1680
	.byte	1,1,5
	.byte	'stm',0,13,190,4,44
	.word	13875
	.byte	6,0,15,13,151,1,9,1,16
	.byte	'IfxStm_Comparator_0',0,0,16
	.byte	'IfxStm_Comparator_1',0,1,0
.L132:
	.byte	4
	.byte	'IfxStm_updateCompare',0,3,13,166,5,17,1,1
.L135:
	.byte	5
	.byte	'stm',0,13,166,5,47
	.word	13875
.L137:
	.byte	5
	.byte	'comparator',0,13,166,5,70
	.word	14011
.L139:
	.byte	5
	.byte	'ticks',0,13,166,5,89
	.word	1680
.L141:
	.byte	6,0,20
	.byte	'IfxStdIf_InterfaceDriver',0,16,118,15
	.word	359
	.byte	21
	.word	241
	.byte	1,1,22
	.word	359
	.byte	0,3
	.word	14174
	.byte	20
	.byte	'IfxStdIf_Timer_GetFrequency',0,15,102,19
	.word	14187
	.byte	21
	.word	1680
	.byte	1,1,22
	.word	359
	.byte	0,3
	.word	14228
	.byte	20
	.byte	'IfxStdIf_Timer_GetPeriod',0,15,108,26
	.word	14241
	.byte	20
	.byte	'IfxStdIf_Timer_GetResolution',0,15,114,19
	.word	14187
	.byte	20
	.byte	'IfxStdIf_Timer_GetTrigger',0,15,120,26
	.word	14241
	.byte	21
	.word	620
	.byte	1,1,22
	.word	359
	.byte	22
	.word	241
	.byte	0,3
	.word	14350
	.byte	20
	.byte	'IfxStdIf_Timer_SetFrequency',0,15,128,1,19
	.word	14368
	.byte	23,1,1,22
	.word	359
	.byte	0,3
	.word	14410
	.byte	20
	.byte	'IfxStdIf_Timer_UpdateInputFrequency',0,15,134,1,16
	.word	14419
	.byte	20
	.byte	'IfxStdIf_Timer_ApplyUpdate',0,15,155,1,16
	.word	14419
	.byte	20
	.byte	'IfxStdIf_Timer_DisableUpdate',0,15,172,1,16
	.word	14419
	.byte	20
	.byte	'IfxStdIf_Timer_GetInputFrequency',0,15,178,1,19
	.word	14187
	.byte	20
	.byte	'IfxStdIf_Timer_Run',0,15,187,1,16
	.word	14419
	.byte	21
	.word	620
	.byte	1,1,22
	.word	359
	.byte	22
	.word	1680
	.byte	0,3
	.word	14613
	.byte	20
	.byte	'IfxStdIf_Timer_SetPeriod',0,15,197,1,19
	.word	14631
	.byte	23,1,1,22
	.word	359
	.byte	22
	.word	620
	.byte	0,3
	.word	14670
	.byte	20
	.byte	'IfxStdIf_Timer_SetSingleMode',0,15,206,1,16
	.word	14684
	.byte	23,1,1,22
	.word	359
	.byte	22
	.word	1680
	.byte	0,3
	.word	14727
	.byte	20
	.byte	'IfxStdIf_Timer_SetTrigger',0,15,218,1,16
	.word	14741
	.byte	20
	.byte	'IfxStdIf_Timer_Stop',0,15,224,1,16
	.word	14419
	.byte	21
	.word	620
	.byte	1,1,22
	.word	359
	.byte	0,3
	.word	14810
	.byte	20
	.byte	'IfxStdIf_Timer_AckTimerIrq',0,15,230,1,19
	.word	14823
	.byte	20
	.byte	'IfxStdIf_Timer_AckTriggerIrq',0,15,236,1,19
	.word	14823
	.byte	10
	.byte	'IfxStdIf_Timer_',0,15,240,1,8,68,13
	.byte	'driver',0
	.word	14141
	.byte	4,2,35,0,13
	.byte	'getFrequency',0
	.word	14192
	.byte	4,2,35,4,13
	.byte	'getPeriod',0
	.word	14246
	.byte	4,2,35,8,13
	.byte	'getResolution',0
	.word	14279
	.byte	4,2,35,12,13
	.byte	'getTrigger',0
	.word	14316
	.byte	4,2,35,16,13
	.byte	'setFrequency',0
	.word	14373
	.byte	4,2,35,20,13
	.byte	'updateInputFrequency',0
	.word	14424
	.byte	4,2,35,24,13
	.byte	'applyUpdate',0
	.word	14469
	.byte	4,2,35,28,13
	.byte	'disableUpdate',0
	.word	14505
	.byte	4,2,35,32,13
	.byte	'getInputFrequency',0
	.word	14543
	.byte	4,2,35,36,13
	.byte	'run',0
	.word	14585
	.byte	4,2,35,40,13
	.byte	'setPeriod',0
	.word	14636
	.byte	4,2,35,44,13
	.byte	'setSingleMode',0
	.word	14689
	.byte	4,2,35,48,13
	.byte	'setTrigger',0
	.word	14746
	.byte	4,2,35,52,13
	.byte	'stop',0
	.word	14781
	.byte	4,2,35,56,13
	.byte	'ackTimerIrq',0
	.word	14828
	.byte	4,2,35,60,13
	.byte	'ackTriggerIrq',0
	.word	14864
	.byte	4,2,35,64,0
.L193:
	.byte	3
	.word	14902
	.byte	8
	.byte	'IfxStdIf_Timer_getInputFrequency',0,3,15,236,2,20
	.word	241
	.byte	1,1,5
	.byte	'stdIf',0,15,236,2,69
	.word	15281
	.byte	6,0,3
	.word	353
	.byte	3
	.word	14174
	.byte	3
	.word	14228
	.byte	3
	.word	14174
	.byte	3
	.word	14228
	.byte	3
	.word	14350
	.byte	3
	.word	14410
	.byte	3
	.word	14410
	.byte	3
	.word	14410
	.byte	3
	.word	14174
	.byte	3
	.word	14410
	.byte	3
	.word	14613
	.byte	3
	.word	14670
	.byte	3
	.word	14727
	.byte	3
	.word	14410
	.byte	3
	.word	14810
	.byte	3
	.word	14810
	.byte	8
	.byte	'IfxStdIf_Timer_tickToS',0,3,15,182,3,20
	.word	241
	.byte	1,1,5
	.byte	'clockFreq',0,15,182,3,51
	.word	241
	.byte	5
	.byte	'ticks',0,15,182,3,77
	.word	1680
	.byte	6,0,8
	.byte	'IfxStdIf_Timer_sToTick',0,3,15,193,3,27
	.word	1680
	.byte	1,1,5
	.byte	'clockFreq',0,15,193,3,58
	.word	241
	.byte	5
	.byte	'seconds',0,15,193,3,77
	.word	241
	.byte	6,0,24
	.word	461
	.byte	25
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,22
	.word	15577
	.byte	0,14
	.word	445
	.byte	3
	.word	445
	.byte	26
	.byte	'__cmpswapw',0
	.word	15619
	.byte	1,1,1,1,27
	.byte	'p',0
	.word	15624
	.byte	27
	.byte	'value',0
	.word	445
	.byte	27
	.byte	'compare',0
	.word	445
	.byte	0,26
	.byte	'__clz',0
	.word	461
	.byte	1,1,1,1,22
	.word	461
	.byte	0,14
	.word	461
	.byte	26
	.byte	'__mfcr',0
	.word	15702
	.byte	1,1,1,1,22
	.word	461
	.byte	0,28
	.byte	'__nop',0,1,1,1,1,28
	.byte	'__disable',0,1,1,1,1,28
	.byte	'__enable',0,1,1,1,1,29
	.word	189
	.byte	30
	.word	215
	.byte	6,0,29
	.word	250
	.byte	30
	.word	282
	.byte	6,0,29
	.word	295
	.byte	6,0,29
	.word	364
	.byte	30
	.word	383
	.byte	6,0,29
	.word	399
	.byte	30
	.word	414
	.byte	30
	.word	428
	.byte	6,0,29
	.word	1207
	.byte	30
	.word	1247
	.byte	30
	.word	1265
	.byte	6,0,29
	.word	1285
	.byte	30
	.word	1323
	.byte	30
	.word	1341
	.byte	6,0,29
	.word	1361
	.byte	30
	.word	1412
	.byte	6,0,29
	.word	1511
	.byte	6,0,29
	.word	1545
	.byte	6,0,29
	.word	1587
	.byte	17,31
	.word	1545
	.byte	32
	.word	1585
	.byte	0,6,0,0,29
	.word	1628
	.byte	30
	.word	1661
	.byte	6,0,29
	.word	1701
	.byte	30
	.word	1742
	.byte	6,0,29
	.word	1761
	.byte	30
	.word	1816
	.byte	6,0,29
	.word	1835
	.byte	30
	.word	1875
	.byte	30
	.word	1892
	.byte	17,6,0,0,29
	.word	9772
	.byte	30
	.word	9800
	.byte	30
	.word	9814
	.byte	30
	.word	9832
	.byte	6,0,29
	.word	9850
	.byte	6,0,33
	.byte	'IfxScuCcu_getSourceFrequency',0,9,173,7,20
	.word	241
	.byte	1,1,1,1,29
	.word	10229
	.byte	30
	.word	10257
	.byte	6,0,29
	.word	10272
	.byte	30
	.word	10294
	.byte	6,0,29
	.word	10368
	.byte	30
	.word	10388
	.byte	30
	.word	10401
	.byte	30
	.word	10423
	.byte	17,31
	.word	10229
	.byte	30
	.word	10257
	.byte	32
	.word	10270
	.byte	0,6,0,0,29
	.word	13880
	.byte	30
	.word	13903
	.byte	6,0,29
	.word	13918
	.byte	30
	.word	13950
	.byte	17,17,31
	.word	9850
	.byte	32
	.word	9888
	.byte	0,0,6,0,0,29
	.word	13968
	.byte	30
	.word	13996
	.byte	6,0,29
	.word	14062
	.byte	30
	.word	14091
	.byte	30
	.word	14104
	.byte	30
	.word	14124
	.byte	6,0,34
	.byte	'IfxStm_clearCompareFlag',0,13,210,3,17,1,1,1,1,5
	.byte	'stm',0,13,210,3,50
	.word	13875
	.byte	5
	.byte	'comparator',0,13,210,3,73
	.word	14011
	.byte	0,34
	.byte	'IfxStm_disableComparatorInterrupt',0,13,217,3,17,1,1,1,1,5
	.byte	'stm',0,13,217,3,60
	.word	13875
	.byte	5
	.byte	'comparator',0,13,217,3,83
	.word	14011
	.byte	0,34
	.byte	'IfxStm_enableComparatorInterrupt',0,13,224,3,17,1,1,1,1,5
	.byte	'stm',0,13,224,3,59
	.word	13875
	.byte	5
	.byte	'comparator',0,13,224,3,82
	.word	14011
	.byte	0,35
	.byte	'IfxStm_getSrcPointer',0,13,231,3,35
	.word	10224
	.byte	1,1,1,1,5
	.byte	'stm',0,13,231,3,65
	.word	13875
	.byte	5
	.byte	'comparator',0,13,231,3,88
	.word	14011
	.byte	0,35
	.byte	'IfxStm_isCompareFlagSet',0,13,251,3,20
	.word	620
	.byte	1,1,1,1,5
	.byte	'stm',0,13,251,3,53
	.word	13875
	.byte	5
	.byte	'comparator',0,13,251,3,76
	.word	14011
	.byte	0,15,13,167,1,9,1,16
	.byte	'IfxStm_ComparatorOffset_0',0,0,16
	.byte	'IfxStm_ComparatorOffset_1',0,1,16
	.byte	'IfxStm_ComparatorOffset_2',0,2,16
	.byte	'IfxStm_ComparatorOffset_3',0,3,16
	.byte	'IfxStm_ComparatorOffset_4',0,4,16
	.byte	'IfxStm_ComparatorOffset_5',0,5,16
	.byte	'IfxStm_ComparatorOffset_6',0,6,16
	.byte	'IfxStm_ComparatorOffset_7',0,7,16
	.byte	'IfxStm_ComparatorOffset_8',0,8,16
	.byte	'IfxStm_ComparatorOffset_9',0,9,16
	.byte	'IfxStm_ComparatorOffset_10',0,10,16
	.byte	'IfxStm_ComparatorOffset_11',0,11,16
	.byte	'IfxStm_ComparatorOffset_12',0,12,16
	.byte	'IfxStm_ComparatorOffset_13',0,13,16
	.byte	'IfxStm_ComparatorOffset_14',0,14,16
	.byte	'IfxStm_ComparatorOffset_15',0,15,16
	.byte	'IfxStm_ComparatorOffset_16',0,16,16
	.byte	'IfxStm_ComparatorOffset_17',0,17,16
	.byte	'IfxStm_ComparatorOffset_18',0,18,16
	.byte	'IfxStm_ComparatorOffset_19',0,19,16
	.byte	'IfxStm_ComparatorOffset_20',0,20,16
	.byte	'IfxStm_ComparatorOffset_21',0,21,16
	.byte	'IfxStm_ComparatorOffset_22',0,22,16
	.byte	'IfxStm_ComparatorOffset_23',0,23,16
	.byte	'IfxStm_ComparatorOffset_24',0,24,16
	.byte	'IfxStm_ComparatorOffset_25',0,25,16
	.byte	'IfxStm_ComparatorOffset_26',0,26,16
	.byte	'IfxStm_ComparatorOffset_27',0,27,16
	.byte	'IfxStm_ComparatorOffset_28',0,28,16
	.byte	'IfxStm_ComparatorOffset_29',0,29,16
	.byte	'IfxStm_ComparatorOffset_30',0,30,16
	.byte	'IfxStm_ComparatorOffset_31',0,31,0,15,13,205,1,9,1,16
	.byte	'IfxStm_ComparatorSize_1Bit',0,0,16
	.byte	'IfxStm_ComparatorSize_2Bits',0,1,16
	.byte	'IfxStm_ComparatorSize_3Bits',0,2,16
	.byte	'IfxStm_ComparatorSize_4Bits',0,3,16
	.byte	'IfxStm_ComparatorSize_5Bits',0,4,16
	.byte	'IfxStm_ComparatorSize_6Bits',0,5,16
	.byte	'IfxStm_ComparatorSize_7Bits',0,6,16
	.byte	'IfxStm_ComparatorSize_8Bits',0,7,16
	.byte	'IfxStm_ComparatorSize_9Bits',0,8,16
	.byte	'IfxStm_ComparatorSize_10Bits',0,9,16
	.byte	'IfxStm_ComparatorSize_11Bits',0,10,16
	.byte	'IfxStm_ComparatorSize_12Bits',0,11,16
	.byte	'IfxStm_ComparatorSize_13Bits',0,12,16
	.byte	'IfxStm_ComparatorSize_14Bits',0,13,16
	.byte	'IfxStm_ComparatorSize_15Bits',0,14,16
	.byte	'IfxStm_ComparatorSize_16Bits',0,15,16
	.byte	'IfxStm_ComparatorSize_17Bits',0,16,16
	.byte	'IfxStm_ComparatorSize_18Bits',0,17,16
	.byte	'IfxStm_ComparatorSize_19Bits',0,18,16
	.byte	'IfxStm_ComparatorSize_20Bits',0,19,16
	.byte	'IfxStm_ComparatorSize_21Bits',0,20,16
	.byte	'IfxStm_ComparatorSize_22Bits',0,21,16
	.byte	'IfxStm_ComparatorSize_23Bits',0,22,16
	.byte	'IfxStm_ComparatorSize_24Bits',0,23,16
	.byte	'IfxStm_ComparatorSize_25Bits',0,24,16
	.byte	'IfxStm_ComparatorSize_26Bits',0,25,16
	.byte	'IfxStm_ComparatorSize_27Bits',0,26,16
	.byte	'IfxStm_ComparatorSize_28Bits',0,27,16
	.byte	'IfxStm_ComparatorSize_29Bits',0,28,16
	.byte	'IfxStm_ComparatorSize_30Bits',0,29,16
	.byte	'IfxStm_ComparatorSize_31Bits',0,30,16
	.byte	'IfxStm_ComparatorSize_32Bits',0,31,0,15,13,159,1,9,1,16
	.byte	'IfxStm_ComparatorInterrupt_ir0',0,0,16
	.byte	'IfxStm_ComparatorInterrupt_ir1',0,1,0,34
	.byte	'IfxStm_setCompareControl',0,13,133,4,17,1,1,1,1,5
	.byte	'stm',0,13,133,4,51
	.word	13875
	.byte	5
	.byte	'comparator',0,13,133,4,74
	.word	14011
	.byte	5
	.byte	'offset',0,13,133,4,110
	.word	16531
	.byte	5
	.byte	'size',0,13,133,4,140,1
	.word	17456
	.byte	5
	.byte	'interrupt',0,13,133,4,173,1
	.word	18445
	.byte	0,29
	.word	15286
	.byte	30
	.word	15331
	.byte	6,0,29
	.word	15433
	.byte	30
	.word	15468
	.byte	30
	.word	15487
	.byte	6,0,29
	.word	15504
	.byte	30
	.word	15539
	.byte	30
	.word	15558
	.byte	6,0,15,7,134,1,9,1,16
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,16
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,15,7,144,1,9,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,16
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,16
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,16
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,16
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,16
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,16
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,16
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,16
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,36,15,134,2,9,16,13
	.byte	'enabled',0
	.word	620
	.byte	1,2,35,0,13
	.byte	'triggerPoint',0
	.word	1680
	.byte	4,2,35,2,13
	.byte	'isrPriority',0
	.word	637
	.byte	2,2,35,6,13
	.byte	'isrProvider',0
	.word	10309
	.byte	1,2,35,8,13
	.byte	'outputMode',0
	.word	18683
	.byte	1,2,35,9,13
	.byte	'outputDriver',0
	.word	18753
	.byte	1,2,35,10,13
	.byte	'risingEdgeAtPeriod',0
	.word	620
	.byte	1,2,35,11,13
	.byte	'outputEnabled',0
	.word	620
	.byte	1,2,35,12,0,15,15,88,9,1,16
	.byte	'IfxStdIf_Timer_CountDir_up',0,0,16
	.byte	'IfxStdIf_Timer_CountDir_upAndDown',0,1,16
	.byte	'IfxStdIf_Timer_CountDir_down',0,2,0,36,15,147,2,9,36,13
	.byte	'frequency',0
	.word	241
	.byte	4,2,35,0,13
	.byte	'isrPriority',0
	.word	637
	.byte	2,2,35,4,13
	.byte	'isrProvider',0
	.word	10309
	.byte	1,2,35,6,13
	.byte	'minResolution',0
	.word	241
	.byte	4,2,35,8,13
	.byte	'trigger',0
	.word	19168
	.byte	16,2,35,12,13
	.byte	'countDir',0
	.word	19349
	.byte	1,2,35,28,13
	.byte	'startOffset',0
	.word	241
	.byte	4,2,35,30,0,3
	.word	19451
	.byte	34
	.byte	'IfxStdIf_Timer_initConfig',0,15,215,3,17,1,1,1,1,5
	.byte	'config',0,15,215,3,66
	.word	19598
	.byte	0,34
	.byte	'IfxStdIf_Timer_initStdIf',0,15,223,3,17,1,1,1,1,5
	.byte	'stdIf',0,15,223,3,58
	.word	15281
	.byte	5
	.byte	'driver',0,15,223,3,90
	.word	14141
	.byte	0,36,17,129,1,9,12,13
	.byte	'period',0
	.word	1680
	.byte	4,2,35,0,13
	.byte	'triggerEnabled',0
	.word	620
	.byte	1,2,35,4,13
	.byte	'clockFreq',0
	.word	241
	.byte	4,2,35,6,13
	.byte	'countDir',0
	.word	19349
	.byte	1,2,35,10,13
	.byte	'singleShot',0
	.word	620
	.byte	1,2,35,11,0,36,17,144,1,9,24,13
	.byte	'base',0
	.word	19721
	.byte	12,2,35,0,13
	.byte	'stm',0
	.word	13875
	.byte	4,2,35,12,13
	.byte	'comparator',0
	.word	14011
	.byte	1,2,35,16,13
	.byte	'comparatorValue',0
	.word	1680
	.byte	4,2,35,18,13
	.byte	'comparatorShift',0
	.word	620
	.byte	1,2,35,22,0
.L129:
	.byte	3
	.word	19825
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,18,246,2,16,4,11
	.byte	'CCPN',0,4
	.word	468
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	468
	.byte	5,17,2,35,0,11
	.byte	'IE',0,4
	.word	468
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	468
	.byte	10,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	468
	.byte	6,0,2,35,0,0
.L164:
	.byte	12,18,223,7,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19934
	.byte	4,2,35,0,0,36,17,155,1,9,44,13
	.byte	'base',0
	.word	19451
	.byte	36,2,35,0,13
	.byte	'stm',0
	.word	13875
	.byte	4,2,35,36,13
	.byte	'comparator',0
	.word	14011
	.byte	1,2,35,40,0,24
	.word	20091
.L215:
	.byte	3
	.word	20145
.L218:
	.byte	3
	.word	19721
.L249:
	.byte	3
	.word	20091
	.byte	37
	.byte	'__INDIRECT__',0,19,1,1,1,1,1,7
	.byte	'short int',0,2,5,20
	.byte	'__wchar_t',0,19,1,1
	.word	20185
	.byte	20
	.byte	'__size_t',0,19,1,1
	.word	445
	.byte	20
	.byte	'__ptrdiff_t',0,19,1,1
	.word	461
	.byte	38,1,3
	.word	20253
	.byte	20
	.byte	'__codeptr',0,19,1,1
	.word	20255
	.byte	20
	.byte	'boolean',0,20,101,29
	.word	620
	.byte	20
	.byte	'uint8',0,20,105,29
	.word	620
	.byte	20
	.byte	'uint16',0,20,109,29
	.word	637
	.byte	20
	.byte	'uint32',0,20,113,29
	.word	1680
	.byte	20
	.byte	'uint64',0,20,118,29
	.word	327
	.byte	20
	.byte	'sint16',0,20,126,29
	.word	20185
	.byte	7
	.byte	'long int',0,4,5,20
	.byte	'sint32',0,20,131,1,29
	.word	20368
	.byte	7
	.byte	'long long int',0,8,5,20
	.byte	'sint64',0,20,139,1,29
	.word	20396
	.byte	20
	.byte	'float32',0,20,168,1,29
	.word	241
	.byte	20
	.byte	'pvoid',0,21,57,28
	.word	359
	.byte	20
	.byte	'Ifx_TickTime',0,21,79,28
	.word	20396
	.byte	20
	.byte	'Ifx_Priority',0,21,103,16
	.word	637
	.byte	20
	.byte	'Ifx_TimerValue',0,21,104,16
	.word	1680
	.byte	15,21,130,1,9,1,16
	.byte	'Ifx_RxSel_a',0,0,16
	.byte	'Ifx_RxSel_b',0,1,16
	.byte	'Ifx_RxSel_c',0,2,16
	.byte	'Ifx_RxSel_d',0,3,16
	.byte	'Ifx_RxSel_e',0,4,16
	.byte	'Ifx_RxSel_f',0,5,16
	.byte	'Ifx_RxSel_g',0,6,16
	.byte	'Ifx_RxSel_h',0,7,0,20
	.byte	'Ifx_RxSel',0,21,140,1,3
	.word	20525
	.byte	20
	.byte	'Ifx_STM_ACCEN0_Bits',0,14,79,3
	.word	12881
	.byte	20
	.byte	'Ifx_STM_ACCEN1_Bits',0,14,85,3
	.word	12792
	.byte	20
	.byte	'Ifx_STM_CAP_Bits',0,14,91,3
	.word	11322
	.byte	20
	.byte	'Ifx_STM_CAPSV_Bits',0,14,97,3
	.word	12199
	.byte	20
	.byte	'Ifx_STM_CLC_Bits',0,14,107,3
	.word	10445
	.byte	20
	.byte	'Ifx_STM_CMCON_Bits',0,14,120,3
	.word	11500
	.byte	20
	.byte	'Ifx_STM_CMP_Bits',0,14,126,3
	.word	11409
	.byte	20
	.byte	'Ifx_STM_ICR_Bits',0,14,139,1,3
	.word	11731
	.byte	20
	.byte	'Ifx_STM_ID_Bits',0,14,147,1,3
	.word	10601
	.byte	20
	.byte	'Ifx_STM_ISCR_Bits',0,14,157,1,3
	.word	11948
	.byte	20
	.byte	'Ifx_STM_KRST0_Bits',0,14,165,1,3
	.word	12669
	.byte	20
	.byte	'Ifx_STM_KRST1_Bits',0,14,172,1,3
	.word	12565
	.byte	20
	.byte	'Ifx_STM_KRSTCLR_Bits',0,14,179,1,3
	.word	12459
	.byte	20
	.byte	'Ifx_STM_OCS_Bits',0,14,189,1,3
	.word	12299
	.byte	20
	.byte	'Ifx_STM_TIM0_Bits',0,14,195,1,3
	.word	10723
	.byte	20
	.byte	'Ifx_STM_TIM0SV_Bits',0,14,201,1,3
	.word	12112
	.byte	20
	.byte	'Ifx_STM_TIM1_Bits',0,14,207,1,3
	.word	10808
	.byte	20
	.byte	'Ifx_STM_TIM2_Bits',0,14,213,1,3
	.word	10893
	.byte	20
	.byte	'Ifx_STM_TIM3_Bits',0,14,219,1,3
	.word	10978
	.byte	20
	.byte	'Ifx_STM_TIM4_Bits',0,14,225,1,3
	.word	11064
	.byte	20
	.byte	'Ifx_STM_TIM5_Bits',0,14,231,1,3
	.word	11150
	.byte	20
	.byte	'Ifx_STM_TIM6_Bits',0,14,237,1,3
	.word	11236
	.byte	20
	.byte	'Ifx_STM_ACCEN0',0,14,250,1,3
	.word	13410
	.byte	20
	.byte	'Ifx_STM_ACCEN1',0,14,130,2,3
	.word	12841
	.byte	20
	.byte	'Ifx_STM_CAP',0,14,138,2,3
	.word	11369
	.byte	20
	.byte	'Ifx_STM_CAPSV',0,14,146,2,3
	.word	12248
	.byte	20
	.byte	'Ifx_STM_CLC',0,14,154,2,3
	.word	10561
	.byte	20
	.byte	'Ifx_STM_CMCON',0,14,162,2,3
	.word	11691
	.byte	20
	.byte	'Ifx_STM_CMP',0,14,170,2,3
	.word	11451
	.byte	20
	.byte	'Ifx_STM_ICR',0,14,178,2,3
	.word	11908
	.byte	20
	.byte	'Ifx_STM_ID',0,14,186,2,3
	.word	10683
	.byte	20
	.byte	'Ifx_STM_ISCR',0,14,194,2,3
	.word	12072
	.byte	20
	.byte	'Ifx_STM_KRST0',0,14,202,2,3
	.word	12752
	.byte	20
	.byte	'Ifx_STM_KRST1',0,14,210,2,3
	.word	12629
	.byte	20
	.byte	'Ifx_STM_KRSTCLR',0,14,218,2,3
	.word	12525
	.byte	20
	.byte	'Ifx_STM_OCS',0,14,226,2,3
	.word	12419
	.byte	20
	.byte	'Ifx_STM_TIM0',0,14,234,2,3
	.word	10768
	.byte	20
	.byte	'Ifx_STM_TIM0SV',0,14,242,2,3
	.word	12159
	.byte	20
	.byte	'Ifx_STM_TIM1',0,14,250,2,3
	.word	10853
	.byte	20
	.byte	'Ifx_STM_TIM2',0,14,130,3,3
	.word	10938
	.byte	20
	.byte	'Ifx_STM_TIM3',0,14,138,3,3
	.word	11024
	.byte	20
	.byte	'Ifx_STM_TIM4',0,14,146,3,3
	.word	11110
	.byte	20
	.byte	'Ifx_STM_TIM5',0,14,154,3,3
	.word	11196
	.byte	20
	.byte	'Ifx_STM_TIM6',0,14,162,3,3
	.word	11282
	.byte	14
	.word	13450
	.byte	20
	.byte	'Ifx_STM',0,14,201,3,3
	.word	21746
	.byte	15,22,236,10,9,1,16
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,16
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,20
	.byte	'IfxScu_CCUCON0_CLKSEL',0,22,240,10,3
	.word	21768
	.byte	15,22,250,10,9,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,16
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,20
	.byte	'IfxScu_WDTCON1_IR',0,22,255,10,3
	.word	21865
	.byte	10
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,4,45,16,4,11
	.byte	'EN0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	620
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	620
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	620
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	620
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	620
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	620
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	620
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_ACCEN0_Bits',0,4,79,3
	.word	21987
	.byte	10
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,4,82,16,4,11
	.byte	'reserved_0',0,4
	.word	445
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_SCU_ACCEN1_Bits',0,4,85,3
	.word	22544
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,88,16,4,11
	.byte	'STM0DIS',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	445
	.byte	29,0,2,35,0,0,20
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,94,3
	.word	22621
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,97,16,4,11
	.byte	'BAUD1DIV',0,1
	.word	620
	.byte	4,4,2,35,0,11
	.byte	'BAUD2DIV',0,1
	.word	620
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	620
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	620
	.byte	4,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	620
	.byte	4,4,2,35,2,11
	.byte	'FSI2DIV',0,1
	.word	620
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	620
	.byte	2,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	620
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	620
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	620
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,111,3
	.word	22757
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,114,16,4,11
	.byte	'CANDIV',0,1
	.word	620
	.byte	4,4,2,35,0,11
	.byte	'ERAYDIV',0,1
	.word	620
	.byte	4,0,2,35,0,11
	.byte	'STMDIV',0,1
	.word	620
	.byte	4,4,2,35,1,11
	.byte	'GTMDIV',0,1
	.word	620
	.byte	4,0,2,35,1,11
	.byte	'ETHDIV',0,1
	.word	620
	.byte	4,4,2,35,2,11
	.byte	'ASCLINFDIV',0,1
	.word	620
	.byte	4,0,2,35,2,11
	.byte	'ASCLINSDIV',0,1
	.word	620
	.byte	4,4,2,35,3,11
	.byte	'INSEL',0,1
	.word	620
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,126,3
	.word	23037
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,129,1,16,4,11
	.byte	'BBBDIV',0,1
	.word	620
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	445
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,135,1,3
	.word	23275
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,138,1,16,4,11
	.byte	'PLLDIV',0,1
	.word	620
	.byte	6,2,2,35,0,11
	.byte	'PLLSEL',0,1
	.word	620
	.byte	2,0,2,35,0,11
	.byte	'PLLERAYDIV',0,1
	.word	620
	.byte	6,2,2,35,1,11
	.byte	'PLLERAYSEL',0,1
	.word	620
	.byte	2,0,2,35,1,11
	.byte	'SRIDIV',0,1
	.word	620
	.byte	6,2,2,35,2,11
	.byte	'SRISEL',0,1
	.word	620
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	620
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,150,1,3
	.word	23403
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,153,1,16,4,11
	.byte	'SPBDIV',0,1
	.word	620
	.byte	6,2,2,35,0,11
	.byte	'SPBSEL',0,1
	.word	620
	.byte	2,0,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	620
	.byte	6,2,2,35,1,11
	.byte	'GTMSEL',0,1
	.word	620
	.byte	2,0,2,35,1,11
	.byte	'STMDIV',0,1
	.word	620
	.byte	6,2,2,35,2,11
	.byte	'STMSEL',0,1
	.word	620
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	620
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,165,1,3
	.word	23646
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,168,1,16,4,11
	.byte	'MAXDIV',0,1
	.word	620
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	445
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,174,1,3
	.word	23881
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,177,1,16,4,11
	.byte	'CPU0DIV',0,1
	.word	620
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	445
	.byte	26,0,2,35,0,0,20
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,181,1,3
	.word	24009
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,4,184,1,16,4,11
	.byte	'CPU1DIV',0,1
	.word	620
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	445
	.byte	26,0,2,35,0,0,20
	.byte	'Ifx_SCU_CCUCON7_Bits',0,4,188,1,3
	.word	24109
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,191,1,16,4,11
	.byte	'CHREV',0,1
	.word	620
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	620
	.byte	2,0,2,35,0,11
	.byte	'CHID',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'EEA',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	620
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	620
	.byte	4,4,2,35,3,11
	.byte	'SP',0,1
	.word	620
	.byte	2,2,2,35,3,11
	.byte	'SEC',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,202,1,3
	.word	24209
	.byte	10
	.byte	'_Ifx_SCU_DTSCON_Bits',0,4,205,1,16,4,11
	.byte	'PWD',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'START',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	620
	.byte	2,4,2,35,0,11
	.byte	'CAL',0,4
	.word	445
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	7,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_DTSCON_Bits',0,4,213,1,3
	.word	24417
	.byte	10
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,4,216,1,16,4,11
	.byte	'LOWER',0,2
	.word	637
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	620
	.byte	5,1,2,35,1,11
	.byte	'LLU',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	637
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	620
	.byte	4,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_DTSLIM_Bits',0,4,225,1,3
	.word	24582
	.byte	10
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,4,228,1,16,4,11
	.byte	'RESULT',0,2
	.word	637
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	620
	.byte	4,2,2,35,1,11
	.byte	'RDY',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'BUSY',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,20
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,4,235,1,3
	.word	24765
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,4,238,1,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	620
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	620
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	445
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	620
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	620
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	620
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	620
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EICR_Bits',0,4,129,2,3
	.word	24919
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,132,2,16,4,11
	.byte	'INTF0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	445
	.byte	24,0,2,35,0,0,20
	.byte	'Ifx_SCU_EIFR_Bits',0,4,143,2,3
	.word	25283
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,146,2,16,4,11
	.byte	'POL',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	637
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	620
	.byte	6,0,2,35,2,11
	.byte	'EMSFM',0,1
	.word	620
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	620
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	620
	.byte	4,0,2,35,3,0,20
	.byte	'Ifx_SCU_EMSR_Bits',0,4,159,2,3
	.word	25494
	.byte	10
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,4,162,2,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	637
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	445
	.byte	23,0,2,35,0,0,20
	.byte	'Ifx_SCU_ESRCFG_Bits',0,4,167,2,3
	.word	25746
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,170,2,16,4,11
	.byte	'ARI',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	445
	.byte	30,0,2,35,0,0,20
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,175,2,3
	.word	25864
	.byte	10
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,4,178,2,16,4,11
	.byte	'reserved_0',0,4
	.word	445
	.byte	28,4,2,35,0,11
	.byte	'EVR13OFF',0,1
	.word	620
	.byte	1,3,2,35,3,11
	.byte	'BPEVR13OFF',0,1
	.word	620
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVR13CON_Bits',0,4,185,2,3
	.word	25975
	.byte	10
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,4,188,2,16,4,11
	.byte	'reserved_0',0,4
	.word	445
	.byte	28,4,2,35,0,11
	.byte	'EVR33OFF',0,1
	.word	620
	.byte	1,3,2,35,3,11
	.byte	'BPEVR33OFF',0,1
	.word	620
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVR33CON_Bits',0,4,195,2,3
	.word	26138
	.byte	10
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,4,198,2,16,4,11
	.byte	'ADC13V',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	620
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,4,205,2,3
	.word	26301
	.byte	10
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,4,208,2,16,4,11
	.byte	'DVS13TRIM',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'DVS33TRIM',0,1
	.word	620
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,4,215,2,3
	.word	26459
	.byte	10
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,4,218,2,16,4,11
	.byte	'EVR13OVMOD',0,1
	.word	620
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	620
	.byte	2,4,2,35,0,11
	.byte	'EVR13UVMOD',0,1
	.word	620
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	620
	.byte	2,0,2,35,0,11
	.byte	'EVR33OVMOD',0,1
	.word	620
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	620
	.byte	2,4,2,35,1,11
	.byte	'EVR33UVMOD',0,1
	.word	620
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	620
	.byte	2,0,2,35,1,11
	.byte	'SWDOVMOD',0,1
	.word	620
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	620
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	620
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	637
	.byte	10,0,2,35,2,0,20
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,4,232,2,3
	.word	26624
	.byte	10
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,4,235,2,16,4,11
	.byte	'OSCTRIM',0,2
	.word	637
	.byte	10,6,2,35,0,11
	.byte	'OSCPTAT',0,1
	.word	620
	.byte	6,0,2,35,1,11
	.byte	'OSCANASEL',0,1
	.word	620
	.byte	4,4,2,35,2,11
	.byte	'HPBGTRIM',0,2
	.word	637
	.byte	7,5,2,35,2,11
	.byte	'HPBGCLKEN',0,1
	.word	620
	.byte	1,4,2,35,3,11
	.byte	'OSC3V3',0,1
	.word	620
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	620
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,4,245,2,3
	.word	26953
	.byte	10
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,4,248,2,16,4,11
	.byte	'EVR13OVVAL',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	620
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVROVMON_Bits',0,4,255,2,3
	.word	27174
	.byte	10
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,4,130,3,16,4,11
	.byte	'RST13TRIM',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	445
	.byte	16,8,2,35,0,11
	.byte	'RST13OFF',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'BPRST13OFF',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	620
	.byte	1,5,2,35,3,11
	.byte	'BPRST33OFF',0,1
	.word	620
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	620
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	620
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,4,142,3,3
	.word	27337
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,4,145,3,16,4,11
	.byte	'SD5P',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'SD5I',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'SD5D',0,1
	.word	620
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,4,152,3,3
	.word	27609
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,4,155,3,16,4,11
	.byte	'SD33P',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'SD33I',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'SD33D',0,1
	.word	620
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,4,162,3,3
	.word	27762
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,4,165,3,16,4,11
	.byte	'CT5REG0',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'CT5REG1',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'CT5REG2',0,1
	.word	620
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,4,172,3,3
	.word	27918
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,4,175,3,16,4,11
	.byte	'CT5REG3',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'CT5REG4',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,4,181,3,3
	.word	28080
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,4,184,3,16,4,11
	.byte	'CT33REG0',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'CT33REG1',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'CT33REG2',0,1
	.word	620
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,4,191,3,3
	.word	28223
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,4,194,3,16,4,11
	.byte	'CT33REG3',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'CT33REG4',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,4,200,3,3
	.word	28388
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,4,203,3,16,4,11
	.byte	'SDFREQSPRD',0,2
	.word	637
	.byte	16,0,2,35,0,11
	.byte	'SDFREQ',0,1
	.word	620
	.byte	8,0,2,35,2,11
	.byte	'SDSTEP',0,1
	.word	620
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	620
	.byte	2,2,2,35,3,11
	.byte	'SDSAMPLE',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,4,211,3,3
	.word	28533
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,4,214,3,16,4,11
	.byte	'DRVP',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'SDMINMAXDC',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'DRVN',0,1
	.word	620
	.byte	8,0,2,35,2,11
	.byte	'SDLUT',0,1
	.word	620
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,4,222,3,3
	.word	28714
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,4,225,3,16,4,11
	.byte	'SDPWMPRE',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'SDPID',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'SDVOKLVL',0,1
	.word	620
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,4,232,3,3
	.word	28888
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,4,235,3,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'SYNCDIV',0,1
	.word	620
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	445
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,4,241,3,3
	.word	29048
	.byte	10
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,4,244,3,16,4,11
	.byte	'EVR13',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'OV13',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'EVR33',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'OV33',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'UV13',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'UV33',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'EXTPASS13',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'EXTPASS33',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'BGPROK',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	445
	.byte	21,0,2,35,0,0,20
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,4,130,4,3
	.word	29192
	.byte	10
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,4,133,4,16,4,11
	.byte	'EVR13TRIM',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,4,139,4,3
	.word	29466
	.byte	10
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,4,142,4,16,4,11
	.byte	'EVR13UVVAL',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	620
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,4,149,4,3
	.word	29605
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,152,4,16,4,11
	.byte	'EN0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	620
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	637
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	620
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	620
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	620
	.byte	8,0,2,35,3,0,20
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,163,4,3
	.word	29768
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,4,166,4,16,4,11
	.byte	'STEP',0,2
	.word	637
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	620
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	620
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	637
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	620
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_FDR_Bits',0,4,174,4,3
	.word	29986
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,4,177,4,16,4,11
	.byte	'FS0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	620
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	620
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	620
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	8,0,2,35,3,0,20
	.byte	'Ifx_SCU_FMR_Bits',0,4,197,4,3
	.word	30149
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,4,200,4,16,4,11
	.byte	'MODREV',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	637
	.byte	16,0,2,35,2,0,20
	.byte	'Ifx_SCU_ID_Bits',0,4,205,4,3
	.word	30485
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,208,4,16,4,11
	.byte	'IPEN00',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	620
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	620
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	620
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	620
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	620
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	620
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	620
	.byte	2,0,2,35,3,0,20
	.byte	'Ifx_SCU_IGCR_Bits',0,4,232,4,3
	.word	30592
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,4,235,4,16,4,11
	.byte	'P0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	445
	.byte	30,0,2,35,0,0,20
	.byte	'Ifx_SCU_IN_Bits',0,4,240,4,3
	.word	31044
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,243,4,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	620
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	620
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	620
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,20
	.byte	'Ifx_SCU_IOCR_Bits',0,4,250,4,3
	.word	31143
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,253,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'LBISTREQP',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,2
	.word	637
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,20
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,131,5,3
	.word	31293
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,134,5,16,4,11
	.byte	'SEED',0,4
	.word	445
	.byte	23,9,2,35,0,11
	.byte	'reserved_23',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	620
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	620
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	620
	.byte	4,0,2,35,3,0,20
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,141,5,3
	.word	31442
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,144,5,16,4,11
	.byte	'SIGNATURE',0,4
	.word	445
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	7,1,2,35,3,11
	.byte	'LBISTDONE',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,149,5,3
	.word	31603
	.byte	10
	.byte	'_Ifx_SCU_LCLCON_Bits',0,4,152,5,16,4,11
	.byte	'reserved_0',0,2
	.word	637
	.byte	16,0,2,35,0,11
	.byte	'LS',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	637
	.byte	14,1,2,35,2,11
	.byte	'LSEN',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_LCLCON_Bits',0,4,158,5,3
	.word	31733
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,161,5,16,4,11
	.byte	'LCLT0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	445
	.byte	30,0,2,35,0,0,20
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,166,5,3
	.word	31865
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,4,169,5,16,4,11
	.byte	'DEPT',0,1
	.word	620
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	637
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,20
	.byte	'Ifx_SCU_MANID_Bits',0,4,174,5,3
	.word	31980
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,4,177,5,16,4,11
	.byte	'PS0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	637
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	637
	.byte	14,0,2,35,2,0,20
	.byte	'Ifx_SCU_OMR_Bits',0,4,185,5,3
	.word	32091
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,188,5,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	620
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	620
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'X1D',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'X1DEN',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	620
	.byte	4,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	620
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	620
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	620
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	620
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	620
	.byte	4,0,2,35,3,0,20
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,209,5,3
	.word	32249
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,4,212,5,16,4,11
	.byte	'P0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	445
	.byte	30,0,2,35,0,0,20
	.byte	'Ifx_SCU_OUT_Bits',0,4,217,5,3
	.word	32661
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,220,5,16,4,11
	.byte	'CSEL0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	637
	.byte	13,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	620
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	620
	.byte	6,0,2,35,3,0,20
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,233,5,3
	.word	32762
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,236,5,16,4,11
	.byte	'OVEN0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	445
	.byte	29,0,2,35,0,0,20
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,242,5,3
	.word	33029
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,245,5,16,4,11
	.byte	'PDIS0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	445
	.byte	30,0,2,35,0,0,20
	.byte	'Ifx_SCU_PDISC_Bits',0,4,250,5,3
	.word	33165
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,4,253,5,16,4,11
	.byte	'PD0',0,1
	.word	620
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	620
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	445
	.byte	24,0,2,35,0,0,20
	.byte	'Ifx_SCU_PDR_Bits',0,4,132,6,3
	.word	33276
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,135,6,16,4,11
	.byte	'PDR0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	445
	.byte	24,0,2,35,0,0,20
	.byte	'Ifx_SCU_PDRR_Bits',0,4,146,6,3
	.word	33409
	.byte	10
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,4,149,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	637
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	620
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	620
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	620
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	620
	.byte	4,0,2,35,3,0,20
	.byte	'Ifx_SCU_PLLCON0_Bits',0,4,166,6,3
	.word	33612
	.byte	10
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,4,169,6,16,4,11
	.byte	'K2DIV',0,1
	.word	620
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	620
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	620
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	637
	.byte	9,0,2,35,2,0,20
	.byte	'Ifx_SCU_PLLCON1_Bits',0,4,177,6,3
	.word	33968
	.byte	10
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,4,180,6,16,4,11
	.byte	'MODCFG',0,2
	.word	637
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,20
	.byte	'Ifx_SCU_PLLCON2_Bits',0,4,184,6,3
	.word	34146
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,4,187,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	620
	.byte	2,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	637
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	620
	.byte	5,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	620
	.byte	2,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	620
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	620
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	620
	.byte	4,0,2,35,3,0,20
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,4,204,6,3
	.word	34246
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,4,207,6,16,4,11
	.byte	'K2DIV',0,1
	.word	620
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	620
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	620
	.byte	4,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	620
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	637
	.byte	9,0,2,35,2,0,20
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,4,215,6,3
	.word	34616
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,4,218,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	445
	.byte	26,0,2,35,0,0,20
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,4,227,6,3
	.word	34802
	.byte	10
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,4,230,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	445
	.byte	24,0,2,35,0,0,20
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,4,241,6,3
	.word	35000
	.byte	10
	.byte	'_Ifx_SCU_PMCSR_Bits',0,4,244,6,16,4,11
	.byte	'REQSLP',0,1
	.word	620
	.byte	2,6,2,35,0,11
	.byte	'SMUSLP',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	620
	.byte	5,0,2,35,0,11
	.byte	'PMST',0,1
	.word	620
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	445
	.byte	21,0,2,35,0,0,20
	.byte	'Ifx_SCU_PMCSR_Bits',0,4,251,6,3
	.word	35233
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,4,254,6,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKEN',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'PINAWKEN',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'PINBWKEN',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	620
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	620
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	620
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	620
	.byte	2,0,2,35,1,11
	.byte	'SCREN',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'STBYRAMSEL',0,1
	.word	620
	.byte	2,5,2,35,2,11
	.byte	'SCRCLKSEL',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	620
	.byte	1,3,2,35,2,11
	.byte	'TRISTEN',0,1
	.word	620
	.byte	1,2,2,35,2,11
	.byte	'TRISTREQ',0,1
	.word	620
	.byte	1,1,2,35,2,11
	.byte	'PORSTDF',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'DCDCSYNC',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	620
	.byte	3,3,2,35,3,11
	.byte	'ESR0TRIST',0,1
	.word	620
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,4,153,7,3
	.word	35385
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,156,7,16,4,11
	.byte	'SCRSTEN',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'SCRSTREQ',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	620
	.byte	6,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	620
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	620
	.byte	3,0,2,35,1,11
	.byte	'SCRCFG',0,1
	.word	620
	.byte	8,0,2,35,2,11
	.byte	'CPUSEL',0,1
	.word	620
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	620
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	620
	.byte	3,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,170,7,3
	.word	35952
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR2_Bits',0,4,173,7,16,4,11
	.byte	'SCRINT',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'BUSY',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'SCRECC',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'SCRWDT',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'SCRRST',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	620
	.byte	4,0,2,35,1,11
	.byte	'TCINT',0,1
	.word	620
	.byte	8,0,2,35,2,11
	.byte	'TCINTREQ',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'SMURST',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'RST',0,1
	.word	620
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	620
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_SCU_PMSWCR2_Bits',0,4,187,7,3
	.word	36246
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,4,190,7,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUN',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUN',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUN',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'HWCFGEVR',0,1
	.word	620
	.byte	3,3,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	620
	.byte	2,1,2,35,1,11
	.byte	'TRIST',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'SCRST',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'SCRWKP',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'SCR',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'ESR1WKEN',0,1
	.word	620
	.byte	1,3,2,35,2,11
	.byte	'PINAWKEN',0,1
	.word	620
	.byte	1,2,2,35,2,11
	.byte	'PINBWKEN',0,1
	.word	620
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	637
	.byte	4,5,2,35,2,11
	.byte	'ESR0TRIST',0,1
	.word	620
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	620
	.byte	4,0,2,35,3,0,20
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,4,214,7,3
	.word	36524
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,4,217,7,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUNCLR',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUNCLR',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'SCRSTCLR',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'SCRWKPCLR',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	637
	.byte	14,0,2,35,2,0,20
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,4,230,7,3
	.word	37020
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,233,7,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	637
	.byte	10,4,2,35,0,11
	.byte	'CSS0',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'CSS1',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'CSS2',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	637
	.byte	16,0,2,35,2,0,20
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,243,7,3
	.word	37333
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,246,7,16,4,11
	.byte	'ESR0',0,1
	.word	620
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	620
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	620
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	620
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	620
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	620
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	620
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	620
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,20
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,129,8,3
	.word	37542
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,132,8,16,4,11
	.byte	'ESR0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'PORST',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	620
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	620
	.byte	2,1,2,35,2,11
	.byte	'EVR13',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	620
	.byte	2,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	620
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	620
	.byte	3,0,2,35,3,0,20
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,155,8,3
	.word	37753
	.byte	10
	.byte	'_Ifx_SCU_SAFECON_Bits',0,4,158,8,16,4,11
	.byte	'HBT',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	445
	.byte	31,0,2,35,0,0,20
	.byte	'Ifx_SCU_SAFECON_Bits',0,4,162,8,3
	.word	38185
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,165,8,16,4,11
	.byte	'HWCFG',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	620
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	620
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	620
	.byte	3,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	620
	.byte	7,0,2,35,3,0,20
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,178,8,3
	.word	38281
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,181,8,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	445
	.byte	30,0,2,35,0,0,20
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,186,8,3
	.word	38541
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,189,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	620
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	620
	.byte	3,0,2,35,0,11
	.byte	'DATM',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	445
	.byte	23,0,2,35,0,0,20
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,198,8,3
	.word	38666
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,201,8,16,4,11
	.byte	'ESR0T',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	445
	.byte	28,0,2,35,0,0,20
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,208,8,3
	.word	38863
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,4,211,8,16,4,11
	.byte	'ESR0T',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	445
	.byte	28,0,2,35,0,0,20
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,4,218,8,3
	.word	39016
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,221,8,16,4,11
	.byte	'ESR0T',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	445
	.byte	28,0,2,35,0,0,20
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,228,8,3
	.word	39169
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,231,8,16,4,11
	.byte	'ESR0T',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	445
	.byte	28,0,2,35,0,0,20
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,238,8,3
	.word	39322
	.byte	20
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,247,8,3
	.word	484
	.byte	20
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,134,9,3
	.word	659
	.byte	20
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,150,9,3
	.word	903
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,153,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	468
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	468
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	468
	.byte	16,0,2,35,0,0,20
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,159,9,3
	.word	39577
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,162,9,16,4,11
	.byte	'CLRIRF',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	620
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,20
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,175,9,3
	.word	39703
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,178,9,16,4,11
	.byte	'AE',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	620
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	637
	.byte	16,0,2,35,2,0,20
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,191,9,3
	.word	39955
	.byte	12,4,199,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21987
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_ACCEN0',0,4,204,9,3
	.word	40174
	.byte	12,4,207,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22544
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_ACCEN1',0,4,212,9,3
	.word	40238
	.byte	12,4,215,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22621
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_ARSTDIS',0,4,220,9,3
	.word	40302
	.byte	12,4,223,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22757
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_CCUCON0',0,4,228,9,3
	.word	40367
	.byte	12,4,231,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23037
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_CCUCON1',0,4,236,9,3
	.word	40432
	.byte	12,4,239,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23275
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_CCUCON2',0,4,244,9,3
	.word	40497
	.byte	12,4,247,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23403
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_CCUCON3',0,4,252,9,3
	.word	40562
	.byte	12,4,255,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23646
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_CCUCON4',0,4,132,10,3
	.word	40627
	.byte	12,4,135,10,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23881
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_CCUCON5',0,4,140,10,3
	.word	40692
	.byte	12,4,143,10,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24009
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_CCUCON6',0,4,148,10,3
	.word	40757
	.byte	12,4,151,10,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24109
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_CCUCON7',0,4,156,10,3
	.word	40822
	.byte	12,4,159,10,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24209
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_CHIPID',0,4,164,10,3
	.word	40887
	.byte	12,4,167,10,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24417
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_DTSCON',0,4,172,10,3
	.word	40951
	.byte	12,4,175,10,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24582
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_DTSLIM',0,4,180,10,3
	.word	41015
	.byte	12,4,183,10,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24765
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_DTSSTAT',0,4,188,10,3
	.word	41079
	.byte	12,4,191,10,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24919
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EICR',0,4,196,10,3
	.word	41144
	.byte	12,4,199,10,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25283
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EIFR',0,4,204,10,3
	.word	41206
	.byte	12,4,207,10,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25494
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EMSR',0,4,212,10,3
	.word	41268
	.byte	12,4,215,10,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25746
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_ESRCFG',0,4,220,10,3
	.word	41330
	.byte	12,4,223,10,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25864
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_ESROCFG',0,4,228,10,3
	.word	41394
	.byte	12,4,231,10,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25975
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVR13CON',0,4,236,10,3
	.word	41459
	.byte	12,4,239,10,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26138
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVR33CON',0,4,244,10,3
	.word	41525
	.byte	12,4,247,10,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26301
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVRADCSTAT',0,4,252,10,3
	.word	41591
	.byte	12,4,255,10,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26459
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVRDVSTAT',0,4,132,11,3
	.word	41659
	.byte	12,4,135,11,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26624
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVRMONCTRL',0,4,140,11,3
	.word	41726
	.byte	12,4,143,11,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26953
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVROSCCTRL',0,4,148,11,3
	.word	41794
	.byte	12,4,151,11,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27174
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVROVMON',0,4,156,11,3
	.word	41862
	.byte	12,4,159,11,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27337
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVRRSTCON',0,4,164,11,3
	.word	41928
	.byte	12,4,167,11,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27609
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,4,172,11,3
	.word	41995
	.byte	12,4,175,11,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27762
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,4,180,11,3
	.word	42064
	.byte	12,4,183,11,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27918
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,4,188,11,3
	.word	42133
	.byte	12,4,191,11,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28080
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,4,196,11,3
	.word	42202
	.byte	12,4,199,11,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28223
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,4,204,11,3
	.word	42271
	.byte	12,4,207,11,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28388
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,4,212,11,3
	.word	42340
	.byte	12,4,215,11,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28533
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVRSDCTRL1',0,4,220,11,3
	.word	42409
	.byte	12,4,223,11,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28714
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVRSDCTRL2',0,4,228,11,3
	.word	42477
	.byte	12,4,231,11,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28888
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVRSDCTRL3',0,4,236,11,3
	.word	42545
	.byte	12,4,239,11,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29048
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVRSDCTRL4',0,4,244,11,3
	.word	42613
	.byte	12,4,247,11,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29192
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVRSTAT',0,4,252,11,3
	.word	42681
	.byte	12,4,255,11,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29466
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVRTRIM',0,4,132,12,3
	.word	42746
	.byte	12,4,135,12,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29605
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EVRUVMON',0,4,140,12,3
	.word	42811
	.byte	12,4,143,12,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29768
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_EXTCON',0,4,148,12,3
	.word	42877
	.byte	12,4,151,12,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29986
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_FDR',0,4,156,12,3
	.word	42941
	.byte	12,4,159,12,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30149
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_FMR',0,4,164,12,3
	.word	43002
	.byte	12,4,167,12,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30485
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_ID',0,4,172,12,3
	.word	43063
	.byte	12,4,175,12,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30592
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_IGCR',0,4,180,12,3
	.word	43123
	.byte	12,4,183,12,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31044
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_IN',0,4,188,12,3
	.word	43185
	.byte	12,4,191,12,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31143
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_IOCR',0,4,196,12,3
	.word	43245
	.byte	12,4,199,12,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31293
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,204,12,3
	.word	43307
	.byte	12,4,207,12,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31442
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,212,12,3
	.word	43375
	.byte	12,4,215,12,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31603
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,220,12,3
	.word	43443
	.byte	12,4,223,12,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31733
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_LCLCON',0,4,228,12,3
	.word	43511
	.byte	12,4,231,12,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31865
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_LCLTEST',0,4,236,12,3
	.word	43575
	.byte	12,4,239,12,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31980
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_MANID',0,4,244,12,3
	.word	43640
	.byte	12,4,247,12,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32091
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_OMR',0,4,252,12,3
	.word	43703
	.byte	12,4,255,12,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32249
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_OSCCON',0,4,132,13,3
	.word	43764
	.byte	12,4,135,13,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32661
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_OUT',0,4,140,13,3
	.word	43828
	.byte	12,4,143,13,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32762
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_OVCCON',0,4,148,13,3
	.word	43889
	.byte	12,4,151,13,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33029
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_OVCENABLE',0,4,156,13,3
	.word	43953
	.byte	12,4,159,13,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33165
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_PDISC',0,4,164,13,3
	.word	44020
	.byte	12,4,167,13,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33276
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_PDR',0,4,172,13,3
	.word	44083
	.byte	12,4,175,13,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33409
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_PDRR',0,4,180,13,3
	.word	44144
	.byte	12,4,183,13,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33612
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_PLLCON0',0,4,188,13,3
	.word	44206
	.byte	12,4,191,13,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33968
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_PLLCON1',0,4,196,13,3
	.word	44271
	.byte	12,4,199,13,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34146
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_PLLCON2',0,4,204,13,3
	.word	44336
	.byte	12,4,207,13,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34246
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_PLLERAYCON0',0,4,212,13,3
	.word	44401
	.byte	12,4,215,13,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34616
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_PLLERAYCON1',0,4,220,13,3
	.word	44470
	.byte	12,4,223,13,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34802
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_PLLERAYSTAT',0,4,228,13,3
	.word	44539
	.byte	12,4,231,13,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35000
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_PLLSTAT',0,4,236,13,3
	.word	44608
	.byte	12,4,239,13,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35233
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_PMCSR',0,4,244,13,3
	.word	44673
	.byte	12,4,247,13,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35385
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_PMSWCR0',0,4,252,13,3
	.word	44736
	.byte	12,4,255,13,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35952
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_PMSWCR1',0,4,132,14,3
	.word	44801
	.byte	12,4,135,14,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36246
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_PMSWCR2',0,4,140,14,3
	.word	44866
	.byte	12,4,143,14,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36524
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_PMSWSTAT',0,4,148,14,3
	.word	44931
	.byte	12,4,151,14,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37020
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_PMSWSTATCLR',0,4,156,14,3
	.word	44997
	.byte	12,4,159,14,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37542
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_RSTCON',0,4,164,14,3
	.word	45066
	.byte	12,4,167,14,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37333
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_RSTCON2',0,4,172,14,3
	.word	45130
	.byte	12,4,175,14,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37753
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_RSTSTAT',0,4,180,14,3
	.word	45195
	.byte	12,4,183,14,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38185
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_SAFECON',0,4,188,14,3
	.word	45260
	.byte	12,4,191,14,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38281
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_STSTAT',0,4,196,14,3
	.word	45325
	.byte	12,4,199,14,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38541
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_SWRSTCON',0,4,204,14,3
	.word	45389
	.byte	12,4,207,14,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38666
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_SYSCON',0,4,212,14,3
	.word	45455
	.byte	12,4,215,14,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38863
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_TRAPCLR',0,4,220,14,3
	.word	45519
	.byte	12,4,223,14,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39016
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_TRAPDIS',0,4,228,14,3
	.word	45584
	.byte	12,4,231,14,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39169
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_TRAPSET',0,4,236,14,3
	.word	45649
	.byte	12,4,239,14,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39322
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_TRAPSTAT',0,4,244,14,3
	.word	45714
	.byte	20
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,252,14,3
	.word	580
	.byte	20
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,132,15,3
	.word	863
	.byte	20
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,140,15,3
	.word	1094
	.byte	12,4,143,15,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39577
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_WDTS_CON0',0,4,148,15,3
	.word	45865
	.byte	12,4,151,15,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39703
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_WDTS_CON1',0,4,156,15,3
	.word	45932
	.byte	12,4,159,15,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39955
	.byte	4,2,35,0,0,20
	.byte	'Ifx_SCU_WDTS_SR',0,4,164,15,3
	.word	45999
	.byte	14
	.word	1134
	.byte	20
	.byte	'Ifx_SCU_WDTCPU',0,4,180,15,3
	.word	46064
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,4,183,15,25,12,13
	.byte	'CON0',0
	.word	45865
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	45932
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	45999
	.byte	4,2,35,8,0,14
	.word	46093
	.byte	20
	.byte	'Ifx_SCU_WDTS',0,4,188,15,3
	.word	46154
	.byte	18,8
	.word	41330
	.byte	19,1,0,18,20
	.word	620
	.byte	19,19,0,18,8
	.word	44673
	.byte	19,1,0,14
	.word	46093
	.byte	18,24
	.word	1134
	.byte	19,1,0,14
	.word	46213
	.byte	18,16
	.word	620
	.byte	19,15,0,18,28
	.word	620
	.byte	19,27,0,18,40
	.word	620
	.byte	19,39,0,18,16
	.word	41144
	.byte	19,3,0,18,16
	.word	43123
	.byte	19,3,0,18,180,3
	.word	620
	.byte	19,179,3,0,10
	.byte	'_Ifx_SCU',0,4,201,15,25,128,8,13
	.byte	'reserved_0',0
	.word	4736
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	43063
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2917
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	43764
	.byte	4,2,35,16,13
	.byte	'PLLSTAT',0
	.word	44608
	.byte	4,2,35,20,13
	.byte	'PLLCON0',0
	.word	44206
	.byte	4,2,35,24,13
	.byte	'PLLCON1',0
	.word	44271
	.byte	4,2,35,28,13
	.byte	'PLLCON2',0
	.word	44336
	.byte	4,2,35,32,13
	.byte	'PLLERAYSTAT',0
	.word	44539
	.byte	4,2,35,36,13
	.byte	'PLLERAYCON0',0
	.word	44401
	.byte	4,2,35,40,13
	.byte	'PLLERAYCON1',0
	.word	44470
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	40367
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	40432
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	42941
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	42877
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	40497
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	40562
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	40627
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	40692
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	45195
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	2917
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	45066
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	40302
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	45389
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	45130
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	2917
	.byte	4,2,35,104,13
	.byte	'EVRRSTCON',0
	.word	41928
	.byte	4,2,35,108,13
	.byte	'ESRCFG',0
	.word	46181
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	41394
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	45455
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	40757
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	40822
	.byte	4,3,35,132,1,13
	.byte	'reserved_88',0
	.word	46190
	.byte	20,3,35,136,1,13
	.byte	'PDR',0
	.word	44083
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	43245
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	43828
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	43703
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	43185
	.byte	4,3,35,172,1,13
	.byte	'EVRSTAT',0
	.word	42681
	.byte	4,3,35,176,1,13
	.byte	'EVRDVSTAT',0
	.word	41659
	.byte	4,3,35,180,1,13
	.byte	'EVR13CON',0
	.word	41459
	.byte	4,3,35,184,1,13
	.byte	'EVR33CON',0
	.word	41525
	.byte	4,3,35,188,1,13
	.byte	'STSTAT',0
	.word	45325
	.byte	4,3,35,192,1,13
	.byte	'reserved_C4',0
	.word	2917
	.byte	4,3,35,196,1,13
	.byte	'PMSWCR0',0
	.word	44736
	.byte	4,3,35,200,1,13
	.byte	'PMSWSTAT',0
	.word	44931
	.byte	4,3,35,204,1,13
	.byte	'PMSWSTATCLR',0
	.word	44997
	.byte	4,3,35,208,1,13
	.byte	'PMCSR',0
	.word	46199
	.byte	8,3,35,212,1,13
	.byte	'reserved_DC',0
	.word	2917
	.byte	4,3,35,220,1,13
	.byte	'DTSSTAT',0
	.word	41079
	.byte	4,3,35,224,1,13
	.byte	'DTSCON',0
	.word	40951
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	44801
	.byte	4,3,35,232,1,13
	.byte	'PMSWCR2',0
	.word	44866
	.byte	4,3,35,236,1,13
	.byte	'WDTS',0
	.word	46208
	.byte	12,3,35,240,1,13
	.byte	'EMSR',0
	.word	41268
	.byte	4,3,35,252,1,13
	.byte	'WDTCPU',0
	.word	46222
	.byte	24,3,35,128,2,13
	.byte	'reserved_118',0
	.word	5076
	.byte	12,3,35,152,2,13
	.byte	'TRAPSTAT',0
	.word	45714
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	45649
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	45519
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS',0
	.word	45584
	.byte	4,3,35,176,2,13
	.byte	'reserved_134',0
	.word	2917
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	43511
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	43575
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	40887
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	43640
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	4736
	.byte	8,3,35,200,2,13
	.byte	'SAFECON',0
	.word	45260
	.byte	4,3,35,208,2,13
	.byte	'reserved_154',0
	.word	46227
	.byte	16,3,35,212,2,13
	.byte	'LBISTCTRL0',0
	.word	43307
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	43375
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	43443
	.byte	4,3,35,236,2,13
	.byte	'reserved_170',0
	.word	46236
	.byte	28,3,35,240,2,13
	.byte	'PDISC',0
	.word	44020
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	4736
	.byte	8,3,35,144,3,13
	.byte	'EVRTRIM',0
	.word	42746
	.byte	4,3,35,152,3,13
	.byte	'EVRADCSTAT',0
	.word	41591
	.byte	4,3,35,156,3,13
	.byte	'EVRUVMON',0
	.word	42811
	.byte	4,3,35,160,3,13
	.byte	'EVROVMON',0
	.word	41862
	.byte	4,3,35,164,3,13
	.byte	'EVRMONCTRL',0
	.word	41726
	.byte	4,3,35,168,3,13
	.byte	'reserved_1AC',0
	.word	2917
	.byte	4,3,35,172,3,13
	.byte	'EVRSDCTRL1',0
	.word	42409
	.byte	4,3,35,176,3,13
	.byte	'EVRSDCTRL2',0
	.word	42477
	.byte	4,3,35,180,3,13
	.byte	'EVRSDCTRL3',0
	.word	42545
	.byte	4,3,35,184,3,13
	.byte	'EVRSDCTRL4',0
	.word	42613
	.byte	4,3,35,188,3,13
	.byte	'EVRSDCOEFF1',0
	.word	41995
	.byte	4,3,35,192,3,13
	.byte	'EVRSDCOEFF2',0
	.word	42064
	.byte	4,3,35,196,3,13
	.byte	'EVRSDCOEFF3',0
	.word	42133
	.byte	4,3,35,200,3,13
	.byte	'EVRSDCOEFF4',0
	.word	42202
	.byte	4,3,35,204,3,13
	.byte	'EVRSDCOEFF5',0
	.word	42271
	.byte	4,3,35,208,3,13
	.byte	'EVRSDCOEFF6',0
	.word	42340
	.byte	4,3,35,212,3,13
	.byte	'EVROSCCTRL',0
	.word	41794
	.byte	4,3,35,216,3,13
	.byte	'reserved_1DC',0
	.word	2917
	.byte	4,3,35,220,3,13
	.byte	'OVCENABLE',0
	.word	43953
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	43889
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	46245
	.byte	40,3,35,232,3,13
	.byte	'EICR',0
	.word	46254
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	41206
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	43002
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	44144
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	46263
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	2917
	.byte	4,3,35,188,4,13
	.byte	'DTSLIM',0
	.word	41015
	.byte	4,3,35,192,4,13
	.byte	'reserved_244',0
	.word	46272
	.byte	180,3,3,35,196,4,13
	.byte	'ACCEN1',0
	.word	40238
	.byte	4,3,35,248,7,13
	.byte	'ACCEN0',0
	.word	40174
	.byte	4,3,35,252,7,0,14
	.word	46283
	.byte	20
	.byte	'Ifx_SCU',0,4,181,16,3
	.word	48273
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,18,45,16,4,11
	.byte	'ADDR',0,4
	.word	468
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_CPU_A_Bits',0,18,48,3
	.word	48295
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,18,51,16,4,11
	.byte	'VSS',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	468
	.byte	31,0,2,35,0,0,20
	.byte	'Ifx_CPU_BIV_Bits',0,18,55,3
	.word	48356
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,18,58,16,4,11
	.byte	'reserved_0',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	468
	.byte	31,0,2,35,0,0,20
	.byte	'Ifx_CPU_BTV_Bits',0,18,62,3
	.word	48435
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,18,65,16,4,11
	.byte	'CountValue',0,4
	.word	468
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	468
	.byte	1,0,2,35,0,0,20
	.byte	'Ifx_CPU_CCNT_Bits',0,18,69,3
	.word	48521
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,18,72,16,4,11
	.byte	'CM',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	468
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	468
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	468
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	468
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	468
	.byte	21,0,2,35,0,0,20
	.byte	'Ifx_CPU_CCTRL_Bits',0,18,80,3
	.word	48610
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,18,83,16,4,11
	.byte	'reserved_0',0,4
	.word	468
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	468
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	468
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	468
	.byte	27,0,2,35,0,0,20
	.byte	'Ifx_CPU_COMPAT_Bits',0,18,89,3
	.word	48756
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,18,92,16,4,11
	.byte	'CORE_ID',0,4
	.word	468
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	468
	.byte	29,0,2,35,0,0,20
	.byte	'Ifx_CPU_CORE_ID_Bits',0,18,96,3
	.word	48883
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,18,99,16,4,11
	.byte	'reserved_0',0,4
	.word	468
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	468
	.byte	29,0,2,35,0,0,20
	.byte	'Ifx_CPU_CPR_L_Bits',0,18,103,3
	.word	48981
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,18,106,16,4,11
	.byte	'reserved_0',0,4
	.word	468
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	468
	.byte	29,0,2,35,0,0,20
	.byte	'Ifx_CPU_CPR_U_Bits',0,18,110,3
	.word	49074
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,18,113,16,4,11
	.byte	'MODREV',0,4
	.word	468
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	468
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	468
	.byte	16,0,2,35,0,0,20
	.byte	'Ifx_CPU_CPU_ID_Bits',0,18,118,3
	.word	49167
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,18,121,16,4,11
	.byte	'XE',0,4
	.word	468
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	468
	.byte	24,0,2,35,0,0,20
	.byte	'Ifx_CPU_CPXE_Bits',0,18,125,3
	.word	49274
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,18,128,1,16,4,11
	.byte	'EVTA',0,4
	.word	468
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	468
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	468
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	468
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	468
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	468
	.byte	24,0,2,35,0,0,20
	.byte	'Ifx_CPU_CREVT_Bits',0,18,136,1,3
	.word	49361
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,18,139,1,16,4,11
	.byte	'CID',0,4
	.word	468
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	468
	.byte	29,0,2,35,0,0,20
	.byte	'Ifx_CPU_CUS_ID_Bits',0,18,143,1,3
	.word	49515
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,18,146,1,16,4,11
	.byte	'DATA',0,4
	.word	468
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_CPU_D_Bits',0,18,149,1,3
	.word	49609
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,18,152,1,16,4,11
	.byte	'reserved_0',0,4
	.word	468
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	468
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	468
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	468
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	468
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	468
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	468
	.byte	1,17,2,35,0,11
	.byte	'SME',0,4
	.word	468
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	468
	.byte	16,0,2,35,0,0,20
	.byte	'Ifx_CPU_DATR_Bits',0,18,163,1,3
	.word	49672
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,18,166,1,16,4,11
	.byte	'DE',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	468
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	468
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	468
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	468
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	468
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	468
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	468
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	468
	.byte	19,0,2,35,0,0,20
	.byte	'Ifx_CPU_DBGSR_Bits',0,18,177,1,3
	.word	49890
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,18,180,1,16,4,11
	.byte	'DTA',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	468
	.byte	31,0,2,35,0,0,20
	.byte	'Ifx_CPU_DBGTCR_Bits',0,18,184,1,3
	.word	50105
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,18,187,1,16,4,11
	.byte	'reserved_0',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	468
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	468
	.byte	30,0,2,35,0,0,20
	.byte	'Ifx_CPU_DCON0_Bits',0,18,192,1,3
	.word	50199
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,18,195,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	468
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	468
	.byte	16,0,2,35,0,0,20
	.byte	'Ifx_CPU_DCON2_Bits',0,18,199,1,3
	.word	50315
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,18,202,1,16,4,11
	.byte	'reserved_0',0,4
	.word	468
	.byte	6,26,2,35,0,11
	.byte	'DCXValue',0,4
	.word	468
	.byte	26,0,2,35,0,0,20
	.byte	'Ifx_CPU_DCX_Bits',0,18,206,1,3
	.word	50416
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,18,209,1,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	468
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_CPU_DEADD_Bits',0,18,212,1,3
	.word	50509
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,18,215,1,16,4,11
	.byte	'TA',0,4
	.word	468
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_CPU_DIEAR_Bits',0,18,218,1,3
	.word	50589
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,18,221,1,16,4,11
	.byte	'IED',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	468
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	468
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	468
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	468
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	468
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	468
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	468
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	468
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	468
	.byte	18,0,2,35,0,0,20
	.byte	'Ifx_CPU_DIETR_Bits',0,18,233,1,3
	.word	50658
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,18,236,1,16,4,11
	.byte	'reserved_0',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'DMSValue',0,4
	.word	468
	.byte	31,0,2,35,0,0,20
	.byte	'Ifx_CPU_DMS_Bits',0,18,240,1,3
	.word	50887
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,18,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	468
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	468
	.byte	29,0,2,35,0,0,20
	.byte	'Ifx_CPU_DPR_L_Bits',0,18,247,1,3
	.word	50980
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,18,250,1,16,4,11
	.byte	'reserved_0',0,4
	.word	468
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	468
	.byte	29,0,2,35,0,0,20
	.byte	'Ifx_CPU_DPR_U_Bits',0,18,254,1,3
	.word	51075
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,18,129,2,16,4,11
	.byte	'RE',0,4
	.word	468
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	468
	.byte	16,0,2,35,0,0,20
	.byte	'Ifx_CPU_DPRE_Bits',0,18,133,2,3
	.word	51170
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,18,136,2,16,4,11
	.byte	'WE',0,4
	.word	468
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	468
	.byte	16,0,2,35,0,0,20
	.byte	'Ifx_CPU_DPWE_Bits',0,18,140,2,3
	.word	51260
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,18,143,2,16,4,11
	.byte	'SRE',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	468
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	468
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	468
	.byte	3,26,2,35,0,11
	.byte	'CRE',0,4
	.word	468
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	468
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	468
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	468
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	468
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	468
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	468
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	468
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	468
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	468
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	468
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	468
	.byte	7,0,2,35,0,0,20
	.byte	'Ifx_CPU_DSTR_Bits',0,18,161,2,3
	.word	51350
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,18,164,2,16,4,11
	.byte	'EVTA',0,4
	.word	468
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	468
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	468
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	468
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	468
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	468
	.byte	24,0,2,35,0,0,20
	.byte	'Ifx_CPU_EXEVT_Bits',0,18,172,2,3
	.word	51674
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,18,175,2,16,4,11
	.byte	'FCXO',0,4
	.word	468
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	468
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	468
	.byte	12,0,2,35,0,0,20
	.byte	'Ifx_CPU_FCX_Bits',0,18,180,2,3
	.word	51828
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,18,183,2,16,4,11
	.byte	'TST',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	468
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	468
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	468
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	468
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	468
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	468
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	468
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	468
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	468
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	468
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	468
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	468
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	468
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	468
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	468
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	468
	.byte	1,0,2,35,0,0,20
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,18,202,2,3
	.word	51934
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,18,205,2,16,4,11
	.byte	'OPC',0,4
	.word	468
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	468
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	468
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	468
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	468
	.byte	12,0,2,35,0,0,20
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,18,212,2,3
	.word	52283
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,18,215,2,16,4,11
	.byte	'PC',0,4
	.word	468
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,18,218,2,3
	.word	52443
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,18,221,2,16,4,11
	.byte	'SRC1',0,4
	.word	468
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,18,224,2,3
	.word	52524
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,18,227,2,16,4,11
	.byte	'SRC2',0,4
	.word	468
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,18,230,2,3
	.word	52611
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,18,233,2,16,4,11
	.byte	'SRC3',0,4
	.word	468
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,18,236,2,3
	.word	52698
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,18,239,2,16,4,11
	.byte	'CountValue',0,4
	.word	468
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	468
	.byte	1,0,2,35,0,0,20
	.byte	'Ifx_CPU_ICNT_Bits',0,18,243,2,3
	.word	52785
	.byte	20
	.byte	'Ifx_CPU_ICR_Bits',0,18,253,2,3
	.word	19934
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,18,128,3,16,4,11
	.byte	'ISP',0,4
	.word	468
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_CPU_ISP_Bits',0,18,131,3,3
	.word	52902
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,18,134,3,16,4,11
	.byte	'LCXO',0,4
	.word	468
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	468
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	468
	.byte	12,0,2,35,0,0,20
	.byte	'Ifx_CPU_LCX_Bits',0,18,139,3,3
	.word	52968
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,18,142,3,16,4,11
	.byte	'CountValue',0,4
	.word	468
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	468
	.byte	1,0,2,35,0,0,20
	.byte	'Ifx_CPU_M1CNT_Bits',0,18,146,3,3
	.word	53074
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,18,149,3,16,4,11
	.byte	'CountValue',0,4
	.word	468
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	468
	.byte	1,0,2,35,0,0,20
	.byte	'Ifx_CPU_M2CNT_Bits',0,18,153,3,3
	.word	53167
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,18,156,3,16,4,11
	.byte	'CountValue',0,4
	.word	468
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	468
	.byte	1,0,2,35,0,0,20
	.byte	'Ifx_CPU_M3CNT_Bits',0,18,160,3,3
	.word	53260
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,18,163,3,16,4,11
	.byte	'reserved_0',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	468
	.byte	31,0,2,35,0,0,20
	.byte	'Ifx_CPU_PC_Bits',0,18,167,3,3
	.word	53353
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,18,170,3,16,4,11
	.byte	'reserved_0',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	468
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	468
	.byte	30,0,2,35,0,0,20
	.byte	'Ifx_CPU_PCON0_Bits',0,18,175,3,3
	.word	53438
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,18,178,3,16,4,11
	.byte	'PCINV',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	468
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	468
	.byte	30,0,2,35,0,0,20
	.byte	'Ifx_CPU_PCON1_Bits',0,18,183,3,3
	.word	53554
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,18,186,3,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	468
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	468
	.byte	16,0,2,35,0,0,20
	.byte	'Ifx_CPU_PCON2_Bits',0,18,190,3,3
	.word	53665
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,18,193,3,16,4,11
	.byte	'PCXO',0,4
	.word	468
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	468
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	468
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	468
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	468
	.byte	10,0,2,35,0,0,20
	.byte	'Ifx_CPU_PCXI_Bits',0,18,200,3,3
	.word	53766
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,18,203,3,16,4,11
	.byte	'TA',0,4
	.word	468
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_CPU_PIEAR_Bits',0,18,206,3,3
	.word	53896
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,18,209,3,16,4,11
	.byte	'IED',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	468
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	468
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	468
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	468
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	468
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	468
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	468
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	468
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	468
	.byte	18,0,2,35,0,0,20
	.byte	'Ifx_CPU_PIETR_Bits',0,18,221,3,3
	.word	53965
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,18,224,3,16,4,11
	.byte	'reserved_0',0,4
	.word	468
	.byte	13,19,2,35,0,11
	.byte	'DAC',0,4
	.word	468
	.byte	3,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	468
	.byte	16,0,2,35,0,0,20
	.byte	'Ifx_CPU_PMA0_Bits',0,18,229,3,3
	.word	54194
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,18,232,3,16,4,11
	.byte	'reserved_0',0,4
	.word	468
	.byte	14,18,2,35,0,11
	.byte	'CAC',0,4
	.word	468
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	468
	.byte	16,0,2,35,0,0,20
	.byte	'Ifx_CPU_PMA1_Bits',0,18,237,3,3
	.word	54307
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,18,240,3,16,4,11
	.byte	'PSI',0,4
	.word	468
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	468
	.byte	16,0,2,35,0,0,20
	.byte	'Ifx_CPU_PMA2_Bits',0,18,244,3,3
	.word	54420
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,18,247,3,16,4,11
	.byte	'FRE',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	468
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	468
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	468
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	468
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	468
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	468
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	468
	.byte	17,0,2,35,0,0,20
	.byte	'Ifx_CPU_PSTR_Bits',0,18,129,4,3
	.word	54511
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,18,132,4,16,4,11
	.byte	'CDC',0,4
	.word	468
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	468
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	468
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	468
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	468
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	468
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	468
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	468
	.byte	12,5,2,35,0,11
	.byte	'SAV',0,4
	.word	468
	.byte	1,4,2,35,0,11
	.byte	'AV',0,4
	.word	468
	.byte	1,3,2,35,0,11
	.byte	'SV',0,4
	.word	468
	.byte	1,2,2,35,0,11
	.byte	'V',0,4
	.word	468
	.byte	1,1,2,35,0,11
	.byte	'C',0,4
	.word	468
	.byte	1,0,2,35,0,0,20
	.byte	'Ifx_CPU_PSW_Bits',0,18,147,4,3
	.word	54714
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,18,150,4,16,4,11
	.byte	'ADFLIP',0,4
	.word	468
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	468
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	468
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	468
	.byte	1,0,2,35,0,0,20
	.byte	'Ifx_CPU_SEGEN_Bits',0,18,156,4,3
	.word	54957
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,18,159,4,16,4,11
	.byte	'PC',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	468
	.byte	1,30,2,35,0,11
	.byte	'PT',0,4
	.word	468
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	468
	.byte	5,24,2,35,0,11
	.byte	'DC',0,4
	.word	468
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	468
	.byte	1,22,2,35,0,11
	.byte	'DT',0,4
	.word	468
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	468
	.byte	13,8,2,35,0,11
	.byte	'IODT',0,4
	.word	468
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	468
	.byte	7,0,2,35,0,0,20
	.byte	'Ifx_CPU_SMACON_Bits',0,18,171,4,3
	.word	55085
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,18,174,4,16,4,11
	.byte	'EN',0,4
	.word	445
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,18,177,4,3
	.word	55326
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,18,180,4,16,4,11
	.byte	'reserved_0',0,4
	.word	445
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,18,183,4,3
	.word	55409
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,18,186,4,16,4,11
	.byte	'EN',0,4
	.word	445
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,18,189,4,3
	.word	55500
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,18,192,4,16,4,11
	.byte	'reserved_0',0,4
	.word	445
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,18,195,4,3
	.word	55591
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,18,198,4,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	445
	.byte	27,0,2,35,0,0,20
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,18,202,4,3
	.word	55690
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,18,205,4,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	445
	.byte	27,0,2,35,0,0,20
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,18,209,4,3
	.word	55797
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,18,212,4,16,4,11
	.byte	'EVTA',0,4
	.word	468
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	468
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	468
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	468
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	468
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	468
	.byte	24,0,2,35,0,0,20
	.byte	'Ifx_CPU_SWEVT_Bits',0,18,220,4,3
	.word	55904
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,18,223,4,16,4,11
	.byte	'FCDSF',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	468
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	468
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	468
	.byte	1,28,2,35,0,11
	.byte	'IT',0,4
	.word	468
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	468
	.byte	27,0,2,35,0,0,20
	.byte	'Ifx_CPU_SYSCON_Bits',0,18,231,4,3
	.word	56058
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,18,234,4,16,4,11
	.byte	'ASI',0,4
	.word	468
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	468
	.byte	27,0,2,35,0,0,20
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,18,238,4,3
	.word	56219
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,18,241,4,16,4,11
	.byte	'TEXP0',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	468
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	468
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	468
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	468
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	468
	.byte	15,0,2,35,0,0,20
	.byte	'Ifx_CPU_TPS_CON_Bits',0,18,249,4,3
	.word	56317
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,18,252,4,16,4,11
	.byte	'Timer',0,4
	.word	468
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,18,255,4,3
	.word	56489
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,18,130,5,16,4,11
	.byte	'ADDR',0,4
	.word	468
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_CPU_TR_ADR_Bits',0,18,133,5,3
	.word	56569
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,18,136,5,16,4,11
	.byte	'EVTA',0,4
	.word	468
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	468
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	468
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	468
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	468
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	468
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	468
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	468
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	468
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	468
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	468
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	468
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	468
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	468
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	468
	.byte	3,0,2,35,0,0,20
	.byte	'Ifx_CPU_TR_EVT_Bits',0,18,153,5,3
	.word	56642
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,18,156,5,16,4,11
	.byte	'T0',0,4
	.word	468
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	468
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	468
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	468
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	468
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	468
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	468
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	468
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	468
	.byte	24,0,2,35,0,0,20
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,18,167,5,3
	.word	56960
	.byte	12,18,175,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48295
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_A',0,18,180,5,3
	.word	57155
	.byte	12,18,183,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48356
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_BIV',0,18,188,5,3
	.word	57214
	.byte	12,18,191,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48435
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_BTV',0,18,196,5,3
	.word	57275
	.byte	12,18,199,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48521
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_CCNT',0,18,204,5,3
	.word	57336
	.byte	12,18,207,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48610
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_CCTRL',0,18,212,5,3
	.word	57398
	.byte	12,18,215,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48756
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_COMPAT',0,18,220,5,3
	.word	57461
	.byte	12,18,223,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48883
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_CORE_ID',0,18,228,5,3
	.word	57525
	.byte	12,18,231,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48981
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_CPR_L',0,18,236,5,3
	.word	57590
	.byte	12,18,239,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49074
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_CPR_U',0,18,244,5,3
	.word	57653
	.byte	12,18,247,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49167
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_CPU_ID',0,18,252,5,3
	.word	57716
	.byte	12,18,255,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49274
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_CPXE',0,18,132,6,3
	.word	57780
	.byte	12,18,135,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49361
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_CREVT',0,18,140,6,3
	.word	57842
	.byte	12,18,143,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49515
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_CUS_ID',0,18,148,6,3
	.word	57905
	.byte	12,18,151,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49609
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_D',0,18,156,6,3
	.word	57969
	.byte	12,18,159,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49672
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_DATR',0,18,164,6,3
	.word	58028
	.byte	12,18,167,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49890
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_DBGSR',0,18,172,6,3
	.word	58090
	.byte	12,18,175,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50105
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_DBGTCR',0,18,180,6,3
	.word	58153
	.byte	12,18,183,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50199
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_DCON0',0,18,188,6,3
	.word	58217
	.byte	12,18,191,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50315
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_DCON2',0,18,196,6,3
	.word	58280
	.byte	12,18,199,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50416
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_DCX',0,18,204,6,3
	.word	58343
	.byte	12,18,207,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50509
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_DEADD',0,18,212,6,3
	.word	58404
	.byte	12,18,215,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50589
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_DIEAR',0,18,220,6,3
	.word	58467
	.byte	12,18,223,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50658
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_DIETR',0,18,228,6,3
	.word	58530
	.byte	12,18,231,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50887
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_DMS',0,18,236,6,3
	.word	58593
	.byte	12,18,239,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50980
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_DPR_L',0,18,244,6,3
	.word	58654
	.byte	12,18,247,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51075
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_DPR_U',0,18,252,6,3
	.word	58717
	.byte	12,18,255,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51170
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_DPRE',0,18,132,7,3
	.word	58780
	.byte	12,18,135,7,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51260
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_DPWE',0,18,140,7,3
	.word	58842
	.byte	12,18,143,7,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51350
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_DSTR',0,18,148,7,3
	.word	58904
	.byte	12,18,151,7,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51674
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_EXEVT',0,18,156,7,3
	.word	58966
	.byte	12,18,159,7,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51828
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_FCX',0,18,164,7,3
	.word	59029
	.byte	12,18,167,7,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51934
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,18,172,7,3
	.word	59090
	.byte	12,18,175,7,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52283
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,18,180,7,3
	.word	59160
	.byte	12,18,183,7,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52443
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,18,188,7,3
	.word	59230
	.byte	12,18,191,7,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52524
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,18,196,7,3
	.word	59299
	.byte	12,18,199,7,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52611
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,18,204,7,3
	.word	59370
	.byte	12,18,207,7,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52698
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,18,212,7,3
	.word	59441
	.byte	12,18,215,7,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52785
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_ICNT',0,18,220,7,3
	.word	59512
	.byte	20
	.byte	'Ifx_CPU_ICR',0,18,228,7,3
	.word	20051
	.byte	12,18,231,7,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52902
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_ISP',0,18,236,7,3
	.word	59595
	.byte	12,18,239,7,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52968
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_LCX',0,18,244,7,3
	.word	59656
	.byte	12,18,247,7,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53074
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_M1CNT',0,18,252,7,3
	.word	59717
	.byte	12,18,255,7,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53167
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_M2CNT',0,18,132,8,3
	.word	59780
	.byte	12,18,135,8,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53260
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_M3CNT',0,18,140,8,3
	.word	59843
	.byte	12,18,143,8,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53353
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_PC',0,18,148,8,3
	.word	59906
	.byte	12,18,151,8,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53438
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_PCON0',0,18,156,8,3
	.word	59966
	.byte	12,18,159,8,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53554
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_PCON1',0,18,164,8,3
	.word	60029
	.byte	12,18,167,8,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53665
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_PCON2',0,18,172,8,3
	.word	60092
	.byte	12,18,175,8,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53766
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_PCXI',0,18,180,8,3
	.word	60155
	.byte	12,18,183,8,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53896
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_PIEAR',0,18,188,8,3
	.word	60217
	.byte	12,18,191,8,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53965
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_PIETR',0,18,196,8,3
	.word	60280
	.byte	12,18,199,8,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54194
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_PMA0',0,18,204,8,3
	.word	60343
	.byte	12,18,207,8,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54307
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_PMA1',0,18,212,8,3
	.word	60405
	.byte	12,18,215,8,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54420
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_PMA2',0,18,220,8,3
	.word	60467
	.byte	12,18,223,8,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54511
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_PSTR',0,18,228,8,3
	.word	60529
	.byte	12,18,231,8,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54714
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_PSW',0,18,236,8,3
	.word	60591
	.byte	12,18,239,8,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54957
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_SEGEN',0,18,244,8,3
	.word	60652
	.byte	12,18,247,8,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55085
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_SMACON',0,18,252,8,3
	.word	60715
	.byte	12,18,255,8,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55326
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_SPROT_ACCENA',0,18,132,9,3
	.word	60779
	.byte	12,18,135,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55409
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_SPROT_ACCENB',0,18,140,9,3
	.word	60849
	.byte	12,18,143,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55500
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,18,148,9,3
	.word	60919
	.byte	12,18,151,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55591
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,18,156,9,3
	.word	60993
	.byte	12,18,159,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55690
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,18,164,9,3
	.word	61067
	.byte	12,18,167,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55797
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,18,172,9,3
	.word	61137
	.byte	12,18,175,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55904
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_SWEVT',0,18,180,9,3
	.word	61207
	.byte	12,18,183,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56058
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_SYSCON',0,18,188,9,3
	.word	61270
	.byte	12,18,191,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56219
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_TASK_ASI',0,18,196,9,3
	.word	61334
	.byte	12,18,199,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56317
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_TPS_CON',0,18,204,9,3
	.word	61400
	.byte	12,18,207,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56489
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_TPS_TIMER',0,18,212,9,3
	.word	61465
	.byte	12,18,215,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56569
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_TR_ADR',0,18,220,9,3
	.word	61532
	.byte	12,18,223,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56642
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_TR_EVT',0,18,228,9,3
	.word	61596
	.byte	12,18,231,9,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56960
	.byte	4,2,35,0,0,20
	.byte	'Ifx_CPU_TRIG_ACC',0,18,236,9,3
	.word	61660
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,18,247,9,25,8,13
	.byte	'L',0
	.word	57590
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	57653
	.byte	4,2,35,4,0,14
	.word	61726
	.byte	20
	.byte	'Ifx_CPU_CPR',0,18,251,9,3
	.word	61768
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,18,254,9,25,8,13
	.byte	'L',0
	.word	58654
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	58717
	.byte	4,2,35,4,0,14
	.word	61794
	.byte	20
	.byte	'Ifx_CPU_DPR',0,18,130,10,3
	.word	61836
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN',0,18,133,10,25,16,13
	.byte	'LA',0
	.word	61067
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	61137
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	60919
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	60993
	.byte	4,2,35,12,0,14
	.word	61862
	.byte	20
	.byte	'Ifx_CPU_SPROT_RGN',0,18,139,10,3
	.word	61944
	.byte	18,12
	.word	61465
	.byte	19,2,0,10
	.byte	'_Ifx_CPU_TPS',0,18,142,10,25,16,13
	.byte	'CON',0
	.word	61400
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	61976
	.byte	12,2,35,4,0,14
	.word	61985
	.byte	20
	.byte	'Ifx_CPU_TPS',0,18,146,10,3
	.word	62033
	.byte	10
	.byte	'_Ifx_CPU_TR',0,18,149,10,25,8,13
	.byte	'EVT',0
	.word	61596
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	61532
	.byte	4,2,35,4,0,14
	.word	62059
	.byte	20
	.byte	'Ifx_CPU_TR',0,18,153,10,3
	.word	62104
	.byte	18,176,32
	.word	620
	.byte	19,175,32,0,18,208,223,1
	.word	620
	.byte	19,207,223,1,0,18,248,1
	.word	620
	.byte	19,247,1,0,18,244,29
	.word	620
	.byte	19,243,29,0,18,188,3
	.word	620
	.byte	19,187,3,0,18,232,3
	.word	620
	.byte	19,231,3,0,18,252,23
	.word	620
	.byte	19,251,23,0,18,228,63
	.word	620
	.byte	19,227,63,0,18,128,1
	.word	61794
	.byte	19,15,0,14
	.word	62219
	.byte	18,128,31
	.word	620
	.byte	19,255,30,0,18,64
	.word	61726
	.byte	19,7,0,14
	.word	62245
	.byte	18,192,31
	.word	620
	.byte	19,191,31,0,18,16
	.word	57780
	.byte	19,3,0,18,16
	.word	58780
	.byte	19,3,0,18,16
	.word	58842
	.byte	19,3,0,18,208,7
	.word	620
	.byte	19,207,7,0,14
	.word	61985
	.byte	18,240,23
	.word	620
	.byte	19,239,23,0,18,64
	.word	62059
	.byte	19,7,0,14
	.word	62324
	.byte	18,192,23
	.word	620
	.byte	19,191,23,0,18,232,1
	.word	620
	.byte	19,231,1,0,18,180,1
	.word	620
	.byte	19,179,1,0,18,172,1
	.word	620
	.byte	19,171,1,0,18,64
	.word	57969
	.byte	19,15,0,18,64
	.word	620
	.byte	19,63,0,18,64
	.word	57155
	.byte	19,15,0,10
	.byte	'_Ifx_CPU',0,18,166,10,25,128,128,4,13
	.byte	'reserved_0',0
	.word	62129
	.byte	176,32,2,35,0,13
	.byte	'SEGEN',0
	.word	60652
	.byte	4,3,35,176,32,13
	.byte	'reserved_1034',0
	.word	62140
	.byte	208,223,1,3,35,180,32,13
	.byte	'TASK_ASI',0
	.word	61334
	.byte	4,4,35,132,128,2,13
	.byte	'reserved_8008',0
	.word	62153
	.byte	248,1,4,35,136,128,2,13
	.byte	'PMA0',0
	.word	60343
	.byte	4,4,35,128,130,2,13
	.byte	'PMA1',0
	.word	60405
	.byte	4,4,35,132,130,2,13
	.byte	'PMA2',0
	.word	60467
	.byte	4,4,35,136,130,2,13
	.byte	'reserved_810C',0
	.word	62164
	.byte	244,29,4,35,140,130,2,13
	.byte	'DCON2',0
	.word	58280
	.byte	4,4,35,128,160,2,13
	.byte	'reserved_9004',0
	.word	4736
	.byte	8,4,35,132,160,2,13
	.byte	'SMACON',0
	.word	60715
	.byte	4,4,35,140,160,2,13
	.byte	'DSTR',0
	.word	58904
	.byte	4,4,35,144,160,2,13
	.byte	'reserved_9014',0
	.word	2917
	.byte	4,4,35,148,160,2,13
	.byte	'DATR',0
	.word	58028
	.byte	4,4,35,152,160,2,13
	.byte	'DEADD',0
	.word	58404
	.byte	4,4,35,156,160,2,13
	.byte	'DIEAR',0
	.word	58467
	.byte	4,4,35,160,160,2,13
	.byte	'DIETR',0
	.word	58530
	.byte	4,4,35,164,160,2,13
	.byte	'reserved_9028',0
	.word	4107
	.byte	24,4,35,168,160,2,13
	.byte	'DCON0',0
	.word	58217
	.byte	4,4,35,192,160,2,13
	.byte	'reserved_9044',0
	.word	62175
	.byte	188,3,4,35,196,160,2,13
	.byte	'PSTR',0
	.word	60529
	.byte	4,4,35,128,164,2,13
	.byte	'PCON1',0
	.word	60029
	.byte	4,4,35,132,164,2,13
	.byte	'PCON2',0
	.word	60092
	.byte	4,4,35,136,164,2,13
	.byte	'PCON0',0
	.word	59966
	.byte	4,4,35,140,164,2,13
	.byte	'PIEAR',0
	.word	60217
	.byte	4,4,35,144,164,2,13
	.byte	'PIETR',0
	.word	60280
	.byte	4,4,35,148,164,2,13
	.byte	'reserved_9218',0
	.word	62186
	.byte	232,3,4,35,152,164,2,13
	.byte	'COMPAT',0
	.word	57461
	.byte	4,4,35,128,168,2,13
	.byte	'reserved_9404',0
	.word	62197
	.byte	252,23,4,35,132,168,2,13
	.byte	'FPU_TRAP_CON',0
	.word	59090
	.byte	4,4,35,128,192,2,13
	.byte	'FPU_TRAP_PC',0
	.word	59230
	.byte	4,4,35,132,192,2,13
	.byte	'FPU_TRAP_OPC',0
	.word	59160
	.byte	4,4,35,136,192,2,13
	.byte	'reserved_A00C',0
	.word	2917
	.byte	4,4,35,140,192,2,13
	.byte	'FPU_TRAP_SRC1',0
	.word	59299
	.byte	4,4,35,144,192,2,13
	.byte	'FPU_TRAP_SRC2',0
	.word	59370
	.byte	4,4,35,148,192,2,13
	.byte	'FPU_TRAP_SRC3',0
	.word	59441
	.byte	4,4,35,152,192,2,13
	.byte	'reserved_A01C',0
	.word	62208
	.byte	228,63,4,35,156,192,2,13
	.byte	'DPR',0
	.word	62229
	.byte	128,1,4,35,128,128,3,13
	.byte	'reserved_C080',0
	.word	62234
	.byte	128,31,4,35,128,129,3,13
	.byte	'CPR',0
	.word	62254
	.byte	64,4,35,128,160,3,13
	.byte	'reserved_D040',0
	.word	62259
	.byte	192,31,4,35,192,160,3,13
	.byte	'CPXE',0
	.word	62270
	.byte	16,4,35,128,192,3,13
	.byte	'DPRE',0
	.word	62279
	.byte	16,4,35,144,192,3,13
	.byte	'DPWE',0
	.word	62288
	.byte	16,4,35,160,192,3,13
	.byte	'reserved_E030',0
	.word	62297
	.byte	208,7,4,35,176,192,3,13
	.byte	'TPS',0
	.word	62308
	.byte	16,4,35,128,200,3,13
	.byte	'reserved_E410',0
	.word	62313
	.byte	240,23,4,35,144,200,3,13
	.byte	'TR',0
	.word	62333
	.byte	64,4,35,128,224,3,13
	.byte	'reserved_F040',0
	.word	62338
	.byte	192,23,4,35,192,224,3,13
	.byte	'CCTRL',0
	.word	57398
	.byte	4,4,35,128,248,3,13
	.byte	'CCNT',0
	.word	57336
	.byte	4,4,35,132,248,3,13
	.byte	'ICNT',0
	.word	59512
	.byte	4,4,35,136,248,3,13
	.byte	'M1CNT',0
	.word	59717
	.byte	4,4,35,140,248,3,13
	.byte	'M2CNT',0
	.word	59780
	.byte	4,4,35,144,248,3,13
	.byte	'M3CNT',0
	.word	59843
	.byte	4,4,35,148,248,3,13
	.byte	'reserved_FC18',0
	.word	62349
	.byte	232,1,4,35,152,248,3,13
	.byte	'DBGSR',0
	.word	58090
	.byte	4,4,35,128,250,3,13
	.byte	'reserved_FD04',0
	.word	2917
	.byte	4,4,35,132,250,3,13
	.byte	'EXEVT',0
	.word	58966
	.byte	4,4,35,136,250,3,13
	.byte	'CREVT',0
	.word	57842
	.byte	4,4,35,140,250,3,13
	.byte	'SWEVT',0
	.word	61207
	.byte	4,4,35,144,250,3,13
	.byte	'reserved_FD14',0
	.word	46236
	.byte	28,4,35,148,250,3,13
	.byte	'TRIG_ACC',0
	.word	61660
	.byte	4,4,35,176,250,3,13
	.byte	'reserved_FD34',0
	.word	5076
	.byte	12,4,35,180,250,3,13
	.byte	'DMS',0
	.word	58593
	.byte	4,4,35,192,250,3,13
	.byte	'DCX',0
	.word	58343
	.byte	4,4,35,196,250,3,13
	.byte	'DBGTCR',0
	.word	58153
	.byte	4,4,35,200,250,3,13
	.byte	'reserved_FD4C',0
	.word	62360
	.byte	180,1,4,35,204,250,3,13
	.byte	'PCXI',0
	.word	60155
	.byte	4,4,35,128,252,3,13
	.byte	'PSW',0
	.word	60591
	.byte	4,4,35,132,252,3,13
	.byte	'PC',0
	.word	59906
	.byte	4,4,35,136,252,3,13
	.byte	'reserved_FE0C',0
	.word	4736
	.byte	8,4,35,140,252,3,13
	.byte	'SYSCON',0
	.word	61270
	.byte	4,4,35,148,252,3,13
	.byte	'CPU_ID',0
	.word	57716
	.byte	4,4,35,152,252,3,13
	.byte	'CORE_ID',0
	.word	57525
	.byte	4,4,35,156,252,3,13
	.byte	'BIV',0
	.word	57214
	.byte	4,4,35,160,252,3,13
	.byte	'BTV',0
	.word	57275
	.byte	4,4,35,164,252,3,13
	.byte	'ISP',0
	.word	59595
	.byte	4,4,35,168,252,3,13
	.byte	'ICR',0
	.word	20051
	.byte	4,4,35,172,252,3,13
	.byte	'reserved_FE30',0
	.word	4736
	.byte	8,4,35,176,252,3,13
	.byte	'FCX',0
	.word	59029
	.byte	4,4,35,184,252,3,13
	.byte	'LCX',0
	.word	59656
	.byte	4,4,35,188,252,3,13
	.byte	'reserved_FE40',0
	.word	46227
	.byte	16,4,35,192,252,3,13
	.byte	'CUS_ID',0
	.word	57905
	.byte	4,4,35,208,252,3,13
	.byte	'reserved_FE54',0
	.word	62371
	.byte	172,1,4,35,212,252,3,13
	.byte	'D',0
	.word	62382
	.byte	64,4,35,128,254,3,13
	.byte	'reserved_FF40',0
	.word	62391
	.byte	64,4,35,192,254,3,13
	.byte	'A',0
	.word	62400
	.byte	64,4,35,128,255,3,13
	.byte	'reserved_FFC0',0
	.word	62391
	.byte	64,4,35,192,255,3,0,14
	.word	62409
	.byte	20
	.byte	'Ifx_CPU',0,18,130,11,3
	.word	64200
	.byte	15,6,127,9,1,16
	.byte	'IfxCpu_Id_0',0,0,16
	.byte	'IfxCpu_Id_1',0,1,16
	.byte	'IfxCpu_Id_none',0,2,0,20
	.byte	'IfxCpu_Id',0,6,132,1,3
	.word	64222
	.byte	20
	.byte	'IfxCpu_ResourceCpu',0,6,161,1,3
	.word	1432
	.byte	20
	.byte	'Ifx_SRC_SRCR_Bits',0,11,62,3
	.word	9890
	.byte	20
	.byte	'Ifx_SRC_SRCR',0,11,75,3
	.word	10180
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,11,86,25,4,13
	.byte	'SR',0
	.word	10180
	.byte	4,2,35,0,0,14
	.word	64367
	.byte	20
	.byte	'Ifx_SRC_AGBT',0,11,89,3
	.word	64399
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,11,92,25,12,13
	.byte	'TX',0
	.word	10180
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10180
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10180
	.byte	4,2,35,8,0,14
	.word	64425
	.byte	20
	.byte	'Ifx_SRC_ASCLIN',0,11,97,3
	.word	64484
	.byte	10
	.byte	'_Ifx_SRC_BCUSPB',0,11,100,25,4,13
	.byte	'SBSRC',0
	.word	10180
	.byte	4,2,35,0,0,14
	.word	64512
	.byte	20
	.byte	'Ifx_SRC_BCUSPB',0,11,103,3
	.word	64549
	.byte	18,64
	.word	10180
	.byte	19,15,0,10
	.byte	'_Ifx_SRC_CAN',0,11,106,25,64,13
	.byte	'INT',0
	.word	64577
	.byte	64,2,35,0,0,14
	.word	64586
	.byte	20
	.byte	'Ifx_SRC_CAN',0,11,109,3
	.word	64618
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,11,112,25,16,13
	.byte	'SR0',0
	.word	10180
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10180
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10180
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10180
	.byte	4,2,35,12,0,14
	.word	64643
	.byte	20
	.byte	'Ifx_SRC_CCU6',0,11,118,3
	.word	64715
	.byte	18,8
	.word	10180
	.byte	19,1,0,10
	.byte	'_Ifx_SRC_CERBERUS',0,11,121,25,8,13
	.byte	'SR',0
	.word	64741
	.byte	8,2,35,0,0,14
	.word	64750
	.byte	20
	.byte	'Ifx_SRC_CERBERUS',0,11,124,3
	.word	64786
	.byte	10
	.byte	'_Ifx_SRC_CIF',0,11,127,25,16,13
	.byte	'MI',0
	.word	10180
	.byte	4,2,35,0,13
	.byte	'MIEP',0
	.word	10180
	.byte	4,2,35,4,13
	.byte	'ISP',0
	.word	10180
	.byte	4,2,35,8,13
	.byte	'MJPEG',0
	.word	10180
	.byte	4,2,35,12,0,14
	.word	64816
	.byte	20
	.byte	'Ifx_SRC_CIF',0,11,133,1,3
	.word	64889
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,11,136,1,25,4,13
	.byte	'SBSRC',0
	.word	10180
	.byte	4,2,35,0,0,14
	.word	64915
	.byte	20
	.byte	'Ifx_SRC_CPU',0,11,139,1,3
	.word	64950
	.byte	18,192,1
	.word	10180
	.byte	19,47,0,10
	.byte	'_Ifx_SRC_DMA',0,11,142,1,25,208,1,13
	.byte	'ERR',0
	.word	10180
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	5076
	.byte	12,2,35,4,13
	.byte	'CH',0
	.word	64976
	.byte	192,1,2,35,16,0,14
	.word	64986
	.byte	20
	.byte	'Ifx_SRC_DMA',0,11,147,1,3
	.word	65053
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,11,150,1,25,8,13
	.byte	'SRM',0
	.word	10180
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	10180
	.byte	4,2,35,4,0,14
	.word	65079
	.byte	20
	.byte	'Ifx_SRC_DSADC',0,11,154,1,3
	.word	65127
	.byte	10
	.byte	'_Ifx_SRC_EMEM',0,11,157,1,25,4,13
	.byte	'SR',0
	.word	10180
	.byte	4,2,35,0,0,14
	.word	65155
	.byte	20
	.byte	'Ifx_SRC_EMEM',0,11,160,1,3
	.word	65188
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,11,163,1,25,80,13
	.byte	'INT',0
	.word	64741
	.byte	8,2,35,0,13
	.byte	'TINT',0
	.word	64741
	.byte	8,2,35,8,13
	.byte	'NDAT',0
	.word	64741
	.byte	8,2,35,16,13
	.byte	'MBSC',0
	.word	64741
	.byte	8,2,35,24,13
	.byte	'OBUSY',0
	.word	10180
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	10180
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	46245
	.byte	40,2,35,40,0,14
	.word	65215
	.byte	20
	.byte	'Ifx_SRC_ERAY',0,11,172,1,3
	.word	65342
	.byte	10
	.byte	'_Ifx_SRC_ETH',0,11,175,1,25,4,13
	.byte	'SR',0
	.word	10180
	.byte	4,2,35,0,0,14
	.word	65369
	.byte	20
	.byte	'Ifx_SRC_ETH',0,11,178,1,3
	.word	65401
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,11,181,1,25,4,13
	.byte	'SR',0
	.word	10180
	.byte	4,2,35,0,0,14
	.word	65427
	.byte	20
	.byte	'Ifx_SRC_FCE',0,11,184,1,3
	.word	65459
	.byte	10
	.byte	'_Ifx_SRC_FFT',0,11,187,1,25,12,13
	.byte	'DONE',0
	.word	10180
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	10180
	.byte	4,2,35,4,13
	.byte	'RFS',0
	.word	10180
	.byte	4,2,35,8,0,14
	.word	65485
	.byte	20
	.byte	'Ifx_SRC_FFT',0,11,192,1,3
	.word	65545
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,11,195,1,25,32,13
	.byte	'SR0',0
	.word	10180
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10180
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10180
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10180
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	46227
	.byte	16,2,35,16,0,14
	.word	65571
	.byte	20
	.byte	'Ifx_SRC_GPSR',0,11,202,1,3
	.word	65665
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,11,205,1,25,48,13
	.byte	'CIRQ',0
	.word	10180
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	10180
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	10180
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	10180
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	10180
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	10180
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	4107
	.byte	24,2,35,24,0,14
	.word	65692
	.byte	20
	.byte	'Ifx_SRC_GPT12',0,11,214,1,3
	.word	65809
	.byte	18,12
	.word	10180
	.byte	19,2,0,18,32
	.word	10180
	.byte	19,7,0,18,32
	.word	65846
	.byte	19,0,0,18,88
	.word	620
	.byte	19,87,0,18,108
	.word	10180
	.byte	19,26,0,18,96
	.word	620
	.byte	19,95,0,18,96
	.word	65846
	.byte	19,2,0,18,160,3
	.word	620
	.byte	19,159,3,0,18,64
	.word	65846
	.byte	19,1,0,18,192,3
	.word	620
	.byte	19,191,3,0,18,16
	.word	10180
	.byte	19,3,0,18,64
	.word	65931
	.byte	19,3,0,18,192,2
	.word	620
	.byte	19,191,2,0,18,52
	.word	620
	.byte	19,51,0,10
	.byte	'_Ifx_SRC_GTM',0,11,217,1,25,204,18,13
	.byte	'AEIIRQ',0
	.word	10180
	.byte	4,2,35,0,13
	.byte	'ARUIRQ',0
	.word	65837
	.byte	12,2,35,4,13
	.byte	'reserved_10',0
	.word	2917
	.byte	4,2,35,16,13
	.byte	'BRCIRQ',0
	.word	10180
	.byte	4,2,35,20,13
	.byte	'CMPIRQ',0
	.word	10180
	.byte	4,2,35,24,13
	.byte	'SPEIRQ',0
	.word	64741
	.byte	8,2,35,28,13
	.byte	'reserved_24',0
	.word	4736
	.byte	8,2,35,36,13
	.byte	'PSM',0
	.word	65855
	.byte	32,2,35,44,13
	.byte	'reserved_4C',0
	.word	65864
	.byte	88,2,35,76,13
	.byte	'DPLL',0
	.word	65873
	.byte	108,3,35,164,1,13
	.byte	'reserved_110',0
	.word	65882
	.byte	96,3,35,144,2,13
	.byte	'ERR',0
	.word	10180
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	5076
	.byte	12,3,35,244,2,13
	.byte	'TIM',0
	.word	65891
	.byte	96,3,35,128,3,13
	.byte	'reserved_1E0',0
	.word	65900
	.byte	160,3,3,35,224,3,13
	.byte	'MCS',0
	.word	65891
	.byte	96,3,35,128,7,13
	.byte	'reserved_3E0',0
	.word	65900
	.byte	160,3,3,35,224,7,13
	.byte	'TOM',0
	.word	65911
	.byte	64,3,35,128,11,13
	.byte	'reserved_5C0',0
	.word	65920
	.byte	192,3,3,35,192,11,13
	.byte	'ATOM',0
	.word	65940
	.byte	64,3,35,128,15,13
	.byte	'reserved_7C0',0
	.word	65949
	.byte	192,2,3,35,192,15,13
	.byte	'MCSW0',0
	.word	65837
	.byte	12,3,35,128,18,13
	.byte	'reserved_90C',0
	.word	65960
	.byte	52,3,35,140,18,13
	.byte	'MCSW1',0
	.word	65837
	.byte	12,3,35,192,18,0,14
	.word	65969
	.byte	20
	.byte	'Ifx_SRC_GTM',0,11,243,1,3
	.word	66429
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,11,246,1,25,4,13
	.byte	'SR',0
	.word	10180
	.byte	4,2,35,0,0,14
	.word	66455
	.byte	20
	.byte	'Ifx_SRC_HSCT',0,11,249,1,3
	.word	66488
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,11,252,1,25,16,13
	.byte	'COK',0
	.word	10180
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	10180
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10180
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	10180
	.byte	4,2,35,12,0,14
	.word	66515
	.byte	20
	.byte	'Ifx_SRC_HSSL',0,11,130,2,3
	.word	66588
	.byte	18,56
	.word	620
	.byte	19,55,0,10
	.byte	'_Ifx_SRC_I2C',0,11,133,2,25,80,13
	.byte	'BREQ',0
	.word	10180
	.byte	4,2,35,0,13
	.byte	'LBREQ',0
	.word	10180
	.byte	4,2,35,4,13
	.byte	'SREQ',0
	.word	10180
	.byte	4,2,35,8,13
	.byte	'LSREQ',0
	.word	10180
	.byte	4,2,35,12,13
	.byte	'ERR',0
	.word	10180
	.byte	4,2,35,16,13
	.byte	'P',0
	.word	10180
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	66615
	.byte	56,2,35,24,0,14
	.word	66624
	.byte	20
	.byte	'Ifx_SRC_I2C',0,11,142,2,3
	.word	66747
	.byte	10
	.byte	'_Ifx_SRC_LMU',0,11,145,2,25,4,13
	.byte	'SR',0
	.word	10180
	.byte	4,2,35,0,0,14
	.word	66773
	.byte	20
	.byte	'Ifx_SRC_LMU',0,11,148,2,3
	.word	66805
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,11,151,2,25,20,13
	.byte	'SR0',0
	.word	10180
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10180
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10180
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10180
	.byte	4,2,35,12,13
	.byte	'SR4',0
	.word	10180
	.byte	4,2,35,16,0,14
	.word	66831
	.byte	20
	.byte	'Ifx_SRC_MSC',0,11,158,2,3
	.word	66916
	.byte	10
	.byte	'_Ifx_SRC_PMU',0,11,161,2,25,4,13
	.byte	'SR',0
	.word	10180
	.byte	4,2,35,0,0,14
	.word	66942
	.byte	20
	.byte	'Ifx_SRC_PMU',0,11,164,2,3
	.word	66974
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,11,167,2,25,32,13
	.byte	'SR',0
	.word	65846
	.byte	32,2,35,0,0,14
	.word	67000
	.byte	20
	.byte	'Ifx_SRC_PSI5',0,11,170,2,3
	.word	67033
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,11,173,2,25,32,13
	.byte	'SR',0
	.word	65846
	.byte	32,2,35,0,0,14
	.word	67060
	.byte	20
	.byte	'Ifx_SRC_PSI5S',0,11,176,2,3
	.word	67094
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,11,179,2,25,24,13
	.byte	'TX',0
	.word	10180
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10180
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10180
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	10180
	.byte	4,2,35,12,13
	.byte	'HC',0
	.word	10180
	.byte	4,2,35,16,13
	.byte	'U',0
	.word	10180
	.byte	4,2,35,20,0,14
	.word	67122
	.byte	20
	.byte	'Ifx_SRC_QSPI',0,11,187,2,3
	.word	67215
	.byte	10
	.byte	'_Ifx_SRC_SCR',0,11,190,2,25,4,13
	.byte	'SR',0
	.word	10180
	.byte	4,2,35,0,0,14
	.word	67242
	.byte	20
	.byte	'Ifx_SRC_SCR',0,11,193,2,3
	.word	67274
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,11,196,2,25,20,13
	.byte	'DTS',0
	.word	10180
	.byte	4,2,35,0,13
	.byte	'ERU',0
	.word	65931
	.byte	16,2,35,4,0,14
	.word	67300
	.byte	20
	.byte	'Ifx_SRC_SCU',0,11,200,2,3
	.word	67346
	.byte	18,24
	.word	10180
	.byte	19,5,0,10
	.byte	'_Ifx_SRC_SENT',0,11,203,2,25,24,13
	.byte	'SR',0
	.word	67372
	.byte	24,2,35,0,0,14
	.word	67381
	.byte	20
	.byte	'Ifx_SRC_SENT',0,11,206,2,3
	.word	67414
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,11,209,2,25,12,13
	.byte	'SR',0
	.word	65837
	.byte	12,2,35,0,0,14
	.word	67441
	.byte	20
	.byte	'Ifx_SRC_SMU',0,11,212,2,3
	.word	67473
	.byte	10
	.byte	'_Ifx_SRC_STM',0,11,215,2,25,8,13
	.byte	'SR0',0
	.word	10180
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10180
	.byte	4,2,35,4,0,14
	.word	67499
	.byte	20
	.byte	'Ifx_SRC_STM',0,11,219,2,3
	.word	67545
	.byte	10
	.byte	'_Ifx_SRC_VADCCG',0,11,222,2,25,16,13
	.byte	'SR0',0
	.word	10180
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10180
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10180
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10180
	.byte	4,2,35,12,0,14
	.word	67571
	.byte	20
	.byte	'Ifx_SRC_VADCCG',0,11,228,2,3
	.word	67646
	.byte	10
	.byte	'_Ifx_SRC_VADCG',0,11,231,2,25,16,13
	.byte	'SR0',0
	.word	10180
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10180
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10180
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10180
	.byte	4,2,35,12,0,14
	.word	67675
	.byte	20
	.byte	'Ifx_SRC_VADCG',0,11,237,2,3
	.word	67749
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,11,240,2,25,4,13
	.byte	'SRC',0
	.word	10180
	.byte	4,2,35,0,0,14
	.word	67777
	.byte	20
	.byte	'Ifx_SRC_XBAR',0,11,243,2,3
	.word	67811
	.byte	18,4
	.word	64367
	.byte	19,0,0,14
	.word	67838
	.byte	10
	.byte	'_Ifx_SRC_GAGBT',0,11,128,3,25,4,13
	.byte	'AGBT',0
	.word	67847
	.byte	4,2,35,0,0,14
	.word	67852
	.byte	20
	.byte	'Ifx_SRC_GAGBT',0,11,131,3,3
	.word	67888
	.byte	18,48
	.word	64425
	.byte	19,3,0,14
	.word	67916
	.byte	10
	.byte	'_Ifx_SRC_GASCLIN',0,11,134,3,25,48,13
	.byte	'ASCLIN',0
	.word	67925
	.byte	48,2,35,0,0,14
	.word	67930
	.byte	20
	.byte	'Ifx_SRC_GASCLIN',0,11,137,3,3
	.word	67970
	.byte	14
	.word	64512
	.byte	10
	.byte	'_Ifx_SRC_GBCU',0,11,140,3,25,4,13
	.byte	'SPB',0
	.word	68000
	.byte	4,2,35,0,0,14
	.word	68005
	.byte	20
	.byte	'Ifx_SRC_GBCU',0,11,143,3,3
	.word	68039
	.byte	18,64
	.word	64586
	.byte	19,0,0,14
	.word	68066
	.byte	10
	.byte	'_Ifx_SRC_GCAN',0,11,146,3,25,64,13
	.byte	'CAN',0
	.word	68075
	.byte	64,2,35,0,0,14
	.word	68080
	.byte	20
	.byte	'Ifx_SRC_GCAN',0,11,149,3,3
	.word	68114
	.byte	18,32
	.word	64643
	.byte	19,1,0,14
	.word	68141
	.byte	10
	.byte	'_Ifx_SRC_GCCU6',0,11,152,3,25,32,13
	.byte	'CCU6',0
	.word	68150
	.byte	32,2,35,0,0,14
	.word	68155
	.byte	20
	.byte	'Ifx_SRC_GCCU6',0,11,155,3,3
	.word	68191
	.byte	14
	.word	64750
	.byte	10
	.byte	'_Ifx_SRC_GCERBERUS',0,11,158,3,25,8,13
	.byte	'CERBERUS',0
	.word	68219
	.byte	8,2,35,0,0,14
	.word	68224
	.byte	20
	.byte	'Ifx_SRC_GCERBERUS',0,11,161,3,3
	.word	68268
	.byte	18,16
	.word	64816
	.byte	19,0,0,14
	.word	68300
	.byte	10
	.byte	'_Ifx_SRC_GCIF',0,11,164,3,25,16,13
	.byte	'CIF',0
	.word	68309
	.byte	16,2,35,0,0,14
	.word	68314
	.byte	20
	.byte	'Ifx_SRC_GCIF',0,11,167,3,3
	.word	68348
	.byte	18,8
	.word	64915
	.byte	19,1,0,14
	.word	68375
	.byte	10
	.byte	'_Ifx_SRC_GCPU',0,11,170,3,25,8,13
	.byte	'CPU',0
	.word	68384
	.byte	8,2,35,0,0,14
	.word	68389
	.byte	20
	.byte	'Ifx_SRC_GCPU',0,11,173,3,3
	.word	68423
	.byte	18,208,1
	.word	64986
	.byte	19,0,0,14
	.word	68450
	.byte	10
	.byte	'_Ifx_SRC_GDMA',0,11,176,3,25,208,1,13
	.byte	'DMA',0
	.word	68460
	.byte	208,1,2,35,0,0,14
	.word	68465
	.byte	20
	.byte	'Ifx_SRC_GDMA',0,11,179,3,3
	.word	68501
	.byte	14
	.word	65079
	.byte	14
	.word	65079
	.byte	14
	.word	65079
	.byte	10
	.byte	'_Ifx_SRC_GDSADC',0,11,182,3,25,32,13
	.byte	'DSADC0',0
	.word	68528
	.byte	8,2,35,0,13
	.byte	'reserved_8',0
	.word	4736
	.byte	8,2,35,8,13
	.byte	'DSADC2',0
	.word	68533
	.byte	8,2,35,16,13
	.byte	'DSADC3',0
	.word	68538
	.byte	8,2,35,24,0,14
	.word	68543
	.byte	20
	.byte	'Ifx_SRC_GDSADC',0,11,188,3,3
	.word	68634
	.byte	18,4
	.word	65155
	.byte	19,0,0,14
	.word	68663
	.byte	10
	.byte	'_Ifx_SRC_GEMEM',0,11,191,3,25,4,13
	.byte	'EMEM',0
	.word	68672
	.byte	4,2,35,0,0,14
	.word	68677
	.byte	20
	.byte	'Ifx_SRC_GEMEM',0,11,194,3,3
	.word	68713
	.byte	18,80
	.word	65215
	.byte	19,0,0,14
	.word	68741
	.byte	10
	.byte	'_Ifx_SRC_GERAY',0,11,197,3,25,80,13
	.byte	'ERAY',0
	.word	68750
	.byte	80,2,35,0,0,14
	.word	68755
	.byte	20
	.byte	'Ifx_SRC_GERAY',0,11,200,3,3
	.word	68791
	.byte	18,4
	.word	65369
	.byte	19,0,0,14
	.word	68819
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,11,203,3,25,4,13
	.byte	'ETH',0
	.word	68828
	.byte	4,2,35,0,0,14
	.word	68833
	.byte	20
	.byte	'Ifx_SRC_GETH',0,11,206,3,3
	.word	68867
	.byte	18,4
	.word	65427
	.byte	19,0,0,14
	.word	68894
	.byte	10
	.byte	'_Ifx_SRC_GFCE',0,11,209,3,25,4,13
	.byte	'FCE',0
	.word	68903
	.byte	4,2,35,0,0,14
	.word	68908
	.byte	20
	.byte	'Ifx_SRC_GFCE',0,11,212,3,3
	.word	68942
	.byte	18,12
	.word	65485
	.byte	19,0,0,14
	.word	68969
	.byte	10
	.byte	'_Ifx_SRC_GFFT',0,11,215,3,25,12,13
	.byte	'FFT',0
	.word	68978
	.byte	12,2,35,0,0,14
	.word	68983
	.byte	20
	.byte	'Ifx_SRC_GFFT',0,11,218,3,3
	.word	69017
	.byte	18,64
	.word	65571
	.byte	19,1,0,14
	.word	69044
	.byte	10
	.byte	'_Ifx_SRC_GGPSR',0,11,221,3,25,64,13
	.byte	'GPSR',0
	.word	69053
	.byte	64,2,35,0,0,14
	.word	69058
	.byte	20
	.byte	'Ifx_SRC_GGPSR',0,11,224,3,3
	.word	69094
	.byte	18,48
	.word	65692
	.byte	19,0,0,14
	.word	69122
	.byte	10
	.byte	'_Ifx_SRC_GGPT12',0,11,227,3,25,48,13
	.byte	'GPT12',0
	.word	69131
	.byte	48,2,35,0,0,14
	.word	69136
	.byte	20
	.byte	'Ifx_SRC_GGPT12',0,11,230,3,3
	.word	69174
	.byte	18,204,18
	.word	65969
	.byte	19,0,0,14
	.word	69203
	.byte	10
	.byte	'_Ifx_SRC_GGTM',0,11,233,3,25,204,18,13
	.byte	'GTM',0
	.word	69213
	.byte	204,18,2,35,0,0,14
	.word	69218
	.byte	20
	.byte	'Ifx_SRC_GGTM',0,11,236,3,3
	.word	69254
	.byte	18,4
	.word	66455
	.byte	19,0,0,14
	.word	69281
	.byte	10
	.byte	'_Ifx_SRC_GHSCT',0,11,239,3,25,4,13
	.byte	'HSCT',0
	.word	69290
	.byte	4,2,35,0,0,14
	.word	69295
	.byte	20
	.byte	'Ifx_SRC_GHSCT',0,11,242,3,3
	.word	69331
	.byte	18,64
	.word	66515
	.byte	19,3,0,14
	.word	69359
	.byte	10
	.byte	'_Ifx_SRC_GHSSL',0,11,245,3,25,68,13
	.byte	'HSSL',0
	.word	69368
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	10180
	.byte	4,2,35,64,0,14
	.word	69373
	.byte	20
	.byte	'Ifx_SRC_GHSSL',0,11,249,3,3
	.word	69422
	.byte	18,80
	.word	66624
	.byte	19,0,0,14
	.word	69450
	.byte	10
	.byte	'_Ifx_SRC_GI2C',0,11,252,3,25,80,13
	.byte	'I2C',0
	.word	69459
	.byte	80,2,35,0,0,14
	.word	69464
	.byte	20
	.byte	'Ifx_SRC_GI2C',0,11,255,3,3
	.word	69498
	.byte	18,4
	.word	66773
	.byte	19,0,0,14
	.word	69525
	.byte	10
	.byte	'_Ifx_SRC_GLMU',0,11,130,4,25,4,13
	.byte	'LMU',0
	.word	69534
	.byte	4,2,35,0,0,14
	.word	69539
	.byte	20
	.byte	'Ifx_SRC_GLMU',0,11,133,4,3
	.word	69573
	.byte	18,40
	.word	66831
	.byte	19,1,0,14
	.word	69600
	.byte	10
	.byte	'_Ifx_SRC_GMSC',0,11,136,4,25,40,13
	.byte	'MSC',0
	.word	69609
	.byte	40,2,35,0,0,14
	.word	69614
	.byte	20
	.byte	'Ifx_SRC_GMSC',0,11,139,4,3
	.word	69648
	.byte	18,8
	.word	66942
	.byte	19,1,0,14
	.word	69675
	.byte	10
	.byte	'_Ifx_SRC_GPMU',0,11,142,4,25,8,13
	.byte	'PMU',0
	.word	69684
	.byte	8,2,35,0,0,14
	.word	69689
	.byte	20
	.byte	'Ifx_SRC_GPMU',0,11,145,4,3
	.word	69723
	.byte	18,32
	.word	67000
	.byte	19,0,0,14
	.word	69750
	.byte	10
	.byte	'_Ifx_SRC_GPSI5',0,11,148,4,25,32,13
	.byte	'PSI5',0
	.word	69759
	.byte	32,2,35,0,0,14
	.word	69764
	.byte	20
	.byte	'Ifx_SRC_GPSI5',0,11,151,4,3
	.word	69800
	.byte	18,32
	.word	67060
	.byte	19,0,0,14
	.word	69828
	.byte	10
	.byte	'_Ifx_SRC_GPSI5S',0,11,154,4,25,32,13
	.byte	'PSI5S',0
	.word	69837
	.byte	32,2,35,0,0,14
	.word	69842
	.byte	20
	.byte	'Ifx_SRC_GPSI5S',0,11,157,4,3
	.word	69880
	.byte	18,96
	.word	67122
	.byte	19,3,0,14
	.word	69909
	.byte	10
	.byte	'_Ifx_SRC_GQSPI',0,11,160,4,25,96,13
	.byte	'QSPI',0
	.word	69918
	.byte	96,2,35,0,0,14
	.word	69923
	.byte	20
	.byte	'Ifx_SRC_GQSPI',0,11,163,4,3
	.word	69959
	.byte	18,4
	.word	67242
	.byte	19,0,0,14
	.word	69987
	.byte	10
	.byte	'_Ifx_SRC_GSCR',0,11,166,4,25,4,13
	.byte	'SCR',0
	.word	69996
	.byte	4,2,35,0,0,14
	.word	70001
	.byte	20
	.byte	'Ifx_SRC_GSCR',0,11,169,4,3
	.word	70035
	.byte	14
	.word	67300
	.byte	10
	.byte	'_Ifx_SRC_GSCU',0,11,172,4,25,20,13
	.byte	'SCU',0
	.word	70062
	.byte	20,2,35,0,0,14
	.word	70067
	.byte	20
	.byte	'Ifx_SRC_GSCU',0,11,175,4,3
	.word	70101
	.byte	18,24
	.word	67381
	.byte	19,0,0,14
	.word	70128
	.byte	10
	.byte	'_Ifx_SRC_GSENT',0,11,178,4,25,24,13
	.byte	'SENT',0
	.word	70137
	.byte	24,2,35,0,0,14
	.word	70142
	.byte	20
	.byte	'Ifx_SRC_GSENT',0,11,181,4,3
	.word	70178
	.byte	18,12
	.word	67441
	.byte	19,0,0,14
	.word	70206
	.byte	10
	.byte	'_Ifx_SRC_GSMU',0,11,184,4,25,12,13
	.byte	'SMU',0
	.word	70215
	.byte	12,2,35,0,0,14
	.word	70220
	.byte	20
	.byte	'Ifx_SRC_GSMU',0,11,187,4,3
	.word	70254
	.byte	18,16
	.word	67499
	.byte	19,1,0,14
	.word	70281
	.byte	10
	.byte	'_Ifx_SRC_GSTM',0,11,190,4,25,16,13
	.byte	'STM',0
	.word	70290
	.byte	16,2,35,0,0,14
	.word	70295
	.byte	20
	.byte	'Ifx_SRC_GSTM',0,11,193,4,3
	.word	70329
	.byte	18,64
	.word	67675
	.byte	19,3,0,14
	.word	70356
	.byte	18,224,1
	.word	620
	.byte	19,223,1,0,18,32
	.word	67571
	.byte	19,1,0,14
	.word	70381
	.byte	10
	.byte	'_Ifx_SRC_GVADC',0,11,196,4,25,192,2,13
	.byte	'G',0
	.word	70365
	.byte	64,2,35,0,13
	.byte	'reserved_40',0
	.word	70370
	.byte	224,1,2,35,64,13
	.byte	'CG',0
	.word	70390
	.byte	32,3,35,160,2,0,14
	.word	70395
	.byte	20
	.byte	'Ifx_SRC_GVADC',0,11,201,4,3
	.word	70464
	.byte	14
	.word	67777
	.byte	10
	.byte	'_Ifx_SRC_GXBAR',0,11,204,4,25,4,13
	.byte	'XBAR',0
	.word	70492
	.byte	4,2,35,0,0,14
	.word	70497
	.byte	20
	.byte	'Ifx_SRC_GXBAR',0,11,207,4,3
	.word	70533
	.byte	15,5,144,1,9,1,16
	.byte	'IfxCpu_CounterMode_normal',0,0,16
	.byte	'IfxCpu_CounterMode_task',0,1,0,20
	.byte	'IfxCpu_CounterMode',0,5,148,1,3
	.word	70561
	.byte	36,5,160,1,9,6,13
	.byte	'counter',0
	.word	1680
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	620
	.byte	1,2,35,4,0,20
	.byte	'IfxCpu_Counter',0,5,164,1,3
	.word	70650
	.byte	36,5,172,1,9,32,13
	.byte	'instruction',0
	.word	70650
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	70650
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	70650
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	70650
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	70650
	.byte	6,2,35,24,0,20
	.byte	'IfxCpu_Perf',0,5,179,1,3
	.word	70716
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,23,45,16,4,11
	.byte	'EN0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	620
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	620
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	620
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	620
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	620
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	620
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	620
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,23,79,3
	.word	70834
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,23,82,16,4,11
	.byte	'reserved_0',0,4
	.word	445
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,23,85,3
	.word	71395
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,23,88,16,4,11
	.byte	'SEL',0,1
	.word	620
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	620
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	445
	.byte	22,0,2,35,0,0,20
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,23,95,3
	.word	71476
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,23,98,16,4,11
	.byte	'VLD0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'VLD1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'VLD2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'VLD3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'VLD4',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'VLD5',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'VLD6',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'VLD7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'VLD8',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'VLD9',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	445
	.byte	22,0,2,35,0,0,20
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,23,111,3
	.word	71629
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,23,114,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	445
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	620
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,23,121,3
	.word	71877
	.byte	10
	.byte	'_Ifx_FLASH_COMM0_Bits',0,23,124,16,4,11
	.byte	'STATUS',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	445
	.byte	24,0,2,35,0,0,20
	.byte	'Ifx_FLASH_COMM0_Bits',0,23,128,1,3
	.word	72023
	.byte	10
	.byte	'_Ifx_FLASH_COMM1_Bits',0,23,131,1,16,4,11
	.byte	'STATUS',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,20
	.byte	'Ifx_FLASH_COMM1_Bits',0,23,136,1,3
	.word	72121
	.byte	10
	.byte	'_Ifx_FLASH_COMM2_Bits',0,23,139,1,16,4,11
	.byte	'STATUS',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,20
	.byte	'Ifx_FLASH_COMM2_Bits',0,23,144,1,3
	.word	72237
	.byte	10
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,23,147,1,16,4,11
	.byte	'RCODE',0,4
	.word	445
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	637
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_FLASH_ECCRD_Bits',0,23,153,1,3
	.word	72353
	.byte	10
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,23,156,1,16,4,11
	.byte	'RCODE',0,4
	.word	445
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	637
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_FLASH_ECCRP_Bits',0,23,162,1,3
	.word	72493
	.byte	10
	.byte	'_Ifx_FLASH_ECCW_Bits',0,23,165,1,16,4,11
	.byte	'WCODE',0,4
	.word	445
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	637
	.byte	8,2,2,35,2,11
	.byte	'DECENCDIS',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'PECENCDIS',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_FLASH_ECCW_Bits',0,23,171,1,3
	.word	72633
	.byte	10
	.byte	'_Ifx_FLASH_FCON_Bits',0,23,174,1,16,4,11
	.byte	'WSPFLASH',0,1
	.word	620
	.byte	4,4,2,35,0,11
	.byte	'WSECPF',0,1
	.word	620
	.byte	2,2,2,35,0,11
	.byte	'WSDFLASH',0,2
	.word	637
	.byte	6,4,2,35,0,11
	.byte	'WSECDF',0,1
	.word	620
	.byte	3,1,2,35,1,11
	.byte	'IDLE',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'ESLDIS',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'SLEEP',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'NSAFECC',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'STALL',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'RES21',0,1
	.word	620
	.byte	2,2,2,35,2,11
	.byte	'RES23',0,1
	.word	620
	.byte	2,0,2,35,2,11
	.byte	'VOPERM',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'SQERM',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'PROERM',0,1
	.word	620
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	620
	.byte	3,2,2,35,3,11
	.byte	'PR5V',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'EOBM',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_FLASH_FCON_Bits',0,23,193,1,3
	.word	72772
	.byte	10
	.byte	'_Ifx_FLASH_FPRO_Bits',0,23,196,1,16,4,11
	.byte	'PROINP',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'PRODISP',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'PROIND',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'PRODISD',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'PROINHSMCOTP',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'PROINOTP',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'RES7',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'PROINDBG',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'PRODISDBG',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'PROINHSM',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	620
	.byte	5,0,2,35,1,11
	.byte	'DCFP',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'DDFP',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'DDFPX',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'DDFD',0,1
	.word	620
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	620
	.byte	1,2,2,35,2,11
	.byte	'ENPE',0,1
	.word	620
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	620
	.byte	8,0,2,35,3,0,20
	.byte	'Ifx_FLASH_FPRO_Bits',0,23,218,1,3
	.word	73134
	.byte	10
	.byte	'_Ifx_FLASH_FSR_Bits',0,23,221,1,16,4,11
	.byte	'FABUSY',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'D0BUSY',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'RES1',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'P0BUSY',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'P1BUSY',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'RES6',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'PROG',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'ERASE',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'PFPAGE',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'DFPAGE',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'OPER',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'SQER',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'PROER',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'PFSBER',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'PFDBER',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'PFMBER',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'RES17',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'DFSBER',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'DFDBER',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'DFTBER',0,1
	.word	620
	.byte	1,3,2,35,2,11
	.byte	'DFMBER',0,1
	.word	620
	.byte	1,2,2,35,2,11
	.byte	'SRIADDERR',0,1
	.word	620
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	637
	.byte	2,7,2,35,2,11
	.byte	'PVER',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'EVER',0,1
	.word	620
	.byte	1,5,2,35,3,11
	.byte	'SPND',0,1
	.word	620
	.byte	1,4,2,35,3,11
	.byte	'SLM',0,1
	.word	620
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	620
	.byte	1,2,2,35,3,11
	.byte	'ORIER',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_FLASH_FSR_Bits',0,23,254,1,3
	.word	73575
	.byte	10
	.byte	'_Ifx_FLASH_ID_Bits',0,23,129,2,16,4,11
	.byte	'MODREV',0,1
	.word	620
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	620
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	637
	.byte	16,0,2,35,2,0,20
	.byte	'Ifx_FLASH_ID_Bits',0,23,134,2,3
	.word	74181
	.byte	10
	.byte	'_Ifx_FLASH_MARD_Bits',0,23,137,2,16,4,11
	.byte	'HMARGIN',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'SELD0',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'SPND',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'SPNDERR',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	637
	.byte	10,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,20
	.byte	'Ifx_FLASH_MARD_Bits',0,23,147,2,3
	.word	74292
	.byte	10
	.byte	'_Ifx_FLASH_MARP_Bits',0,23,150,2,16,4,11
	.byte	'SELP0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'SELP1',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'RES2',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'RES3',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	637
	.byte	11,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,20
	.byte	'Ifx_FLASH_MARP_Bits',0,23,159,2,3
	.word	74506
	.byte	10
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,23,162,2,16,4,11
	.byte	'L',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'NSAFECC',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'RAMIN',0,1
	.word	620
	.byte	2,4,2,35,0,11
	.byte	'RAMINSEL',0,1
	.word	620
	.byte	4,0,2,35,0,11
	.byte	'OSCCFG',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'MODE',0,1
	.word	620
	.byte	2,5,2,35,1,11
	.byte	'APREN',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'CAP0EN',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'CAP1EN',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'CAP2EN',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'CAP3EN',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'ESR0CNT',0,2
	.word	637
	.byte	12,4,2,35,2,11
	.byte	'RES29',0,1
	.word	620
	.byte	2,2,2,35,3,11
	.byte	'RES30',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_FLASH_PROCOND_Bits',0,23,179,2,3
	.word	74693
	.byte	10
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,23,182,2,16,4,11
	.byte	'OCDSDIS',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'EDM',0,1
	.word	620
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	445
	.byte	28,0,2,35,0,0,20
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,23,188,2,3
	.word	75017
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,23,191,2,16,4,11
	.byte	'HSMDBGDIS',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'TSTIFLCK',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'HSMTSTDIS',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'RES15',0,2
	.word	637
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	637
	.byte	16,0,2,35,2,0,20
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,23,199,2,3
	.word	75160
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,23,202,2,16,4,11
	.byte	'HSMBOOTEN',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'SSWWAIT',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'HSMDX',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'HSM6X',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'HSM16X',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'HSM17X',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'HSMENPINS',0,2
	.word	637
	.byte	2,7,2,35,0,11
	.byte	'HSMENRES',0,1
	.word	620
	.byte	2,5,2,35,1,11
	.byte	'DESTDBG',0,1
	.word	620
	.byte	2,3,2,35,1,11
	.byte	'BLKFLAN',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	620
	.byte	2,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	637
	.byte	14,0,2,35,2,0,20
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,23,219,2,3
	.word	75349
	.byte	10
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,23,222,2,16,4,11
	.byte	'S0ROM',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'S1ROM',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'S2ROM',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'S3ROM',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'S4ROM',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'S5ROM',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'S7ROM',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'S8ROM',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'S9ROM',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'S10ROM',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'S11ROM',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'S12ROM',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'S13ROM',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'S14ROM',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'S15ROM',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'S18ROM',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'S19ROM',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'S20ROM',0,1
	.word	620
	.byte	1,3,2,35,2,11
	.byte	'S21ROM',0,1
	.word	620
	.byte	1,2,2,35,2,11
	.byte	'S22ROM',0,1
	.word	620
	.byte	1,1,2,35,2,11
	.byte	'S23ROM',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'S24ROM',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'S25ROM',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'S26ROM',0,1
	.word	620
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	620
	.byte	2,3,2,35,3,11
	.byte	'BML',0,1
	.word	620
	.byte	2,1,2,35,3,11
	.byte	'TP',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,23,254,2,3
	.word	75712
	.byte	10
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,23,129,3,16,4,11
	.byte	'S0L',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'S1L',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'S2L',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'S3L',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'S4L',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'S5L',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'S6L',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'S7L',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'S8L',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'S9L',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'S10L',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'S11L',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'S12L',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'S13L',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'S14L',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'S15L',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'S16L',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'S17L',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'S18L',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'S19L',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'S20L',0,1
	.word	620
	.byte	1,3,2,35,2,11
	.byte	'S21L',0,1
	.word	620
	.byte	1,2,2,35,2,11
	.byte	'S22L',0,1
	.word	620
	.byte	1,1,2,35,2,11
	.byte	'S23L',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'S24L',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'S25L',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'S26L',0,1
	.word	620
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	620
	.byte	4,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_FLASH_PROCONP_Bits',0,23,160,3,3
	.word	76307
	.byte	10
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,23,163,3,16,4,11
	.byte	'S0WOP',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'S1WOP',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'S2WOP',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'S3WOP',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'S4WOP',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'S5WOP',0,1
	.word	620
	.byte	1,2,2,35,0,11
	.byte	'S6WOP',0,1
	.word	620
	.byte	1,1,2,35,0,11
	.byte	'S7WOP',0,1
	.word	620
	.byte	1,0,2,35,0,11
	.byte	'S8WOP',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'S9WOP',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'S10WOP',0,1
	.word	620
	.byte	1,5,2,35,1,11
	.byte	'S11WOP',0,1
	.word	620
	.byte	1,4,2,35,1,11
	.byte	'S12WOP',0,1
	.word	620
	.byte	1,3,2,35,1,11
	.byte	'S13WOP',0,1
	.word	620
	.byte	1,2,2,35,1,11
	.byte	'S14WOP',0,1
	.word	620
	.byte	1,1,2,35,1,11
	.byte	'S15WOP',0,1
	.word	620
	.byte	1,0,2,35,1,11
	.byte	'S16WOP',0,1
	.word	620
	.byte	1,7,2,35,2,11
	.byte	'S17WOP',0,1
	.word	620
	.byte	1,6,2,35,2,11
	.byte	'S18WOP',0,1
	.word	620
	.byte	1,5,2,35,2,11
	.byte	'S19WOP',0,1
	.word	620
	.byte	1,4,2,35,2,11
	.byte	'S20WOP',0,1
	.word	620
	.byte	1,3,2,35,2,11
	.byte	'S21WOP',0,1
	.word	620
	.byte	1,2,2,35,2,11
	.byte	'S22WOP',0,1
	.word	620
	.byte	1,1,2,35,2,11
	.byte	'S23WOP',0,1
	.word	620
	.byte	1,0,2,35,2,11
	.byte	'S24WOP',0,1
	.word	620
	.byte	1,7,2,35,3,11
	.byte	'S25WOP',0,1
	.word	620
	.byte	1,6,2,35,3,11
	.byte	'S26WOP',0,1
	.word	620
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	620
	.byte	4,1,2,35,3,11
	.byte	'DATM',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,23,194,3,3
	.word	76831
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,23,197,3,16,4,11
	.byte	'TAG',0,1
	.word	620
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	445
	.byte	26,0,2,35,0,0,20
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,23,201,3,3
	.word	77413
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,23,204,3,16,4,11
	.byte	'TAG',0,1
	.word	620
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	445
	.byte	26,0,2,35,0,0,20
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,23,208,3,3
	.word	77515
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,23,211,3,16,4,11
	.byte	'TAG',0,1
	.word	620
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	445
	.byte	26,0,2,35,0,0,20
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,23,215,3,3
	.word	77617
	.byte	10
	.byte	'_Ifx_FLASH_RRAD_Bits',0,23,218,3,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	3,5,2,35,0,11
	.byte	'ADD',0,4
	.word	445
	.byte	29,0,2,35,0,0,20
	.byte	'Ifx_FLASH_RRAD_Bits',0,23,222,3,3
	.word	77719
	.byte	10
	.byte	'_Ifx_FLASH_RRCT_Bits',0,23,225,3,16,4,11
	.byte	'STRT',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'STP',0,1
	.word	620
	.byte	1,6,2,35,0,11
	.byte	'BUSY',0,1
	.word	620
	.byte	1,5,2,35,0,11
	.byte	'DONE',0,1
	.word	620
	.byte	1,4,2,35,0,11
	.byte	'ERR',0,1
	.word	620
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	620
	.byte	3,0,2,35,0,11
	.byte	'EOBM',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	620
	.byte	7,0,2,35,1,11
	.byte	'CNT',0,2
	.word	637
	.byte	16,0,2,35,2,0,20
	.byte	'Ifx_FLASH_RRCT_Bits',0,23,236,3,3
	.word	77813
	.byte	10
	.byte	'_Ifx_FLASH_RRD0_Bits',0,23,239,3,16,4,11
	.byte	'DATA',0,4
	.word	445
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_FLASH_RRD0_Bits',0,23,242,3,3
	.word	78023
	.byte	10
	.byte	'_Ifx_FLASH_RRD1_Bits',0,23,245,3,16,4,11
	.byte	'DATA',0,4
	.word	445
	.byte	32,0,2,35,0,0,20
	.byte	'Ifx_FLASH_RRD1_Bits',0,23,248,3,3
	.word	78096
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,23,251,3,16,4,11
	.byte	'SEL',0,1
	.word	620
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	620
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	620
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	620
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	445
	.byte	22,0,2,35,0,0,20
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,23,130,4,3
	.word	78169
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,23,133,4,16,4,11
	.byte	'VLD0',0,1
	.word	620
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	445
	.byte	31,0,2,35,0,0,20
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,23,137,4,3
	.word	78324
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,23,140,4,16,4,11
	.byte	'reserved_0',0,1
	.word	620
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	445
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	620
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	620
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	620
	.byte	1,0,2,35,3,0,20
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,23,147,4,3
	.word	78429
	.byte	12,23,155,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70834
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_ACCEN0',0,23,160,4,3
	.word	78577
	.byte	12,23,163,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71395
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_ACCEN1',0,23,168,4,3
	.word	78643
	.byte	12,23,171,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71476
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_CBAB_CFG',0,23,176,4,3
	.word	78709
	.byte	12,23,179,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71629
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_CBAB_STAT',0,23,184,4,3
	.word	78777
	.byte	12,23,187,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71877
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_CBAB_TOP',0,23,192,4,3
	.word	78846
	.byte	12,23,195,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72023
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_COMM0',0,23,200,4,3
	.word	78914
	.byte	12,23,203,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72121
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_COMM1',0,23,208,4,3
	.word	78979
	.byte	12,23,211,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72237
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_COMM2',0,23,216,4,3
	.word	79044
	.byte	12,23,219,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72353
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_ECCRD',0,23,224,4,3
	.word	79109
	.byte	12,23,227,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72493
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_ECCRP',0,23,232,4,3
	.word	79174
	.byte	12,23,235,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72633
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_ECCW',0,23,240,4,3
	.word	79239
	.byte	12,23,243,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72772
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_FCON',0,23,248,4,3
	.word	79303
	.byte	12,23,251,4,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73134
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_FPRO',0,23,128,5,3
	.word	79367
	.byte	12,23,131,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73575
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_FSR',0,23,136,5,3
	.word	79431
	.byte	12,23,139,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74181
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_ID',0,23,144,5,3
	.word	79494
	.byte	12,23,147,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74292
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_MARD',0,23,152,5,3
	.word	79556
	.byte	12,23,155,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74506
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_MARP',0,23,160,5,3
	.word	79620
	.byte	12,23,163,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74693
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_PROCOND',0,23,168,5,3
	.word	79684
	.byte	12,23,171,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75017
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_PROCONDBG',0,23,176,5,3
	.word	79751
	.byte	12,23,179,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75160
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_PROCONHSM',0,23,184,5,3
	.word	79820
	.byte	12,23,187,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75349
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,23,192,5,3
	.word	79889
	.byte	12,23,195,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75712
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_PROCONOTP',0,23,200,5,3
	.word	79962
	.byte	12,23,203,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76307
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_PROCONP',0,23,208,5,3
	.word	80031
	.byte	12,23,211,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76831
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_PROCONWOP',0,23,216,5,3
	.word	80098
	.byte	12,23,219,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77413
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_RDB_CFG0',0,23,224,5,3
	.word	80167
	.byte	12,23,227,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77515
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_RDB_CFG1',0,23,232,5,3
	.word	80235
	.byte	12,23,235,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77617
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_RDB_CFG2',0,23,240,5,3
	.word	80303
	.byte	12,23,243,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77719
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_RRAD',0,23,248,5,3
	.word	80371
	.byte	12,23,251,5,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77813
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_RRCT',0,23,128,6,3
	.word	80435
	.byte	12,23,131,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78023
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_RRD0',0,23,136,6,3
	.word	80499
	.byte	12,23,139,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78096
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_RRD1',0,23,144,6,3
	.word	80563
	.byte	12,23,147,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78169
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_UBAB_CFG',0,23,152,6,3
	.word	80627
	.byte	12,23,155,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78324
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_UBAB_STAT',0,23,160,6,3
	.word	80695
	.byte	12,23,163,6,9,4,13
	.byte	'U',0
	.word	445
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	461
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78429
	.byte	4,2,35,0,0,20
	.byte	'Ifx_FLASH_UBAB_TOP',0,23,168,6,3
	.word	80764
	.byte	10
	.byte	'_Ifx_FLASH_CBAB',0,23,179,6,25,12,13
	.byte	'CFG',0
	.word	78709
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	78777
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	78846
	.byte	4,2,35,8,0,14
	.word	80832
	.byte	20
	.byte	'Ifx_FLASH_CBAB',0,23,184,6,3
	.word	80895
	.byte	10
	.byte	'_Ifx_FLASH_RDB',0,23,187,6,25,12,13
	.byte	'CFG0',0
	.word	80167
	.byte	4,2,35,0,13
	.byte	'CFG1',0
	.word	80235
	.byte	4,2,35,4,13
	.byte	'CFG2',0
	.word	80303
	.byte	4,2,35,8,0,14
	.word	80924
	.byte	20
	.byte	'Ifx_FLASH_RDB',0,23,192,6,3
	.word	80988
	.byte	10
	.byte	'_Ifx_FLASH_UBAB',0,23,195,6,25,12,13
	.byte	'CFG',0
	.word	80627
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	80695
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	80764
	.byte	4,2,35,8,0,14
	.word	81016
	.byte	20
	.byte	'Ifx_FLASH_UBAB',0,23,200,6,3
	.word	81079
	.byte	20
	.byte	'Ifx_P_ACCEN0_Bits',0,8,79,3
	.word	8489
	.byte	20
	.byte	'Ifx_P_ACCEN1_Bits',0,8,85,3
	.word	8402
	.byte	20
	.byte	'Ifx_P_ESR_Bits',0,8,107,3
	.word	4745
	.byte	20
	.byte	'Ifx_P_ID_Bits',0,8,115,3
	.word	2798
	.byte	20
	.byte	'Ifx_P_IN_Bits',0,8,137,1,3
	.word	3793
	.byte	20
	.byte	'Ifx_P_IOCR0_Bits',0,8,150,1,3
	.word	2926
	.byte	20
	.byte	'Ifx_P_IOCR12_Bits',0,8,163,1,3
	.word	3573
	.byte	20
	.byte	'Ifx_P_IOCR4_Bits',0,8,176,1,3
	.word	3141
	.byte	20
	.byte	'Ifx_P_IOCR8_Bits',0,8,189,1,3
	.word	3356
	.byte	20
	.byte	'Ifx_P_LPCR0_Bits',0,8,197,1,3
	.word	7761
	.byte	20
	.byte	'Ifx_P_LPCR1_Bits',0,8,205,1,3
	.word	7885
	.byte	20
	.byte	'Ifx_P_LPCR1_P21_Bits',0,8,215,1,3
	.word	7969
	.byte	20
	.byte	'Ifx_P_LPCR2_Bits',0,8,229,1,3
	.word	8149
	.byte	20
	.byte	'Ifx_P_OMCR0_Bits',0,8,240,1,3
	.word	6400
	.byte	20
	.byte	'Ifx_P_OMCR12_Bits',0,8,250,1,3
	.word	6924
	.byte	20
	.byte	'Ifx_P_OMCR4_Bits',0,8,133,2,3
	.word	6574
	.byte	20
	.byte	'Ifx_P_OMCR8_Bits',0,8,144,2,3
	.word	6748
	.byte	20
	.byte	'Ifx_P_OMCR_Bits',0,8,166,2,3
	.word	7413
	.byte	20
	.byte	'Ifx_P_OMR_Bits',0,8,203,2,3
	.word	2227
	.byte	20
	.byte	'Ifx_P_OMSR0_Bits',0,8,213,2,3
	.word	5737
	.byte	20
	.byte	'Ifx_P_OMSR12_Bits',0,8,224,2,3
	.word	6225
	.byte	20
	.byte	'Ifx_P_OMSR4_Bits',0,8,235,2,3
	.word	5884
	.byte	20
	.byte	'Ifx_P_OMSR8_Bits',0,8,246,2,3
	.word	6053
	.byte	20
	.byte	'Ifx_P_OMSR_Bits',0,8,140,3,3
	.word	7080
	.byte	20
	.byte	'Ifx_P_OUT_Bits',0,8,162,3,3
	.word	1911
	.byte	20
	.byte	'Ifx_P_PCSR_Bits',0,8,180,3,3
	.word	5451
	.byte	20
	.byte	'Ifx_P_PDISC_Bits',0,8,202,3,3
	.word	5085
	.byte	20
	.byte	'Ifx_P_PDR0_Bits',0,8,223,3,3
	.word	4116
	.byte	20
	.byte	'Ifx_P_PDR1_Bits',0,8,244,3,3
	.word	4420
	.byte	20
	.byte	'Ifx_P_ACCEN0',0,8,129,4,3
	.word	9016
	.byte	20
	.byte	'Ifx_P_ACCEN1',0,8,137,4,3
	.word	8449
	.byte	20
	.byte	'Ifx_P_ESR',0,8,145,4,3
	.word	5036
	.byte	20
	.byte	'Ifx_P_ID',0,8,153,4,3
	.word	2877
	.byte	20
	.byte	'Ifx_P_IN',0,8,161,4,3
	.word	4067
	.byte	20
	.byte	'Ifx_P_IOCR0',0,8,169,4,3
	.word	3101
	.byte	20
	.byte	'Ifx_P_IOCR12',0,8,177,4,3
	.word	3753
	.byte	20
	.byte	'Ifx_P_IOCR4',0,8,185,4,3
	.word	3316
	.byte	20
	.byte	'Ifx_P_IOCR8',0,8,193,4,3
	.word	3533
	.byte	20
	.byte	'Ifx_P_LPCR0',0,8,201,4,3
	.word	7845
	.byte	20
	.byte	'Ifx_P_LPCR1',0,8,210,4,3
	.word	8094
	.byte	20
	.byte	'Ifx_P_LPCR2',0,8,218,4,3
	.word	8353
	.byte	20
	.byte	'Ifx_P_OMCR',0,8,226,4,3
	.word	7721
	.byte	20
	.byte	'Ifx_P_OMCR0',0,8,234,4,3
	.word	6534
	.byte	20
	.byte	'Ifx_P_OMCR12',0,8,242,4,3
	.word	7040
	.byte	20
	.byte	'Ifx_P_OMCR4',0,8,250,4,3
	.word	6708
	.byte	20
	.byte	'Ifx_P_OMCR8',0,8,130,5,3
	.word	6884
	.byte	20
	.byte	'Ifx_P_OMR',0,8,138,5,3
	.word	2758
	.byte	20
	.byte	'Ifx_P_OMSR',0,8,146,5,3
	.word	7373
	.byte	20
	.byte	'Ifx_P_OMSR0',0,8,154,5,3
	.word	5844
	.byte	20
	.byte	'Ifx_P_OMSR12',0,8,162,5,3
	.word	6360
	.byte	20
	.byte	'Ifx_P_OMSR4',0,8,170,5,3
	.word	6013
	.byte	20
	.byte	'Ifx_P_OMSR8',0,8,178,5,3
	.word	6185
	.byte	20
	.byte	'Ifx_P_OUT',0,8,186,5,3
	.word	2187
	.byte	20
	.byte	'Ifx_P_PCSR',0,8,194,5,3
	.word	5697
	.byte	20
	.byte	'Ifx_P_PDISC',0,8,202,5,3
	.word	5411
	.byte	20
	.byte	'Ifx_P_PDR0',0,8,210,5,3
	.word	4380
	.byte	20
	.byte	'Ifx_P_PDR1',0,8,218,5,3
	.word	4696
	.byte	14
	.word	9056
	.byte	20
	.byte	'Ifx_P',0,8,139,6,3
	.word	82426
	.byte	15,7,83,9,1,16
	.byte	'IfxPort_InputMode_undefined',0,127,16
	.byte	'IfxPort_InputMode_noPullDevice',0,0,16
	.byte	'IfxPort_InputMode_pullDown',0,8,16
	.byte	'IfxPort_InputMode_pullUp',0,16,0,20
	.byte	'IfxPort_InputMode',0,7,89,3
	.word	82446
	.byte	15,7,120,9,1,16
	.byte	'IfxPort_OutputIdx_general',0,128,1,16
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,16
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,16
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,16
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,16
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,16
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,16
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,20
	.byte	'IfxPort_OutputIdx',0,7,130,1,3
	.word	82597
	.byte	20
	.byte	'IfxPort_OutputMode',0,7,138,1,3
	.word	18683
	.byte	20
	.byte	'IfxPort_PadDriver',0,7,158,1,3
	.word	18753
	.byte	20
	.byte	'IfxPort_State',0,7,178,1,3
	.word	9669
	.byte	36,7,190,1,9,8,13
	.byte	'port',0
	.word	9664
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	620
	.byte	1,2,35,4,0,20
	.byte	'IfxPort_Pin',0,7,194,1,3
	.word	82919
	.byte	20
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,9,148,1,16
	.word	184
	.byte	36,9,212,5,9,8,13
	.byte	'value',0
	.word	1680
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1680
	.byte	4,2,35,4,0,20
	.byte	'IfxScuCcu_CcuconRegConfig',0,9,216,5,3
	.word	83019
	.byte	36,9,221,5,9,8,13
	.byte	'pDivider',0
	.word	620
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	620
	.byte	1,2,35,1,13
	.byte	'k2Initial',0
	.word	620
	.byte	1,2,35,2,13
	.byte	'waitTime',0
	.word	241
	.byte	4,2,35,4,0,20
	.byte	'IfxScuCcu_InitialStepConfig',0,9,227,5,3
	.word	83090
	.byte	36,9,231,5,9,12,13
	.byte	'k2Step',0
	.word	620
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	241
	.byte	4,2,35,2,13
	.byte	'hookFunction',0
	.word	82979
	.byte	4,2,35,8,0,20
	.byte	'IfxScuCcu_PllStepsConfig',0,9,236,5,3
	.word	83207
	.byte	3
	.word	181
	.byte	36,9,244,5,9,48,13
	.byte	'ccucon0',0
	.word	83019
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	83019
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	83019
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	83019
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	83019
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	83019
	.byte	8,2,35,40,0,20
	.byte	'IfxScuCcu_ClockDistributionConfig',0,9,252,5,3
	.word	83309
	.byte	36,9,128,6,9,8,13
	.byte	'value',0
	.word	1680
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1680
	.byte	4,2,35,4,0,20
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,9,132,6,3
	.word	83461
	.byte	3
	.word	83207
	.byte	36,9,137,6,9,16,13
	.byte	'numOfPllDividerSteps',0
	.word	620
	.byte	1,2,35,0,13
	.byte	'pllDividerStep',0
	.word	83537
	.byte	4,2,35,4,13
	.byte	'pllInitialStep',0
	.word	83090
	.byte	8,2,35,8,0,20
	.byte	'IfxScuCcu_SysPllConfig',0,9,142,6,3
	.word	83542
	.byte	20
	.byte	'IfxSrc_Tos',0,12,74,3
	.word	10309
	.byte	20
	.byte	'IfxStm_Comparator',0,13,155,1,3
	.word	14011
	.byte	20
	.byte	'IfxStm_ComparatorInterrupt',0,13,163,1,3
	.word	18445
	.byte	20
	.byte	'IfxStm_ComparatorOffset',0,13,201,1,3
	.word	16531
	.byte	20
	.byte	'IfxStm_ComparatorSize',0,13,239,1,3
	.word	17456
	.byte	15,13,244,1,9,1,16
	.byte	'IfxStm_SleepMode_enable',0,0,16
	.byte	'IfxStm_SleepMode_disable',0,1,0,20
	.byte	'IfxStm_SleepMode',0,13,248,1,3
	.word	83805
	.byte	15,13,252,1,9,1,16
	.byte	'IfxStm_SuspendMode_none',0,0,16
	.byte	'IfxStm_SuspendMode_hard',0,1,16
	.byte	'IfxStm_SuspendMode_soft',0,2,0,20
	.byte	'IfxStm_SuspendMode',0,13,129,2,3
	.word	83891
	.byte	20
	.byte	'IfxStdIf_Timer_CountDir',0,15,93,3
	.word	19349
	.byte	20
	.byte	'IfxStdIf_Timer',0,15,96,32
	.word	14902
	.byte	20
	.byte	'IfxStdIf_Timer_TrigConfig',0,15,144,2,3
	.word	19168
	.byte	20
	.byte	'IfxStdIf_Timer_Config',0,15,156,2,3
	.word	19451
	.byte	20
	.byte	'IfxStm_Timer_Base',0,17,136,1,3
	.word	19721
	.byte	20
	.byte	'IfxStm_Timer',0,17,151,1,3
	.word	19825
	.byte	20
	.byte	'IfxStm_Timer_Config',0,17,160,1,3
	.word	20091
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L50:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,4,1,58,15,59,15,57,15,11,15,0,0,16,40,0,3,8,28,13,0,0
	.byte	17,11,1,0,0,18,1,1,11,15,73,19,0,0,19,33,0,47,15,0,0,20,22,0,3,8,58,15,59,15,57,15,73,19,0,0,21,21,1,73
	.byte	19,54,15,39,12,0,0,22,5,0,73,19,0,0,23,21,1,54,15,39,12,0,0,24,38,0,73,19,0,0,25,46,1,3,8,54,15,39,12
	.byte	63,12,60,12,0,0,26,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,27,5,0,3,8,73,19,0,0,28,46,0,3,8,54,15,39
	.byte	12,63,12,60,12,0,0,29,46,1,49,19,0,0,30,5,0,49,19,0,0,31,29,1,49,19,0,0,32,11,0,49,19,0,0,33,46,0,3,8
	.byte	58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,34,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60
	.byte	12,0,0,35,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,36,19,1,58,15,59,15,57,15,11,15
	.byte	0,0,37,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,38,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L51:
	.word	.L278-.L277
.L277:
	.half	3
	.word	.L280-.L279
.L279:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,4,0,0
	.byte	'IfxPort.h',0,5,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,2,0,0
	.byte	'IfxSrc.h',0,6,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxSrc_cfg.h',0,4,0,0
	.byte	'IfxStm.h',0,7,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxStdIf_Timer.h',0,8,0,0
	.byte	'IfxStdIf.h',0,8,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.h',0,0,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'IfxScu_cfg.h',0,4,0,0
	.byte	'IfxFlash_regdef.h',0,3,0,0,0
.L280:
.L278:
	.sdecl	'.debug_info',debug,cluster('IfxStm_Timer_acknowledgeTimerIrq')
	.sect	'.debug_info'
.L52:
	.word	382
	.half	3
	.word	.L53
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L55,.L54
	.byte	2
	.word	.L48
	.byte	3
	.byte	'IfxStm_Timer_acknowledgeTimerIrq',0,1,56,9
	.word	.L127
	.byte	1,1,1
	.word	.L19,.L128,.L18
	.byte	4
	.byte	'driver',0,1,56,56
	.word	.L129,.L130
	.byte	5
	.word	.L19,.L128
	.byte	6
	.byte	'event',0,1,58,13
	.word	.L127,.L131
	.byte	7
	.word	.L132,.L133,.L134
	.byte	8
	.word	.L135,.L136
	.byte	8
	.word	.L137,.L138
	.byte	8
	.word	.L139,.L140
	.byte	9
	.word	.L141,.L142
	.byte	0,7
	.word	.L132,.L143,.L144
	.byte	8
	.word	.L135,.L136
	.byte	8
	.word	.L137,.L138
	.byte	8
	.word	.L139,.L140
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_Timer_acknowledgeTimerIrq')
	.sect	'.debug_abbrev'
.L53:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,85
	.byte	6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_Timer_acknowledgeTimerIrq')
	.sect	'.debug_line'
.L54:
	.word	.L282-.L281
.L281:
	.half	3
	.word	.L284-.L283
.L283:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0,0,0,0
	.byte	'IfxStm.h',0,1,0,0,0
.L284:
	.byte	5,9,7,0,5,2
	.word	.L19
	.byte	3,55,1,5,43,9
	.half	.L254-.L19
	.byte	3,3,1,5,56,9
	.half	.L253-.L254
	.byte	1,5,11,9
	.half	.L256-.L253
	.byte	1,5,5,9
	.half	.L258-.L256
	.byte	3,2,1,5,39,7,9
	.half	.L285-.L258
	.byte	3,2,1,5,52,9
	.half	.L286-.L285
	.byte	1,5,26,9
	.half	.L257-.L286
	.byte	3,2,1,5,53,9
	.half	.L133-.L257
	.byte	3,3,1,5,40,9
	.half	.L287-.L133
	.byte	1,5,14,9
	.half	.L134-.L287
	.byte	3,125,1,5,19,7,9
	.half	.L288-.L134
	.byte	3,2,1,5,52,9
	.half	.L289-.L288
	.byte	1,5,37,9
	.half	.L290-.L289
	.byte	1,4,2,5,13,9
	.half	.L143-.L290
	.byte	3,229,4,1,5,35,9
	.half	.L255-.L143
	.byte	1,4,1,5,59,9
	.half	.L144-.L255
	.byte	3,155,123,1,5,66,9
	.half	.L3-.L144
	.byte	3,5,1,5,5,9
	.half	.L2-.L3
	.byte	3,6,1,5,1,3,1,1,7,9
	.half	.L56-.L2
	.byte	0,1,1
.L282:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_Timer_acknowledgeTimerIrq')
	.sect	'.debug_ranges'
.L55:
	.word	-1,.L19,0,.L56-.L19,0,0
.L142:
	.word	-1,.L19,.L133-.L19,.L134-.L19,.L143-.L19,.L144-.L19,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_Timer_getFrequency')
	.sect	'.debug_info'
.L57:
	.word	265
	.half	3
	.word	.L58
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L60,.L59
	.byte	2
	.word	.L48
	.byte	3
	.byte	'IfxStm_Timer_getFrequency',0,1,82,9
	.word	.L145
	.byte	1,1,1
	.word	.L21,.L146,.L20
	.byte	4
	.byte	'driver',0,1,82,49
	.word	.L129,.L147
	.byte	5
	.word	.L21,.L146
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_Timer_getFrequency')
	.sect	'.debug_abbrev'
.L58:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_Timer_getFrequency')
	.sect	'.debug_line'
.L59:
	.word	.L292-.L291
.L291:
	.half	3
	.word	.L294-.L293
.L293:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0,0
.L294:
	.byte	5,77,7,0,5,2
	.word	.L21
	.byte	3,211,0,1,5,53,9
	.half	.L295-.L21
	.byte	1,4,2,5,12,9
	.half	.L296-.L295
	.byte	3,228,2,1,4,1,9
	.half	.L297-.L296
	.byte	3,156,125,1,4,2,5,18,9
	.half	.L298-.L297
	.byte	3,228,2,1,4,1,5,16,9
	.half	.L299-.L298
	.byte	3,156,125,1,5,1,3,1,1,7,9
	.half	.L61-.L299
	.byte	0,1,1
.L292:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_Timer_getFrequency')
	.sect	'.debug_ranges'
.L60:
	.word	-1,.L21,0,.L61-.L21,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_Timer_getInputFrequency')
	.sect	'.debug_info'
.L62:
	.word	270
	.half	3
	.word	.L63
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L65,.L64
	.byte	2
	.word	.L48
	.byte	3
	.byte	'IfxStm_Timer_getInputFrequency',0,1,88,9
	.word	.L145
	.byte	1,1,1
	.word	.L23,.L148,.L22
	.byte	4
	.byte	'driver',0,1,88,54
	.word	.L129,.L149
	.byte	5
	.word	.L23,.L148
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_Timer_getInputFrequency')
	.sect	'.debug_abbrev'
.L63:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_Timer_getInputFrequency')
	.sect	'.debug_line'
.L64:
	.word	.L301-.L300
.L300:
	.half	3
	.word	.L303-.L302
.L302:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0,0,0,0,0
.L303:
	.byte	5,24,7,0,5,2
	.word	.L23
	.byte	3,217,0,1,5,1,9
	.half	.L304-.L23
	.byte	3,1,1,7,9
	.half	.L66-.L304
	.byte	0,1,1
.L301:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_Timer_getInputFrequency')
	.sect	'.debug_ranges'
.L65:
	.word	-1,.L23,0,.L66-.L23,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_Timer_getPeriod')
	.sect	'.debug_info'
.L67:
	.word	262
	.half	3
	.word	.L68
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L70,.L69
	.byte	2
	.word	.L48
	.byte	3
	.byte	'IfxStm_Timer_getPeriod',0,1,94,16
	.word	.L150
	.byte	1,1,1
	.word	.L25,.L151,.L24
	.byte	4
	.byte	'driver',0,1,94,53
	.word	.L129,.L152
	.byte	5
	.word	.L25,.L151
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_Timer_getPeriod')
	.sect	'.debug_abbrev'
.L68:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_Timer_getPeriod')
	.sect	'.debug_line'
.L69:
	.word	.L306-.L305
.L305:
	.half	3
	.word	.L308-.L307
.L307:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0,0,0,0,0
.L308:
	.byte	5,24,7,0,5,2
	.word	.L25
	.byte	3,223,0,1,5,1,9
	.half	.L309-.L25
	.byte	3,1,1,7,9
	.half	.L71-.L309
	.byte	0,1,1
.L306:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_Timer_getPeriod')
	.sect	'.debug_ranges'
.L70:
	.word	-1,.L25,0,.L71-.L25,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_Timer_getResolution')
	.sect	'.debug_info'
.L72:
	.word	266
	.half	3
	.word	.L73
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L75,.L74
	.byte	2
	.word	.L48
	.byte	3
	.byte	'IfxStm_Timer_getResolution',0,1,100,9
	.word	.L145
	.byte	1,1,1
	.word	.L27,.L153,.L26
	.byte	4
	.byte	'driver',0,1,100,50
	.word	.L129,.L154
	.byte	5
	.word	.L27,.L153
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_Timer_getResolution')
	.sect	'.debug_abbrev'
.L73:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_Timer_getResolution')
	.sect	'.debug_line'
.L74:
	.word	.L311-.L310
.L310:
	.half	3
	.word	.L313-.L312
.L312:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0,0,0,0,0
.L313:
	.byte	5,12,7,0,5,2
	.word	.L27
	.byte	3,229,0,1,5,30,1,5,16,9
	.half	.L314-.L27
	.byte	1,5,1,3,1,1,7,9
	.half	.L76-.L314
	.byte	0,1,1
.L311:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_Timer_getResolution')
	.sect	'.debug_ranges'
.L75:
	.word	-1,.L27,0,.L76-.L27,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_Timer_run')
	.sect	'.debug_info'
.L77:
	.word	473
	.half	3
	.word	.L78
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L80,.L79
	.byte	2
	.word	.L48
	.byte	3
	.byte	'IfxStm_Timer_run',0,1,106,6,1,1,1
	.word	.L29,.L155,.L28
	.byte	4
	.byte	'driver',0,1,106,37
	.word	.L129,.L156
	.byte	5
	.word	.L29,.L155
	.byte	6
	.word	.L157,.L158,.L159
	.byte	7
	.word	.L160,.L158,.L159
	.byte	6
	.word	.L161,.L158,.L162
	.byte	7
	.word	.L163,.L158,.L162
	.byte	8
	.byte	'reg',0,2,141,5,17
	.word	.L164,.L165
	.byte	0,0,0,0,6
	.word	.L166,.L167,.L168
	.byte	9
	.word	.L169,.L170
	.byte	7
	.word	.L171,.L167,.L168
	.byte	8
	.byte	'result',0,3,164,4,12
	.word	.L172,.L173
	.byte	0,0,6
	.word	.L174,.L168,.L10
	.byte	9
	.word	.L175,.L176
	.byte	10
	.word	.L177,.L168,.L10
	.byte	0,6
	.word	.L132,.L178,.L179
	.byte	9
	.word	.L135,.L180
	.byte	9
	.word	.L137,.L181
	.byte	9
	.word	.L139,.L182
	.byte	10
	.word	.L141,.L178,.L179
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_Timer_run')
	.sect	'.debug_abbrev'
.L78:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,11,1,49,16,17,1,18,1,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,5,0,49,16,2,6
	.byte	0,0,10,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_Timer_run')
	.sect	'.debug_line'
.L79:
	.word	.L316-.L315
.L315:
	.half	3
	.word	.L318-.L317
.L317:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0,0,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxStm.h',0,2,0,0,0
.L318:
	.byte	5,6,7,0,5,2
	.word	.L29
	.byte	3,233,0,1,4,2,5,19,9
	.half	.L158-.L29
	.byte	3,164,4,1,5,17,9
	.half	.L260-.L158
	.byte	3,1,1,5,21,9
	.half	.L261-.L260
	.byte	1,5,14,9
	.half	.L162-.L261
	.byte	3,8,1,5,10,9
	.half	.L319-.L162
	.byte	3,1,1,4,1,5,39,9
	.half	.L159-.L319
	.byte	3,216,123,1,4,3,5,24,9
	.half	.L167-.L159
	.byte	3,182,3,1,5,32,9
	.half	.L320-.L167
	.byte	3,1,1,4,2,5,5,9
	.half	.L168-.L320
	.byte	3,131,3,1,5,17,7,9
	.half	.L321-.L168
	.byte	3,2,1,4,1,5,63,9
	.half	.L10-.L321
	.byte	3,199,121,1,5,54,9
	.half	.L322-.L10
	.byte	1,5,96,9
	.half	.L259-.L322
	.byte	1,5,82,9
	.half	.L323-.L259
	.byte	1,5,29,1,5,32,9
	.half	.L178-.L323
	.byte	3,2,1,5,45,9
	.half	.L324-.L178
	.byte	1,4,3,5,13,9
	.half	.L325-.L324
	.byte	3,179,4,1,5,35,9
	.half	.L326-.L325
	.byte	1,4,1,5,44,9
	.half	.L179-.L326
	.byte	3,206,123,1,5,57,9
	.half	.L327-.L179
	.byte	1,5,1,9
	.half	.L81-.L327
	.byte	3,1,0,1,1
.L316:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_Timer_run')
	.sect	'.debug_ranges'
.L80:
	.word	-1,.L29,0,.L81-.L29,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_Timer_setFrequency')
	.sect	'.debug_info'
.L82:
	.word	287
	.half	3
	.word	.L83
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L85,.L84
	.byte	2
	.word	.L48
	.byte	3
	.byte	'IfxStm_Timer_setFrequency',0,1,122,9
	.word	.L127
	.byte	1,1,1
	.word	.L31,.L183,.L30
	.byte	4
	.byte	'driver',0,1,122,49
	.word	.L129,.L184
	.byte	4
	.byte	'frequency',0,1,122,65
	.word	.L145,.L185
	.byte	5
	.word	.L31,.L183
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_Timer_setFrequency')
	.sect	'.debug_abbrev'
.L83:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_Timer_setFrequency')
	.sect	'.debug_line'
.L84:
	.word	.L329-.L328
.L328:
	.half	3
	.word	.L331-.L330
.L330:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0,0
.L331:
	.byte	5,76,7,0,5,2
	.word	.L31
	.byte	3,251,0,1,5,80,9
	.half	.L332-.L31
	.byte	1,5,64,1,4,2,5,20,9
	.half	.L333-.L332
	.byte	3,199,2,1,4,1,5,1,9
	.half	.L86-.L333
	.byte	3,188,125,0,1,1
.L329:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_Timer_setFrequency')
	.sect	'.debug_ranges'
.L85:
	.word	-1,.L31,0,.L86-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_Timer_setPeriod')
	.sect	'.debug_info'
.L87:
	.word	284
	.half	3
	.word	.L88
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L90,.L89
	.byte	2
	.word	.L48
	.byte	3
	.byte	'IfxStm_Timer_setPeriod',0,1,130,1,9
	.word	.L127
	.byte	1,1,1
	.word	.L33,.L186,.L32
	.byte	4
	.byte	'driver',0,1,130,1,46
	.word	.L129,.L187
	.byte	4
	.byte	'period',0,1,130,1,69
	.word	.L150,.L188
	.byte	5
	.word	.L33,.L186
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_Timer_setPeriod')
	.sect	'.debug_abbrev'
.L88:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_Timer_setPeriod')
	.sect	'.debug_line'
.L89:
	.word	.L335-.L334
.L334:
	.half	3
	.word	.L337-.L336
.L336:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0,0,0,0,0
.L337:
	.byte	5,25,7,0,5,2
	.word	.L33
	.byte	3,131,1,1,5,12,9
	.half	.L338-.L33
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L91-.L338
	.byte	0,1,1
.L335:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_Timer_setPeriod')
	.sect	'.debug_ranges'
.L90:
	.word	-1,.L33,0,.L91-.L33,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_Timer_setSingleMode')
	.sect	'.debug_info'
.L92:
	.word	285
	.half	3
	.word	.L93
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L95,.L94
	.byte	2
	.word	.L48
	.byte	3
	.byte	'IfxStm_Timer_setSingleMode',0,1,138,1,6,1,1,1
	.word	.L35,.L189,.L34
	.byte	4
	.byte	'driver',0,1,138,1,47
	.word	.L129,.L190
	.byte	4
	.byte	'enabled',0,1,138,1,63
	.word	.L127,.L191
	.byte	5
	.word	.L35,.L189
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_Timer_setSingleMode')
	.sect	'.debug_abbrev'
.L93:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_Timer_setSingleMode')
	.sect	'.debug_line'
.L94:
	.word	.L340-.L339
.L339:
	.half	3
	.word	.L342-.L341
.L341:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0,0,0,0,0
.L342:
	.byte	5,29,7,0,5,2
	.word	.L35
	.byte	3,139,1,1,5,1,9
	.half	.L343-.L35
	.byte	3,1,1,7,9
	.half	.L96-.L343
	.byte	0,1,1
.L340:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_Timer_setSingleMode')
	.sect	'.debug_ranges'
.L95:
	.word	-1,.L35,0,.L96-.L35,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_Timer_stdIfTimerInit')
	.sect	'.debug_info'
.L97:
	.word	288
	.half	3
	.word	.L98
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L100,.L99
	.byte	2
	.word	.L48
	.byte	3
	.byte	'IfxStm_Timer_stdIfTimerInit',0,1,144,1,9
	.word	.L127
	.byte	1,1,1
	.word	.L37,.L192,.L36
	.byte	4
	.byte	'stdif',0,1,144,1,53
	.word	.L193,.L194
	.byte	4
	.byte	'driver',0,1,144,1,74
	.word	.L129,.L195
	.byte	5
	.word	.L37,.L192
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_Timer_stdIfTimerInit')
	.sect	'.debug_abbrev'
.L98:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_Timer_stdIfTimerInit')
	.sect	'.debug_line'
.L99:
	.word	.L345-.L344
.L344:
	.half	3
	.word	.L347-.L346
.L346:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0,0,0,0,0
.L347:
	.byte	5,9,7,0,5,2
	.word	.L37
	.byte	3,143,1,1,5,37,9
	.half	.L264-.L37
	.byte	3,2,1,5,35,9
	.half	.L263-.L264
	.byte	3,2,1,5,33,9
	.half	.L348-.L263
	.byte	1,5,35,9
	.half	.L349-.L348
	.byte	3,1,1,5,33,9
	.half	.L350-.L349
	.byte	1,5,35,9
	.half	.L351-.L350
	.byte	3,1,1,5,33,9
	.half	.L352-.L351
	.byte	1,5,35,9
	.half	.L353-.L352
	.byte	3,2,1,5,33,9
	.half	.L354-.L353
	.byte	1,5,35,9
	.half	.L355-.L354
	.byte	3,1,1,5,33,9
	.half	.L356-.L355
	.byte	1,5,32,9
	.half	.L357-.L356
	.byte	3,3,1,5,30,9
	.half	.L358-.L357
	.byte	1,5,32,9
	.half	.L359-.L358
	.byte	3,1,1,5,30,9
	.half	.L360-.L359
	.byte	1,5,32,9
	.half	.L361-.L360
	.byte	3,1,1,5,30,9
	.half	.L362-.L361
	.byte	1,5,32,9
	.half	.L363-.L362
	.byte	3,1,1,5,30,9
	.half	.L364-.L363
	.byte	1,5,32,9
	.half	.L365-.L364
	.byte	3,2,1,5,30,9
	.half	.L366-.L365
	.byte	1,5,32,9
	.half	.L367-.L366
	.byte	3,1,1,5,30,9
	.half	.L368-.L367
	.byte	1,5,12,9
	.half	.L369-.L368
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L101-.L369
	.byte	0,1,1
.L345:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_Timer_stdIfTimerInit')
	.sect	'.debug_ranges'
.L100:
	.word	-1,.L37,0,.L101-.L37,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_Timer_stop')
	.sect	'.debug_info'
.L102:
	.word	255
	.half	3
	.word	.L103
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L105,.L104
	.byte	2
	.word	.L48
	.byte	3
	.byte	'IfxStm_Timer_stop',0,1,169,1,6,1,1,1
	.word	.L39,.L196,.L38
	.byte	4
	.byte	'driver',0,1,169,1,38
	.word	.L129,.L197
	.byte	5
	.word	.L39,.L196
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_Timer_stop')
	.sect	'.debug_abbrev'
.L103:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_Timer_stop')
	.sect	'.debug_line'
.L104:
	.word	.L371-.L370
.L370:
	.half	3
	.word	.L373-.L372
.L372:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0,0,0,0,0
.L373:
	.byte	5,45,7,0,5,2
	.word	.L39
	.byte	3,170,1,1,5,58,9
	.half	.L374-.L39
	.byte	1,5,1,9
	.half	.L106-.L374
	.byte	3,1,0,1,1
.L371:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_Timer_stop')
	.sect	'.debug_ranges'
.L105:
	.word	-1,.L39,0,.L106-.L39,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_Timer_updateInputFrequency')
	.sect	'.debug_info'
.L107:
	.word	365
	.half	3
	.word	.L108
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L110,.L109
	.byte	2
	.word	.L48
	.byte	3
	.byte	'IfxStm_Timer_updateInputFrequency',0,1,175,1,6,1,1,1
	.word	.L41,.L198,.L40
	.byte	4
	.byte	'driver',0,1,175,1,54
	.word	.L129,.L199
	.byte	5
	.word	.L41,.L198
	.byte	6
	.word	.L200,.L201,.L202
	.byte	7
	.word	.L203,.L204
	.byte	8
	.word	.L205,.L206
	.byte	9
	.word	.L209,.L201,.L202
	.byte	6
	.word	.L210,.L201,.L202
	.byte	10
	.word	.L211,.L212
	.byte	0,0,0,0,6
	.word	.L200,.L207,.L208
	.byte	7
	.word	.L203,.L204
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_Timer_updateInputFrequency')
	.sect	'.debug_abbrev'
.L108:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,85,6,0,0,9,11,1,49,16,17,1,18,1,0,0,10,11,0,49,16,85
	.byte	6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_Timer_updateInputFrequency')
	.sect	'.debug_line'
.L109:
	.word	.L376-.L375
.L375:
	.half	3
	.word	.L378-.L377
.L377:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0,0,0,0
	.byte	'IfxScuCcu.h',0,1,0,0,0
.L378:
	.byte	5,6,7,0,5,2
	.word	.L41
	.byte	3,174,1,1,4,2,5,40,9
	.half	.L201-.L41
	.byte	3,181,7,1,5,58,9
	.half	.L379-.L201
	.byte	1,4,1,5,42,9
	.half	.L202-.L379
	.byte	3,207,120,1,5,53,1,5,44,9
	.half	.L266-.L202
	.byte	1,5,39,9
	.half	.L207-.L266
	.byte	1,5,28,1,5,1,9
	.half	.L208-.L207
	.byte	3,1,1,7,9
	.half	.L111-.L208
	.byte	0,1,1
.L376:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_Timer_updateInputFrequency')
	.sect	'.debug_ranges'
.L110:
	.word	-1,.L41,0,.L111-.L41,0,0
.L206:
	.word	-1,.L41,.L201-.L41,.L202-.L41,.L207-.L41,.L208-.L41,0,0
.L212:
	.word	-1,.L41,.L201-.L41,.L202-.L41,-1,.L43,0,.L126-.L43,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_Timer_init')
	.sect	'.debug_info'
.L112:
	.word	569
	.half	3
	.word	.L113
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L115,.L114
	.byte	2
	.word	.L48
	.byte	3
	.byte	'IfxStm_Timer_init',0,1,183,1,9
	.word	.L127
	.byte	1,1,1
	.word	.L45,.L213,.L44
	.byte	4
	.byte	'driver',0,1,183,1,41
	.word	.L129,.L214
	.byte	4
	.byte	'config',0,1,183,1,76
	.word	.L215,.L216
	.byte	5
	.word	.L45,.L213
	.byte	6
	.byte	'result',0,1,185,1,24
	.word	.L127,.L217
	.byte	6
	.byte	'base',0,1,186,1,24
	.word	.L218,.L219
	.byte	7
	.word	.L200,.L220,.L221
	.byte	8
	.word	.L203,.L222
	.byte	9
	.word	.L205,.L223
	.byte	10
	.word	.L209,.L220,.L221
	.byte	7
	.word	.L210,.L220,.L221
	.byte	11
	.word	.L211,.L220,.L221
	.byte	0,0,0,0,7
	.word	.L200,.L224,.L225
	.byte	8
	.word	.L203,.L222
	.byte	0,5
	.word	.L226,.L16
	.byte	6
	.byte	'src',0,1,233,1,32
	.word	.L227,.L228
	.byte	7
	.word	.L229,.L230,.L231
	.byte	8
	.word	.L232,.L233
	.byte	8
	.word	.L234,.L235
	.byte	8
	.word	.L236,.L237
	.byte	10
	.word	.L238,.L230,.L231
	.byte	7
	.word	.L239,.L240,.L231
	.byte	8
	.word	.L241,.L242
	.byte	11
	.word	.L243,.L240,.L231
	.byte	0,0,0,7
	.word	.L244,.L231,.L16
	.byte	8
	.word	.L245,.L246
	.byte	11
	.word	.L247,.L231,.L16
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_Timer_init')
	.sect	'.debug_abbrev'
.L113:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,85
	.byte	6,0,0,10,11,1,49,16,17,1,18,1,0,0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_Timer_init')
	.sect	'.debug_line'
.L114:
	.word	.L381-.L380
.L380:
	.half	3
	.word	.L383-.L382
.L382:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0,0,0,0
	.byte	'IfxScuCcu.h',0,1,0,0
	.byte	'IfxSrc.h',0,2,0,0,0
.L383:
	.byte	5,9,7,0,5,2
	.word	.L45
	.byte	3,182,1,1,5,34,9
	.half	.L268-.L45
	.byte	3,7,1,5,26,9
	.half	.L384-.L268
	.byte	1,5,31,9
	.half	.L385-.L384
	.byte	3,123,1,5,34,9
	.half	.L269-.L385
	.byte	3,6,1,5,26,9
	.half	.L386-.L269
	.byte	1,5,48,9
	.half	.L387-.L386
	.byte	3,2,1,5,26,9
	.half	.L388-.L387
	.byte	1,5,28,9
	.half	.L389-.L388
	.byte	3,1,1,5,26,1,4,2,5,40,9
	.half	.L220-.L389
	.byte	3,162,7,1,5,58,9
	.half	.L390-.L220
	.byte	1,4,1,5,63,9
	.half	.L221-.L390
	.byte	3,231,120,1,5,39,9
	.half	.L391-.L221
	.byte	3,7,1,5,78,9
	.half	.L224-.L391
	.byte	3,121,1,5,42,9
	.half	.L225-.L224
	.byte	1,5,41,9
	.half	.L392-.L225
	.byte	1,5,34,9
	.half	.L393-.L392
	.byte	1,5,32,9
	.half	.L394-.L393
	.byte	3,4,1,5,46,3,3,1,5,39,9
	.half	.L395-.L394
	.byte	1,5,22,9
	.half	.L270-.L395
	.byte	3,2,1,5,39,9
	.half	.L396-.L270
	.byte	1,5,37,9
	.half	.L397-.L396
	.byte	1,5,9,9
	.half	.L398-.L397
	.byte	1,5,47,7,9
	.half	.L399-.L398
	.byte	1,5,57,1,5,51,9
	.half	.L400-.L399
	.byte	1,5,70,9
	.half	.L401-.L400
	.byte	1,5,16,9
	.half	.L402-.L401
	.byte	3,2,1,5,51,9
	.half	.L14-.L402
	.byte	3,6,1,5,15,9
	.half	.L272-.L14
	.byte	3,5,1,5,9,9
	.half	.L403-.L272
	.byte	3,127,1,5,36,3,126,1,5,15,9
	.half	.L404-.L403
	.byte	3,3,1,5,40,3,126,1,5,51,9
	.half	.L405-.L404
	.byte	3,2,1,5,21,9
	.half	.L406-.L405
	.byte	3,3,1,5,5,9
	.half	.L407-.L406
	.byte	1,5,39,7,9
	.half	.L408-.L407
	.byte	3,3,1,5,52,9
	.half	.L409-.L408
	.byte	1,5,42,9
	.half	.L226-.L409
	.byte	3,3,1,5,55,9
	.half	.L410-.L226
	.byte	1,5,38,9
	.half	.L273-.L410
	.byte	3,1,1,5,64,9
	.half	.L230-.L273
	.byte	1,4,3,5,17,9
	.half	.L411-.L230
	.byte	3,41,1,5,11,9
	.half	.L412-.L411
	.byte	3,1,1,5,17,9
	.half	.L413-.L412
	.byte	1,5,11,9
	.half	.L240-.L413
	.byte	3,103,1,5,17,9
	.half	.L414-.L240
	.byte	1,5,11,9
	.half	.L231-.L414
	.byte	3,18,1,5,16,9
	.half	.L415-.L231
	.byte	1,4,1,5,5,9
	.half	.L16-.L415
	.byte	3,97,1,5,1,3,1,1,7,9
	.half	.L116-.L16
	.byte	0,1,1
.L381:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_Timer_init')
	.sect	'.debug_ranges'
.L115:
	.word	-1,.L45,0,.L116-.L45,0,0
.L223:
	.word	-1,.L45,.L220-.L45,.L221-.L45,.L224-.L45,.L225-.L45,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_Timer_initConfig')
	.sect	'.debug_info'
.L117:
	.word	278
	.half	3
	.word	.L118
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L120,.L119
	.byte	2
	.word	.L48
	.byte	3
	.byte	'IfxStm_Timer_initConfig',0,1,243,1,6,1,1,1
	.word	.L47,.L248,.L46
	.byte	4
	.byte	'config',0,1,243,1,51
	.word	.L249,.L250
	.byte	4
	.byte	'stm',0,1,243,1,68
	.word	.L251,.L252
	.byte	5
	.word	.L47,.L248
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_Timer_initConfig')
	.sect	'.debug_abbrev'
.L118:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_Timer_initConfig')
	.sect	'.debug_line'
.L119:
	.word	.L417-.L416
.L416:
	.half	3
	.word	.L419-.L418
.L418:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0,0,0,0,0
.L419:
	.byte	5,6,7,0,5,2
	.word	.L47
	.byte	3,242,1,1,5,38,9
	.half	.L276-.L47
	.byte	3,2,1,5,24,9
	.half	.L274-.L276
	.byte	3,1,1,5,26,9
	.half	.L420-.L274
	.byte	3,1,1,5,24,1,5,1,9
	.half	.L421-.L420
	.byte	3,1,1,7,9
	.half	.L121-.L421
	.byte	0,1,1
.L417:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_Timer_initConfig')
	.sect	'.debug_ranges'
.L120:
	.word	-1,.L47,0,.L121-.L47,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L122:
	.word	216
	.half	3
	.word	.L123
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L125,.L124
	.byte	2
	.word	.L48
	.byte	3
	.byte	'.cocofun_1',0,1,175,1,6,1
	.word	.L43,.L126,.L42
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L123:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L124:
	.word	.L423-.L422
.L422:
	.half	3
	.word	.L425-.L424
.L424:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer\\IfxStm_Timer.c',0,0,0,0
	.byte	'IfxScuCcu.h',0,1,0,0,0
.L425:
	.byte	4,2,5,58,7,0,5,2
	.word	.L43
	.byte	3,227,8,1,5,43,9
	.half	.L426-.L43
	.byte	1,9
	.half	.L126-.L426
	.byte	0,1,1,4,2,5,58,0,5,2
	.word	.L43
	.byte	3,227,8,1,5,43,9
	.half	.L426-.L43
	.byte	1,9
	.half	.L126-.L426
	.byte	0,1,1
.L423:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L125:
	.word	-1,.L43,0,.L126-.L43,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L42:
	.word	-1,.L43,0,.L126-.L43
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_Timer_acknowledgeTimerIrq')
	.sect	'.debug_loc'
.L18:
	.word	-1,.L19,0,.L128-.L19
	.half	2
	.byte	138,0
	.word	0,0
.L138:
	.word	0,0
.L130:
	.word	-1,.L19,0,.L253-.L19
	.half	1
	.byte	100
	.word	.L254-.L19,.L255-.L19
	.half	1
	.byte	111
	.word	.L3-.L19,.L2-.L19
	.half	1
	.byte	111
	.word	0,0
.L131:
	.word	-1,.L19,.L256-.L19,.L257-.L19
	.half	1
	.byte	82
	.word	.L258-.L19,.L128-.L19
	.half	1
	.byte	88
	.word	0,0
.L136:
	.word	0,0
.L140:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_Timer_getFrequency')
	.sect	'.debug_loc'
.L20:
	.word	-1,.L21,0,.L146-.L21
	.half	2
	.byte	138,0
	.word	0,0
.L147:
	.word	-1,.L21,0,.L146-.L21
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_Timer_getInputFrequency')
	.sect	'.debug_loc'
.L22:
	.word	-1,.L23,0,.L148-.L23
	.half	2
	.byte	138,0
	.word	0,0
.L149:
	.word	-1,.L23,0,.L148-.L23
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_Timer_getPeriod')
	.sect	'.debug_loc'
.L24:
	.word	-1,.L25,0,.L151-.L25
	.half	2
	.byte	138,0
	.word	0,0
.L152:
	.word	-1,.L25,0,.L151-.L25
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_Timer_getResolution')
	.sect	'.debug_loc'
.L26:
	.word	-1,.L27,0,.L153-.L27
	.half	2
	.byte	138,0
	.word	0,0
.L154:
	.word	-1,.L27,0,.L153-.L27
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_Timer_init')
	.sect	'.debug_loc'
.L44:
	.word	-1,.L45,0,.L213-.L45
	.half	2
	.byte	138,0
	.word	0,0
.L219:
	.word	0,0
.L216:
	.word	-1,.L45,0,.L221-.L45
	.half	1
	.byte	101
	.word	.L43-.L45,.L126-.L45
	.half	1
	.byte	108
	.word	.L267-.L45,.L213-.L45
	.half	1
	.byte	108
	.word	0,0
.L214:
	.word	-1,.L45,0,.L221-.L45
	.half	1
	.byte	100
	.word	.L43-.L45,.L126-.L45
	.half	1
	.byte	111
	.word	.L268-.L45,.L213-.L45
	.half	1
	.byte	111
	.word	.L224-.L45,.L270-.L45
	.half	1
	.byte	100
	.word	.L271-.L45,.L272-.L45
	.half	1
	.byte	100
	.word	0,0
.L237:
	.word	0,0
.L217:
	.word	-1,.L45,.L43-.L45,.L126-.L45
	.half	1
	.byte	88
	.word	.L269-.L45,.L213-.L45
	.half	1
	.byte	88
	.word	0,0
.L228:
	.word	-1,.L45,.L273-.L45,.L16-.L45
	.half	1
	.byte	98
	.word	0,0
.L242:
	.word	0,0
.L246:
	.word	0,0
.L233:
	.word	0,0
.L222:
	.word	0,0
.L235:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_Timer_initConfig')
	.sect	'.debug_loc'
.L46:
	.word	-1,.L47,0,.L248-.L47
	.half	2
	.byte	138,0
	.word	0,0
.L250:
	.word	-1,.L47,0,.L274-.L47
	.half	1
	.byte	100
	.word	.L275-.L47,.L248-.L47
	.half	1
	.byte	111
	.word	0,0
.L252:
	.word	-1,.L47,0,.L274-.L47
	.half	1
	.byte	101
	.word	.L276-.L47,.L248-.L47
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_Timer_run')
	.sect	'.debug_loc'
.L28:
	.word	-1,.L29,0,.L155-.L29
	.half	2
	.byte	138,0
	.word	0,0
.L181:
	.word	0,0
.L156:
	.word	-1,.L29,0,.L259-.L29
	.half	1
	.byte	100
	.word	.L158-.L29,.L155-.L29
	.half	1
	.byte	108
	.word	0,0
.L176:
	.word	0,0
.L165:
	.word	-1,.L29,.L260-.L29,.L261-.L29
	.half	1
	.byte	95
	.word	0,0
.L173:
	.word	0,0
.L170:
	.word	0,0
.L180:
	.word	0,0
.L182:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_Timer_setFrequency')
	.sect	'.debug_loc'
.L30:
	.word	-1,.L31,0,.L183-.L31
	.half	2
	.byte	138,0
	.word	0,0
.L184:
	.word	-1,.L31,0,.L183-.L31
	.half	1
	.byte	100
	.word	0,0
.L185:
	.word	-1,.L31,0,.L262-.L31
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_Timer_setPeriod')
	.sect	'.debug_loc'
.L32:
	.word	-1,.L33,0,.L186-.L33
	.half	2
	.byte	138,0
	.word	0,0
.L187:
	.word	-1,.L33,0,.L186-.L33
	.half	1
	.byte	100
	.word	0,0
.L188:
	.word	-1,.L33,0,.L186-.L33
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_Timer_setSingleMode')
	.sect	'.debug_loc'
.L34:
	.word	-1,.L35,0,.L189-.L35
	.half	2
	.byte	138,0
	.word	0,0
.L190:
	.word	-1,.L35,0,.L189-.L35
	.half	1
	.byte	100
	.word	0,0
.L191:
	.word	-1,.L35,0,.L189-.L35
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_Timer_stdIfTimerInit')
	.sect	'.debug_loc'
.L36:
	.word	-1,.L37,0,.L192-.L37
	.half	2
	.byte	138,0
	.word	0,0
.L195:
	.word	-1,.L37,0,.L263-.L37
	.half	1
	.byte	101
	.word	0,0
.L194:
	.word	-1,.L37,0,.L263-.L37
	.half	1
	.byte	100
	.word	.L264-.L37,.L192-.L37
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_Timer_stop')
	.sect	'.debug_loc'
.L38:
	.word	-1,.L39,0,.L196-.L39
	.half	2
	.byte	138,0
	.word	0,0
.L197:
	.word	-1,.L39,0,.L265-.L39
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_Timer_updateInputFrequency')
	.sect	'.debug_loc'
.L40:
	.word	-1,.L41,0,.L198-.L41
	.half	2
	.byte	138,0
	.word	0,0
.L199:
	.word	-1,.L41,0,.L202-.L41
	.half	1
	.byte	100
	.word	.L201-.L41,.L202-.L41
	.half	1
	.byte	111
	.word	.L43-.L41,.L126-.L41
	.half	1
	.byte	111
	.word	.L266-.L41,.L198-.L41
	.half	1
	.byte	111
	.word	0,0
.L204:
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L427:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxStm_Timer_acknowledgeTimerIrq')
	.sect	'.debug_frame'
	.word	12
	.word	.L427,.L19,.L128-.L19
	.sdecl	'.debug_frame',debug,cluster('IfxStm_Timer_getFrequency')
	.sect	'.debug_frame'
	.word	24
	.word	.L427,.L21,.L146-.L21
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxStm_Timer_getInputFrequency')
	.sect	'.debug_frame'
	.word	24
	.word	.L427,.L23,.L148-.L23
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxStm_Timer_getPeriod')
	.sect	'.debug_frame'
	.word	24
	.word	.L427,.L25,.L151-.L25
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxStm_Timer_getResolution')
	.sect	'.debug_frame'
	.word	24
	.word	.L427,.L27,.L153-.L27
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxStm_Timer_run')
	.sect	'.debug_frame'
	.word	12
	.word	.L427,.L29,.L155-.L29
	.sdecl	'.debug_frame',debug,cluster('IfxStm_Timer_setFrequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L427,.L31,.L183-.L31
	.sdecl	'.debug_frame',debug,cluster('IfxStm_Timer_setPeriod')
	.sect	'.debug_frame'
	.word	24
	.word	.L427,.L33,.L186-.L33
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxStm_Timer_setSingleMode')
	.sect	'.debug_frame'
	.word	24
	.word	.L427,.L35,.L189-.L35
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxStm_Timer_stdIfTimerInit')
	.sect	'.debug_frame'
	.word	12
	.word	.L427,.L37,.L192-.L37
	.sdecl	'.debug_frame',debug,cluster('IfxStm_Timer_stop')
	.sect	'.debug_frame'
	.word	12
	.word	.L427,.L39,.L196-.L39
	.sdecl	'.debug_frame',debug,cluster('IfxStm_Timer_updateInputFrequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L427,.L41,.L198-.L41
	.sdecl	'.debug_frame',debug,cluster('IfxStm_Timer_init')
	.sect	'.debug_frame'
	.word	12
	.word	.L427,.L45,.L213-.L45
	.sdecl	'.debug_frame',debug,cluster('IfxStm_Timer_initConfig')
	.sect	'.debug_frame'
	.word	12
	.word	.L427,.L47,.L248-.L47
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L428:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L428,.L43,.L126-.L43
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
